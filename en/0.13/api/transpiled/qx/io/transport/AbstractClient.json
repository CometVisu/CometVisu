{
  "className": "qx.io.transport.AbstractClient",
  "packageName": "qx.io.transport",
  "name": "AbstractClient",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 799
      },
      "end": {
        "line": 121,
        "column": 3,
        "index": 3840
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class provides a the base class for all clients that use the\n transport implementations in this namespace. Since the static method\n <code>registerTransport</code> cannot be inherited by subclasses, they mus proxy it\n by adding <code>registerTransport : qx.io.transport.AbstractClient.registerTransport</code>\n to their <code>statics</code> section.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "statics": {
    "registerTransport": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1335
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1964
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Register a transport class for use with uris that match the given\n regular expression. The client will use the transport which first\n matches, starting with the last added transport</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{RegExp} uriRegExp\n    A regular expression which the URI must match",
            "paramName": "uriRegExp",
            "description": "A regular expression which the URI must match",
            "type": "RegExp"
          },
          {
            "name": "@param",
            "body": "{qx.io.transport.ITransport}  transportClass\n    The qooxdoo class implementing the transport",
            "paramName": "transportClass",
            "description": "The qooxdoo class implementing the transport",
            "type": "qx.io.transport.ITransport"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "properties": {
    "transport": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 2035
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 2095
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The transport object</p>"
          }
        ]
      },
      "name": "transport",
      "propertyType": "new",
      "check": "qx.io.transport.ITransport"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "selectTransport": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2445
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3832
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Given a transport object implementing {@link qx.io.transport.ITransport}\n select that transport; if a string URI is passed, select one that has\n been registered for that class of URIs.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{qx.io.transport.ITransport|String} transportOrUri"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "qx.io.exception.Transport"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTransport": {
      "type": "function",
      "name": "getTransport",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>transport</code>.\n\nFor further details take a look at the property definition: {@link #transport}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.io.transport.ITransport",
            "desc": "Returns the value for transport"
          }
        ]
      }
    },
    "setTransport": {
      "type": "function",
      "name": "setTransport",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>transport</code>.\n\nFor further details take a look at the property definition: {@link #transport}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.io.transport.ITransport",
            "paramName": "value",
            "desc": "Value for transport"
          }
        ]
      }
    },
    "resetTransport": {
      "type": "function",
      "name": "resetTransport",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>transport</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #transport}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.io.graphql.Client",
    "qx.io.jsonrpc.Client"
  ]
}