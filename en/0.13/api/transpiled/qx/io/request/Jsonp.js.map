{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "request",
    "AbstractRequest",
    "events",
    "success",
    "load",
    "statusError",
    "properties",
    "cache",
    "check",
    "init",
    "members",
    "_createTransport",
    "bom",
    "Jsonp",
    "_getConfiguredUrl",
    "url",
    "getUrl",
    "serializedData",
    "getRequestData",
    "_serializeData",
    "util",
    "Uri",
    "appendParamsToUrl",
    "getCache",
    "nocache",
    "Date",
    "valueOf",
    "_getParsedResponse",
    "_transport",
    "responseJson",
    "setCallbackParam",
    "param",
    "setCallbackName",
    "name"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/request/Jsonp.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * Query JSONP services using the script element. Requests may be cross-origin.\n *\n * Configuration of the request is done with properties. Events are fired for\n * various states in the life cycle of a request, such as \"success\". Request\n * data is transparently processed.\n *\n * For an introduction to JSONP, please refer to\n * <a href=\"http://ajaxian.com/archives/jsonp-json-with-padding\">Ajaxian.com</a>.\n *\n * Here is how to request a JSON file from a REST service and listen to\n * the \"success\" event:\n *\n * <pre class=\"javascript\">\n * var req = new qx.io.request.Jsonp();\n * req.setUrl(\"http://feeds.delicious.com/v2/json/popular\");\n *\n * // Some services have a fixed callback name\n * // req.setCallbackName(\"callback\");\n *\n * req.addListener(\"success\", function(e) {\n *   var req = e.getTarget();\n *\n *   // HTTP status code indicating success, e.g. 200\n *   req.getStatus();\n *\n *   // \"success\"\n *   req.getPhase();\n *\n *   // JSON response\n *   req.getResponse();\n * }, this);\n *\n * // Send request\n * req.send();\n * </pre>\n *\n * Some noteable features:\n *\n * * Abstraction of low-level request\n * * Convenient setup using properties\n * * Fine-grained events\n * * Symbolic phases\n * * Transparent processing of request data\n * * Stream-lined authentication\n * * Flexible callback handling\n * * Cross-origin requests\n *\n * In order to debug requests, set the environment flag\n * <code>qx.debug.io</code>.\n *\n * Internally uses {@link qx.bom.request.Jsonp}.\n */\nqx.Class.define(\"qx.io.request.Jsonp\", {\n  extend: qx.io.request.AbstractRequest,\n\n  events: {\n    /**\n     * Fired when request completes without error and data has been received.\n     */\n    success: \"qx.event.type.Event\",\n\n    /**\n     * Fired when request completes without error.\n     *\n     * Every request receiving a response completes without error. This means\n     * that even for responses that do not call the callback, a \"load\" event\n     * is fired. If you are only interested in the JSON data received, consider\n     * listening to the {@link #success} event instead.\n     */\n    load: \"qx.event.type.Event\",\n\n    /**\n     * Fired when request completes without error but no data was received.\n     *\n     * The underlying script transport does not know the HTTP status of the\n     * response. However, if the callback was not called (no data received)\n     * an erroneous status (500) is assigned to the transport’s status\n     * property.\n     *\n     * Note: If you receive an unexpected \"statusError\", check that the JSONP\n     * service accepts arbitrary callback names given as the \"callback\"\n     * parameter. In case the service expects another parameter for the callback\n     * name, use {@link #setCallbackParam}. Should the service respond with a\n     * hard-coded callback, set a custom callback name with\n     * {@link #setCallbackName}.\n     */\n    statusError: \"qx.event.type.Event\"\n  },\n\n  properties: {\n    /**\n     * Whether to allow request to be answered from cache.\n     *\n     * Allowed values:\n     *\n     * * <code>true</code>: Allow caching (Default)\n     * * <code>false</code>: Prohibit caching. Appends nocache parameter to URL.\n     */\n    cache: {\n      check: \"Boolean\",\n      init: true\n    }\n  },\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      CONFIGURE TRANSPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Create JSONP transport.\n     *\n     * @return {qx.bom.request.Jsonp} Transport.\n     */\n    _createTransport() {\n      return new qx.bom.request.Jsonp();\n    },\n\n    /**\n     * Get configured URL.\n     *\n     * Append request data to URL. Also append random string\n     * to URL if required by value of {@link #cache}.\n     *\n     * @return {String} The configured URL.\n     */\n    _getConfiguredUrl() {\n      var url = this.getUrl(),\n        serializedData;\n\n      if (this.getRequestData()) {\n        serializedData = this._serializeData(this.getRequestData());\n        url = qx.util.Uri.appendParamsToUrl(url, serializedData);\n      }\n\n      if (!this.getCache()) {\n        // Make sure URL cannot be served from cache and new request is made\n        url = qx.util.Uri.appendParamsToUrl(url, {\n          nocache: new Date().valueOf()\n        });\n      }\n\n      return url;\n    },\n\n    /**\n     * Return the transport’s responseJson property.\n     *\n     * See {@link qx.bom.request.Jsonp}.\n     *\n     * @return {Object} The parsed response of the request.\n     */\n    _getParsedResponse() {\n      return this._transport.responseJson;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CALLBACK MANAGEMENT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set callback parameter.\n     *\n     * See {@link qx.bom.request.Jsonp#setCallbackParam}.\n     *\n     * @param param {String} Name of the callback parameter.\n     */\n    setCallbackParam(param) {\n      this._transport.setCallbackParam(param);\n    },\n\n    /**\n     * Set callback name.\n     *\n     * See {@link qx.bom.request.Jsonp#setCallbackName}.\n     *\n     * @param name {String} Name of the callback function.\n     */\n    setCallbackName(name) {\n      this._transport.setCallbackName(name);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,qBAAqB,EAAE;IACrCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,eAAe;IAErCC,MAAM,EAAE;MACN;AACJ;AACA;MACIC,OAAO,EAAE,qBAAqB;MAE9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,IAAI,EAAE,qBAAqB;MAE3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,WAAW,EAAE;IACf,CAAC;IAEDC,UAAU,EAAE;MACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KAAK,EAAE;QACLC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACR;IACF,CAAC;IAEDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACIC,gBAAgB,8BAAG;QACjB,OAAO,IAAInB,EAAE,CAACoB,GAAG,CAACZ,OAAO,CAACa,KAAK,EAAE;MACnC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,iBAAiB,+BAAG;QAClB,IAAIC,GAAG,GAAG,IAAI,CAACC,MAAM,EAAE;UACrBC,cAAc;QAEhB,IAAI,IAAI,CAACC,cAAc,EAAE,EAAE;UACzBD,cAAc,GAAG,IAAI,CAACE,cAAc,CAAC,IAAI,CAACD,cAAc,EAAE,CAAC;UAC3DH,GAAG,GAAGvB,EAAE,CAAC4B,IAAI,CAACC,GAAG,CAACC,iBAAiB,CAACP,GAAG,EAAEE,cAAc,CAAC;QAC1D;QAEA,IAAI,CAAC,IAAI,CAACM,QAAQ,EAAE,EAAE;UACpB;UACAR,GAAG,GAAGvB,EAAE,CAAC4B,IAAI,CAACC,GAAG,CAACC,iBAAiB,CAACP,GAAG,EAAE;YACvCS,OAAO,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO;UAC7B,CAAC,CAAC;QACJ;QAEA,OAAOX,GAAG;MACZ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIY,kBAAkB,gCAAG;QACnB,OAAO,IAAI,CAACC,UAAU,CAACC,YAAY;MACrC,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,gBAAgB,4BAACC,KAAK,EAAE;QACtB,IAAI,CAACH,UAAU,CAACE,gBAAgB,CAACC,KAAK,CAAC;MACzC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,eAAe,2BAACC,IAAI,EAAE;QACpB,IAAI,CAACL,UAAU,CAACI,eAAe,CAACC,IAAI,CAAC;MACvC;IACF;EACF,CAAC,CAAC;EA7MFzC,EAAE,CAACO,EAAE,CAACC,OAAO,CAACa,KAAK,CAAClB,aAAa,GAAGA,aAAa;AAAC"
}