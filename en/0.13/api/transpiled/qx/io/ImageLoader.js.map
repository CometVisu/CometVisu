{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__data",
    "__defaultSize",
    "width",
    "height",
    "__knownImageTypesRegExp",
    "__dataUrlRegExp",
    "isLoaded",
    "source",
    "entry",
    "loaded",
    "isFailed",
    "failed",
    "isLoading",
    "loading",
    "getFormat",
    "format",
    "result",
    "exec",
    "lang",
    "Type",
    "isNumber",
    "getSize",
    "getWidth",
    "getHeight",
    "load",
    "callback",
    "context",
    "window",
    "callbacks",
    "push",
    "call",
    "ResourceManager",
    "util",
    "getInstance",
    "isFontUri",
    "el",
    "document",
    "createElement",
    "charCode",
    "fromFontUriToCharCode",
    "value",
    "String",
    "fromCharCode",
    "element",
    "boundCallback",
    "Function",
    "listener",
    "__onload",
    "onload",
    "onerror",
    "src",
    "abort",
    "aborted",
    "i",
    "l",
    "length",
    "core",
    "Environment",
    "select",
    "event",
    "GlobalError",
    "observeMethod",
    "__onLoadHandler",
    "apply",
    "arguments",
    "bom",
    "client",
    "Engine",
    "getName",
    "parseFloat",
    "getVersion",
    "body",
    "appendChild",
    "isImageAvailable",
    "imgElem",
    "type",
    "removeChild",
    "dispose",
    "io",
    "ImageLoader"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/ImageLoader.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The ImageLoader can preload and manage loaded image resources. It easily\n * handles multiple requests and supports callbacks for successful and failed\n * requests.\n *\n * After loading of an image the dimension of the image is stored as long\n * as the application is running. This is quite useful for in-memory layouting.\n *\n * Use {@link #load} to preload your own images.\n */\nqx.Bootstrap.define(\"qx.io.ImageLoader\", {\n  statics: {\n    /** @type {Map} Internal data structure to cache image sizes */\n    __data: {},\n\n    /** @type {Map} Default image size */\n    __defaultSize: {\n      width: null,\n      height: null\n    },\n\n    /** @type {RegExp} Known image types */\n    __knownImageTypesRegExp: /\\.(png|gif|jpg|jpeg|bmp)\\b/i,\n\n    /** @type {RegExp} Image types of a data URL */\n    __dataUrlRegExp: /^data:image\\/(png|gif|jpg|jpeg|bmp)\\b/i,\n\n    /**\n     * Whether the given image has previously been loaded using the\n     * {@link #load} method.\n     *\n     * @param source {String} Image source to query\n     * @return {Boolean} <code>true</code> when the image is loaded\n     */\n    isLoaded(source) {\n      var entry = this.__data[source];\n      return !!(entry && entry.loaded);\n    },\n\n    /**\n     * Whether the given image has previously been requested using the\n     * {@link #load} method but failed.\n     *\n     * @param source {String} Image source to query\n     * @return {Boolean} <code>true</code> when the image loading failed\n     */\n    isFailed(source) {\n      var entry = this.__data[source];\n      return !!(entry && entry.failed);\n    },\n\n    /**\n     * Whether the given image is currently loading.\n     *\n     * @param source {String} Image source to query\n     * @return {Boolean} <code>true</code> when the image is loading in the moment.\n     */\n    isLoading(source) {\n      var entry = this.__data[source];\n      return !!(entry && entry.loading);\n    },\n\n    /**\n     * Returns the format of a previously loaded image\n     *\n     * @param source {String} Image source to query\n     * @return {String ? null} The format of the image or <code>null</code>\n     */\n    getFormat(source) {\n      var entry = this.__data[source];\n\n      if (!entry || !entry.format) {\n        var result = this.__dataUrlRegExp.exec(source);\n        if (result != null) {\n          // If width and height aren't defined, provide some defaults\n          var width =\n            entry && qx.lang.Type.isNumber(entry.width)\n              ? entry.width\n              : this.__defaultSize.width;\n\n          var height =\n            entry && qx.lang.Type.isNumber(entry.height)\n              ? entry.height\n              : this.__defaultSize.height;\n\n          entry = {\n            loaded: true,\n            format: result[1],\n            width: width,\n            height: height\n          };\n        }\n      }\n      return entry ? entry.format : null;\n    },\n\n    /**\n     * Returns the size of a previously loaded image\n     *\n     * @param source {String} Image source to query\n     * @return {Map} The dimension of the image (<code>width</code> and\n     *    <code>height</code> as key). If the image is not yet loaded, the\n     *    dimensions are given as <code>null</code> for width and height.\n     */\n    getSize(source) {\n      var entry = this.__data[source];\n      return entry\n        ? { width: entry.width, height: entry.height }\n        : this.__defaultSize;\n    },\n\n    /**\n     * Returns the image width\n     *\n     * @param source {String} Image source to query\n     * @return {Integer} The width or <code>null</code> when the image is not loaded\n     */\n    getWidth(source) {\n      var entry = this.__data[source];\n      return entry ? entry.width : null;\n    },\n\n    /**\n     * Returns the image height\n     *\n     * @param source {String} Image source to query\n     * @return {Integer} The height or <code>null</code> when the image is not loaded\n     */\n    getHeight(source) {\n      var entry = this.__data[source];\n      return entry ? entry.height : null;\n    },\n\n    /**\n     * Loads the given image. Supports a callback which is\n     * executed when the image is loaded.\n     *\n     * This method works asynchronous.\n     *\n     * @param source {String} Image source to load\n     * @param callback {Function?} Callback function to execute\n     *   The first parameter of the callback is the given source url, the\n     *   second parameter is the data entry which contains additional\n     *   information about the image.\n     * @param context {Object?} Context in which the given callback should be executed\n     */\n    load(source, callback, context) {\n      // Shorthand\n      var entry = this.__data[source];\n\n      if (!entry) {\n        entry = this.__data[source] = {};\n      }\n\n      // Normalize context\n      if (callback && !context) {\n        context = window;\n      }\n\n      // Already known image source\n      if (entry.loaded || entry.loading || entry.failed) {\n        if (callback) {\n          if (entry.loading) {\n            entry.callbacks.push(callback, context);\n          } else {\n            callback.call(context, source, entry);\n          }\n        }\n      } else {\n        // Updating entry\n        entry.loading = true;\n        entry.callbacks = [];\n\n        if (callback) {\n          entry.callbacks.push(callback, context);\n        }\n\n        var ResourceManager = qx.util.ResourceManager.getInstance();\n        if (ResourceManager.isFontUri(source)) {\n          var el = document.createElement(\"div\");\n          var charCode = ResourceManager.fromFontUriToCharCode(source);\n          el.value = String.fromCharCode(charCode);\n          entry.element = el;\n          return;\n        }\n\n        // Create image element\n        var el = document.createElement(\"img\");\n\n        // Create common callback routine\n        var boundCallback = qx.lang.Function.listener(\n          this.__onload,\n          this,\n          el,\n          source\n        );\n\n        // Assign callback to element\n        el.onload = boundCallback;\n        el.onerror = boundCallback;\n\n        // Start loading of image\n        el.src = source;\n\n        // save the element for aborting\n        entry.element = el;\n      }\n    },\n\n    /**\n     * Abort the loading for the given url.\n     *\n     * @param source {String} URL of the image to abort its loading.\n     */\n    abort(source) {\n      var entry = this.__data[source];\n\n      if (entry && !entry.loaded) {\n        entry.aborted = true;\n\n        var callbacks = entry.callbacks;\n        var element = entry.element;\n\n        // Cleanup listeners\n        element.onload = element.onerror = null;\n\n        // prevent further loading\n        element.src = \"\";\n\n        // Cleanup entry\n        delete entry.callbacks;\n        delete entry.element;\n        delete entry.loading;\n\n        for (var i = 0, l = callbacks.length; i < l; i += 2) {\n          callbacks[i].call(callbacks[i + 1], source, entry);\n        }\n      }\n\n      this.__data[source] = null;\n    },\n\n    /**\n     * Calls a method based on qx.globalErrorHandling\n     */\n    __onload() {\n      var callback = qx.core.Environment.select(\"qx.globalErrorHandling\", {\n        true: qx.event.GlobalError.observeMethod(this.__onLoadHandler),\n        false: this.__onLoadHandler\n      });\n\n      callback.apply(this, arguments);\n    },\n\n    /**\n     * Internal event listener for all load/error events.\n     *\n     * @signature function(event, element, source)\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element which represents the image\n     * @param source {String} The image source loaded\n     */\n    __onLoadHandler(event, element, source) {\n      // Shorthand\n      var entry = this.__data[source];\n\n      // [BUG #9149]: When loading a SVG IE11 won't have\n      // the width/height of the element set, unless\n      // it is inserted into the DOM.\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        parseFloat(qx.bom.client.Engine.getVersion()) === 11\n      ) {\n        document.body.appendChild(element);\n      }\n\n      var isImageAvailable = function (imgElem) {\n        return imgElem && imgElem.height !== 0;\n      };\n\n      // [BUG #7497]: IE11 doesn't properly emit an error event\n      // when loading fails so augment success check\n      if (event.type === \"load\" && isImageAvailable(element)) {\n        // Store dimensions\n        entry.loaded = true;\n        entry.width = element.width;\n        entry.height = element.height;\n\n        // try to determine the image format\n        var result = this.__knownImageTypesRegExp.exec(source);\n        if (result != null) {\n          entry.format = result[1];\n        }\n      } else {\n        entry.failed = true;\n      }\n\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        parseFloat(qx.bom.client.Engine.getVersion()) === 11\n      ) {\n        document.body.removeChild(element);\n      }\n\n      // Cleanup listeners\n      element.onload = element.onerror = null;\n\n      // Cache callbacks\n      var callbacks = entry.callbacks;\n\n      // Cleanup entry\n      delete entry.loading;\n      delete entry.callbacks;\n      delete entry.element;\n\n      // Execute callbacks\n      for (var i = 0, l = callbacks.length; i < l; i += 2) {\n        callbacks[i].call(callbacks[i + 1], source, entry);\n      }\n    },\n\n    /**\n     * Dispose stored images.\n     */\n    dispose() {\n      this.__data = {};\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}