{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__data",
    "__defaultSize",
    "width",
    "height",
    "__knownImageTypesRegExp",
    "__dataUrlRegExp",
    "isLoaded",
    "source",
    "entry",
    "loaded",
    "isFailed",
    "failed",
    "isLoading",
    "loading",
    "getFormat",
    "format",
    "result",
    "exec",
    "lang",
    "Type",
    "isNumber",
    "getSize",
    "getWidth",
    "getHeight",
    "load",
    "callback",
    "context",
    "window",
    "callbacks",
    "push",
    "call",
    "ResourceManager",
    "util",
    "getInstance",
    "isFontUri",
    "el",
    "document",
    "createElement",
    "charCode",
    "fromFontUriToCharCode",
    "value",
    "String",
    "fromCharCode",
    "element",
    "boundCallback",
    "Function",
    "listener",
    "__onload",
    "onload",
    "onerror",
    "src",
    "abort",
    "aborted",
    "i",
    "l",
    "length",
    "core",
    "Environment",
    "select",
    "event",
    "GlobalError",
    "observeMethod",
    "__onLoadHandler",
    "apply",
    "arguments",
    "bom",
    "client",
    "Engine",
    "getName",
    "parseFloat",
    "getVersion",
    "body",
    "appendChild",
    "isImageAvailable",
    "imgElem",
    "type",
    "removeChild",
    "dispose",
    "io",
    "ImageLoader"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/ImageLoader.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The ImageLoader can preload and manage loaded image resources. It easily\n * handles multiple requests and supports callbacks for successful and failed\n * requests.\n *\n * After loading of an image the dimension of the image is stored as long\n * as the application is running. This is quite useful for in-memory layouting.\n *\n * Use {@link #load} to preload your own images.\n */\nqx.Bootstrap.define(\"qx.io.ImageLoader\", {\n  statics: {\n    /** @type {Map} Internal data structure to cache image sizes */\n    __data: {},\n\n    /** @type {Map} Default image size */\n    __defaultSize: {\n      width: null,\n      height: null\n    },\n\n    /** @type {RegExp} Known image types */\n    __knownImageTypesRegExp: /\\.(png|gif|jpg|jpeg|bmp)\\b/i,\n\n    /** @type {RegExp} Image types of a data URL */\n    __dataUrlRegExp: /^data:image\\/(png|gif|jpg|jpeg|bmp)\\b/i,\n\n    /**\n     * Whether the given image has previously been loaded using the\n     * {@link #load} method.\n     *\n     * @param source {String} Image source to query\n     * @return {Boolean} <code>true</code> when the image is loaded\n     */\n    isLoaded(source) {\n      var entry = this.__data[source];\n      return !!(entry && entry.loaded);\n    },\n\n    /**\n     * Whether the given image has previously been requested using the\n     * {@link #load} method but failed.\n     *\n     * @param source {String} Image source to query\n     * @return {Boolean} <code>true</code> when the image loading failed\n     */\n    isFailed(source) {\n      var entry = this.__data[source];\n      return !!(entry && entry.failed);\n    },\n\n    /**\n     * Whether the given image is currently loading.\n     *\n     * @param source {String} Image source to query\n     * @return {Boolean} <code>true</code> when the image is loading in the moment.\n     */\n    isLoading(source) {\n      var entry = this.__data[source];\n      return !!(entry && entry.loading);\n    },\n\n    /**\n     * Returns the format of a previously loaded image\n     *\n     * @param source {String} Image source to query\n     * @return {String ? null} The format of the image or <code>null</code>\n     */\n    getFormat(source) {\n      var entry = this.__data[source];\n\n      if (!entry || !entry.format) {\n        var result = this.__dataUrlRegExp.exec(source);\n        if (result != null) {\n          // If width and height aren't defined, provide some defaults\n          var width =\n            entry && qx.lang.Type.isNumber(entry.width)\n              ? entry.width\n              : this.__defaultSize.width;\n\n          var height =\n            entry && qx.lang.Type.isNumber(entry.height)\n              ? entry.height\n              : this.__defaultSize.height;\n\n          entry = {\n            loaded: true,\n            format: result[1],\n            width: width,\n            height: height\n          };\n        }\n      }\n      return entry ? entry.format : null;\n    },\n\n    /**\n     * Returns the size of a previously loaded image\n     *\n     * @param source {String} Image source to query\n     * @return {Map} The dimension of the image (<code>width</code> and\n     *    <code>height</code> as key). If the image is not yet loaded, the\n     *    dimensions are given as <code>null</code> for width and height.\n     */\n    getSize(source) {\n      var entry = this.__data[source];\n      return entry\n        ? { width: entry.width, height: entry.height }\n        : this.__defaultSize;\n    },\n\n    /**\n     * Returns the image width\n     *\n     * @param source {String} Image source to query\n     * @return {Integer} The width or <code>null</code> when the image is not loaded\n     */\n    getWidth(source) {\n      var entry = this.__data[source];\n      return entry ? entry.width : null;\n    },\n\n    /**\n     * Returns the image height\n     *\n     * @param source {String} Image source to query\n     * @return {Integer} The height or <code>null</code> when the image is not loaded\n     */\n    getHeight(source) {\n      var entry = this.__data[source];\n      return entry ? entry.height : null;\n    },\n\n    /**\n     * Loads the given image. Supports a callback which is\n     * executed when the image is loaded.\n     *\n     * This method works asynchronous.\n     *\n     * @param source {String} Image source to load\n     * @param callback {Function?} Callback function to execute\n     *   The first parameter of the callback is the given source url, the\n     *   second parameter is the data entry which contains additional\n     *   information about the image.\n     * @param context {Object?} Context in which the given callback should be executed\n     */\n    load(source, callback, context) {\n      // Shorthand\n      var entry = this.__data[source];\n\n      if (!entry) {\n        entry = this.__data[source] = {};\n      }\n\n      // Normalize context\n      if (callback && !context) {\n        context = window;\n      }\n\n      // Already known image source\n      if (entry.loaded || entry.loading || entry.failed) {\n        if (callback) {\n          if (entry.loading) {\n            entry.callbacks.push(callback, context);\n          } else {\n            callback.call(context, source, entry);\n          }\n        }\n      } else {\n        // Updating entry\n        entry.loading = true;\n        entry.callbacks = [];\n\n        if (callback) {\n          entry.callbacks.push(callback, context);\n        }\n\n        var ResourceManager = qx.util.ResourceManager.getInstance();\n        if (ResourceManager.isFontUri(source)) {\n          var el = document.createElement(\"div\");\n          var charCode = ResourceManager.fromFontUriToCharCode(source);\n          el.value = String.fromCharCode(charCode);\n          entry.element = el;\n          return;\n        }\n\n        // Create image element\n        var el = document.createElement(\"img\");\n\n        // Create common callback routine\n        var boundCallback = qx.lang.Function.listener(\n          this.__onload,\n          this,\n          el,\n          source\n        );\n\n        // Assign callback to element\n        el.onload = boundCallback;\n        el.onerror = boundCallback;\n\n        // Start loading of image\n        el.src = source;\n\n        // save the element for aborting\n        entry.element = el;\n      }\n    },\n\n    /**\n     * Abort the loading for the given url.\n     *\n     * @param source {String} URL of the image to abort its loading.\n     */\n    abort(source) {\n      var entry = this.__data[source];\n\n      if (entry && !entry.loaded) {\n        entry.aborted = true;\n\n        var callbacks = entry.callbacks;\n        var element = entry.element;\n\n        // Cleanup listeners\n        element.onload = element.onerror = null;\n\n        // prevent further loading\n        element.src = \"\";\n\n        // Cleanup entry\n        delete entry.callbacks;\n        delete entry.element;\n        delete entry.loading;\n\n        for (var i = 0, l = callbacks.length; i < l; i += 2) {\n          callbacks[i].call(callbacks[i + 1], source, entry);\n        }\n      }\n\n      this.__data[source] = null;\n    },\n\n    /**\n     * Calls a method based on qx.globalErrorHandling\n     */\n    __onload() {\n      var callback = qx.core.Environment.select(\"qx.globalErrorHandling\", {\n        true: qx.event.GlobalError.observeMethod(this.__onLoadHandler),\n        false: this.__onLoadHandler\n      });\n\n      callback.apply(this, arguments);\n    },\n\n    /**\n     * Internal event listener for all load/error events.\n     *\n     * @signature function(event, element, source)\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element which represents the image\n     * @param source {String} The image source loaded\n     */\n    __onLoadHandler(event, element, source) {\n      // Shorthand\n      var entry = this.__data[source];\n\n      // [BUG #9149]: When loading a SVG IE11 won't have\n      // the width/height of the element set, unless\n      // it is inserted into the DOM.\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        parseFloat(qx.bom.client.Engine.getVersion()) === 11\n      ) {\n        document.body.appendChild(element);\n      }\n\n      var isImageAvailable = function (imgElem) {\n        return imgElem && imgElem.height !== 0;\n      };\n\n      // [BUG #7497]: IE11 doesn't properly emit an error event\n      // when loading fails so augment success check\n      if (event.type === \"load\" && isImageAvailable(element)) {\n        // Store dimensions\n        entry.loaded = true;\n        entry.width = element.width;\n        entry.height = element.height;\n\n        // try to determine the image format\n        var result = this.__knownImageTypesRegExp.exec(source);\n        if (result != null) {\n          entry.format = result[1];\n        }\n      } else {\n        entry.failed = true;\n      }\n\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        parseFloat(qx.bom.client.Engine.getVersion()) === 11\n      ) {\n        document.body.removeChild(element);\n      }\n\n      // Cleanup listeners\n      element.onload = element.onerror = null;\n\n      // Cache callbacks\n      var callbacks = entry.callbacks;\n\n      // Cleanup entry\n      delete entry.loading;\n      delete entry.callbacks;\n      delete entry.element;\n\n      // Execute callbacks\n      for (var i = 0, l = callbacks.length; i < l; i += 2) {\n        callbacks[i].call(callbacks[i + 1], source, entry);\n      }\n    },\n\n    /**\n     * Dispose stored images.\n     */\n    dispose() {\n      this.__data = {};\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}