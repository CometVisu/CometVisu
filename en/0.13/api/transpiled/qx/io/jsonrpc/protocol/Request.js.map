{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "jsonrpc",
    "protocol",
    "Notification",
    "statics",
    "__current_request_id",
    "getCurrentId",
    "Request",
    "resetId",
    "properties",
    "id",
    "check",
    "value",
    "lang",
    "Type",
    "isNumber",
    "parseInt",
    "construct",
    "method",
    "params",
    "constructor",
    "call",
    "undefined",
    "set",
    "__promise",
    "Promise",
    "members",
    "getPromise",
    "handleTransportException",
    "exception",
    "reject",
    "e",
    "warn"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/jsonrpc/protocol/Request.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n      2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * A JSON-RPC v2.0 request object\n *\n * @see https://www.jsonrpc.org/specification#request_object\n */\nqx.Class.define(\"qx.io.jsonrpc.protocol.Request\", {\n  extend: qx.io.jsonrpc.protocol.Notification,\n  statics: {\n    /**\n     * Static counter for all request ids\n     */\n    __current_request_id: 0,\n\n    getCurrentId() {\n      return qx.io.jsonrpc.protocol.Request.__current_request_id;\n    },\n\n    resetId() {\n      qx.io.jsonrpc.protocol.Request.__current_request_id = 0;\n    }\n  },\n\n  properties: {\n    /**\n     * The integer id of the request\n     */\n    id: {\n      check: value =>\n        qx.lang.Type.isNumber(value) && parseInt(value, 10) === value\n    }\n  },\n\n  /**\n   * JSON-RPC request constructor\n   * @param {String} method\n   * @param {Array|Object?} params\n   * @param {Number?} id\n   *    Optional integer id. If not provided, an auto-incremented id will be\n   *    used.\n   */\n  construct(method, params, id) {\n    super(method, params);\n    if (id === undefined) {\n      id = ++qx.io.jsonrpc.protocol.Request.__current_request_id;\n    }\n    this.set({ id });\n    this.__promise = new qx.Promise();\n  },\n\n  members: {\n    __promise: null,\n\n    /**\n     * Getter for promise which resolves with the result to the request\n     * @return {qx.Promise}\n     */\n    getPromise() {\n      return this.__promise;\n    },\n\n    /**\n     * Determines how an exception during transport is handled. Standard\n     * behavior is to reject the request's promise with that exception.\n     * Classes inheriting from this class might handle it differently, i.e.\n     * by allowing the transport to retry after a timeout occurred.\n     * @param {qx.io.exception.Transport} exception\n     */\n    handleTransportException(exception) {\n      try {\n        this.getPromise().reject(exception);\n      } catch (e) {\n        this.warn(\"Promise has already been rejected\");\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,gCAAgC,EAAE;IAChDC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,QAAQ,CAACC,YAAY;IAC3CC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,SAAoB,EAAE,CAAC;MAEvBC,YAAY,WAAAA,aAAA,EAAG;QACb,OAAOb,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,QAAQ,CAACK,OAAO,CAACF,SAAoB;MAC5D,CAAC;MAEDG,OAAO,WAAAA,QAAA,EAAG;QACRf,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,QAAQ,CAACK,OAAO,CAACF,SAAoB,GAAG,CAAC;MACzD;IACF,CAAC;IAEDI,UAAU,EAAE;MACV;AACJ;AACA;MACIC,EAAE,EAAE;QACFC,KAAK,EAAE,SAAAA,MAAAC,KAAK;UAAA,OACVnB,EAAE,CAACoB,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACH,KAAK,CAAC,IAAII,QAAQ,CAACJ,KAAK,EAAE,EAAE,CAAC,KAAKA,KAAK;QAAA;MACjE;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEK,SAAS,WAAAA,UAACC,MAAM,EAAEC,MAAM,EAAET,EAAE,EAAE;MAC5BjB,EAAA,CAAAO,EAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,YAAA,CAAAiB,WAAA,CAAAC,IAAA,OAAMH,MAAM,EAAEC,MAAM;MACpB,IAAIT,EAAE,KAAKY,SAAS,EAAE;QACpBZ,EAAE,GAAG,EAAEjB,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,QAAQ,CAACK,OAAO,CAACF,SAAoB;MAC5D;MACA,IAAI,CAACkB,GAAG,CAAC;QAAEb,EAAE,EAAFA;MAAG,CAAC,CAAC;MAChB,IAAI,CAACc,SAAS,GAAG,IAAI/B,EAAE,CAACgC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEDC,OAAO,EAAE;MACPF,SAAS,EAAE,IAAI;MAEf;AACJ;AACA;AACA;MACIG,UAAU,WAAAA,WAAA,EAAG;QACX,OAAO,IAAI,CAACH,SAAS;MACvB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACII,wBAAwB,WAAAA,yBAACC,SAAS,EAAE;QAClC,IAAI;UACF,IAAI,CAACF,UAAU,CAAC,CAAC,CAACG,MAAM,CAACD,SAAS,CAAC;QACrC,CAAC,CAAC,OAAOE,CAAC,EAAE;UACV,IAAI,CAACC,IAAI,CAAC,mCAAmC,CAAC;QAChD;MACF;IACF;EACF,CAAC,CAAC;EA7FFvC,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,QAAQ,CAACK,OAAO,CAACX,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}