{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "members",
    "parse",
    "message",
    "JSON",
    "e",
    "io",
    "exception",
    "Transport",
    "toString",
    "INVALID_JSON",
    "NO_DATA",
    "lang",
    "Type",
    "isArray",
    "batch",
    "jsonrpc",
    "protocol",
    "Batch",
    "forEach",
    "item",
    "add",
    "stringify",
    "id",
    "result",
    "method",
    "params",
    "error",
    "undefined",
    "Result",
    "Error",
    "code",
    "data",
    "Request",
    "Notification",
    "INVALID_MSG_DATA",
    "Parser"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/jsonrpc/protocol/Parser.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n      2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * The parser object has a parse() method, which takes a UTF-encoded string and\n * returns an instance of the correponding subclass of {@link qx.io.jsonrpc.protocol.Message} or\n * a {@link qx.io.jsonrpc.protocol.Batch} instance.\n */\nqx.Class.define(\"qx.io.jsonrpc.protocol.Parser\", {\n  extend: qx.core.Object,\n  members: {\n    /**\n     * Given an UTF-8 encoded string, return the corresponding message object,\n     * which is one of {@link qx.io.jsonrpc.protocol.Batch}, {@link qx.io.jsonrpc.protocol.Notification},\n     * {@link qx.io.jsonrpc.protocol.Request}, {@link qx.io.jsonrpc.protocol.Result}, or\n     * {@link qx.io.jsonrpc.protocol.Error}.\n     *\n     * @param {String} message\n     * @return {qx.io.jsonrpc.protocol.Message}\n     * @throws {qx.io.exception.Transport}\n     */\n    parse(message) {\n      try {\n        message = JSON.parse(message);\n      } catch (e) {\n        throw new qx.io.exception.Transport(\n          e.toString(),\n          qx.io.exception.Transport.INVALID_JSON,\n          { message }\n        );\n      }\n      if (message === null) {\n        throw new qx.io.exception.Transport(\n          \"No data\",\n          qx.io.exception.Transport.NO_DATA\n        );\n      }\n      // batch\n      if (qx.lang.Type.isArray(message)) {\n        const batch = new qx.io.jsonrpc.protocol.Batch();\n        message.forEach(item => batch.add(this.parse(JSON.stringify(item))));\n        return batch;\n      }\n      // individual message\n      let { id, result, method, params, error } = message;\n      if (\n        id !== undefined &&\n        result !== undefined &&\n        error === undefined &&\n        method === undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Result(id, result);\n      }\n      if (\n        id !== undefined &&\n        result === undefined &&\n        error !== undefined &&\n        method === undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Error(\n          id,\n          error.code,\n          error.message,\n          error.data\n        );\n      }\n      if (\n        id !== undefined &&\n        result === undefined &&\n        error === undefined &&\n        method !== undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Request(method, params, id);\n      }\n      if (\n        id === undefined &&\n        result === undefined &&\n        error === undefined &&\n        method !== undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Notification(method, params);\n      }\n      throw new qx.io.exception.Transport(\n        \"Cannot parse message data.\",\n        qx.io.exception.Transport.INVALID_MSG_DATA,\n        { message }\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,+BAAhB,EAAiD;IAC/CC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MAD+B;IAE/CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KAXO,iBAWDC,OAXC,EAWQ;QAAA;;QACb,IAAI;UACFA,OAAO,GAAGC,IAAI,CAACF,KAAL,CAAWC,OAAX,CAAV;QACD,CAFD,CAEE,OAAOE,CAAP,EAAU;UACV,MAAM,IAAIb,EAAE,CAACc,EAAH,CAAMC,SAAN,CAAgBC,SAApB,CACJH,CAAC,CAACI,QAAF,EADI,EAEJjB,EAAE,CAACc,EAAH,CAAMC,SAAN,CAAgBC,SAAhB,CAA0BE,YAFtB,EAGJ;YAAEP,OAAO,EAAPA;UAAF,CAHI,CAAN;QAKD;;QACD,IAAIA,OAAO,KAAK,IAAhB,EAAsB;UACpB,MAAM,IAAIX,EAAE,CAACc,EAAH,CAAMC,SAAN,CAAgBC,SAApB,CACJ,SADI,EAEJhB,EAAE,CAACc,EAAH,CAAMC,SAAN,CAAgBC,SAAhB,CAA0BG,OAFtB,CAAN;QAID,CAfY,CAgBb;;;QACA,IAAInB,EAAE,CAACoB,IAAH,CAAQC,IAAR,CAAaC,OAAb,CAAqBX,OAArB,CAAJ,EAAmC;UACjC,IAAMY,KAAK,GAAG,IAAIvB,EAAE,CAACc,EAAH,CAAMU,OAAN,CAAcC,QAAd,CAAuBC,KAA3B,EAAd;UACAf,OAAO,CAACgB,OAAR,CAAgB,UAAAC,IAAI;YAAA,OAAIL,KAAK,CAACM,GAAN,CAAU,KAAI,CAACnB,KAAL,CAAWE,IAAI,CAACkB,SAAL,CAAeF,IAAf,CAAX,CAAV,CAAJ;UAAA,CAApB;UACA,OAAOL,KAAP;QACD,CArBY,CAsBb;;;QACA,eAA4CZ,OAA5C;QAAA,IAAMoB,EAAN,YAAMA,EAAN;QAAA,IAAUC,MAAV,YAAUA,MAAV;QAAA,IAAkBC,MAAlB,YAAkBA,MAAlB;QAAA,IAA0BC,MAA1B,YAA0BA,MAA1B;QAAA,IAAkCC,KAAlC,YAAkCA,KAAlC;;QACA,IACEJ,EAAE,KAAKK,SAAP,IACAJ,MAAM,KAAKI,SADX,IAEAD,KAAK,KAAKC,SAFV,IAGAH,MAAM,KAAKG,SAJb,EAKE;UACA,OAAO,IAAIpC,EAAE,CAACc,EAAH,CAAMU,OAAN,CAAcC,QAAd,CAAuBY,MAA3B,CAAkCN,EAAlC,EAAsCC,MAAtC,CAAP;QACD;;QACD,IACED,EAAE,KAAKK,SAAP,IACAJ,MAAM,KAAKI,SADX,IAEAD,KAAK,KAAKC,SAFV,IAGAH,MAAM,KAAKG,SAJb,EAKE;UACA,OAAO,IAAIpC,EAAE,CAACc,EAAH,CAAMU,OAAN,CAAcC,QAAd,CAAuBa,KAA3B,CACLP,EADK,EAELI,KAAK,CAACI,IAFD,EAGLJ,KAAK,CAACxB,OAHD,EAILwB,KAAK,CAACK,IAJD,CAAP;QAMD;;QACD,IACET,EAAE,KAAKK,SAAP,IACAJ,MAAM,KAAKI,SADX,IAEAD,KAAK,KAAKC,SAFV,IAGAH,MAAM,KAAKG,SAJb,EAKE;UACA,OAAO,IAAIpC,EAAE,CAACc,EAAH,CAAMU,OAAN,CAAcC,QAAd,CAAuBgB,OAA3B,CAAmCR,MAAnC,EAA2CC,MAA3C,EAAmDH,EAAnD,CAAP;QACD;;QACD,IACEA,EAAE,KAAKK,SAAP,IACAJ,MAAM,KAAKI,SADX,IAEAD,KAAK,KAAKC,SAFV,IAGAH,MAAM,KAAKG,SAJb,EAKE;UACA,OAAO,IAAIpC,EAAE,CAACc,EAAH,CAAMU,OAAN,CAAcC,QAAd,CAAuBiB,YAA3B,CAAwCT,MAAxC,EAAgDC,MAAhD,CAAP;QACD;;QACD,MAAM,IAAIlC,EAAE,CAACc,EAAH,CAAMC,SAAN,CAAgBC,SAApB,CACJ,4BADI,EAEJhB,EAAE,CAACc,EAAH,CAAMC,SAAN,CAAgBC,SAAhB,CAA0B2B,gBAFtB,EAGJ;UAAEhC,OAAO,EAAPA;QAAF,CAHI,CAAN;MAKD;IA7EM;EAFsC,CAAjD;EAvBAX,EAAE,CAACc,EAAH,CAAMU,OAAN,CAAcC,QAAd,CAAuBmB,MAAvB,CAA8BzC,aAA9B,GAA8CA,aAA9C"
}