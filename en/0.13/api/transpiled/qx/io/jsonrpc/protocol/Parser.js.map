{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "members",
    "parse",
    "message",
    "_this",
    "JSON",
    "e",
    "io",
    "exception",
    "Transport",
    "toString",
    "INVALID_JSON",
    "NO_DATA",
    "lang",
    "Type",
    "isArray",
    "batch",
    "jsonrpc",
    "protocol",
    "Batch",
    "forEach",
    "item",
    "add",
    "stringify",
    "_message",
    "id",
    "result",
    "method",
    "params",
    "error",
    "undefined",
    "Result",
    "Error",
    "code",
    "data",
    "Request",
    "Notification",
    "INVALID_MSG_DATA",
    "Parser"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/jsonrpc/protocol/Parser.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n      2020 Christian Boulanger\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christian Boulanger (cboulanger)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The parser object has a parse() method, which takes a UTF-encoded string and\r\n * returns an instance of the correponding subclass of {@link qx.io.jsonrpc.protocol.Message} or\r\n * a {@link qx.io.jsonrpc.protocol.Batch} instance.\r\n */\r\nqx.Class.define(\"qx.io.jsonrpc.protocol.Parser\", {\r\n  extend: qx.core.Object,\r\n  members: {\r\n    /**\r\n     * Given an UTF-8 encoded string, return the corresponding message object,\r\n     * which is one of {@link qx.io.jsonrpc.protocol.Batch}, {@link qx.io.jsonrpc.protocol.Notification},\r\n     * {@link qx.io.jsonrpc.protocol.Request}, {@link qx.io.jsonrpc.protocol.Result}, or\r\n     * {@link qx.io.jsonrpc.protocol.Error}.\r\n     *\r\n     * @param {String} message\r\n     * @return {qx.io.jsonrpc.protocol.Message}\r\n     * @throws {qx.io.exception.Transport}\r\n     */\r\n    parse(message) {\r\n      try {\r\n        message = JSON.parse(message);\r\n      } catch (e) {\r\n        throw new qx.io.exception.Transport(\r\n          e.toString(),\r\n          qx.io.exception.Transport.INVALID_JSON,\r\n          { message }\r\n        );\r\n      }\r\n      if (message === null) {\r\n        throw new qx.io.exception.Transport(\r\n          \"No data\",\r\n          qx.io.exception.Transport.NO_DATA\r\n        );\r\n      }\r\n      // batch\r\n      if (qx.lang.Type.isArray(message)) {\r\n        const batch = new qx.io.jsonrpc.protocol.Batch();\r\n        message.forEach(item => batch.add(this.parse(JSON.stringify(item))));\r\n        return batch;\r\n      }\r\n      // individual message\r\n      let { id, result, method, params, error } = message;\r\n      if (\r\n        id !== undefined &&\r\n        result !== undefined &&\r\n        error === undefined &&\r\n        method === undefined\r\n      ) {\r\n        return new qx.io.jsonrpc.protocol.Result(id, result);\r\n      }\r\n      if (\r\n        id !== undefined &&\r\n        result === undefined &&\r\n        error !== undefined &&\r\n        method === undefined\r\n      ) {\r\n        return new qx.io.jsonrpc.protocol.Error(\r\n          id,\r\n          error.code,\r\n          error.message,\r\n          error.data\r\n        );\r\n      }\r\n      if (\r\n        id !== undefined &&\r\n        result === undefined &&\r\n        error === undefined &&\r\n        method !== undefined\r\n      ) {\r\n        return new qx.io.jsonrpc.protocol.Request(method, params, id);\r\n      }\r\n      if (\r\n        id === undefined &&\r\n        result === undefined &&\r\n        error === undefined &&\r\n        method !== undefined\r\n      ) {\r\n        return new qx.io.jsonrpc.protocol.Notification(method, params);\r\n      }\r\n      throw new qx.io.exception.Transport(\r\n        \"Cannot parse message data.\",\r\n        qx.io.exception.Transport.INVALID_MSG_DATA,\r\n        { message }\r\n      );\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}