{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "members",
    "parse",
    "message",
    "JSON",
    "e",
    "io",
    "exception",
    "Transport",
    "toString",
    "INVALID_JSON",
    "NO_DATA",
    "lang",
    "Type",
    "isArray",
    "batch",
    "jsonrpc",
    "protocol",
    "Batch",
    "forEach",
    "item",
    "add",
    "stringify",
    "id",
    "result",
    "method",
    "params",
    "error",
    "undefined",
    "Result",
    "Error",
    "code",
    "data",
    "Request",
    "Notification",
    "INVALID_MSG_DATA",
    "Parser"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/jsonrpc/protocol/Parser.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n      2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * The parser object has a parse() method, which takes a UTF-encoded string and\n * returns an instance of the correponding subclass of {@link qx.io.jsonrpc.protocol.Message} or\n * a {@link qx.io.jsonrpc.protocol.Batch} instance.\n */\nqx.Class.define(\"qx.io.jsonrpc.protocol.Parser\", {\n  extend: qx.core.Object,\n  members: {\n    /**\n     * Given an UTF-8 encoded string, return the corresponding message object,\n     * which is one of {@link qx.io.jsonrpc.protocol.Batch}, {@link qx.io.jsonrpc.protocol.Notification},\n     * {@link qx.io.jsonrpc.protocol.Request}, {@link qx.io.jsonrpc.protocol.Result}, or\n     * {@link qx.io.jsonrpc.protocol.Error}.\n     *\n     * @param {String} message\n     * @return {qx.io.jsonrpc.protocol.Message}\n     * @throws {qx.io.exception.Transport}\n     */\n    parse(message) {\n      try {\n        message = JSON.parse(message);\n      } catch (e) {\n        throw new qx.io.exception.Transport(\n          e.toString(),\n          qx.io.exception.Transport.INVALID_JSON,\n          { message }\n        );\n      }\n      if (message === null) {\n        throw new qx.io.exception.Transport(\n          \"No data\",\n          qx.io.exception.Transport.NO_DATA\n        );\n      }\n      // batch\n      if (qx.lang.Type.isArray(message)) {\n        const batch = new qx.io.jsonrpc.protocol.Batch();\n        message.forEach(item => batch.add(this.parse(JSON.stringify(item))));\n        return batch;\n      }\n      // individual message\n      let { id, result, method, params, error } = message;\n      if (\n        id !== undefined &&\n        result !== undefined &&\n        error === undefined &&\n        method === undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Result(id, result);\n      }\n      if (\n        id !== undefined &&\n        result === undefined &&\n        error !== undefined &&\n        method === undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Error(\n          id,\n          error.code,\n          error.message,\n          error.data\n        );\n      }\n      if (\n        id !== undefined &&\n        result === undefined &&\n        error === undefined &&\n        method !== undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Request(method, params, id);\n      }\n      if (\n        id === undefined &&\n        result === undefined &&\n        error === undefined &&\n        method !== undefined\n      ) {\n        return new qx.io.jsonrpc.protocol.Notification(method, params);\n      }\n      throw new qx.io.exception.Transport(\n        \"Cannot parse message data.\",\n        qx.io.exception.Transport.INVALID_MSG_DATA,\n        { message }\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}