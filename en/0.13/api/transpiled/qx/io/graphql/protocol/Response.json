{
  "className": "qx.io.graphql.protocol.Response",
  "packageName": "qx.io.graphql.protocol",
  "name": "Response",
  "superClass": "qx.io.graphql.protocol.Message",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 627
      },
      "end": {
        "line": 63,
        "column": 3,
        "index": 2348
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>An Object modelling a GraphQL response (see http://spec.graphql.org/draft/#sec-Response-Format)</p>"
        }
      ],
      "@experimental": [
        {
          "name": "@experimental",
          "body": "The API might change. Feedback is appreciated."
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "data": {
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1337
        },
        "end": {
          "line": 41,
          "column": 5,
          "index": 1412
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>\"The data entry in the response will be the result of the execution\n of the requested operation. If the operation was a query, this\n output will be an object of the schema’s query root type; if the\n operation was a mutation, this output will be an object of the\n schema’s mutation root type. If an error was encountered before\n execution begins, the data entry should not be present in the result.\n If an error was encountered during the execution that prevented\n a valid response, the data entry in the response should be null\"</p>"
          }
        ]
      },
      "name": "data",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Object"
    },
    "errors": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 2167
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 2340
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>\"The errors entry in the response is a non‐empty list of errors,\n where each error is a map. If no errors were encountered during\n the requested operation, the errors entry should not be present in\n the result. If the data entry in the response is not present, the\n errors entry in the response must not be empty. It must contain\n at least one error. The errors it contains should indicate why no\n data was able to be returned. If the data entry in the response is\n present (including if it is the value null), the errors entry in the\n response may contain any errors that occurred during execution. If\n errors occurred during execution, it should contain those errors.\"</p>"
          }
        ]
      },
      "name": "errors",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.graphql.protocol.Message",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.graphql.protocol.Message",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.graphql.protocol.Message",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.graphql.protocol.Message",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.graphql.protocol.Message",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.graphql.protocol.Message",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getData": {
      "type": "function",
      "name": "getData",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>data</code>.\n\nFor further details take a look at the property definition: {@link #data}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for data"
          }
        ]
      }
    },
    "setData": {
      "type": "function",
      "name": "setData",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>data</code>.\n\nFor further details take a look at the property definition: {@link #data}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for data"
          }
        ]
      }
    },
    "resetData": {
      "type": "function",
      "name": "resetData",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>data</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #data}."
          }
        ]
      }
    },
    "getErrors": {
      "type": "function",
      "name": "getErrors",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>errors</code>.\n\nFor further details take a look at the property definition: {@link #errors}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for errors"
          }
        ]
      }
    },
    "setErrors": {
      "type": "function",
      "name": "setErrors",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>errors</code>.\n\nFor further details take a look at the property definition: {@link #errors}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for errors"
          }
        ]
      }
    },
    "resetErrors": {
      "type": "function",
      "name": "resetErrors",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>errors</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #errors}."
          }
        ]
      }
    }
  },
  "descendants": []
}