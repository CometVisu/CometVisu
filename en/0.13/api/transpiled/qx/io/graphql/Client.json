{
  "className": "qx.io.graphql.Client",
  "packageName": "qx.io.graphql",
  "name": "Client",
  "superClass": "qx.io.transport.AbstractClient",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 898
      },
      "end": {
        "line": 122,
        "column": 3,
        "index": 4075
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class provides a simple GraphQl client (https://graphql.org/).\n For transport, it is based on internally on the fetch API\n (https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch)\n which, if needed, must be directly configured via the <code>init</code> parameter of the\n constructor, until a more generalized qx.io API has been developed.</p>"
        }
      ],
      "@experimental": [
        {
          "name": "@experimental",
          "body": "The API might change. Feedback is appreciated."
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "registerTransport": {
      "location": {
        "start": {
          "line": 31,
          "column": 4,
          "index": 1000
        },
        "end": {
          "line": 31,
          "column": 71,
          "index": 1067
        }
      },
      "type": "variable",
      "access": "public"
    }
  },
  "events": {
    "error": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1308
        },
        "end": {
          "line": 40,
          "column": 31,
          "index": 1335
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event fired when a request results in an error. Event data is an instance of\n {@link qx.io.exception.Transport}, {@link qx.io.exception.Protocol},\n or {@link qx.io.exception.Cancel}.</p>"
          }
        ]
      },
      "name": "error",
      "type": "qx.event.type.Data"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 49,
        "column": 2,
        "index": 1686
      },
      "end": {
        "line": 52,
        "column": 3,
        "index": 1772
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "{qx.io.transport.ITransport|String} transportOrUri\n    Transport object, which must implement {@link qx.io.transport.ITransport}\n    or a string URI, which will trigger auto-detection of transport, as long as an\n    appropriate transport has been registered with the static <code>registerTransport()</code> function.",
          "paramName": "transportOrUri",
          "description": "Transport object, which must implement {@link qx.io.transport.ITransport}\n    or a string URI, which will trigger auto-detection of transport, as long as an\n    appropriate transport has been registered with the static <code>registerTransport()</code> function.",
          "type": [
            "qx.io.transport.ITransport",
            "String"
          ]
        }
      ]
    }
  },
  "members": {
    "send": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 2038
        },
        "end": {
          "line": 88,
          "column": 5,
          "index": 3075
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Send the given GraphQl query. See https://graphql.org/learn/queries/</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{qx.io.graphql.protocol.Request} request The GraphQl request object.",
            "paramName": "request",
            "description": "The GraphQl request object.",
            "type": "qx.io.graphql.protocol.Request"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise} Promise that resolves with the data",
            "type": "qx.Promise",
            "description": " Promise that resolves with the data"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_handleErrors": {
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 3591
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 4011
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle the errors reported by the GraphQL endpoint. The response\n can contain several errors, but we can only throw one of them.\n However, we can fire an event for each error, which might be useful\n if they are to be logged. The errors that are thrown or fired as\n event data contain the original response object in the <code>data</code> property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{qx.io.graphql.protocol.Response} response The response object",
            "paramName": "response",
            "description": "The response object",
            "type": "qx.io.graphql.protocol.Response"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.exception.Protocol}",
            "type": "qx.io.exception.Protocol",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTransport": {
      "type": "function",
      "name": "getTransport",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>transport</code>.\n\nFor further details take a look at the property definition: {@link #transport}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.io.transport.ITransport",
            "desc": "Returns the value for transport"
          }
        ]
      }
    },
    "setTransport": {
      "type": "function",
      "name": "setTransport",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>transport</code>.\n\nFor further details take a look at the property definition: {@link #transport}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.io.transport.ITransport",
            "paramName": "value",
            "desc": "Value for transport"
          }
        ]
      }
    },
    "resetTransport": {
      "type": "function",
      "name": "resetTransport",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>transport</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #transport}."
          }
        ]
      }
    }
  },
  "descendants": []
}