{
  "className": "qx.io.part.Part",
  "packageName": "qx.io.part",
  "name": "Part",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 700
      },
      "end": {
        "line": 225,
        "column": 3,
        "index": 6447
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Wrapper for a part as defined in the config file. This class knows about all\n packages the part depends on and provides functionality to load the part.</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 978
      },
      "end": {
        "line": 45,
        "column": 3,
        "index": 1310
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "name {String} Name of the part as defined in the config file at\n    compile time.",
          "paramName": "name",
          "description": " Name of the part as defined in the config file at\n    compile time.",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "packages {qx.io.part.Package[]} List of dependent packages",
          "paramName": "packages",
          "description": " List of dependent packages",
          "type": "qx.io.part.Package[]"
        },
        {
          "name": "@param",
          "body": "loader {qx.Part} The loader of this part.",
          "paramName": "loader",
          "description": " The loader of this part.",
          "type": "qx.Part"
        }
      ]
    }
  },
  "members": {
    "_readyState": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1330
        },
        "end": {
          "line": 48,
          "column": 21,
          "index": 1347
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_loader": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1353
        },
        "end": {
          "line": 49,
          "column": 17,
          "index": 1366
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_packages": {
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1372
        },
        "end": {
          "line": 50,
          "column": 19,
          "index": 1387
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__name": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1393
        },
        "end": {
          "line": 51,
          "column": 16,
          "index": 1405
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getReadyState": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1828
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 1882
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the ready state of the part. The value is one of\n <ul>\n <li>\n   <b>initialized</b>: The part is initialized. The {@link #load}\n   method has not yet been called\n </li>\n <li><b>loading</b>: The part is still loading.</li>\n <li><b>complete</b>: The part has been loaded successfully</li>\n </li></p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The ready state.",
            "type": "String",
            "description": " The ready state."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getName": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2001
        },
        "end": {
          "line": 77,
          "column": 5,
          "index": 2044
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The part name as defined in the config file</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The part name",
            "type": "String",
            "description": " The part name"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPackages": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2203
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2253
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for testing purposes.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.part.Package[]} All contained packages in an array.",
            "type": "qx.io.part.Package[]",
            "description": " All contained packages in an array."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "preload": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2506
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2951
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method for preloading this part.\n Empty implementation! Regular parts can not be preloaded.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Callback for the preload.",
            "paramName": "callback",
            "description": " Callback for the preload.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "self {Object?} The context of the callback.",
            "paramName": "self",
            "description": " The context of the callback.",
            "optional": true,
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "load": {
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3344
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 4364
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loads the part asynchronously. The callback is called after the part and\n its dependencies are fully loaded. If the part is already loaded the\n callback is called immediately.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to execute on completion",
            "paramName": "callback",
            "description": " Function to execute on completion",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "self {Object?window} Context to execute the given function in",
            "paramName": "self",
            "description": " Context to execute the given function in",
            "optional": true,
            "defaultValue": "window",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_appendPartListener": {
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4678
        },
        "end": {
          "line": 174,
          "column": 5,
          "index": 4893
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for appending a listener for this part.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} The function to call when the part is loaded.",
            "paramName": "callback",
            "description": " The function to call when the part is loaded.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "self {Object?} The context of the callback.",
            "paramName": "self",
            "description": " The context of the callback.",
            "optional": true,
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "part {qx.io.part.Part|qx.io.part.ClosurePart} The part to listen\n   to.",
            "paramName": "part",
            "description": " The part to listen\n   to.",
            "type": [
              "qx.io.part.Part",
              "qx.io.part.ClosurePart"
            ]
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_markAsCompleted": {
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 5026
        },
        "end": {
          "line": 184,
          "column": 5,
          "index": 5142
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for marking the part as complete.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "readyState {String} The new ready state.",
            "paramName": "readyState",
            "description": " The new ready state.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_signalStartup": {
      "location": {
        "start": {
          "line": 190,
          "column": 4,
          "index": 5315
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 5494
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method used to start up the application in case not all parts\n necessary to initialize the application are in the boot part. [BUG #3793]</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_checkCompleteLoading": {
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5841
        },
        "end": {
          "line": 223,
          "column": 5,
          "index": 6439
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for checking if the part is loaded completely.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} The function to be called if the part has\n   been loaded completely.",
            "paramName": "callback",
            "description": " The function to be called if the part has\n   been loaded completely.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "self {Object} The context of the callback function.",
            "paramName": "self",
            "description": " The context of the callback function.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true, if the part is loading, complete or has an error.",
            "type": "Boolean",
            "description": " true, if the part is loading, complete or has an error."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    }
  },
  "descendants": [
    "qx.io.part.ClosurePart"
  ]
}