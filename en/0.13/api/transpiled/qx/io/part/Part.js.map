{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "construct",
    "name",
    "packages",
    "loader",
    "__name",
    "_readyState",
    "_packages",
    "_loader",
    "i",
    "length",
    "getReadyState",
    "members",
    "getName",
    "getPackages",
    "preload",
    "callback",
    "self",
    "window",
    "setTimeout",
    "call",
    "load",
    "_checkCompleteLoading",
    "_appendPartListener",
    "part",
    "onLoad",
    "pkg",
    "addPackageListener",
    "notifyPackageResult",
    "_markAsCompleted",
    "Error",
    "that",
    "addPartListener",
    "_signalStartup",
    "readyState",
    "notifyPartResult",
    "$$loader",
    "applicationHandlerReady",
    "signalStartup",
    "io",
    "Part"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/part/Part.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Wrapper for a part as defined in the config file. This class knows about all\n * packages the part depends on and provides functionality to load the part.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.io.part.Part\", {\n  /**\n   * @param name {String} Name of the part as defined in the config file at\n   *    compile time.\n   * @param packages {qx.io.part.Package[]} List of dependent packages\n   * @param loader {qx.Part} The loader of this part.\n   */\n  construct(name, packages, loader) {\n    this.__name = name;\n    this._readyState = \"complete\";\n    this._packages = packages;\n    this._loader = loader;\n\n    for (var i = 0; i < packages.length; i++) {\n      if (packages[i].getReadyState() !== \"complete\") {\n        this._readyState = \"initialized\";\n        break;\n      }\n    }\n  },\n\n  members: {\n    _readyState: null,\n    _loader: null,\n    _packages: null,\n    __name: null,\n\n    /**\n     * Get the ready state of the part. The value is one of\n     * <ul>\n     * <li>\n     *   <b>initialized</b>: The part is initialized. The {@link #load}\n     *   method has not yet been called\n     * </li>\n     * <li><b>loading</b>: The part is still loading.</li>\n     * <li><b>complete</b>: The part has been loaded successfully</li>\n     * </li>\n     *\n     * @return {String} The ready state.\n     */\n    getReadyState() {\n      return this._readyState;\n    },\n\n    /**\n     * The part name as defined in the config file\n     *\n     * @return {String} The part name\n     */\n    getName() {\n      return this.__name;\n    },\n\n    /**\n     * Internal helper for testing purposes.\n     * @internal\n     * @return {qx.io.part.Package[]} All contained packages in an array.\n     */\n    getPackages() {\n      return this._packages;\n    },\n\n    /**\n     * Method for preloading this part.\n     * Empty implementation! Regular parts can not be preloaded.\n     *\n     * @param callback {Function} Callback for the preload.\n     * @param self {Object?} The context of the callback.\n     */\n    preload(callback, self) {\n      // Just do nothing because you can not preload regular parts.\n      // Also, loading the part here is not a good idea because it could break\n      // the load order of the packages if someone uses preload right after\n      // loading another part. So we just invoke the callback async.\n      if (callback) {\n        window.setTimeout(function () {\n          callback.call(self, this);\n        }, 0);\n      }\n    },\n\n    /**\n     * Loads the part asynchronously. The callback is called after the part and\n     * its dependencies are fully loaded. If the part is already loaded the\n     * callback is called immediately.\n     *\n     * @internal\n     *\n     * @param callback {Function} Function to execute on completion\n     * @param self {Object?window} Context to execute the given function in\n     */\n    load(callback, self) {\n      if (this._checkCompleteLoading(callback, self)) {\n        return;\n      }\n\n      this._readyState = \"loading\";\n\n      if (callback) {\n        this._appendPartListener(callback, self, this);\n      }\n\n      var part = this;\n      var onLoad = function () {\n        part.load();\n      };\n\n      for (var i = 0; i < this._packages.length; i++) {\n        var pkg = this._packages[i];\n        switch (pkg.getReadyState()) {\n          case \"initialized\":\n            this._loader.addPackageListener(pkg, onLoad);\n            pkg.load(this._loader.notifyPackageResult, this._loader);\n            return;\n\n          case \"loading\":\n            this._loader.addPackageListener(pkg, onLoad);\n            return;\n\n          case \"complete\":\n            break;\n\n          case \"error\":\n            this._markAsCompleted(\"error\");\n            return;\n\n          default:\n            throw new Error(\"Invalid case! \" + pkg.getReadyState());\n        }\n      }\n\n      this._markAsCompleted(\"complete\");\n    },\n\n    /**\n     * Helper for appending a listener for this part.\n     *\n     * @param callback {Function} The function to call when the part is loaded.\n     * @param self {Object?} The context of the callback.\n     * @param part {qx.io.part.Part|qx.io.part.ClosurePart} The part to listen\n     *   to.\n     */\n    _appendPartListener(callback, self, part) {\n      var that = this;\n      this._loader.addPartListener(this, function () {\n        that._signalStartup();\n        callback.call(self, part._readyState);\n      });\n    },\n\n    /**\n     * Helper for marking the part as complete.\n     *\n     * @param readyState {String} The new ready state.\n     */\n    _markAsCompleted(readyState) {\n      this._readyState = readyState;\n      this._loader.notifyPartResult(this);\n    },\n\n    /**\n     * Method used to start up the application in case not all parts\n     * necessary to initialize the application are in the boot part. [BUG #3793]\n     */\n    _signalStartup() {\n      // signal the application startup if not already done\n      if (!qx.$$loader.applicationHandlerReady) {\n        qx.$$loader.signalStartup();\n      }\n    },\n\n    /**\n     * Helper for checking if the part is loaded completely.\n     *\n     * @param callback {Function} The function to be called if the part has\n     *   been loaded completely.\n     * @param self {Object} The context of the callback function.\n     * @return {Boolean} true, if the part is loading, complete or has an error.\n     */\n    _checkCompleteLoading(callback, self) {\n      // check if its already loaded\n      var readyState = this._readyState;\n      if (readyState == \"complete\" || readyState == \"error\") {\n        if (callback) {\n          var that = this;\n          setTimeout(function () {\n            that._signalStartup();\n            callback.call(self, readyState);\n          }, 0);\n        }\n        return true;\n      }\n      // add a listener if it is currently loading\n      else if (readyState == \"loading\" && callback) {\n        this._appendPartListener(callback, self, this);\n        return true;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}