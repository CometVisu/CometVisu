{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "remote",
    "transport",
    "Abstract",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "vUniqueId",
    "Date",
    "valueOf",
    "vFrameName",
    "vFormName",
    "vFrameSource",
    "Environment",
    "get",
    "__frame",
    "bom",
    "Iframe",
    "create",
    "id",
    "name",
    "src",
    "element",
    "Style",
    "set",
    "__form",
    "dom",
    "Element",
    "target",
    "insertEnd",
    "Node",
    "getBodyElement",
    "document",
    "__data",
    "event",
    "Registration",
    "addListener",
    "_onload",
    "__onreadystatechangeWrapper",
    "lang",
    "Function",
    "listener",
    "_onreadystatechange",
    "Event",
    "addNativeListener",
    "statics",
    "handles",
    "synchronous",
    "asynchronous",
    "crossDomain",
    "fileUpload",
    "programmaticFormFields",
    "responseTypes",
    "isSupported",
    "_numericMap",
    "uninitialized",
    "loading",
    "loaded",
    "interactive",
    "complete",
    "members",
    "__lastReadyState",
    "send",
    "vMethod",
    "getMethod",
    "vUrl",
    "getUrl",
    "vParameters",
    "getParameters",
    "vParametersList",
    "vId",
    "value",
    "Array",
    "i",
    "length",
    "push",
    "encodeURIComponent",
    "indexOf",
    "join",
    "getData",
    "setData",
    "vFormFields",
    "getFormFields",
    "vField",
    "createElement",
    "appendChild",
    "createTextNode",
    "action",
    "method",
    "submit",
    "setState",
    "GlobalError",
    "observeMethod",
    "e",
    "getIframeHtmlContent",
    "_switchReadyState",
    "readyState",
    "vReadyState",
    "getState",
    "warn",
    "Exchange",
    "_nativeMap",
    "setRequestHeader",
    "vLabel",
    "vValue",
    "getResponseHeader",
    "getResponseHeaders",
    "getStatusCode",
    "getStatusText",
    "getIframeWindow",
    "getWindow",
    "getIframeDocument",
    "getDocument",
    "getIframeBody",
    "getBody",
    "getIframeTextContent",
    "vBody",
    "firstChild",
    "tagName",
    "toLowerCase",
    "innerHTML",
    "getFetchedLength",
    "getResponseContent",
    "vText",
    "getResponseType",
    "Json",
    "parse",
    "ex",
    "error",
    "window",
    "eval",
    "defer",
    "registerType",
    "destruct",
    "removeListener",
    "removeNativeListener",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "remove"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_deprecated_qx_io_remote_v1_0_2/source/class/qx/io/remote/transport/Iframe.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Andreas Junghans (lucidcake)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n\n/**\n * Transports requests to a server using an IFRAME.\n *\n * This class should not be used directly by client programmers.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @asset(qx/static/blank.gif)\n */\nqx.Class.define(\"qx.io.remote.transport.Iframe\", {\n  extend: qx.io.remote.transport.Abstract,\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Unique identifiers for iframe and form\n    var vUniqueId = new Date().valueOf();\n    var vFrameName = \"frame_\" + vUniqueId;\n    var vFormName = \"form_\" + vUniqueId;\n\n    // This is to prevent the \"mixed secure and insecure content\" warning in IE with https\n    var vFrameSource;\n    if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n      /* eslint-disable-next-line no-script-url */\n      vFrameSource = \"javascript:void(0)\";\n    }\n\n    // Create a hidden iframe.\n    // The purpose of the iframe is to receive data coming back from the server (see below).\n    this.__frame = qx.bom.Iframe.create({\n      id: vFrameName,\n      name: vFrameName,\n      src: vFrameSource,\n    });\n\n    qx.bom.element.Style.set(this.__frame, \"display\", \"none\");\n\n    // Create form element with textarea as conduit for request data.\n    // The target of the form is the hidden iframe, which means the response\n    // coming back from the server is written into the iframe.\n    this.__form = qx.dom.Element.create(\"form\", {\n      id: vFormName,\n      name: vFormName,\n      target: vFrameName,\n    });\n    qx.bom.element.Style.set(this.__form, \"display\", \"none\");\n    qx.dom.Element.insertEnd(this.__form, qx.dom.Node.getBodyElement(document));\n\n    this.__data = qx.dom.Element.create(\"textarea\", {\n      id: \"_data_\",\n      name: \"_data_\",\n    });\n    qx.dom.Element.insertEnd(this.__data, this.__form);\n\n    // Finally, attach iframe to DOM and add listeners\n    qx.dom.Element.insertEnd(\n      this.__frame,\n      qx.dom.Node.getBodyElement(document)\n    );\n    qx.event.Registration.addListener(this.__frame, \"load\", this._onload, this);\n\n    // qx.event.handler.Iframe does not yet support the readystatechange event\n    this.__onreadystatechangeWrapper = qx.lang.Function.listener(\n      this._onreadystatechange,\n      this\n    );\n    qx.bom.Event.addNativeListener(\n      this.__frame,\n      \"readystatechange\",\n      this.__onreadystatechangeWrapper\n    );\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Capabilities of this transport type.\n     *\n     * @internal\n     */\n    handles: {\n      synchronous: false,\n      asynchronous: true,\n      crossDomain: false,\n      fileUpload: true,\n      programmaticFormFields: true,\n      responseTypes: [\n        \"text/plain\",\n        \"text/javascript\",\n        \"application/json\",\n        \"application/xml\",\n        \"text/html\",\n      ],\n    },\n\n    /**\n     * Returns always true, because iframe transport is supported by all browsers.\n     *\n     * @return {Boolean}\n     */\n    isSupported() {\n      return true;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * For reference:\n     * http://msdn.microsoft.com/en-us/library/ie/ms534359%28v=vs.85%29.aspx\n     *\n     * @internal\n     */\n    _numericMap: {\n      uninitialized: 1,\n      loading: 2,\n      loaded: 2,\n      interactive: 3,\n      complete: 4,\n    },\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __data: null,\n    __lastReadyState: 0,\n    __form: null,\n    __frame: null,\n    __onreadystatechangeWrapper: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sends a request with the use of a form.\n     *\n     */\n    send() {\n      var vMethod = this.getMethod();\n      var vUrl = this.getUrl();\n\n      // --------------------------------------\n      //   Adding parameters\n      // --------------------------------------\n      var vParameters = this.getParameters(false);\n      var vParametersList = [];\n\n      for (var vId in vParameters) {\n        var value = vParameters[vId];\n\n        if (value instanceof Array) {\n          for (var i = 0; i < value.length; i++) {\n            vParametersList.push(\n              encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i])\n            );\n          }\n        } else {\n          vParametersList.push(\n            encodeURIComponent(vId) + \"=\" + encodeURIComponent(value)\n          );\n        }\n      }\n\n      if (vParametersList.length > 0) {\n        vUrl +=\n          (vUrl.indexOf(\"?\") >= 0 ? \"&\" : \"?\") + vParametersList.join(\"&\");\n      }\n\n      // --------------------------------------------------------\n      //   Adding data parameters (if no data is already present)\n      // --------------------------------------------------------\n      if (this.getData() === null) {\n        var vParameters = this.getParameters(true);\n        var vParametersList = [];\n\n        for (var vId in vParameters) {\n          var value = vParameters[vId];\n\n          if (value instanceof Array) {\n            for (var i = 0; i < value.length; i++) {\n              vParametersList.push(\n                encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i])\n              );\n            }\n          } else {\n            vParametersList.push(\n              encodeURIComponent(vId) + \"=\" + encodeURIComponent(value)\n            );\n          }\n        }\n\n        if (vParametersList.length > 0) {\n          this.setData(vParametersList.join(\"&\"));\n        }\n      }\n\n      // --------------------------------------\n      //   Adding form fields\n      // --------------------------------------\n      var vFormFields = this.getFormFields();\n\n      for (var vId in vFormFields) {\n        var vField = document.createElement(\"textarea\");\n        vField.name = vId;\n        vField.appendChild(document.createTextNode(vFormFields[vId]));\n        this.__form.appendChild(vField);\n      }\n\n      // --------------------------------------\n      //   Preparing form\n      // --------------------------------------\n      this.__form.action = vUrl;\n      this.__form.method = vMethod;\n\n      // --------------------------------------\n      //   Sending data\n      // --------------------------------------\n      this.__data.appendChild(document.createTextNode(this.getData()));\n      this.__form.submit();\n      this.setState(\"sending\");\n    },\n\n    /**\n     * Converting complete state to numeric value and update state property\n     *\n     * @signature function(e)\n     * @param e {qx.event.type.Event} event object\n     */\n    _onload: qx.event.GlobalError.observeMethod(function (e) {\n      // Timing-issue in Opera\n      // Do not switch state to complete in case load event fires before content\n      // of iframe was updated\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"opera\" &&\n        this.getIframeHtmlContent() == \"\"\n      ) {\n        return;\n      }\n\n      if (this.__form.src) {\n        return;\n      }\n\n      this._switchReadyState(\n        qx.io.remote.transport.Iframe._numericMap.complete\n      );\n    }),\n\n    /**\n     * Converting named readyState to numeric value and update state property\n     *\n     * @signature function(e)\n     * @param e {qx.event.type.Event} event object\n     */\n    _onreadystatechange: qx.event.GlobalError.observeMethod(function (e) {\n      this._switchReadyState(\n        qx.io.remote.transport.Iframe._numericMap[this.__frame.readyState]\n      );\n    }),\n\n    /**\n     * Switches the readystate by setting the internal state.\n     *\n     * @param vReadyState {String} readystate value\n     */\n    _switchReadyState(vReadyState) {\n      // Ignoring already stopped requests\n      switch (this.getState()) {\n        case \"completed\":\n        case \"aborted\":\n        case \"failed\":\n        case \"timeout\":\n          this.warn(\"Ignore Ready State Change\");\n          return;\n      }\n\n      // Updating internal state\n      while (this.__lastReadyState < vReadyState) {\n        this.setState(\n          qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      REQUEST HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a request header with the given value.\n     *\n     * This method is not implemented at the moment.\n     *\n     * @param vLabel {String} request header name\n     * @param vValue {var} request header value\n     */\n    setRequestHeader(vLabel, vValue) {},\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the value of the given response header.\n     *\n     * This method is not implemented at the moment and returns always \"null\".\n     *\n     * @param vLabel {String} Response header name\n     * @return {null} Returns null\n     */\n    getResponseHeader(vLabel) {\n      return null;\n    },\n\n    /**\n     * Provides an hash of all response headers.\n     *\n     * This method is not implemented at the moment and returns an empty map.\n     *\n     * @return {Map} empty map\n     */\n    getResponseHeaders() {\n      return {};\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current status code of the request if available or -1 if not.\n     * This method needs implementation (returns always 200).\n     *\n     * @return {Integer} status code\n     */\n    getStatusCode() {\n      return 200;\n    },\n\n    /**\n     * Provides the status text for the current request if available and null otherwise.\n     * This method needs implementation (returns always an empty string)\n     *\n     * @return {String} status code text\n     */\n    getStatusText() {\n      return \"\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FRAME UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the DOM window object of the used iframe.\n     *\n     * @return {Object} DOM window object\n     */\n    getIframeWindow() {\n      return qx.bom.Iframe.getWindow(this.__frame);\n    },\n\n    /**\n     * Returns the document node of the used iframe.\n     *\n     * @return {Object} document node\n     */\n    getIframeDocument() {\n      return qx.bom.Iframe.getDocument(this.__frame);\n    },\n\n    /**\n     * Returns the body node of the used iframe.\n     *\n     * @return {Object} body node\n     */\n    getIframeBody() {\n      return qx.bom.Iframe.getBody(this.__frame);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE DATA SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the iframe content (innerHTML) as text.\n     *\n     * @return {String} iframe content as text\n     */\n    getIframeTextContent() {\n      var vBody = this.getIframeBody();\n\n      if (!vBody) {\n        return null;\n      }\n\n      if (!vBody.firstChild) {\n        return \"\";\n      }\n\n      // Mshtml returns the content inside a PRE\n      // element if we use plain text\n      if (\n        vBody.firstChild.tagName &&\n        vBody.firstChild.tagName.toLowerCase() == \"pre\"\n      ) {\n        return vBody.firstChild.innerHTML;\n      } else {\n        return vBody.innerHTML;\n      }\n    },\n\n    /**\n     * Returns the iframe content as HTML.\n     *\n     * @return {String} iframe content as HTML\n     */\n    getIframeHtmlContent() {\n      var vBody = this.getIframeBody();\n      return vBody ? vBody.innerHTML : null;\n    },\n\n    /**\n     * Returns the length of the content as fetched thus far.\n     * This method needs implementation (returns always 0).\n     *\n     * @return {Integer} Returns 0\n     */\n    getFetchedLength() {\n      return 0;\n    },\n\n    /**\n     * Returns the content of the response\n     *\n     * @return {null | String} null or text of the response (=iframe content).\n     */\n    getResponseContent() {\n      if (this.getState() !== \"completed\") {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n            this.warn(\"Transfer not complete, ignoring content!\");\n          }\n        }\n\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.debug(\n            \"Returning content for responseType: \" + this.getResponseType()\n          );\n        }\n      }\n\n      var vText = this.getIframeTextContent();\n\n      switch (this.getResponseType()) {\n        case \"text/plain\":\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        case \"text/html\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        case \"application/json\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n\n          try {\n            return vText && vText.length > 0 ? qx.lang.Json.parse(vText) : null;\n          } catch (ex) {\n            return this.error(\"Could not execute json: (\" + vText + \")\", ex);\n          }\n\n        case \"text/javascript\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n\n          try {\n            return vText && vText.length > 0 ? window.eval(vText) : null;\n          } catch (ex) {\n            return this.error(\n              \"Could not execute javascript: (\" + vText + \")\",\n              ex\n            );\n          }\n\n        case \"application/xml\":\n          vText = this.getIframeDocument();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        default:\n          this.warn(\n            \"No valid responseType specified (\" + this.getResponseType() + \")!\"\n          );\n          return null;\n      }\n    },\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer() {\n    // basic registration to qx.io.remote.Exchange\n    // the real availability check (activeX stuff and so on) follows at the first real request\n    qx.io.remote.Exchange.registerType(\n      qx.io.remote.transport.Iframe,\n      \"qx.io.remote.transport.Iframe\"\n    );\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.__frame) {\n      qx.event.Registration.removeListener(\n        this.__frame,\n        \"load\",\n        this._onload,\n        this\n      );\n      qx.bom.Event.removeNativeListener(\n        this.__frame,\n        \"readystatechange\",\n        this.__onreadystatechangeWrapper\n      );\n\n      // Reset source to a blank image for gecko\n      // Otherwise it will switch into a load-without-end behaviour\n      if (qx.core.Environment.get(\"engine.name\") == \"gecko\") {\n        this.__frame.src = qx.util.ResourceManager.getInstance().toUri(\n          \"qx/static/blank.gif\"\n        );\n      }\n\n      // Finally, remove element node\n      qx.dom.Element.remove(this.__frame);\n    }\n\n    if (this.__form) {\n      qx.dom.Element.remove(this.__form);\n    }\n\n    this.__frame = this.__form = this.__data = null;\n  },\n});\n"
  ],
  "mappings": "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"
}