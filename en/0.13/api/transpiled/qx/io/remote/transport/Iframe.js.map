{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "remote",
    "transport",
    "Abstract",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "constructor",
    "call",
    "vUniqueId",
    "Date",
    "valueOf",
    "vFrameName",
    "vFormName",
    "vFrameSource",
    "Environment",
    "get",
    "__frame",
    "bom",
    "Iframe",
    "create",
    "id",
    "name",
    "src",
    "element",
    "Style",
    "set",
    "__form",
    "dom",
    "Element",
    "target",
    "insertEnd",
    "Node",
    "getBodyElement",
    "document",
    "__data",
    "event",
    "Registration",
    "addListener",
    "_onload",
    "__onreadystatechangeWrapper",
    "lang",
    "Function",
    "listener",
    "_onreadystatechange",
    "Event",
    "addNativeListener",
    "statics",
    "handles",
    "synchronous",
    "asynchronous",
    "crossDomain",
    "fileUpload",
    "programmaticFormFields",
    "responseTypes",
    "isSupported",
    "_numericMap",
    "uninitialized",
    "loading",
    "loaded",
    "interactive",
    "complete",
    "members",
    "__lastReadyState",
    "send",
    "vMethod",
    "getMethod",
    "vUrl",
    "getUrl",
    "vParameters",
    "getParameters",
    "vParametersList",
    "vId",
    "value",
    "Array",
    "i",
    "length",
    "push",
    "encodeURIComponent",
    "indexOf",
    "join",
    "getData",
    "setData",
    "vFormFields",
    "getFormFields",
    "vField",
    "createElement",
    "appendChild",
    "createTextNode",
    "action",
    "method",
    "submit",
    "setState",
    "GlobalError",
    "observeMethod",
    "e",
    "getIframeHtmlContent",
    "_switchReadyState",
    "readyState",
    "vReadyState",
    "getState",
    "warn",
    "Exchange",
    "_nativeMap",
    "setRequestHeader",
    "vLabel",
    "vValue",
    "getResponseHeader",
    "getResponseHeaders",
    "getStatusCode",
    "getStatusText",
    "getIframeWindow",
    "getWindow",
    "getIframeDocument",
    "getDocument",
    "getIframeBody",
    "getBody",
    "getIframeTextContent",
    "vBody",
    "firstChild",
    "tagName",
    "toLowerCase",
    "innerHTML",
    "getFetchedLength",
    "getResponseContent",
    "vText",
    "getResponseType",
    "Json",
    "parse",
    "ex",
    "error",
    "window",
    "eval",
    "defer",
    "registerType",
    "destruct",
    "removeListener",
    "removeNativeListener",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "remove"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_deprecated_qx_io_remote_v1_0_2/source/class/qx/io/remote/transport/Iframe.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Andreas Junghans (lucidcake)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n\n/**\n * Transports requests to a server using an IFRAME.\n *\n * This class should not be used directly by client programmers.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @asset(qx/static/blank.gif)\n */\nqx.Class.define(\"qx.io.remote.transport.Iframe\", {\n  extend: qx.io.remote.transport.Abstract,\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Unique identifiers for iframe and form\n    var vUniqueId = new Date().valueOf();\n    var vFrameName = \"frame_\" + vUniqueId;\n    var vFormName = \"form_\" + vUniqueId;\n\n    // This is to prevent the \"mixed secure and insecure content\" warning in IE with https\n    var vFrameSource;\n    if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n      /* eslint-disable-next-line no-script-url */\n      vFrameSource = \"javascript:void(0)\";\n    }\n\n    // Create a hidden iframe.\n    // The purpose of the iframe is to receive data coming back from the server (see below).\n    this.__frame = qx.bom.Iframe.create({\n      id: vFrameName,\n      name: vFrameName,\n      src: vFrameSource,\n    });\n\n    qx.bom.element.Style.set(this.__frame, \"display\", \"none\");\n\n    // Create form element with textarea as conduit for request data.\n    // The target of the form is the hidden iframe, which means the response\n    // coming back from the server is written into the iframe.\n    this.__form = qx.dom.Element.create(\"form\", {\n      id: vFormName,\n      name: vFormName,\n      target: vFrameName,\n    });\n    qx.bom.element.Style.set(this.__form, \"display\", \"none\");\n    qx.dom.Element.insertEnd(this.__form, qx.dom.Node.getBodyElement(document));\n\n    this.__data = qx.dom.Element.create(\"textarea\", {\n      id: \"_data_\",\n      name: \"_data_\",\n    });\n    qx.dom.Element.insertEnd(this.__data, this.__form);\n\n    // Finally, attach iframe to DOM and add listeners\n    qx.dom.Element.insertEnd(\n      this.__frame,\n      qx.dom.Node.getBodyElement(document)\n    );\n    qx.event.Registration.addListener(this.__frame, \"load\", this._onload, this);\n\n    // qx.event.handler.Iframe does not yet support the readystatechange event\n    this.__onreadystatechangeWrapper = qx.lang.Function.listener(\n      this._onreadystatechange,\n      this\n    );\n    qx.bom.Event.addNativeListener(\n      this.__frame,\n      \"readystatechange\",\n      this.__onreadystatechangeWrapper\n    );\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Capabilities of this transport type.\n     *\n     * @internal\n     */\n    handles: {\n      synchronous: false,\n      asynchronous: true,\n      crossDomain: false,\n      fileUpload: true,\n      programmaticFormFields: true,\n      responseTypes: [\n        \"text/plain\",\n        \"text/javascript\",\n        \"application/json\",\n        \"application/xml\",\n        \"text/html\",\n      ],\n    },\n\n    /**\n     * Returns always true, because iframe transport is supported by all browsers.\n     *\n     * @return {Boolean}\n     */\n    isSupported() {\n      return true;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * For reference:\n     * http://msdn.microsoft.com/en-us/library/ie/ms534359%28v=vs.85%29.aspx\n     *\n     * @internal\n     */\n    _numericMap: {\n      uninitialized: 1,\n      loading: 2,\n      loaded: 2,\n      interactive: 3,\n      complete: 4,\n    },\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __data: null,\n    __lastReadyState: 0,\n    __form: null,\n    __frame: null,\n    __onreadystatechangeWrapper: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sends a request with the use of a form.\n     *\n     */\n    send() {\n      var vMethod = this.getMethod();\n      var vUrl = this.getUrl();\n\n      // --------------------------------------\n      //   Adding parameters\n      // --------------------------------------\n      var vParameters = this.getParameters(false);\n      var vParametersList = [];\n\n      for (var vId in vParameters) {\n        var value = vParameters[vId];\n\n        if (value instanceof Array) {\n          for (var i = 0; i < value.length; i++) {\n            vParametersList.push(\n              encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i])\n            );\n          }\n        } else {\n          vParametersList.push(\n            encodeURIComponent(vId) + \"=\" + encodeURIComponent(value)\n          );\n        }\n      }\n\n      if (vParametersList.length > 0) {\n        vUrl +=\n          (vUrl.indexOf(\"?\") >= 0 ? \"&\" : \"?\") + vParametersList.join(\"&\");\n      }\n\n      // --------------------------------------------------------\n      //   Adding data parameters (if no data is already present)\n      // --------------------------------------------------------\n      if (this.getData() === null) {\n        var vParameters = this.getParameters(true);\n        var vParametersList = [];\n\n        for (var vId in vParameters) {\n          var value = vParameters[vId];\n\n          if (value instanceof Array) {\n            for (var i = 0; i < value.length; i++) {\n              vParametersList.push(\n                encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i])\n              );\n            }\n          } else {\n            vParametersList.push(\n              encodeURIComponent(vId) + \"=\" + encodeURIComponent(value)\n            );\n          }\n        }\n\n        if (vParametersList.length > 0) {\n          this.setData(vParametersList.join(\"&\"));\n        }\n      }\n\n      // --------------------------------------\n      //   Adding form fields\n      // --------------------------------------\n      var vFormFields = this.getFormFields();\n\n      for (var vId in vFormFields) {\n        var vField = document.createElement(\"textarea\");\n        vField.name = vId;\n        vField.appendChild(document.createTextNode(vFormFields[vId]));\n        this.__form.appendChild(vField);\n      }\n\n      // --------------------------------------\n      //   Preparing form\n      // --------------------------------------\n      this.__form.action = vUrl;\n      this.__form.method = vMethod;\n\n      // --------------------------------------\n      //   Sending data\n      // --------------------------------------\n      this.__data.appendChild(document.createTextNode(this.getData()));\n      this.__form.submit();\n      this.setState(\"sending\");\n    },\n\n    /**\n     * Converting complete state to numeric value and update state property\n     *\n     * @signature function(e)\n     * @param e {qx.event.type.Event} event object\n     */\n    _onload: qx.event.GlobalError.observeMethod(function (e) {\n      // Timing-issue in Opera\n      // Do not switch state to complete in case load event fires before content\n      // of iframe was updated\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"opera\" &&\n        this.getIframeHtmlContent() == \"\"\n      ) {\n        return;\n      }\n\n      if (this.__form.src) {\n        return;\n      }\n\n      this._switchReadyState(\n        qx.io.remote.transport.Iframe._numericMap.complete\n      );\n    }),\n\n    /**\n     * Converting named readyState to numeric value and update state property\n     *\n     * @signature function(e)\n     * @param e {qx.event.type.Event} event object\n     */\n    _onreadystatechange: qx.event.GlobalError.observeMethod(function (e) {\n      this._switchReadyState(\n        qx.io.remote.transport.Iframe._numericMap[this.__frame.readyState]\n      );\n    }),\n\n    /**\n     * Switches the readystate by setting the internal state.\n     *\n     * @param vReadyState {String} readystate value\n     */\n    _switchReadyState(vReadyState) {\n      // Ignoring already stopped requests\n      switch (this.getState()) {\n        case \"completed\":\n        case \"aborted\":\n        case \"failed\":\n        case \"timeout\":\n          this.warn(\"Ignore Ready State Change\");\n          return;\n      }\n\n      // Updating internal state\n      while (this.__lastReadyState < vReadyState) {\n        this.setState(\n          qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      REQUEST HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a request header with the given value.\n     *\n     * This method is not implemented at the moment.\n     *\n     * @param vLabel {String} request header name\n     * @param vValue {var} request header value\n     */\n    setRequestHeader(vLabel, vValue) {},\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the value of the given response header.\n     *\n     * This method is not implemented at the moment and returns always \"null\".\n     *\n     * @param vLabel {String} Response header name\n     * @return {null} Returns null\n     */\n    getResponseHeader(vLabel) {\n      return null;\n    },\n\n    /**\n     * Provides an hash of all response headers.\n     *\n     * This method is not implemented at the moment and returns an empty map.\n     *\n     * @return {Map} empty map\n     */\n    getResponseHeaders() {\n      return {};\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current status code of the request if available or -1 if not.\n     * This method needs implementation (returns always 200).\n     *\n     * @return {Integer} status code\n     */\n    getStatusCode() {\n      return 200;\n    },\n\n    /**\n     * Provides the status text for the current request if available and null otherwise.\n     * This method needs implementation (returns always an empty string)\n     *\n     * @return {String} status code text\n     */\n    getStatusText() {\n      return \"\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FRAME UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the DOM window object of the used iframe.\n     *\n     * @return {Object} DOM window object\n     */\n    getIframeWindow() {\n      return qx.bom.Iframe.getWindow(this.__frame);\n    },\n\n    /**\n     * Returns the document node of the used iframe.\n     *\n     * @return {Object} document node\n     */\n    getIframeDocument() {\n      return qx.bom.Iframe.getDocument(this.__frame);\n    },\n\n    /**\n     * Returns the body node of the used iframe.\n     *\n     * @return {Object} body node\n     */\n    getIframeBody() {\n      return qx.bom.Iframe.getBody(this.__frame);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE DATA SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the iframe content (innerHTML) as text.\n     *\n     * @return {String} iframe content as text\n     */\n    getIframeTextContent() {\n      var vBody = this.getIframeBody();\n\n      if (!vBody) {\n        return null;\n      }\n\n      if (!vBody.firstChild) {\n        return \"\";\n      }\n\n      // Mshtml returns the content inside a PRE\n      // element if we use plain text\n      if (\n        vBody.firstChild.tagName &&\n        vBody.firstChild.tagName.toLowerCase() == \"pre\"\n      ) {\n        return vBody.firstChild.innerHTML;\n      } else {\n        return vBody.innerHTML;\n      }\n    },\n\n    /**\n     * Returns the iframe content as HTML.\n     *\n     * @return {String} iframe content as HTML\n     */\n    getIframeHtmlContent() {\n      var vBody = this.getIframeBody();\n      return vBody ? vBody.innerHTML : null;\n    },\n\n    /**\n     * Returns the length of the content as fetched thus far.\n     * This method needs implementation (returns always 0).\n     *\n     * @return {Integer} Returns 0\n     */\n    getFetchedLength() {\n      return 0;\n    },\n\n    /**\n     * Returns the content of the response\n     *\n     * @return {null | String} null or text of the response (=iframe content).\n     */\n    getResponseContent() {\n      if (this.getState() !== \"completed\") {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n            this.warn(\"Transfer not complete, ignoring content!\");\n          }\n        }\n\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.debug(\n            \"Returning content for responseType: \" + this.getResponseType()\n          );\n        }\n      }\n\n      var vText = this.getIframeTextContent();\n\n      switch (this.getResponseType()) {\n        case \"text/plain\":\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        case \"text/html\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        case \"application/json\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n\n          try {\n            return vText && vText.length > 0 ? qx.lang.Json.parse(vText) : null;\n          } catch (ex) {\n            return this.error(\"Could not execute json: (\" + vText + \")\", ex);\n          }\n\n        case \"text/javascript\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n\n          try {\n            return vText && vText.length > 0 ? window.eval(vText) : null;\n          } catch (ex) {\n            return this.error(\n              \"Could not execute javascript: (\" + vText + \")\",\n              ex\n            );\n          }\n\n        case \"application/xml\":\n          vText = this.getIframeDocument();\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        default:\n          this.warn(\n            \"No valid responseType specified (\" + this.getResponseType() + \")!\"\n          );\n          return null;\n      }\n    },\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer() {\n    // basic registration to qx.io.remote.Exchange\n    // the real availability check (activeX stuff and so on) follows at the first real request\n    qx.io.remote.Exchange.registerType(\n      qx.io.remote.transport.Iframe,\n      \"qx.io.remote.transport.Iframe\"\n    );\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.__frame) {\n      qx.event.Registration.removeListener(\n        this.__frame,\n        \"load\",\n        this._onload,\n        this\n      );\n      qx.bom.Event.removeNativeListener(\n        this.__frame,\n        \"readystatechange\",\n        this.__onreadystatechangeWrapper\n      );\n\n      // Reset source to a blank image for gecko\n      // Otherwise it will switch into a load-without-end behaviour\n      if (qx.core.Environment.get(\"engine.name\") == \"gecko\") {\n        this.__frame.src = qx.util.ResourceManager.getInstance().toUri(\n          \"qx/static/blank.gif\"\n        );\n      }\n\n      // Finally, remove element node\n      qx.dom.Element.remove(this.__frame);\n    }\n\n    if (this.__form) {\n      qx.dom.Element.remove(this.__form);\n    }\n\n    this.__frame = this.__form = this.__data = null;\n  },\n});\n"
  ],
  "mappings": "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"
}