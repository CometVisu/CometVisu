{
  "className": "qx.io.remote.Exchange",
  "packageName": "qx.io.remote",
  "name": "Exchange",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 34,
        "column": 0,
        "index": 916
      },
      "end": {
        "line": 1002,
        "column": 3,
        "index": 27498
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Transport layer to control which transport class (XmlHttp, Iframe or Script)\n can be used.\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ],
      "@use": [
        {
          "name": "@use",
          "body": "qx.io.remote.transport.Iframe"
        },
        {
          "name": "@use",
          "body": "qx.io.remote.transport.Script"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 49,
        "column": 2,
        "index": 1313
      },
      "end": {
        "line": 54,
        "column": 3,
        "index": 1416
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor method.</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "vRequest {qx.io.remote.Request} request object",
          "paramName": "vRequest",
          "description": " request object",
          "type": "qx.io.remote.Request"
        }
      ]
    }
  },
  "events": {
    "sending": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1662
        },
        "end": {
          "line": 64,
          "column": 34,
          "index": 1692
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired whenever a request is send</p>"
          }
        ]
      },
      "name": "sending",
      "type": "qx.event.type.Event"
    },
    "receiving": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1747
        },
        "end": {
          "line": 67,
          "column": 36,
          "index": 1779
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired whenever a request is received</p>"
          }
        ]
      },
      "name": "receiving",
      "type": "qx.event.type.Event"
    },
    "completed": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1835
        },
        "end": {
          "line": 70,
          "column": 38,
          "index": 1869
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired whenever a request is completed</p>"
          }
        ]
      },
      "name": "completed",
      "type": "qx.io.remote.Response"
    },
    "aborted": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1923
        },
        "end": {
          "line": 73,
          "column": 34,
          "index": 1953
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired whenever a request is aborted</p>"
          }
        ]
      },
      "name": "aborted",
      "type": "qx.event.type.Event"
    },
    "failed": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2007
        },
        "end": {
          "line": 76,
          "column": 35,
          "index": 2038
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired whenever a request has failed</p>"
          }
        ]
      },
      "name": "failed",
      "type": "qx.io.remote.Response"
    },
    "timeout": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2095
        },
        "end": {
          "line": 79,
          "column": 36,
          "index": 2127
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired whenever a request has timed out</p>"
          }
        ]
      },
      "name": "timeout",
      "type": "qx.io.remote.Response"
    }
  },
  "statics": {
    "typesOrder": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2818
        },
        "end": {
          "line": 108,
          "column": 5,
          "index": 2955
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Predefined order of types.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "typesReady": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3039
        },
        "end": {
          "line": 115,
          "column": 21,
          "index": 3056
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Marker for initialized types.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "typesAvailable": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3138
        },
        "end": {
          "line": 122,
          "column": 22,
          "index": 3156
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Map of all available types.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "typesSupported": {
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3238
        },
        "end": {
          "line": 129,
          "column": 22,
          "index": 3256
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Map of all supported types.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "registerType": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3463
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 3554
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers a transport type.\n At the moment one out of XmlHttp, Iframe or Script.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "vClass {Object} transport class",
            "paramName": "vClass",
            "description": " transport class",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "vId {String} unique id",
            "paramName": "vId",
            "description": " unique id",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "initTypes": {
      "location": {
        "start": {
          "line": 148,
          "column": 4,
          "index": 3761
        },
        "end": {
          "line": 166,
          "column": 5,
          "index": 4324
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the available type of transport classes and\n checks for the supported ones.</p>"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} an error if no supported transport type is available",
            "type": "Error",
            "description": " an error if no supported transport type is available"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "canHandle": {
      "location": {
        "start": {
          "line": 178,
          "column": 4,
          "index": 4762
        },
        "end": {
          "line": 190,
          "column": 5,
          "index": 5037
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks which supported transport class can handle the request with the\n given content type.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "vImpl {Object} transport implementation",
            "paramName": "vImpl",
            "description": " transport implementation",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "vNeeds {Map} requirements for the request like e.g. \"cross-domain\"",
            "paramName": "vNeeds",
            "description": " requirements for the request like e.g. \"cross-domain\"",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "vResponseType {String} content type",
            "paramName": "vResponseType",
            "description": " content type",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the transport implementation supports\n the request's requirements",
            "type": "Boolean",
            "description": " <code>true</code> if the transport implementation supports\n the request's requirements"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_nativeMap": {
      "location": {
        "start": {
          "line": 218,
          "column": 4,
          "index": 6041
        },
        "end": {
          "line": 224,
          "column": 5,
          "index": 6167
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>http://msdn.microsoft.com/en-us/library/ie/ms534359%28v=vs.85%29.aspx\n 0: UNINITIALIZED\n The object has been created, but not initialized (the open method has not been called).\n 1: LOADING\n The object has been created, but the send method has not been called.\n 2: LOADED\n The send method has been called, but the status and headers are not yet available.\n 3: INTERACTIVE\n Some data has been received. Calling the responseBody and responseText properties at this state to obtain partial results will return an error, because status and response headers are not fully available.\n 4: COMPLETED\n All the data has been received, and the complete data is available in the</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "wasSuccessful": {
      "location": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 6727
        },
        "end": {
          "line": 376,
          "column": 5,
          "index": 11220
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called from the transport class when a request was completed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "vStatusCode {Integer} status code of the request",
            "paramName": "vStatusCode",
            "description": " status code of the request",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "vReadyState {String} readystate of the request",
            "paramName": "vReadyState",
            "description": " readystate of the request",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "vIsLocal {Boolean} whether the request is a local one",
            "paramName": "vIsLocal",
            "description": " whether the request is a local one",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean | var} Returns boolean value depending on the status code",
            "type": "Boolean | var",
            "description": " Returns boolean value depending on the status code"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "statusCodeToString": {
      "location": {
        "start": {
          "line": 384,
          "column": 4,
          "index": 11405
        },
        "end": {
          "line": 522,
          "column": 5,
          "index": 14307
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Status code to string conversion</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "vStatusCode {Integer} request status code",
            "paramName": "vStatusCode",
            "description": " request status code",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} String presentation of status code",
            "type": "String",
            "description": " String presentation of status code"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "properties": {
    "request": {
      "location": {
        "start": {
          "line": 533,
          "column": 4,
          "index": 14578
        },
        "end": {
          "line": 536,
          "column": 5,
          "index": 14653
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the request to send with this transport.</p>"
          }
        ]
      },
      "name": "request",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "qx.io.remote.Request"
    },
    "implementation": {
      "location": {
        "start": {
          "line": 544,
          "column": 4,
          "index": 14890
        },
        "end": {
          "line": 548,
          "column": 5,
          "index": 15020
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the implementation to use to send the request with.\n  The implementation should be a subclass of qx.io.remote.transport.Abstract and\n  must implement all methods in the transport API.</p>"
          }
        ]
      },
      "name": "implementation",
      "propertyType": "new",
      "apply": "_applyImplementation",
      "nullable": true,
      "allowNull": true,
      "check": "qx.io.remote.transport.Abstract"
    },
    "state": {
      "location": {
        "start": {
          "line": 551,
          "column": 4,
          "index": 15076
        },
        "end": {
          "line": 564,
          "column": 5,
          "index": 15335
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Current state of the transport layer.</p>"
          }
        ]
      },
      "name": "state",
      "propertyType": "new",
      "event": "changeState",
      "apply": "_applyState",
      "init": "configured",
      "possibleValues": [
        "configured",
        "sending",
        "receiving",
        "completed",
        "aborted",
        "timeout",
        "failed"
      ],
      "defaultValue": "configured"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "send": {
      "location": {
        "start": {
          "line": 586,
          "column": 4,
          "index": 15889
        },
        "end": {
          "line": 669,
          "column": 5,
          "index": 18140
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sends the request.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var | Boolean} Returns true if the request was sent.",
            "type": "var | Boolean",
            "description": " Returns true if the request was sent."
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreUnused(field)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "abort": {
      "location": {
        "start": {
          "line": 676,
          "column": 4,
          "index": 18241
        },
        "end": {
          "line": 696,
          "column": 5,
          "index": 18847
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Force the transport into the aborted (\"aborted\")\n  state.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "timeout": {
      "location": {
        "start": {
          "line": 702,
          "column": 4,
          "index": 18928
        },
        "end": {
          "line": 728,
          "column": 5,
          "index": 19708
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Force the transport into the timeout state.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__disableRequestTimeout": {
      "location": {
        "start": {
          "line": 741,
          "column": 4,
          "index": 20078
        },
        "end": {
          "line": 746,
          "column": 5,
          "index": 20213
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disables the timer of the request to prevent that the timer is expiring\n even if the user handler (e.g. \"completed\") was already called.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onsending": {
      "location": {
        "start": {
          "line": 759,
          "column": 4,
          "index": 20532
        },
        "end": {
          "line": 761,
          "column": 5,
          "index": 20585
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for \"sending\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onreceiving": {
      "location": {
        "start": {
          "line": 768,
          "column": 4,
          "index": 20711
        },
        "end": {
          "line": 770,
          "column": 5,
          "index": 20768
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for \"receiving\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_oncompleted": {
      "location": {
        "start": {
          "line": 777,
          "column": 4,
          "index": 20894
        },
        "end": {
          "line": 779,
          "column": 5,
          "index": 20951
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for \"completed\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onabort": {
      "location": {
        "start": {
          "line": 786,
          "column": 4,
          "index": 21073
        },
        "end": {
          "line": 788,
          "column": 5,
          "index": 21124
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for \"abort\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onfailed": {
      "location": {
        "start": {
          "line": 795,
          "column": 4,
          "index": 21247
        },
        "end": {
          "line": 797,
          "column": 5,
          "index": 21298
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for \"failed\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_ontimeout": {
      "location": {
        "start": {
          "line": 804,
          "column": 4,
          "index": 21422
        },
        "end": {
          "line": 806,
          "column": 5,
          "index": 21475
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for \"timeout\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyImplementation": {
      "location": {
        "start": {
          "line": 820,
          "column": 4,
          "index": 21833
        },
        "end": {
          "line": 889,
          "column": 5,
          "index": 24406
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply method for the implementation property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "old {var} Previous value",
            "paramName": "old",
            "description": " Previous value",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "implementation"
      ]
    },
    "_applyState": {
      "location": {
        "start": {
          "line": 897,
          "column": 4,
          "index": 24559
        },
        "end": {
          "line": 972,
          "column": 5,
          "index": 26836
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply method for the state property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "old {var} Previous value",
            "paramName": "old",
            "description": " Previous value",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "state"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getRequest": {
      "type": "function",
      "name": "getRequest",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>request</code>.\n\nFor further details take a look at the property definition: {@link #request}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.io.remote.Request",
            "desc": "Returns the value for request"
          }
        ]
      }
    },
    "setRequest": {
      "type": "function",
      "name": "setRequest",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>request</code>.\n\nFor further details take a look at the property definition: {@link #request}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.io.remote.Request",
            "paramName": "value",
            "desc": "Value for request"
          }
        ]
      }
    },
    "resetRequest": {
      "type": "function",
      "name": "resetRequest",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>request</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #request}."
          }
        ]
      }
    },
    "getImplementation": {
      "type": "function",
      "name": "getImplementation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>implementation</code>.\n\nFor further details take a look at the property definition: {@link #implementation}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.io.remote.transport.Abstract",
            "desc": "Returns the value for implementation"
          }
        ]
      }
    },
    "setImplementation": {
      "type": "function",
      "name": "setImplementation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>implementation</code>.\n\nFor further details take a look at the property definition: {@link #implementation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.io.remote.transport.Abstract",
            "paramName": "value",
            "desc": "Value for implementation"
          }
        ]
      }
    },
    "resetImplementation": {
      "type": "function",
      "name": "resetImplementation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>implementation</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #implementation}."
          }
        ]
      }
    },
    "getState": {
      "type": "function",
      "name": "getState",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>state</code>.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for state"
          }
        ]
      }
    },
    "setState": {
      "type": "function",
      "name": "setState",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>state</code>.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for state"
          }
        ]
      }
    },
    "resetState": {
      "type": "function",
      "name": "resetState",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>state</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 992,
        "column": 2,
        "index": 27324
      },
      "end": {
        "line": 1001,
        "column": 3,
        "index": 27493
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}