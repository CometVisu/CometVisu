{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "model",
    "target",
    "templateId",
    "constructor",
    "call",
    "setTemplateId",
    "setModel",
    "setTarget",
    "properties",
    "check",
    "apply",
    "event",
    "nullable",
    "dereference",
    "init",
    "delegate",
    "members",
    "__changeModelListenerId",
    "__changeBubbleModelListenerId",
    "_applyModel",
    "value",
    "old",
    "undefined",
    "removeListenerById",
    "addListener",
    "update",
    "getTarget",
    "__emptyTarget",
    "_applyTarget",
    "_applyTemplateId",
    "_applyDelegate",
    "__P_178_2",
    "i",
    "children",
    "length",
    "el",
    "$$model",
    "dom",
    "Element",
    "remove",
    "innerHTML",
    "data",
    "getModel",
    "util",
    "Serializer",
    "toNativeObject",
    "getTemplateId",
    "configureItem",
    "getDelegate",
    "filter",
    "createItem",
    "entry",
    "_typeof",
    "template",
    "bom",
    "Template",
    "get",
    "item",
    "getItem",
    "insertEnd",
    "controller",
    "website",
    "List"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/controller/website/List.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n/**\r\n * <h2>website List Controller</h2>\r\n *\r\n * *General idea*\r\n * The list controller is responsible for synchronizing data given as model\r\n * to a DOM element. As definition for a single item, templates are used. More\r\n * details on templates can be found in {@link qx.bom.Template}.\r\n *\r\n * *Features*\r\n *\r\n * * Synchronize the model and the target\r\n * * Filtering\r\n *\r\n * *Usage*\r\n *\r\n * As model, {@link qx.data.Array}s and plain JavaScript Arrays work. As a\r\n * Target, you have to use a DOM element e.g. a plain DIV element. Make sure\r\n * you have the template you are referencing in the DOM.\r\n */\r\nqx.Class.define(\"qx.data.controller.website.List\", {\r\n  extend: qx.core.Object,\r\n\r\n  /**\r\n   * @param model {qx.data.IListData|Array?} The mode which can either be a\r\n   *   native array or a qooxdoo data list. Maps to the model property.\r\n   * @param target {Element?} A DOM element which should is the target for\r\n   *   the generation.\r\n   * @param templateId {String?} The id of the template.\r\n   */\r\n  construct(model, target, templateId) {\r\n    super();\r\n\r\n    if (templateId != null) {\r\n      this.setTemplateId(templateId);\r\n    }\r\n    if (model != null) {\r\n      this.setModel(model);\r\n    }\r\n    if (target != null) {\r\n      this.setTarget(target);\r\n    }\r\n  },\r\n\r\n  properties: {\r\n    /** Array containing the data which should be shown in the list. */\r\n    model: {\r\n      check: \"Array\",\r\n      apply: \"_applyModel\",\r\n      event: \"changeModel\",\r\n      nullable: true,\r\n      dereference: true\r\n    },\r\n\r\n    /** The target DOM node which should show the data. */\r\n    target: {\r\n      check: \"Element\",\r\n      apply: \"_applyTarget\",\r\n      event: \"changeTarget\",\r\n      nullable: true,\r\n      init: null,\r\n      dereference: true\r\n    },\r\n\r\n    /**\r\n     * The id of the template which should be use. Check out\r\n     * {@link qx.bom.Template} for details on templating.\r\n     */\r\n    templateId: {\r\n      apply: \"_applyTemplateId\",\r\n      event: \"changeTemplateId\",\r\n      nullable: true,\r\n      init: null\r\n    },\r\n\r\n    /**\r\n     * The delegate for the list controller which supports almost all methods\r\n     * documented in {@link qx.data.controller.IControllerDelegate} except\r\n     * <code>bindItem</code>.\r\n     */\r\n    delegate: {\r\n      apply: \"_applyDelegate\",\r\n      event: \"changeDelegate\",\r\n      init: null,\r\n      nullable: true\r\n    }\r\n  },\r\n\r\n  members: {\r\n    __changeModelListenerId: null,\r\n    __changeBubbleModelListenerId: null,\r\n\r\n    // property apply\r\n    _applyModel(value, old) {\r\n      // remove the old listener\r\n      if (old != undefined) {\r\n        if (this.__changeModelListenerId != undefined) {\r\n          old.removeListenerById(this.__changeModelListenerId);\r\n        }\r\n        if (this.__changeBubbleModelListenerId != undefined) {\r\n          old.removeListenerById(this.__changeBubbleModelListenerId);\r\n        }\r\n      }\r\n\r\n      // if a model is set\r\n      if (value != null) {\r\n        // only for qooxdoo models\r\n        if (value instanceof qx.core.Object) {\r\n          // add new listeners\r\n          this.__changeModelListenerId = value.addListener(\r\n            \"change\",\r\n            this.update,\r\n            this\r\n          );\r\n\r\n          this.__changeBubbleModelListenerId = value.addListener(\r\n            \"changeBubble\",\r\n            this.update,\r\n            this\r\n          );\r\n        }\r\n      } else {\r\n        var target = this.getTarget();\r\n        // if the model is set to null, we should remove all items in the target\r\n        if (target != null) {\r\n          this.__emptyTarget();\r\n        }\r\n      }\r\n\r\n      this.update();\r\n    },\r\n\r\n    // property apply\r\n    _applyTarget(value, old) {\r\n      this.update();\r\n    },\r\n\r\n    // property apply\r\n    _applyTemplateId(value, old) {\r\n      this.update();\r\n    },\r\n\r\n    // property apply\r\n    _applyDelegate(value, old) {\r\n      this.update();\r\n    },\r\n\r\n    /**\r\n     * Responsible for removing all items from the target element.\r\n     */\r\n    __emptyTarget() {\r\n      var target = this.getTarget();\r\n      for (var i = target.children.length - 1; i >= 0; i--) {\r\n        var el = target.children[i];\r\n        el.$$model = null;\r\n        qx.dom.Element.remove(el);\r\n      }\r\n      target.innerHTML = \"\";\r\n    },\r\n\r\n    /**\r\n     * This is the main method which will take the data from the model and\r\n     * push it to the target view. If you are using a plain Array as model,\r\n     * you need to call that method every time you want to see the changed model\r\n     * in the view while using {@link qx.data.Array}s will do that\r\n     * automatically for you.\r\n     * This method also attaches to every created DOM element the model object\r\n     * which was used to create it at <code>.$$model</code>.\r\n     */\r\n    update() {\r\n      var target = this.getTarget();\r\n\r\n      // get the plain data\r\n      var data = this.getModel();\r\n      if (data instanceof qx.core.Object) {\r\n        data = qx.util.Serializer.toNativeObject(this.getModel());\r\n      }\r\n      var templateId = this.getTemplateId();\r\n\r\n      // only do something if everything is given\r\n      if (target == null || data == null || templateId == null) {\r\n        return;\r\n      }\r\n\r\n      // empty the target\r\n      this.__emptyTarget();\r\n\r\n      // delegate methods\r\n      var configureItem =\r\n        this.getDelegate() && this.getDelegate().configureItem;\r\n      var filter = this.getDelegate() && this.getDelegate().filter;\r\n      var createItem = this.getDelegate() && this.getDelegate().createItem;\r\n\r\n      // get all items in the model\r\n      for (var i = 0; i < data.length; i++) {\r\n        var entry = data[i];\r\n        // filter delegate\r\n        if (filter && !filter(entry)) {\r\n          continue;\r\n        }\r\n\r\n        // special case for printing the content of the array\r\n        if (typeof entry != \"object\") {\r\n          entry = { \".\": data[i] };\r\n        }\r\n\r\n        // create the DOM object\r\n        var template;\r\n        if (createItem) {\r\n          template = createItem(data[i]);\r\n        } else {\r\n          template = qx.bom.Template.get(templateId, entry);\r\n        }\r\n\r\n        // handling for wrong template IDs\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          this.assertNotNull(template);\r\n        }\r\n\r\n        // configure item\r\n        if (configureItem) {\r\n          configureItem(template);\r\n        }\r\n\r\n        // append the model to the dom item\r\n        var model = this.getModel();\r\n        var item = model.getItem ? model.getItem(i) : model[i];\r\n        template.$$model = item;\r\n\r\n        qx.dom.Element.insertEnd(template, target);\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}