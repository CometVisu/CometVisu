{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "model",
    "target",
    "templateId",
    "constructor",
    "call",
    "setTemplateId",
    "setModel",
    "setTarget",
    "properties",
    "check",
    "apply",
    "event",
    "nullable",
    "dereference",
    "init",
    "delegate",
    "members",
    "__changeModelListenerId",
    "__changeBubbleModelListenerId",
    "_applyModel",
    "value",
    "old",
    "undefined",
    "removeListenerById",
    "addListener",
    "update",
    "getTarget",
    "__emptyTarget",
    "_applyTarget",
    "_applyTemplateId",
    "_applyDelegate",
    "i",
    "children",
    "length",
    "el",
    "$$model",
    "dom",
    "Element",
    "remove",
    "innerHTML",
    "data",
    "getModel",
    "util",
    "Serializer",
    "toNativeObject",
    "getTemplateId",
    "configureItem",
    "getDelegate",
    "filter",
    "createItem",
    "entry",
    "_typeof",
    "template",
    "bom",
    "Template",
    "get",
    "item",
    "getItem",
    "insertEnd",
    "controller",
    "website",
    "List"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/controller/website/List.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * <h2>website List Controller</h2>\n *\n * *General idea*\n * The list controller is responsible for synchronizing data given as model\n * to a DOM element. As definition for a single item, templates are used. More\n * details on templates can be found in {@link qx.bom.Template}.\n *\n * *Features*\n *\n * * Synchronize the model and the target\n * * Filtering\n *\n * *Usage*\n *\n * As model, {@link qx.data.Array}s and plain JavaScript Arrays work. As a\n * Target, you have to use a DOM element e.g. a plain DIV element. Make sure\n * you have the template you are referencing in the DOM.\n */\nqx.Class.define(\"qx.data.controller.website.List\", {\n  extend: qx.core.Object,\n\n  /**\n   * @param model {qx.data.IListData|Array?} The mode which can either be a\n   *   native array or a qooxdoo data list. Maps to the model property.\n   * @param target {Element?} A DOM element which should is the target for\n   *   the generation.\n   * @param templateId {String?} The id of the template.\n   */\n  construct(model, target, templateId) {\n    super();\n\n    if (templateId != null) {\n      this.setTemplateId(templateId);\n    }\n    if (model != null) {\n      this.setModel(model);\n    }\n    if (target != null) {\n      this.setTarget(target);\n    }\n  },\n\n  properties: {\n    /** Array containing the data which should be shown in the list. */\n    model: {\n      check: \"Array\",\n      apply: \"_applyModel\",\n      event: \"changeModel\",\n      nullable: true,\n      dereference: true\n    },\n\n    /** The target DOM node which should show the data. */\n    target: {\n      check: \"Element\",\n      apply: \"_applyTarget\",\n      event: \"changeTarget\",\n      nullable: true,\n      init: null,\n      dereference: true\n    },\n\n    /**\n     * The id of the template which should be use. Check out\n     * {@link qx.bom.Template} for details on templating.\n     */\n    templateId: {\n      apply: \"_applyTemplateId\",\n      event: \"changeTemplateId\",\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * The delegate for the list controller which supports almost all methods\n     * documented in {@link qx.data.controller.IControllerDelegate} except\n     * <code>bindItem</code>.\n     */\n    delegate: {\n      apply: \"_applyDelegate\",\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members: {\n    __changeModelListenerId: null,\n    __changeBubbleModelListenerId: null,\n\n    // property apply\n    _applyModel(value, old) {\n      // remove the old listener\n      if (old != undefined) {\n        if (this.__changeModelListenerId != undefined) {\n          old.removeListenerById(this.__changeModelListenerId);\n        }\n        if (this.__changeBubbleModelListenerId != undefined) {\n          old.removeListenerById(this.__changeBubbleModelListenerId);\n        }\n      }\n\n      // if a model is set\n      if (value != null) {\n        // only for qooxdoo models\n        if (value instanceof qx.core.Object) {\n          // add new listeners\n          this.__changeModelListenerId = value.addListener(\n            \"change\",\n            this.update,\n            this\n          );\n\n          this.__changeBubbleModelListenerId = value.addListener(\n            \"changeBubble\",\n            this.update,\n            this\n          );\n        }\n      } else {\n        var target = this.getTarget();\n        // if the model is set to null, we should remove all items in the target\n        if (target != null) {\n          this.__emptyTarget();\n        }\n      }\n\n      this.update();\n    },\n\n    // property apply\n    _applyTarget(value, old) {\n      this.update();\n    },\n\n    // property apply\n    _applyTemplateId(value, old) {\n      this.update();\n    },\n\n    // property apply\n    _applyDelegate(value, old) {\n      this.update();\n    },\n\n    /**\n     * Responsible for removing all items from the target element.\n     */\n    __emptyTarget() {\n      var target = this.getTarget();\n      for (var i = target.children.length - 1; i >= 0; i--) {\n        var el = target.children[i];\n        el.$$model = null;\n        qx.dom.Element.remove(el);\n      }\n      target.innerHTML = \"\";\n    },\n\n    /**\n     * This is the main method which will take the data from the model and\n     * push it to the target view. If you are using a plain Array as model,\n     * you need to call that method every time you want to see the changed model\n     * in the view while using {@link qx.data.Array}s will do that\n     * automatically for you.\n     * This method also attaches to every created DOM element the model object\n     * which was used to create it at <code>.$$model</code>.\n     */\n    update() {\n      var target = this.getTarget();\n\n      // get the plain data\n      var data = this.getModel();\n      if (data instanceof qx.core.Object) {\n        data = qx.util.Serializer.toNativeObject(this.getModel());\n      }\n      var templateId = this.getTemplateId();\n\n      // only do something if everything is given\n      if (target == null || data == null || templateId == null) {\n        return;\n      }\n\n      // empty the target\n      this.__emptyTarget();\n\n      // delegate methods\n      var configureItem =\n        this.getDelegate() && this.getDelegate().configureItem;\n      var filter = this.getDelegate() && this.getDelegate().filter;\n      var createItem = this.getDelegate() && this.getDelegate().createItem;\n\n      // get all items in the model\n      for (var i = 0; i < data.length; i++) {\n        var entry = data[i];\n        // filter delegate\n        if (filter && !filter(entry)) {\n          continue;\n        }\n\n        // special case for printing the content of the array\n        if (typeof entry != \"object\") {\n          entry = { \".\": data[i] };\n        }\n\n        // create the DOM object\n        var template;\n        if (createItem) {\n          template = createItem(data[i]);\n        } else {\n          template = qx.bom.Template.get(templateId, entry);\n        }\n\n        // handling for wrong template IDs\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.assertNotNull(template);\n        }\n\n        // configure item\n        if (configureItem) {\n          configureItem(template);\n        }\n\n        // append the model to the dom item\n        var model = this.getModel();\n        var item = model.getItem ? model.getItem(i) : model[i];\n        template.$$model = item;\n\n        qx.dom.Element.insertEnd(template, target);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}