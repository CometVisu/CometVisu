{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "data",
    "controller",
    "List",
    "construct",
    "model",
    "widget",
    "path",
    "constructor",
    "call",
    "setChecked",
    "Array",
    "setModel",
    "properties",
    "checked",
    "init",
    "nullable",
    "check",
    "event",
    "apply",
    "checkedLabelPath",
    "checkedIconPath",
    "checkedLabelOptions",
    "checkedIconOptions",
    "members",
    "_applyChecked",
    "value",
    "oldValue",
    "removeListener",
    "__onCheckedChange",
    "addListener",
    "_updateChecked",
    "_createItem",
    "delegate",
    "getDelegate",
    "item",
    "createItem",
    "ui",
    "form",
    "CheckBox",
    "configureItem",
    "__P_172_1",
    "evt",
    "getData",
    "type",
    "update",
    "CheckedList",
    "superclass",
    "prototype",
    "_setFilter",
    "old",
    "__syncModelChecked",
    "core",
    "queue",
    "Widget",
    "add",
    "syncWidget",
    "_applyModel",
    "getLength",
    "getChecked",
    "removeAll",
    "_applyTarget",
    "__onTargetCheckedChange",
    "supportsEvent",
    "__onTargetAttachResultsTag",
    "__onTargetDetachResultsTag",
    "__P_172_3",
    "__inUpdateChecked",
    "target",
    "getTarget",
    "replacement",
    "forEach",
    "itemModel",
    "getModel",
    "push",
    "replace",
    "__P_172_4",
    "_evt$getData",
    "tagWidget",
    "setUserData",
    "classname",
    "__attachTag",
    "__P_172_5",
    "_evt$getData2",
    "__detachTag",
    "__updateTags",
    "__P_172_0",
    "_this",
    "getUserData",
    "__P_172_7",
    "bindData",
    "getCheckedLabelPath",
    "checkedLabelId",
    "bind",
    "getCheckedLabelOptions",
    "getCheckedIconPath",
    "checkedIconId",
    "getCheckedIconOptions",
    "__P_172_8",
    "removeListenerById",
    "children",
    "toUncheck",
    "getChildren",
    "hash",
    "toHashCode",
    "getValue",
    "toRemove",
    "setValue",
    "Object",
    "values",
    "remove"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/controller/CheckedList.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2021-2021 Zenesis Limited https://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (github.com/johnspackman)\n\n************************************************************************ */\n\n/**\n * Extension of `qx.data.controller.List` which adds support for `qx.ui.form.CheckedList`\n * and `qx.ui.form.CheckedSelectBox`.\n *\n * The principal is that the underlying `List` controller implementation has a model which\n * is the complete array of items that can be selected, and that array is used to populate\n * the UI widget (ie as normal).\n *\n * The `checked` psuedo property in this `CheckedList` controller relates to the checked\n * property of the UI widget.\n */\nqx.Class.define(\"qx.data.controller.CheckedList\", {\n  extend: qx.data.controller.List,\n\n  /**\n   * Constructor\n   *\n   * @param model {qx.data.Array?null} the model array\n   * @param widget {qx.ui.core.Widget?null} the widget target\n   * @param path {String} the path in the model for the caption\n   */\n  construct(model, widget, path) {\n    super(null, widget, path);\n    this.setChecked(new qx.data.Array());\n    if (model) {\n      this.setModel(model);\n    }\n  },\n\n  properties: {\n    checked: {\n      init: null,\n      nullable: true,\n      check: \"qx.data.Array\",\n      event: \"changeChecked\",\n      apply: \"_applyChecked\"\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label for a tag for a checked item. This is only needed if\n     * used with a CheckedSelectBox, and only if live updates of the label\n     * are required.\n     */\n    checkedLabelPath: {\n      check: \"String\",\n      apply: \"__updateTags\",\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon for a tag for a checked item. This is only needed if\n     * used with a CheckedSelectBox, and only if live updates of the label\n     * are required.\n     */\n    checkedIconPath: {\n      check: \"String\",\n      apply: \"__updateTags\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the checkedLabel binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    checkedLabelOptions: {\n      apply: \"__updateTags\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the checked icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    checkedIconOptions: {\n      apply: \"__updateTags\",\n      nullable: true\n    }\n  },\n\n  members: {\n    _applyChecked(value, oldValue) {\n      if (oldValue) {\n        oldValue.removeListener(\"change\", this.__onCheckedChange, this);\n      }\n      if (value) {\n        value.addListener(\"change\", this.__onCheckedChange, this);\n      }\n      this._updateChecked();\n    },\n\n    /**\n     * @Override\n     */\n    _createItem() {\n      var delegate = this.getDelegate();\n      var item;\n\n      // check if a delegate and a create method is set\n      if (delegate != null && delegate.createItem != null) {\n        item = delegate.createItem();\n      } else {\n        item = new qx.ui.form.CheckBox();\n      }\n\n      // if there is a configure method, invoke it\n      if (delegate != null && delegate.configureItem != null) {\n        delegate.configureItem(item);\n      }\n\n      return item;\n    },\n\n    /**\n     * Event handler for changes to the checked array\n     *\n     * @param evt {qx.event.type.Data} the event\n     */\n    __onCheckedChange(evt) {\n      let data = evt.getData();\n      if (data.type == \"order\") {\n        return;\n      }\n      this._updateChecked();\n    },\n\n    /**\n     * @Override\n     */\n    update() {\n      super.update();\n      this._updateChecked();\n    },\n\n    /**\n     * @Override\n     */\n    _setFilter(value, old) {\n      super._setFilter(value, old);\n      this.__syncModelChecked = true;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    /**\n     * @Override\n     */\n    syncWidget() {\n      super.syncWidget();\n      if (this.__syncModelChecked) {\n        this._updateChecked();\n      }\n      this.__syncModelChecked = null;\n    },\n\n    /**\n     * @Override\n     */\n    _applyModel(value, oldValue) {\n      if (!value || !value.getLength()) {\n        let checked = this.getChecked();\n        if (checked) {\n          checked.removeAll();\n        }\n      }\n      super._applyModel(value, oldValue);\n      this._updateChecked();\n    },\n\n    /**\n     * @Override\n     */\n    _applyTarget(value, oldValue) {\n      super._applyTarget(value, oldValue);\n      if (oldValue) {\n        oldValue.removeListener(\n          \"changeChecked\",\n          this.__onTargetCheckedChange,\n          this\n        );\n\n        if (qx.Class.supportsEvent(oldValue.constructor, \"attachResultsTag\")) {\n          oldValue.removeListener(\n            \"attachResultsTag\",\n            this.__onTargetAttachResultsTag,\n            this\n          );\n\n          oldValue.removeListener(\n            \"detachResultsTag\",\n            this.__onTargetDetachResultsTag,\n            this\n          );\n        }\n      }\n      if (value) {\n        value.addListener(\"changeChecked\", this.__onTargetCheckedChange, this);\n        if (qx.Class.supportsEvent(value.constructor, \"attachResultsTag\")) {\n          value.addListener(\n            \"attachResultsTag\",\n            this.__onTargetAttachResultsTag,\n            this\n          );\n\n          value.addListener(\n            \"detachResultsTag\",\n            this.__onTargetDetachResultsTag,\n            this\n          );\n        }\n      }\n    },\n\n    /**\n     * Event handler for changes in the target widget's `checked` property\n     */\n    __onTargetCheckedChange(evt) {\n      if (this.__inUpdateChecked) {\n        return;\n      }\n      let target = this.getTarget();\n      let replacement = [];\n      target.getChecked().forEach(item => {\n        let itemModel = item.getModel();\n        if (itemModel) {\n          replacement.push(itemModel);\n        }\n      });\n      let checked = this.getChecked();\n      if (checked) {\n        checked.replace(replacement);\n      }\n    },\n\n    /**\n     * Event handler for changes in the target widget's `attachResults` property\n     */\n    __onTargetAttachResultsTag(evt) {\n      let { tagWidget, item } = evt.getData();\n      item.setUserData(this.classname + \".tagWidget\", tagWidget);\n      this.__attachTag(tagWidget, item);\n    },\n\n    /**\n     * Event handler for changes in the target widget's `detachResults` property\n     */\n    __onTargetDetachResultsTag(evt) {\n      let { tagWidget, item } = evt.getData();\n      this.__detachTag(tagWidget, item);\n      item.setUserData(this.classname + \".tagWidget\", null);\n    },\n\n    /**\n     * Updates all tags in the target widget\n     */\n    __updateTags() {\n      let target = this.getTarget();\n      if (!target) {\n        return;\n      }\n      target.getChecked().forEach(item => {\n        let tagWidget = item.getUserData(this.classname + \".tagWidget\");\n        this.__detachTag(tagWidget, item);\n        this.__attachTag(tagWidget, item);\n      });\n    },\n\n    /**\n     * Attaches a single tag; used to bind to the tag so that live updates to the underlying model are reflected in tag names\n     *\n     * @param tagWidget {qx.ui.core.Widget} the widget which is the tag\n     * @param item {qx.ui.core.Widget} the list item that lists the model item that this tag is for\n     */\n    __attachTag(tagWidget, item) {\n      let itemModel = item.getModel();\n      let bindData = {};\n      if (this.getCheckedLabelPath()) {\n        bindData.checkedLabelId = itemModel.bind(\n          this.getCheckedLabelPath(),\n          tagWidget,\n          \"label\",\n          this.getCheckedLabelOptions()\n        );\n      }\n      if (this.getCheckedIconPath()) {\n        bindData.checkedIconId = itemModel.bind(\n          this.getCheckedIconPath(),\n          tagWidget,\n          \"label\",\n          this.getCheckedIconOptions()\n        );\n      }\n      itemModel.setUserData(this.classname + \".bindData\", bindData);\n    },\n\n    /**\n     * Detaches a single tag, inverse of `__attachTag`\n     *\n     * @param tagWidget {qx.ui.core.Widget} the widget which is the tag\n     * @param item {qx.ui.core.Widget} the list item that lists the model item that this tag is for\n     */\n    __detachTag(tagWidget, item) {\n      let itemModel = item.getModel();\n      let bindData = itemModel.getUserData(this.classname + \".bindData\");\n      if (bindData) {\n        if (bindData.checkedLabelId) {\n          itemModel.removeListenerById(bindData.checkedLabelId);\n        }\n        if (bindData.checkedIconId) {\n          itemModel.removeListenerById(bindData.checkedIconId);\n        }\n        itemModel.setUserData(this.classname + \".bindData\", null);\n      }\n    },\n\n    /**\n     * Updates the checked widget items to match the array of checked model items\n     */\n    _updateChecked() {\n      let target = this.getTarget();\n      if (!target) {\n        return;\n      }\n\n      if (this.__inUpdateChecked) {\n        return;\n      }\n      this.__inUpdateChecked = true;\n      try {\n        // Maps of the widget item, indexed by the hashcode of the model item\n        let children = {};\n        let toUncheck = {};\n\n        target.getChildren().forEach(item => {\n          let itemModel = item.getModel();\n          if (itemModel) {\n            let hash = itemModel.toHashCode();\n            children[hash] = item;\n            if (item.getValue()) {\n              toUncheck[hash] = item;\n            }\n          }\n        });\n\n        let toRemove = [];\n        let checked = this.getChecked();\n        if (checked) {\n          checked.forEach(itemModel => {\n            let hash = itemModel.toHashCode();\n            if (itemModel) {\n              delete toUncheck[hash];\n              if (children[hash]) {\n                children[hash].setValue(true);\n              } else {\n                toRemove.push(itemModel);\n              }\n            }\n          });\n          Object.values(toUncheck).forEach(item => item.setValue(false));\n          toRemove.forEach(item => checked.remove(item));\n        }\n      } finally {\n        this.__inUpdateChecked = false;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}