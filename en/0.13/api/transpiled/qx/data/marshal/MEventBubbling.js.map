{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "events",
    "changeBubble",
    "members",
    "_applyEventPropagation",
    "value",
    "old",
    "name",
    "fireDataEvent",
    "item",
    "_registerEventChaining",
    "getUserData",
    "toHashCode",
    "listeners",
    "i",
    "length",
    "removeListenerById",
    "setUserData",
    "core",
    "Object",
    "Class",
    "hasMixin",
    "constructor",
    "data",
    "marshal",
    "MEventBubbling",
    "listener",
    "lang",
    "Function",
    "bind",
    "__changePropertyListener",
    "id",
    "addListener",
    "push",
    "__P_180_0",
    "e",
    "getData",
    "hasInterface",
    "getTarget",
    "IListData",
    "indexOf",
    "dotIndex",
    "bracketIndex",
    "newName",
    "index",
    "substring",
    "rest",
    "parseInt"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/marshal/MEventBubbling.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Mixin used for the bubbling events. If you want to use this in your own model\r\n * classes, be sure that every property will call the\r\n * {@link #_applyEventPropagation} function on every change.\r\n */\r\nqx.Mixin.define(\"qx.data.marshal.MEventBubbling\", {\r\n  events: {\r\n    /**\r\n     * The change event which will be fired on every change in the model no\r\n     * matter what property changes. This event bubbles so the root model will\r\n     * fire a change event on every change of its children properties too.\r\n     *\r\n     * Note that properties are required to call\r\n     * {@link #_applyEventPropagation} on apply for changes to be tracked as\r\n     * desired. It is already taken care of that properties created with the\r\n     * {@link qx.data.marshal.Json} marshaler call this method.\r\n     *\r\n     * The data will contain a map with the following four keys\r\n     *   <li>value: The new value of the property</li>\r\n     *   <li>old: The old value of the property.</li>\r\n     *   <li>name: The name of the property changed including its parent\r\n     *     properties separated by dots.</li>\r\n     *   <li>item: The item which has the changed property.</li>\r\n     * Due to that, the <code>getOldData</code> method will always return null\r\n     * because the old data is contained in the map.\r\n     */\r\n    changeBubble: \"qx.event.type.Data\"\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Apply function for every property created with the\r\n     * {@link qx.data.marshal.Json} marshaler. It fires and\r\n     * {@link #changeBubble} event on every change. It also adds the chaining\r\n     * listener if possible which is necessary for the bubbling of the events.\r\n     *\r\n     * @param value {var} The new value of the property.\r\n     * @param old {var} The old value of the property.\r\n     * @param name {String} The name of the changed property.\r\n     */\r\n    _applyEventPropagation(value, old, name) {\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: value,\r\n        name: name,\r\n        old: old,\r\n        item: this\r\n      });\r\n\r\n      this._registerEventChaining(value, old, name);\r\n    },\r\n\r\n    /**\r\n     * Registers for the given parameters the changeBubble listener, if\r\n     * possible. It also removes the old listener, if an old item with\r\n     * a changeBubble event is given.\r\n     *\r\n     * @param value {var} The new value of the property.\r\n     * @param old {var} The old value of the property.\r\n     * @param name {String} The name of the changed property.\r\n     */\r\n    _registerEventChaining(value, old, name) {\r\n      // if an old value is given, remove the old listener if possible\r\n      if (\r\n        old != null &&\r\n        old.getUserData &&\r\n        old.getUserData(\"idBubble-\" + this.toHashCode()) != null\r\n      ) {\r\n        var listeners = old.getUserData(\"idBubble-\" + this.toHashCode());\r\n        for (var i = 0; i < listeners.length; i++) {\r\n          old.removeListenerById(listeners[i]);\r\n        }\r\n        old.setUserData(\"idBubble-\" + this.toHashCode(), null);\r\n      }\r\n\r\n      // if the child supports chaining\r\n      if (\r\n        value instanceof qx.core.Object &&\r\n        qx.Class.hasMixin(value.constructor, qx.data.marshal.MEventBubbling)\r\n      ) {\r\n        // create the listener\r\n        var listener = qx.lang.Function.bind(\r\n          this.__changePropertyListener,\r\n          this,\r\n          name\r\n        );\r\n\r\n        // add the listener\r\n        var id = value.addListener(\"changeBubble\", listener, this);\r\n        var listeners = value.getUserData(\"idBubble-\" + this.toHashCode());\r\n        if (listeners == null) {\r\n          listeners = [];\r\n          value.setUserData(\"idBubble-\" + this.toHashCode(), listeners);\r\n        }\r\n        listeners.push(id);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Listener responsible for formating the name and firing the change event\r\n     * for the changed property.\r\n     *\r\n     * @param name {String} The name of the former properties.\r\n     * @param e {qx.event.type.Data} The date event fired by the property\r\n     *   change.\r\n     */\r\n    __changePropertyListener(name, e) {\r\n      var data = e.getData();\r\n      var value = data.value;\r\n      var old = data.old;\r\n\r\n      // if the target is an array\r\n      if (qx.Class.hasInterface(e.getTarget().constructor, qx.data.IListData)) {\r\n        if (data.name.indexOf) {\r\n          var dotIndex =\r\n            data.name.indexOf(\".\") != -1\r\n              ? data.name.indexOf(\".\")\r\n              : data.name.length;\r\n          var bracketIndex =\r\n            data.name.indexOf(\"[\") != -1\r\n              ? data.name.indexOf(\"[\")\r\n              : data.name.length;\r\n\r\n          // brackets in the first spot is ok [BUG #5985]\r\n          if (bracketIndex == 0) {\r\n            var newName = name + data.name;\r\n          } else if (dotIndex < bracketIndex) {\r\n            var index = data.name.substring(0, dotIndex);\r\n            var rest = data.name.substring(dotIndex + 1, data.name.length);\r\n            if (rest[0] != \"[\") {\r\n              rest = \".\" + rest;\r\n            }\r\n            var newName = name + \"[\" + index + \"]\" + rest;\r\n          } else if (bracketIndex < dotIndex) {\r\n            var index = data.name.substring(0, bracketIndex);\r\n            var rest = data.name.substring(bracketIndex, data.name.length);\r\n            var newName = name + \"[\" + index + \"]\" + rest;\r\n          } else {\r\n            var newName = name + \"[\" + data.name + \"]\";\r\n          }\r\n        } else {\r\n          var newName = name + \"[\" + data.name + \"]\";\r\n        }\r\n\r\n        // if the target is not an array\r\n      } else {\r\n        // special case for array as first element of the chain [BUG #5985]\r\n        if (parseInt(name) == name && name !== \"\") {\r\n          name = \"[\" + name + \"]\";\r\n        }\r\n        var newName = name + \".\" + data.name;\r\n      }\r\n\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: value,\r\n        name: newName,\r\n        old: old,\r\n        item: data.item || e.getTarget()\r\n      });\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}