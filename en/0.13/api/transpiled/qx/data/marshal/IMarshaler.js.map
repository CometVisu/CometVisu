{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "toClass",
    "data",
    "includeBubbleEvents",
    "toModel",
    "marshal",
    "IMarshaler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/marshal/IMarshaler.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n/**\r\n * Defines the methods needed by every marshaler which should work with the\r\n * qooxdoo data stores.\r\n */\r\nqx.Interface.define(\"qx.data.marshal.IMarshaler\", {\r\n  members: {\r\n    /**\r\n     * Creates for the given data the needed classes. The classes contain for\r\n     * every key in the data a property. The classname is always the prefix\r\n     * <code>qx.data.model</code>. Two objects containing the same keys will not\r\n     * create two different classes.\r\n     *\r\n     * @param data {Object} The object for which classes should be created.\r\n     * @param includeBubbleEvents {Boolean} Whether the model should support\r\n     *   the bubbling of change events or not.\r\n     */\r\n    toClass(data, includeBubbleEvents) {},\r\n\r\n    /**\r\n     * Creates for the given data the needed models. Be sure to have the classes\r\n     * created with {@link #toClass} before calling this method.\r\n     *\r\n     * @param data {Object} The object for which models should be created.\r\n     *\r\n     * @return {qx.core.Object} The created model object.\r\n     */\r\n    toModel(data) {}\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,4BAA4B,EAAE;IAChDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,WAAAA,QAACC,IAAI,EAAEC,mBAAmB,EAAE,CAAC,CAAC;MAErC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,WAAAA,QAACF,IAAI,EAAE,CAAC;IACjB;EACF,CAAC,CAAC;EA7CFR,EAAE,CAACQ,IAAI,CAACG,OAAO,CAACC,UAAU,CAACT,aAAa,GAAGA,aAAa;AAAC"
}