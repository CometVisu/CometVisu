{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "toString",
    "value",
    "TOSTRINGOPTIONS",
    "converter",
    "toNumber",
    "parseFloat",
    "TONUMBEROPTIONS",
    "toBoolean",
    "TOBOOLEANOPTIONS",
    "defer",
    "data",
    "Conversion"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/Conversion.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class offers a set of default conversion methods and whole options\r\n * packs for {@link qx.data.SingleValueBinding}. The binding offers a conversion\r\n * itself if it can determinate which types should be used. In all other cases,\r\n * you can you this methods / options for the default conversion.\r\n */\r\nqx.Class.define(\"qx.data.Conversion\", {\r\n  statics: {\r\n    /**\r\n     * Converts the given value to a string via <code> + \"\"</code>.\r\n     *\r\n     * @param value {var} The value to convert.\r\n     * @return {String} The converted value.\r\n     */\r\n    toString(value) {\r\n      return value + \"\";\r\n    },\r\n\r\n    /**\r\n     * Options for the {@link qx.data.SingleValueBinding}\r\n     * containing the {@link #toString} converter.\r\n     */\r\n    TOSTRINGOPTIONS: { converter: null },\r\n\r\n    /**\r\n     * Converts the given value to a number via <code>parseFloat</code>.\r\n     *\r\n     * @param value {var} The value to convert.\r\n     * @return {Number} The converted value.\r\n     */\r\n    toNumber(value) {\r\n      return parseFloat(value);\r\n    },\r\n\r\n    /**\r\n     * Options for the {@link qx.data.SingleValueBinding}\r\n     * containing the {@link #toNumber} converter.\r\n     */\r\n    TONUMBEROPTIONS: { converter: null },\r\n\r\n    /**\r\n     * Converts the given value to a boolean via <code>!!value</code>.\r\n     *\r\n     * @param value {var} The value to convert.\r\n     * @return {Boolean} The converted value.\r\n     */\r\n    toBoolean(value) {\r\n      return !!value;\r\n    },\r\n\r\n    /**\r\n     * Options for the {@link qx.data.SingleValueBinding}\r\n     * containing the {@link #toBoolean} converter.\r\n     */\r\n    TOBOOLEANOPTIONS: { converter: null }\r\n  },\r\n\r\n  defer() {\r\n    // the converter need to be set in the defer because the reference to\r\n    // the converter function is not available during the class create\r\n    qx.data.Conversion.TOSTRINGOPTIONS.converter = qx.data.Conversion.toString;\r\n    qx.data.Conversion.TONUMBEROPTIONS.converter = qx.data.Conversion.toNumber;\r\n    qx.data.Conversion.TOBOOLEANOPTIONS.converter =\r\n      qx.data.Conversion.toBoolean;\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,oBAAoB,EAAE;IACpCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAACC,KAAK,EAAE;QACd,OAAOA,KAAK,GAAG,EAAE;MACnB,CAAC;MAED;AACJ;AACA;AACA;MACIC,eAAe,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAC;MAEpC;AACJ;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAACH,KAAK,EAAE;QACd,OAAOI,UAAU,CAACJ,KAAK,CAAC;MAC1B,CAAC;MAED;AACJ;AACA;AACA;MACIK,eAAe,EAAE;QAAEH,SAAS,EAAE;MAAK,CAAC;MAEpC;AACJ;AACA;AACA;AACA;AACA;MACII,SAAS,WAAAA,UAACN,KAAK,EAAE;QACf,OAAO,CAAC,CAACA,KAAK;MAChB,CAAC;MAED;AACJ;AACA;AACA;MACIO,gBAAgB,EAAE;QAAEL,SAAS,EAAE;MAAK;IACtC,CAAC;IAEDM,KAAK,WAAAA,MAAA,EAAG;MACN;MACA;MACAhB,EAAE,CAACiB,IAAI,CAACC,UAAU,CAACT,eAAe,CAACC,SAAS,GAAGV,EAAE,CAACiB,IAAI,CAACC,UAAU,CAACX,QAAQ;MAC1EP,EAAE,CAACiB,IAAI,CAACC,UAAU,CAACL,eAAe,CAACH,SAAS,GAAGV,EAAE,CAACiB,IAAI,CAACC,UAAU,CAACP,QAAQ;MAC1EX,EAAE,CAACiB,IAAI,CAACC,UAAU,CAACH,gBAAgB,CAACL,SAAS,GAC3CV,EAAE,CAACiB,IAAI,CAACC,UAAU,CAACJ,SAAS;IAChC;EACF,CAAC,CAAC;EAnFFd,EAAE,CAACiB,IAAI,CAACC,UAAU,CAACf,aAAa,GAAGA,aAAa;AAAC"
}