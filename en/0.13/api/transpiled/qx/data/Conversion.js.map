{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "toString",
    "value",
    "TOSTRINGOPTIONS",
    "converter",
    "toNumber",
    "parseFloat",
    "TONUMBEROPTIONS",
    "toBoolean",
    "TOBOOLEANOPTIONS",
    "defer",
    "data",
    "Conversion"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/Conversion.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This class offers a set of default conversion methods and whole options\n * packs for {@link qx.data.SingleValueBinding}. The binding offers a conversion\n * itself if it can determinate which types should be used. In all other cases,\n * you can you this methods / options for the default conversion.\n */\nqx.Class.define(\"qx.data.Conversion\", {\n  statics: {\n    /**\n     * Converts the given value to a string via <code> + \"\"</code>.\n     *\n     * @param value {var} The value to convert.\n     * @return {String} The converted value.\n     */\n    toString(value) {\n      return value + \"\";\n    },\n\n    /**\n     * Options for the {@link qx.data.SingleValueBinding}\n     * containing the {@link #toString} converter.\n     */\n    TOSTRINGOPTIONS: { converter: null },\n\n    /**\n     * Converts the given value to a number via <code>parseFloat</code>.\n     *\n     * @param value {var} The value to convert.\n     * @return {Number} The converted value.\n     */\n    toNumber(value) {\n      return parseFloat(value);\n    },\n\n    /**\n     * Options for the {@link qx.data.SingleValueBinding}\n     * containing the {@link #toNumber} converter.\n     */\n    TONUMBEROPTIONS: { converter: null },\n\n    /**\n     * Converts the given value to a boolean via <code>!!value</code>.\n     *\n     * @param value {var} The value to convert.\n     * @return {Boolean} The converted value.\n     */\n    toBoolean(value) {\n      return !!value;\n    },\n\n    /**\n     * Options for the {@link qx.data.SingleValueBinding}\n     * containing the {@link #toBoolean} converter.\n     */\n    TOBOOLEANOPTIONS: { converter: null }\n  },\n\n  defer() {\n    // the converter need to be set in the defer because the reference to\n    // the converter function is not available during the class create\n    qx.data.Conversion.TOSTRINGOPTIONS.converter = qx.data.Conversion.toString;\n    qx.data.Conversion.TONUMBEROPTIONS.converter = qx.data.Conversion.toNumber;\n    qx.data.Conversion.TOBOOLEANOPTIONS.converter =\n      qx.data.Conversion.toBoolean;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oBAAhB,EAAsC;IACpCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;MACIC,QAPO,oBAOEC,KAPF,EAOS;QACd,OAAOA,KAAK,GAAG,EAAf;MACD,CATM;;MAWP;AACJ;AACA;AACA;MACIC,eAAe,EAAE;QAAEC,SAAS,EAAE;MAAb,CAfV;;MAiBP;AACJ;AACA;AACA;AACA;AACA;MACIC,QAvBO,oBAuBEH,KAvBF,EAuBS;QACd,OAAOI,UAAU,CAACJ,KAAD,CAAjB;MACD,CAzBM;;MA2BP;AACJ;AACA;AACA;MACIK,eAAe,EAAE;QAAEH,SAAS,EAAE;MAAb,CA/BV;;MAiCP;AACJ;AACA;AACA;AACA;AACA;MACII,SAvCO,qBAuCGN,KAvCH,EAuCU;QACf,OAAO,CAAC,CAACA,KAAT;MACD,CAzCM;;MA2CP;AACJ;AACA;AACA;MACIO,gBAAgB,EAAE;QAAEL,SAAS,EAAE;MAAb;IA/CX,CAD2B;IAmDpCM,KAnDoC,mBAmD5B;MACN;MACA;MACAhB,EAAE,CAACiB,IAAH,CAAQC,UAAR,CAAmBT,eAAnB,CAAmCC,SAAnC,GAA+CV,EAAE,CAACiB,IAAH,CAAQC,UAAR,CAAmBX,QAAlE;MACAP,EAAE,CAACiB,IAAH,CAAQC,UAAR,CAAmBL,eAAnB,CAAmCH,SAAnC,GAA+CV,EAAE,CAACiB,IAAH,CAAQC,UAAR,CAAmBP,QAAlE;MACAX,EAAE,CAACiB,IAAH,CAAQC,UAAR,CAAmBH,gBAAnB,CAAoCL,SAApC,GACEV,EAAE,CAACiB,IAAH,CAAQC,UAAR,CAAmBJ,SADrB;IAED;EA1DmC,CAAtC;EAxBAd,EAAE,CAACiB,IAAH,CAAQC,UAAR,CAAmBf,aAAnB,GAAmCA,aAAnC"
}