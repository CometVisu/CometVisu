{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "url",
    "delegate",
    "constructor",
    "call",
    "_marshaler",
    "data",
    "marshal",
    "Json",
    "_delegate",
    "setUrl",
    "events",
    "loaded",
    "parseError",
    "error",
    "properties",
    "model",
    "nullable",
    "event",
    "state",
    "check",
    "init",
    "apply",
    "members",
    "__request",
    "_applyUrl",
    "value",
    "old",
    "util",
    "AliasManager",
    "getInstance",
    "resolve",
    "ResourceManager",
    "toUri",
    "_createRequest",
    "_getRequest",
    "_setRequest",
    "request",
    "dispose",
    "req",
    "io",
    "Xhr",
    "setAccept",
    "setParser",
    "addListener",
    "_onSuccess",
    "_onParseError",
    "del",
    "lang",
    "Type",
    "isFunction",
    "configureRequest",
    "_onChangePhase",
    "_onFail",
    "send",
    "ev",
    "requestPhase",
    "getData",
    "requestPhaseToStorePhase",
    "opened",
    "sent",
    "loading",
    "success",
    "abort",
    "timeout",
    "statusError",
    "setState",
    "getTarget",
    "fireDataEvent",
    "isDisposed",
    "getResponse",
    "manipulateData",
    "toClass",
    "oldModel",
    "getModel",
    "setModel",
    "toModel",
    "reload",
    "getUrl",
    "destruct",
    "_disposeObjects",
    "_disposeSingletonObjects",
    "store"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/store/Json.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n     * Tristan Koch (tristankoch)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The JSON data store is responsible for fetching data from an url. The type\r\n * of the data has to be json.\r\n *\r\n * The loaded data will be parsed and saved in qooxdoo objects. Every value\r\n * of the loaded data will be stored in a qooxdoo property. The model classes\r\n * for the data will be created automatically.\r\n *\r\n * For the fetching itself it uses the {@link qx.io.request.Xhr} class and\r\n * for parsing the loaded javascript objects into qooxdoo objects, the\r\n * {@link qx.data.marshal.Json} class will be used.\r\n *\r\n * Please note that if you\r\n *\r\n * * upgrade from qooxdoo 1.4 or lower\r\n * * choose not to force the old transport\r\n * * use a delegate with qx.data.store.IStoreDelegate#configureRequest\r\n *\r\n * you probably need to change the implementation of your delegate to configure\r\n * the {@link qx.io.request.Xhr} request.\r\n *\r\n * This class only needs to be disposed if you want to abort any current I/O\r\n * request\r\n *\r\n */\r\nqx.Class.define(\"qx.data.store.Json\", {\r\n  extend: qx.core.Object,\r\n\r\n  /**\r\n   * @param url {String|null} The url where to find the data. The store starts\r\n   *   loading as soon as the URL is give. If you want to change some details\r\n   *   concerning the request, add null here and set the URL as soon as\r\n   *   everything is set up.\r\n   * @param delegate {Object?null} The delegate containing one of the methods\r\n   *   specified in {@link qx.data.store.IStoreDelegate}.\r\n   */\r\n  construct(url, delegate) {\r\n    super();\r\n\r\n    // store the marshaler and the delegate\r\n    this._marshaler = new qx.data.marshal.Json(delegate);\r\n    this._delegate = delegate;\r\n\r\n    if (url != null) {\r\n      this.setUrl(url);\r\n    }\r\n  },\r\n\r\n  events: {\r\n    /**\r\n     * Data event fired after the model has been created. The data will be the\r\n     * created model.\r\n     */\r\n    loaded: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * Fired when a parse error (i.e. broken JSON) occurred\r\n     * during the load. The data contains a hash of the original\r\n     * response and the parser error (exception object).\r\n     */\r\n    parseError: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * Fired when an error (aborted, timeout or failed) occurred\r\n     * during the load. The data contains the response of the request.\r\n     * If you want more details, use the {@link #changeState} event.\r\n     */\r\n    error: \"qx.event.type.Data\"\r\n  },\r\n\r\n  properties: {\r\n    /**\r\n     * Property for holding the loaded model instance.\r\n     */\r\n    model: {\r\n      nullable: true,\r\n      event: \"changeModel\"\r\n    },\r\n\r\n    /**\r\n     * The state of the request as an url. If you want to check if the request\r\n     * did it’s job, use, the {@link #changeState} event and check for one of the\r\n     * listed values.\r\n     */\r\n    state: {\r\n      check: [\r\n        \"configured\",\r\n        \"queued\",\r\n        \"sending\",\r\n        \"receiving\",\r\n        \"completed\",\r\n        \"aborted\",\r\n        \"timeout\",\r\n        \"failed\"\r\n      ],\r\n\r\n      init: \"configured\",\r\n      event: \"changeState\"\r\n    },\r\n\r\n    /**\r\n     * The url where the request should go to.\r\n     */\r\n    url: {\r\n      check: \"String\",\r\n      apply: \"_applyUrl\",\r\n      event: \"changeUrl\",\r\n      nullable: true\r\n    }\r\n  },\r\n\r\n  members: {\r\n    _marshaler: null,\r\n    _delegate: null,\r\n\r\n    __request: null,\r\n\r\n    // apply function\r\n    _applyUrl(value, old) {\r\n      if (value != null) {\r\n        // take care of the resource management\r\n        value = qx.util.AliasManager.getInstance().resolve(value);\r\n        value = qx.util.ResourceManager.getInstance().toUri(value);\r\n\r\n        this._createRequest(value);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get request\r\n     *\r\n     * @return {Object} The request.\r\n     */\r\n    _getRequest() {\r\n      return this.__request;\r\n    },\r\n\r\n    /**\r\n     * Set request.\r\n     *\r\n     * @param request {Object} The request.\r\n     */\r\n    _setRequest(request) {\r\n      this.__request = request;\r\n    },\r\n\r\n    /**\r\n     * Creates and sends a GET request with the given url.\r\n     *\r\n     * Listeners will be added to respond to the request’s \"success\",\r\n     * \"changePhase\" and \"fail\" event.\r\n     *\r\n     * @param url {String} The url for the request.\r\n     */\r\n    _createRequest(url) {\r\n      // dispose old request\r\n      if (this.__request) {\r\n        this.__request.dispose();\r\n        this.__request = null;\r\n      }\r\n\r\n      var req = new qx.io.request.Xhr(url);\r\n      this._setRequest(req);\r\n\r\n      // request json representation\r\n      req.setAccept(\"application/json\");\r\n\r\n      // parse as json no matter what content type is returned\r\n      req.setParser(\"json\");\r\n\r\n      // register the internal event before the user has the change to\r\n      // register its own event in the delegate\r\n      req.addListener(\"success\", this._onSuccess, this);\r\n      req.addListener(\"parseError\", this._onParseError, this);\r\n\r\n      // check for the request configuration hook\r\n      var del = this._delegate;\r\n      if (del && qx.lang.Type.isFunction(del.configureRequest)) {\r\n        this._delegate.configureRequest(req);\r\n      }\r\n\r\n      // map request phase to it’s own phase\r\n      req.addListener(\"changePhase\", this._onChangePhase, this);\r\n\r\n      // add failed, aborted and timeout listeners\r\n      req.addListener(\"fail\", this._onFail, this);\r\n\r\n      req.send();\r\n    },\r\n\r\n    /**\r\n     * Handler called when request phase changes.\r\n     *\r\n     * Sets the store’s state.\r\n     *\r\n     * @param ev {qx.event.type.Data} The request’s changePhase event.\r\n     */\r\n    _onChangePhase(ev) {\r\n      var requestPhase = ev.getData(),\r\n        requestPhaseToStorePhase = {},\r\n        state;\r\n\r\n      requestPhaseToStorePhase = {\r\n        opened: \"configured\",\r\n        sent: \"sending\",\r\n        loading: \"receiving\",\r\n        success: \"completed\",\r\n        abort: \"aborted\",\r\n        timeout: \"timeout\",\r\n        statusError: \"failed\"\r\n      };\r\n\r\n      state = requestPhaseToStorePhase[requestPhase];\r\n      if (state) {\r\n        this.setState(state);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handler called when not completing the request successfully.\r\n     *\r\n     * @param ev {qx.event.type.Event} The request’s fail event.\r\n     */\r\n    _onFail(ev) {\r\n      var req = ev.getTarget();\r\n      this.fireDataEvent(\"error\", req);\r\n    },\r\n\r\n    /**\r\n     * Handler called when not completing the request successfully because\r\n     * of parse errors.\r\n     *\r\n     * @param ev {qx.event.type.Data} Hash map containing the original 'request'\r\n     *                                and the original parser 'error' exception object.\r\n     */\r\n    _onParseError(ev) {\r\n      this.fireDataEvent(\"parseError\", ev.getData());\r\n    },\r\n\r\n    /**\r\n     * Handler for the completion of the requests. It invokes the creation of\r\n     * the needed classes and instances for the fetched data using\r\n     * {@link qx.data.marshal.Json}.\r\n     *\r\n     * @param ev {qx.event.type.Event} The request’s success event.\r\n     */\r\n    _onSuccess(ev) {\r\n      if (this.isDisposed()) {\r\n        return;\r\n      }\r\n\r\n      var req = ev.getTarget(),\r\n        data = req.getResponse();\r\n\r\n      // check for the data manipulation hook\r\n      var del = this._delegate;\r\n      if (del && qx.lang.Type.isFunction(del.manipulateData)) {\r\n        data = this._delegate.manipulateData(data);\r\n      }\r\n\r\n      // create the class\r\n      this._marshaler.toClass(data, true);\r\n\r\n      var oldModel = this.getModel();\r\n\r\n      // set the initial data\r\n      this.setModel(this._marshaler.toModel(data));\r\n\r\n      // get rid of the old model\r\n      if (oldModel && oldModel.dispose) {\r\n        oldModel.dispose();\r\n      }\r\n\r\n      // fire complete event\r\n      this.fireDataEvent(\"loaded\", this.getModel());\r\n\r\n      // get rid of the request object\r\n      if (this.__request) {\r\n        this.__request.dispose();\r\n        this.__request = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Reloads the data with the url set in the {@link #url} property.\r\n     */\r\n    reload() {\r\n      var url = this.getUrl();\r\n      if (url != null) {\r\n        this._createRequest(url);\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n   *****************************************************************************\r\n      DESTRUCT\r\n   *****************************************************************************\r\n   */\r\n\r\n  destruct() {\r\n    if (this.__request != null) {\r\n      this._disposeObjects(\"__request\");\r\n    }\r\n\r\n    // The marshaler internally uses the singleton pattern\r\n    // (constructor.$$instance.\r\n    this._disposeSingletonObjects(\"_marshaler\");\r\n    this._delegate = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}