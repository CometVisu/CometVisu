{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "data",
    "marshal",
    "MEventBubbling",
    "implement",
    "IListData",
    "construct",
    "param",
    "undefined",
    "__array",
    "arguments",
    "length",
    "i",
    "push",
    "Array",
    "lang",
    "clone",
    "dispose",
    "Error",
    "_applyEventPropagation",
    "__updateLength",
    "properties",
    "autoDisposeItems",
    "check",
    "init",
    "events",
    "change",
    "changeLength",
    "members",
    "concat",
    "array",
    "toNativeArray",
    "newArray",
    "join",
    "connector",
    "pop",
    "item",
    "_registerEventChaining",
    "fireDataEvent",
    "value",
    "name",
    "old",
    "start",
    "end",
    "type",
    "removed",
    "added",
    "varargs",
    "reverse",
    "oldArray",
    "__updateEventPropagation",
    "shift",
    "slice",
    "from",
    "to",
    "splice",
    "startIndex",
    "amount",
    "oldLength",
    "returnArray",
    "apply",
    "addedItems",
    "fromArguments",
    "Math",
    "max",
    "endIndex",
    "eventData",
    "replace",
    "src",
    "equals",
    "args",
    "getLength",
    "forEach",
    "sort",
    "func",
    "unshift",
    "toArray",
    "getItem",
    "index",
    "setItem",
    "oldItem",
    "indexOf",
    "lastIndexOf",
    "toString",
    "contains",
    "includes",
    "copy",
    "insertAt",
    "insertBefore",
    "before",
    "insertAfter",
    "after",
    "removeAt",
    "removeAll",
    "items",
    "append",
    "prototype",
    "exclude",
    "remove",
    "sum",
    "result",
    "min",
    "callback",
    "context",
    "element",
    "call",
    "filter",
    "self",
    "map",
    "find",
    "some",
    "every",
    "reduce",
    "initValue",
    "reduceRight",
    "destruct",
    "isAutoDisposeItems"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/Array.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The data array is a special array used in the data binding context of\n * qooxdoo. It does not extend the native array of JavaScript but its a wrapper\n * for it. All the native methods are included in the implementation and it\n * also fires events if the content or the length of the array changes in\n * any way. Also the <code>.length</code> property is available on the array.\n *\n * This class does not need to be disposed, unless you set the autoDisposeItems\n * property to true and want the items to be disposed.\n */\nqx.Class.define(\"qx.data.Array\", {\n  extend: qx.core.Object,\n  include: qx.data.marshal.MEventBubbling,\n  implement: [qx.data.IListData],\n\n  /**\n   * Creates a new instance of an array.\n   *\n   * @param param {var} The parameter can be some types.<br/>\n   *   Without a parameter a new blank array will be created.<br/>\n   *   If there is more than one parameter is given, the parameter will be\n   *   added directly to the new array.<br/>\n   *   If the parameter is a number, a new Array with the given length will be\n   *   created.<br/>\n   *   If the parameter is a JavaScript array, a new array containing the given\n   *   elements will be created.\n   */\n  construct(param) {\n    super();\n    // if no argument is given\n    if (param == undefined) {\n      this.__array = [];\n\n      // check for elements (create the array)\n    } else if (arguments.length > 1) {\n      // create an empty array and go through every argument and push it\n      this.__array = [];\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n      }\n\n      // check for a number (length)\n    } else if (typeof param == \"number\") {\n      this.__array = new Array(param);\n      // check for an array itself\n    } else if (param instanceof Array) {\n      this.__array = qx.lang.Array.clone(param);\n\n      // error case\n    } else {\n      this.__array = [];\n      this.dispose();\n      throw new Error(\"Type of the parameter not supported!\");\n    }\n\n    // propagate changes\n    for (var i = 0; i < this.__array.length; i++) {\n      this._applyEventPropagation(this.__array[i], null, i);\n    }\n\n    // update the length at startup\n    this.__updateLength();\n\n    // work against the console printout of the array\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this[0] = \"Please use 'toArray()' to see the content.\";\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Flag to set the dispose behavior of the array. If the property is set to\n     * <code>true</code>, the array will dispose its content on dispose, too.\n     */\n    autoDisposeItems: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * The change event which will be fired if there is a change in the array.\n     * The data contains a map with five key value pairs:\n     * <li>start: The start index of the change.</li>\n     * <li>end: The end index of the change.</li>\n     * <li>type: The type of the change as a String. This can be 'add',\n     * 'remove', 'order' or 'add/remove'</li>\n     * <li>added: The items which has been added (as a JavaScript array)</li>\n     * <li>removed: The items which has been removed (as a JavaScript array)</li>\n     */\n    change: \"qx.event.type.Data\",\n\n    /**\n     * The changeLength event will be fired every time the length of the\n     * array changes.\n     */\n    changeLength: \"qx.event.type.Data\"\n  },\n\n  members: {\n    // private members\n    __array: null,\n\n    /**\n     * Concatenates the current and the given array into a new one.\n     *\n     * @param array {qx.data.Array|Array} The javaScript array which should be concatenated\n     *   to the current array.\n     *\n     * @return {qx.data.Array} A new array containing the values of both former\n     *   arrays.\n     */\n    concat(array) {\n      array = qx.lang.Array.toNativeArray(array);\n      if (array) {\n        var newArray = this.__array.concat(array);\n      } else {\n        var newArray = this.__array.concat();\n      }\n      return new qx.data.Array(newArray);\n    },\n\n    /**\n     * Returns the array as a string using the given connector string to\n     * connect the values.\n     *\n     * @param connector {String} the string which should be used to past in\n     *  between of the array values.\n     *\n     * @return {String} The array as a string.\n     */\n    join(connector) {\n      return this.__array.join(connector);\n    },\n\n    /**\n     * Removes and returns the last element of the array.\n     * An change event will be fired.\n     *\n     * @return {var} The last element of the array.\n     */\n    pop() {\n      var item = this.__array.pop();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length - 1);\n      // fire change bubble event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: this.length + \"\",\n        old: [item],\n        item: this\n      });\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: this.length - 1,\n          end: this.length - 1,\n          type: \"remove\",\n          removed: [item],\n          added: []\n        },\n\n        null\n      );\n\n      return item;\n    },\n\n    /**\n     * Adds an element at the end of the array.\n     *\n     * @param varargs {var} Multiple elements. Every element will be added to\n     *   the end of the array. An change event will be fired.\n     *\n     * @return {Number} The new length of the array.\n     */\n    push(varargs) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n        this.__updateLength();\n        // apply to every pushed item an event listener for the bubbling\n        this._registerEventChaining(arguments[i], null, this.length - 1);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [arguments[i]],\n          name: this.length - 1 + \"\",\n          old: [],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: this.length - 1,\n            end: this.length - 1,\n            type: \"add\",\n            added: [arguments[i]],\n            removed: []\n          },\n\n          null\n        );\n      }\n      return this.length;\n    },\n\n    /**\n     * Reverses the order of the array. An change event will be fired.\n     */\n    reverse() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var oldArray = this.__array.concat();\n      this.__array.reverse();\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"order\",\n          added: [],\n          removed: []\n        },\n\n        null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.__array.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n    /**\n     * Removes the first element of the array and returns it. An change event\n     * will be fired.\n     *\n     * @return {var} the former first element.\n     */\n    shift() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var item = this.__array.shift();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length - 1);\n      // as every item has changed its position, we need to update the event bubbling\n      this.__updateEventPropagation(0, this.length);\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0\",\n        old: [item],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"remove\",\n          removed: [item],\n          added: []\n        },\n\n        null\n      );\n\n      return item;\n    },\n\n    /**\n     * Returns a new array based on the range specified by the parameters.\n     *\n     * @param from {Number} The start index.\n     * @param to {Number?null} The zero-based end index. <code>slice</code> extracts\n     *   up to but not including <code>to</code>. If omitted, slice extracts to the\n     *   end of the array.\n     *\n     * @return {qx.data.Array} A new array containing the given range of values.\n     */\n    slice(from, to) {\n      return new qx.data.Array(this.__array.slice(from, to));\n    },\n\n    /**\n     * Method to remove and add new elements to the array. A change event\n     * will be fired for every removal or addition unless the array is\n     * identical before and after splicing.\n     *\n     * @param startIndex {Integer} The index where the splice should start\n     * @param amount {Integer} Defines number of elements which will be removed\n     *   at the given position.\n     * @param varargs {var} All following parameters will be added at the given\n     *   position to the array.\n     * @return {qx.data.Array} An data array containing the removed elements.\n     *   Keep in to dispose this one, even if you don't use it!\n     */\n    splice(startIndex, amount, varargs) {\n      // store the old length\n      var oldLength = this.__array.length;\n\n      // invoke the slice on the array\n      var returnArray = this.__array.splice.apply(this.__array, arguments);\n\n      // fire a change event for the length\n      if (this.__array.length != oldLength) {\n        this.__updateLength();\n      } else if (amount == arguments.length - 2) {\n        // if we added as much items as we removed\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n        // check if the array content equals the content before the operation\n        for (var i = 0; i < addedItems.length; i++) {\n          if (addedItems[i] !== returnArray[i]) {\n            break;\n          }\n          // if all added and removed items are equal\n          if (i == addedItems.length - 1) {\n            // prevent all events and return a new array\n            return new qx.data.Array();\n          }\n        }\n      }\n      // fire an event for the change\n      var removed = amount > 0;\n      var added = arguments.length > 2;\n      if (removed || added) {\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n        let type;\n        let end;\n\n        if (returnArray.length == 0) {\n          type = \"add\";\n          end = startIndex + addedItems.length;\n        } else if (addedItems.length == 0) {\n          type = \"remove\";\n          end = this.length - 1;\n        } else {\n          type = \"add/remove\";\n          end =\n            startIndex + Math.max(addedItems.length, returnArray.length) - 1;\n        }\n\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: startIndex,\n            end: end,\n            type: type,\n            added: addedItems,\n            removed: returnArray\n          },\n\n          null\n        );\n      }\n\n      // remove the listeners first [BUG #7132]\n      for (var i = 0; i < returnArray.length; i++) {\n        this._registerEventChaining(null, returnArray[i], i);\n      }\n\n      // add listeners\n      for (var i = 2; i < arguments.length; i++) {\n        this._registerEventChaining(arguments[i], null, startIndex + (i - 2));\n      }\n      // apply event chaining for every item moved\n      this.__updateEventPropagation(\n        startIndex + (arguments.length - 2) - amount,\n        this.length\n      );\n\n      // fire the changeBubble event\n      if (removed || added) {\n        var value = [];\n        for (var i = 2; i < arguments.length; i++) {\n          value[i - 2] = arguments[i];\n        }\n        var endIndex = startIndex + Math.max(arguments.length - 3, amount - 1);\n        var name =\n          startIndex == endIndex ? endIndex : startIndex + \"-\" + endIndex;\n\n        var eventData = {\n          value: value,\n          name: name + \"\",\n          old: returnArray,\n          item: this\n        };\n\n        this.fireDataEvent(\"changeBubble\", eventData);\n      }\n      return new qx.data.Array(returnArray);\n    },\n\n    /**\n     * Efficiently replaces the array with the contents of src; this will suppress the\n     * change event if the array contents are the same, and will make sure that only\n     * one change event is fired\n     *\n     * @param src {qx.data.Array|Array} the new value to set the array to\n     */\n    replace(src) {\n      src = qx.lang.Array.toNativeArray(src);\n      if (this.equals(src)) {\n        return;\n      }\n      var args = [0, this.getLength()];\n      src.forEach(function (item) {\n        args.push(item);\n      });\n      this.splice.apply(this, args);\n    },\n\n    /**\n     * Sorts the array. If a function is given, this will be used to\n     * compare the items. <code>changeBubble</code> event will only be fired,\n     * if sorting result differs from original array.\n     *\n     * @param func {Function} A compare function comparing two parameters and\n     *   should return a number.\n     */\n    sort(func) {\n      // ignore if the array is empty\n      if (this.length == 0) {\n        return;\n      }\n      var oldArray = this.__array.concat();\n\n      this.__array.sort.apply(this.__array, arguments);\n\n      // prevent changeBubble event if nothing has been changed\n      if (qx.lang.Array.equals(this.__array, oldArray) === true) {\n        return;\n      }\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"order\",\n          added: [],\n          removed: []\n        },\n\n        null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n    /**\n     * Adds the given items to the beginning of the array. For every element,\n     * a change event will be fired.\n     *\n     * @param varargs {var} As many elements as you want to add to the beginning.\n     * @return {Integer} The new length of the array\n     */\n    unshift(varargs) {\n      for (var i = arguments.length - 1; i >= 0; i--) {\n        this.__array.unshift(arguments[i]);\n        this.__updateLength();\n        // apply to every item an event listener for the bubbling\n        this.__updateEventPropagation(0, this.length);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [this.__array[0]],\n          name: \"0\",\n          old: [this.__array[1]],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: 0,\n            end: this.length - 1,\n            type: \"add\",\n            added: [arguments[i]],\n            removed: []\n          },\n\n          null\n        );\n      }\n      return this.length;\n    },\n\n    /**\n     * Returns the list data as native array. Beware of the fact that the\n     * internal representation will be returned and any manipulation of that\n     * can cause a misbehavior of the array. This method should only be used for\n     * debugging purposes.\n     *\n     * @return {Array} The native array.\n     */\n    toArray() {\n      return this.__array;\n    },\n\n    /**\n     * Replacement function for the getting of the array value.\n     * array[0] should be array.getItem(0).\n     *\n     * @param index {Number} The index requested of the array element.\n     *\n     * @return {var} The element at the given index.\n     */\n    getItem(index) {\n      return this.__array[index];\n    },\n\n    /**\n     * Replacement function for the setting of an array value.\n     * array[0] = \"a\" should be array.setItem(0, \"a\").\n     * A change event will be fired if the value changes. Setting the same\n     * value again will not lead to a change event.\n     *\n     * @param index {Number} The index of the array element.\n     * @param item {var} The new item to set.\n     */\n    setItem(index, item) {\n      var oldItem = this.__array[index];\n      // ignore settings of already set items [BUG #4106]\n      if (oldItem === item) {\n        return;\n      }\n      this.__array[index] = item;\n      // set an event listener for the bubbling\n      this._registerEventChaining(item, oldItem, index);\n      // only update the length if its changed\n      if (this.length != this.__array.length) {\n        this.__updateLength();\n      }\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [item],\n        name: index + \"\",\n        old: [oldItem],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: index,\n          end: index,\n          type: \"add/remove\",\n          added: [item],\n          removed: [oldItem]\n        },\n\n        null\n      );\n    },\n\n    /**\n     * This method returns the current length stored under .length on each\n     * array.\n     *\n     * @return {Number} The current length of the array.\n     */\n    getLength() {\n      return this.length;\n    },\n\n    /**\n     * Returns the index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    indexOf(item) {\n      return this.__array.indexOf(item);\n    },\n\n    /**\n     * Returns the last index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    lastIndexOf(item) {\n      return this.__array.lastIndexOf(item);\n    },\n\n    /**\n     * Returns the toString of the original Array\n     * @return {String} The array as a string.\n     */\n    toString() {\n      if (this.__array != null) {\n        return this.__array.toString();\n      }\n      return \"\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       IMPLEMENTATION OF THE QX.LANG.ARRAY METHODS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @deprecated {6.0} Please use the include method instead\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    contains(item) {\n      return this.includes(item);\n    },\n\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    includes(item) {\n      return this.__array.indexOf(item) !== -1;\n    },\n\n    /**\n     * Return a copy of the given arr\n     *\n     * @return {qx.data.Array} copy of this\n     */\n    copy() {\n      return this.concat();\n    },\n\n    /**\n     * Insert an element at a given position.\n     *\n     * @param index {Integer} Position where to insert the item.\n     * @param item {var} The element to insert.\n     */\n    insertAt(index, item) {\n      this.splice(index, 0, item).dispose();\n    },\n\n    /**\n     * Insert an item into the array before a given item.\n     *\n     * @param before {var} Insert item before this object.\n     * @param item {var} The item to be inserted.\n     */\n    insertBefore(before, item) {\n      var index = this.indexOf(before);\n\n      if (index == -1) {\n        this.push(item);\n      } else {\n        this.splice(index, 0, item).dispose();\n      }\n    },\n\n    /**\n     * Insert an element into the array after a given item.\n     *\n     * @param after {var} Insert item after this object.\n     * @param item {var} Object to be inserted.\n     */\n    insertAfter(after, item) {\n      var index = this.indexOf(after);\n\n      if (index == -1 || index == this.length - 1) {\n        this.push(item);\n      } else {\n        this.splice(index + 1, 0, item).dispose();\n      }\n    },\n\n    /**\n     * Remove an element from the array at the given index.\n     *\n     * @param index {Integer} Index of the item to be removed.\n     * @return {var} The removed item.\n     */\n    removeAt(index) {\n      var returnArray = this.splice(index, 1);\n      var item = returnArray.getItem(0);\n      returnArray.dispose();\n      return item;\n    },\n\n    /**\n     * Remove all elements from the array.\n     *\n     * @return {Array} A native array containing the removed elements.\n     */\n    removeAll() {\n      // remove all possible added event listeners\n      for (var i = 0; i < this.__array.length; i++) {\n        this._registerEventChaining(null, this.__array[i], i);\n      }\n\n      // ignore if array is empty\n      if (this.getLength() == 0) {\n        return [];\n      }\n\n      // store the old data\n      var oldLength = this.getLength();\n      var items = this.__array.concat();\n\n      // change the length\n      this.__array.length = 0;\n      this.__updateLength();\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0-\" + (oldLength - 1),\n        old: items,\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: oldLength - 1,\n          type: \"remove\",\n          removed: items,\n          added: []\n        },\n\n        null\n      );\n\n      return items;\n    },\n\n    /**\n     * Append the items of the given array.\n     *\n     * @param array {Array|qx.data.IListData} The items of this array will\n     * be appended.\n     * @throws {Error} if the argument is not an array.\n     */\n    append(array) {\n      // qooxdoo array support\n      array = qx.lang.Array.toNativeArray(array);\n\n      // this check is important because opera throws an uncatchable error if\n      // apply is called without an array as argument.\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertArray(array, \"The parameter must be an array.\");\n      }\n\n      var oldLength = this.__array.length;\n      Array.prototype.push.apply(this.__array, array);\n\n      // add a listener to the new items\n      for (var i = 0; i < array.length; i++) {\n        this._registerEventChaining(array[i], null, oldLength + i);\n      }\n\n      var oldLength = this.length;\n      this.__updateLength();\n\n      // fire change bubbles\n      var name =\n        oldLength == this.length - 1\n          ? oldLength\n          : oldLength + \"-\" + (this.length - 1);\n      this.fireDataEvent(\"changeBubble\", {\n        value: array,\n        name: name + \"\",\n        old: [],\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: oldLength,\n          end: this.length - 1,\n          type: \"add\",\n          added: array,\n          removed: []\n        },\n\n        null\n      );\n    },\n\n    /**\n     * Removes all elements which are listed in the array.\n     *\n     * @param array {Array} the elements of this array will be excluded from this one\n     */\n    exclude(array) {\n      array = qx.lang.Array.toNativeArray(array);\n      array.forEach(function (item) {\n        this.remove(item);\n      }, this);\n    },\n\n    /**\n     * Remove the given item.\n     *\n     * @param item {var} Item to be removed from the array.\n     * @return {var} The removed item.\n     */\n    remove(item) {\n      var index = this.indexOf(item);\n\n      if (index != -1) {\n        this.splice(index, 1).dispose();\n        return item;\n      }\n    },\n\n    /**\n     * Check whether the given array has the same content as this.\n     * Checks only the equality of the arrays' content.\n     *\n     * @param array {qx.data.Array} The array to check.\n     * @return {Boolean} Whether the two arrays are equal.\n     */\n    equals(array) {\n      if (this.length !== array.length) {\n        return false;\n      }\n\n      array = qx.lang.Array.toNativeArray(array);\n      for (var i = 0; i < this.length; i++) {\n        if (this.getItem(i) !== array[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns the sum of all values in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number} The sum of all values.\n     */\n    sum() {\n      var result = 0;\n      for (var i = 0; i < this.length; i++) {\n        result += this.getItem(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Returns the highest value in the given array.\n     * Supports numeric values only.\n     *\n     * @return {Number | null} The highest of all values or undefined if the\n     *   array is empty.\n     */\n    max() {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++) {\n        if (this.getItem(i) > result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n    /**\n     * Returns the lowest value in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number | null} The lowest of all values or undefined\n     *   if the array is empty.\n     */\n    min() {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++) {\n        if (this.getItem(i) < result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n    /**\n     * Invokes the given function for every item in the array.\n     *\n     * @param callback {Function} The function which will be call for every\n     *   item in the array. It will be invoked with three parameters:\n     *   the item, the index and the array itself.\n     * @param context {var?} The context in which the callback will be invoked.\n     */\n    forEach(callback, context) {\n      this.__array.forEach((element, index) =>\n        callback.call(context, element, index, this)\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      Additional JS1.6 methods\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Creates a new array with all elements that pass the test implemented by\n     * the provided function. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing only the items\n     *  which passed the test.\n     */\n    filter(callback, self) {\n      return new qx.data.Array(this.__array.filter(callback, self));\n    },\n\n    /**\n     * Creates a new array with the results of calling a provided function on every\n     * element in this array. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The mapping function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing the new created items.\n     */\n    map(callback, self) {\n      return new qx.data.Array(this.__array.map(callback, self));\n    },\n\n    /**\n     * Finds the first matching element in the array which passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {var | undefined} The found item.\n     */\n    find(callback, self) {\n      return this.__array.find(callback, self);\n    },\n\n    /**\n     * Tests whether any element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if any element passed the test function.\n     */\n    some(callback, self) {\n      return this.__array.some(callback, self);\n    },\n\n    /**\n     * Tests whether every element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if every element passed the test function.\n     */\n    every(callback, self) {\n      return this.__array.every(callback, self);\n    },\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from left-to-right) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduce(callback, initValue) {\n      return this.__array.reduce(callback, initValue);\n    },\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from right-to-left) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduceRight(callback, initValue) {\n      return this.__array.reduceRight(callback, initValue);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL HELPERS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Internal function which updates the length property of the array.\n     * Every time the length will be updated, a {@link #changeLength} data\n     * event will be fired.\n     */\n    __updateLength() {\n      var oldLength = this.length;\n      this.length = this.__array.length;\n      this.fireDataEvent(\"changeLength\", this.length, oldLength);\n    },\n\n    /**\n     * Helper to update the event propagation for a range of items.\n     * @param from {Number} Start index.\n     * @param to {Number} End index.\n     */\n    __updateEventPropagation(from, to) {\n      for (var i = from; i < to; i++) {\n        this._registerEventChaining(this.__array[i], this.__array[i], i);\n      }\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n  */\n\n  destruct() {\n    for (var i = 0; i < this.__array.length; i++) {\n      var item = this.__array[i];\n      this._applyEventPropagation(null, item, i);\n\n      // dispose the items on auto dispose\n      if (this.isAutoDisposeItems() && item && item instanceof qx.core.Object) {\n        item.dispose();\n      }\n    }\n\n    this.__array = null;\n  }\n});\n"
  ],
  "mappings": "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"
}