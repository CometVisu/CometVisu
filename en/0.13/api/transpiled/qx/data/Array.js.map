{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "data",
    "marshal",
    "MEventBubbling",
    "implement",
    "IListData",
    "construct",
    "param",
    "undefined",
    "__array",
    "arguments",
    "length",
    "i",
    "push",
    "Array",
    "lang",
    "clone",
    "dispose",
    "Error",
    "_applyEventPropagation",
    "__updateLength",
    "properties",
    "autoDisposeItems",
    "check",
    "init",
    "events",
    "change",
    "changeLength",
    "members",
    "iterator",
    "index",
    "array",
    "next",
    "getLength",
    "done",
    "value",
    "getItem",
    "concat",
    "toNativeArray",
    "newArray",
    "join",
    "connector",
    "pop",
    "item",
    "_registerEventChaining",
    "fireDataEvent",
    "name",
    "old",
    "start",
    "end",
    "type",
    "removed",
    "added",
    "varargs",
    "reverse",
    "oldArray",
    "__updateEventPropagation",
    "shift",
    "slice",
    "from",
    "to",
    "splice",
    "startIndex",
    "amount",
    "oldLength",
    "returnArray",
    "apply",
    "addedItems",
    "fromArguments",
    "Math",
    "max",
    "endIndex",
    "eventData",
    "replace",
    "src",
    "equals",
    "args",
    "forEach",
    "sort",
    "func",
    "unshift",
    "toArray",
    "setItem",
    "oldItem",
    "indexOf",
    "lastIndexOf",
    "toString",
    "contains",
    "includes",
    "copy",
    "insertAt",
    "insertBefore",
    "before",
    "insertAfter",
    "after",
    "removeAt",
    "removeAll",
    "items",
    "append",
    "prototype",
    "exclude",
    "remove",
    "sum",
    "result",
    "min",
    "callback",
    "context",
    "element",
    "call",
    "filter",
    "self",
    "map",
    "find",
    "some",
    "every",
    "reduce",
    "initValue",
    "reduceRight",
    "destruct",
    "isAutoDisposeItems",
    "defer",
    "statics",
    "Symbol"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/Array.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The data array is a special array used in the data binding context of\n * qooxdoo. It does not extend the native array of JavaScript but its a wrapper\n * for it. All the native methods are included in the implementation and it\n * also fires events if the content or the length of the array changes in\n * any way. Also the <code>.length</code> property is available on the array.\n *\n * This class does not need to be disposed, unless you set the autoDisposeItems\n * property to true and want the items to be disposed.\n */\nqx.Class.define(\"qx.data.Array\", {\n  extend: qx.core.Object,\n  include: qx.data.marshal.MEventBubbling,\n  implement: [qx.data.IListData],\n\n  /**\n   * Creates a new instance of an array.\n   *\n   * @param param {var} The parameter can be some types.<br/>\n   *   Without a parameter a new blank array will be created.<br/>\n   *   If there is more than one parameter is given, the parameter will be\n   *   added directly to the new array.<br/>\n   *   If the parameter is a number, a new Array with the given length will be\n   *   created.<br/>\n   *   If the parameter is a JavaScript array, a new array containing the given\n   *   elements will be created.\n   */\n  construct(param) {\n    super();\n    // if no argument is given\n    if (param == undefined) {\n      this.__array = [];\n\n      // check for elements (create the array)\n    } else if (arguments.length > 1) {\n      // create an empty array and go through every argument and push it\n      this.__array = [];\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n      }\n\n      // check for a number (length)\n    } else if (typeof param == \"number\") {\n      this.__array = new Array(param);\n      // check for an array itself\n    } else if (param instanceof Array) {\n      this.__array = qx.lang.Array.clone(param);\n\n      // error case\n    } else {\n      this.__array = [];\n      this.dispose();\n      throw new Error(\"Type of the parameter not supported!\");\n    }\n\n    // propagate changes\n    for (var i = 0; i < this.__array.length; i++) {\n      this._applyEventPropagation(this.__array[i], null, i);\n    }\n\n    // update the length at startup\n    this.__updateLength();\n\n    // work against the console printout of the array\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this[0] = \"Please use 'toArray()' to see the content.\";\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Flag to set the dispose behavior of the array. If the property is set to\n     * <code>true</code>, the array will dispose its content on dispose, too.\n     */\n    autoDisposeItems: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * The change event which will be fired if there is a change in the array.\n     * The data contains a map with five key value pairs:\n     * <li>start: The start index of the change.</li>\n     * <li>end: The end index of the change.</li>\n     * <li>type: The type of the change as a String. This can be 'add',\n     * 'remove', 'order' or 'add/remove'</li>\n     * <li>added: The items which has been added (as a JavaScript array)</li>\n     * <li>removed: The items which has been removed (as a JavaScript array)</li>\n     */\n    change: \"qx.event.type.Data\",\n\n    /**\n     * The changeLength event will be fired every time the length of the\n     * array changes.\n     */\n    changeLength: \"qx.event.type.Data\"\n  },\n\n  members: {\n    // private members\n    __array: null,\n\n    /**\n     * Returns an iterator, ie an object which follows the \"Iterator Protocol\" so that\n     * arrays can be used natively in `for...of`.  See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n     *\n     * @returns {Iterator}\n     */\n    iterator() {\n      let index = 0;\n      let array = this;\n      return {\n        next: () => {\n          if (index >= this.getLength()) {\n            return { done: true };\n          }\n          return {\n            value: this.getItem(index++)\n          };\n        }\n      };\n    },\n\n    /**\n     * Concatenates the current and the given array into a new one.\n     *\n     * @param array {qx.data.Array|Array} The javaScript array which should be concatenated\n     *   to the current array.\n     *\n     * @return {qx.data.Array} A new array containing the values of both former\n     *   arrays.\n     */\n    concat(array) {\n      array = qx.lang.Array.toNativeArray(array);\n      if (array) {\n        var newArray = this.__array.concat(array);\n      } else {\n        var newArray = this.__array.concat();\n      }\n      return new qx.data.Array(newArray);\n    },\n\n    /**\n     * Returns the array as a string using the given connector string to\n     * connect the values.\n     *\n     * @param connector {String} the string which should be used to past in\n     *  between of the array values.\n     *\n     * @return {String} The array as a string.\n     */\n    join(connector) {\n      return this.__array.join(connector);\n    },\n\n    /**\n     * Removes and returns the last element of the array.\n     * An change event will be fired.\n     *\n     * @return {var} The last element of the array.\n     */\n    pop() {\n      var item = this.__array.pop();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length - 1);\n      // fire change bubble event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: this.length + \"\",\n        old: [item],\n        item: this\n      });\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: this.length - 1,\n          end: this.length - 1,\n          type: \"remove\",\n          removed: [item],\n          added: []\n        },\n\n        null\n      );\n\n      return item;\n    },\n\n    /**\n     * Adds an element at the end of the array.\n     *\n     * @param varargs {var} Multiple elements. Every element will be added to\n     *   the end of the array. An change event will be fired.\n     *\n     * @return {Number} The new length of the array.\n     */\n    push(varargs) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n        this.__updateLength();\n        // apply to every pushed item an event listener for the bubbling\n        this._registerEventChaining(arguments[i], null, this.length - 1);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [arguments[i]],\n          name: this.length - 1 + \"\",\n          old: [],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: this.length - 1,\n            end: this.length - 1,\n            type: \"add\",\n            added: [arguments[i]],\n            removed: []\n          },\n\n          null\n        );\n      }\n      return this.length;\n    },\n\n    /**\n     * Reverses the order of the array. An change event will be fired.\n     */\n    reverse() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var oldArray = this.__array.concat();\n      this.__array.reverse();\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"order\",\n          added: [],\n          removed: []\n        },\n\n        null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.__array.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n    /**\n     * Removes the first element of the array and returns it. An change event\n     * will be fired.\n     *\n     * @return {var} the former first element.\n     */\n    shift() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var item = this.__array.shift();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length - 1);\n      // as every item has changed its position, we need to update the event bubbling\n      this.__updateEventPropagation(0, this.length);\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0\",\n        old: [item],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"remove\",\n          removed: [item],\n          added: []\n        },\n\n        null\n      );\n\n      return item;\n    },\n\n    /**\n     * Returns a new array based on the range specified by the parameters.\n     *\n     * @param from {Number} The start index.\n     * @param to {Number?null} The zero-based end index. <code>slice</code> extracts\n     *   up to but not including <code>to</code>. If omitted, slice extracts to the\n     *   end of the array.\n     *\n     * @return {qx.data.Array} A new array containing the given range of values.\n     */\n    slice(from, to) {\n      return new qx.data.Array(this.__array.slice(from, to));\n    },\n\n    /**\n     * Method to remove and add new elements to the array. A change event\n     * will be fired for every removal or addition unless the array is\n     * identical before and after splicing.\n     *\n     * @param startIndex {Integer} The index where the splice should start\n     * @param amount {Integer} Defines number of elements which will be removed\n     *   at the given position.\n     * @param varargs {var} All following parameters will be added at the given\n     *   position to the array.\n     * @return {qx.data.Array} An data array containing the removed elements.\n     *   Keep in to dispose this one, even if you don't use it!\n     */\n    splice(startIndex, amount, varargs) {\n      // store the old length\n      var oldLength = this.__array.length;\n\n      // invoke the slice on the array\n      var returnArray = this.__array.splice.apply(this.__array, arguments);\n\n      // fire a change event for the length\n      if (this.__array.length != oldLength) {\n        this.__updateLength();\n      } else if (amount == arguments.length - 2) {\n        // if we added as much items as we removed\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n        // check if the array content equals the content before the operation\n        for (var i = 0; i < addedItems.length; i++) {\n          if (addedItems[i] !== returnArray[i]) {\n            break;\n          }\n          // if all added and removed items are equal\n          if (i == addedItems.length - 1) {\n            // prevent all events and return a new array\n            return new qx.data.Array();\n          }\n        }\n      }\n      // fire an event for the change\n      var removed = amount > 0;\n      var added = arguments.length > 2;\n      if (removed || added) {\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n        let type;\n        let end;\n\n        if (returnArray.length == 0) {\n          type = \"add\";\n          end = startIndex + addedItems.length;\n        } else if (addedItems.length == 0) {\n          type = \"remove\";\n          end = this.length - 1;\n        } else {\n          type = \"add/remove\";\n          end =\n            startIndex + Math.max(addedItems.length, returnArray.length) - 1;\n        }\n\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: startIndex,\n            end: end,\n            type: type,\n            added: addedItems,\n            removed: returnArray\n          },\n\n          null\n        );\n      }\n\n      // remove the listeners first [BUG #7132]\n      for (var i = 0; i < returnArray.length; i++) {\n        this._registerEventChaining(null, returnArray[i], i);\n      }\n\n      // add listeners\n      for (var i = 2; i < arguments.length; i++) {\n        this._registerEventChaining(arguments[i], null, startIndex + (i - 2));\n      }\n      // apply event chaining for every item moved\n      this.__updateEventPropagation(\n        startIndex + (arguments.length - 2) - amount,\n        this.length\n      );\n\n      // fire the changeBubble event\n      if (removed || added) {\n        var value = [];\n        for (var i = 2; i < arguments.length; i++) {\n          value[i - 2] = arguments[i];\n        }\n        var endIndex = startIndex + Math.max(arguments.length - 3, amount - 1);\n        var name =\n          startIndex == endIndex ? endIndex : startIndex + \"-\" + endIndex;\n\n        var eventData = {\n          value: value,\n          name: name + \"\",\n          old: returnArray,\n          item: this\n        };\n\n        this.fireDataEvent(\"changeBubble\", eventData);\n      }\n      return new qx.data.Array(returnArray);\n    },\n\n    /**\n     * Efficiently replaces the array with the contents of src; this will suppress the\n     * change event if the array contents are the same, and will make sure that only\n     * one change event is fired\n     *\n     * @param src {qx.data.Array|Array} the new value to set the array to\n     */\n    replace(src) {\n      src = qx.lang.Array.toNativeArray(src);\n      if (this.equals(src)) {\n        return;\n      }\n      var args = [0, this.getLength()];\n      src.forEach(function (item) {\n        args.push(item);\n      });\n      this.splice.apply(this, args);\n    },\n\n    /**\n     * Sorts the array. If a function is given, this will be used to\n     * compare the items. <code>changeBubble</code> event will only be fired,\n     * if sorting result differs from original array.\n     *\n     * @param func {Function} A compare function comparing two parameters and\n     *   should return a number.\n     */\n    sort(func) {\n      // ignore if the array is empty\n      if (this.length == 0) {\n        return;\n      }\n      var oldArray = this.__array.concat();\n\n      this.__array.sort.apply(this.__array, arguments);\n\n      // prevent changeBubble event if nothing has been changed\n      if (qx.lang.Array.equals(this.__array, oldArray) === true) {\n        return;\n      }\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"order\",\n          added: [],\n          removed: []\n        },\n\n        null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n    /**\n     * Adds the given items to the beginning of the array. For every element,\n     * a change event will be fired.\n     *\n     * @param varargs {var} As many elements as you want to add to the beginning.\n     * @return {Integer} The new length of the array\n     */\n    unshift(varargs) {\n      for (var i = arguments.length - 1; i >= 0; i--) {\n        this.__array.unshift(arguments[i]);\n        this.__updateLength();\n        // apply to every item an event listener for the bubbling\n        this.__updateEventPropagation(0, this.length);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [this.__array[0]],\n          name: \"0\",\n          old: [this.__array[1]],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: 0,\n            end: this.length - 1,\n            type: \"add\",\n            added: [arguments[i]],\n            removed: []\n          },\n\n          null\n        );\n      }\n      return this.length;\n    },\n\n    /**\n     * Returns the list data as native array. Beware of the fact that the\n     * internal representation will be returned and any manipulation of that\n     * can cause a misbehavior of the array. This method should only be used for\n     * debugging purposes.\n     *\n     * @return {Array} The native array.\n     */\n    toArray() {\n      return this.__array;\n    },\n\n    /**\n     * Replacement function for the getting of the array value.\n     * array[0] should be array.getItem(0).\n     *\n     * @param index {Number} The index requested of the array element.\n     *\n     * @return {var} The element at the given index.\n     */\n    getItem(index) {\n      return this.__array[index];\n    },\n\n    /**\n     * Replacement function for the setting of an array value.\n     * array[0] = \"a\" should be array.setItem(0, \"a\").\n     * A change event will be fired if the value changes. Setting the same\n     * value again will not lead to a change event.\n     *\n     * @param index {Number} The index of the array element.\n     * @param item {var} The new item to set.\n     */\n    setItem(index, item) {\n      var oldItem = this.__array[index];\n      // ignore settings of already set items [BUG #4106]\n      if (oldItem === item) {\n        return;\n      }\n      this.__array[index] = item;\n      // set an event listener for the bubbling\n      this._registerEventChaining(item, oldItem, index);\n      // only update the length if its changed\n      if (this.length != this.__array.length) {\n        this.__updateLength();\n      }\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [item],\n        name: index + \"\",\n        old: [oldItem],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: index,\n          end: index,\n          type: \"add/remove\",\n          added: [item],\n          removed: [oldItem]\n        },\n\n        null\n      );\n    },\n\n    /**\n     * This method returns the current length stored under .length on each\n     * array.\n     *\n     * @return {Number} The current length of the array.\n     */\n    getLength() {\n      return this.length;\n    },\n\n    /**\n     * Returns the index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    indexOf(item) {\n      return this.__array.indexOf(item);\n    },\n\n    /**\n     * Returns the last index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    lastIndexOf(item) {\n      return this.__array.lastIndexOf(item);\n    },\n\n    /**\n     * Returns the toString of the original Array\n     * @return {String} The array as a string.\n     */\n    toString() {\n      if (this.__array != null) {\n        return this.__array.toString();\n      }\n      return \"\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       IMPLEMENTATION OF THE QX.LANG.ARRAY METHODS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @deprecated {6.0} Please use the include method instead\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    contains(item) {\n      return this.includes(item);\n    },\n\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    includes(item) {\n      return this.__array.indexOf(item) !== -1;\n    },\n\n    /**\n     * Return a copy of the given arr\n     *\n     * @return {qx.data.Array} copy of this\n     */\n    copy() {\n      return this.concat();\n    },\n\n    /**\n     * Insert an element at a given position.\n     *\n     * @param index {Integer} Position where to insert the item.\n     * @param item {var} The element to insert.\n     */\n    insertAt(index, item) {\n      this.splice(index, 0, item).dispose();\n    },\n\n    /**\n     * Insert an item into the array before a given item.\n     *\n     * @param before {var} Insert item before this object.\n     * @param item {var} The item to be inserted.\n     */\n    insertBefore(before, item) {\n      var index = this.indexOf(before);\n\n      if (index == -1) {\n        this.push(item);\n      } else {\n        this.splice(index, 0, item).dispose();\n      }\n    },\n\n    /**\n     * Insert an element into the array after a given item.\n     *\n     * @param after {var} Insert item after this object.\n     * @param item {var} Object to be inserted.\n     */\n    insertAfter(after, item) {\n      var index = this.indexOf(after);\n\n      if (index == -1 || index == this.length - 1) {\n        this.push(item);\n      } else {\n        this.splice(index + 1, 0, item).dispose();\n      }\n    },\n\n    /**\n     * Remove an element from the array at the given index.\n     *\n     * @param index {Integer} Index of the item to be removed.\n     * @return {var} The removed item.\n     */\n    removeAt(index) {\n      var returnArray = this.splice(index, 1);\n      var item = returnArray.getItem(0);\n      returnArray.dispose();\n      return item;\n    },\n\n    /**\n     * Remove all elements from the array.\n     *\n     * @return {Array} A native array containing the removed elements.\n     */\n    removeAll() {\n      // remove all possible added event listeners\n      for (var i = 0; i < this.__array.length; i++) {\n        this._registerEventChaining(null, this.__array[i], i);\n      }\n\n      // ignore if array is empty\n      if (this.getLength() == 0) {\n        return [];\n      }\n\n      // store the old data\n      var oldLength = this.getLength();\n      var items = this.__array.concat();\n\n      // change the length\n      this.__array.length = 0;\n      this.__updateLength();\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0-\" + (oldLength - 1),\n        old: items,\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: oldLength - 1,\n          type: \"remove\",\n          removed: items,\n          added: []\n        },\n\n        null\n      );\n\n      return items;\n    },\n\n    /**\n     * Append the items of the given array.\n     *\n     * @param array {Array|qx.data.IListData} The items of this array will\n     * be appended.\n     * @throws {Error} if the argument is not an array.\n     */\n    append(array) {\n      // qooxdoo array support\n      array = qx.lang.Array.toNativeArray(array);\n\n      // this check is important because opera throws an uncatchable error if\n      // apply is called without an array as argument.\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertArray(array, \"The parameter must be an array.\");\n      }\n\n      var oldLength = this.__array.length;\n      Array.prototype.push.apply(this.__array, array);\n\n      // add a listener to the new items\n      for (var i = 0; i < array.length; i++) {\n        this._registerEventChaining(array[i], null, oldLength + i);\n      }\n\n      var oldLength = this.length;\n      this.__updateLength();\n\n      // fire change bubbles\n      var name =\n        oldLength == this.length - 1\n          ? oldLength\n          : oldLength + \"-\" + (this.length - 1);\n      this.fireDataEvent(\"changeBubble\", {\n        value: array,\n        name: name + \"\",\n        old: [],\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: oldLength,\n          end: this.length - 1,\n          type: \"add\",\n          added: array,\n          removed: []\n        },\n\n        null\n      );\n    },\n\n    /**\n     * Removes all elements which are listed in the array.\n     *\n     * @param array {Array} the elements of this array will be excluded from this one\n     */\n    exclude(array) {\n      array = qx.lang.Array.toNativeArray(array);\n      array.forEach(function (item) {\n        this.remove(item);\n      }, this);\n    },\n\n    /**\n     * Remove the given item.\n     *\n     * @param item {var} Item to be removed from the array.\n     * @return {var} The removed item.\n     */\n    remove(item) {\n      var index = this.indexOf(item);\n\n      if (index != -1) {\n        this.splice(index, 1).dispose();\n        return item;\n      }\n    },\n\n    /**\n     * Check whether the given array has the same content as this.\n     * Checks only the equality of the arrays' content.\n     *\n     * @param array {qx.data.Array} The array to check.\n     * @return {Boolean} Whether the two arrays are equal.\n     */\n    equals(array) {\n      if (this.length !== array.length) {\n        return false;\n      }\n\n      array = qx.lang.Array.toNativeArray(array);\n      for (var i = 0; i < this.length; i++) {\n        if (this.getItem(i) !== array[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns the sum of all values in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number} The sum of all values.\n     */\n    sum() {\n      var result = 0;\n      for (var i = 0; i < this.length; i++) {\n        result += this.getItem(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Returns the highest value in the given array.\n     * Supports numeric values only.\n     *\n     * @return {Number|null} The highest of all values or undefined if the\n     *   array is empty.\n     */\n    max() {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++) {\n        if (this.getItem(i) > result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n    /**\n     * Returns the lowest value in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number|null} The lowest of all values or undefined\n     *   if the array is empty.\n     */\n    min() {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++) {\n        if (this.getItem(i) < result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n    /**\n     * Invokes the given function for every item in the array.\n     *\n     * @param callback {Function} The function which will be call for every\n     *   item in the array. It will be invoked with three parameters:\n     *   the item, the index and the array itself.\n     * @param context {var?} The context in which the callback will be invoked.\n     */\n    forEach(callback, context) {\n      this.__array.forEach((element, index) =>\n        callback.call(context, element, index, this)\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      Additional JS1.6 methods\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Creates a new array with all elements that pass the test implemented by\n     * the provided function. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing only the items\n     *  which passed the test.\n     */\n    filter(callback, self) {\n      return new qx.data.Array(this.__array.filter(callback, self));\n    },\n\n    /**\n     * Creates a new array with the results of calling a provided function on every\n     * element in this array. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The mapping function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing the new created items.\n     */\n    map(callback, self) {\n      return new qx.data.Array(this.__array.map(callback, self));\n    },\n\n    /**\n     * Finds the first matching element in the array which passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {var|undefined} The found item.\n     */\n    find(callback, self) {\n      return this.__array.find(callback, self);\n    },\n\n    /**\n     * Tests whether any element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if any element passed the test function.\n     */\n    some(callback, self) {\n      return this.__array.some(callback, self);\n    },\n\n    /**\n     * Tests whether every element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if every element passed the test function.\n     */\n    every(callback, self) {\n      return this.__array.every(callback, self);\n    },\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from left-to-right) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduce(callback, initValue) {\n      return this.__array.reduce(callback, initValue);\n    },\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from right-to-left) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduceRight(callback, initValue) {\n      return this.__array.reduceRight(callback, initValue);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL HELPERS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Internal function which updates the length property of the array.\n     * Every time the length will be updated, a {@link #changeLength} data\n     * event will be fired.\n     */\n    __updateLength() {\n      var oldLength = this.length;\n      this.length = this.__array.length;\n      this.fireDataEvent(\"changeLength\", this.length, oldLength);\n    },\n\n    /**\n     * Helper to update the event propagation for a range of items.\n     * @param from {Number} Start index.\n     * @param to {Number} End index.\n     */\n    __updateEventPropagation(from, to) {\n      for (var i = from; i < to; i++) {\n        this._registerEventChaining(this.__array[i], this.__array[i], i);\n      }\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n  */\n\n  destruct() {\n    for (var i = 0; i < this.__array.length; i++) {\n      var item = this.__array[i];\n      this._applyEventPropagation(null, item, i);\n\n      // dispose the items on auto dispose\n      if (this.isAutoDisposeItems() && item && item instanceof qx.core.Object) {\n        item.dispose();\n      }\n    }\n\n    this.__array = null;\n  },\n\n  defer(statics) {\n    statics.prototype[Symbol.iterator] = function () {\n      return this.iterator();\n    };\n  }\n});\n"
  ],
  "mappings": "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"
}