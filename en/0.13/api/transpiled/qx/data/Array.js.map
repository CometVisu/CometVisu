{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "data",
    "marshal",
    "MEventBubbling",
    "implement",
    "IListData",
    "construct",
    "param",
    "constructor",
    "call",
    "undefined",
    "__array",
    "arguments",
    "length",
    "i",
    "push",
    "Array",
    "lang",
    "clone",
    "dispose",
    "Error",
    "_applyEventPropagation",
    "__updateLength",
    "properties",
    "autoDisposeItems",
    "check",
    "init",
    "events",
    "change",
    "changeLength",
    "members",
    "iterator",
    "_this",
    "index",
    "array",
    "next",
    "getLength",
    "done",
    "value",
    "getItem",
    "concat",
    "toNativeArray",
    "newArray",
    "join",
    "connector",
    "pop",
    "item",
    "_registerEventChaining",
    "fireDataEvent",
    "name",
    "old",
    "start",
    "end",
    "type",
    "removed",
    "added",
    "varargs",
    "reverse",
    "oldArray",
    "__updateEventPropagation",
    "shift",
    "slice",
    "from",
    "to",
    "splice",
    "startIndex",
    "amount",
    "oldLength",
    "returnArray",
    "apply",
    "addedItems",
    "fromArguments",
    "Math",
    "max",
    "endIndex",
    "eventData",
    "replace",
    "src",
    "equals",
    "args",
    "forEach",
    "sort",
    "func",
    "unshift",
    "toArray",
    "setItem",
    "oldItem",
    "indexOf",
    "lastIndexOf",
    "toString",
    "contains",
    "includes",
    "copy",
    "insertAt",
    "insertBefore",
    "before",
    "insertAfter",
    "after",
    "removeAt",
    "removeAll",
    "items",
    "append",
    "prototype",
    "exclude",
    "remove",
    "sum",
    "result",
    "min",
    "callback",
    "context",
    "_this2",
    "element",
    "filter",
    "self",
    "map",
    "find",
    "some",
    "every",
    "reduce",
    "initValue",
    "reduceRight",
    "__P_178_1",
    "__P_178_2",
    "destruct",
    "isAutoDisposeItems",
    "defer",
    "statics",
    "Symbol"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/data/Array.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The data array is a special array used in the data binding context of\r\n * qooxdoo. It does not extend the native array of JavaScript but its a wrapper\r\n * for it. All the native methods are included in the implementation and it\r\n * also fires events if the content or the length of the array changes in\r\n * any way. Also the <code>.length</code> property is available on the array.\r\n *\r\n * This class does not need to be disposed, unless you set the autoDisposeItems\r\n * property to true and want the items to be disposed.\r\n */\r\nqx.Class.define(\"qx.data.Array\", {\r\n  extend: qx.core.Object,\r\n  include: qx.data.marshal.MEventBubbling,\r\n  implement: [qx.data.IListData],\r\n\r\n  /**\r\n   * Creates a new instance of an array.\r\n   *\r\n   * @param param {var} The parameter can be some types.<br/>\r\n   *   Without a parameter a new blank array will be created.<br/>\r\n   *   If there is more than one parameter is given, the parameter will be\r\n   *   added directly to the new array.<br/>\r\n   *   If the parameter is a number, a new Array with the given length will be\r\n   *   created.<br/>\r\n   *   If the parameter is a JavaScript array, a new array containing the given\r\n   *   elements will be created.\r\n   */\r\n  construct(param) {\r\n    super();\r\n    // if no argument is given\r\n    if (param == undefined) {\r\n      this.__array = [];\r\n\r\n      // check for elements (create the array)\r\n    } else if (arguments.length > 1) {\r\n      // create an empty array and go through every argument and push it\r\n      this.__array = [];\r\n      for (var i = 0; i < arguments.length; i++) {\r\n        this.__array.push(arguments[i]);\r\n      }\r\n\r\n      // check for a number (length)\r\n    } else if (typeof param == \"number\") {\r\n      this.__array = new Array(param);\r\n      // check for an array itself\r\n    } else if (param instanceof Array) {\r\n      this.__array = qx.lang.Array.clone(param);\r\n\r\n      // error case\r\n    } else {\r\n      this.__array = [];\r\n      this.dispose();\r\n      throw new Error(\"Type of the parameter not supported!\");\r\n    }\r\n\r\n    // propagate changes\r\n    for (var i = 0; i < this.__array.length; i++) {\r\n      this._applyEventPropagation(this.__array[i], null, i);\r\n    }\r\n\r\n    // update the length at startup\r\n    this.__updateLength();\r\n\r\n    // work against the console printout of the array\r\n    if (qx.core.Environment.get(\"qx.debug\")) {\r\n      this[0] = \"Please use 'toArray()' to see the content.\";\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * Flag to set the dispose behavior of the array. If the property is set to\r\n     * <code>true</code>, the array will dispose its content on dispose, too.\r\n     */\r\n    autoDisposeItems: {\r\n      check: \"Boolean\",\r\n      init: false\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /**\r\n     * The change event which will be fired if there is a change in the array.\r\n     * The data contains a map with five key value pairs:\r\n     * <li>start: The start index of the change.</li>\r\n     * <li>end: The end index of the change.</li>\r\n     * <li>type: The type of the change as a String. This can be 'add',\r\n     * 'remove', 'order' or 'add/remove'</li>\r\n     * <li>added: The items which has been added (as a JavaScript array)</li>\r\n     * <li>removed: The items which has been removed (as a JavaScript array)</li>\r\n     */\r\n    change: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * The changeLength event will be fired every time the length of the\r\n     * array changes.\r\n     */\r\n    changeLength: \"qx.event.type.Data\"\r\n  },\r\n\r\n  members: {\r\n    // private members\r\n    __array: null,\r\n\r\n    /**\r\n     * Returns an iterator, ie an object which follows the \"Iterator Protocol\" so that\r\n     * arrays can be used natively in `for...of`.  See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n     *\r\n     * @returns {Iterator}\r\n     */\r\n    iterator() {\r\n      let index = 0;\r\n      let array = this;\r\n      return {\r\n        next: () => {\r\n          if (index >= this.getLength()) {\r\n            return { done: true };\r\n          }\r\n          return {\r\n            value: this.getItem(index++)\r\n          };\r\n        }\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Concatenates the current and the given array into a new one.\r\n     *\r\n     * @param array {qx.data.Array|Array} The javaScript array which should be concatenated\r\n     *   to the current array.\r\n     *\r\n     * @return {qx.data.Array} A new array containing the values of both former\r\n     *   arrays.\r\n     */\r\n    concat(array) {\r\n      array = qx.lang.Array.toNativeArray(array);\r\n      if (array) {\r\n        var newArray = this.__array.concat(array);\r\n      } else {\r\n        var newArray = this.__array.concat();\r\n      }\r\n      return new qx.data.Array(newArray);\r\n    },\r\n\r\n    /**\r\n     * Returns the array as a string using the given connector string to\r\n     * connect the values.\r\n     *\r\n     * @param connector {String} the string which should be used to past in\r\n     *  between of the array values.\r\n     *\r\n     * @return {String} The array as a string.\r\n     */\r\n    join(connector) {\r\n      return this.__array.join(connector);\r\n    },\r\n\r\n    /**\r\n     * Removes and returns the last element of the array.\r\n     * An change event will be fired.\r\n     *\r\n     * @return {var} The last element of the array.\r\n     */\r\n    pop() {\r\n      var item = this.__array.pop();\r\n      this.__updateLength();\r\n      // remove the possible added event listener\r\n      this._registerEventChaining(null, item, this.length - 1);\r\n      // fire change bubble event\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: [],\r\n        name: this.length + \"\",\r\n        old: [item],\r\n        item: this\r\n      });\r\n\r\n      this.fireDataEvent(\r\n        \"change\",\r\n        {\r\n          start: this.length - 1,\r\n          end: this.length - 1,\r\n          type: \"remove\",\r\n          removed: [item],\r\n          added: []\r\n        },\r\n\r\n        null\r\n      );\r\n\r\n      return item;\r\n    },\r\n\r\n    /**\r\n     * Adds an element at the end of the array.\r\n     *\r\n     * @param varargs {var} Multiple elements. Every element will be added to\r\n     *   the end of the array. An change event will be fired.\r\n     *\r\n     * @return {Number} The new length of the array.\r\n     */\r\n    push(varargs) {\r\n      for (var i = 0; i < arguments.length; i++) {\r\n        this.__array.push(arguments[i]);\r\n        this.__updateLength();\r\n        // apply to every pushed item an event listener for the bubbling\r\n        this._registerEventChaining(arguments[i], null, this.length - 1);\r\n\r\n        // fire change bubbles event\r\n        this.fireDataEvent(\"changeBubble\", {\r\n          value: [arguments[i]],\r\n          name: this.length - 1 + \"\",\r\n          old: [],\r\n          item: this\r\n        });\r\n\r\n        // fire change event\r\n        this.fireDataEvent(\r\n          \"change\",\r\n          {\r\n            start: this.length - 1,\r\n            end: this.length - 1,\r\n            type: \"add\",\r\n            added: [arguments[i]],\r\n            removed: []\r\n          },\r\n\r\n          null\r\n        );\r\n      }\r\n      return this.length;\r\n    },\r\n\r\n    /**\r\n     * Reverses the order of the array. An change event will be fired.\r\n     */\r\n    reverse() {\r\n      // ignore on empty arrays\r\n      if (this.length == 0) {\r\n        return;\r\n      }\r\n\r\n      var oldArray = this.__array.concat();\r\n      this.__array.reverse();\r\n\r\n      this.__updateEventPropagation(0, this.length);\r\n\r\n      this.fireDataEvent(\r\n        \"change\",\r\n        {\r\n          start: 0,\r\n          end: this.length - 1,\r\n          type: \"order\",\r\n          added: [],\r\n          removed: []\r\n        },\r\n\r\n        null\r\n      );\r\n\r\n      // fire change bubbles event\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: this.__array,\r\n        name: \"0-\" + (this.__array.length - 1),\r\n        old: oldArray,\r\n        item: this\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Removes the first element of the array and returns it. An change event\r\n     * will be fired.\r\n     *\r\n     * @return {var} the former first element.\r\n     */\r\n    shift() {\r\n      // ignore on empty arrays\r\n      if (this.length == 0) {\r\n        return;\r\n      }\r\n\r\n      var item = this.__array.shift();\r\n      this.__updateLength();\r\n      // remove the possible added event listener\r\n      this._registerEventChaining(null, item, this.length - 1);\r\n      // as every item has changed its position, we need to update the event bubbling\r\n      this.__updateEventPropagation(0, this.length);\r\n\r\n      // fire change bubbles event\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: [],\r\n        name: \"0\",\r\n        old: [item],\r\n        item: this\r\n      });\r\n\r\n      // fire change event\r\n      this.fireDataEvent(\r\n        \"change\",\r\n        {\r\n          start: 0,\r\n          end: this.length - 1,\r\n          type: \"remove\",\r\n          removed: [item],\r\n          added: []\r\n        },\r\n\r\n        null\r\n      );\r\n\r\n      return item;\r\n    },\r\n\r\n    /**\r\n     * Returns a new array based on the range specified by the parameters.\r\n     *\r\n     * @param from {Number} The start index.\r\n     * @param to {Number?null} The zero-based end index. <code>slice</code> extracts\r\n     *   up to but not including <code>to</code>. If omitted, slice extracts to the\r\n     *   end of the array.\r\n     *\r\n     * @return {qx.data.Array} A new array containing the given range of values.\r\n     */\r\n    slice(from, to) {\r\n      return new qx.data.Array(this.__array.slice(from, to));\r\n    },\r\n\r\n    /**\r\n     * Method to remove and add new elements to the array. A change event\r\n     * will be fired for every removal or addition unless the array is\r\n     * identical before and after splicing.\r\n     *\r\n     * @param startIndex {Integer} The index where the splice should start\r\n     * @param amount {Integer} Defines number of elements which will be removed\r\n     *   at the given position.\r\n     * @param varargs {var} All following parameters will be added at the given\r\n     *   position to the array.\r\n     * @return {qx.data.Array} An data array containing the removed elements.\r\n     *   Keep in to dispose this one, even if you don't use it!\r\n     */\r\n    splice(startIndex, amount, varargs) {\r\n      // store the old length\r\n      var oldLength = this.__array.length;\r\n\r\n      // invoke the slice on the array\r\n      var returnArray = this.__array.splice.apply(this.__array, arguments);\r\n\r\n      // fire a change event for the length\r\n      if (this.__array.length != oldLength) {\r\n        this.__updateLength();\r\n      } else if (amount == arguments.length - 2) {\r\n        // if we added as much items as we removed\r\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\r\n        // check if the array content equals the content before the operation\r\n        for (var i = 0; i < addedItems.length; i++) {\r\n          if (addedItems[i] !== returnArray[i]) {\r\n            break;\r\n          }\r\n          // if all added and removed items are equal\r\n          if (i == addedItems.length - 1) {\r\n            // prevent all events and return a new array\r\n            return new qx.data.Array();\r\n          }\r\n        }\r\n      }\r\n      // fire an event for the change\r\n      var removed = amount > 0;\r\n      var added = arguments.length > 2;\r\n      if (removed || added) {\r\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\r\n        let type;\r\n        let end;\r\n\r\n        if (returnArray.length == 0) {\r\n          type = \"add\";\r\n          end = startIndex + addedItems.length;\r\n        } else if (addedItems.length == 0) {\r\n          type = \"remove\";\r\n          end = this.length - 1;\r\n        } else {\r\n          type = \"add/remove\";\r\n          end =\r\n            startIndex + Math.max(addedItems.length, returnArray.length) - 1;\r\n        }\r\n\r\n        this.fireDataEvent(\r\n          \"change\",\r\n          {\r\n            start: startIndex,\r\n            end: end,\r\n            type: type,\r\n            added: addedItems,\r\n            removed: returnArray\r\n          },\r\n\r\n          null\r\n        );\r\n      }\r\n\r\n      // remove the listeners first [BUG #7132]\r\n      for (var i = 0; i < returnArray.length; i++) {\r\n        this._registerEventChaining(null, returnArray[i], i);\r\n      }\r\n\r\n      // add listeners\r\n      for (var i = 2; i < arguments.length; i++) {\r\n        this._registerEventChaining(arguments[i], null, startIndex + (i - 2));\r\n      }\r\n      // apply event chaining for every item moved\r\n      this.__updateEventPropagation(\r\n        startIndex + (arguments.length - 2) - amount,\r\n        this.length\r\n      );\r\n\r\n      // fire the changeBubble event\r\n      if (removed || added) {\r\n        var value = [];\r\n        for (var i = 2; i < arguments.length; i++) {\r\n          value[i - 2] = arguments[i];\r\n        }\r\n        var endIndex = startIndex + Math.max(arguments.length - 3, amount - 1);\r\n        var name =\r\n          startIndex == endIndex ? endIndex : startIndex + \"-\" + endIndex;\r\n\r\n        var eventData = {\r\n          value: value,\r\n          name: name + \"\",\r\n          old: returnArray,\r\n          item: this\r\n        };\r\n\r\n        this.fireDataEvent(\"changeBubble\", eventData);\r\n      }\r\n      return new qx.data.Array(returnArray);\r\n    },\r\n\r\n    /**\r\n     * Efficiently replaces the array with the contents of src; this will suppress the\r\n     * change event if the array contents are the same, and will make sure that only\r\n     * one change event is fired\r\n     *\r\n     * @param src {qx.data.Array|Array} the new value to set the array to\r\n     */\r\n    replace(src) {\r\n      src = qx.lang.Array.toNativeArray(src);\r\n      if (this.equals(src)) {\r\n        return;\r\n      }\r\n      var args = [0, this.getLength()];\r\n      src.forEach(function (item) {\r\n        args.push(item);\r\n      });\r\n      this.splice.apply(this, args);\r\n    },\r\n\r\n    /**\r\n     * Sorts the array. If a function is given, this will be used to\r\n     * compare the items. <code>changeBubble</code> event will only be fired,\r\n     * if sorting result differs from original array.\r\n     *\r\n     * @param func {Function} A compare function comparing two parameters and\r\n     *   should return a number.\r\n     */\r\n    sort(func) {\r\n      // ignore if the array is empty\r\n      if (this.length == 0) {\r\n        return;\r\n      }\r\n      var oldArray = this.__array.concat();\r\n\r\n      this.__array.sort.apply(this.__array, arguments);\r\n\r\n      // prevent changeBubble event if nothing has been changed\r\n      if (qx.lang.Array.equals(this.__array, oldArray) === true) {\r\n        return;\r\n      }\r\n\r\n      this.__updateEventPropagation(0, this.length);\r\n\r\n      this.fireDataEvent(\r\n        \"change\",\r\n        {\r\n          start: 0,\r\n          end: this.length - 1,\r\n          type: \"order\",\r\n          added: [],\r\n          removed: []\r\n        },\r\n\r\n        null\r\n      );\r\n\r\n      // fire change bubbles event\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: this.__array,\r\n        name: \"0-\" + (this.length - 1),\r\n        old: oldArray,\r\n        item: this\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Adds the given items to the beginning of the array. For every element,\r\n     * a change event will be fired.\r\n     *\r\n     * @param varargs {var} As many elements as you want to add to the beginning.\r\n     * @return {Integer} The new length of the array\r\n     */\r\n    unshift(varargs) {\r\n      for (var i = arguments.length - 1; i >= 0; i--) {\r\n        this.__array.unshift(arguments[i]);\r\n        this.__updateLength();\r\n        // apply to every item an event listener for the bubbling\r\n        this.__updateEventPropagation(0, this.length);\r\n\r\n        // fire change bubbles event\r\n        this.fireDataEvent(\"changeBubble\", {\r\n          value: [this.__array[0]],\r\n          name: \"0\",\r\n          old: [this.__array[1]],\r\n          item: this\r\n        });\r\n\r\n        // fire change event\r\n        this.fireDataEvent(\r\n          \"change\",\r\n          {\r\n            start: 0,\r\n            end: this.length - 1,\r\n            type: \"add\",\r\n            added: [arguments[i]],\r\n            removed: []\r\n          },\r\n\r\n          null\r\n        );\r\n      }\r\n      return this.length;\r\n    },\r\n\r\n    /**\r\n     * Returns the list data as native array. Beware of the fact that the\r\n     * internal representation will be returned and any manipulation of that\r\n     * can cause a misbehavior of the array. This method should only be used for\r\n     * debugging purposes.\r\n     *\r\n     * @return {Array} The native array.\r\n     */\r\n    toArray() {\r\n      return this.__array;\r\n    },\r\n\r\n    /**\r\n     * Replacement function for the getting of the array value.\r\n     * array[0] should be array.getItem(0).\r\n     *\r\n     * @param index {Number} The index requested of the array element.\r\n     *\r\n     * @return {var} The element at the given index.\r\n     */\r\n    getItem(index) {\r\n      return this.__array[index];\r\n    },\r\n\r\n    /**\r\n     * Replacement function for the setting of an array value.\r\n     * array[0] = \"a\" should be array.setItem(0, \"a\").\r\n     * A change event will be fired if the value changes. Setting the same\r\n     * value again will not lead to a change event.\r\n     *\r\n     * @param index {Number} The index of the array element.\r\n     * @param item {var} The new item to set.\r\n     */\r\n    setItem(index, item) {\r\n      var oldItem = this.__array[index];\r\n      // ignore settings of already set items [BUG #4106]\r\n      if (oldItem === item) {\r\n        return;\r\n      }\r\n      this.__array[index] = item;\r\n      // set an event listener for the bubbling\r\n      this._registerEventChaining(item, oldItem, index);\r\n      // only update the length if its changed\r\n      if (this.length != this.__array.length) {\r\n        this.__updateLength();\r\n      }\r\n\r\n      // fire change bubbles event\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: [item],\r\n        name: index + \"\",\r\n        old: [oldItem],\r\n        item: this\r\n      });\r\n\r\n      // fire change event\r\n      this.fireDataEvent(\r\n        \"change\",\r\n        {\r\n          start: index,\r\n          end: index,\r\n          type: \"add/remove\",\r\n          added: [item],\r\n          removed: [oldItem]\r\n        },\r\n\r\n        null\r\n      );\r\n    },\r\n\r\n    /**\r\n     * This method returns the current length stored under .length on each\r\n     * array.\r\n     *\r\n     * @return {Number} The current length of the array.\r\n     */\r\n    getLength() {\r\n      return this.length;\r\n    },\r\n\r\n    /**\r\n     * Returns the index of the item in the array. If the item is not in the\r\n     * array, -1 will be returned.\r\n     *\r\n     * @param item {var} The item of which the index should be returned.\r\n     * @return {Number} The Index of the given item.\r\n     */\r\n    indexOf(item) {\r\n      return this.__array.indexOf(item);\r\n    },\r\n\r\n    /**\r\n     * Returns the last index of the item in the array. If the item is not in the\r\n     * array, -1 will be returned.\r\n     *\r\n     * @param item {var} The item of which the index should be returned.\r\n     * @return {Number} The Index of the given item.\r\n     */\r\n    lastIndexOf(item) {\r\n      return this.__array.lastIndexOf(item);\r\n    },\r\n\r\n    /**\r\n     * Returns the toString of the original Array\r\n     * @return {String} The array as a string.\r\n     */\r\n    toString() {\r\n      if (this.__array != null) {\r\n        return this.__array.toString();\r\n      }\r\n      return \"\";\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       IMPLEMENTATION OF THE QX.LANG.ARRAY METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    /**\r\n     * Check if the given item is in the current array.\r\n     *\r\n     * @deprecated {6.0} Please use the include method instead\r\n     *\r\n     * @param item {var} The item which is possibly in the array.\r\n     * @return {Boolean} true, if the array contains the given item.\r\n     */\r\n    contains(item) {\r\n      return this.includes(item);\r\n    },\r\n\r\n    /**\r\n     * Check if the given item is in the current array.\r\n     *\r\n     * @param item {var} The item which is possibly in the array.\r\n     * @return {Boolean} true, if the array contains the given item.\r\n     */\r\n    includes(item) {\r\n      return this.__array.indexOf(item) !== -1;\r\n    },\r\n\r\n    /**\r\n     * Return a copy of the given arr\r\n     *\r\n     * @return {qx.data.Array} copy of this\r\n     */\r\n    copy() {\r\n      return this.concat();\r\n    },\r\n\r\n    /**\r\n     * Insert an element at a given position.\r\n     *\r\n     * @param index {Integer} Position where to insert the item.\r\n     * @param item {var} The element to insert.\r\n     */\r\n    insertAt(index, item) {\r\n      this.splice(index, 0, item).dispose();\r\n    },\r\n\r\n    /**\r\n     * Insert an item into the array before a given item.\r\n     *\r\n     * @param before {var} Insert item before this object.\r\n     * @param item {var} The item to be inserted.\r\n     */\r\n    insertBefore(before, item) {\r\n      var index = this.indexOf(before);\r\n\r\n      if (index == -1) {\r\n        this.push(item);\r\n      } else {\r\n        this.splice(index, 0, item).dispose();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Insert an element into the array after a given item.\r\n     *\r\n     * @param after {var} Insert item after this object.\r\n     * @param item {var} Object to be inserted.\r\n     */\r\n    insertAfter(after, item) {\r\n      var index = this.indexOf(after);\r\n\r\n      if (index == -1 || index == this.length - 1) {\r\n        this.push(item);\r\n      } else {\r\n        this.splice(index + 1, 0, item).dispose();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove an element from the array at the given index.\r\n     *\r\n     * @param index {Integer} Index of the item to be removed.\r\n     * @return {var} The removed item.\r\n     */\r\n    removeAt(index) {\r\n      var returnArray = this.splice(index, 1);\r\n      var item = returnArray.getItem(0);\r\n      returnArray.dispose();\r\n      return item;\r\n    },\r\n\r\n    /**\r\n     * Remove all elements from the array.\r\n     *\r\n     * @return {Array} A native array containing the removed elements.\r\n     */\r\n    removeAll() {\r\n      // remove all possible added event listeners\r\n      for (var i = 0; i < this.__array.length; i++) {\r\n        this._registerEventChaining(null, this.__array[i], i);\r\n      }\r\n\r\n      // ignore if array is empty\r\n      if (this.getLength() == 0) {\r\n        return [];\r\n      }\r\n\r\n      // store the old data\r\n      var oldLength = this.getLength();\r\n      var items = this.__array.concat();\r\n\r\n      // change the length\r\n      this.__array.length = 0;\r\n      this.__updateLength();\r\n\r\n      // fire change bubbles event\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: [],\r\n        name: \"0-\" + (oldLength - 1),\r\n        old: items,\r\n        item: this\r\n      });\r\n\r\n      // fire the change event\r\n      this.fireDataEvent(\r\n        \"change\",\r\n        {\r\n          start: 0,\r\n          end: oldLength - 1,\r\n          type: \"remove\",\r\n          removed: items,\r\n          added: []\r\n        },\r\n\r\n        null\r\n      );\r\n\r\n      return items;\r\n    },\r\n\r\n    /**\r\n     * Append the items of the given array.\r\n     *\r\n     * @param array {Array|qx.data.IListData} The items of this array will\r\n     * be appended.\r\n     * @throws {Error} if the argument is not an array.\r\n     */\r\n    append(array) {\r\n      // qooxdoo array support\r\n      array = qx.lang.Array.toNativeArray(array);\r\n\r\n      // this check is important because opera throws an uncatchable error if\r\n      // apply is called without an array as argument.\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertArray(array, \"The parameter must be an array.\");\r\n      }\r\n\r\n      var oldLength = this.__array.length;\r\n      Array.prototype.push.apply(this.__array, array);\r\n\r\n      // add a listener to the new items\r\n      for (var i = 0; i < array.length; i++) {\r\n        this._registerEventChaining(array[i], null, oldLength + i);\r\n      }\r\n\r\n      var oldLength = this.length;\r\n      this.__updateLength();\r\n\r\n      // fire change bubbles\r\n      var name =\r\n        oldLength == this.length - 1\r\n          ? oldLength\r\n          : oldLength + \"-\" + (this.length - 1);\r\n      this.fireDataEvent(\"changeBubble\", {\r\n        value: array,\r\n        name: name + \"\",\r\n        old: [],\r\n        item: this\r\n      });\r\n\r\n      // fire the change event\r\n      this.fireDataEvent(\r\n        \"change\",\r\n        {\r\n          start: oldLength,\r\n          end: this.length - 1,\r\n          type: \"add\",\r\n          added: array,\r\n          removed: []\r\n        },\r\n\r\n        null\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Removes all elements which are listed in the array.\r\n     *\r\n     * @param array {Array} the elements of this array will be excluded from this one\r\n     */\r\n    exclude(array) {\r\n      array = qx.lang.Array.toNativeArray(array);\r\n      array.forEach(function (item) {\r\n        this.remove(item);\r\n      }, this);\r\n    },\r\n\r\n    /**\r\n     * Remove the given item.\r\n     *\r\n     * @param item {var} Item to be removed from the array.\r\n     * @return {var} The removed item.\r\n     */\r\n    remove(item) {\r\n      var index = this.indexOf(item);\r\n\r\n      if (index != -1) {\r\n        this.splice(index, 1).dispose();\r\n        return item;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Check whether the given array has the same content as this.\r\n     * Checks only the equality of the arrays' content.\r\n     *\r\n     * @param array {qx.data.Array} The array to check.\r\n     * @return {Boolean} Whether the two arrays are equal.\r\n     */\r\n    equals(array) {\r\n      if (this.length !== array.length) {\r\n        return false;\r\n      }\r\n\r\n      array = qx.lang.Array.toNativeArray(array);\r\n      for (var i = 0; i < this.length; i++) {\r\n        if (this.getItem(i) !== array[i]) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the sum of all values in the array. Supports\r\n     * numeric values only.\r\n     *\r\n     * @return {Number} The sum of all values.\r\n     */\r\n    sum() {\r\n      var result = 0;\r\n      for (var i = 0; i < this.length; i++) {\r\n        result += this.getItem(i);\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     * Returns the highest value in the given array.\r\n     * Supports numeric values only.\r\n     *\r\n     * @return {Number|null} The highest of all values or undefined if the\r\n     *   array is empty.\r\n     */\r\n    max() {\r\n      var result = this.getItem(0);\r\n\r\n      for (var i = 1; i < this.length; i++) {\r\n        if (this.getItem(i) > result) {\r\n          result = this.getItem(i);\r\n        }\r\n      }\r\n\r\n      return result === undefined ? null : result;\r\n    },\r\n\r\n    /**\r\n     * Returns the lowest value in the array. Supports\r\n     * numeric values only.\r\n     *\r\n     * @return {Number|null} The lowest of all values or undefined\r\n     *   if the array is empty.\r\n     */\r\n    min() {\r\n      var result = this.getItem(0);\r\n\r\n      for (var i = 1; i < this.length; i++) {\r\n        if (this.getItem(i) < result) {\r\n          result = this.getItem(i);\r\n        }\r\n      }\r\n\r\n      return result === undefined ? null : result;\r\n    },\r\n\r\n    /**\r\n     * Invokes the given function for every item in the array.\r\n     *\r\n     * @param callback {Function} The function which will be call for every\r\n     *   item in the array. It will be invoked with three parameters:\r\n     *   the item, the index and the array itself.\r\n     * @param context {var?} The context in which the callback will be invoked.\r\n     */\r\n    forEach(callback, context) {\r\n      this.__array.forEach((element, index) =>\r\n        callback.call(context, element, index, this)\r\n      );\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      Additional JS1.6 methods\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    /**\r\n     * Creates a new array with all elements that pass the test implemented by\r\n     * the provided function. It returns a new data array instance so make sure\r\n     * to think about disposing it.\r\n     * @param callback {Function} The test function, which will be executed for every\r\n     *   item in the array. The function will have three arguments.\r\n     *   <li><code>item</code>: the current item in the array</li>\r\n     *   <li><code>index</code>: the index of the current item</li>\r\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\r\n     * @param self {var?undefined} The context of the callback.\r\n     * @return {qx.data.Array} A new array instance containing only the items\r\n     *  which passed the test.\r\n     */\r\n    filter(callback, self) {\r\n      return new qx.data.Array(this.__array.filter(callback, self));\r\n    },\r\n\r\n    /**\r\n     * Creates a new array with the results of calling a provided function on every\r\n     * element in this array. It returns a new data array instance so make sure\r\n     * to think about disposing it.\r\n     * @param callback {Function} The mapping function, which will be executed for every\r\n     *   item in the array. The function will have three arguments.\r\n     *   <li><code>item</code>: the current item in the array</li>\r\n     *   <li><code>index</code>: the index of the current item</li>\r\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\r\n     * @param self {var?undefined} The context of the callback.\r\n     * @return {qx.data.Array} A new array instance containing the new created items.\r\n     */\r\n    map(callback, self) {\r\n      return new qx.data.Array(this.__array.map(callback, self));\r\n    },\r\n\r\n    /**\r\n     * Finds the first matching element in the array which passes the test implemented by the\r\n     * provided function.\r\n     * @param callback {Function} The test function, which will be executed for every\r\n     *   item in the array. The function will have three arguments.\r\n     *   <li><code>item</code>: the current item in the array</li>\r\n     *   <li><code>index</code>: the index of the current item</li>\r\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\r\n     * @param self {var?undefined} The context of the callback.\r\n     * @return {var|undefined} The found item.\r\n     */\r\n    find(callback, self) {\r\n      return this.__array.find(callback, self);\r\n    },\r\n\r\n    /**\r\n     * Tests whether any element in the array passes the test implemented by the\r\n     * provided function.\r\n     * @param callback {Function} The test function, which will be executed for every\r\n     *   item in the array. The function will have three arguments.\r\n     *   <li><code>item</code>: the current item in the array</li>\r\n     *   <li><code>index</code>: the index of the current item</li>\r\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\r\n     * @param self {var?undefined} The context of the callback.\r\n     * @return {Boolean} <code>true</code>, if any element passed the test function.\r\n     */\r\n    some(callback, self) {\r\n      return this.__array.some(callback, self);\r\n    },\r\n\r\n    /**\r\n     * Tests whether every element in the array passes the test implemented by the\r\n     * provided function.\r\n     * @param callback {Function} The test function, which will be executed for every\r\n     *   item in the array. The function will have three arguments.\r\n     *   <li><code>item</code>: the current item in the array</li>\r\n     *   <li><code>index</code>: the index of the current item</li>\r\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\r\n     * @param self {var?undefined} The context of the callback.\r\n     * @return {Boolean} <code>true</code>, if every element passed the test function.\r\n     */\r\n    every(callback, self) {\r\n      return this.__array.every(callback, self);\r\n    },\r\n\r\n    /**\r\n     * Apply a function against an accumulator and each value of the array\r\n     * (from left-to-right) as to reduce it to a single value.\r\n     * @param callback {Function} The accumulator function, which will be\r\n     *   executed for every item in the array. The function will have four arguments.\r\n     *   <li><code>previousItem</code>: the previous item</li>\r\n     *   <li><code>currentItem</code>: the current item in the array</li>\r\n     *   <li><code>index</code>: the index of the current item</li>\r\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\r\n     * @param initValue {var?undefined} Object to use as the first argument to the first\r\n     *   call of the callback.\r\n     * @return {var} The returned value of the last accumulator call.\r\n     */\r\n    reduce(callback, initValue) {\r\n      return this.__array.reduce(callback, initValue);\r\n    },\r\n\r\n    /**\r\n     * Apply a function against an accumulator and each value of the array\r\n     * (from right-to-left) as to reduce it to a single value.\r\n     * @param callback {Function} The accumulator function, which will be\r\n     *   executed for every item in the array. The function will have four arguments.\r\n     *   <li><code>previousItem</code>: the previous item</li>\r\n     *   <li><code>currentItem</code>: the current item in the array</li>\r\n     *   <li><code>index</code>: the index of the current item</li>\r\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\r\n     * @param initValue {var?undefined} Object to use as the first argument to the first\r\n     *   call of the callback.\r\n     * @return {var} The returned value of the last accumulator call.\r\n     */\r\n    reduceRight(callback, initValue) {\r\n      return this.__array.reduceRight(callback, initValue);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      INTERNAL HELPERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    /**\r\n     * Internal function which updates the length property of the array.\r\n     * Every time the length will be updated, a {@link #changeLength} data\r\n     * event will be fired.\r\n     */\r\n    __updateLength() {\r\n      var oldLength = this.length;\r\n      this.length = this.__array.length;\r\n      this.fireDataEvent(\"changeLength\", this.length, oldLength);\r\n    },\r\n\r\n    /**\r\n     * Helper to update the event propagation for a range of items.\r\n     * @param from {Number} Start index.\r\n     * @param to {Number} End index.\r\n     */\r\n    __updateEventPropagation(from, to) {\r\n      for (var i = from; i < to; i++) {\r\n        this._registerEventChaining(this.__array[i], this.__array[i], i);\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n   *****************************************************************************\r\n      DESTRUCTOR\r\n   *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    for (var i = 0; i < this.__array.length; i++) {\r\n      var item = this.__array[i];\r\n      this._applyEventPropagation(null, item, i);\r\n\r\n      // dispose the items on auto dispose\r\n      if (this.isAutoDisposeItems() && item && item instanceof qx.core.Object) {\r\n        item.dispose();\r\n      }\r\n    }\r\n\r\n    this.__array = null;\r\n  },\r\n\r\n  defer(statics) {\r\n    statics.prototype[Symbol.iterator] = function () {\r\n      return this.iterator();\r\n    };\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}