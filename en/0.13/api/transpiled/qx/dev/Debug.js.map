{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "disposeProfilingActive",
    "debugObject",
    "obj",
    "initialMessage",
    "maxLevel",
    "log",
    "Logger",
    "debug",
    "dev",
    "Debug",
    "debugObjectToString",
    "bHtml",
    "eol",
    "sol",
    "currentLevel",
    "indentStr",
    "i",
    "message",
    "displayObj",
    "level",
    "_typeof",
    "prop",
    "Array",
    "undefined",
    "e",
    "length",
    "count",
    "ex",
    "getFunctionName",
    "func",
    "functionType",
    "clazz",
    "self",
    "wrapper",
    "lang",
    "Object",
    "getKeyFromValue",
    "prototype",
    "debugProperties",
    "model",
    "html",
    "indent",
    "newLine",
    "Type",
    "isNumber",
    "isString",
    "isBoolean",
    "hasInterface",
    "constructor",
    "data",
    "IListData",
    "j",
    "getItem",
    "properties",
    "$$properties",
    "key",
    "String",
    "firstUp",
    "startDisposeProfiling",
    "core",
    "Environment",
    "select",
    "_true",
    "__nextHashFirst",
    "ObjectRegistry",
    "getNextHash",
    "_default",
    "stopDisposeProfiling",
    "checkFunction",
    "startHandle",
    "error",
    "classname",
    "undisposedObjects",
    "showDisposeProfiling",
    "getByName",
    "ui",
    "queue",
    "Dispose",
    "isEmpty",
    "flush",
    "nextHashLast",
    "postId",
    "getPostId",
    "traces",
    "getStackTraces",
    "hash",
    "fromHashCode",
    "isDisposed",
    "$$instance",
    "implementsInterface",
    "event",
    "IEventHandler",
    "$$pooled",
    "Interface",
    "decoration",
    "IDecorator",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "isCached",
    "$$ignoreDisposeWarning",
    "bom",
    "Font",
    "isDynamic",
    "push",
    "object",
    "stackTrace"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/Debug.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2006, 2007 Derrell Lipman\r\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Derrell Lipman (derrell)\r\n     * Daniel Wagner (d_wagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Useful debug capabilities\r\n * @ignore(qx.ui.decoration.IDecorator)\r\n * @ignore(qx.theme.manager.Decoration)\r\n * @ignore(qx.ui.core.queue.Dispose)\r\n * @ignore(qx.bom.Font)\r\n * @ignore(qx.theme.manager.Font)\r\n */\r\nqx.Class.define(\"qx.dev.Debug\", {\r\n  statics: {\r\n    /**\r\n     * Flag that shows whether dispose profiling is currently active\r\n     * @internal\r\n     */\r\n    disposeProfilingActive: false,\r\n\r\n    /**\r\n     * Recursively display an object (as a debug message)\r\n     *\r\n     *\r\n     * @param obj {Object}\r\n     *   The object to be recursively displayed\r\n     *\r\n     * @param initialMessage {String|null}\r\n     *   The initial message to be displayed.\r\n     *\r\n     * @param maxLevel {Integer ? 10}\r\n     *   The maximum level of recursion.  Objects beyond this level will not\r\n     *   be displayed.\r\n     *\r\n     */\r\n    debugObject(obj, initialMessage, maxLevel) {\r\n      // We've compiled the complete message.  Give 'em what they came for!\r\n      qx.log.Logger.debug(\r\n        this,\r\n        qx.dev.Debug.debugObjectToString(obj, initialMessage, maxLevel, false)\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Recursively display an object (into a string)\r\n     *\r\n     *\r\n     * @param obj {Object}\r\n     *   The object to be recursively displayed\r\n     *\r\n     * @param initialMessage {String|null}\r\n     *   The initial message to be displayed.\r\n     *\r\n     * @param maxLevel {Integer ? 10}\r\n     *   The maximum level of recursion.  Objects beyond this level will not\r\n     *   be displayed.\r\n     *\r\n     * @param bHtml {Boolean ? false}\r\n     *   If true, then render the debug message in HTML;\r\n     *   Otherwise, use spaces for indentation and \"\\n\" for end of line.\r\n     *\r\n     * @return {String}\r\n     *   The string containing the recursive display of the object\r\n     *\r\n     * @lint ignoreUnused(prop)\r\n     */\r\n    debugObjectToString(obj, initialMessage, maxLevel, bHtml) {\r\n      // If a maximum recursion level was not specified...\r\n      if (!maxLevel) {\r\n        // ... then create one arbitrarily\r\n        maxLevel = 10;\r\n      }\r\n\r\n      // If they want html, the differences are \"<br>\" instead of \"\\n\"\r\n      // and how we do the indentation.  Define the end-of-line string\r\n      // and a start-of-line function.\r\n      var eol = bHtml ? \"</span><br>\" : \"\\n\";\r\n      var sol = function (currentLevel) {\r\n        var indentStr;\r\n        if (!bHtml) {\r\n          indentStr = \"\";\r\n          for (var i = 0; i < currentLevel; i++) {\r\n            indentStr += \"  \";\r\n          }\r\n        } else {\r\n          indentStr = \"<span style='padding-left:\" + currentLevel * 8 + \"px;'>\";\r\n        }\r\n        return indentStr;\r\n      };\r\n\r\n      // Initialize an empty message to be displayed\r\n      var message = \"\";\r\n\r\n      // Function to recursively display an object\r\n      var displayObj = function (obj, level, maxLevel) {\r\n        // If we've exceeded the maximum recursion level...\r\n        if (level > maxLevel) {\r\n          // ... then tell 'em so, and get outta dodge.\r\n          message +=\r\n            sol(level) + \"*** TOO MUCH RECURSION: not displaying ***\" + eol;\r\n          return;\r\n        }\r\n\r\n        // Is this an ordinary non-recursive item?\r\n        if (typeof obj != \"object\") {\r\n          // Yup.  Just add it to the message.\r\n          message += sol(level) + obj + eol;\r\n          return;\r\n        }\r\n\r\n        // We have an object  or array.  For each child...\r\n        for (var prop in obj) {\r\n          // Is this child a recursive item?\r\n          if (typeof obj[prop] == \"object\") {\r\n            try {\r\n              // Yup.  Determine the type and add it to the message\r\n              if (obj[prop] instanceof Array) {\r\n                message += sol(level) + prop + \": \" + \"Array\" + eol;\r\n              } else if (obj[prop] === null) {\r\n                message += sol(level) + prop + \": \" + \"null\" + eol;\r\n                continue;\r\n              } else if (obj[prop] === undefined) {\r\n                message += sol(level) + prop + \": \" + \"undefined\" + eol;\r\n                continue;\r\n              } else {\r\n                message += sol(level) + prop + \": \" + \"Object\" + eol;\r\n              }\r\n\r\n              // Recurse into it to display its children.\r\n              displayObj(obj[prop], level + 1, maxLevel);\r\n            } catch (e) {\r\n              message +=\r\n                sol(level) + prop + \": EXCEPTION expanding property\" + eol;\r\n            }\r\n          } else {\r\n            // We have an ordinary non-recursive item.  Add it to the message.\r\n            message += sol(level) + prop + \": \" + obj[prop] + eol;\r\n          }\r\n        }\r\n      };\r\n\r\n      // Was an initial message provided?\r\n      if (initialMessage) {\r\n        // Yup.  Add it to the displayable message.\r\n        message += sol(0) + initialMessage + eol;\r\n      }\r\n\r\n      if (obj instanceof Array) {\r\n        message += sol(0) + \"Array, length=\" + obj.length + \":\" + eol;\r\n      } else if (typeof obj == \"object\") {\r\n        var count = 0;\r\n        for (var prop in obj) {\r\n          count++;\r\n        }\r\n        message += sol(0) + \"Object, count=\" + count + \":\" + eol;\r\n      }\r\n\r\n      message +=\r\n        sol(0) +\r\n        \"------------------------------------------------------------\" +\r\n        eol;\r\n\r\n      try {\r\n        // Recursively display this object\r\n        displayObj(obj, 0, maxLevel);\r\n      } catch (ex) {\r\n        message += sol(0) + \"*** EXCEPTION (\" + ex + \") ***\" + eol;\r\n      }\r\n\r\n      message +=\r\n        sol(0) +\r\n        \"============================================================\" +\r\n        eol;\r\n\r\n      return message;\r\n    },\r\n\r\n    /**\r\n     * Get the name of a member/static function or constructor defined using the new style class definition.\r\n     * If the function could not be found <code>null</code> is returned.\r\n     *\r\n     * This function uses a linear search, so don't use it in performance critical\r\n     * code.\r\n     *\r\n     * @param func {Function} member function to get the name of.\r\n     * @param functionType {String?\"all\"} Where to look for the function. Possible values are \"members\", \"statics\", \"constructor\", \"all\"\r\n     * @return {String|null} Name of the function (null if not found).\r\n     */\r\n    getFunctionName(func, functionType) {\r\n      var clazz = func.self;\r\n      if (!clazz) {\r\n        return null;\r\n      }\r\n\r\n      // unwrap\r\n      while (func.wrapper) {\r\n        func = func.wrapper;\r\n      }\r\n\r\n      switch (functionType) {\r\n        case \"construct\":\r\n          return func == clazz ? \"construct\" : null;\r\n\r\n        case \"members\":\r\n          return qx.lang.Object.getKeyFromValue(clazz, func);\r\n\r\n        case \"statics\":\r\n          return qx.lang.Object.getKeyFromValue(clazz.prototype, func);\r\n\r\n        default:\r\n          // constructor\r\n          if (func == clazz) {\r\n            return \"construct\";\r\n          }\r\n\r\n          return (\r\n            qx.lang.Object.getKeyFromValue(clazz.prototype, func) ||\r\n            qx.lang.Object.getKeyFromValue(clazz, func) ||\r\n            null\r\n          );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a string representing the given model. The string will include\r\n     * all model objects to a given recursive depth.\r\n     *\r\n     * @param model {qx.core.Object} The model object.\r\n     * @param maxLevel {Number ? 10} The amount of max recursive depth.\r\n     * @param html {Boolean ? false} If the returned string should have \\n\\r as\r\n     *   newline of <br>.\r\n     * @param indent {Number ? 1} The indentation level.\r\n     *   (Needed for the recursion)\r\n     *\r\n     * @return {String} A string representation of the given model.\r\n     */\r\n    debugProperties(model, maxLevel, html, indent) {\r\n      // set the default max depth of the recursion\r\n      if (maxLevel == null) {\r\n        maxLevel = 10;\r\n      }\r\n      // set the default startin indent\r\n      if (indent == null) {\r\n        indent = 1;\r\n      }\r\n\r\n      var newLine = \"\";\r\n      html ? (newLine = \"<br>\") : (newLine = \"\\r\\n\");\r\n\r\n      var message = \"\";\r\n\r\n      if (\r\n        qx.lang.Type.isNumber(model) ||\r\n        qx.lang.Type.isString(model) ||\r\n        qx.lang.Type.isBoolean(model) ||\r\n        model == null ||\r\n        maxLevel <= 0\r\n      ) {\r\n        return model;\r\n      } else if (qx.Class.hasInterface(model.constructor, qx.data.IListData)) {\r\n        // go threw the data structure\r\n        for (var i = 0; i < model.length; i++) {\r\n          // print out the indentation\r\n          for (var j = 0; j < indent; j++) {\r\n            message += \"-\";\r\n          }\r\n          message +=\r\n            \"index(\" +\r\n            i +\r\n            \"): \" +\r\n            this.debugProperties(\r\n              model.getItem(i),\r\n              maxLevel - 1,\r\n              html,\r\n              indent + 1\r\n            ) +\r\n            newLine;\r\n        }\r\n        return message + newLine;\r\n      } else if (model.constructor != null) {\r\n        // go threw all properties\r\n        var properties = model.constructor.$$properties;\r\n        for (var key in properties) {\r\n          message += newLine;\r\n          // print out the indentation\r\n          for (var j = 0; j < indent; j++) {\r\n            message += \"-\";\r\n          }\r\n          message +=\r\n            \" \" +\r\n            key +\r\n            \": \" +\r\n            this.debugProperties(\r\n              model[\"get\" + qx.lang.String.firstUp(key)](),\r\n              maxLevel - 1,\r\n              html,\r\n              indent + 1\r\n            );\r\n        }\r\n        return message;\r\n      }\r\n      return \"\";\r\n    },\r\n\r\n    /**\r\n     * Starts a dispose profiling session. Use {@link #stopDisposeProfiling} to\r\n     * get the results\r\n     *\r\n     * @return {Number|undefined}\r\n     *   Returns a handle which may be passed to {@link #stopDisposeProfiling}\r\n     *   indicating the start point for searching for undisposed objects.\r\n     */\r\n    startDisposeProfiling: qx.core.Environment.select(\"qx.debug.dispose\", {\r\n      true() {\r\n        this.disposeProfilingActive = true;\r\n        this.__nextHashFirst = qx.core.ObjectRegistry.getNextHash();\r\n        return this.__nextHashFirst;\r\n      },\r\n\r\n      default() {}\r\n    }),\r\n\r\n    /**\r\n     * Returns a list of any (qx) objects that were created but not disposed\r\n     * since {@link #startDisposeProfiling} was called. Also returns a stack\r\n     * trace recorded at the time the object was created. The starting point\r\n     * of dispose tracking is reset, so to do further dispose profiling, a new\r\n     * call to {@link #startDisposeProfile} must be issued.\r\n     *\r\n     * @signature function(checkFunction)\r\n     * @param checkFunction {Function} Custom check function. It is called once\r\n     * for each object that was created after dispose profiling was started,\r\n     * with the object as the only parameter. If it returns false, the object\r\n     * will not be included in the returned list\r\n     * @return {Map[]} List of maps. Each map contains two keys:\r\n     * <code>object</code> and <code>stackTrace</code>\r\n     */\r\n    stopDisposeProfiling: qx.core.Environment.select(\"qx.debug.dispose\", {\r\n      true(checkFunction, startHandle) {\r\n        if (!this.__nextHashFirst) {\r\n          qx.log.Logger.error(\r\n            \"Call \" + this.classname + \".startDisposeProfiling first.\"\r\n          );\r\n\r\n          return [];\r\n        }\r\n\r\n        //qx.core.ObjectRegistry.saveStackTraces = false;\r\n        this.disposeProfilingActive = false;\r\n\r\n        var undisposedObjects = this.showDisposeProfiling(\r\n          checkFunction,\r\n          startHandle || this.__nextHashFirst\r\n        );\r\n\r\n        delete this.__nextHashFirst;\r\n        return undisposedObjects;\r\n      },\r\n\r\n      default() {}\r\n    }),\r\n\r\n    /**\r\n     * Returns a list of any (qx) objects that were created but not disposed\r\n     * since {@link #startDisposeProfiling} was called. Also returns a stack\r\n     * trace recorded at the time the object was created. Does not restart the\r\n     * tracking point, so subsequent calls to this method will continue to\r\n     * show undisposed objects since {@link #startDisposeProfiling} was\r\n     * called.\r\n     *\r\n     * @signature function(checkFunction)\r\n     * @param checkFunction {Function} Custom check function. It is called once\r\n     * for each object that was created after dispose profiling was started,\r\n     * with the object as the only parameter. If it returns false, the object\r\n     * will not be included in the returned list\r\n     * @return {Map[]} List of maps. Each map contains two keys:\r\n     * <code>object</code> and <code>stackTrace</code>\r\n     */\r\n    showDisposeProfiling: qx.core.Environment.select(\"qx.debug.dispose\", {\r\n      true(checkFunction) {\r\n        var undisposedObjects = [];\r\n        // If destroy calls another destroy, flushing the queue once is not enough\r\n        if (qx.Class.getByName(\"qx.ui.core.queue.Dispose\")) {\r\n          while (!qx.ui.core.queue.Dispose.isEmpty()) {\r\n            qx.ui.core.queue.Dispose.flush();\r\n          }\r\n        }\r\n        var nextHashLast = qx.core.ObjectRegistry.getNextHash();\r\n        var postId = qx.core.ObjectRegistry.getPostId();\r\n        var traces = qx.core.ObjectRegistry.getStackTraces();\r\n        for (var hash = this.__nextHashFirst; hash < nextHashLast; hash++) {\r\n          var obj = qx.core.ObjectRegistry.fromHashCode(hash + postId);\r\n          if (obj && obj.isDisposed && !obj.isDisposed()) {\r\n            // User-defined check\r\n            if (\r\n              checkFunction &&\r\n              typeof checkFunction == \"function\" &&\r\n              !checkFunction(obj)\r\n            ) {\r\n              continue;\r\n            }\r\n            // Singleton instances\r\n            if (obj.constructor.$$instance === obj) {\r\n              continue;\r\n            }\r\n            // Event handlers\r\n            if (qx.Class.implementsInterface(obj, qx.event.IEventHandler)) {\r\n              continue;\r\n            }\r\n            // Pooled Decorators\r\n            if (obj.$$pooled) {\r\n              continue;\r\n            }\r\n            // Dynamic decorators\r\n            if (\r\n              qx.Interface.getByName(\"qx.ui.decoration.IDecorator\") &&\r\n              qx.Class.getByName(\"qx.theme.manager.Decoration\") &&\r\n              qx.Class.implementsInterface(obj, qx.ui.decoration.IDecorator) &&\r\n              qx.theme.manager.Decoration.getInstance().isCached(obj)\r\n            ) {\r\n              continue;\r\n            }\r\n            // ignored objects\r\n            if (obj.$$ignoreDisposeWarning) {\r\n              continue;\r\n            }\r\n            // Dynamic fonts\r\n            if (\r\n              qx.Class.getByName(\"qx.bom.Font\") &&\r\n              obj instanceof qx.bom.Font &&\r\n              qx.Class.getByName(\"qx.theme.manager.Font\") &&\r\n              qx.theme.manager.Font.getInstance().isDynamic(obj)\r\n            ) {\r\n              continue;\r\n            }\r\n            undisposedObjects.push({\r\n              object: obj,\r\n              stackTrace: traces[hash + postId] ? traces[hash + postId] : null\r\n            });\r\n          }\r\n        }\r\n\r\n        return undisposedObjects;\r\n      },\r\n\r\n      default() {}\r\n    })\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}