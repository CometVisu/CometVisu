{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__profileData",
    "__callStack",
    "__doProfile",
    "__callOverhead",
    "undefined",
    "__calibrateCount",
    "start",
    "splice",
    "length",
    "stop",
    "getProfileData",
    "showResults",
    "maxLength",
    "normalizeProfileData",
    "data",
    "Object",
    "values",
    "sort",
    "a",
    "b",
    "calibratedOwnTime",
    "slice",
    "str",
    "i",
    "profData",
    "name",
    "push",
    "type",
    "toPrecision",
    "callCount",
    "win",
    "window",
    "open",
    "doc",
    "document",
    "write",
    "join",
    "close",
    "__calibrate",
    "count",
    "fcn",
    "code",
    "eval",
    "Date",
    "end",
    "profTime",
    "plainTime",
    "__calibrateHelper",
    "key",
    "profileData",
    "Math",
    "max",
    "ownTime",
    "subRoutineCalls",
    "calibratedAvgTime",
    "profileBefore",
    "fullName",
    "args",
    "me",
    "dev",
    "Profile",
    "callData",
    "subRoutineTime",
    "startTime",
    "profileAfter",
    "returnValue",
    "endTime",
    "pop",
    "totalTime",
    "lastCall",
    "fcnKey",
    "functionData",
    "defer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/Profile.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * qooxdoo profiler.\n *\n * All functions of qooxdoo classes (constructors, members, statics) can be profiled\n * using this class.\n *\n * To enable profiling this class must be loaded <b>before</b> <code>qx.Class</code> is\n * loaded. This can be achieved by making <code>qx.core.Aspect</code> and\n * <code>qx.dev.Profile</code> a load time dependency of <code>qx.Class</code>.\n * Further more the variant <code>qx.aspects</code> must be set to <code>on</code>.\n */\nqx.Bootstrap.define(\"qx.dev.Profile\", {\n  statics: {\n    /**\n     * Storage for profiling data\n     *\n     * @internal\n     */\n    __profileData: {},\n\n    /**\n     * Array for call stack-like data types.\n     *\n     * @internal\n     */\n    __callStack: [],\n\n    /**\n     * Flag marking profiler run.\n     *\n     * @internal\n     */\n    __doProfile: true,\n\n    /**\n     * Profiler execution time. Subtracted for more accurate calculations.\n     *\n     * @internal\n     */\n    __callOverhead: undefined,\n\n    /**\n     * Amount of times to run calculation of profiler overhead.\n     *\n     * @internal\n     */\n    __calibrateCount: 4000,\n\n    /**\n     * Clear profiling data and start profiling.\n     */\n    start() {\n      this.__doProfile = true;\n      this.__profileData = {};\n      this.__callStack.splice(0, this.__callStack.length - 2);\n    },\n\n    /**\n     * Stop profiling.\n     */\n    stop() {\n      this.__doProfile = false;\n    },\n\n    /**\n     * Return the profiling data as JSON data structure.\n     *\n     * Example:\n     * <pre class=\"javascript\">\n     * {\n     *   \"qx.core.ObjectRegistry.toHashCode (static)\":{\n     *     *     \"totalTime\":3,\n     *     \"ownTime\":3,\n     *     \"callCount\":218,\n     *     \"subRoutineCalls\":0,\n     *     \"name\":\"qx.core.ObjectRegistry.toHashCode\",\n     *     \"type\":\"static\"\n     *   },\n     *   \"qx.core.Object.addListener (member)\":{\n     *     \"totalTime\":19,\n     *     \"ownTime\":12,\n     *     \"callCount\":59,\n     *     \"subRoutineCalls\":251,\n     *     \"name\":\"qx.core.Object.addListener\",\n     *     \"type\":\"member\"\n     *   },\n     *   \"qx.ui.table.cellrenderer.Default (constructor)\":{\n     *     \"totalTime\":2,\n     *     \"ownTime\":1,\n     *     \"callCount\":1,\n     *     \"subRoutineCalls\":4,\n     *     \"name\":\"qx.ui.table.cellrenderer.Default\",\n     *     \"type\":\"constructor\"\n     *   }\n     * }\n     * </pre>\n     *\n     * @return {Map} The current profiling data.\n     */\n    getProfileData() {\n      return this.__profileData;\n    },\n\n    /**\n     * Show profiling results in a popup window. The results are sorted by the\n     * function's own time.\n     *\n     * @param maxLength {Integer?100} maximum number of entries to display.\n     */\n    showResults(maxLength) {\n      this.stop();\n      this.normalizeProfileData();\n\n      var data = Object.values(this.__profileData);\n      data = data.sort(function (a, b) {\n        return a.calibratedOwnTime < b.calibratedOwnTime ? 1 : -1;\n      });\n\n      data = data.slice(0, maxLength || 100);\n\n      var str = [\n        \"<table><tr><th>Name</th><th>Type</th><th>Own time</th><th>Avg time</th><th>calls</th></tr>\"\n      ];\n\n      for (var i = 0; i < data.length; i++) {\n        var profData = data[i];\n        if (profData.name == \"qx.core.Aspect.__calibrateHelper\") {\n          continue;\n        }\n        str.push(\"<tr><td>\");\n        str.push(profData.name, \"()\");\n        str.push(\"</td><td>\");\n        str.push(profData.type);\n        str.push(\"</td><td>\");\n        str.push(profData.calibratedOwnTime.toPrecision(3));\n        str.push(\"ms</td><td>\");\n        str.push(\n          (profData.calibratedOwnTime / profData.callCount).toPrecision(3)\n        );\n\n        str.push(\"ms</td><td>\");\n        str.push(profData.callCount);\n        str.push(\"</td></tr>\");\n      }\n\n      str.push(\"</table>\");\n\n      var win = window.open(\"about:blank\", \"profileLog\");\n      var doc = win.document;\n\n      doc.open();\n      doc.write(\n        \"<html><head><style type='text/css'>body{font-family:monospace;font-size:11px;background:white;color:black;}</style></head><body>\"\n      );\n\n      doc.write(str.join(\"\"));\n      doc.write(\"</body></html>\");\n      doc.close();\n    },\n\n    /**\n     * Measure the overhead of calling a wrapped function vs. calling an\n     * unwrapped function.\n     *\n     * @lint ignoreDeprecated(eval)\n     *\n     * @param count {Integer} Number of iterations to measure.\n     * @return {Number} Overhead of a wrapped function call in milliseconds.\n     */\n    __calibrate(count) {\n      // we use eval to unroll the loop because we don't want to measure the loop overhead.\n\n      // Measure wrapped function\n      var fcn;\n      var code = [\n        \"var fcn = function(){ var fcn=qx.dev.Profile.__calibrateHelper;\"\n      ];\n\n      for (var i = 0; i < count; i++) {\n        code.push(\"fcn();\");\n      }\n      code.push(\"};\");\n      eval(code.join(\"\"));\n      var start = new Date();\n      fcn();\n      var end = new Date();\n      var profTime = end - start;\n\n      // Measure unwrapped function\n      var code = [\n        \"var plainFunc = function() {};\",\n        \"var fcn = function(){ var fcn=plainFunc;\"\n      ];\n\n      for (var i = 0; i < count; i++) {\n        code.push(\"fcn();\");\n      }\n      code.push(\"};\");\n      eval(code.join(\"\"));\n\n      var start = new Date();\n      fcn();\n      var end = new Date();\n      var plainTime = end - start;\n\n      // Compute per call overhead\n      return (profTime - plainTime) / count;\n    },\n\n    /**\n     * Helper to measure overhead.\n     */\n    __calibrateHelper() {},\n\n    /**\n     * Normalize profiling data by subtracting the overhead of wrapping from the\n     * function's own time.\n     */\n    normalizeProfileData() {\n      if (this.__callOverhead == undefined) {\n        this.__callOverhead = this.__calibrate(this.__calibrateCount);\n      }\n\n      for (var key in this.__profileData) {\n        var profileData = this.__profileData[key];\n\n        profileData.calibratedOwnTime = Math.max(\n          profileData.ownTime -\n            profileData.subRoutineCalls * this.__callOverhead,\n          0\n        );\n\n        profileData.calibratedAvgTime =\n          profileData.calibratedOwnTime / profileData.callCount;\n      }\n    },\n\n    /**\n     * This function will be called before each function call. (Start timing)\n     *\n     * @param fullName {String} Full name of the function including the class name.\n     * @param fcn {Function} Function to time.\n     * @param type {String} Function type as in parameter with same name to\n     *                      {@link qx.core.Aspect#addAdvice}\n     * @param args {arguments} The arguments passed to the wrapped function\n     */\n    profileBefore(fullName, fcn, type, args) {\n      var me = qx.dev.Profile;\n\n      if (!me.__doProfile) {\n        return;\n      }\n\n      var callData = {\n        subRoutineTime: 0,\n        subRoutineCalls: 0\n      };\n\n      me.__callStack.push(callData);\n      callData.startTime = new Date();\n    },\n\n    /**\n     * This function will be called after each function call. (Stop timing)\n     *\n     * @param fullName {String} Full name of the function including the class name.\n     * @param fcn {Function} Function to time.\n     * @param type {String} Function type as in parameter with same name to\n     *                      {@link qx.core.Aspect#addAdvice}\n     * @param args {arguments} The arguments passed to the wrapped function\n     * @param returnValue {var} return value of the wrapped function.\n     */\n    profileAfter(fullName, fcn, type, args, returnValue) {\n      var me = qx.dev.Profile;\n      if (!me.__doProfile) {\n        return;\n      }\n\n      var endTime = new Date();\n      var callData = me.__callStack.pop();\n      var totalTime = endTime - callData.startTime;\n      var ownTime = totalTime - callData.subRoutineTime;\n\n      if (me.__callStack.length > 0) {\n        var lastCall = me.__callStack[me.__callStack.length - 1];\n        lastCall.subRoutineTime += totalTime;\n        lastCall.subRoutineCalls += 1;\n      }\n\n      var fcnKey = fullName + \" (\" + type + \")\";\n\n      if (me.__profileData[fcnKey] === undefined) {\n        me.__profileData[fcnKey] = {\n          totalTime: 0,\n          ownTime: 0,\n          callCount: 0,\n          subRoutineCalls: 0,\n          name: fullName,\n          type: type\n        };\n      }\n\n      var functionData = me.__profileData[fcnKey];\n      functionData.totalTime += totalTime;\n      functionData.ownTime += ownTime;\n      functionData.callCount += 1;\n      functionData.subRoutineCalls += callData.subRoutineCalls;\n    }\n  },\n\n  defer(statics) {\n    if (qx.core.Environment.get(\"qx.aspects\")) {\n      // Inform user\n      qx.Bootstrap.debug(\"Enable global profiling...\");\n\n      // Add advices for profiling\n      qx.core.Aspect.addAdvice(statics.profileBefore, \"before\");\n      qx.core.Aspect.addAdvice(statics.profileAfter, \"after\");\n\n      statics.__calibrateHelper = qx.core.Aspect.wrap(\n        \"qx.dev.Profile.__calibrateHelper\",\n        statics.__calibrateHelper,\n        \"static\"\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}