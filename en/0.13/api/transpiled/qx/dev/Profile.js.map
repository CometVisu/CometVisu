{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__profileData",
    "__callStack",
    "__doProfile",
    "__callOverhead",
    "undefined",
    "__calibrateCount",
    "start",
    "splice",
    "length",
    "stop",
    "getProfileData",
    "showResults",
    "maxLength",
    "normalizeProfileData",
    "data",
    "Object",
    "values",
    "sort",
    "a",
    "b",
    "calibratedOwnTime",
    "slice",
    "str",
    "i",
    "profData",
    "name",
    "push",
    "type",
    "toPrecision",
    "callCount",
    "win",
    "window",
    "open",
    "doc",
    "document",
    "write",
    "join",
    "close",
    "__calibrate",
    "count",
    "fcn",
    "code",
    "eval",
    "Date",
    "end",
    "profTime",
    "plainTime",
    "__calibrateHelper",
    "key",
    "profileData",
    "Math",
    "max",
    "ownTime",
    "subRoutineCalls",
    "calibratedAvgTime",
    "profileBefore",
    "fullName",
    "args",
    "me",
    "dev",
    "Profile",
    "callData",
    "subRoutineTime",
    "startTime",
    "profileAfter",
    "returnValue",
    "endTime",
    "pop",
    "totalTime",
    "lastCall",
    "fcnKey",
    "functionData",
    "defer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/Profile.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * qooxdoo profiler.\n *\n * All functions of qooxdoo classes (constructors, members, statics) can be profiled\n * using this class.\n *\n * To enable profiling this class must be loaded <b>before</b> <code>qx.Class</code> is\n * loaded. This can be achieved by making <code>qx.core.Aspect</code> and\n * <code>qx.dev.Profile</code> a load time dependency of <code>qx.Class</code>.\n * Further more the variant <code>qx.aspects</code> must be set to <code>on</code>.\n */\nqx.Bootstrap.define(\"qx.dev.Profile\", {\n  statics: {\n    /**\n     * Storage for profiling data\n     *\n     * @internal\n     */\n    __profileData: {},\n\n    /**\n     * Array for call stack-like data types.\n     *\n     * @internal\n     */\n    __callStack: [],\n\n    /**\n     * Flag marking profiler run.\n     *\n     * @internal\n     */\n    __doProfile: true,\n\n    /**\n     * Profiler execution time. Subtracted for more accurate calculations.\n     *\n     * @internal\n     */\n    __callOverhead: undefined,\n\n    /**\n     * Amount of times to run calculation of profiler overhead.\n     *\n     * @internal\n     */\n    __calibrateCount: 4000,\n\n    /**\n     * Clear profiling data and start profiling.\n     */\n    start() {\n      this.__doProfile = true;\n      this.__profileData = {};\n      this.__callStack.splice(0, this.__callStack.length - 2);\n    },\n\n    /**\n     * Stop profiling.\n     */\n    stop() {\n      this.__doProfile = false;\n    },\n\n    /**\n     * Return the profiling data as JSON data structure.\n     *\n     * Example:\n     * <pre class=\"javascript\">\n     * {\n     *   \"qx.core.ObjectRegistry.toHashCode (static)\":{\n     *     *     \"totalTime\":3,\n     *     \"ownTime\":3,\n     *     \"callCount\":218,\n     *     \"subRoutineCalls\":0,\n     *     \"name\":\"qx.core.ObjectRegistry.toHashCode\",\n     *     \"type\":\"static\"\n     *   },\n     *   \"qx.core.Object.addListener (member)\":{\n     *     \"totalTime\":19,\n     *     \"ownTime\":12,\n     *     \"callCount\":59,\n     *     \"subRoutineCalls\":251,\n     *     \"name\":\"qx.core.Object.addListener\",\n     *     \"type\":\"member\"\n     *   },\n     *   \"qx.ui.table.cellrenderer.Default (constructor)\":{\n     *     \"totalTime\":2,\n     *     \"ownTime\":1,\n     *     \"callCount\":1,\n     *     \"subRoutineCalls\":4,\n     *     \"name\":\"qx.ui.table.cellrenderer.Default\",\n     *     \"type\":\"constructor\"\n     *   }\n     * }\n     * </pre>\n     *\n     * @return {Map} The current profiling data.\n     */\n    getProfileData() {\n      return this.__profileData;\n    },\n\n    /**\n     * Show profiling results in a popup window. The results are sorted by the\n     * function's own time.\n     *\n     * @param maxLength {Integer?100} maximum number of entries to display.\n     */\n    showResults(maxLength) {\n      this.stop();\n      this.normalizeProfileData();\n\n      var data = Object.values(this.__profileData);\n      data = data.sort(function (a, b) {\n        return a.calibratedOwnTime < b.calibratedOwnTime ? 1 : -1;\n      });\n\n      data = data.slice(0, maxLength || 100);\n\n      var str = [\n        \"<table><tr><th>Name</th><th>Type</th><th>Own time</th><th>Avg time</th><th>calls</th></tr>\"\n      ];\n\n      for (var i = 0; i < data.length; i++) {\n        var profData = data[i];\n        if (profData.name == \"qx.core.Aspect.__calibrateHelper\") {\n          continue;\n        }\n        str.push(\"<tr><td>\");\n        str.push(profData.name, \"()\");\n        str.push(\"</td><td>\");\n        str.push(profData.type);\n        str.push(\"</td><td>\");\n        str.push(profData.calibratedOwnTime.toPrecision(3));\n        str.push(\"ms</td><td>\");\n        str.push(\n          (profData.calibratedOwnTime / profData.callCount).toPrecision(3)\n        );\n\n        str.push(\"ms</td><td>\");\n        str.push(profData.callCount);\n        str.push(\"</td></tr>\");\n      }\n\n      str.push(\"</table>\");\n\n      var win = window.open(\"about:blank\", \"profileLog\");\n      var doc = win.document;\n\n      doc.open();\n      doc.write(\n        \"<html><head><style type='text/css'>body{font-family:monospace;font-size:11px;background:white;color:black;}</style></head><body>\"\n      );\n\n      doc.write(str.join(\"\"));\n      doc.write(\"</body></html>\");\n      doc.close();\n    },\n\n    /**\n     * Measure the overhead of calling a wrapped function vs. calling an\n     * unwrapped function.\n     *\n     * @lint ignoreDeprecated(eval)\n     *\n     * @param count {Integer} Number of iterations to measure.\n     * @return {Number} Overhead of a wrapped function call in milliseconds.\n     */\n    __calibrate(count) {\n      // we use eval to unroll the loop because we don't want to measure the loop overhead.\n\n      // Measure wrapped function\n      var fcn;\n      var code = [\n        \"var fcn = function(){ var fcn=qx.dev.Profile.__calibrateHelper;\"\n      ];\n\n      for (var i = 0; i < count; i++) {\n        code.push(\"fcn();\");\n      }\n      code.push(\"};\");\n      eval(code.join(\"\"));\n      var start = new Date();\n      fcn();\n      var end = new Date();\n      var profTime = end - start;\n\n      // Measure unwrapped function\n      var code = [\n        \"var plainFunc = function() {};\",\n        \"var fcn = function(){ var fcn=plainFunc;\"\n      ];\n\n      for (var i = 0; i < count; i++) {\n        code.push(\"fcn();\");\n      }\n      code.push(\"};\");\n      eval(code.join(\"\"));\n\n      var start = new Date();\n      fcn();\n      var end = new Date();\n      var plainTime = end - start;\n\n      // Compute per call overhead\n      return (profTime - plainTime) / count;\n    },\n\n    /**\n     * Helper to measure overhead.\n     */\n    __calibrateHelper() {},\n\n    /**\n     * Normalize profiling data by subtracting the overhead of wrapping from the\n     * function's own time.\n     */\n    normalizeProfileData() {\n      if (this.__callOverhead == undefined) {\n        this.__callOverhead = this.__calibrate(this.__calibrateCount);\n      }\n\n      for (var key in this.__profileData) {\n        var profileData = this.__profileData[key];\n\n        profileData.calibratedOwnTime = Math.max(\n          profileData.ownTime -\n            profileData.subRoutineCalls * this.__callOverhead,\n          0\n        );\n\n        profileData.calibratedAvgTime =\n          profileData.calibratedOwnTime / profileData.callCount;\n      }\n    },\n\n    /**\n     * This function will be called before each function call. (Start timing)\n     *\n     * @param fullName {String} Full name of the function including the class name.\n     * @param fcn {Function} Function to time.\n     * @param type {String} Function type as in parameter with same name to\n     *                      {@link qx.core.Aspect#addAdvice}\n     * @param args {arguments} The arguments passed to the wrapped function\n     */\n    profileBefore(fullName, fcn, type, args) {\n      var me = qx.dev.Profile;\n\n      if (!me.__doProfile) {\n        return;\n      }\n\n      var callData = {\n        subRoutineTime: 0,\n        subRoutineCalls: 0\n      };\n\n      me.__callStack.push(callData);\n      callData.startTime = new Date();\n    },\n\n    /**\n     * This function will be called after each function call. (Stop timing)\n     *\n     * @param fullName {String} Full name of the function including the class name.\n     * @param fcn {Function} Function to time.\n     * @param type {String} Function type as in parameter with same name to\n     *                      {@link qx.core.Aspect#addAdvice}\n     * @param args {arguments} The arguments passed to the wrapped function\n     * @param returnValue {var} return value of the wrapped function.\n     */\n    profileAfter(fullName, fcn, type, args, returnValue) {\n      var me = qx.dev.Profile;\n      if (!me.__doProfile) {\n        return;\n      }\n\n      var endTime = new Date();\n      var callData = me.__callStack.pop();\n      var totalTime = endTime - callData.startTime;\n      var ownTime = totalTime - callData.subRoutineTime;\n\n      if (me.__callStack.length > 0) {\n        var lastCall = me.__callStack[me.__callStack.length - 1];\n        lastCall.subRoutineTime += totalTime;\n        lastCall.subRoutineCalls += 1;\n      }\n\n      var fcnKey = fullName + \" (\" + type + \")\";\n\n      if (me.__profileData[fcnKey] === undefined) {\n        me.__profileData[fcnKey] = {\n          totalTime: 0,\n          ownTime: 0,\n          callCount: 0,\n          subRoutineCalls: 0,\n          name: fullName,\n          type: type\n        };\n      }\n\n      var functionData = me.__profileData[fcnKey];\n      functionData.totalTime += totalTime;\n      functionData.ownTime += ownTime;\n      functionData.callCount += 1;\n      functionData.subRoutineCalls += callData.subRoutineCalls;\n    }\n  },\n\n  defer(statics) {\n    if (qx.core.Environment.get(\"qx.aspects\")) {\n      // Inform user\n      qx.Bootstrap.debug(\"Enable global profiling...\");\n\n      // Add advices for profiling\n      qx.core.Aspect.addAdvice(statics.profileBefore, \"before\");\n      qx.core.Aspect.addAdvice(statics.profileAfter, \"after\");\n\n      statics.__calibrateHelper = qx.core.Aspect.wrap(\n        \"qx.dev.Profile.__calibrateHelper\",\n        statics.__calibrateHelper,\n        \"static\"\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,gBAAgB,EAAE;IACpCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MACIC,SAAa,EAAE,CAAC,CAAC;MAEjB;AACJ;AACA;AACA;AACA;MACIC,SAAW,EAAE,EAAE;MAEf;AACJ;AACA;AACA;AACA;MACIC,SAAW,EAAE,IAAI;MAEjB;AACJ;AACA;AACA;AACA;MACIC,SAAc,EAAEC,SAAS;MAEzB;AACJ;AACA;AACA;AACA;MACIC,SAAgB,EAAE,IAAI;MAEtB;AACJ;AACA;MACIC,KAAK,WAALA,KAAKA,CAAA,EAAG;QACN,IAAI,CAACJ,SAAW,GAAG,IAAI;QACvB,IAAI,CAACF,SAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAACC,SAAW,CAACM,MAAM,CAAC,CAAC,EAAE,IAAI,CAACN,SAAW,CAACO,MAAM,GAAG,CAAC,CAAC;MACzD,CAAC;MAED;AACJ;AACA;MACIC,IAAI,WAAJA,IAAIA,CAAA,EAAG;QACL,IAAI,CAACP,SAAW,GAAG,KAAK;MAC1B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIQ,cAAc,WAAdA,cAAcA,CAAA,EAAG;QACf,OAAO,IAAI,CAACV,SAAa;MAC3B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIW,WAAW,WAAXA,WAAWA,CAACC,SAAS,EAAE;QACrB,IAAI,CAACH,IAAI,CAAC,CAAC;QACX,IAAI,CAACI,oBAAoB,CAAC,CAAC;QAE3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",
  "ignoreList": []
}