{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "delay",
    "deferredFunction",
    "context",
    "undefined",
    "Environment",
    "get",
    "setDelay",
    "getDelay",
    "parseInt",
    "i",
    "lang",
    "Type",
    "isFunction",
    "arguments",
    "setDeferredFunction",
    "isNumber",
    "setContext",
    "properties",
    "check",
    "init",
    "nullable",
    "dev",
    "unit",
    "AsyncWrapper"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/AsyncWrapper.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Daniel Wagner (d_wagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n *  This class stores the information needed to instruct a running test to wait.\r\n *  It is thrown as an exception to be caught by the method executing the test.\r\n */\r\nqx.Class.define(\"qx.dev.unit.AsyncWrapper\", {\r\n  extend: qx.core.Object,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param delay {Integer?} The amount of time in milliseconds to wait\r\n   * @param deferredFunction {Function?} The function to run after the timeout\r\n   * has expired.\r\n   * @param context {Object?window} Optional execution context for deferredFunction\r\n   */\r\n  construct(delay, deferredFunction, context) {\r\n    if (delay === undefined && deferredFunction === undefined) {\r\n      // scale default delay if wait() is called without arguments\r\n      if (qx.core.Environment.get(\"qx.test.delay.scale\")) {\r\n        this.setDelay(\r\n          this.getDelay() *\r\n            parseInt(qx.core.Environment.get(\"qx.test.delay.scale\"), 10)\r\n        );\r\n      }\r\n    } else {\r\n      for (var i = 0; i < 2; i++) {\r\n        if (qx.lang.Type.isFunction(arguments[i])) {\r\n          this.setDeferredFunction(arguments[i]);\r\n        } else if (qx.lang.Type.isNumber(arguments[i])) {\r\n          if (qx.core.Environment.get(\"qx.test.delay.scale\")) {\r\n            this.setDelay(\r\n              arguments[i] *\r\n                parseInt(qx.core.Environment.get(\"qx.test.delay.scale\"), 10)\r\n            );\r\n          } else {\r\n            this.setDelay(arguments[i]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (context) {\r\n      this.setContext(context);\r\n    }\r\n  },\r\n\r\n  properties: {\r\n    /** The function to run after the timeout has expired */\r\n    deferredFunction: {\r\n      check: \"Function\",\r\n      init: false\r\n    },\r\n\r\n    /** The context in which the timeout function should be executed  */\r\n    context: {\r\n      check: \"Object\",\r\n      init: null\r\n    },\r\n\r\n    /** The amount of time in milliseconds to wait */\r\n    delay: {\r\n      check: \"Integer\",\r\n      nullable: false,\r\n      init: 10000\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,0BAA0B,EAAE;IAC1CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtB;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,KAAK,EAAEC,gBAAgB,EAAEC,OAAO,EAAE;MAC1C,IAAIF,KAAK,KAAKG,SAAS,IAAIF,gBAAgB,KAAKE,SAAS,EAAE;QACzD;QACA,IAAIb,EAAE,CAACO,IAAI,CAACO,WAAW,CAACC,GAAG,CAAC,qBAAqB,CAAC,EAAE;UAClD,IAAI,CAACC,QAAQ,CACX,IAAI,CAACC,QAAQ,CAAC,CAAC,GACbC,QAAQ,CAAClB,EAAE,CAACO,IAAI,CAACO,WAAW,CAACC,GAAG,CAAC,qBAAqB,CAAC,EAAE,EAAE,CAC/D,CAAC;QACH;MACF,CAAC,MAAM;QACL,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1B,IAAInB,EAAE,CAACoB,IAAI,CAACC,IAAI,CAACC,UAAU,CAACC,SAAS,CAACJ,CAAC,CAAC,CAAC,EAAE;YACzC,IAAI,CAACK,mBAAmB,CAACD,SAAS,CAACJ,CAAC,CAAC,CAAC;UACxC,CAAC,MAAM,IAAInB,EAAE,CAACoB,IAAI,CAACC,IAAI,CAACI,QAAQ,CAACF,SAAS,CAACJ,CAAC,CAAC,CAAC,EAAE;YAC9C,IAAInB,EAAE,CAACO,IAAI,CAACO,WAAW,CAACC,GAAG,CAAC,qBAAqB,CAAC,EAAE;cAClD,IAAI,CAACC,QAAQ,CACXO,SAAS,CAACJ,CAAC,CAAC,GACVD,QAAQ,CAAClB,EAAE,CAACO,IAAI,CAACO,WAAW,CAACC,GAAG,CAAC,qBAAqB,CAAC,EAAE,EAAE,CAC/D,CAAC;YACH,CAAC,MAAM;cACL,IAAI,CAACC,QAAQ,CAACO,SAAS,CAACJ,CAAC,CAAC,CAAC;YAC7B;UACF;QACF;MACF;MAEA,IAAIP,OAAO,EAAE;QACX,IAAI,CAACc,UAAU,CAACd,OAAO,CAAC;MAC1B;IACF,CAAC;IAEDe,UAAU,EAAE;MACV;MACAhB,gBAAgB,EAAE;QAChBiB,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAE;MACR,CAAC;MAED;MACAjB,OAAO,EAAE;QACPgB,KAAK,EAAE,QAAQ;QACfC,IAAI,EAAE;MACR,CAAC;MAED;MACAnB,KAAK,EAAE;QACLkB,KAAK,EAAE,SAAS;QAChBE,QAAQ,EAAE,KAAK;QACfD,IAAI,EAAE;MACR;IACF;EACF,CAAC,CAAC;EAxFF7B,EAAE,CAAC+B,GAAG,CAACC,IAAI,CAACC,YAAY,CAAC9B,aAAa,GAAGA,aAAa;AAAC"
}