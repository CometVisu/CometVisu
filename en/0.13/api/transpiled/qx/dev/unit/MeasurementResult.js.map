{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "Object",
    "construct",
    "message",
    "iterations",
    "ownTime",
    "renderTime",
    "__message",
    "__iterations",
    "__ownTime",
    "__renderTime",
    "members",
    "getData",
    "toString",
    "join",
    "dev",
    "unit",
    "MeasurementResult"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/MeasurementResult.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Daniel Wagner (danielwagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Performance test result object. Used to communicate measurements to the unit\r\n * testing framework.\r\n */\r\nqx.Class.define(\"qx.dev.unit.MeasurementResult\", {\r\n  extend: Object,\r\n\r\n  /**\r\n   *\r\n   * @param message {String} Description\r\n   * @param iterations {Number} Amount of times the tested code was executed\r\n   * @param ownTime {Number} Elapsed JavaScript execution time\r\n   * @param renderTime {Number} Elapsed DOM rendering time\r\n   */\r\n  construct(message, iterations, ownTime, renderTime) {\r\n    this.__message = message;\r\n    this.__iterations = iterations;\r\n    this.__ownTime = ownTime;\r\n    this.__renderTime = renderTime;\r\n  },\r\n\r\n  members: {\r\n    __message: null,\r\n    __iterations: null,\r\n    __ownTime: null,\r\n    __renderTime: null,\r\n\r\n    /**\r\n     * Returns the stored data as a map.\r\n     * @return {Map} The stored data.\r\n     */\r\n    getData() {\r\n      return {\r\n        message: this.__message,\r\n        iterations: this.__iterations,\r\n        ownTime: this.__ownTime,\r\n        renderTime: this.__renderTime\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns a readable summary of this result\r\n     *\r\n     * @return {String} Result summary\r\n     */\r\n    toString() {\r\n      return [\r\n        \"Measured: \" + this.__message,\r\n        \"Iterations: \" + this.__iterations,\r\n        \"Time: \" + this.__ownTime + \"ms\",\r\n        \"Render time: \" + this.__renderTime + \"ms\"\r\n      ].join(\"\\n\");\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,+BAA+B,EAAE;IAC/CC,MAAM,EAAEC,MAAM;IAEd;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,EAAE;MAClD,IAAI,CAACC,SAAS,GAAGJ,OAAO;MACxB,IAAI,CAACK,SAAY,GAAGJ,UAAU;MAC9B,IAAI,CAACK,SAAS,GAAGJ,OAAO;MACxB,IAAI,CAACK,SAAY,GAAGJ,UAAU;IAChC,CAAC;IAEDK,OAAO,EAAE;MACPJ,SAAS,EAAE,IAAI;MACfC,SAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,SAAY,EAAE,IAAI;MAElB;AACJ;AACA;AACA;MACIE,OAAO,WAAAA,QAAA,EAAG;QACR,OAAO;UACLT,OAAO,EAAE,IAAI,CAACI,SAAS;UACvBH,UAAU,EAAE,IAAI,CAACI,SAAY;UAC7BH,OAAO,EAAE,IAAI,CAACI,SAAS;UACvBH,UAAU,EAAE,IAAI,CAACI;QACnB,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIG,QAAQ,WAAAA,SAAA,EAAG;QACT,OAAO,CACL,YAAY,GAAG,IAAI,CAACN,SAAS,EAC7B,cAAc,GAAG,IAAI,CAACC,SAAY,EAClC,QAAQ,GAAG,IAAI,CAACC,SAAS,GAAG,IAAI,EAChC,eAAe,GAAG,IAAI,CAACC,SAAY,GAAG,IAAI,CAC3C,CAACI,IAAI,CAAC,IAAI,CAAC;MACd;IACF;EACF,CAAC,CAAC;EAxEFpB,EAAE,CAACqB,GAAG,CAACC,IAAI,CAACC,iBAAiB,CAACpB,aAAa,GAAGA,aAAa;AAAC"
}