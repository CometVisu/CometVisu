{
  "className": "qx.dev.unit.AbstractTestSuite",
  "packageName": "qx.dev.unit",
  "name": "AbstractTestSuite",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 599
      },
      "end": {
        "line": 101,
        "column": 3,
        "index": 2496
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>A TestSuite is a collection of test functions, classes and other test suites,\n which should be run together.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 27,
        "column": 2,
        "index": 699
      },
      "end": {
        "line": 30,
        "column": 3,
        "index": 751
      }
    }
  },
  "members": {
    "_tests": {
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 771
        },
        "end": {
          "line": 33,
          "column": 16,
          "index": 783
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "addTestFunction": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 946
        },
        "end": {
          "line": 43,
          "column": 5,
          "index": 1051
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a single function to test</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the function",
            "paramName": "name",
            "description": " Name of the function",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "fcn {Function} The test function",
            "paramName": "fcn",
            "description": " The test function",
            "type": "Function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addTestMethod": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1282
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1405
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a method from a class as test to the suite</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testCase {qx.dev.unit.TestCase} The class containing the test method",
            "paramName": "testCase",
            "description": " The class containing the test method",
            "type": "qx.dev.unit.TestCase"
          },
          {
            "name": "@param",
            "body": "functionName {String} The name of the test method",
            "paramName": "functionName",
            "description": " The name of the test method",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addFail": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1594
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1725
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a test function to the suite, which fails.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "functionName {String} Name of the function",
            "paramName": "functionName",
            "description": " Name of the function",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "message {String} The fail message",
            "paramName": "message",
            "description": " The fail message",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "run": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1895
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 2019
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Run all tests using the given test result</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testResult {qx.dev.unit.TestResult} Test result class, which runs the tests.",
            "paramName": "testResult",
            "description": " Test result class, which runs the tests.",
            "type": "qx.dev.unit.TestResult"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTestMethods": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2168
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2433
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a list of all test methods in the suite</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function[]} A list of all test methods in the suite",
            "type": "Function[]",
            "description": " A list of all test methods in the suite"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 98,
        "column": 2,
        "index": 2442
      },
      "end": {
        "line": 100,
        "column": 3,
        "index": 2492
      }
    }
  },
  "descendants": [
    "qx.dev.unit.TestClass",
    "qx.dev.unit.TestSuite"
  ]
}