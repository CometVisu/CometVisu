{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "include",
    "dev",
    "unit",
    "MTestLoader",
    "members",
    "main",
    "TestLoader",
    "superclass",
    "prototype",
    "call",
    "log",
    "appender",
    "Console",
    "url",
    "_getClassNameFromUrl",
    "setTestNamespace",
    "namespace",
    "core",
    "Environment",
    "get",
    "window",
    "top",
    "jsUnitTestSuite",
    "runJsUnit",
    "runStandAlone"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/TestLoader.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The test loader is the base class of a native application, which can be used\n * to run tests from a non-GUI application or from within JSUnit.\n */\nqx.Class.define(\"qx.dev.unit.TestLoader\", {\n  extend: qx.application.Standalone,\n\n  include: [qx.dev.unit.MTestLoader],\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // overridden\n    main() {\n      super.main();\n\n      // Dependencies to loggers\n      qx.log.appender.Console;\n\n      var url = this._getClassNameFromUrl();\n      if (url !== \"__unknown_class__\") {\n        this.setTestNamespace(this._getClassNameFromUrl());\n      } else {\n        var namespace = qx.core.Environment.get(\"qx.testNameSpace\");\n        if (namespace) {\n          this.setTestNamespace(namespace);\n        }\n      }\n\n      if (window.top.jsUnitTestSuite) {\n        this.runJsUnit();\n        return;\n      }\n\n      if (\n        window == window.top &&\n        qx.core.Environment.get(\"qx.standaloneAutorun\")\n      ) {\n        this.runStandAlone();\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,wBAAwB,EAAE;IACxCC,MAAM,EAAEN,EAAE,CAACO,WAAW,CAACC,UAAU;IAEjCC,OAAO,EAAE,CAACT,EAAE,CAACU,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC;IAElC;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;MACAC,IAAI,WAAAA,KAAA,EAAG;QACLd,EAAA,CAAAU,GAAA,CAAAC,IAAA,CAAAI,UAAA,CAAAC,UAAA,CAAAC,SAAA,CAAAH,IAAA,CAAAI,IAAA;;QAEA;QACAlB,EAAE,CAACmB,GAAG,CAACC,QAAQ,CAACC,OAAO;QAEvB,IAAIC,GAAG,GAAG,IAAI,CAACC,oBAAoB,EAAE;QACrC,IAAID,GAAG,KAAK,mBAAmB,EAAE;UAC/B,IAAI,CAACE,gBAAgB,CAAC,IAAI,CAACD,oBAAoB,EAAE,CAAC;QACpD,CAAC,MAAM;UACL,IAAIE,SAAS,GAAGzB,EAAE,CAAC0B,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,kBAAkB,CAAC;UAC3D,IAAIH,SAAS,EAAE;YACb,IAAI,CAACD,gBAAgB,CAACC,SAAS,CAAC;UAClC;QACF;QAEA,IAAII,MAAM,CAACC,GAAG,CAACC,eAAe,EAAE;UAC9B,IAAI,CAACC,SAAS,EAAE;UAChB;QACF;QAEA,IACEH,MAAM,IAAIA,MAAM,CAACC,GAAG,IACpB9B,EAAE,CAAC0B,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,sBAAsB,CAAC,EAC/C;UACA,IAAI,CAACK,aAAa,EAAE;QACtB;MACF;IACF;EACF,CAAC,CAAC;EAhEFjC,EAAE,CAACU,GAAG,CAACC,IAAI,CAACI,UAAU,CAACZ,aAAa,GAAGA,aAAa;AAAC"
}