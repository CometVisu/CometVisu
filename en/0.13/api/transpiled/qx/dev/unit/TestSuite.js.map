{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "AbstractTestSuite",
    "construct",
    "testClassOrNamespace",
    "_tests",
    "add",
    "members",
    "lang",
    "Type",
    "isString",
    "evalTestClassOrNamespace",
    "window",
    "eval",
    "addFail",
    "isFunction",
    "addTestClass",
    "isObject",
    "addTestNamespace",
    "namespace",
    "classname",
    "isSubClassOf",
    "TestCase",
    "$$classtype",
    "Array",
    "key",
    "clazz",
    "push",
    "TestClass",
    "getTestClasses",
    "classes",
    "i",
    "length",
    "test",
    "TestSuite"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/TestSuite.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A TestSuite is a collection of test functions, classes and other test suites,\n * which should be run together.\n */\nqx.Class.define(\"qx.dev.unit.TestSuite\", {\n  extend: qx.dev.unit.AbstractTestSuite,\n\n  /**\n   * @param testClassOrNamespace {var} Either a string with the name of the test\n   *    class or test namespace or a reference to the test class or namespace.\n   *    All test in the given class/namespace will be added to the suite.\n   */\n  construct(testClassOrNamespace) {\n    super();\n\n    this._tests = [];\n\n    if (testClassOrNamespace) {\n      this.add(testClassOrNamespace);\n    }\n  },\n\n  members: {\n    /**\n     * Add a test class or namespace to the suite\n     *\n     * @lint ignoreDeprecated(alert, eval)\n     *\n     * @param testClassOrNamespace {var} Either a string with the name of the test\n     *    class or test namespace or a reference to the test class or namespace.\n     *    All test in the given class/namespace will be added to the suite.\n     */\n    add(testClassOrNamespace) {\n      // This try-block is needed to avoid errors (e.g. \"too much recursion\")\n      //      try\n      //      {\n      if (qx.lang.Type.isString(testClassOrNamespace)) {\n        var evalTestClassOrNamespace = window.eval(testClassOrNamespace);\n\n        if (!evalTestClassOrNamespace) {\n          this.addFail(\n            testClassOrNamespace,\n            \"The class/namespace '\" + testClassOrNamespace + \"' is undefined!\"\n          );\n        }\n\n        testClassOrNamespace = evalTestClassOrNamespace;\n      }\n\n      if (qx.lang.Type.isFunction(testClassOrNamespace)) {\n        this.addTestClass(testClassOrNamespace);\n      } else if (qx.lang.Type.isObject(testClassOrNamespace)) {\n        this.addTestNamespace(testClassOrNamespace);\n      } else {\n        this.addFail(\n          \"existsCheck\",\n          \"Unknown test class '\" + testClassOrNamespace + \"'!\"\n        );\n\n        return;\n      }\n      //      }\n      //      catch (ex)\n      //      {\n      //        window.alert(\"An error occurred while adding test classes/namespaces\\nPlease try a different test file.\");\n      //      }\n    },\n\n    /**\n     * Add all tests from the given namespace to the suite\n     *\n     * @param namespace {Object} The topmost namespace of the tests classes to add.\n     */\n    addTestNamespace(namespace) {\n      if (qx.lang.Type.isFunction(namespace) && namespace.classname) {\n        if (qx.Class.isSubClassOf(namespace, qx.dev.unit.TestCase)) {\n          if (namespace.$$classtype !== \"abstract\") {\n            this.addTestClass(namespace);\n          }\n          return;\n        }\n      } else if (\n        qx.lang.Type.isObject(namespace) &&\n        !(namespace instanceof Array)\n      ) {\n        for (var key in namespace) {\n          this.addTestNamespace(namespace[key]);\n        }\n      }\n    },\n\n    /**\n     * Add a test class to the suite\n     *\n     * @param clazz {Class} The test class to add\n     */\n    addTestClass(clazz) {\n      this._tests.push(new qx.dev.unit.TestClass(clazz));\n    },\n\n    /**\n     * Get a list of all test classes in the suite\n     *\n     * @return {Class[]} A list of all test classes in the suite\n     */\n    getTestClasses() {\n      var classes = [];\n\n      for (var i = 0; i < this._tests.length; i++) {\n        var test = this._tests[i];\n\n        if (test instanceof qx.dev.unit.TestClass) {\n          classes.push(test);\n        }\n      }\n\n      return classes;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}