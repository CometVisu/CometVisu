{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "_tests",
    "members",
    "addTestFunction",
    "name",
    "fcn",
    "push",
    "dev",
    "unit",
    "TestFunction",
    "addTestMethod",
    "testCase",
    "functionName",
    "addFail",
    "message",
    "fail",
    "run",
    "testResult",
    "i",
    "length",
    "getTestMethods",
    "methods",
    "test",
    "destruct",
    "_disposeArray",
    "AbstractTestSuite"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/AbstractTestSuite.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A TestSuite is a collection of test functions, classes and other test suites,\n * which should be run together.\n */\nqx.Class.define(\"qx.dev.unit.AbstractTestSuite\", {\n  extend: qx.core.Object,\n  type: \"abstract\",\n\n  construct() {\n    super();\n    this._tests = [];\n  },\n\n  members: {\n    _tests: null,\n\n    /**\n     * Add a single function to test\n     *\n     * @param name {String} Name of the function\n     * @param fcn {Function} The test function\n     */\n    addTestFunction(name, fcn) {\n      this._tests.push(new qx.dev.unit.TestFunction(null, name, fcn));\n    },\n\n    /**\n     * Add a method from a class as test to the suite\n     *\n     * @param testCase {qx.dev.unit.TestCase} The class containing the test method\n     * @param functionName {String} The name of the test method\n     */\n    addTestMethod(testCase, functionName) {\n      this._tests.push(new qx.dev.unit.TestFunction(testCase, functionName));\n    },\n\n    /**\n     * Add a test function to the suite, which fails.\n     *\n     * @param functionName {String} Name of the function\n     * @param message {String} The fail message\n     */\n    addFail(functionName, message) {\n      this.addTestFunction(functionName, function () {\n        this.fail(message);\n      });\n    },\n\n    /**\n     * Run all tests using the given test result\n     *\n     * @param testResult {qx.dev.unit.TestResult} Test result class, which runs the tests.\n     */\n    run(testResult) {\n      for (var i = 0; i < this._tests.length; i++) {\n        this._tests[i].run(testResult);\n      }\n    },\n\n    /**\n     * Get a list of all test methods in the suite\n     *\n     * @return {Function[]} A list of all test methods in the suite\n     */\n    getTestMethods() {\n      var methods = [];\n\n      for (var i = 0; i < this._tests.length; i++) {\n        var test = this._tests[i];\n\n        if (test instanceof qx.dev.unit.TestFunction) {\n          methods.push(test);\n        }\n      }\n\n      return methods;\n    }\n  },\n\n  destruct() {\n    this._disposeArray(\"_tests\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,+BAAhB,EAAiD;IAC/CC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MAD+B;IAE/CC,IAAI,EAAE,UAFyC;IAI/CC,SAJ+C,uBAInC;MACV;MACA,KAAKC,MAAL,GAAc,EAAd;IACD,CAP8C;IAS/CC,OAAO,EAAE;MACPD,MAAM,EAAE,IADD;;MAGP;AACJ;AACA;AACA;AACA;AACA;MACIE,eATO,2BASSC,IATT,EASeC,GATf,EASoB;QACzB,KAAKJ,MAAL,CAAYK,IAAZ,CAAiB,IAAIhB,EAAE,CAACiB,GAAH,CAAOC,IAAP,CAAYC,YAAhB,CAA6B,IAA7B,EAAmCL,IAAnC,EAAyCC,GAAzC,CAAjB;MACD,CAXM;;MAaP;AACJ;AACA;AACA;AACA;AACA;MACIK,aAnBO,yBAmBOC,QAnBP,EAmBiBC,YAnBjB,EAmB+B;QACpC,KAAKX,MAAL,CAAYK,IAAZ,CAAiB,IAAIhB,EAAE,CAACiB,GAAH,CAAOC,IAAP,CAAYC,YAAhB,CAA6BE,QAA7B,EAAuCC,YAAvC,CAAjB;MACD,CArBM;;MAuBP;AACJ;AACA;AACA;AACA;AACA;MACIC,OA7BO,mBA6BCD,YA7BD,EA6BeE,OA7Bf,EA6BwB;QAC7B,KAAKX,eAAL,CAAqBS,YAArB,EAAmC,YAAY;UAC7C,KAAKG,IAAL,CAAUD,OAAV;QACD,CAFD;MAGD,CAjCM;;MAmCP;AACJ;AACA;AACA;AACA;MACIE,GAxCO,eAwCHC,UAxCG,EAwCS;QACd,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjB,MAAL,CAAYkB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;UAC3C,KAAKjB,MAAL,CAAYiB,CAAZ,EAAeF,GAAf,CAAmBC,UAAnB;QACD;MACF,CA5CM;;MA8CP;AACJ;AACA;AACA;AACA;MACIG,cAnDO,4BAmDU;QACf,IAAIC,OAAO,GAAG,EAAd;;QAEA,KAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjB,MAAL,CAAYkB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;UAC3C,IAAII,IAAI,GAAG,KAAKrB,MAAL,CAAYiB,CAAZ,CAAX;;UAEA,IAAII,IAAI,YAAYhC,EAAE,CAACiB,GAAH,CAAOC,IAAP,CAAYC,YAAhC,EAA8C;YAC5CY,OAAO,CAACf,IAAR,CAAagB,IAAb;UACD;QACF;;QAED,OAAOD,OAAP;MACD;IA/DM,CATsC;IA2E/CE,QA3E+C,sBA2EpC;MACT,KAAKC,aAAL,CAAmB,QAAnB;IACD;EA7E8C,CAAjD;EAtBAlC,EAAE,CAACiB,GAAH,CAAOC,IAAP,CAAYiB,iBAAZ,CAA8BhC,aAA9B,GAA8CA,aAA9C"
}