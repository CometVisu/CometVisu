{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "testCase",
    "methodName",
    "testFunction",
    "setTestFunction",
    "setClassName",
    "classname",
    "setTestClass",
    "setName",
    "properties",
    "check",
    "name",
    "className",
    "init",
    "testClass",
    "members",
    "run",
    "testResult",
    "inst",
    "getTestClass",
    "method",
    "getName",
    "set",
    "testFunc",
    "constructor",
    "ex",
    "then",
    "resume",
    "wait",
    "setUp",
    "lang",
    "Type",
    "isFunction",
    "tearDown",
    "getFullName",
    "getClassName",
    "join",
    "dev",
    "unit",
    "TestFunction"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/TestFunction.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n * Wrapper object for a method containing unit test code.\n */\nqx.Class.define(\"qx.dev.unit.TestFunction\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * There are two ways to define a test function. First by passing a class\n   * and a method name to the constructor or second by giving a the method\n   * directly.\n   *\n   * @param testCase {qx.dev.unit.TestCase?null} The test class, which contains the test method\n   * @param methodName {String?null} The name of the method\n   * @param testFunction {Function?null} A reference to a test function. If this\n   *    parameter is set the other parameters are ignored.\n   */\n  construct(testCase, methodName, testFunction) {\n    if (testFunction) {\n      this.setTestFunction(testFunction);\n    }\n\n    if (testCase) {\n      this.setClassName(testCase.classname);\n      this.setTestClass(testCase);\n    }\n\n    this.setName(methodName);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The test function */\n    testFunction: { check: \"Function\" },\n\n    /** Name of the test */\n    name: { check: \"String\" },\n\n    /** Name of the class containing the test */\n    className: {\n      check: \"String\",\n      init: \"\"\n    },\n\n    /** The test class */\n    testClass: {\n      check: \"qx.dev.unit.TestCase\",\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Runs the test and logs the test result to a {@link TestResult} instance,\n     *\n     * @param testResult {qx.dev.unit.TestResult} The class used to log the test result.\n     */\n    run(testResult) {\n      var inst = this.getTestClass();\n      var method = this.getName();\n\n      inst.set({\n        testFunc: this,\n        testResult: testResult\n      });\n\n      testResult.run(this, function () {\n        switch (inst[method].constructor.name) {\n          case \"Function\":\n            try {\n              inst[method]();\n            } catch (ex) {\n              throw ex;\n            }\n            break;\n          case \"AsyncFunction\":\n            inst[method]()\n              .then(function () {\n                inst.resume();\n              })\n              .catch(function (ex) {\n                inst.resume(function () {\n                  throw ex;\n                });\n              });\n\n            inst.wait();\n        }\n      });\n    },\n\n    /**\n     * Call the test class' <code>setUp</code> method.\n     */\n    setUp() {\n      var inst = this.getTestClass();\n      if (qx.lang.Type.isFunction(inst.setUp)) {\n        inst.setUp();\n      }\n    },\n\n    /**\n     * Call the test class' <code>tearDown</code> method.\n     */\n    tearDown() {\n      var inst = this.getTestClass();\n      if (qx.lang.Type.isFunction(inst.tearDown)) {\n        inst.tearDown();\n      }\n    },\n\n    /**\n     * Get the full name of the test.\n     *\n     * @return {String} The test's full name\n     */\n    getFullName() {\n      return [this.getClassName(), this.getName()].join(\":\");\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}