{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "MAssert",
    "events",
    "assertionFailed",
    "properties",
    "testResult",
    "init",
    "testFunc",
    "members",
    "__autoDispose",
    "isDebugOn",
    "hasDebug",
    "wait",
    "delay",
    "deferredFunction",
    "context",
    "dev",
    "unit",
    "AsyncWrapper",
    "resume",
    "self",
    "getTestResult",
    "run",
    "getTestFunc",
    "resumeSetUp",
    "func",
    "inst",
    "method",
    "getName",
    "ex",
    "resumeHandler",
    "that",
    "args",
    "lang",
    "Array",
    "fromArguments",
    "arguments",
    "bind",
    "apply",
    "concat",
    "skip",
    "message",
    "RequirementError",
    "addAutoDispose",
    "obj",
    "push",
    "doAutoDispose",
    "forEach",
    "isDisposed",
    "ui",
    "Widget",
    "destroy",
    "dispose",
    "TestCase"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/TestCase.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n * Base class for all unit tests.\n */\nqx.Class.define(\"qx.dev.unit.TestCase\", {\n  extend: qx.core.Object,\n  include: [qx.core.MAssert],\n\n  events: {\n    /**\n     * This event can be fired by assertion functions instead of throwing a\n     * {@link qx.core.AssertionError}, ensuring that any code defined after the\n     * assertion call will still run.\n     *\n     * Event data: The {@link qx.core.AssertionError}\n     */\n    assertionFailed: \"qx.event.type.Data\"\n  },\n\n  properties: {\n    /** The TestResult instance that runs the test */\n    testResult: {\n      init: null\n    },\n\n    /** The test currently running */\n    testFunc: {\n      init: null\n    }\n  },\n\n  members: {\n    __autoDispose: null,\n\n    /**\n     * Whether If debugging code is enabled. (i.e. the setting\n     * <code>qx.debug</code> has the value <code>on</code>.)\n     *\n     * @return {Boolean} Whether debugging is enabled\n     */\n    isDebugOn() {\n      return qx.core.Environment.get(\"qx.debug\") ? true : false;\n    },\n\n    /**\n     * Checks if qx.debug set\n     * used by this.require[\"debug\"]\n     */\n    hasDebug() {\n      return qx.core.Environment.get(\"qx.debug\");\n    },\n\n    /**\n     * Instruct the test to wait. Used for asynchronous tests.\n     *\n     * @param delay {Integer?5000} Amount of time in milliseconds to wait.\n     * @param deferredFunction {Function?false} Optional function to run after\n     * timeout has expired.\n     * @param context {Object?window} Optional execution context for\n     * deferredFunction\n     */\n    wait(delay, deferredFunction, context) {\n      throw new qx.dev.unit.AsyncWrapper(delay, deferredFunction, context);\n    },\n\n    /**\n     * Cancel a timeout started with <code>wait()</code> and run the given\n     * function. Used for asynchronous tests, e.g. in a listener's callback\n     * function.\n     *\n     * *Important*\n     *\n     * The used *deferredFunction* is the last function which is executed before\n     * the whole test case is disposed. But you are able to use a new\n     * <code>wait()</code> / <code>resume()</code> pair in the call sequence of the deferred function.\n     *\n     * @param deferredFunction {Function?} Function to run\n     * @param self {Object?} reference to the ‘this’ variable inside the\n     * callback. By default the test instance is used.\n     *\n     * @return {var} The return value of the deferred function\n     */\n    resume(deferredFunction, self) {\n      return this.getTestResult().run(\n        this.getTestFunc(),\n        deferredFunction || function () {},\n        self || this,\n        true\n      );\n    },\n\n    /**\n     * Cancel a timeout started with <code>wait()</code> in setUp() and run the test\n     * function. Used for asynchronous setUp of tests.\n     *\n     * @return {var} The return value of the testRun\n     */\n    resumeSetUp() {\n      var func = this.getTestFunc();\n      var inst = this;\n      var method = func.getName();\n\n      return this.getTestResult().run(\n        func,\n        function () {\n          try {\n            inst[method]();\n          } catch (ex) {\n            throw ex;\n          }\n        },\n        this,\n        true\n      );\n    },\n\n    /**\n     * Cancel a timeout started with <code>wait()</code> and return a function,\n     * which calls {@link #resume}. This function is useful\n     * to wrap an event handler or callback function within the resume call sequence.\n     * It provides the deferred function with all parameters from original caller.\n     *<pre>\n     * obj.addListener(\"appear\", this.resumeHandler(function(e){\n     *   // do some nice\n     * }));\n     *\n     * this.wait();\n     *</pre>\n     *\n     * @param deferredFunction {Function} Function to run as event handler or callback\n     * @param self {Object?} reference to the ‘this’ variable inside the\n     *        callback. By default the test instance is used.\n     * @return {Function} Wrapper function which runs resume with deferred function\n     */\n    resumeHandler(deferredFunction, self) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertFunction(\n          deferredFunction,\n          \"First parameter of resumeHandler() must be a function!\"\n        );\n      }\n\n      var func = deferredFunction;\n      var that = this;\n\n      return function () {\n        // bind arguments to deferŕedFunction\n        var args = qx.lang.Array.fromArguments(arguments);\n\n        return that.resume(\n          func.bind.apply(func, [self || this].concat(args)),\n          self\n        );\n      };\n    },\n\n    /**\n     * Skip this test. Any code after a call to this method will not be executed.\n     *\n     * @param message {String|null} Optional message (reason why the test was skipped)\n     */\n    skip(message) {\n      throw new qx.dev.unit.RequirementError(null, message || \"Called skip()\");\n    },\n\n    /**\n     * Add an object to the auto dispose list. This can be cleared manually or will\n     * be flushed when the test case is disposed.\n     *\n     * @param obj {qx.core.Object} Object to be automatically disposed.\n     */\n    addAutoDispose(obj) {\n      if (!this.__autoDispose) {\n        this.__autoDispose = [];\n      }\n      this.__autoDispose.push(obj);\n    },\n\n    /**\n     * Dispose all objects that got registered for auto disposal.\n     */\n    doAutoDispose() {\n      if (this.__autoDispose) {\n        this.__autoDispose.forEach(function (obj) {\n          if (!obj.isDisposed()) {\n            if (obj instanceof qx.ui.core.Widget) {\n              obj.destroy();\n            } else if (obj instanceof qx.core.Object) {\n              obj.dispose();\n            }\n          }\n        });\n        this.__autoDispose = null;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}