{
  "className": "qx.event.AcceleratingTimer",
  "packageName": "qx.event",
  "name": "AcceleratingTimer",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 33,
        "column": 0,
        "index": 1092
      },
      "end": {
        "line": 127,
        "column": 3,
        "index": 3153
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Timer, which accelerates after each interval. The initial delay and the\n interval time can be set using the properties {@link #firstInterval}\n and {@link #interval}. The {@link #interval} events will be fired with\n decreasing interval times while the timer is running, until the {@link #minimum}\n is reached. The {@link #decrease} property sets the amount of milliseconds\n which will decreased after every firing.\n This class is e.g. used in the {@link qx.ui.form.RepeatButton} and\n {@link qx.ui.form.HoverButton} widgets.\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 37,
        "column": 2,
        "index": 1205
      },
      "end": {
        "line": 42,
        "column": 3,
        "index": 1361
      }
    }
  },
  "events": {
    "interval": {
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1451
        },
        "end": {
          "line": 46,
          "column": 35,
          "index": 1482
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This event if fired each time the interval time has elapsed</p>"
          }
        ]
      },
      "name": "interval",
      "type": "qx.event.type.Event"
    }
  },
  "properties": {
    "interval": {
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 1677
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1734
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Interval used after the first run of the timer. Usually a smaller value\n than the \"firstInterval\" property value to get a faster reaction.</p>"
          }
        ]
      },
      "name": "interval",
      "propertyType": "new",
      "init": 100,
      "check": "Integer",
      "defaultValue": 100
    },
    "firstInterval": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1931
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 1993
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Interval used for the first run of the timer. Usually a greater value\n than the \"interval\" property value to a little delayed reaction at the first\n time.</p>"
          }
        ]
      },
      "name": "firstInterval",
      "propertyType": "new",
      "init": 500,
      "check": "Integer",
      "defaultValue": 500
    },
    "minimum": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2069
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 2124
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This configures the minimum value for the timer interval.</p>"
          }
        ]
      },
      "name": "minimum",
      "propertyType": "new",
      "init": 20,
      "check": "Integer",
      "defaultValue": 20
    },
    "decrease": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2229
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2284
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Decrease of the timer on each interval (for the next interval) until minTimer reached.</p>"
          }
        ]
      },
      "name": "decrease",
      "propertyType": "new",
      "init": 2,
      "check": "Integer",
      "defaultValue": 2
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__timer": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2308
        },
        "end": {
          "line": 83,
          "column": 17,
          "index": 2321
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__currentInterval": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2327
        },
        "end": {
          "line": 84,
          "column": 27,
          "index": 2350
        }
      },
      "type": "variable",
      "access": "private"
    },
    "start": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2407
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2507
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset and start the timer.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stop": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2552
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2630
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stop the timer</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onInterval": {
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2683
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 3087
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Interval event handler</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getInterval": {
      "type": "function",
      "name": "getInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>interval</code>.\n\nFor further details take a look at the property definition: {@link #interval}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for interval"
          }
        ]
      }
    },
    "setInterval": {
      "type": "function",
      "name": "setInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>interval</code>.\n\nFor further details take a look at the property definition: {@link #interval}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for interval"
          }
        ]
      }
    },
    "resetInterval": {
      "type": "function",
      "name": "resetInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>interval</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #interval}."
          }
        ]
      }
    },
    "getFirstInterval": {
      "type": "function",
      "name": "getFirstInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>firstInterval</code>.\n\nFor further details take a look at the property definition: {@link #firstInterval}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for firstInterval"
          }
        ]
      }
    },
    "setFirstInterval": {
      "type": "function",
      "name": "setFirstInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>firstInterval</code>.\n\nFor further details take a look at the property definition: {@link #firstInterval}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for firstInterval"
          }
        ]
      }
    },
    "resetFirstInterval": {
      "type": "function",
      "name": "resetFirstInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>firstInterval</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #firstInterval}."
          }
        ]
      }
    },
    "getMinimum": {
      "type": "function",
      "name": "getMinimum",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>minimum</code>.\n\nFor further details take a look at the property definition: {@link #minimum}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for minimum"
          }
        ]
      }
    },
    "setMinimum": {
      "type": "function",
      "name": "setMinimum",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>minimum</code>.\n\nFor further details take a look at the property definition: {@link #minimum}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for minimum"
          }
        ]
      }
    },
    "resetMinimum": {
      "type": "function",
      "name": "resetMinimum",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>minimum</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #minimum}."
          }
        ]
      }
    },
    "getDecrease": {
      "type": "function",
      "name": "getDecrease",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>decrease</code>.\n\nFor further details take a look at the property definition: {@link #decrease}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for decrease"
          }
        ]
      }
    },
    "setDecrease": {
      "type": "function",
      "name": "setDecrease",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>decrease</code>.\n\nFor further details take a look at the property definition: {@link #decrease}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for decrease"
          }
        ]
      }
    },
    "resetDecrease": {
      "type": "function",
      "name": "resetDecrease",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>decrease</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #decrease}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 124,
        "column": 2,
        "index": 3096
      },
      "end": {
        "line": 126,
        "column": 3,
        "index": 3149
      }
    }
  },
  "descendants": []
}