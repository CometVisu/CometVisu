{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__callback",
    "__originalOnError",
    "__context",
    "__isGlobalErrorHandlingEnabled",
    "__P_199_3",
    "core",
    "Environment",
    "getEnvironmentSetting",
    "setErrorHandler",
    "callback",
    "context",
    "window",
    "onerror",
    "wrappedHandler",
    "bind",
    "__onErrorWindow",
    "self",
    "msg",
    "uri",
    "lineNumber",
    "__P_199_4",
    "columnNumber",
    "exception",
    "handleError",
    "WindowError",
    "observeMethod",
    "method",
    "apply",
    "arguments",
    "ex",
    "GlobalError",
    "call",
    "defer",
    "add",
    "setEnvironmentSetting",
    "event"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/GlobalError.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The GlobalError class stores a reference to a global error handler function.\r\n *\r\n *  This function is called for each uncatched JavaScript exception. To enable\r\n *  global error handling the setting <code>qx.globalErrorHandling</code> must\r\n *  be enabled and an error handler must be registered.\r\n *  Further each JavaScript \"entry point\" must be wrapped with a call to\r\n *  {@link qx.event.GlobalError#observeMethod}.\r\n *\r\n * @ignore(qx.core, qx.core.Environment)\r\n */\r\nqx.Bootstrap.define(\"qx.event.GlobalError\", {\r\n  statics: {\r\n    __callback: null,\r\n\r\n    __originalOnError: null,\r\n\r\n    __context: null,\r\n\r\n    /**\r\n     * Little helper to check if the global error handling is enabled.\r\n     * @return {Boolean} <code>true</code>, if it is enabled.\r\n     */\r\n    __isGlobalErrorHandlingEnabled() {\r\n      if (qx.core && qx.core.Environment) {\r\n        return qx.core.Environment.get(\"qx.globalErrorHandling\");\r\n      } else {\r\n        return !!qx.Bootstrap.getEnvironmentSetting(\"qx.globalErrorHandling\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set the global fallback error handler\r\n     *\r\n     * @param callback {Function?null} The error handler. The first argument is the\r\n     *    exception, which caused the error\r\n     * @param context {Object?window} The \"this\" context of the callback function\r\n     */\r\n    setErrorHandler(callback, context) {\r\n      this.__callback = callback || null;\r\n      this.__context = context || window;\r\n\r\n      if (this.__isGlobalErrorHandlingEnabled()) {\r\n        // wrap the original onerror\r\n        if (callback && window.onerror) {\r\n          var wrappedHandler = qx.Bootstrap.bind(this.__onErrorWindow, this);\r\n          if (this.__originalOnError == null) {\r\n            this.__originalOnError = window.onerror;\r\n          }\r\n          var self = this;\r\n          window.onerror = function (msg, uri, lineNumber) {\r\n            self.__originalOnError(msg, uri, lineNumber);\r\n            wrappedHandler(msg, uri, lineNumber);\r\n          };\r\n        }\r\n\r\n        if (callback && !window.onerror) {\r\n          window.onerror = qx.Bootstrap.bind(this.__onErrorWindow, this);\r\n        }\r\n\r\n        // reset\r\n        if (this.__callback == null) {\r\n          if (this.__originalOnError != null) {\r\n            window.onerror = this.__originalOnError;\r\n            this.__originalOnError = null;\r\n          } else {\r\n            window.onerror = null;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Catches all errors of the <code>window.onerror</code> handler\r\n     * and passes an {@link qx.core.WindowError} object to the error\r\n     * handling.\r\n     *\r\n     * @param msg {String} browser error message\r\n     * @param uri {String} uri to erroneous script\r\n     * @param lineNumber {Integer} line number of error\r\n     * @param columnNumber {Integer} column number of error\r\n     * @param exception {Error} orginal error\r\n     */\r\n    __onErrorWindow(msg, uri, lineNumber, columnNumber, exception) {\r\n      if (this.__callback) {\r\n        this.handleError(\r\n          new qx.core.WindowError(msg, uri, lineNumber, columnNumber, exception)\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Wraps a method with error handling code. Only methods, which are called\r\n     * directly by the browser (e.g. event handler) should be wrapped.\r\n     *\r\n     * @param method {Function} method to wrap\r\n     * @return {Function} The function wrapped with error handling code\r\n     */\r\n    observeMethod(method) {\r\n      if (this.__isGlobalErrorHandlingEnabled()) {\r\n        var self = this;\r\n        return function () {\r\n          if (!self.__callback) {\r\n            return method.apply(this, arguments);\r\n          }\r\n\r\n          try {\r\n            return method.apply(this, arguments);\r\n          } catch (ex) {\r\n            self.handleError(new qx.core.GlobalError(ex, arguments));\r\n          }\r\n        };\r\n      } else {\r\n        return method;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Delegates every given exception to the registered error handler\r\n     *\r\n     * @param ex {qx.core.WindowError|Error} Exception to delegate\r\n     */\r\n    handleError(ex) {\r\n      if (this.__callback) {\r\n        this.__callback.call(this.__context, ex);\r\n      }\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    // only use the environment class if already loaded\r\n    if (qx.core && qx.core.Environment) {\r\n      qx.core.Environment.add(\"qx.globalErrorHandling\", true);\r\n    } else {\r\n      qx.Bootstrap.setEnvironmentSetting(\"qx.globalErrorHandling\", true);\r\n    }\r\n\r\n    statics.setErrorHandler(null, null);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}