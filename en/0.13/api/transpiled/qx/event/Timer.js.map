{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "construct",
    "interval",
    "setInterval",
    "self",
    "__oninterval",
    "_oninterval",
    "call",
    "events",
    "statics",
    "once",
    "func",
    "obj",
    "timeout",
    "timer",
    "event",
    "Timer",
    "__onceFunc",
    "addListener",
    "e",
    "stop",
    "dispose",
    "start",
    "properties",
    "enabled",
    "init",
    "check",
    "apply",
    "members",
    "__intervalHandler",
    "_applyInterval",
    "value",
    "old",
    "getEnabled",
    "restart",
    "_applyEnabled",
    "window",
    "clearInterval",
    "getInterval",
    "setEnabled",
    "startWith",
    "restartWith",
    "GlobalError",
    "observeMethod",
    "$$disposed",
    "fireEvent",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/Timer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Global timer support.\n *\n * This class can be used to periodically fire an event. This event can be\n * used to simulate e.g. a background task. The static method\n * {@link #once} is a special case. It will call a function deferred after a\n * given timeout.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.Timer\", {\n  extend: qx.core.Object,\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param interval {Number} initial interval in milliseconds of the timer.\n   */\n  construct(interval) {\n    super();\n\n    if (interval != null) {\n      this.setInterval(interval);\n    }\n\n    // don't use qx.lang.Function.bind because this function would add a\n    // disposed check, which could break the functionality. In IE the handler\n    // may get called after \"clearInterval\" (i.e. after the timer is disposed)\n    // and we must be able to handle this.\n    var self = this;\n    this.__oninterval = function () {\n      self._oninterval.call(self);\n    };\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** This event if fired each time the interval time has elapsed */\n    interval: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Start a function after a given timeout.\n     *\n     * @param func {Function} Function to call\n     * @param obj {Object} context (this), the function is called with\n     * @param timeout {Number} Number of milliseconds to wait before the\n     *   function is called.\n     * @return {qx.event.Timer} The timer object used for the timeout. This\n     *    object can be used to cancel the timeout. Note that the timer is\n     *    only valid until the timer has been executed.\n     */\n    once(func, obj, timeout) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // check the given parameter\n        qx.core.Assert.assertFunction(func, \"func is not a function\");\n        qx.core.Assert.assertNotUndefined(timeout, \"No timeout given\");\n      }\n\n      // Create time instance\n      var timer = new qx.event.Timer(timeout);\n\n      // Bug #3481: append original function to timer instance so it can be\n      // read by a debugger\n      timer.__onceFunc = func;\n\n      // Add event listener to interval\n      timer.addListener(\n        \"interval\",\n        function (e) {\n          timer.stop();\n          func.call(obj, e);\n          delete timer.__onceFunc;\n          timer.dispose();\n\n          obj = null;\n        },\n        obj\n      );\n\n      // Directly start timer\n      timer.start();\n      return timer;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * With the enabled property the Timer can be started and suspended.\n     * Setting it to \"true\" is equivalent to {@link #start}, setting it\n     * to \"false\" is equivalent to {@link #stop}.\n     */\n    enabled: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyEnabled\"\n    },\n\n    /**\n     * Time in milliseconds between two callback calls.\n     * This property can be set to modify the interval of\n     * a running timer.\n     */\n    interval: {\n      check: \"Integer\",\n      init: 1000,\n      apply: \"_applyInterval\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __intervalHandler: null,\n    __oninterval: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Apply the interval of the timer.\n     *\n     * @param value {var} Current value\n     * @param old {var} Previous value\n     */\n    _applyInterval(value, old) {\n      if (this.getEnabled()) {\n        this.restart();\n      }\n    },\n\n    /**\n     * Apply the enabled state of the timer.\n     *\n     * @param value {var} Current value\n     * @param old {var} Previous value\n     */\n    _applyEnabled(value, old) {\n      if (old) {\n        window.clearInterval(this.__intervalHandler);\n        this.__intervalHandler = null;\n      } else if (value) {\n        this.__intervalHandler = window.setInterval(\n          this.__oninterval,\n          this.getInterval()\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER-ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Start the timer\n     *\n     */\n    start() {\n      this.setEnabled(true);\n    },\n\n    /**\n     * Start the timer with a given interval\n     *\n     * @param interval {Integer} Time in milliseconds between two callback calls.\n     */\n    startWith(interval) {\n      this.setInterval(interval);\n      this.start();\n    },\n\n    /**\n     * Stop the timer.\n     *\n     */\n    stop() {\n      this.setEnabled(false);\n    },\n\n    /**\n     * Restart the timer.\n     * This makes it possible to change the interval of a running timer.\n     *\n     */\n    restart() {\n      this.stop();\n      this.start();\n    },\n\n    /**\n     * Restart the timer. with a given interval.\n     *\n     * @param interval {Integer} Time in milliseconds between two callback calls.\n     */\n    restartWith(interval) {\n      this.stop();\n      this.startWith(interval);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT-MAPPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * timer callback\n     *\n     * @signature function()\n     */\n    _oninterval: qx.event.GlobalError.observeMethod(function () {\n      if (this.$$disposed) {\n        return;\n      }\n\n      if (this.getEnabled()) {\n        this.fireEvent(\"interval\");\n      }\n    })\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.__intervalHandler) {\n      window.clearInterval(this.__intervalHandler);\n    }\n\n    this.__intervalHandler = this.__oninterval = null;\n  }\n});\n"
  ],
  "mappings": "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"
}