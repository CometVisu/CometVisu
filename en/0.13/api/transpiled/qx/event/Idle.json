{
  "className": "qx.event.Idle",
  "packageName": "qx.event",
  "name": "Idle",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 766
      },
      "end": {
        "line": 157,
        "column": 3,
        "index": 3696
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>A generic singleton that fires an \"interval\" event all 100 milliseconds. It\n can be used whenever one needs to run code periodically. The main purpose of\n this class is reduce the number of timers.\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 887
      },
      "end": {
        "line": 35,
        "column": 3,
        "index": 917
      }
    }
  },
  "events": {
    "interval": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1190
        },
        "end": {
          "line": 45,
          "column": 35,
          "index": 1221
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This event if fired each time the interval time has elapsed</p>"
          }
        ]
      },
      "name": "interval",
      "type": "qx.event.type.Event"
    }
  },
  "properties": {
    "timeoutInterval": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1553
        },
        "end": {
          "line": 63,
          "column": 5,
          "index": 1654
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Interval for the timer, which periodically fires the \"interval\" event,\n in milliseconds.</p>"
          }
        ]
      },
      "name": "timeoutInterval",
      "propertyType": "new",
      "apply": "_applyTimeoutInterval",
      "init": 100,
      "check": "Number",
      "defaultValue": 100
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__timer": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1678
        },
        "end": {
          "line": 67,
          "column": 17,
          "index": 1691
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_applyTimeoutInterval": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1720
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1831
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "timeoutInterval"
      ]
    },
    "_onInterval": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 1887
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 1942
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires an \"interval\" event</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__startTimer": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2046
        },
        "end": {
          "line": 94,
          "column": 5,
          "index": 2319
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the timer but only if there are listeners for the \"interval\" event</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__stopTimer": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2423
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2601
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops the timer but only if there are no listeners for the interval event</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "addListener": {
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 2640
        },
        "end": {
          "line": 114,
          "column": 5,
          "index": 2807
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    },
    "addListenerOnce": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 2846
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3021
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    },
    "removeListener": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3060
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3232
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    },
    "removeListenerById": {
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3271
        },
        "end": {
          "line": 141,
          "column": 5,
          "index": 3397
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTimeoutInterval": {
      "type": "function",
      "name": "getTimeoutInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>timeoutInterval</code>.\n\nFor further details take a look at the property definition: {@link #timeoutInterval}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for timeoutInterval"
          }
        ]
      }
    },
    "setTimeoutInterval": {
      "type": "function",
      "name": "setTimeoutInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>timeoutInterval</code>.\n\nFor further details take a look at the property definition: {@link #timeoutInterval}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for timeoutInterval"
          }
        ]
      }
    },
    "resetTimeoutInterval": {
      "type": "function",
      "name": "resetTimeoutInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>timeoutInterval</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #timeoutInterval}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 150,
        "column": 2,
        "index": 3593
      },
      "end": {
        "line": 156,
        "column": 3,
        "index": 3692
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}