{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "CAPTURING_PHASE",
    "AT_TARGET",
    "BUBBLING_PHASE",
    "members",
    "_promises",
    "init",
    "canBubble",
    "cancelable",
    "_type",
    "_target",
    "_currentTarget",
    "_relatedTarget",
    "_originalTarget",
    "_stopPropagation",
    "_preventDefault",
    "_bubbles",
    "_cancelable",
    "_timeStamp",
    "Date",
    "getTime",
    "_eventPhase",
    "clone",
    "embryo",
    "event",
    "Pool",
    "getInstance",
    "getObject",
    "constructor",
    "stop",
    "stopPropagation",
    "preventDefault",
    "getPropagationStopped",
    "addPromise",
    "Environment",
    "select",
    "promise",
    "push",
    "Error",
    "classname",
    "getPromises",
    "getDefaultPrevented",
    "Promise",
    "reject",
    "resolve",
    "all",
    "getType",
    "setType",
    "type",
    "getEventPhase",
    "setEventPhase",
    "eventPhase",
    "getTimeStamp",
    "getTarget",
    "setTarget",
    "target",
    "getCurrentTarget",
    "setCurrentTarget",
    "currentTarget",
    "getRelatedTarget",
    "setRelatedTarget",
    "relatedTarget",
    "getOriginalTarget",
    "setOriginalTarget",
    "originalTarget",
    "getBubbles",
    "setBubbles",
    "bubbles",
    "isCancelable",
    "setCancelable",
    "Event"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/type/Event.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Basic event object.\n *\n * Please note:\n * Event objects are only valid during the event dispatch. After the dispatch\n * event objects are pooled or disposed. If you want to safe a reference to an\n * event instance use the {@link #clone} method.\n *\n * The interface is modeled after the DOM level 2 event interface:\n * http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface\n *\n * @use(qx.event.Registration)\n */\nqx.Class.define(\"qx.event.type.Event\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** The current event phase is the capturing phase. */\n    CAPTURING_PHASE: 1,\n\n    /** The event is currently being evaluated at the target */\n    AT_TARGET: 2,\n\n    /** The current event phase is the bubbling phase. */\n    BUBBLING_PHASE: 3\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** {qx.Promise[]} promises returned by event handlers */\n    _promises: null,\n\n    /**\n     * Initialize the fields of the event. The event must be initialized before\n     * it can be dispatched.\n     *\n     * @param canBubble {Boolean?false} Whether or not the event is a bubbling event.\n     *     If the event is bubbling, the bubbling can be stopped using\n     *     {@link #stopPropagation}\n     * @param cancelable {Boolean?false} Whether or not an event can have its default\n     *     action prevented. The default action can either be the browser's\n     *     default action of a native event (e.g. open the context menu on a\n     *     right click) or the default action of a qooxdoo class (e.g. close\n     *     the window widget). The default action can be prevented by calling\n     *     {@link #preventDefault}\n     * @return {qx.event.type.Event} The initialized event instance\n     */\n    init(canBubble, cancelable) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (canBubble !== undefined) {\n          qx.core.Assert.assertBoolean(\n            canBubble,\n            \"Invalid argument value 'canBubble'.\"\n          );\n        }\n\n        if (cancelable !== undefined) {\n          qx.core.Assert.assertBoolean(\n            cancelable,\n            \"Invalid argument value 'cancelable'.\"\n          );\n        }\n      }\n\n      this._type = null;\n      this._target = null;\n      this._currentTarget = null;\n      this._relatedTarget = null;\n      this._originalTarget = null;\n      this._stopPropagation = false;\n      this._preventDefault = false;\n      this._bubbles = !!canBubble;\n      this._cancelable = !!cancelable;\n      this._timeStamp = new Date().getTime();\n      this._eventPhase = null;\n      this._promises = null;\n\n      return this;\n    },\n\n    /**\n     * Create a clone of the event object, which is not automatically disposed\n     * or pooled after an event dispatch.\n     *\n     * @param embryo {qx.event.type.Event?null} Optional event class, which will\n     *     be configured using the data of this event instance. The event must be\n     *     an instance of this event class. If the value is <code>null</code>,\n     *     a new pooled instance is created.\n     * @return {qx.event.type.Event} a clone of this class.\n     */\n    clone(embryo) {\n      if (embryo) {\n        var clone = embryo;\n      } else {\n        var clone = qx.event.Pool.getInstance().getObject(this.constructor);\n      }\n\n      clone._type = this._type;\n      clone._target = this._target;\n      clone._currentTarget = this._currentTarget;\n      clone._relatedTarget = this._relatedTarget;\n      clone._originalTarget = this._originalTarget;\n      clone._stopPropagation = this._stopPropagation;\n      clone._bubbles = this._bubbles;\n      clone._preventDefault = this._preventDefault;\n      clone._cancelable = this._cancelable;\n      clone._promises = this._promises;\n\n      return clone;\n    },\n\n    /**\n     * Stops event from all further processing. Execute this when the\n     * current handler should have \"exclusive rights\" to the event\n     * and no further reaction by anyone else should happen.\n     */\n    stop() {\n      if (this._bubbles) {\n        this.stopPropagation();\n      }\n\n      if (this._cancelable) {\n        this.preventDefault();\n      }\n    },\n\n    /**\n     * This method is used to prevent further propagation of an event during event\n     * flow. If this method is called by any event listener the event will cease\n     * propagating through the tree. The event will complete dispatch to all listeners\n     * on the current event target before event flow stops.\n     *\n     */\n    stopPropagation() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertTrue(\n          this._bubbles,\n          \"Cannot stop propagation on a non bubbling event: \" + this.getType()\n        );\n      }\n      this._stopPropagation = true;\n    },\n\n    /**\n     * Get whether further event propagation has been stopped.\n     *\n     * @return {Boolean} Whether further propagation has been stopped.\n     */\n    getPropagationStopped() {\n      return !!this._stopPropagation;\n    },\n\n    /**\n     * Prevent the default action of cancelable events, e.g. opening the context\n     * menu, ...\n     *\n     */\n    preventDefault() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertTrue(\n          this._cancelable,\n          \"Cannot prevent default action on a non cancelable event: \" +\n            this.getType()\n        );\n      }\n      this._preventDefault = true;\n    },\n\n    /**\n     * Adds a promise to the list of promises returned by event handlers\n     * @param promise {qx.Promise} the promise to add\n     */\n    addPromise: qx.core.Environment.select(\"qx.promise\", {\n      true(promise) {\n        if (this._promises === null) {\n          this._promises = [promise];\n        } else {\n          this._promises.push(promise);\n        }\n      },\n      false() {\n        throw new Error(\n          this.classname + \".addPromise not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Returns the array of promises, or null if there are no promises\n     * @return {qx.Promise[]?}\n     */\n    getPromises: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        return this._promises;\n      },\n      false() {\n        throw new Error(\n          this.classname +\n            \".getPromises not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Returns a promise for this event; if the event is defaultPrevented, the promise\n     * is a rejected promise, otherwise it is fulfilled.  The promise returned will only\n     * be fulfilled when the promises added via {@link addPromise} are also fulfilled\n     */\n    promise: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        if (this.getDefaultPrevented()) {\n          return qx.Promise.reject();\n        }\n        if (this._promises === null) {\n          return qx.Promise.resolve(true);\n        }\n        return qx.Promise.all(this._promises);\n      },\n      false() {\n        throw new Error(\n          this.classname + \".promise not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Get whether the default action has been prevented\n     *\n     * @return {Boolean} Whether the default action has been prevented\n     */\n    getDefaultPrevented() {\n      return !!this._preventDefault;\n    },\n\n    /**\n     * The name of the event\n     *\n     * @return {String} name of the event\n     */\n    getType() {\n      return this._type;\n    },\n\n    /**\n     * Override the event type\n     *\n     * @param type {String} new event type\n     */\n    setType(type) {\n      this._type = type;\n    },\n\n    /**\n     * Used to indicate which phase of event flow is currently being evaluated.\n     *\n     * @return {Integer} The current event phase. Possible values are\n     *         {@link #CAPTURING_PHASE}, {@link #AT_TARGET} and {@link #BUBBLING_PHASE}.\n     */\n    getEventPhase() {\n      return this._eventPhase;\n    },\n\n    /**\n     * Override the event phase\n     *\n     * @param eventPhase {Integer} new event phase\n     */\n    setEventPhase(eventPhase) {\n      this._eventPhase = eventPhase;\n    },\n\n    /**\n     * The time (in milliseconds relative to the epoch) at which the event was created.\n     *\n     * @return {Integer} the timestamp the event was created.\n     */\n    getTimeStamp() {\n      return this._timeStamp;\n    },\n\n    /**\n     * Returns the event target to which the event was originally\n     * dispatched.\n     *\n     * @return {Element} target to which the event was originally\n     *       dispatched.\n     */\n    getTarget() {\n      return this._target;\n    },\n\n    /**\n     * Override event target.\n     *\n     * @param target {Element} new event target\n     */\n    setTarget(target) {\n      this._target = target;\n    },\n\n    /**\n     * Get the event target node whose event listeners are currently being\n     * processed. This is particularly useful during event capturing and\n     * bubbling.\n     *\n     * @return {Element} The target the event listener is currently\n     *       dispatched on.\n     */\n    getCurrentTarget() {\n      return this._currentTarget || this._target;\n    },\n\n    /**\n     * Override current target.\n     *\n     * @param currentTarget {Element} new current target\n     */\n    setCurrentTarget(currentTarget) {\n      this._currentTarget = currentTarget;\n    },\n\n    /**\n     * Get the related event target. This is only configured for\n     * events which also had an influences on another element e.g.\n     * mouseover/mouseout, focus/blur, ...\n     *\n     * @return {Element} The related target\n     */\n    getRelatedTarget() {\n      return this._relatedTarget;\n    },\n\n    /**\n     * Override related target.\n     *\n     * @param relatedTarget {Element} new related target\n     */\n    setRelatedTarget(relatedTarget) {\n      this._relatedTarget = relatedTarget;\n    },\n\n    /**\n     * Get the original event target. This is only configured\n     * for events which are fired by another event (often when\n     * the target should be reconfigured for another view) e.g.\n     * low-level DOM event to widget event.\n     *\n     * @return {Element} The original target\n     */\n    getOriginalTarget() {\n      return this._originalTarget;\n    },\n\n    /**\n     * Override original target.\n     *\n     * @param originalTarget {Element} new original target\n     */\n    setOriginalTarget(originalTarget) {\n      this._originalTarget = originalTarget;\n    },\n\n    /**\n     * Check whether or not the event is a bubbling event. If the event can\n     * bubble the value is true, else the value is false.\n     *\n     * @return {Boolean} Whether the event bubbles\n     */\n    getBubbles() {\n      return this._bubbles;\n    },\n\n    /**\n     * Set whether the event bubbles.\n     *\n     * @param bubbles {Boolean} Whether the event bubbles\n     */\n    setBubbles(bubbles) {\n      this._bubbles = bubbles;\n    },\n\n    /**\n     * Get whether the event is cancelable\n     *\n     * @return {Boolean} Whether the event is cancelable\n     */\n    isCancelable() {\n      return this._cancelable;\n    },\n\n    /**\n     * Set whether the event is cancelable\n     *\n     * @param cancelable {Boolean} Whether the event is cancelable\n     */\n    setCancelable(cancelable) {\n      this._cancelable = cancelable;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}