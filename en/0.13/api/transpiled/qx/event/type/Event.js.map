{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "CAPTURING_PHASE",
    "AT_TARGET",
    "BUBBLING_PHASE",
    "members",
    "_promises",
    "init",
    "canBubble",
    "cancelable",
    "_type",
    "_target",
    "_currentTarget",
    "_relatedTarget",
    "_originalTarget",
    "_stopPropagation",
    "_preventDefault",
    "_bubbles",
    "_cancelable",
    "_timeStamp",
    "Date",
    "getTime",
    "_eventPhase",
    "clone",
    "embryo",
    "event",
    "Pool",
    "getInstance",
    "getObject",
    "constructor",
    "stop",
    "stopPropagation",
    "preventDefault",
    "getPropagationStopped",
    "addPromise",
    "Environment",
    "select",
    "true",
    "promise",
    "push",
    "false",
    "Error",
    "classname",
    "getPromises",
    "getDefaultPrevented",
    "Promise",
    "reject",
    "resolve",
    "all",
    "getType",
    "setType",
    "type",
    "getEventPhase",
    "setEventPhase",
    "eventPhase",
    "getTimeStamp",
    "getTarget",
    "setTarget",
    "target",
    "getCurrentTarget",
    "setCurrentTarget",
    "currentTarget",
    "getRelatedTarget",
    "setRelatedTarget",
    "relatedTarget",
    "getOriginalTarget",
    "setOriginalTarget",
    "originalTarget",
    "getBubbles",
    "setBubbles",
    "bubbles",
    "isCancelable",
    "setCancelable",
    "Event"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/type/Event.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Basic event object.\n *\n * Please note:\n * Event objects are only valid during the event dispatch. After the dispatch\n * event objects are pooled or disposed. If you want to safe a reference to an\n * event instance use the {@link #clone} method.\n *\n * The interface is modeled after the DOM level 2 event interface:\n * http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface\n *\n * @use(qx.event.Registration)\n */\nqx.Class.define(\"qx.event.type.Event\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** The current event phase is the capturing phase. */\n    CAPTURING_PHASE: 1,\n\n    /** The event is currently being evaluated at the target */\n    AT_TARGET: 2,\n\n    /** The current event phase is the bubbling phase. */\n    BUBBLING_PHASE: 3\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** {qx.Promise[]} promises returned by event handlers */\n    _promises: null,\n\n    /**\n     * Initialize the fields of the event. The event must be initialized before\n     * it can be dispatched.\n     *\n     * @param canBubble {Boolean?false} Whether or not the event is a bubbling event.\n     *     If the event is bubbling, the bubbling can be stopped using\n     *     {@link #stopPropagation}\n     * @param cancelable {Boolean?false} Whether or not an event can have its default\n     *     action prevented. The default action can either be the browser's\n     *     default action of a native event (e.g. open the context menu on a\n     *     right click) or the default action of a qooxdoo class (e.g. close\n     *     the window widget). The default action can be prevented by calling\n     *     {@link #preventDefault}\n     * @return {qx.event.type.Event} The initialized event instance\n     */\n    init(canBubble, cancelable) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (canBubble !== undefined) {\n          qx.core.Assert.assertBoolean(\n            canBubble,\n            \"Invalid argument value 'canBubble'.\"\n          );\n        }\n\n        if (cancelable !== undefined) {\n          qx.core.Assert.assertBoolean(\n            cancelable,\n            \"Invalid argument value 'cancelable'.\"\n          );\n        }\n      }\n\n      this._type = null;\n      this._target = null;\n      this._currentTarget = null;\n      this._relatedTarget = null;\n      this._originalTarget = null;\n      this._stopPropagation = false;\n      this._preventDefault = false;\n      this._bubbles = !!canBubble;\n      this._cancelable = !!cancelable;\n      this._timeStamp = new Date().getTime();\n      this._eventPhase = null;\n      this._promises = null;\n\n      return this;\n    },\n\n    /**\n     * Create a clone of the event object, which is not automatically disposed\n     * or pooled after an event dispatch.\n     *\n     * @param embryo {qx.event.type.Event?null} Optional event class, which will\n     *     be configured using the data of this event instance. The event must be\n     *     an instance of this event class. If the value is <code>null</code>,\n     *     a new pooled instance is created.\n     * @return {qx.event.type.Event} a clone of this class.\n     */\n    clone(embryo) {\n      if (embryo) {\n        var clone = embryo;\n      } else {\n        var clone = qx.event.Pool.getInstance().getObject(this.constructor);\n      }\n\n      clone._type = this._type;\n      clone._target = this._target;\n      clone._currentTarget = this._currentTarget;\n      clone._relatedTarget = this._relatedTarget;\n      clone._originalTarget = this._originalTarget;\n      clone._stopPropagation = this._stopPropagation;\n      clone._bubbles = this._bubbles;\n      clone._preventDefault = this._preventDefault;\n      clone._cancelable = this._cancelable;\n      clone._promises = this._promises;\n\n      return clone;\n    },\n\n    /**\n     * Stops event from all further processing. Execute this when the\n     * current handler should have \"exclusive rights\" to the event\n     * and no further reaction by anyone else should happen.\n     */\n    stop() {\n      if (this._bubbles) {\n        this.stopPropagation();\n      }\n\n      if (this._cancelable) {\n        this.preventDefault();\n      }\n    },\n\n    /**\n     * This method is used to prevent further propagation of an event during event\n     * flow. If this method is called by any event listener the event will cease\n     * propagating through the tree. The event will complete dispatch to all listeners\n     * on the current event target before event flow stops.\n     *\n     */\n    stopPropagation() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertTrue(\n          this._bubbles,\n          \"Cannot stop propagation on a non bubbling event: \" + this.getType()\n        );\n      }\n      this._stopPropagation = true;\n    },\n\n    /**\n     * Get whether further event propagation has been stopped.\n     *\n     * @return {Boolean} Whether further propagation has been stopped.\n     */\n    getPropagationStopped() {\n      return !!this._stopPropagation;\n    },\n\n    /**\n     * Prevent the default action of cancelable events, e.g. opening the context\n     * menu, ...\n     *\n     */\n    preventDefault() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertTrue(\n          this._cancelable,\n          \"Cannot prevent default action on a non cancelable event: \" +\n            this.getType()\n        );\n      }\n      this._preventDefault = true;\n    },\n\n    /**\n     * Adds a promise to the list of promises returned by event handlers\n     * @param promise {qx.Promise} the promise to add\n     */\n    addPromise: qx.core.Environment.select(\"qx.promise\", {\n      true(promise) {\n        if (this._promises === null) {\n          this._promises = [promise];\n        } else {\n          this._promises.push(promise);\n        }\n      },\n      false() {\n        throw new Error(\n          this.classname + \".addPromise not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Returns the array of promises, or null if there are no promises\n     * @return {qx.Promise[]?}\n     */\n    getPromises: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        return this._promises;\n      },\n      false() {\n        throw new Error(\n          this.classname +\n            \".getPromises not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Returns a promise for this event; if the event is defaultPrevented, the promise\n     * is a rejected promise, otherwise it is fulfilled.  The promise returned will only\n     * be fulfilled when the promises added via {@link addPromise} are also fulfilled\n     */\n    promise: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        if (this.getDefaultPrevented()) {\n          return qx.Promise.reject();\n        }\n        if (this._promises === null) {\n          return qx.Promise.resolve(true);\n        }\n        return qx.Promise.all(this._promises);\n      },\n      false() {\n        throw new Error(\n          this.classname + \".promise not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Get whether the default action has been prevented\n     *\n     * @return {Boolean} Whether the default action has been prevented\n     */\n    getDefaultPrevented() {\n      return !!this._preventDefault;\n    },\n\n    /**\n     * The name of the event\n     *\n     * @return {String} name of the event\n     */\n    getType() {\n      return this._type;\n    },\n\n    /**\n     * Override the event type\n     *\n     * @param type {String} new event type\n     */\n    setType(type) {\n      this._type = type;\n    },\n\n    /**\n     * Used to indicate which phase of event flow is currently being evaluated.\n     *\n     * @return {Integer} The current event phase. Possible values are\n     *         {@link #CAPTURING_PHASE}, {@link #AT_TARGET} and {@link #BUBBLING_PHASE}.\n     */\n    getEventPhase() {\n      return this._eventPhase;\n    },\n\n    /**\n     * Override the event phase\n     *\n     * @param eventPhase {Integer} new event phase\n     */\n    setEventPhase(eventPhase) {\n      this._eventPhase = eventPhase;\n    },\n\n    /**\n     * The time (in milliseconds relative to the epoch) at which the event was created.\n     *\n     * @return {Integer} the timestamp the event was created.\n     */\n    getTimeStamp() {\n      return this._timeStamp;\n    },\n\n    /**\n     * Returns the event target to which the event was originally\n     * dispatched.\n     *\n     * @return {Element} target to which the event was originally\n     *       dispatched.\n     */\n    getTarget() {\n      return this._target;\n    },\n\n    /**\n     * Override event target.\n     *\n     * @param target {Element} new event target\n     */\n    setTarget(target) {\n      this._target = target;\n    },\n\n    /**\n     * Get the event target node whose event listeners are currently being\n     * processed. This is particularly useful during event capturing and\n     * bubbling.\n     *\n     * @return {Element} The target the event listener is currently\n     *       dispatched on.\n     */\n    getCurrentTarget() {\n      return this._currentTarget || this._target;\n    },\n\n    /**\n     * Override current target.\n     *\n     * @param currentTarget {Element} new current target\n     */\n    setCurrentTarget(currentTarget) {\n      this._currentTarget = currentTarget;\n    },\n\n    /**\n     * Get the related event target. This is only configured for\n     * events which also had an influences on another element e.g.\n     * mouseover/mouseout, focus/blur, ...\n     *\n     * @return {Element} The related target\n     */\n    getRelatedTarget() {\n      return this._relatedTarget;\n    },\n\n    /**\n     * Override related target.\n     *\n     * @param relatedTarget {Element} new related target\n     */\n    setRelatedTarget(relatedTarget) {\n      this._relatedTarget = relatedTarget;\n    },\n\n    /**\n     * Get the original event target. This is only configured\n     * for events which are fired by another event (often when\n     * the target should be reconfigured for another view) e.g.\n     * low-level DOM event to widget event.\n     *\n     * @return {Element} The original target\n     */\n    getOriginalTarget() {\n      return this._originalTarget;\n    },\n\n    /**\n     * Override original target.\n     *\n     * @param originalTarget {Element} new original target\n     */\n    setOriginalTarget(originalTarget) {\n      this._originalTarget = originalTarget;\n    },\n\n    /**\n     * Check whether or not the event is a bubbling event. If the event can\n     * bubble the value is true, else the value is false.\n     *\n     * @return {Boolean} Whether the event bubbles\n     */\n    getBubbles() {\n      return this._bubbles;\n    },\n\n    /**\n     * Set whether the event bubbles.\n     *\n     * @param bubbles {Boolean} Whether the event bubbles\n     */\n    setBubbles(bubbles) {\n      this._bubbles = bubbles;\n    },\n\n    /**\n     * Get whether the event is cancelable\n     *\n     * @return {Boolean} Whether the event is cancelable\n     */\n    isCancelable() {\n      return this._cancelable;\n    },\n\n    /**\n     * Set whether the event is cancelable\n     *\n     * @param cancelable {Boolean} Whether the event is cancelable\n     */\n    setCancelable(cancelable) {\n      this._cancelable = cancelable;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}