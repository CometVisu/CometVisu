{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Event",
    "members",
    "init",
    "cancelable",
    "originalEvent",
    "Drag",
    "superclass",
    "prototype",
    "call",
    "_native",
    "getNativeEvent",
    "_originalTarget",
    "getOriginalTarget",
    "clone",
    "embryo",
    "getDocumentLeft",
    "x",
    "pageX",
    "undefined",
    "pointerType",
    "_original",
    "changedTouches",
    "Math",
    "round",
    "win",
    "dom",
    "Node",
    "getWindow",
    "srcElement",
    "clientX",
    "bom",
    "Viewport",
    "getScrollLeft",
    "getDocumentTop",
    "y",
    "pageY",
    "clientY",
    "getScrollTop",
    "getManager",
    "Registration",
    "getTarget",
    "getHandler",
    "handler",
    "DragDrop",
    "addType",
    "addAction",
    "action",
    "supportsType",
    "supportsAction",
    "addData",
    "data",
    "getData",
    "getDataAsync",
    "getCurrentType",
    "getCurrentAction",
    "getDefaultPrevented",
    "getCurrentActionAsync",
    "setDropAllowed",
    "isAllowed",
    "getDragTarget",
    "stopSession",
    "clearSession"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/type/Drag.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Event object class for drag events\n */\nqx.Class.define(\"qx.event.type.Drag\", {\n  extend: qx.event.type.Event,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Initialize the fields of the event. The event must be initialized before\n     * it can be dispatched.\n     *\n     * @param cancelable {Boolean?false} Whether or not an event can have its default\n     *     action prevented. The default action can either be the browser's\n     *     default action of a native event (e.g. open the context menu on a\n     *     right click) or the default action of a qooxdoo class (e.g. close\n     *     the window widget). The default action can be prevented by calling\n     *     {@link qx.event.type.Event#preventDefault}\n     * @param originalEvent {qx.event.type.Track} The original (mouse) event to use\n     * @return {qx.event.type.Event} The initialized event instance\n     */\n    init(cancelable, originalEvent) {\n      super.init(true, cancelable);\n\n      if (originalEvent) {\n        this._native = originalEvent.getNativeEvent() || null;\n        this._originalTarget = originalEvent.getOriginalTarget() || null;\n      } else {\n        this._native = null;\n        this._originalTarget = null;\n      }\n\n      return this;\n    },\n\n    // overridden\n    clone(embryo) {\n      var clone = super.clone(embryo);\n\n      clone._native = this._native;\n\n      return clone;\n    },\n\n    /**\n     * Get the horizontal position at which the event occurred relative to the\n     * left of the document. This property takes into account any scrolling of\n     * the page.\n     *\n     * @return {Integer} The horizontal mouse position in the document.\n     */\n    getDocumentLeft() {\n      if (this._native == null) {\n        return 0;\n      }\n      var x = this._native.pageX;\n      if (x !== undefined) {\n        // iOS 6 does not copy pageX over to the fake pointer event\n        if (x == 0 && this._native.pointerType == \"touch\") {\n          x = this._native._original.changedTouches[0].pageX || 0;\n        }\n        return Math.round(x);\n      } else {\n        var win = qx.dom.Node.getWindow(this._native.srcElement);\n        return (\n          Math.round(this._native.clientX) + qx.bom.Viewport.getScrollLeft(win)\n        );\n      }\n    },\n\n    /**\n     * Get the vertical position at which the event occurred relative to the\n     * top of the document. This property takes into account any scrolling of\n     * the page.\n     *\n     * @return {Integer} The vertical mouse position in the document.\n     */\n    getDocumentTop() {\n      if (this._native == null) {\n        return 0;\n      }\n\n      var y = this._native.pageY;\n      if (y !== undefined) {\n        // iOS 6 does not copy pageY over to the fake pointer event\n        if (y == 0 && this._native.pointerType == \"touch\") {\n          y = this._native._original.changedTouches[0].pageY || 0;\n        }\n        return Math.round(y);\n      } else {\n        var win = qx.dom.Node.getWindow(this._native.srcElement);\n        return (\n          Math.round(this._native.clientY) + qx.bom.Viewport.getScrollTop(win)\n        );\n      }\n    },\n\n    /**\n     * Returns the drag&drop event handler responsible for the target\n     *\n     * @return {qx.event.handler.DragDrop} The drag&drop handler\n     */\n    getManager() {\n      return qx.event.Registration.getManager(this.getTarget()).getHandler(\n        qx.event.handler.DragDrop\n      );\n    },\n\n    /**\n     * Used during <code>dragstart</code> listener to\n     * inform the manager about supported data types.\n     *\n     * @param type {String} Data type to add to list of supported types\n     */\n    addType(type) {\n      this.getManager().addType(type);\n    },\n\n    /**\n     * Used during <code>dragstart</code> listener to\n     * inform the manager about supported drop actions.\n     *\n     * @param action {String} Action to add to the list of supported actions\n     */\n    addAction(action) {\n      this.getManager().addAction(action);\n    },\n\n    /**\n     * Whether the given type is supported by the drag\n     * target (source target).\n     *\n     * This is used in the event listeners for <code>dragover</code>\n     * or <code>dragdrop</code>.\n     *\n     * @param type {String} The type to look for\n     * @return {Boolean} Whether the given type is supported\n     */\n    supportsType(type) {\n      return this.getManager().supportsType(type);\n    },\n\n    /**\n     * Whether the given action is supported by the drag\n     * target (source target).\n     *\n     * This is used in the event listeners for <code>dragover</code>\n     * or <code>dragdrop</code>.\n     *\n     * @param action {String} The action to look for\n     * @return {Boolean} Whether the given action is supported\n     */\n    supportsAction(action) {\n      return this.getManager().supportsAction(action);\n    },\n\n    /**\n     * Adds data of the given type to the internal storage. The data\n     * is available until the <code>dragend</code> event is fired.\n     *\n     * @param type {String} Any valid type\n     * @param data {var} Any data to store\n     */\n    addData(type, data) {\n      this.getManager().addData(type, data);\n    },\n\n    /**\n     * Returns the data of the given type. Used in the <code>drop</code> listener.\n     *\n     * Note that this is a synchronous method and if any of the drag and drop\n     * events handlers are implemented using Promises, this may fail; @see\n     * `getDataAsync`.\n     *\n     * @param type {String} Any of the supported types.\n     * @return {var} The data for the given type\n     */\n    getData(type) {\n      return this.getManager().getData(type);\n    },\n\n    /**\n     * Returns the data of the given type. Used in the <code>drop</code> listener.\n     *\n     * @param type {String} Any of the supported types.\n     * @return {qx.Promise|var} The data for the given type\n     */\n    getDataAsync(type) {\n      return this.getManager().getDataAsync(type);\n    },\n\n    /**\n     * Returns the type which was requested last, to be used\n     * in the <code>droprequest</code> listener.\n     *\n     * @return {String} The last requested data type\n     */\n    getCurrentType() {\n      return this.getManager().getCurrentType();\n    },\n\n    /**\n     * Returns the currently selected action. Depends on the\n     * supported actions of the source target and the modification\n     * keys pressed by the user.\n     *\n     * Used in the <code>droprequest</code> listener.\n     *\n     * @return {String} The action. May be one of <code>move</code>,\n     *    <code>copy</code> or <code>alias</code>.\n     */\n    getCurrentAction() {\n      if (this.getDefaultPrevented()) {\n        return null;\n      }\n      return this.getManager().getCurrentAction();\n    },\n\n    /**\n     * Returns the currently selected action. Depends on the\n     * supported actions of the source target and the modification\n     * keys pressed by the user.\n     *\n     * Used in the <code>droprequest</code> listener.\n     *\n     * @return {qx.Promise|String} The action. May be one of <code>move</code>,\n     *    <code>copy</code> or <code>alias</code>.\n     */\n    getCurrentActionAsync() {\n      if (this.getDefaultPrevented()) {\n        return null;\n      }\n      return this.getManager().getCurrentActionAsync();\n    },\n\n    /**\n     * Whether the current drop target allows the current drag target.\n     *\n     * This can be called from within the \"drag\" event to enable/disable\n     * a drop target selectively, for example based on the child item,\n     * above and beyond the one-time choice made by the the \"dragover\"\n     * event for the droppable widget itself.\n     *\n     * @param isAllowed {Boolean} False if a drop should be disallowed\n     */\n    setDropAllowed(isAllowed) {\n      this.getManager().setDropAllowed(isAllowed);\n    },\n\n    /**\n     * Returns the target which has been initially tapped on.\n     * @return {qx.ui.core.Widget} The tapped widget.\n     */\n    getDragTarget() {\n      return this.getManager().getDragTarget();\n    },\n\n    /**\n     * Stops the drag&drop session and fires a <code>dragend</code> event.\n     */\n    stopSession() {\n      this.getManager().clearSession();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}