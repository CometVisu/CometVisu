{
  "className": "qx.event.type.Swipe",
  "packageName": "qx.event.type",
  "name": "Swipe",
  "superClass": "qx.event.type.Pointer",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 653
      },
      "end": {
        "line": 98,
        "column": 3,
        "index": 2308
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Swipe is a single pointer gesture fired when a pointer is moved in one direction.\n It contains some additional data like the primary axis, the velocity and the distance.</p>"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "_cloneNativeEvent": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 947
        },
        "end": {
          "line": 40,
          "column": 5,
          "index": 1116
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.event.type.Pointer",
      "appearsIn": [
        "qx.event.type.Pointer",
        "qx.event.type.Mouse",
        "qx.event.type.Dom",
        "qx.event.type.Native"
      ]
    },
    "getStartTime": {
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1240
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1305
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the start time of the performed swipe.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the start time",
            "type": "Integer",
            "description": " the start time"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDuration": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1427
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1490
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the duration the performed swipe took.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the duration",
            "type": "Integer",
            "description": " the duration"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAxis": {
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1624
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 1679
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether the performed swipe was on the x or y axis.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} \"x\"/\"y\" axis",
            "type": "String",
            "description": " \"x\"/\"y\" axis"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDirection": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 1870
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 1935
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the direction of the performed swipe in reference to the axis.\n y = up / down\n x = left / right</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the direction",
            "type": "String",
            "description": " the direction"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getVelocity": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2054
        },
        "end": {
          "line": 87,
          "column": 5,
          "index": 2117
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the velocity of the performed swipe.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the velocity",
            "type": "Number",
            "description": " the velocity"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDistance": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2237
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 2300
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the distance of the performed swipe.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the distance",
            "type": "Integer",
            "description": " the distance"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}