{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/type/Pinch.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Pointer",
    "members",
    "_cloneNativeEvent",
    "nativeEvent",
    "clone",
    "scale",
    "getScale",
    "_native",
    "Pinch"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EACA;AACIC,IAAAA,MAAM,EAAGN,EAAE,CAACO,KAAH,CAASC,IAAT,CAAcC,OAD3B;AAIIC,IAAAA,OAAO,EAAG;AAER;AACAC,MAAAA,iBAAiB,EAAG,2BAASC,WAAT,EAAsBC,KAAtB,EACpB;AACE,YAAIA,KAAK,yEAAwBD,WAAxB,EAAqCC,KAArC,CAAT;;AAEAA,QAAAA,KAAK,CAACC,KAAN,GAAcF,WAAW,CAACE,KAA1B;AAEA,eAAOD,KAAP;AACD,OAVO;;AAaR;AACN;AACA;AACA;AACA;AACME,MAAAA,QAAQ,EAAG,oBAAW;AACpB,eAAO,KAAKC,OAAL,CAAaF,KAApB;AACD;AApBO;AAJd,GADA;AAvBAd,EAAAA,EAAE,CAACO,KAAH,CAASC,IAAT,CAAcS,KAAd,CAAoBd,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\n\n/**\n * Pinch is a multi pointer gesture fired when two finger moved towards\n * or away from each other. It contains the scaling factor of the pinch.\n */\nqx.Class.define(\"qx.event.type.Pinch\",\n{\n    extend : qx.event.type.Pointer,\n\n\n    members : {\n\n      // overridden\n      _cloneNativeEvent : function(nativeEvent, clone)\n      {\n        var clone = this.base(arguments, nativeEvent, clone);\n\n        clone.scale = nativeEvent.scale;\n\n        return clone;\n      },\n\n\n      /**\n       * Returns the calculated scale of this event.\n       *\n       * @return {Float} the scale value of this event.\n       */\n      getScale : function() {\n        return this._native.scale;\n      }\n    }\n});\n"
  ]
}