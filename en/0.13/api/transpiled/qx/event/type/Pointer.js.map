{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Mouse",
    "members",
    "_cloneNativeEvent",
    "nativeEvent",
    "clone",
    "Pointer",
    "superclass",
    "prototype",
    "call",
    "pointerId",
    "width",
    "height",
    "pressure",
    "tiltX",
    "tiltY",
    "pointerType",
    "isPrimary",
    "_original",
    "MSPOINTER_TYPE_MOUSE",
    "MSPOINTER_TYPE_PEN",
    "MSPOINTER_TYPE_TOUCH",
    "getDocumentLeft",
    "x",
    "getPointerType",
    "_native",
    "undefined",
    "Math",
    "round",
    "changedTouches",
    "pageX",
    "getDocumentTop",
    "y",
    "pageY",
    "getPointerId",
    "getWidth",
    "getHeight",
    "getPressure",
    "getTiltX",
    "getTiltY",
    "getOriginalTarget",
    "orig",
    "indexOf",
    "document",
    "elementFromPoint",
    "clientX",
    "clientY",
    "ex",
    "bom",
    "Event",
    "getTarget"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/type/Pointer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Pointer event object.\r\n *\r\n * the interface of this class is based on the pointer event interface:\r\n * http://www.w3.org/TR/pointerevents/\r\n */\r\nqx.Class.define(\"qx.event.type.Pointer\", {\r\n  extend: qx.event.type.Mouse,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    // overridden\r\n    _cloneNativeEvent(nativeEvent, clone) {\r\n      clone = super._cloneNativeEvent(nativeEvent, clone);\r\n\r\n      clone.pointerId = nativeEvent.pointerId;\r\n      clone.width = nativeEvent.width;\r\n      clone.height = nativeEvent.height;\r\n      clone.pressure = nativeEvent.pressure;\r\n      clone.tiltX = nativeEvent.tiltX;\r\n      clone.tiltY = nativeEvent.tiltY;\r\n      clone.pointerType = nativeEvent.pointerType;\r\n      clone.isPrimary = nativeEvent.isPrimary;\r\n      clone._original = nativeEvent._original;\r\n      clone.MSPOINTER_TYPE_MOUSE = nativeEvent.MSPOINTER_TYPE_MOUSE;\r\n      clone.MSPOINTER_TYPE_PEN = nativeEvent.MSPOINTER_TYPE_PEN;\r\n      clone.MSPOINTER_TYPE_TOUCH = nativeEvent.MSPOINTER_TYPE_TOUCH;\r\n\r\n      return clone;\r\n    },\r\n\r\n    // overridden\r\n    getDocumentLeft() {\r\n      var x = super.getDocumentLeft();\r\n      // iOS 6 does not copy pageX over to the fake pointer event\r\n      if (\r\n        x == 0 &&\r\n        this.getPointerType() == \"touch\" &&\r\n        this._native._original !== undefined\r\n      ) {\r\n        x = Math.round(this._native._original.changedTouches[0].pageX) || 0;\r\n      }\r\n      return x;\r\n    },\r\n\r\n    // overridden\r\n    getDocumentTop() {\r\n      var y = super.getDocumentTop();\r\n      // iOS 6 does not copy pageY over to the fake pointer event\r\n      if (\r\n        y == 0 &&\r\n        this.getPointerType() == \"touch\" &&\r\n        this._native._original !== undefined\r\n      ) {\r\n        y = Math.round(this._native._original.changedTouches[0].pageY) || 0;\r\n      }\r\n      return y;\r\n    },\r\n\r\n    /**\r\n     * Returns a unique identified for the pointer. This id is\r\n     * unique for all active pointers.\r\n     *\r\n     * @return {Number} The unique id.\r\n     */\r\n    getPointerId() {\r\n      return this._native.pointerId || 0;\r\n    },\r\n\r\n    /**\r\n     * Returns the contact geometry in it's width.\r\n     *\r\n     * @return {Number} The number of pixels (width) of the contact geometry.\r\n     */\r\n    getWidth() {\r\n      return this._native.width || 0;\r\n    },\r\n\r\n    /**\r\n     * Returns the contact geometry in it's height.\r\n     *\r\n     * @return {Number} The number of pixels (height) of the contact geometry.\r\n     */\r\n    getHeight() {\r\n      return this._native.height || 0;\r\n    },\r\n\r\n    /**\r\n     * Returns the pressure of the pointer in a rage from 0 to 1.\r\n     *\r\n     * @return {Number} <code>1</code> for full pressure. The default is 0.\r\n     */\r\n    getPressure() {\r\n      return this._native.pressure || 0;\r\n    },\r\n\r\n    /**\r\n     * Returns the plane angle in degrees between the Y-Z plane and the\r\n     * plane containing e.g. the stylus and the Y axis.\r\n     *\r\n     * @return {Number} A value between -90 and 90. The default is 0.\r\n     */\r\n    getTiltX() {\r\n      return this._native.tiltX || 0;\r\n    },\r\n\r\n    /**\r\n     * Returns the plane angle in degrees between the X-Z plane and the\r\n     * plane containing e.g. the stylus and the X axis.\r\n     *\r\n     * @return {Number} A value between -90 and 90. The default is 0.\r\n     */\r\n    getTiltY() {\r\n      return this._native.tiltY || 0;\r\n    },\r\n\r\n    // overridden\r\n    getOriginalTarget() {\r\n      if (this._native && this._native._original) {\r\n        // fake pointer events\r\n        var orig = this._native._original;\r\n        // In IE8, the original event can be a DispCEventObj which throws an\r\n        // exception when trying to access its properties.\r\n        try {\r\n          // touch events have a wrong target compared to mouse events\r\n          if (orig.type.indexOf(\"touch\") == 0) {\r\n            if (orig.changedTouches[0]) {\r\n              return document.elementFromPoint(\r\n                orig.changedTouches[0].clientX,\r\n                orig.changedTouches[0].clientY\r\n              );\r\n            }\r\n          }\r\n        } catch (ex) {\r\n          return qx.bom.Event.getTarget(this._native);\r\n        }\r\n        return qx.bom.Event.getTarget(orig);\r\n      } else if (this._native) {\r\n        // native pointer events\r\n        return qx.bom.Event.getTarget(this._native);\r\n      }\r\n      return super.getOriginalTarget();\r\n    },\r\n\r\n    /**\r\n     * Returns the device type which the event triggered. This can be one\r\n     * of the following strings: <code>mouse</code>, <code>wheel</code>,\r\n     * <code>pen</code> or <code>touch</code>.\r\n     *\r\n     * @return {String} The type of the pointer.\r\n     */\r\n    getPointerType() {\r\n      if (typeof this._native.pointerType == \"string\") {\r\n        return this._native.pointerType;\r\n      }\r\n\r\n      if (typeof this._native.pointerType == \"number\") {\r\n        if (this._native.pointerType == this._native.MSPOINTER_TYPE_MOUSE) {\r\n          return \"mouse\";\r\n        }\r\n        if (this._native.pointerType == this._native.MSPOINTER_TYPE_PEN) {\r\n          return \"pen\";\r\n        }\r\n        if (this._native.pointerType == this._native.MSPOINTER_TYPE_TOUCH) {\r\n          return \"touch\";\r\n        }\r\n      }\r\n\r\n      return \"\";\r\n    },\r\n\r\n    /**\r\n     * Returns whether the pointer is the primary pointer.\r\n     *\r\n     * @return {Boolean} <code>true</code>, if it's the primary pointer.\r\n     */\r\n    isPrimary() {\r\n      return !!this._native.isPrimary;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}