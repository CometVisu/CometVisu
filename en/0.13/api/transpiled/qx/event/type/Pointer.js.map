{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Mouse",
    "members",
    "_cloneNativeEvent",
    "nativeEvent",
    "clone",
    "Pointer",
    "superclass",
    "prototype",
    "call",
    "pointerId",
    "width",
    "height",
    "pressure",
    "tiltX",
    "tiltY",
    "pointerType",
    "isPrimary",
    "_original",
    "MSPOINTER_TYPE_MOUSE",
    "MSPOINTER_TYPE_PEN",
    "MSPOINTER_TYPE_TOUCH",
    "getDocumentLeft",
    "x",
    "getPointerType",
    "_native",
    "undefined",
    "Math",
    "round",
    "changedTouches",
    "pageX",
    "getDocumentTop",
    "y",
    "pageY",
    "getPointerId",
    "getWidth",
    "getHeight",
    "getPressure",
    "getTiltX",
    "getTiltY",
    "getOriginalTarget",
    "orig",
    "indexOf",
    "document",
    "elementFromPoint",
    "clientX",
    "clientY",
    "ex",
    "bom",
    "Event",
    "getTarget"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/type/Pointer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Pointer event object.\n *\n * the interface of this class is based on the pointer event interface:\n * http://www.w3.org/TR/pointerevents/\n */\nqx.Class.define(\"qx.event.type.Pointer\", {\n  extend: qx.event.type.Mouse,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // overridden\n    _cloneNativeEvent(nativeEvent, clone) {\n      clone = super._cloneNativeEvent(nativeEvent, clone);\n\n      clone.pointerId = nativeEvent.pointerId;\n      clone.width = nativeEvent.width;\n      clone.height = nativeEvent.height;\n      clone.pressure = nativeEvent.pressure;\n      clone.tiltX = nativeEvent.tiltX;\n      clone.tiltY = nativeEvent.tiltY;\n      clone.pointerType = nativeEvent.pointerType;\n      clone.isPrimary = nativeEvent.isPrimary;\n      clone._original = nativeEvent._original;\n      clone.MSPOINTER_TYPE_MOUSE = nativeEvent.MSPOINTER_TYPE_MOUSE;\n      clone.MSPOINTER_TYPE_PEN = nativeEvent.MSPOINTER_TYPE_PEN;\n      clone.MSPOINTER_TYPE_TOUCH = nativeEvent.MSPOINTER_TYPE_TOUCH;\n\n      return clone;\n    },\n\n    // overridden\n    getDocumentLeft() {\n      var x = super.getDocumentLeft();\n      // iOS 6 does not copy pageX over to the fake pointer event\n      if (\n        x == 0 &&\n        this.getPointerType() == \"touch\" &&\n        this._native._original !== undefined\n      ) {\n        x = Math.round(this._native._original.changedTouches[0].pageX) || 0;\n      }\n      return x;\n    },\n\n    // overridden\n    getDocumentTop() {\n      var y = super.getDocumentTop();\n      // iOS 6 does not copy pageY over to the fake pointer event\n      if (\n        y == 0 &&\n        this.getPointerType() == \"touch\" &&\n        this._native._original !== undefined\n      ) {\n        y = Math.round(this._native._original.changedTouches[0].pageY) || 0;\n      }\n      return y;\n    },\n\n    /**\n     * Returns a unique identified for the pointer. This id is\n     * unique for all active pointers.\n     *\n     * @return {Number} The unique id.\n     */\n    getPointerId() {\n      return this._native.pointerId || 0;\n    },\n\n    /**\n     * Returns the contact geometry in it's width.\n     *\n     * @return {Number} The number of pixels (width) of the contact geometry.\n     */\n    getWidth() {\n      return this._native.width || 0;\n    },\n\n    /**\n     * Returns the contact geometry in it's height.\n     *\n     * @return {Number} The number of pixels (height) of the contact geometry.\n     */\n    getHeight() {\n      return this._native.height || 0;\n    },\n\n    /**\n     * Returns the pressure of the pointer in a rage from 0 to 1.\n     *\n     * @return {Number} <code>1</code> for full pressure. The default is 0.\n     */\n    getPressure() {\n      return this._native.pressure || 0;\n    },\n\n    /**\n     * Returns the plane angle in degrees between the Y-Z plane and the\n     * plane containing e.g. the stylus and the Y axis.\n     *\n     * @return {Number} A value between -90 and 90. The default is 0.\n     */\n    getTiltX() {\n      return this._native.tiltX || 0;\n    },\n\n    /**\n     * Returns the plane angle in degrees between the X-Z plane and the\n     * plane containing e.g. the stylus and the X axis.\n     *\n     * @return {Number} A value between -90 and 90. The default is 0.\n     */\n    getTiltY() {\n      return this._native.tiltY || 0;\n    },\n\n    // overridden\n    getOriginalTarget() {\n      if (this._native && this._native._original) {\n        // fake pointer events\n        var orig = this._native._original;\n        // In IE8, the original event can be a DispCEventObj which throws an\n        // exception when trying to access its properties.\n        try {\n          // touch events have a wrong target compared to mouse events\n          if (orig.type.indexOf(\"touch\") == 0) {\n            if (orig.changedTouches[0]) {\n              return document.elementFromPoint(\n                orig.changedTouches[0].clientX,\n                orig.changedTouches[0].clientY\n              );\n            }\n          }\n        } catch (ex) {\n          return qx.bom.Event.getTarget(this._native);\n        }\n        return qx.bom.Event.getTarget(orig);\n      } else if (this._native) {\n        // native pointer events\n        return qx.bom.Event.getTarget(this._native);\n      }\n      return super.getOriginalTarget();\n    },\n\n    /**\n     * Returns the device type which the event triggered. This can be one\n     * of the following strings: <code>mouse</code>, <code>wheel</code>,\n     * <code>pen</code> or <code>touch</code>.\n     *\n     * @return {String} The type of the pointer.\n     */\n    getPointerType() {\n      if (typeof this._native.pointerType == \"string\") {\n        return this._native.pointerType;\n      }\n\n      if (typeof this._native.pointerType == \"number\") {\n        if (this._native.pointerType == this._native.MSPOINTER_TYPE_MOUSE) {\n          return \"mouse\";\n        }\n        if (this._native.pointerType == this._native.MSPOINTER_TYPE_PEN) {\n          return \"pen\";\n        }\n        if (this._native.pointerType == this._native.MSPOINTER_TYPE_TOUCH) {\n          return \"touch\";\n        }\n      }\n\n      return \"\";\n    },\n\n    /**\n     * Returns whether the pointer is the primary pointer.\n     *\n     * @return {Boolean} <code>true</code>, if it's the primary pointer.\n     */\n    isPrimary() {\n      return !!this._native.isPrimary;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}