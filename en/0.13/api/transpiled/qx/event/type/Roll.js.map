{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Pointer",
    "members",
    "stop",
    "stopPropagation",
    "preventDefault",
    "_cloneNativeEvent",
    "nativeEvent",
    "clone",
    "delta",
    "momentum",
    "timeoutId",
    "getMomentum",
    "_native",
    "stopMomentum",
    "Registration",
    "getManager",
    "_originalTarget",
    "getHandler",
    "handler",
    "Gesture",
    "getDelta",
    "Roll"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/type/Roll.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Roll event object.\n */\nqx.Class.define(\"qx.event.type.Roll\", {\n  extend: qx.event.type.Pointer,\n\n  members: {\n    // overridden\n    stop() {\n      this.stopPropagation();\n      this.preventDefault();\n    },\n\n    // overridden\n    _cloneNativeEvent(nativeEvent, clone) {\n      var clone = super._cloneNativeEvent(nativeEvent, clone);\n\n      clone.delta = nativeEvent.delta;\n      clone.momentum = nativeEvent.momentum;\n      clone.timeoutId = nativeEvent.timeoutId;\n\n      return clone;\n    },\n\n    /**\n     * Boolean flag to indicate if this event was triggered by a momentum.\n     * @return {Boolean} <code>true</code>, if the event is momentum based\n     */\n    getMomentum() {\n      return this._native.momentum;\n    },\n\n    /**\n     * Stops the momentum events.\n     */\n    stopMomentum() {\n      if (this._native.timeoutId) {\n        qx.event.Registration.getManager(this._originalTarget)\n          .getHandler(qx.event.handler.Gesture)\n          .stopMomentum(this._native.timeoutId);\n      }\n    },\n\n    /**\n     * Returns a map with the calculated delta coordinates and axis,\n     * relative to the last <code>roll</code> event.\n     *\n     * @return {Map} a map with contains the delta as <code>x</code> and\n     * <code>y</code>\n     */\n    getDelta() {\n      return this._native.delta;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oBAAhB,EAAsC;IACpCC,MAAM,EAAEN,EAAE,CAACO,KAAH,CAASC,IAAT,CAAcC,OADc;IAGpCC,OAAO,EAAE;MACP;MACAC,IAFO,kBAEA;QACL,KAAKC,eAAL;QACA,KAAKC,cAAL;MACD,CALM;MAOP;MACAC,iBARO,6BAQWC,WARX,EAQwBC,KARxB,EAQ+B;QACpC,IAAIA,KAAK,wEAA2BD,WAA3B,EAAwCC,KAAxC,CAAT;;QAEAA,KAAK,CAACC,KAAN,GAAcF,WAAW,CAACE,KAA1B;QACAD,KAAK,CAACE,QAAN,GAAiBH,WAAW,CAACG,QAA7B;QACAF,KAAK,CAACG,SAAN,GAAkBJ,WAAW,CAACI,SAA9B;QAEA,OAAOH,KAAP;MACD,CAhBM;;MAkBP;AACJ;AACA;AACA;MACII,WAtBO,yBAsBO;QACZ,OAAO,KAAKC,OAAL,CAAaH,QAApB;MACD,CAxBM;;MA0BP;AACJ;AACA;MACII,YA7BO,0BA6BQ;QACb,IAAI,KAAKD,OAAL,CAAaF,SAAjB,EAA4B;UAC1BnB,EAAE,CAACO,KAAH,CAASgB,YAAT,CAAsBC,UAAtB,CAAiC,KAAKC,eAAtC,EACGC,UADH,CACc1B,EAAE,CAACO,KAAH,CAASoB,OAAT,CAAiBC,OAD/B,EAEGN,YAFH,CAEgB,KAAKD,OAAL,CAAaF,SAF7B;QAGD;MACF,CAnCM;;MAqCP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIU,QA5CO,sBA4CI;QACT,OAAO,KAAKR,OAAL,CAAaJ,KAApB;MACD;IA9CM;EAH2B,CAAtC;EArBAjB,EAAE,CAACO,KAAH,CAASC,IAAT,CAAcsB,IAAd,CAAmB3B,aAAnB,GAAmCA,aAAnC"
}