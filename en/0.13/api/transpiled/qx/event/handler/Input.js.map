{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "construct",
    "constructor",
    "call",
    "_onChangeCheckedWrapper",
    "lang",
    "Function",
    "listener",
    "_onChangeChecked",
    "_onChangeValueWrapper",
    "_onChangeValue",
    "_onInputWrapper",
    "_onInput",
    "_onPropertyWrapper",
    "_onProperty",
    "Environment",
    "get",
    "_onKeyDownWrapper",
    "_onKeyDown",
    "_onKeyUpWrapper",
    "_onKeyUp",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "input",
    "change",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "members",
    "__enter",
    "__onInputTimeoutId",
    "__oldValue",
    "__oldInputValue",
    "canHandleEvent",
    "target",
    "type",
    "lower",
    "tagName",
    "toLowerCase",
    "registerEvent",
    "capture",
    "__inputHandlerAttached",
    "tag",
    "elementType",
    "bom",
    "Event",
    "addNativeListener",
    "_onKeyPressWrapped",
    "_onKeyPress",
    "__registerInputListener",
    "select",
    "mshtml",
    "_inputFixWrapper",
    "_inputFix",
    "webkit",
    "parseFloat",
    "opera",
    "_default",
    "unregisterEvent",
    "removeNativeListener",
    "ex",
    "__unregisterInputListener",
    "e",
    "keyCode",
    "value",
    "fireEvent",
    "Data",
    "GlobalError",
    "observeMethod",
    "getTarget",
    "window",
    "setTimeout",
    "data",
    "i",
    "o",
    "options",
    "l",
    "length",
    "selected",
    "push",
    "checked",
    "prop",
    "propertyName",
    "$$inValueSet",
    "defer",
    "addHandler",
    "handler",
    "Input"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Input.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n// Original behavior:\r\n// ================================================================\r\n// Normally a \"change\" event should occur on blur of the element\r\n// (http://www.w3.org/TR/DOM-Level-2-Events/events.html)\r\n\r\n// However this is not true for \"file\" upload fields\r\n\r\n// And this is also not true for checkboxes and radiofields (all non mshtml)\r\n// And this is also not true for select boxes where the selections\r\n// happens in the opened popup (Gecko + Webkit)\r\n\r\n// Normalized behavior:\r\n// ================================================================\r\n// Change on blur for textfields, textareas and file\r\n// Instant change event on checkboxes, radiobuttons\r\n\r\n// Select field fires on select (when using popup or size>1)\r\n// but differs when using keyboard:\r\n// mshtml+opera=keypress; mozilla+safari=blur\r\n\r\n// Input event for textareas does not work in Safari 3 beta (WIN)\r\n// Safari 3 beta (WIN) repeats change event for select box on blur when selected using popup\r\n\r\n// Opera fires \"change\" on radio buttons two times for each change\r\n\r\n/**\r\n * This handler provides an \"change\" event for all form fields and an\r\n * \"input\" event for form fields of type \"text\" and \"textarea\".\r\n *\r\n * To let these events work it is needed to create the elements using\r\n * {@link qx.bom.Input}\r\n */\r\nqx.Class.define(\"qx.event.handler.Input\", {\r\n  extend: qx.core.Object,\r\n  implement: qx.event.IEventHandler,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  construct() {\r\n    super();\r\n\r\n    this._onChangeCheckedWrapper = qx.lang.Function.listener(\r\n      this._onChangeChecked,\r\n      this\r\n    );\r\n\r\n    this._onChangeValueWrapper = qx.lang.Function.listener(\r\n      this._onChangeValue,\r\n      this\r\n    );\r\n\r\n    this._onInputWrapper = qx.lang.Function.listener(this._onInput, this);\r\n    this._onPropertyWrapper = qx.lang.Function.listener(this._onProperty, this);\r\n\r\n    // special event handler for opera\r\n    if (qx.core.Environment.get(\"engine.name\") == \"opera\") {\r\n      this._onKeyDownWrapper = qx.lang.Function.listener(this._onKeyDown, this);\r\n      this._onKeyUpWrapper = qx.lang.Function.listener(this._onKeyUp, this);\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      input: 1,\r\n      change: 1\r\n    },\r\n\r\n    /** @type {Integer} Which target check to use */\r\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_DOMNODE,\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: false\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    // special handling for opera\r\n    __enter: false,\r\n    __onInputTimeoutId: null,\r\n\r\n    // stores the former set value for opera and IE\r\n    __oldValue: null,\r\n\r\n    // stores the former set value for IE\r\n    __oldInputValue: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {\r\n      var lower = target.tagName.toLowerCase();\r\n\r\n      if (type === \"input\" && (lower === \"input\" || lower === \"textarea\")) {\r\n        return true;\r\n      }\r\n\r\n      if (\r\n        type === \"change\" &&\r\n        (lower === \"input\" || lower === \"textarea\" || lower === \"select\")\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        (qx.core.Environment.get(\"engine.version\") < 9 ||\r\n          (qx.core.Environment.get(\"engine.version\") >= 9 &&\r\n            qx.core.Environment.get(\"browser.documentmode\") < 9))\r\n      ) {\r\n        if (!target.__inputHandlerAttached) {\r\n          var tag = target.tagName.toLowerCase();\r\n          var elementType = target.type;\r\n\r\n          if (\r\n            elementType === \"text\" ||\r\n            elementType === \"password\" ||\r\n            tag === \"textarea\" ||\r\n            elementType === \"checkbox\" ||\r\n            elementType === \"radio\"\r\n          ) {\r\n            qx.bom.Event.addNativeListener(\r\n              target,\r\n              \"propertychange\",\r\n              this._onPropertyWrapper\r\n            );\r\n          }\r\n\r\n          if (elementType !== \"checkbox\" && elementType !== \"radio\") {\r\n            qx.bom.Event.addNativeListener(\r\n              target,\r\n              \"change\",\r\n              this._onChangeValueWrapper\r\n            );\r\n          }\r\n\r\n          if (elementType === \"text\" || elementType === \"password\") {\r\n            this._onKeyPressWrapped = qx.lang.Function.listener(\r\n              this._onKeyPress,\r\n              this,\r\n              target\r\n            );\r\n\r\n            qx.bom.Event.addNativeListener(\r\n              target,\r\n              \"keypress\",\r\n              this._onKeyPressWrapped\r\n            );\r\n          }\r\n\r\n          target.__inputHandlerAttached = true;\r\n        }\r\n      } else {\r\n        if (type === \"input\") {\r\n          this.__registerInputListener(target);\r\n        } else if (type === \"change\") {\r\n          if (target.type === \"radio\" || target.type === \"checkbox\") {\r\n            qx.bom.Event.addNativeListener(\r\n              target,\r\n              \"change\",\r\n              this._onChangeCheckedWrapper\r\n            );\r\n          } else {\r\n            qx.bom.Event.addNativeListener(\r\n              target,\r\n              \"change\",\r\n              this._onChangeValueWrapper\r\n            );\r\n          }\r\n\r\n          // special enter bugfix for opera\r\n          if (\r\n            qx.core.Environment.get(\"engine.name\") == \"opera\" ||\r\n            qx.core.Environment.get(\"engine.name\") == \"mshtml\"\r\n          ) {\r\n            if (target.type === \"text\" || target.type === \"password\") {\r\n              this._onKeyPressWrapped = qx.lang.Function.listener(\r\n                this._onKeyPress,\r\n                this,\r\n                target\r\n              );\r\n\r\n              qx.bom.Event.addNativeListener(\r\n                target,\r\n                \"keypress\",\r\n                this._onKeyPressWrapped\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    __registerInputListener: qx.core.Environment.select(\"engine.name\", {\r\n      mshtml(target) {\r\n        if (\r\n          qx.core.Environment.get(\"engine.version\") >= 9 &&\r\n          qx.core.Environment.get(\"browser.documentmode\") >= 9\r\n        ) {\r\n          qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\r\n\r\n          if (\r\n            target.type === \"text\" ||\r\n            target.type === \"password\" ||\r\n            target.type === \"textarea\"\r\n          ) {\r\n            // Fixed input for delete and backspace key\r\n            this._inputFixWrapper = qx.lang.Function.listener(\r\n              this._inputFix,\r\n              this,\r\n              target\r\n            );\r\n\r\n            qx.bom.Event.addNativeListener(\r\n              target,\r\n              \"keyup\",\r\n              this._inputFixWrapper\r\n            );\r\n          }\r\n        }\r\n      },\r\n\r\n      webkit(target) {\r\n        var tag = target.tagName.toLowerCase();\r\n\r\n        // the change event is not fired while typing\r\n        // this has been fixed in the latest nightlies\r\n        if (\r\n          parseFloat(qx.core.Environment.get(\"engine.version\")) < 532 &&\r\n          tag == \"textarea\"\r\n        ) {\r\n          qx.bom.Event.addNativeListener(\r\n            target,\r\n            \"keypress\",\r\n            this._onInputWrapper\r\n          );\r\n        }\r\n        qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\r\n      },\r\n\r\n      opera(target) {\r\n        // register key events for filtering \"enter\" on input events\r\n        qx.bom.Event.addNativeListener(target, \"keyup\", this._onKeyUpWrapper);\r\n        qx.bom.Event.addNativeListener(\r\n          target,\r\n          \"keydown\",\r\n          this._onKeyDownWrapper\r\n        );\r\n\r\n        // register an blur event for preventing the input event on blur\r\n\r\n        qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\r\n      },\r\n\r\n      default(target) {\r\n        qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\r\n      }\r\n    }),\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type) {\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        qx.core.Environment.get(\"engine.version\") < 9 &&\r\n        qx.core.Environment.get(\"browser.documentmode\") < 9\r\n      ) {\r\n        if (target.__inputHandlerAttached) {\r\n          var tag = target.tagName.toLowerCase();\r\n          var elementType = target.type;\r\n\r\n          if (\r\n            elementType === \"text\" ||\r\n            elementType === \"password\" ||\r\n            tag === \"textarea\" ||\r\n            elementType === \"checkbox\" ||\r\n            elementType === \"radio\"\r\n          ) {\r\n            qx.bom.Event.removeNativeListener(\r\n              target,\r\n              \"propertychange\",\r\n              this._onPropertyWrapper\r\n            );\r\n          }\r\n\r\n          if (elementType !== \"checkbox\" && elementType !== \"radio\") {\r\n            qx.bom.Event.removeNativeListener(\r\n              target,\r\n              \"change\",\r\n              this._onChangeValueWrapper\r\n            );\r\n          }\r\n\r\n          if (elementType === \"text\" || elementType === \"password\") {\r\n            qx.bom.Event.removeNativeListener(\r\n              target,\r\n              \"keypress\",\r\n              this._onKeyPressWrapped\r\n            );\r\n          }\r\n\r\n          try {\r\n            delete target.__inputHandlerAttached;\r\n          } catch (ex) {\r\n            target.__inputHandlerAttached = null;\r\n          }\r\n        }\r\n      } else {\r\n        if (type === \"input\") {\r\n          this.__unregisterInputListener(target);\r\n        } else if (type === \"change\") {\r\n          if (target.type === \"radio\" || target.type === \"checkbox\") {\r\n            qx.bom.Event.removeNativeListener(\r\n              target,\r\n              \"change\",\r\n              this._onChangeCheckedWrapper\r\n            );\r\n          } else {\r\n            qx.bom.Event.removeNativeListener(\r\n              target,\r\n              \"change\",\r\n              this._onChangeValueWrapper\r\n            );\r\n          }\r\n        }\r\n\r\n        if (\r\n          qx.core.Environment.get(\"engine.name\") == \"opera\" ||\r\n          qx.core.Environment.get(\"engine.name\") == \"mshtml\"\r\n        ) {\r\n          if (target.type === \"text\" || target.type === \"password\") {\r\n            qx.bom.Event.removeNativeListener(\r\n              target,\r\n              \"keypress\",\r\n              this._onKeyPressWrapped\r\n            );\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    __unregisterInputListener: qx.core.Environment.select(\"engine.name\", {\r\n      mshtml(target) {\r\n        if (\r\n          qx.core.Environment.get(\"engine.version\") >= 9 &&\r\n          qx.core.Environment.get(\"browser.documentmode\") >= 9\r\n        ) {\r\n          qx.bom.Event.removeNativeListener(\r\n            target,\r\n            \"input\",\r\n            this._onInputWrapper\r\n          );\r\n\r\n          if (\r\n            target.type === \"text\" ||\r\n            target.type === \"password\" ||\r\n            target.type === \"textarea\"\r\n          ) {\r\n            // Fixed input for delete and backspace key\r\n            qx.bom.Event.removeNativeListener(\r\n              target,\r\n              \"keyup\",\r\n              this._inputFixWrapper\r\n            );\r\n          }\r\n        }\r\n      },\r\n\r\n      webkit(target) {\r\n        var tag = target.tagName.toLowerCase();\r\n\r\n        // the change event is not fired while typing\r\n        // this has been fixed in the latest nightlies\r\n        if (\r\n          parseFloat(qx.core.Environment.get(\"engine.version\")) < 532 &&\r\n          tag == \"textarea\"\r\n        ) {\r\n          qx.bom.Event.removeNativeListener(\r\n            target,\r\n            \"keypress\",\r\n            this._onInputWrapper\r\n          );\r\n        }\r\n        qx.bom.Event.removeNativeListener(\r\n          target,\r\n          \"input\",\r\n          this._onInputWrapper\r\n        );\r\n      },\r\n\r\n      opera(target) {\r\n        // unregister key events for filtering \"enter\" on input events\r\n        qx.bom.Event.removeNativeListener(\r\n          target,\r\n          \"keyup\",\r\n          this._onKeyUpWrapper\r\n        );\r\n\r\n        qx.bom.Event.removeNativeListener(\r\n          target,\r\n          \"keydown\",\r\n          this._onKeyDownWrapper\r\n        );\r\n\r\n        qx.bom.Event.removeNativeListener(\r\n          target,\r\n          \"input\",\r\n          this._onInputWrapper\r\n        );\r\n      },\r\n\r\n      default(target) {\r\n        qx.bom.Event.removeNativeListener(\r\n          target,\r\n          \"input\",\r\n          this._onInputWrapper\r\n        );\r\n      }\r\n    }),\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      FOR OPERA AND IE (KEYPRESS TO SIMULATE CHANGE EVENT)\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    /**\r\n     * Handler for fixing the different behavior when pressing the enter key.\r\n     *\r\n     * FF and Safari fire a \"change\" event if the user presses the enter key.\r\n     * IE and Opera fire the event only if the focus is changed.\r\n     *\r\n     * @signature function(e, target)\r\n     * @param e {Event} DOM event object\r\n     * @param target {Element} The event target\r\n     */\r\n    _onKeyPress: qx.core.Environment.select(\"engine.name\", {\r\n      mshtml(e, target) {\r\n        if (e.keyCode === 13) {\r\n          if (target.value !== this.__oldValue) {\r\n            this.__oldValue = target.value;\r\n            qx.event.Registration.fireEvent(\r\n              target,\r\n              \"change\",\r\n              qx.event.type.Data,\r\n              [target.value]\r\n            );\r\n          }\r\n        }\r\n      },\r\n\r\n      opera(e, target) {\r\n        if (e.keyCode === 13) {\r\n          if (target.value !== this.__oldValue) {\r\n            this.__oldValue = target.value;\r\n            qx.event.Registration.fireEvent(\r\n              target,\r\n              \"change\",\r\n              qx.event.type.Data,\r\n              [target.value]\r\n            );\r\n          }\r\n        }\r\n      },\r\n\r\n      default: null\r\n    }),\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      FOR IE (KEYUP TO SIMULATE INPUT EVENT)\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    /**\r\n     * Handler for fixing the different behavior when pressing the backspace or\r\n     * delete key.\r\n     *\r\n     * The other browsers fire a \"input\" event if the user presses the backspace\r\n     * or delete key.\r\n     * IE fire the event only for other keys.\r\n     *\r\n     * @signature function(e, target)\r\n     * @param e {Event} DOM event object\r\n     * @param target {Element} The event target\r\n     */\r\n    _inputFix: qx.core.Environment.select(\"engine.name\", {\r\n      mshtml(e, target) {\r\n        if (e.keyCode === 46 || e.keyCode === 8) {\r\n          if (target.value !== this.__oldInputValue) {\r\n            this.__oldInputValue = target.value;\r\n            qx.event.Registration.fireEvent(\r\n              target,\r\n              \"input\",\r\n              qx.event.type.Data,\r\n              [target.value]\r\n            );\r\n          }\r\n        }\r\n      },\r\n\r\n      default: null\r\n    }),\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      FOR OPERA ONLY LISTENER (KEY AND BLUR)\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    /**\r\n     * Key event listener for opera which recognizes if the enter key has been\r\n     * pressed.\r\n     *\r\n     * @signature function(e)\r\n     * @param e {Event} DOM event object\r\n     */\r\n    _onKeyDown: qx.core.Environment.select(\"engine.name\", {\r\n      opera(e) {\r\n        // enter is pressed\r\n        if (e.keyCode === 13) {\r\n          this.__enter = true;\r\n        }\r\n      },\r\n\r\n      default: null\r\n    }),\r\n\r\n    /**\r\n     * Key event listener for opera which recognizes if the enter key has been\r\n     * pressed.\r\n     *\r\n     * @signature function(e)\r\n     * @param e {Event} DOM event object\r\n     */\r\n    _onKeyUp: qx.core.Environment.select(\"engine.name\", {\r\n      opera(e) {\r\n        // enter is pressed\r\n        if (e.keyCode === 13) {\r\n          this.__enter = false;\r\n        }\r\n      },\r\n\r\n      default: null\r\n    }),\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      NATIVE EVENT HANDLERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Internal function called by input elements created using {@link qx.bom.Input}.\r\n     *\r\n     * @signature function(e)\r\n     * @param e {Event} Native DOM event\r\n     */\r\n    _onInput: qx.event.GlobalError.observeMethod(function (e) {\r\n      var target = qx.bom.Event.getTarget(e);\r\n      var tag = target.tagName.toLowerCase();\r\n      // ignore native input event when triggered by return in input element\r\n      if (!this.__enter || tag !== \"input\") {\r\n        // opera lower 10.6 needs a special treatment for input events because\r\n        // they are also fired on blur\r\n        if (\r\n          qx.core.Environment.get(\"engine.name\") == \"opera\" &&\r\n          qx.core.Environment.get(\"browser.version\") < 10.6\r\n        ) {\r\n          this.__onInputTimeoutId = window.setTimeout(function () {\r\n            qx.event.Registration.fireEvent(\r\n              target,\r\n              \"input\",\r\n              qx.event.type.Data,\r\n              [target.value]\r\n            );\r\n          }, 0);\r\n        } else {\r\n          qx.event.Registration.fireEvent(target, \"input\", qx.event.type.Data, [\r\n            target.value\r\n          ]);\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n     * Internal function called by input elements created using {@link qx.bom.Input}.\r\n     *\r\n     * @signature function(e)\r\n     * @param e {Event} Native DOM event\r\n     */\r\n    _onChangeValue: qx.event.GlobalError.observeMethod(function (e) {\r\n      var target = qx.bom.Event.getTarget(e);\r\n      var data = target.value;\r\n\r\n      if (target.type === \"select-multiple\") {\r\n        var data = [];\r\n        for (var i = 0, o = target.options, l = o.length; i < l; i++) {\r\n          if (o[i].selected) {\r\n            data.push(o[i].value);\r\n          }\r\n        }\r\n      }\r\n\r\n      qx.event.Registration.fireEvent(target, \"change\", qx.event.type.Data, [\r\n        data\r\n      ]);\r\n    }),\r\n\r\n    /**\r\n     * Internal function called by input elements created using {@link qx.bom.Input}.\r\n     *\r\n     * @signature function(e)\r\n     * @param e {Event} Native DOM event\r\n     */\r\n    _onChangeChecked: qx.event.GlobalError.observeMethod(function (e) {\r\n      var target = qx.bom.Event.getTarget(e);\r\n\r\n      if (target.type === \"radio\") {\r\n        if (target.checked) {\r\n          qx.event.Registration.fireEvent(\r\n            target,\r\n            \"change\",\r\n            qx.event.type.Data,\r\n            [target.value]\r\n          );\r\n        }\r\n      } else {\r\n        qx.event.Registration.fireEvent(target, \"change\", qx.event.type.Data, [\r\n          target.checked\r\n        ]);\r\n      }\r\n    }),\r\n\r\n    /**\r\n     * Internal function called by input elements created using {@link qx.bom.Input}.\r\n     *\r\n     * @signature function(e)\r\n     * @param e {Event} Native DOM event\r\n     */\r\n    _onProperty: qx.core.Environment.select(\"engine.name\", {\r\n      mshtml: qx.event.GlobalError.observeMethod(function (e) {\r\n        var target = qx.bom.Event.getTarget(e);\r\n        var prop = e.propertyName;\r\n\r\n        if (\r\n          prop === \"value\" &&\r\n          (target.type === \"text\" ||\r\n            target.type === \"password\" ||\r\n            target.tagName.toLowerCase() === \"textarea\")\r\n        ) {\r\n          if (!target.$$inValueSet) {\r\n            qx.event.Registration.fireEvent(\r\n              target,\r\n              \"input\",\r\n              qx.event.type.Data,\r\n              [target.value]\r\n            );\r\n          }\r\n        } else if (prop === \"checked\") {\r\n          if (target.type === \"checkbox\") {\r\n            qx.event.Registration.fireEvent(\r\n              target,\r\n              \"change\",\r\n              qx.event.type.Data,\r\n              [target.checked]\r\n            );\r\n          } else if (target.checked) {\r\n            qx.event.Registration.fireEvent(\r\n              target,\r\n              \"change\",\r\n              qx.event.type.Data,\r\n              [target.value]\r\n            );\r\n          }\r\n        }\r\n      }),\r\n\r\n      default() {}\r\n    })\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}