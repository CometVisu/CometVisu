{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "handler",
    "GestureCore",
    "implement",
    "IEventHandler",
    "core",
    "IDisposable",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "tap",
    "swipe",
    "longtap",
    "dbltap",
    "rotate",
    "pinch",
    "track",
    "trackstart",
    "trackend",
    "roll",
    "GESTURE_EVENTS",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "TARGET_DOCUMENT",
    "IGNORE_CAN_HANDLE",
    "EVENT_CLASSES",
    "type",
    "Tap",
    "Swipe",
    "Rotate",
    "Pinch",
    "Track",
    "Roll",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "__root",
    "document",
    "apply",
    "members",
    "__listener",
    "__onDblClickWrapped",
    "__fireRollWrapped",
    "canHandleEvent",
    "target",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "_initObserver",
    "lang",
    "Function",
    "listener",
    "checkAndFireGesture",
    "Gesture",
    "forEach",
    "addListener",
    "bind",
    "Environment",
    "get",
    "_onDblClick",
    "bom",
    "Event",
    "addNativeListener",
    "data",
    "client",
    "getMouseWheel",
    "_fireRoll",
    "pointerEvent",
    "__callBase",
    "getNativeEvent",
    "getType",
    "getTarget",
    "_stopObserver",
    "removeListener",
    "removeNativeListener",
    "_hasIntermediaryHandler",
    "_fireEvent",
    "domEvent",
    "eventTypeClass",
    "Pointer",
    "nodeType",
    "fireEvent",
    "Data",
    "dispose",
    "method",
    "args",
    "prototype",
    "defer",
    "addHandler",
    "window",
    "getManager",
    "getHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Gesture.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Unified gesture event handler.\n *\n * @require(qx.event.handler.Pointer)\n */\nqx.Class.define(\"qx.event.handler.Gesture\", {\n  extend: qx.event.handler.GestureCore,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      tap: 1,\n      swipe: 1,\n      longtap: 1,\n      dbltap: 1,\n      rotate: 1,\n      pinch: 1,\n      track: 1,\n      trackstart: 1,\n      trackend: 1,\n      roll: 1\n    },\n\n    GESTURE_EVENTS: [\n      \"gesturebegin\",\n      \"gesturefinish\",\n      \"gesturemove\",\n      \"gesturecancel\"\n    ],\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK:\n      qx.event.IEventHandler.TARGET_DOMNODE +\n      qx.event.IEventHandler.TARGET_DOCUMENT,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true,\n\n    EVENT_CLASSES: {\n      tap: qx.event.type.Tap,\n      longtap: qx.event.type.Tap,\n      dbltap: qx.event.type.Tap,\n      swipe: qx.event.type.Swipe,\n      rotate: qx.event.type.Rotate,\n      pinch: qx.event.type.Pinch,\n      track: qx.event.type.Track,\n      trackstart: qx.event.type.Track,\n      trackend: qx.event.type.Track,\n      roll: qx.event.type.Roll\n    }\n  },\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    // Define shorthands\n    this.__manager = manager;\n    this.__window = manager.getWindow();\n    this.__root = this.__window.document;\n\n    qx.event.handler.GestureCore.apply(this, [this.__root]);\n  },\n\n  members: {\n    __manager: null,\n    __window: null,\n    __root: null,\n    __listener: null,\n    __onDblClickWrapped: null,\n    __fireRollWrapped: null,\n\n    /**\n     * Getter for the internal __window object\n     * @return {Window} DOM window instance\n     */\n    getWindow() {\n      return this.__window;\n    },\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // overridden\n    _initObserver() {\n      this.__listener = qx.lang.Function.listener(\n        this.checkAndFireGesture,\n        this\n      );\n\n      qx.event.handler.Gesture.GESTURE_EVENTS.forEach(\n        function (type) {\n          qx.event.Registration.addListener(\n            this.__root,\n            type,\n            this.__listener,\n            this\n          );\n        }.bind(this)\n      );\n\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9\n      ) {\n        this.__onDblClickWrapped = qx.lang.Function.listener(\n          this._onDblClick,\n          this\n        );\n\n        qx.bom.Event.addNativeListener(\n          this.__root,\n          \"dblclick\",\n          this.__onDblClickWrapped\n        );\n      }\n\n      // list to wheel events\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\n      this.__fireRollWrapped = qx.lang.Function.listener(this._fireRoll, this);\n      // replaced the useCapture (4th parameter) from this to true\n      // see https://github.com/qooxdoo/qooxdoo/pull/9292\n      qx.bom.Event.addNativeListener(\n        data.target,\n        data.type,\n        this.__fireRollWrapped,\n        true,\n        false\n      );\n    },\n\n    /**\n     * Checks if a gesture was made and fires the gesture event.\n     *\n     * @param pointerEvent {qx.event.type.Pointer} Pointer event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    checkAndFireGesture(pointerEvent, type, target) {\n      this.__callBase(\"checkAndFireGesture\", [\n        pointerEvent.getNativeEvent(),\n        pointerEvent.getType(),\n        pointerEvent.getTarget()\n      ]);\n    },\n\n    // overridden\n    _stopObserver() {\n      qx.event.handler.Gesture.GESTURE_EVENTS.forEach(\n        function (type) {\n          qx.event.Registration.removeListener(\n            this.__root,\n            type,\n            this.__listener\n          );\n        }.bind(this)\n      );\n\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9\n      ) {\n        qx.bom.Event.removeNativeListener(\n          this.__root,\n          \"dblclick\",\n          this.__onDblClickWrapped\n        );\n      }\n\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\n      qx.bom.Event.removeNativeListener(\n        data.target,\n        data.type,\n        this.__fireRollWrapped\n      );\n    },\n\n    // overridden\n    _hasIntermediaryHandler(target) {\n      /* This check is irrelevant for qx.Desktop since there is only one\n         gesture handler */\n      return false;\n    },\n\n    /**\n     * Fire a touch event with the given parameters\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    _fireEvent(domEvent, type, target) {\n      if (!target) {\n        target = qx.bom.Event.getTarget(domEvent);\n      }\n\n      if (!type) {\n        type = domEvent.type;\n      }\n\n      var eventTypeClass =\n        qx.event.handler.Gesture.EVENT_CLASSES[type] || qx.event.type.Pointer;\n\n      if (target && target.nodeType) {\n        qx.event.Registration.fireEvent(target, type, eventTypeClass, [\n          domEvent,\n          target,\n          null,\n          true,\n          true\n        ]);\n      }\n\n      // Fire user action event\n      qx.event.Registration.fireEvent(\n        this.__window,\n        \"useraction\",\n        qx.event.type.Data,\n        [type]\n      );\n    },\n\n    /**\n     * Dispose this object\n     */\n    dispose() {\n      this._stopObserver();\n      this.__callBase(\"dispose\");\n      this.__manager =\n        this.__window =\n        this.__root =\n        this.__onDblClickWrapped =\n          null;\n    },\n\n    /**\n     * Call overridden method.\n     *\n     * @param method {String} Name of the overridden method.\n     * @param args {Array} Arguments.\n     */\n    __callBase(method, args) {\n      qx.event.handler.GestureCore.prototype[method].apply(this, args || []);\n    }\n  },\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n    qx.event.Registration.addListener(window, \"appinitialized\", () => {\n      qx.event.Registration.getManager(document).getHandler(statics);\n    });\n  }\n});\n"
  ],
  "mappings": "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"
}