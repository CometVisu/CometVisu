{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "handler",
    "GestureCore",
    "implement",
    "IEventHandler",
    "core",
    "IDisposable",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "tap",
    "swipe",
    "longtap",
    "dbltap",
    "rotate",
    "pinch",
    "track",
    "trackstart",
    "trackend",
    "roll",
    "GESTURE_EVENTS",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "TARGET_DOCUMENT",
    "IGNORE_CAN_HANDLE",
    "EVENT_CLASSES",
    "type",
    "Tap",
    "Swipe",
    "Rotate",
    "Pinch",
    "Track",
    "Roll",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "__root",
    "document",
    "apply",
    "members",
    "__listener",
    "__onDblClickWrapped",
    "__fireRollWrapped",
    "canHandleEvent",
    "target",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "_initObserver",
    "lang",
    "Function",
    "listener",
    "checkAndFireGesture",
    "Gesture",
    "forEach",
    "addListener",
    "bind",
    "Environment",
    "get",
    "_onDblClick",
    "bom",
    "Event",
    "addNativeListener",
    "data",
    "client",
    "getMouseWheel",
    "_fireRoll",
    "pointerEvent",
    "__callBase",
    "getNativeEvent",
    "getType",
    "getTarget",
    "_stopObserver",
    "removeListener",
    "removeNativeListener",
    "_hasIntermediaryHandler",
    "_fireEvent",
    "domEvent",
    "eventTypeClass",
    "Pointer",
    "nodeType",
    "fireEvent",
    "Data",
    "dispose",
    "__P_213_6",
    "method",
    "args",
    "prototype",
    "defer",
    "addHandler",
    "window",
    "getManager",
    "getHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Gesture.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Daniel Wagner (danielwagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Unified gesture event handler.\r\n *\r\n * @require(qx.event.handler.Pointer)\r\n */\r\nqx.Class.define(\"qx.event.handler.Gesture\", {\r\n  extend: qx.event.handler.GestureCore,\r\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      tap: 1,\r\n      swipe: 1,\r\n      longtap: 1,\r\n      dbltap: 1,\r\n      rotate: 1,\r\n      pinch: 1,\r\n      track: 1,\r\n      trackstart: 1,\r\n      trackend: 1,\r\n      roll: 1\r\n    },\r\n\r\n    GESTURE_EVENTS: [\r\n      \"gesturebegin\",\r\n      \"gesturefinish\",\r\n      \"gesturemove\",\r\n      \"gesturecancel\"\r\n    ],\r\n\r\n    /** @type {Integer} Which target check to use */\r\n    TARGET_CHECK:\r\n      qx.event.IEventHandler.TARGET_DOMNODE +\r\n      qx.event.IEventHandler.TARGET_DOCUMENT,\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: true,\r\n\r\n    EVENT_CLASSES: {\r\n      tap: qx.event.type.Tap,\r\n      longtap: qx.event.type.Tap,\r\n      dbltap: qx.event.type.Tap,\r\n      swipe: qx.event.type.Swipe,\r\n      rotate: qx.event.type.Rotate,\r\n      pinch: qx.event.type.Pinch,\r\n      track: qx.event.type.Track,\r\n      trackstart: qx.event.type.Track,\r\n      trackend: qx.event.type.Track,\r\n      roll: qx.event.type.Roll\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param manager {qx.event.Manager} Event manager for the window to use\r\n   */\r\n  construct(manager) {\r\n    // Define shorthands\r\n    this.__manager = manager;\r\n    this.__window = manager.getWindow();\r\n    this.__root = this.__window.document;\r\n\r\n    qx.event.handler.GestureCore.apply(this, [this.__root]);\r\n  },\r\n\r\n  members: {\r\n    __manager: null,\r\n    __window: null,\r\n    __root: null,\r\n    __listener: null,\r\n    __onDblClickWrapped: null,\r\n    __fireRollWrapped: null,\r\n\r\n    /**\r\n     * Getter for the internal __window object\r\n     * @return {Window} DOM window instance\r\n     */\r\n    getWindow() {\r\n      return this.__window;\r\n    },\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {},\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // overridden\r\n    _initObserver() {\r\n      this.__listener = qx.lang.Function.listener(\r\n        this.checkAndFireGesture,\r\n        this\r\n      );\r\n\r\n      qx.event.handler.Gesture.GESTURE_EVENTS.forEach(\r\n        function (type) {\r\n          qx.event.Registration.addListener(\r\n            this.__root,\r\n            type,\r\n            this.__listener,\r\n            this\r\n          );\r\n        }.bind(this)\r\n      );\r\n\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        qx.core.Environment.get(\"browser.documentmode\") < 9\r\n      ) {\r\n        this.__onDblClickWrapped = qx.lang.Function.listener(\r\n          this._onDblClick,\r\n          this\r\n        );\r\n\r\n        qx.bom.Event.addNativeListener(\r\n          this.__root,\r\n          \"dblclick\",\r\n          this.__onDblClickWrapped\r\n        );\r\n      }\r\n\r\n      // list to wheel events\r\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\r\n      this.__fireRollWrapped = qx.lang.Function.listener(this._fireRoll, this);\r\n      // replaced the useCapture (4th parameter) from this to true\r\n      // see https://github.com/qooxdoo/qooxdoo/pull/9292\r\n      qx.bom.Event.addNativeListener(\r\n        data.target,\r\n        data.type,\r\n        this.__fireRollWrapped,\r\n        true,\r\n        false\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Checks if a gesture was made and fires the gesture event.\r\n     *\r\n     * @param pointerEvent {qx.event.type.Pointer} Pointer event\r\n     * @param type {String ? null} type of the event\r\n     * @param target {Element ? null} event target\r\n     */\r\n    checkAndFireGesture(pointerEvent, type, target) {\r\n      this.__callBase(\"checkAndFireGesture\", [\r\n        pointerEvent.getNativeEvent(),\r\n        pointerEvent.getType(),\r\n        pointerEvent.getTarget()\r\n      ]);\r\n    },\r\n\r\n    // overridden\r\n    _stopObserver() {\r\n      qx.event.handler.Gesture.GESTURE_EVENTS.forEach(\r\n        function (type) {\r\n          qx.event.Registration.removeListener(\r\n            this.__root,\r\n            type,\r\n            this.__listener\r\n          );\r\n        }.bind(this)\r\n      );\r\n\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        qx.core.Environment.get(\"browser.documentmode\") < 9\r\n      ) {\r\n        qx.bom.Event.removeNativeListener(\r\n          this.__root,\r\n          \"dblclick\",\r\n          this.__onDblClickWrapped\r\n        );\r\n      }\r\n\r\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\r\n      qx.bom.Event.removeNativeListener(\r\n        data.target,\r\n        data.type,\r\n        this.__fireRollWrapped\r\n      );\r\n    },\r\n\r\n    // overridden\r\n    _hasIntermediaryHandler(target) {\r\n      /* This check is irrelevant for qx.Desktop since there is only one\r\n         gesture handler */\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Fire a touch event with the given parameters\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param type {String ? null} type of the event\r\n     * @param target {Element ? null} event target\r\n     */\r\n    _fireEvent(domEvent, type, target) {\r\n      if (!target) {\r\n        target = qx.bom.Event.getTarget(domEvent);\r\n      }\r\n\r\n      if (!type) {\r\n        type = domEvent.type;\r\n      }\r\n\r\n      var eventTypeClass =\r\n        qx.event.handler.Gesture.EVENT_CLASSES[type] || qx.event.type.Pointer;\r\n\r\n      if (target && target.nodeType) {\r\n        qx.event.Registration.fireEvent(target, type, eventTypeClass, [\r\n          domEvent,\r\n          target,\r\n          null,\r\n          true,\r\n          true\r\n        ]);\r\n      }\r\n\r\n      // Fire user action event\r\n      qx.event.Registration.fireEvent(\r\n        this.__window,\r\n        \"useraction\",\r\n        qx.event.type.Data,\r\n        [type]\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Dispose this object\r\n     */\r\n    dispose() {\r\n      this._stopObserver();\r\n      this.__callBase(\"dispose\");\r\n      this.__manager =\r\n        this.__window =\r\n        this.__root =\r\n        this.__onDblClickWrapped =\r\n          null;\r\n    },\r\n\r\n    /**\r\n     * Call overridden method.\r\n     *\r\n     * @param method {String} Name of the overridden method.\r\n     * @param args {Array} Arguments.\r\n     */\r\n    __callBase(method, args) {\r\n      qx.event.handler.GestureCore.prototype[method].apply(this, args || []);\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n    qx.event.Registration.addListener(window, \"appinitialized\", () => {\r\n      qx.event.Registration.getManager(document).getHandler(statics);\r\n    });\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}