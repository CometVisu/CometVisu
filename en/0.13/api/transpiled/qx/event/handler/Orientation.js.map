{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "constructor",
    "call",
    "__manager",
    "__window",
    "getWindow",
    "_initObserver",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "orientationchange",
    "TARGET_CHECK",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "__nativeEventType",
    "_currentOrientation",
    "__onNativeWrapper",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "bom",
    "Event",
    "supportsEvent",
    "addNativeListener",
    "_stopObserver",
    "removeNativeListener",
    "GlobalError",
    "observeMethod",
    "domEvent",
    "detectOrientationChangeDelay",
    "Environment",
    "get",
    "delay",
    "_onOrientationChange",
    "Viewport",
    "orientation",
    "getOrientation",
    "mode",
    "isLandscape",
    "fireEvent",
    "Orientation",
    "destruct",
    "defer",
    "addHandler",
    "handler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Orientation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tino Butz (tbtz)\r\n\r\n   ======================================================================\r\n\r\n   This class contains code based on the following work:\r\n\r\n   * Unify Project\r\n\r\n     Homepage:\r\n       http://unify-project.org\r\n\r\n     Copyright:\r\n       2009-2010 Deutsche Telekom AG, Germany, http://telekom.com\r\n\r\n     License:\r\n       MIT: http://www.opensource.org/licenses/mit-license.php\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class provides a handler for the orientation event.\r\n *\r\n * NOTE: Instances of this class must be disposed of after use\r\n *\r\n */\r\nqx.Class.define(\"qx.event.handler.Orientation\", {\r\n  extend: qx.core.Object,\r\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param manager {qx.event.Manager} Event manager for the window to use\r\n   */\r\n  construct(manager) {\r\n    super();\r\n\r\n    // Define shorthands\r\n    this.__manager = manager;\r\n    this.__window = manager.getWindow();\r\n    this._initObserver();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      orientationchange: 1\r\n    },\r\n\r\n    /** @type {Integer} Which target check to use */\r\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_WINDOW,\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: true\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __manager: null,\r\n    __window: null,\r\n    __nativeEventType: null,\r\n    _currentOrientation: null,\r\n    __onNativeWrapper: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      OBSERVER INIT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Initializes the native orientation change event listeners.\r\n     */\r\n    _initObserver() {\r\n      this.__onNativeWrapper = qx.lang.Function.listener(this._onNative, this);\r\n\r\n      // Handle orientation change event for Android devices by the resize event.\r\n      // See http://stackoverflow.com/questions/1649086/detect-rotation-of-android-phone-in-the-browser-with-javascript\r\n      // for more information.\r\n      this.__nativeEventType = qx.bom.Event.supportsEvent(\r\n        this.__window,\r\n        \"orientationchange\"\r\n      )\r\n        ? \"orientationchange\"\r\n        : \"resize\";\r\n\r\n      var Event = qx.bom.Event;\r\n      Event.addNativeListener(\r\n        this.__window,\r\n        this.__nativeEventType,\r\n        this.__onNativeWrapper\r\n      );\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      OBSERVER STOP\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Disconnects the native orientation change event listeners.\r\n     */\r\n    _stopObserver() {\r\n      var Event = qx.bom.Event;\r\n      Event.removeNativeListener(\r\n        this.__window,\r\n        this.__nativeEventType,\r\n        this.__onNativeWrapper\r\n      );\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      NATIVE EVENT OBSERVERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Handler for the native orientation change event.\r\n     *\r\n     * @signature function(domEvent)\r\n     * @param domEvent {Event} The touch event from the browser.\r\n     */\r\n    _onNative: qx.event.GlobalError.observeMethod(function (domEvent) {\r\n      var detectOrientationChangeDelay = 0;\r\n\r\n      if (qx.core.Environment.get(\"os.name\") == \"android\") {\r\n        // On Android Devices the detection of orientation mode has to be delayed.\r\n        // See: http://stackoverflow.com/questions/8985805/orientation-change-in-android-using-javascript\r\n        detectOrientationChangeDelay = 300;\r\n      }\r\n\r\n      qx.lang.Function.delay(\r\n        this._onOrientationChange,\r\n        detectOrientationChangeDelay,\r\n        this,\r\n        domEvent\r\n      );\r\n    }),\r\n\r\n    /**\r\n     * Handler for the detection of an orientation change.\r\n     * @param domEvent {Event} The touch event from the browser.\r\n     */\r\n    _onOrientationChange(domEvent) {\r\n      var Viewport = qx.bom.Viewport;\r\n      var orientation = Viewport.getOrientation(domEvent.target);\r\n\r\n      if (this._currentOrientation != orientation) {\r\n        this._currentOrientation = orientation;\r\n        var mode = Viewport.isLandscape(domEvent.target)\r\n          ? \"landscape\"\r\n          : \"portrait\";\r\n        qx.event.Registration.fireEvent(\r\n          this.__window,\r\n          \"orientationchange\",\r\n          qx.event.type.Orientation,\r\n          [orientation, mode]\r\n        );\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._stopObserver();\r\n    this.__manager = this.__window = null;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}