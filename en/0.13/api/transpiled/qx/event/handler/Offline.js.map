{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "constructor",
    "call",
    "__manager",
    "__window",
    "getWindow",
    "_initObserver",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "online",
    "offline",
    "TARGET_CHECK",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "__onNativeWrapper",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "bom",
    "Event",
    "addNativeListener",
    "_stopObserver",
    "removeNativeListener",
    "GlobalError",
    "observeMethod",
    "domEvent",
    "fireEvent",
    "isOnline",
    "navigator",
    "onLine",
    "destruct",
    "handler",
    "Appear",
    "__instances",
    "toHashCode",
    "defer",
    "addHandler",
    "Offline"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Offline.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class provides a handler for the online event.\r\n *\r\n * NOTE: Instances of this class must be disposed of after use\r\n *\r\n */\r\nqx.Class.define(\"qx.event.handler.Offline\", {\r\n  extend: qx.core.Object,\r\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param manager {qx.event.Manager} Event manager for the window to use\r\n   */\r\n  construct(manager) {\r\n    super();\r\n\r\n    this.__manager = manager;\r\n    this.__window = manager.getWindow();\r\n\r\n    this._initObserver();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      online: true,\r\n      offline: true\r\n    },\r\n\r\n    /** @type {Integer} Which target check to use */\r\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_WINDOW,\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: true\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __manager: null,\r\n    __window: null,\r\n    __onNativeWrapper: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {},\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    /**\r\n     * Connects the native online and offline event listeners.\r\n     */\r\n    _initObserver() {\r\n      this.__onNativeWrapper = qx.lang.Function.listener(this._onNative, this);\r\n\r\n      qx.bom.Event.addNativeListener(\r\n        this.__window,\r\n        \"offline\",\r\n        this.__onNativeWrapper\r\n      );\r\n\r\n      qx.bom.Event.addNativeListener(\r\n        this.__window,\r\n        \"online\",\r\n        this.__onNativeWrapper\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Disconnects the native online and offline event listeners.\r\n     */\r\n    _stopObserver() {\r\n      qx.bom.Event.removeNativeListener(\r\n        this.__window,\r\n        \"offline\",\r\n        this.__onNativeWrapper\r\n      );\r\n\r\n      qx.bom.Event.removeNativeListener(\r\n        this.__window,\r\n        \"online\",\r\n        this.__onNativeWrapper\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Native handler function which fires a qooxdoo event.\r\n     * @signature function(domEvent)\r\n     * @param domEvent {Event} Native DOM event\r\n     */\r\n    _onNative: qx.event.GlobalError.observeMethod(function (domEvent) {\r\n      qx.event.Registration.fireEvent(\r\n        this.__window,\r\n        domEvent.type,\r\n        qx.event.type.Event,\r\n        []\r\n      );\r\n    }),\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      USER ACCESS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns whether the current window thinks its online or not.\r\n     * @return {Boolean} <code>true</code> if its online\r\n     */\r\n    isOnline() {\r\n      return !!this.__window.navigator.onLine;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this.__manager = null;\r\n    this._stopObserver();\r\n\r\n    // Deregister\r\n    delete qx.event.handler.Appear.__instances[this.toHashCode()];\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}