{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Offline.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "_initObserver",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "online",
    "offline",
    "TARGET_CHECK",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "__onNativeWrapper",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "bom",
    "Event",
    "addNativeListener",
    "_stopObserver",
    "removeNativeListener",
    "GlobalError",
    "observeMethod",
    "domEvent",
    "fireEvent",
    "isOnline",
    "navigator",
    "onLine",
    "destruct",
    "handler",
    "Appear",
    "__instances",
    "toHashCode",
    "defer",
    "addHandler",
    "Offline"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This class provides a handler for the online event.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.handler.Offline\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    this.__manager = manager;\n    this.__window = manager.getWindow();\n\n    this._initObserver();\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      online : true,\n      offline : true\n    },\n\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_WINDOW,\n\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __manager : null,\n    __window : null,\n    __onNativeWrapper : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    /**\n     * Connects the native online and offline event listeners.\n     */\n    _initObserver : function() {\n      this.__onNativeWrapper = qx.lang.Function.listener(this._onNative, this);\n\n      qx.bom.Event.addNativeListener(this.__window, \"offline\", this.__onNativeWrapper);\n      qx.bom.Event.addNativeListener(this.__window, \"online\", this.__onNativeWrapper);\n    },\n\n\n    /**\n     * Disconnects the native online and offline event listeners.\n     */\n    _stopObserver : function() {\n      qx.bom.Event.removeNativeListener(this.__window, \"offline\", this.__onNativeWrapper);\n      qx.bom.Event.removeNativeListener(this.__window, \"online\", this.__onNativeWrapper);\n    },\n\n\n    /**\n     * Native handler function which fires a qooxdoo event.\n     * @signature function(domEvent)\n     * @param domEvent {Event} Native DOM event\n     */\n    _onNative : qx.event.GlobalError.observeMethod(function(domEvent) {\n      qx.event.Registration.fireEvent(\n          this.__window,\n          domEvent.type,\n          qx.event.type.Event,\n          []\n      );\n    }),\n\n\n    /*\n    ---------------------------------------------------------------------------\n      USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns whether the current window thinks its online or not.\n     * @return {Boolean} <code>true</code> if its online\n     */\n    isOnline : function() {\n      return !!this.__window.navigator.onLine;\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this.__manager = null;\n    this._stopObserver();\n\n    // Deregister\n    delete qx.event.handler.Appear.__instances[this.toHashCode()];\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}