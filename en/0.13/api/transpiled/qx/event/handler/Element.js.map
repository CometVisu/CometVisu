{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Element.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "_manager",
    "_registeredEvents",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "abort",
    "load",
    "scroll",
    "select",
    "reset",
    "submit",
    "CANCELABLE",
    "selectstart",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "tagName",
    "toLowerCase",
    "registerEvent",
    "capture",
    "elementId",
    "ObjectRegistry",
    "toHashCode",
    "eventId",
    "listener",
    "lang",
    "Function",
    "_onNative",
    "bom",
    "Event",
    "addNativeListener",
    "element",
    "unregisterEvent",
    "events",
    "eventData",
    "removeNativeListener",
    "GlobalError",
    "observeMethod",
    "nativeEvent",
    "isCancelable",
    "constructor",
    "fireNonBubblingEvent",
    "Native",
    "undefined",
    "destruct",
    "entry",
    "id",
    "defer",
    "addHandler",
    "handler",
    "Element"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This class supports typical DOM element inline events like scroll,\n * change, select, ...\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.handler.Element\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    this._manager = manager;\n    this._registeredEvents = {};\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      abort : true,    // Image elements\n      load : true, // Image elements\n      scroll : true,\n      select : true,\n      reset : true,    // Form Elements\n      submit : true   // Form Elements\n    },\n\n    /** @type {MAP} Whether the event is cancelable */\n    CANCELABLE :\n    {\n      selectstart: true\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : false\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type)\n    {\n      // Don't handle \"load\" event of Iframe. Unfortunately, both Element and\n      // Iframe handler support \"load\" event. Should be handled by\n      // qx.event.handler.Iframe only. Fixes [#BUG 4587].\n      if (type === \"load\") {\n        return target.tagName.toLowerCase() !== \"iframe\";\n      } else {\n        return true;\n      }\n    },\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture)\n    {\n      var elementId = qx.core.ObjectRegistry.toHashCode(target);\n      var eventId = elementId + \"-\" + type;\n\n      var listener = qx.lang.Function.listener(this._onNative, this, eventId);\n      qx.bom.Event.addNativeListener(target, type, listener);\n\n      this._registeredEvents[eventId] =\n      {\n        element : target,\n        type : type,\n        listener : listener\n      };\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture)\n    {\n      var events = this._registeredEvents;\n      if (!events) {\n        return;\n      }\n\n      var elementId = qx.core.ObjectRegistry.toHashCode(target);\n      var eventId = elementId + \"-\" + type;\n\n      var eventData = this._registeredEvents[eventId];\n      if(eventData) {\n        qx.bom.Event.removeNativeListener(target, type, eventData.listener);\n      }\n\n      delete this._registeredEvents[eventId];\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT-HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Default event handler.\n     *\n     * @signature function(nativeEvent, eventId)\n     * @param nativeEvent {Event} Native event\n     * @param eventId {Integer} ID of the event (as stored internally)\n     */\n    _onNative : qx.event.GlobalError.observeMethod(function(nativeEvent, eventId)\n    {\n      var events = this._registeredEvents;\n      if (!events) {\n        return;\n      }\n\n      var eventData = events[eventId];\n      var isCancelable = this.constructor.CANCELABLE[eventData.type];\n\n      qx.event.Registration.fireNonBubblingEvent(\n        eventData.element, eventData.type,\n        qx.event.type.Native, [nativeEvent, undefined, undefined, undefined, isCancelable]\n      );\n    })\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    var entry;\n    var events = this._registeredEvents;\n\n    for (var id in events)\n    {\n      entry = events[id];\n      qx.bom.Event.removeNativeListener(entry.element, entry.type, entry.listener);\n    }\n\n    this._manager = this._registeredEvents = null;\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}