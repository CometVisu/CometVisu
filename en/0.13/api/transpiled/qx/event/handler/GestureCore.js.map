{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "statics",
    "TYPES",
    "GESTURE_EVENTS",
    "TAP_MAX_DISTANCE",
    "touch",
    "mouse",
    "pen",
    "DOUBLETAP_MAX_DISTANCE",
    "SWIPE_DIRECTION",
    "x",
    "y",
    "LONGTAP_TIME",
    "Environment",
    "get",
    "DOUBLETAP_TIME",
    "ROLL_FACTOR",
    "TOUCHPAD_ROLL_FACTOR",
    "TOUCHPAD_WHEEL_EVENTS_THRESHOLD",
    "TOUCHPAD_WHEEL_EVENTS_PERIOD",
    "TOUCHPAD_WHEEL_EVENTS_TIMEOUT",
    "construct",
    "target",
    "emitter",
    "__defaultTarget",
    "__emitter",
    "__gesture",
    "__lastTap",
    "__stopMomentum",
    "__momentum",
    "__rollEvents",
    "_initObserver",
    "members",
    "__eventName",
    "__primaryTarget",
    "__isMultiPointerGesture",
    "__initialAngle",
    "__rollImpulseId",
    "__initialDistance",
    "__rollEventsCountStart",
    "__rollEventsCount",
    "__touchPadDetectionPerformed",
    "__lastRollEventTime",
    "event",
    "handler",
    "GestureCore",
    "forEach",
    "gestureType",
    "qxWeb",
    "on",
    "checkAndFireGesture",
    "bind",
    "_onDblClick",
    "data",
    "type",
    "_fireRoll",
    "_stopObserver",
    "pointerType",
    "off",
    "domEvent",
    "bom",
    "Event",
    "getTarget",
    "gestureBegin",
    "gestureMove",
    "gestureFinish",
    "gestureCancel",
    "pointerId",
    "__stopLongTapTimer",
    "_hasIntermediaryHandler",
    "startTime",
    "Date",
    "getTime",
    "lastEventTime",
    "startX",
    "clientX",
    "startY",
    "clientY",
    "velocityX",
    "velocityY",
    "isTap",
    "isPrimary",
    "longTapTimer",
    "window",
    "setTimeout",
    "__fireLongTap",
    "__fireTrack",
    "keys",
    "length",
    "_calcAngle",
    "_calcDistance",
    "gesture",
    "oldClientX",
    "oldClientY",
    "__fireRotate",
    "__firePinch",
    "_isBelowTapMaxDistance",
    "$$gestureHandler",
    "parentNode",
    "__handleRollImpulse",
    "_fireEvent",
    "isDblTap",
    "limit",
    "now",
    "time",
    "lastTap",
    "isBelowDoubleTapDistance",
    "__isBelowDoubleTapDistance",
    "getPointerType",
    "isSameTarget",
    "isSameButton",
    "button",
    "swipe",
    "__getSwipeGesture",
    "stopMomentum",
    "id",
    "updateGestureTarget",
    "__P_222_22",
    "deltaX",
    "deltaY",
    "oldTimeoutId",
    "timeoutId",
    "Math",
    "abs",
    "getWindow",
    "startFactor",
    "AnimationFrame",
    "request",
    "lang",
    "Function",
    "round",
    "delta",
    "momentum",
    "pointerA",
    "pointerB",
    "atan2",
    "PI",
    "scale",
    "sqrt",
    "pow",
    "_getDeltaCoordinates",
    "maxDistance",
    "__P_222_23",
    "x1",
    "y1",
    "x2",
    "y2",
    "clazz",
    "inX",
    "inY",
    "axis",
    "evt",
    "dom",
    "Custom",
    "bubbles",
    "angle",
    "dispatchEvent",
    "currentTarget",
    "srcElement",
    "emit",
    "__P_222_24",
    "deltaCoordinates",
    "duration",
    "distance",
    "direction",
    "velocity",
    "__P_222_19",
    "__fireRollEvent",
    "__P_222_25",
    "rollFactor",
    "util",
    "Wheel",
    "getDelta",
    "__performAdaptativeRollScrolling",
    "__P_222_26",
    "IS_TOUCHPAD",
    "reLength",
    "i",
    "__endTouchPadDetection",
    "__P_222_27",
    "_isTouchPadDetectionEnabled",
    "detectionTimeout",
    "Timer",
    "once",
    "push",
    "__P_222_20",
    "__P_222_21",
    "__P_222_18",
    "__P_222_17",
    "clearTimeout",
    "dispose"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/GestureCore.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christopher Zuendorf (czuendorf)\r\n     * Daniel Wagner (danielwagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Listens for (native or synthetic) pointer events and fires events\r\n * for gestures like \"tap\" or \"swipe\"\r\n */\r\nqx.Bootstrap.define(\"qx.event.handler.GestureCore\", {\r\n  extend: Object,\r\n  implement: [qx.core.IDisposable],\r\n\r\n  statics: {\r\n    TYPES: [\r\n      \"tap\",\r\n      \"swipe\",\r\n      \"longtap\",\r\n      \"dbltap\",\r\n      \"track\",\r\n      \"trackstart\",\r\n      \"trackend\",\r\n      \"rotate\",\r\n      \"pinch\",\r\n      \"roll\"\r\n    ],\r\n\r\n    GESTURE_EVENTS: [\r\n      \"gesturebegin\",\r\n      \"gesturefinish\",\r\n      \"gesturemove\",\r\n      \"gesturecancel\"\r\n    ],\r\n\r\n    /** @type {Map} Maximum distance between a pointer-down and pointer-up event, values are configurable */\r\n    TAP_MAX_DISTANCE: { touch: 40, mouse: 5, pen: 20 }, // values are educated guesses\r\n\r\n    /** @type {Map} Maximum distance between two subsequent taps, values are configurable */\r\n    DOUBLETAP_MAX_DISTANCE: { touch: 10, mouse: 4, pen: 10 }, // values are educated guesses\r\n\r\n    /** @type {Map} The direction of a swipe relative to the axis */\r\n    SWIPE_DIRECTION: {\r\n      x: [\"left\", \"right\"],\r\n      y: [\"up\", \"down\"]\r\n    },\r\n\r\n    /**\r\n     * @type {Integer} The time delta in milliseconds to fire a long tap event.\r\n     */\r\n    LONGTAP_TIME: qx.core.Environment.get(\"device.touch\") ? 500 : 99999,\r\n\r\n    /**\r\n     * @type {Integer} Maximum time between two tap events that will still trigger a\r\n     * dbltap event.\r\n     */\r\n    DOUBLETAP_TIME: 500,\r\n\r\n    /**\r\n     * @type {Integer} Factor which is used for adapting the delta of the mouse wheel\r\n     * event to the roll events,\r\n     */\r\n    ROLL_FACTOR: 18,\r\n\r\n    /**\r\n     * @type {Integer} Factor which is used for adapting the delta of the touchpad gesture\r\n     * event to the roll events,\r\n     */\r\n    TOUCHPAD_ROLL_FACTOR: 1,\r\n\r\n    /**\r\n     * @type {Integer} Minimum number of wheel events to receive during the\r\n     * TOUCHPAD_WHEEL_EVENTS_PERIOD to detect a touchpad.\r\n     */\r\n    TOUCHPAD_WHEEL_EVENTS_THRESHOLD: 10,\r\n\r\n    /**\r\n     * @type {Integer} Period (in ms) during which the wheel events are counted in order\r\n     * to detect a touchpad.\r\n     */\r\n    TOUCHPAD_WHEEL_EVENTS_PERIOD: 100,\r\n\r\n    /**\r\n     * @type {Integer} Timeout (in ms) after which the touchpad detection is reset if no wheel\r\n     * events are received in the meantime.\r\n     */\r\n    TOUCHPAD_WHEEL_EVENTS_TIMEOUT: 5000\r\n  },\r\n\r\n  /**\r\n   * @param target {Element} DOM Element that should fire gesture events\r\n   * @param emitter {qx.event.Emitter?} Event emitter (used if dispatchEvent\r\n   * is not supported, e.g. in IE8)\r\n   */\r\n  construct(target, emitter) {\r\n    this.__defaultTarget = target;\r\n    this.__emitter = emitter;\r\n    this.__gesture = {};\r\n    this.__lastTap = {};\r\n    this.__stopMomentum = {};\r\n    this.__momentum = {};\r\n    this.__rollEvents = [];\r\n    this._initObserver();\r\n  },\r\n\r\n  members: {\r\n    __defaultTarget: null,\r\n    __emitter: null,\r\n    __gesture: null,\r\n    __eventName: null,\r\n    __primaryTarget: null,\r\n    __isMultiPointerGesture: null,\r\n    __initialAngle: null,\r\n    __lastTap: null,\r\n    __rollImpulseId: null,\r\n    __stopMomentum: null,\r\n    __initialDistance: null,\r\n    __momentum: null,\r\n    __rollEvents: null,\r\n    __rollEventsCountStart: 0,\r\n    __rollEventsCount: 0,\r\n    __touchPadDetectionPerformed: false,\r\n    __lastRollEventTime: 0,\r\n\r\n    /**\r\n     * Register pointer event listeners\r\n     */\r\n    _initObserver() {\r\n      qx.event.handler.GestureCore.GESTURE_EVENTS.forEach(\r\n        function (gestureType) {\r\n          qxWeb(this.__defaultTarget).on(\r\n            gestureType,\r\n            this.checkAndFireGesture,\r\n            this\r\n          );\r\n        }.bind(this)\r\n      );\r\n\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        qx.core.Environment.get(\"browser.documentmode\") < 9\r\n      ) {\r\n        qxWeb(this.__defaultTarget).on(\"dblclick\", this._onDblClick, this);\r\n      }\r\n\r\n      // list to wheel events\r\n      var data = qx.core.Environment.get(\"event.mousewheel\");\r\n      qxWeb(data.target).on(data.type, this._fireRoll, this);\r\n    },\r\n\r\n    /**\r\n     * Remove native pointer event listeners.\r\n     */\r\n    _stopObserver() {\r\n      qx.event.handler.GestureCore.GESTURE_EVENTS.forEach(\r\n        function (pointerType) {\r\n          qxWeb(this.__defaultTarget).off(\r\n            pointerType,\r\n            this.checkAndFireGesture,\r\n            this\r\n          );\r\n        }.bind(this)\r\n      );\r\n\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        qx.core.Environment.get(\"browser.documentmode\") < 9\r\n      ) {\r\n        qxWeb(this.__defaultTarget).off(\"dblclick\", this._onDblClick, this);\r\n      }\r\n\r\n      var data = qx.core.Environment.get(\"event.mousewheel\");\r\n      qxWeb(data.target).off(data.type, this._fireRoll, this);\r\n    },\r\n\r\n    /**\r\n     * Checks if a gesture was made and fires the gesture event.\r\n     *\r\n     * @param domEvent {qx.event.type.Pointer} DOM event\r\n     * @param type {String ? null} type of the event\r\n     * @param target {Element ? null} event target\r\n     */\r\n    checkAndFireGesture(domEvent, type, target) {\r\n      if (!type) {\r\n        type = domEvent.type;\r\n      }\r\n\r\n      if (!target) {\r\n        target = qx.bom.Event.getTarget(domEvent);\r\n      }\r\n\r\n      if (type == \"gesturebegin\") {\r\n        this.gestureBegin(domEvent, target);\r\n      } else if (type == \"gesturemove\") {\r\n        this.gestureMove(domEvent, target);\r\n      } else if (type == \"gesturefinish\") {\r\n        this.gestureFinish(domEvent, target);\r\n      } else if (type == \"gesturecancel\") {\r\n        this.gestureCancel(domEvent.pointerId);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper method for gesture start.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     */\r\n    gestureBegin(domEvent, target) {\r\n      if (this.__gesture[domEvent.pointerId]) {\r\n        this.__stopLongTapTimer(this.__gesture[domEvent.pointerId]);\r\n        delete this.__gesture[domEvent.pointerId];\r\n      }\r\n\r\n      /*\r\n        If the dom event's target or one of its ancestors have\r\n        a gesture handler, we don't need to fire the gesture again\r\n        since it bubbles.\r\n       */\r\n      if (this._hasIntermediaryHandler(target)) {\r\n        return;\r\n      }\r\n\r\n      this.__gesture[domEvent.pointerId] = {\r\n        startTime: new Date().getTime(),\r\n        lastEventTime: new Date().getTime(),\r\n        startX: domEvent.clientX,\r\n        startY: domEvent.clientY,\r\n        clientX: domEvent.clientX,\r\n        clientY: domEvent.clientY,\r\n        velocityX: 0,\r\n        velocityY: 0,\r\n        target: target,\r\n        isTap: true,\r\n        isPrimary: domEvent.isPrimary,\r\n        longTapTimer: window.setTimeout(\r\n          this.__fireLongTap.bind(this, domEvent, target),\r\n          qx.event.handler.GestureCore.LONGTAP_TIME\r\n        )\r\n      };\r\n\r\n      if (domEvent.isPrimary) {\r\n        this.__isMultiPointerGesture = false;\r\n        this.__primaryTarget = target;\r\n        this.__fireTrack(\"trackstart\", domEvent, target);\r\n      } else {\r\n        this.__isMultiPointerGesture = true;\r\n        if (Object.keys(this.__gesture).length === 2) {\r\n          this.__initialAngle = this._calcAngle();\r\n          this.__initialDistance = this._calcDistance();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper method for gesture move.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     */\r\n    gestureMove(domEvent, target) {\r\n      var gesture = this.__gesture[domEvent.pointerId];\r\n\r\n      if (gesture) {\r\n        var oldClientX = gesture.clientX;\r\n        var oldClientY = gesture.clientY;\r\n\r\n        gesture.clientX = domEvent.clientX;\r\n        gesture.clientY = domEvent.clientY;\r\n        gesture.lastEventTime = new Date().getTime();\r\n\r\n        if (oldClientX) {\r\n          gesture.velocityX = gesture.clientX - oldClientX;\r\n        }\r\n        if (oldClientY) {\r\n          gesture.velocityY = gesture.clientY - oldClientY;\r\n        }\r\n\r\n        if (Object.keys(this.__gesture).length === 2) {\r\n          this.__fireRotate(domEvent, gesture.target);\r\n          this.__firePinch(domEvent, gesture.target);\r\n        }\r\n\r\n        if (!this.__isMultiPointerGesture) {\r\n          this.__fireTrack(\"track\", domEvent, gesture.target);\r\n          this._fireRoll(domEvent, \"touch\", gesture.target);\r\n        }\r\n\r\n        // abort long tap timer if the distance is too big\r\n        if (gesture.isTap) {\r\n          gesture.isTap = this._isBelowTapMaxDistance(domEvent);\r\n          if (!gesture.isTap) {\r\n            this.__stopLongTapTimer(gesture);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if a DOM element located between the target of a gesture\r\n     * event and the element this handler is attached to has a gesture\r\n     * handler of its own.\r\n     *\r\n     * @param target {Element} The gesture event's target\r\n     * @return {Boolean}\r\n     */\r\n    _hasIntermediaryHandler(target) {\r\n      while (target && target !== this.__defaultTarget) {\r\n        if (target.$$gestureHandler) {\r\n          return true;\r\n        }\r\n        target = target.parentNode;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Helper method for gesture end.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     */\r\n    gestureFinish(domEvent, target) {\r\n      // If no start position is available for this pointerup event, cancel gesture recognition.\r\n      if (!this.__gesture[domEvent.pointerId]) {\r\n        return;\r\n      }\r\n\r\n      var gesture = this.__gesture[domEvent.pointerId];\r\n      // delete the long tap\r\n      this.__stopLongTapTimer(gesture);\r\n\r\n      /*\r\n        If the dom event's target or one of its ancestors have\r\n        a gesture handler, we don't need to fire the gesture again\r\n        since it bubbles.\r\n       */\r\n      if (this._hasIntermediaryHandler(target)) {\r\n        return;\r\n      }\r\n\r\n      // always start the roll impulse on the original target\r\n      this.__handleRollImpulse(\r\n        gesture.velocityX,\r\n        gesture.velocityY,\r\n        domEvent,\r\n        gesture.target\r\n      );\r\n\r\n      this.__fireTrack(\"trackend\", domEvent, gesture.target);\r\n\r\n      if (gesture.isTap) {\r\n        if (target !== gesture.target) {\r\n          delete this.__gesture[domEvent.pointerId];\r\n          return;\r\n        }\r\n\r\n        this._fireEvent(domEvent, \"tap\", domEvent.target || target);\r\n\r\n        var isDblTap = false;\r\n        if (Object.keys(this.__lastTap).length > 0) {\r\n          // delete old tap entries\r\n          var limit = Date.now() - qx.event.handler.GestureCore.DOUBLETAP_TIME;\r\n          for (var time in this.__lastTap) {\r\n            if (time < limit) {\r\n              delete this.__lastTap[time];\r\n            } else {\r\n              var lastTap = this.__lastTap[time];\r\n              var isBelowDoubleTapDistance = this.__isBelowDoubleTapDistance(\r\n                lastTap.x,\r\n                lastTap.y,\r\n                domEvent.clientX,\r\n                domEvent.clientY,\r\n                domEvent.getPointerType()\r\n              );\r\n\r\n              var isSameTarget = lastTap.target === (domEvent.target || target);\r\n              var isSameButton = lastTap.button === domEvent.button;\r\n\r\n              if (isBelowDoubleTapDistance && isSameButton && isSameTarget) {\r\n                isDblTap = true;\r\n                delete this.__lastTap[time];\r\n                this._fireEvent(domEvent, \"dbltap\", domEvent.target || target);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!isDblTap) {\r\n          this.__lastTap[Date.now()] = {\r\n            x: domEvent.clientX,\r\n            y: domEvent.clientY,\r\n            target: domEvent.target || target,\r\n            button: domEvent.button\r\n          };\r\n        }\r\n      } else if (!this._isBelowTapMaxDistance(domEvent)) {\r\n        var swipe = this.__getSwipeGesture(domEvent, target);\r\n        if (swipe) {\r\n          domEvent.swipe = swipe;\r\n          this._fireEvent(domEvent, \"swipe\", gesture.target || target);\r\n        }\r\n      }\r\n\r\n      delete this.__gesture[domEvent.pointerId];\r\n    },\r\n\r\n    /**\r\n     * Stops the momentum scrolling currently running.\r\n     *\r\n     * @param id {Integer} The timeoutId of a 'roll' event\r\n     */\r\n    stopMomentum(id) {\r\n      this.__stopMomentum[id] = true;\r\n    },\r\n\r\n    /**\r\n     * Cancels the gesture if running.\r\n     * @param id {Number} The pointer Id.\r\n     */\r\n    gestureCancel(id) {\r\n      if (this.__gesture[id]) {\r\n        this.__stopLongTapTimer(this.__gesture[id]);\r\n        delete this.__gesture[id];\r\n      }\r\n      if (this.__momentum[id]) {\r\n        this.stopMomentum(this.__momentum[id]);\r\n        delete this.__momentum[id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update the target of a running gesture. This is used in virtual widgets\r\n     * when the DOM element changes.\r\n     *\r\n     * @param id {String} The pointer id.\r\n     * @param target {Element} The new target element.\r\n     * @internal\r\n     */\r\n    updateGestureTarget(id, target) {\r\n      this.__gesture[id].target = target;\r\n    },\r\n\r\n    /**\r\n     * Method which will be called recursively to provide a momentum scrolling.\r\n     * @param deltaX {Number} The last offset in X direction\r\n     * @param deltaY {Number} The last offset in Y direction\r\n     * @param domEvent {Event} The original gesture event\r\n     * @param target {Element} The target of the momentum roll events\r\n     * @param time {Number ?} The time in ms between the last two calls\r\n     */\r\n    __handleRollImpulse(deltaX, deltaY, domEvent, target, time) {\r\n      var oldTimeoutId = domEvent.timeoutId;\r\n      if (!time && this.__momentum[domEvent.pointerId]) {\r\n        // new roll impulse started, stop the old one\r\n        this.stopMomentum(this.__momentum[domEvent.pointerId]);\r\n      }\r\n      // do nothing if we don't need to scroll\r\n      if (\r\n        (Math.abs(deltaY) < 1 && Math.abs(deltaX) < 1) ||\r\n        this.__stopMomentum[oldTimeoutId] ||\r\n        (this.getWindow && !this.getWindow())\r\n      ) {\r\n        delete this.__stopMomentum[oldTimeoutId];\r\n        delete this.__momentum[domEvent.pointerId];\r\n        return;\r\n      }\r\n\r\n      if (!time) {\r\n        time = 1;\r\n        var startFactor = 2.8;\r\n        deltaY = deltaY / startFactor;\r\n        deltaX = deltaX / startFactor;\r\n      }\r\n      time += 0.0006;\r\n\r\n      deltaY = deltaY / time;\r\n      deltaX = deltaX / time;\r\n\r\n      // set up a new timer with the new delta\r\n      var timeoutId = qx.bom.AnimationFrame.request(\r\n        qx.lang.Function.bind(\r\n          function (deltaX, deltaY, domEvent, target, time) {\r\n            this.__handleRollImpulse(deltaX, deltaY, domEvent, target, time);\r\n          },\r\n          this,\r\n          deltaX,\r\n          deltaY,\r\n          domEvent,\r\n          target,\r\n          time\r\n        )\r\n      );\r\n\r\n      deltaX = Math.round(deltaX * 100) / 100;\r\n      deltaY = Math.round(deltaY * 100) / 100;\r\n\r\n      // scroll the desired new delta\r\n      domEvent.delta = {\r\n        x: -deltaX,\r\n        y: -deltaY\r\n      };\r\n\r\n      domEvent.momentum = true;\r\n      domEvent.timeoutId = timeoutId;\r\n      this.__momentum[domEvent.pointerId] = timeoutId;\r\n      this._fireEvent(domEvent, \"roll\", domEvent.target || target);\r\n    },\r\n\r\n    /**\r\n     * Calculates the angle of the primary and secondary pointer.\r\n     * @return {Number} the rotation angle of the 2 pointers.\r\n     */\r\n    _calcAngle() {\r\n      var pointerA = null;\r\n      var pointerB = null;\r\n\r\n      for (var pointerId in this.__gesture) {\r\n        var gesture = this.__gesture[pointerId];\r\n        if (pointerA === null) {\r\n          pointerA = gesture;\r\n        } else {\r\n          pointerB = gesture;\r\n        }\r\n      }\r\n\r\n      var x = pointerA.clientX - pointerB.clientX;\r\n      var y = pointerA.clientY - pointerB.clientY;\r\n\r\n      return (360 + Math.atan2(y, x) * (180 / Math.PI)) % 360;\r\n    },\r\n\r\n    /**\r\n     * Calculates the scaling distance between two pointers.\r\n     * @return {Number} the calculated distance.\r\n     */\r\n    _calcDistance() {\r\n      var pointerA = null;\r\n      var pointerB = null;\r\n\r\n      for (var pointerId in this.__gesture) {\r\n        var gesture = this.__gesture[pointerId];\r\n        if (pointerA === null) {\r\n          pointerA = gesture;\r\n        } else {\r\n          pointerB = gesture;\r\n        }\r\n      }\r\n\r\n      var scale = Math.sqrt(\r\n        Math.pow(pointerA.clientX - pointerB.clientX, 2) +\r\n          Math.pow(pointerA.clientY - pointerB.clientY, 2)\r\n      );\r\n\r\n      return scale;\r\n    },\r\n\r\n    /**\r\n     * Checks if the distance between the x/y coordinates of DOM event\r\n     * exceeds TAP_MAX_DISTANCE and returns the result.\r\n     *\r\n     * @param domEvent {Event} The DOM event from the browser.\r\n     * @return {Boolean|null} true if distance is below TAP_MAX_DISTANCE.\r\n     */\r\n    _isBelowTapMaxDistance(domEvent) {\r\n      var delta = this._getDeltaCoordinates(domEvent);\r\n      var maxDistance =\r\n        qx.event.handler.GestureCore.TAP_MAX_DISTANCE[\r\n          domEvent.getPointerType()\r\n        ];\r\n\r\n      if (!delta) {\r\n        return null;\r\n      }\r\n\r\n      return (\r\n        Math.abs(delta.x) <= maxDistance && Math.abs(delta.y) <= maxDistance\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Checks if the distance between the x1/y1 and x2/y2 is\r\n     * below the TAP_MAX_DISTANCE and returns the result.\r\n     *\r\n     * @param x1 {Number} The x position of point one.\r\n     * @param y1 {Number} The y position of point one.\r\n     * @param x2 {Number} The x position of point two.\r\n     * @param y2 {Number} The y position of point two.\r\n     * @param type {String} The pointer type e.g. \"mouse\"\r\n     * @return {Boolean} <code>true</code>, if points are in range\r\n     */\r\n    __isBelowDoubleTapDistance(x1, y1, x2, y2, type) {\r\n      var clazz = qx.event.handler.GestureCore;\r\n\r\n      var inX = Math.abs(x1 - x2) < clazz.DOUBLETAP_MAX_DISTANCE[type];\r\n      var inY = Math.abs(y1 - y2) < clazz.DOUBLETAP_MAX_DISTANCE[type];\r\n\r\n      return inX && inY;\r\n    },\r\n\r\n    /**\r\n     * Calculates the delta coordinates in relation to the position on <code>pointerstart</code> event.\r\n     * @param domEvent {Event} The DOM event from the browser.\r\n     * @return {Map} containing the deltaX as x, and deltaY as y.\r\n     */\r\n    _getDeltaCoordinates(domEvent) {\r\n      var gesture = this.__gesture[domEvent.pointerId];\r\n      if (!gesture) {\r\n        return null;\r\n      }\r\n\r\n      var deltaX = domEvent.clientX - gesture.startX;\r\n      var deltaY = domEvent.clientY - gesture.startY;\r\n\r\n      var axis = \"x\";\r\n      if (Math.abs(deltaX / deltaY) < 1) {\r\n        axis = \"y\";\r\n      }\r\n\r\n      return {\r\n        x: deltaX,\r\n        y: deltaY,\r\n        axis: axis\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Fire a gesture event with the given parameters\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param type {String} type of the event\r\n     * @param target {Element ? null} event target\r\n     * @return {qx.Promise?} a promise, if one or more of the event handlers returned a promise\r\n     */\r\n    _fireEvent(domEvent, type, target) {\r\n      // The target may have been removed, e.g. menu hide on tap\r\n      if (!this.__defaultTarget) {\r\n        return;\r\n      }\r\n      var evt;\r\n      if (qx.core.Environment.get(\"event.dispatchevent\")) {\r\n        evt = new qx.event.type.dom.Custom(type, domEvent, {\r\n          bubbles: true,\r\n          swipe: domEvent.swipe,\r\n          scale: domEvent.scale,\r\n          angle: domEvent.angle,\r\n          delta: domEvent.delta,\r\n          pointerType: domEvent.pointerType,\r\n          momentum: domEvent.momentum\r\n        });\r\n\r\n        return target.dispatchEvent(evt);\r\n      } else if (this.__emitter) {\r\n        evt = new qx.event.type.dom.Custom(type, domEvent, {\r\n          target: this.__defaultTarget,\r\n          currentTarget: this.__defaultTarget,\r\n          srcElement: this.__defaultTarget,\r\n          swipe: domEvent.swipe,\r\n          scale: domEvent.scale,\r\n          angle: domEvent.angle,\r\n          delta: domEvent.delta,\r\n          pointerType: domEvent.pointerType,\r\n          momentum: domEvent.momentum\r\n        });\r\n\r\n        this.__emitter.emit(type, domEvent);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fire \"tap\" and \"dbltap\" events after a native \"dblclick\"\r\n     * event to fix IE 8's broken mouse event sequence.\r\n     *\r\n     * @param domEvent {Event} dblclick event\r\n     */\r\n    _onDblClick(domEvent) {\r\n      var target = qx.bom.Event.getTarget(domEvent);\r\n      this._fireEvent(domEvent, \"tap\", target);\r\n      this._fireEvent(domEvent, \"dbltap\", target);\r\n    },\r\n\r\n    /**\r\n     * Returns the swipe gesture when the user performed a swipe.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     * @return {Map|null} returns the swipe data when the user performed a swipe, null if the gesture was no swipe.\r\n     */\r\n    __getSwipeGesture(domEvent, target) {\r\n      var gesture = this.__gesture[domEvent.pointerId];\r\n      if (!gesture) {\r\n        return null;\r\n      }\r\n\r\n      var clazz = qx.event.handler.GestureCore;\r\n      var deltaCoordinates = this._getDeltaCoordinates(domEvent);\r\n      var duration = new Date().getTime() - gesture.startTime;\r\n      var axis =\r\n        Math.abs(deltaCoordinates.x) >= Math.abs(deltaCoordinates.y)\r\n          ? \"x\"\r\n          : \"y\";\r\n      var distance = deltaCoordinates[axis];\r\n      var direction = clazz.SWIPE_DIRECTION[axis][distance < 0 ? 0 : 1];\r\n      var velocity = duration !== 0 ? distance / duration : 0;\r\n\r\n      var swipe = {\r\n        startTime: gesture.startTime,\r\n        duration: duration,\r\n        axis: axis,\r\n        direction: direction,\r\n        distance: distance,\r\n        velocity: velocity\r\n      };\r\n\r\n      return swipe;\r\n    },\r\n\r\n    /**\r\n     * Fires a track event.\r\n     *\r\n     * @param type {String} the track type\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     */\r\n    __fireTrack(type, domEvent, target) {\r\n      domEvent.delta = this._getDeltaCoordinates(domEvent);\r\n      this._fireEvent(domEvent, type, domEvent.target || target);\r\n    },\r\n\r\n    /**\r\n     * Fires a roll event.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     * @param rollFactor {Integer} the roll factor to apply\r\n     */\r\n    __fireRollEvent(domEvent, target, rollFactor) {\r\n      domEvent.delta = {\r\n        x: qx.util.Wheel.getDelta(domEvent, \"x\") * rollFactor,\r\n        y: qx.util.Wheel.getDelta(domEvent, \"y\") * rollFactor\r\n      };\r\n\r\n      domEvent.delta.axis =\r\n        Math.abs(domEvent.delta.x / domEvent.delta.y) < 1 ? \"y\" : \"x\";\r\n      domEvent.pointerType = \"wheel\";\r\n      this._fireEvent(domEvent, \"roll\", domEvent.target || target);\r\n    },\r\n\r\n    /**\r\n     * Triggers the adaptative roll scrolling.\r\n     *\r\n     * @param target {Element} event target\r\n     */\r\n    __performAdaptativeRollScrolling(target) {\r\n      var rollFactor = qx.event.handler.GestureCore.ROLL_FACTOR;\r\n      if (qx.util.Wheel.IS_TOUCHPAD) {\r\n        // The domEvent was generated by a touchpad\r\n        rollFactor = qx.event.handler.GestureCore.TOUCHPAD_ROLL_FACTOR;\r\n      }\r\n      this.__lastRollEventTime = new Date().getTime();\r\n      var reLength = this.__rollEvents.length;\r\n      for (var i = 0; i < reLength; i++) {\r\n        var domEvent = this.__rollEvents[i];\r\n        this.__fireRollEvent(domEvent, target, rollFactor);\r\n      }\r\n      this.__rollEvents = [];\r\n    },\r\n\r\n    /**\r\n     * Ends touch pad detection process.\r\n     */\r\n    __endTouchPadDetection() {\r\n      if (\r\n        this.__rollEvents.length >\r\n        qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_THRESHOLD\r\n      ) {\r\n        qx.util.Wheel.IS_TOUCHPAD = true;\r\n      } else {\r\n        qx.util.Wheel.IS_TOUCHPAD = false;\r\n      }\r\n      if (qx.core.Environment.get(\"qx.debug.touchpad.detection\")) {\r\n        qx.log.Logger.debug(this, \"IS_TOUCHPAD : \" + qx.util.Wheel.IS_TOUCHPAD);\r\n      }\r\n      this.__touchPadDetectionPerformed = true;\r\n    },\r\n\r\n    /**\r\n     * Is touchpad detection enabled ? Default implementation activates it only for Mac OS after Sierra (>= 10.12).\r\n     * @return {boolean} true if touchpad detection should occur.\r\n     * @internal\r\n     */\r\n    _isTouchPadDetectionEnabled() {\r\n      return (\r\n        qx.core.Environment.get(\"os.name\") == \"osx\" &&\r\n        qx.core.Environment.get(\"os.version\") >= 10.12\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Fires a roll event after determining the roll factor to apply. Mac OS Sierra (10.12+)\r\n     * introduces a lot more wheel events fired from the trackpad, so the roll factor to be applied\r\n     * has to be reduced in order to make the scrolling less sensitive.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param type {String} The type of the dom event\r\n     * @param target {Element} event target\r\n     */\r\n    _fireRoll(domEvent, type, target) {\r\n      var now;\r\n      var detectionTimeout;\r\n      if (domEvent.type === qx.core.Environment.get(\"event.mousewheel\").type) {\r\n        if (this._isTouchPadDetectionEnabled()) {\r\n          now = new Date().getTime();\r\n          detectionTimeout =\r\n            qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_TIMEOUT;\r\n          if (\r\n            this.__lastRollEventTime > 0 &&\r\n            now - this.__lastRollEventTime > detectionTimeout\r\n          ) {\r\n            // The detection timeout was reached. A new detection step should occur.\r\n            this.__touchPadDetectionPerformed = false;\r\n            this.__rollEvents = [];\r\n            this.__lastRollEventTime = 0;\r\n          }\r\n          if (!this.__touchPadDetectionPerformed) {\r\n            // We are into a detection session. We count the events so that we can decide if\r\n            // they were fired by a real mouse wheel or a touchpad. Just swallow them until the\r\n            // detection period is over.\r\n            if (this.__rollEvents.length === 0) {\r\n              // detection starts\r\n              this.__rollEventsCountStart = now;\r\n              qx.event.Timer.once(\r\n                function () {\r\n                  if (!this.__touchPadDetectionPerformed) {\r\n                    // There were not enough events during the TOUCHPAD_WHEEL_EVENTS_PERIOD to actually\r\n                    // trigger a scrolling. Trigger it manually.\r\n                    this.__endTouchPadDetection();\r\n                    this.__performAdaptativeRollScrolling(target);\r\n                  }\r\n                },\r\n                this,\r\n                qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_PERIOD + 50\r\n              );\r\n            }\r\n            this.__rollEvents.push(domEvent);\r\n            this.__rollEventsCount++;\r\n            if (\r\n              now - this.__rollEventsCountStart >\r\n              qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_PERIOD\r\n            ) {\r\n              this.__endTouchPadDetection();\r\n            }\r\n          }\r\n          if (this.__touchPadDetectionPerformed) {\r\n            if (this.__rollEvents.length === 0) {\r\n              this.__rollEvents.push(domEvent);\r\n            }\r\n            // Detection is done. We can now decide the roll factor to apply to the delta.\r\n            // Default to a real mouse wheel event as opposed to a touchpad one.\r\n            this.__performAdaptativeRollScrolling(target);\r\n          }\r\n        } else {\r\n          this.__fireRollEvent(\r\n            domEvent,\r\n            target,\r\n            qx.event.handler.GestureCore.ROLL_FACTOR\r\n          );\r\n        }\r\n      } else {\r\n        var gesture = this.__gesture[domEvent.pointerId];\r\n        domEvent.delta = {\r\n          x: -gesture.velocityX,\r\n          y: -gesture.velocityY,\r\n          axis: Math.abs(gesture.velocityX / gesture.velocityY) < 1 ? \"y\" : \"x\"\r\n        };\r\n\r\n        this._fireEvent(domEvent, \"roll\", domEvent.target || target);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fires a rotate event.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     */\r\n    __fireRotate(domEvent, target) {\r\n      if (!domEvent.isPrimary) {\r\n        var angle = this._calcAngle();\r\n        domEvent.angle = Math.round((angle - this.__initialAngle) % 360);\r\n        this._fireEvent(domEvent, \"rotate\", this.__primaryTarget);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fires a pinch event.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     */\r\n    __firePinch(domEvent, target) {\r\n      if (!domEvent.isPrimary) {\r\n        var distance = this._calcDistance();\r\n        var scale = distance / this.__initialDistance;\r\n        domEvent.scale = Math.round(scale * 100) / 100;\r\n        this._fireEvent(domEvent, \"pinch\", this.__primaryTarget);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fires the long tap event.\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param target {Element} event target\r\n     */\r\n    __fireLongTap(domEvent, target) {\r\n      var gesture = this.__gesture[domEvent.pointerId];\r\n      if (gesture) {\r\n        this._fireEvent(domEvent, \"longtap\", domEvent.target || target);\r\n        gesture.longTapTimer = null;\r\n        gesture.isTap = false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Stops the time for the long tap event.\r\n     * @param gesture {Map} Data may representing the gesture.\r\n     */\r\n    __stopLongTapTimer(gesture) {\r\n      if (gesture.longTapTimer) {\r\n        window.clearTimeout(gesture.longTapTimer);\r\n        gesture.longTapTimer = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Dispose the current instance\r\n     */\r\n    dispose() {\r\n      for (var gesture in this.__gesture) {\r\n        this.__stopLongTapTimer(gesture);\r\n      }\r\n\r\n      this._stopObserver();\r\n      this.__defaultTarget = this.__emitter = null;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}