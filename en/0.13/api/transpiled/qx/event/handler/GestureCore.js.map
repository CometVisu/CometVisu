{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "statics",
    "TYPES",
    "GESTURE_EVENTS",
    "TAP_MAX_DISTANCE",
    "touch",
    "mouse",
    "pen",
    "DOUBLETAP_MAX_DISTANCE",
    "SWIPE_DIRECTION",
    "x",
    "y",
    "LONGTAP_TIME",
    "Environment",
    "get",
    "DOUBLETAP_TIME",
    "ROLL_FACTOR",
    "TOUCHPAD_ROLL_FACTOR",
    "TOUCHPAD_WHEEL_EVENTS_THRESHOLD",
    "TOUCHPAD_WHEEL_EVENTS_PERIOD",
    "TOUCHPAD_WHEEL_EVENTS_TIMEOUT",
    "construct",
    "target",
    "emitter",
    "__defaultTarget",
    "__emitter",
    "__gesture",
    "__lastTap",
    "__stopMomentum",
    "__momentum",
    "__rollEvents",
    "_initObserver",
    "members",
    "__eventName",
    "__primaryTarget",
    "__isMultiPointerGesture",
    "__initialAngle",
    "__rollImpulseId",
    "__initialDistance",
    "__rollEventsCountStart",
    "__rollEventsCount",
    "__touchPadDetectionPerformed",
    "__lastRollEventTime",
    "event",
    "handler",
    "GestureCore",
    "forEach",
    "gestureType",
    "qxWeb",
    "on",
    "checkAndFireGesture",
    "bind",
    "_onDblClick",
    "data",
    "type",
    "_fireRoll",
    "_stopObserver",
    "pointerType",
    "off",
    "domEvent",
    "bom",
    "Event",
    "getTarget",
    "gestureBegin",
    "gestureMove",
    "gestureFinish",
    "gestureCancel",
    "pointerId",
    "__stopLongTapTimer",
    "_hasIntermediaryHandler",
    "startTime",
    "Date",
    "getTime",
    "lastEventTime",
    "startX",
    "clientX",
    "startY",
    "clientY",
    "velocityX",
    "velocityY",
    "isTap",
    "isPrimary",
    "longTapTimer",
    "window",
    "setTimeout",
    "__fireLongTap",
    "__fireTrack",
    "keys",
    "length",
    "_calcAngle",
    "_calcDistance",
    "gesture",
    "oldClientX",
    "oldClientY",
    "__fireRotate",
    "__firePinch",
    "_isBelowTapMaxDistance",
    "$$gestureHandler",
    "parentNode",
    "__handleRollImpulse",
    "_fireEvent",
    "isDblTap",
    "limit",
    "now",
    "time",
    "lastTap",
    "isBelowDoubleTapDistance",
    "__isBelowDoubleTapDistance",
    "getPointerType",
    "isSameTarget",
    "isSameButton",
    "button",
    "swipe",
    "__getSwipeGesture",
    "stopMomentum",
    "id",
    "updateGestureTarget",
    "deltaX",
    "deltaY",
    "oldTimeoutId",
    "timeoutId",
    "Math",
    "abs",
    "getWindow",
    "startFactor",
    "AnimationFrame",
    "request",
    "lang",
    "Function",
    "round",
    "delta",
    "momentum",
    "pointerA",
    "pointerB",
    "atan2",
    "PI",
    "scale",
    "sqrt",
    "pow",
    "_getDeltaCoordinates",
    "maxDistance",
    "x1",
    "y1",
    "x2",
    "y2",
    "clazz",
    "inX",
    "inY",
    "axis",
    "evt",
    "dom",
    "Custom",
    "bubbles",
    "angle",
    "dispatchEvent",
    "currentTarget",
    "srcElement",
    "emit",
    "deltaCoordinates",
    "duration",
    "distance",
    "direction",
    "velocity",
    "__fireRollEvent",
    "rollFactor",
    "util",
    "Wheel",
    "getDelta",
    "__performAdaptativeRollScrolling",
    "IS_TOUCHPAD",
    "reLength",
    "i",
    "__endTouchPadDetection",
    "_isTouchPadDetectionEnabled",
    "detectionTimeout",
    "Timer",
    "once",
    "push",
    "clearTimeout",
    "dispose"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/GestureCore.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Listens for (native or synthetic) pointer events and fires events\n * for gestures like \"tap\" or \"swipe\"\n */\nqx.Bootstrap.define(\"qx.event.handler.GestureCore\", {\n  extend: Object,\n  implement: [qx.core.IDisposable],\n\n  statics: {\n    TYPES: [\n      \"tap\",\n      \"swipe\",\n      \"longtap\",\n      \"dbltap\",\n      \"track\",\n      \"trackstart\",\n      \"trackend\",\n      \"rotate\",\n      \"pinch\",\n      \"roll\"\n    ],\n\n    GESTURE_EVENTS: [\n      \"gesturebegin\",\n      \"gesturefinish\",\n      \"gesturemove\",\n      \"gesturecancel\"\n    ],\n\n    /** @type {Map} Maximum distance between a pointer-down and pointer-up event, values are configurable */\n    TAP_MAX_DISTANCE: { touch: 40, mouse: 5, pen: 20 }, // values are educated guesses\n\n    /** @type {Map} Maximum distance between two subsequent taps, values are configurable */\n    DOUBLETAP_MAX_DISTANCE: { touch: 10, mouse: 4, pen: 10 }, // values are educated guesses\n\n    /** @type {Map} The direction of a swipe relative to the axis */\n    SWIPE_DIRECTION: {\n      x: [\"left\", \"right\"],\n      y: [\"up\", \"down\"]\n    },\n\n    /**\n     * @type {Integer} The time delta in milliseconds to fire a long tap event.\n     */\n    LONGTAP_TIME: qx.core.Environment.get(\"device.touch\") ? 500 : 99999,\n\n    /**\n     * @type {Integer} Maximum time between two tap events that will still trigger a\n     * dbltap event.\n     */\n    DOUBLETAP_TIME: 500,\n\n    /**\n     * @type {Integer} Factor which is used for adapting the delta of the mouse wheel\n     * event to the roll events,\n     */\n    ROLL_FACTOR: 18,\n\n    /**\n     * @type {Integer} Factor which is used for adapting the delta of the touchpad gesture\n     * event to the roll events,\n     */\n    TOUCHPAD_ROLL_FACTOR: 1,\n\n    /**\n     * @type {Integer} Minimum number of wheel events to receive during the\n     * TOUCHPAD_WHEEL_EVENTS_PERIOD to detect a touchpad.\n     */\n    TOUCHPAD_WHEEL_EVENTS_THRESHOLD: 10,\n\n    /**\n     * @type {Integer} Period (in ms) during which the wheel events are counted in order\n     * to detect a touchpad.\n     */\n    TOUCHPAD_WHEEL_EVENTS_PERIOD: 100,\n\n    /**\n     * @type {Integer} Timeout (in ms) after which the touchpad detection is reset if no wheel\n     * events are received in the meantime.\n     */\n    TOUCHPAD_WHEEL_EVENTS_TIMEOUT: 5000\n  },\n\n  /**\n   * @param target {Element} DOM Element that should fire gesture events\n   * @param emitter {qx.event.Emitter?} Event emitter (used if dispatchEvent\n   * is not supported, e.g. in IE8)\n   */\n  construct(target, emitter) {\n    this.__defaultTarget = target;\n    this.__emitter = emitter;\n    this.__gesture = {};\n    this.__lastTap = {};\n    this.__stopMomentum = {};\n    this.__momentum = {};\n    this.__rollEvents = [];\n    this._initObserver();\n  },\n\n  members: {\n    __defaultTarget: null,\n    __emitter: null,\n    __gesture: null,\n    __eventName: null,\n    __primaryTarget: null,\n    __isMultiPointerGesture: null,\n    __initialAngle: null,\n    __lastTap: null,\n    __rollImpulseId: null,\n    __stopMomentum: null,\n    __initialDistance: null,\n    __momentum: null,\n    __rollEvents: null,\n    __rollEventsCountStart: 0,\n    __rollEventsCount: 0,\n    __touchPadDetectionPerformed: false,\n    __lastRollEventTime: 0,\n\n    /**\n     * Register pointer event listeners\n     */\n    _initObserver() {\n      qx.event.handler.GestureCore.GESTURE_EVENTS.forEach(\n        function (gestureType) {\n          qxWeb(this.__defaultTarget).on(\n            gestureType,\n            this.checkAndFireGesture,\n            this\n          );\n        }.bind(this)\n      );\n\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9\n      ) {\n        qxWeb(this.__defaultTarget).on(\"dblclick\", this._onDblClick, this);\n      }\n\n      // list to wheel events\n      var data = qx.core.Environment.get(\"event.mousewheel\");\n      qxWeb(data.target).on(data.type, this._fireRoll, this);\n    },\n\n    /**\n     * Remove native pointer event listeners.\n     */\n    _stopObserver() {\n      qx.event.handler.GestureCore.GESTURE_EVENTS.forEach(\n        function (pointerType) {\n          qxWeb(this.__defaultTarget).off(\n            pointerType,\n            this.checkAndFireGesture,\n            this\n          );\n        }.bind(this)\n      );\n\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9\n      ) {\n        qxWeb(this.__defaultTarget).off(\"dblclick\", this._onDblClick, this);\n      }\n\n      var data = qx.core.Environment.get(\"event.mousewheel\");\n      qxWeb(data.target).off(data.type, this._fireRoll, this);\n    },\n\n    /**\n     * Checks if a gesture was made and fires the gesture event.\n     *\n     * @param domEvent {qx.event.type.Pointer} DOM event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    checkAndFireGesture(domEvent, type, target) {\n      if (!type) {\n        type = domEvent.type;\n      }\n\n      if (!target) {\n        target = qx.bom.Event.getTarget(domEvent);\n      }\n\n      if (type == \"gesturebegin\") {\n        this.gestureBegin(domEvent, target);\n      } else if (type == \"gesturemove\") {\n        this.gestureMove(domEvent, target);\n      } else if (type == \"gesturefinish\") {\n        this.gestureFinish(domEvent, target);\n      } else if (type == \"gesturecancel\") {\n        this.gestureCancel(domEvent.pointerId);\n      }\n    },\n\n    /**\n     * Helper method for gesture start.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    gestureBegin(domEvent, target) {\n      if (this.__gesture[domEvent.pointerId]) {\n        this.__stopLongTapTimer(this.__gesture[domEvent.pointerId]);\n        delete this.__gesture[domEvent.pointerId];\n      }\n\n      /*\n        If the dom event's target or one of its ancestors have\n        a gesture handler, we don't need to fire the gesture again\n        since it bubbles.\n       */\n      if (this._hasIntermediaryHandler(target)) {\n        return;\n      }\n\n      this.__gesture[domEvent.pointerId] = {\n        startTime: new Date().getTime(),\n        lastEventTime: new Date().getTime(),\n        startX: domEvent.clientX,\n        startY: domEvent.clientY,\n        clientX: domEvent.clientX,\n        clientY: domEvent.clientY,\n        velocityX: 0,\n        velocityY: 0,\n        target: target,\n        isTap: true,\n        isPrimary: domEvent.isPrimary,\n        longTapTimer: window.setTimeout(\n          this.__fireLongTap.bind(this, domEvent, target),\n          qx.event.handler.GestureCore.LONGTAP_TIME\n        )\n      };\n\n      if (domEvent.isPrimary) {\n        this.__isMultiPointerGesture = false;\n        this.__primaryTarget = target;\n        this.__fireTrack(\"trackstart\", domEvent, target);\n      } else {\n        this.__isMultiPointerGesture = true;\n        if (Object.keys(this.__gesture).length === 2) {\n          this.__initialAngle = this._calcAngle();\n          this.__initialDistance = this._calcDistance();\n        }\n      }\n    },\n\n    /**\n     * Helper method for gesture move.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    gestureMove(domEvent, target) {\n      var gesture = this.__gesture[domEvent.pointerId];\n\n      if (gesture) {\n        var oldClientX = gesture.clientX;\n        var oldClientY = gesture.clientY;\n\n        gesture.clientX = domEvent.clientX;\n        gesture.clientY = domEvent.clientY;\n        gesture.lastEventTime = new Date().getTime();\n\n        if (oldClientX) {\n          gesture.velocityX = gesture.clientX - oldClientX;\n        }\n        if (oldClientY) {\n          gesture.velocityY = gesture.clientY - oldClientY;\n        }\n\n        if (Object.keys(this.__gesture).length === 2) {\n          this.__fireRotate(domEvent, gesture.target);\n          this.__firePinch(domEvent, gesture.target);\n        }\n\n        if (!this.__isMultiPointerGesture) {\n          this.__fireTrack(\"track\", domEvent, gesture.target);\n          this._fireRoll(domEvent, \"touch\", gesture.target);\n        }\n\n        // abort long tap timer if the distance is too big\n        if (gesture.isTap) {\n          gesture.isTap = this._isBelowTapMaxDistance(domEvent);\n          if (!gesture.isTap) {\n            this.__stopLongTapTimer(gesture);\n          }\n        }\n      }\n    },\n\n    /**\n     * Checks if a DOM element located between the target of a gesture\n     * event and the element this handler is attached to has a gesture\n     * handler of its own.\n     *\n     * @param target {Element} The gesture event's target\n     * @return {Boolean}\n     */\n    _hasIntermediaryHandler(target) {\n      while (target && target !== this.__defaultTarget) {\n        if (target.$$gestureHandler) {\n          return true;\n        }\n        target = target.parentNode;\n      }\n      return false;\n    },\n\n    /**\n     * Helper method for gesture end.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    gestureFinish(domEvent, target) {\n      // If no start position is available for this pointerup event, cancel gesture recognition.\n      if (!this.__gesture[domEvent.pointerId]) {\n        return;\n      }\n\n      var gesture = this.__gesture[domEvent.pointerId];\n      // delete the long tap\n      this.__stopLongTapTimer(gesture);\n\n      /*\n        If the dom event's target or one of its ancestors have\n        a gesture handler, we don't need to fire the gesture again\n        since it bubbles.\n       */\n      if (this._hasIntermediaryHandler(target)) {\n        return;\n      }\n\n      // always start the roll impulse on the original target\n      this.__handleRollImpulse(\n        gesture.velocityX,\n        gesture.velocityY,\n        domEvent,\n        gesture.target\n      );\n\n      this.__fireTrack(\"trackend\", domEvent, gesture.target);\n\n      if (gesture.isTap) {\n        if (target !== gesture.target) {\n          delete this.__gesture[domEvent.pointerId];\n          return;\n        }\n\n        this._fireEvent(domEvent, \"tap\", domEvent.target || target);\n\n        var isDblTap = false;\n        if (Object.keys(this.__lastTap).length > 0) {\n          // delete old tap entries\n          var limit = Date.now() - qx.event.handler.GestureCore.DOUBLETAP_TIME;\n          for (var time in this.__lastTap) {\n            if (time < limit) {\n              delete this.__lastTap[time];\n            } else {\n              var lastTap = this.__lastTap[time];\n              var isBelowDoubleTapDistance = this.__isBelowDoubleTapDistance(\n                lastTap.x,\n                lastTap.y,\n                domEvent.clientX,\n                domEvent.clientY,\n                domEvent.getPointerType()\n              );\n\n              var isSameTarget = lastTap.target === (domEvent.target || target);\n              var isSameButton = lastTap.button === domEvent.button;\n\n              if (isBelowDoubleTapDistance && isSameButton && isSameTarget) {\n                isDblTap = true;\n                delete this.__lastTap[time];\n                this._fireEvent(domEvent, \"dbltap\", domEvent.target || target);\n              }\n            }\n          }\n        }\n\n        if (!isDblTap) {\n          this.__lastTap[Date.now()] = {\n            x: domEvent.clientX,\n            y: domEvent.clientY,\n            target: domEvent.target || target,\n            button: domEvent.button\n          };\n        }\n      } else if (!this._isBelowTapMaxDistance(domEvent)) {\n        var swipe = this.__getSwipeGesture(domEvent, target);\n        if (swipe) {\n          domEvent.swipe = swipe;\n          this._fireEvent(domEvent, \"swipe\", gesture.target || target);\n        }\n      }\n\n      delete this.__gesture[domEvent.pointerId];\n    },\n\n    /**\n     * Stops the momentum scrolling currently running.\n     *\n     * @param id {Integer} The timeoutId of a 'roll' event\n     */\n    stopMomentum(id) {\n      this.__stopMomentum[id] = true;\n    },\n\n    /**\n     * Cancels the gesture if running.\n     * @param id {Number} The pointer Id.\n     */\n    gestureCancel(id) {\n      if (this.__gesture[id]) {\n        this.__stopLongTapTimer(this.__gesture[id]);\n        delete this.__gesture[id];\n      }\n      if (this.__momentum[id]) {\n        this.stopMomentum(this.__momentum[id]);\n        delete this.__momentum[id];\n      }\n    },\n\n    /**\n     * Update the target of a running gesture. This is used in virtual widgets\n     * when the DOM element changes.\n     *\n     * @param id {String} The pointer id.\n     * @param target {Element} The new target element.\n     * @internal\n     */\n    updateGestureTarget(id, target) {\n      this.__gesture[id].target = target;\n    },\n\n    /**\n     * Method which will be called recursively to provide a momentum scrolling.\n     * @param deltaX {Number} The last offset in X direction\n     * @param deltaY {Number} The last offset in Y direction\n     * @param domEvent {Event} The original gesture event\n     * @param target {Element} The target of the momentum roll events\n     * @param time {Number ?} The time in ms between the last two calls\n     */\n    __handleRollImpulse(deltaX, deltaY, domEvent, target, time) {\n      var oldTimeoutId = domEvent.timeoutId;\n      if (!time && this.__momentum[domEvent.pointerId]) {\n        // new roll impulse started, stop the old one\n        this.stopMomentum(this.__momentum[domEvent.pointerId]);\n      }\n      // do nothing if we don't need to scroll\n      if (\n        (Math.abs(deltaY) < 1 && Math.abs(deltaX) < 1) ||\n        this.__stopMomentum[oldTimeoutId] ||\n        (this.getWindow && !this.getWindow())\n      ) {\n        delete this.__stopMomentum[oldTimeoutId];\n        delete this.__momentum[domEvent.pointerId];\n        return;\n      }\n\n      if (!time) {\n        time = 1;\n        var startFactor = 2.8;\n        deltaY = deltaY / startFactor;\n        deltaX = deltaX / startFactor;\n      }\n      time += 0.0006;\n\n      deltaY = deltaY / time;\n      deltaX = deltaX / time;\n\n      // set up a new timer with the new delta\n      var timeoutId = qx.bom.AnimationFrame.request(\n        qx.lang.Function.bind(\n          function (deltaX, deltaY, domEvent, target, time) {\n            this.__handleRollImpulse(deltaX, deltaY, domEvent, target, time);\n          },\n          this,\n          deltaX,\n          deltaY,\n          domEvent,\n          target,\n          time\n        )\n      );\n\n      deltaX = Math.round(deltaX * 100) / 100;\n      deltaY = Math.round(deltaY * 100) / 100;\n\n      // scroll the desired new delta\n      domEvent.delta = {\n        x: -deltaX,\n        y: -deltaY\n      };\n\n      domEvent.momentum = true;\n      domEvent.timeoutId = timeoutId;\n      this.__momentum[domEvent.pointerId] = timeoutId;\n      this._fireEvent(domEvent, \"roll\", domEvent.target || target);\n    },\n\n    /**\n     * Calculates the angle of the primary and secondary pointer.\n     * @return {Number} the rotation angle of the 2 pointers.\n     */\n    _calcAngle() {\n      var pointerA = null;\n      var pointerB = null;\n\n      for (var pointerId in this.__gesture) {\n        var gesture = this.__gesture[pointerId];\n        if (pointerA === null) {\n          pointerA = gesture;\n        } else {\n          pointerB = gesture;\n        }\n      }\n\n      var x = pointerA.clientX - pointerB.clientX;\n      var y = pointerA.clientY - pointerB.clientY;\n\n      return (360 + Math.atan2(y, x) * (180 / Math.PI)) % 360;\n    },\n\n    /**\n     * Calculates the scaling distance between two pointers.\n     * @return {Number} the calculated distance.\n     */\n    _calcDistance() {\n      var pointerA = null;\n      var pointerB = null;\n\n      for (var pointerId in this.__gesture) {\n        var gesture = this.__gesture[pointerId];\n        if (pointerA === null) {\n          pointerA = gesture;\n        } else {\n          pointerB = gesture;\n        }\n      }\n\n      var scale = Math.sqrt(\n        Math.pow(pointerA.clientX - pointerB.clientX, 2) +\n          Math.pow(pointerA.clientY - pointerB.clientY, 2)\n      );\n\n      return scale;\n    },\n\n    /**\n     * Checks if the distance between the x/y coordinates of DOM event\n     * exceeds TAP_MAX_DISTANCE and returns the result.\n     *\n     * @param domEvent {Event} The DOM event from the browser.\n     * @return {Boolean|null} true if distance is below TAP_MAX_DISTANCE.\n     */\n    _isBelowTapMaxDistance(domEvent) {\n      var delta = this._getDeltaCoordinates(domEvent);\n      var maxDistance =\n        qx.event.handler.GestureCore.TAP_MAX_DISTANCE[\n          domEvent.getPointerType()\n        ];\n\n      if (!delta) {\n        return null;\n      }\n\n      return (\n        Math.abs(delta.x) <= maxDistance && Math.abs(delta.y) <= maxDistance\n      );\n    },\n\n    /**\n     * Checks if the distance between the x1/y1 and x2/y2 is\n     * below the TAP_MAX_DISTANCE and returns the result.\n     *\n     * @param x1 {Number} The x position of point one.\n     * @param y1 {Number} The y position of point one.\n     * @param x2 {Number} The x position of point two.\n     * @param y2 {Number} The y position of point two.\n     * @param type {String} The pointer type e.g. \"mouse\"\n     * @return {Boolean} <code>true</code>, if points are in range\n     */\n    __isBelowDoubleTapDistance(x1, y1, x2, y2, type) {\n      var clazz = qx.event.handler.GestureCore;\n\n      var inX = Math.abs(x1 - x2) < clazz.DOUBLETAP_MAX_DISTANCE[type];\n      var inY = Math.abs(y1 - y2) < clazz.DOUBLETAP_MAX_DISTANCE[type];\n\n      return inX && inY;\n    },\n\n    /**\n     * Calculates the delta coordinates in relation to the position on <code>pointerstart</code> event.\n     * @param domEvent {Event} The DOM event from the browser.\n     * @return {Map} containing the deltaX as x, and deltaY as y.\n     */\n    _getDeltaCoordinates(domEvent) {\n      var gesture = this.__gesture[domEvent.pointerId];\n      if (!gesture) {\n        return null;\n      }\n\n      var deltaX = domEvent.clientX - gesture.startX;\n      var deltaY = domEvent.clientY - gesture.startY;\n\n      var axis = \"x\";\n      if (Math.abs(deltaX / deltaY) < 1) {\n        axis = \"y\";\n      }\n\n      return {\n        x: deltaX,\n        y: deltaY,\n        axis: axis\n      };\n    },\n\n    /**\n     * Fire a gesture event with the given parameters\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String} type of the event\n     * @param target {Element ? null} event target\n     * @return {qx.Promise?} a promise, if one or more of the event handlers returned a promise\n     */\n    _fireEvent(domEvent, type, target) {\n      // The target may have been removed, e.g. menu hide on tap\n      if (!this.__defaultTarget) {\n        return;\n      }\n      var evt;\n      if (qx.core.Environment.get(\"event.dispatchevent\")) {\n        evt = new qx.event.type.dom.Custom(type, domEvent, {\n          bubbles: true,\n          swipe: domEvent.swipe,\n          scale: domEvent.scale,\n          angle: domEvent.angle,\n          delta: domEvent.delta,\n          pointerType: domEvent.pointerType,\n          momentum: domEvent.momentum\n        });\n\n        return target.dispatchEvent(evt);\n      } else if (this.__emitter) {\n        evt = new qx.event.type.dom.Custom(type, domEvent, {\n          target: this.__defaultTarget,\n          currentTarget: this.__defaultTarget,\n          srcElement: this.__defaultTarget,\n          swipe: domEvent.swipe,\n          scale: domEvent.scale,\n          angle: domEvent.angle,\n          delta: domEvent.delta,\n          pointerType: domEvent.pointerType,\n          momentum: domEvent.momentum\n        });\n\n        this.__emitter.emit(type, domEvent);\n      }\n    },\n\n    /**\n     * Fire \"tap\" and \"dbltap\" events after a native \"dblclick\"\n     * event to fix IE 8's broken mouse event sequence.\n     *\n     * @param domEvent {Event} dblclick event\n     */\n    _onDblClick(domEvent) {\n      var target = qx.bom.Event.getTarget(domEvent);\n      this._fireEvent(domEvent, \"tap\", target);\n      this._fireEvent(domEvent, \"dbltap\", target);\n    },\n\n    /**\n     * Returns the swipe gesture when the user performed a swipe.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     * @return {Map|null} returns the swipe data when the user performed a swipe, null if the gesture was no swipe.\n     */\n    __getSwipeGesture(domEvent, target) {\n      var gesture = this.__gesture[domEvent.pointerId];\n      if (!gesture) {\n        return null;\n      }\n\n      var clazz = qx.event.handler.GestureCore;\n      var deltaCoordinates = this._getDeltaCoordinates(domEvent);\n      var duration = new Date().getTime() - gesture.startTime;\n      var axis =\n        Math.abs(deltaCoordinates.x) >= Math.abs(deltaCoordinates.y)\n          ? \"x\"\n          : \"y\";\n      var distance = deltaCoordinates[axis];\n      var direction = clazz.SWIPE_DIRECTION[axis][distance < 0 ? 0 : 1];\n      var velocity = duration !== 0 ? distance / duration : 0;\n\n      var swipe = {\n        startTime: gesture.startTime,\n        duration: duration,\n        axis: axis,\n        direction: direction,\n        distance: distance,\n        velocity: velocity\n      };\n\n      return swipe;\n    },\n\n    /**\n     * Fires a track event.\n     *\n     * @param type {String} the track type\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __fireTrack(type, domEvent, target) {\n      domEvent.delta = this._getDeltaCoordinates(domEvent);\n      this._fireEvent(domEvent, type, domEvent.target || target);\n    },\n\n    /**\n     * Fires a roll event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     * @param rollFactor {Integer} the roll factor to apply\n     */\n    __fireRollEvent(domEvent, target, rollFactor) {\n      domEvent.delta = {\n        x: qx.util.Wheel.getDelta(domEvent, \"x\") * rollFactor,\n        y: qx.util.Wheel.getDelta(domEvent, \"y\") * rollFactor\n      };\n\n      domEvent.delta.axis =\n        Math.abs(domEvent.delta.x / domEvent.delta.y) < 1 ? \"y\" : \"x\";\n      domEvent.pointerType = \"wheel\";\n      this._fireEvent(domEvent, \"roll\", domEvent.target || target);\n    },\n\n    /**\n     * Triggers the adaptative roll scrolling.\n     *\n     * @param target {Element} event target\n     */\n    __performAdaptativeRollScrolling(target) {\n      var rollFactor = qx.event.handler.GestureCore.ROLL_FACTOR;\n      if (qx.util.Wheel.IS_TOUCHPAD) {\n        // The domEvent was generated by a touchpad\n        rollFactor = qx.event.handler.GestureCore.TOUCHPAD_ROLL_FACTOR;\n      }\n      this.__lastRollEventTime = new Date().getTime();\n      var reLength = this.__rollEvents.length;\n      for (var i = 0; i < reLength; i++) {\n        var domEvent = this.__rollEvents[i];\n        this.__fireRollEvent(domEvent, target, rollFactor);\n      }\n      this.__rollEvents = [];\n    },\n\n    /**\n     * Ends touch pad detection process.\n     */\n    __endTouchPadDetection() {\n      if (\n        this.__rollEvents.length >\n        qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_THRESHOLD\n      ) {\n        qx.util.Wheel.IS_TOUCHPAD = true;\n      } else {\n        qx.util.Wheel.IS_TOUCHPAD = false;\n      }\n      if (qx.core.Environment.get(\"qx.debug.touchpad.detection\")) {\n        qx.log.Logger.debug(this, \"IS_TOUCHPAD : \" + qx.util.Wheel.IS_TOUCHPAD);\n      }\n      this.__touchPadDetectionPerformed = true;\n    },\n\n    /**\n     * Is touchpad detection enabled ? Default implementation activates it only for Mac OS after Sierra (>= 10.12).\n     * @return {boolean} true if touchpad detection should occur.\n     * @internal\n     */\n    _isTouchPadDetectionEnabled() {\n      return (\n        qx.core.Environment.get(\"os.name\") == \"osx\" &&\n        qx.core.Environment.get(\"os.version\") >= 10.12\n      );\n    },\n\n    /**\n     * Fires a roll event after determining the roll factor to apply. Mac OS Sierra (10.12+)\n     * introduces a lot more wheel events fired from the trackpad, so the roll factor to be applied\n     * has to be reduced in order to make the scrolling less sensitive.\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String} The type of the dom event\n     * @param target {Element} event target\n     */\n    _fireRoll(domEvent, type, target) {\n      var now;\n      var detectionTimeout;\n      if (domEvent.type === qx.core.Environment.get(\"event.mousewheel\").type) {\n        if (this._isTouchPadDetectionEnabled()) {\n          now = new Date().getTime();\n          detectionTimeout =\n            qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_TIMEOUT;\n          if (\n            this.__lastRollEventTime > 0 &&\n            now - this.__lastRollEventTime > detectionTimeout\n          ) {\n            // The detection timeout was reached. A new detection step should occur.\n            this.__touchPadDetectionPerformed = false;\n            this.__rollEvents = [];\n            this.__lastRollEventTime = 0;\n          }\n          if (!this.__touchPadDetectionPerformed) {\n            // We are into a detection session. We count the events so that we can decide if\n            // they were fired by a real mouse wheel or a touchpad. Just swallow them until the\n            // detection period is over.\n            if (this.__rollEvents.length === 0) {\n              // detection starts\n              this.__rollEventsCountStart = now;\n              qx.event.Timer.once(\n                function () {\n                  if (!this.__touchPadDetectionPerformed) {\n                    // There were not enough events during the TOUCHPAD_WHEEL_EVENTS_PERIOD to actually\n                    // trigger a scrolling. Trigger it manually.\n                    this.__endTouchPadDetection();\n                    this.__performAdaptativeRollScrolling(target);\n                  }\n                },\n                this,\n                qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_PERIOD + 50\n              );\n            }\n            this.__rollEvents.push(domEvent);\n            this.__rollEventsCount++;\n            if (\n              now - this.__rollEventsCountStart >\n              qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_PERIOD\n            ) {\n              this.__endTouchPadDetection();\n            }\n          }\n          if (this.__touchPadDetectionPerformed) {\n            if (this.__rollEvents.length === 0) {\n              this.__rollEvents.push(domEvent);\n            }\n            // Detection is done. We can now decide the roll factor to apply to the delta.\n            // Default to a real mouse wheel event as opposed to a touchpad one.\n            this.__performAdaptativeRollScrolling(target);\n          }\n        } else {\n          this.__fireRollEvent(\n            domEvent,\n            target,\n            qx.event.handler.GestureCore.ROLL_FACTOR\n          );\n        }\n      } else {\n        var gesture = this.__gesture[domEvent.pointerId];\n        domEvent.delta = {\n          x: -gesture.velocityX,\n          y: -gesture.velocityY,\n          axis: Math.abs(gesture.velocityX / gesture.velocityY) < 1 ? \"y\" : \"x\"\n        };\n\n        this._fireEvent(domEvent, \"roll\", domEvent.target || target);\n      }\n    },\n\n    /**\n     * Fires a rotate event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __fireRotate(domEvent, target) {\n      if (!domEvent.isPrimary) {\n        var angle = this._calcAngle();\n        domEvent.angle = Math.round((angle - this.__initialAngle) % 360);\n        this._fireEvent(domEvent, \"rotate\", this.__primaryTarget);\n      }\n    },\n\n    /**\n     * Fires a pinch event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __firePinch(domEvent, target) {\n      if (!domEvent.isPrimary) {\n        var distance = this._calcDistance();\n        var scale = distance / this.__initialDistance;\n        domEvent.scale = Math.round(scale * 100) / 100;\n        this._fireEvent(domEvent, \"pinch\", this.__primaryTarget);\n      }\n    },\n\n    /**\n     * Fires the long tap event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __fireLongTap(domEvent, target) {\n      var gesture = this.__gesture[domEvent.pointerId];\n      if (gesture) {\n        this._fireEvent(domEvent, \"longtap\", domEvent.target || target);\n        gesture.longTapTimer = null;\n        gesture.isTap = false;\n      }\n    },\n\n    /**\n     * Stops the time for the long tap event.\n     * @param gesture {Map} Data may representing the gesture.\n     */\n    __stopLongTapTimer(gesture) {\n      if (gesture.longTapTimer) {\n        window.clearTimeout(gesture.longTapTimer);\n        gesture.longTapTimer = null;\n      }\n    },\n\n    /**\n     * Dispose the current instance\n     */\n    dispose() {\n      for (var gesture in this.__gesture) {\n        this.__stopLongTapTimer(gesture);\n      }\n\n      this._stopObserver();\n      this.__defaultTarget = this.__emitter = null;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,8BAApB,EAAoD;IAClDC,MAAM,EAAEC,MAD0C;IAElDC,SAAS,EAAE,CAACP,EAAE,CAACQ,IAAH,CAAQC,WAAT,CAFuC;IAIlDC,OAAO,EAAE;MACPC,KAAK,EAAE,CACL,KADK,EAEL,OAFK,EAGL,SAHK,EAIL,QAJK,EAKL,OALK,EAML,YANK,EAOL,UAPK,EAQL,QARK,EASL,OATK,EAUL,MAVK,CADA;MAcPC,cAAc,EAAE,CACd,cADc,EAEd,eAFc,EAGd,aAHc,EAId,eAJc,CAdT;;MAqBP;MACAC,gBAAgB,EAAE;QAAEC,KAAK,EAAE,EAAT;QAAaC,KAAK,EAAE,CAApB;QAAuBC,GAAG,EAAE;MAA5B,CAtBX;MAsB6C;;MAEpD;MACAC,sBAAsB,EAAE;QAAEH,KAAK,EAAE,EAAT;QAAaC,KAAK,EAAE,CAApB;QAAuBC,GAAG,EAAE;MAA5B,CAzBjB;MAyBmD;;MAE1D;MACAE,eAAe,EAAE;QACfC,CAAC,EAAE,CAAC,MAAD,EAAS,OAAT,CADY;QAEfC,CAAC,EAAE,CAAC,IAAD,EAAO,MAAP;MAFY,CA5BV;;MAiCP;AACJ;AACA;MACIC,YAAY,EAAErB,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,cAAxB,IAA0C,GAA1C,GAAgD,KApCvD;;MAsCP;AACJ;AACA;AACA;MACIC,cAAc,EAAE,GA1CT;;MA4CP;AACJ;AACA;AACA;MACIC,WAAW,EAAE,EAhDN;;MAkDP;AACJ;AACA;AACA;MACIC,oBAAoB,EAAE,CAtDf;;MAwDP;AACJ;AACA;AACA;MACIC,+BAA+B,EAAE,EA5D1B;;MA8DP;AACJ;AACA;AACA;MACIC,4BAA4B,EAAE,GAlEvB;;MAoEP;AACJ;AACA;AACA;MACIC,6BAA6B,EAAE;IAxExB,CAJyC;;IA+ElD;AACF;AACA;AACA;AACA;IACEC,SApFkD,qBAoFxCC,MApFwC,EAoFhCC,OApFgC,EAoFvB;MACzB,KAAKC,SAAL,GAAuBF,MAAvB;MACA,KAAKG,SAAL,GAAiBF,OAAjB;MACA,KAAKG,SAAL,GAAiB,EAAjB;MACA,KAAKC,SAAL,GAAiB,EAAjB;MACA,KAAKC,SAAL,GAAsB,EAAtB;MACA,KAAKC,SAAL,GAAkB,EAAlB;MACA,KAAKC,SAAL,GAAoB,EAApB;;MACA,KAAKC,aAAL;IACD,CA7FiD;IA+FlDC,OAAO,EAAE;MACPR,SAAe,EAAE,IADV;MAEPC,SAAS,EAAE,IAFJ;MAGPC,SAAS,EAAE,IAHJ;MAIPO,SAAW,EAAE,IAJN;MAKPC,SAAe,EAAE,IALV;MAMPC,SAAuB,EAAE,IANlB;MAOPC,UAAc,EAAE,IAPT;MAQPT,SAAS,EAAE,IARJ;MASPU,UAAe,EAAE,IATV;MAUPT,SAAc,EAAE,IAVT;MAWPU,UAAiB,EAAE,IAXZ;MAYPT,SAAU,EAAE,IAZL;MAaPC,SAAY,EAAE,IAbP;MAcPS,UAAsB,EAAE,CAdjB;MAePC,UAAiB,EAAE,CAfZ;MAgBPC,UAA4B,EAAE,KAhBvB;MAiBPC,UAAmB,EAAE,CAjBd;;MAmBP;AACJ;AACA;MACIX,aAtBO,2BAsBS;QACdxC,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B1C,cAA7B,CAA4C2C,OAA5C,CACE,UAAUC,WAAV,EAAuB;UACrBC,KAAK,CAAC,KAAKxB,SAAN,CAAL,CAA4ByB,EAA5B,CACEF,WADF,EAEE,KAAKG,mBAFP,EAGE,IAHF;QAKD,CAND,CAMEC,IANF,CAMO,IANP,CADF;;QAUA,IACE5D,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA1C,IACAvB,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,sBAAxB,IAAkD,CAFpD,EAGE;UACAkC,KAAK,CAAC,KAAKxB,SAAN,CAAL,CAA4ByB,EAA5B,CAA+B,UAA/B,EAA2C,KAAKG,WAAhD,EAA6D,IAA7D;QACD,CAhBa,CAkBd;;;QACA,IAAIC,IAAI,GAAG9D,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAX;QACAkC,KAAK,CAACK,IAAI,CAAC/B,MAAN,CAAL,CAAmB2B,EAAnB,CAAsBI,IAAI,CAACC,IAA3B,EAAiC,KAAKC,SAAtC,EAAiD,IAAjD;MACD,CA3CM;;MA6CP;AACJ;AACA;MACIC,aAhDO,2BAgDS;QACdjE,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B1C,cAA7B,CAA4C2C,OAA5C,CACE,UAAUW,WAAV,EAAuB;UACrBT,KAAK,CAAC,KAAKxB,SAAN,CAAL,CAA4BkC,GAA5B,CACED,WADF,EAEE,KAAKP,mBAFP,EAGE,IAHF;QAKD,CAND,CAMEC,IANF,CAMO,IANP,CADF;;QAUA,IACE5D,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA1C,IACAvB,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,sBAAxB,IAAkD,CAFpD,EAGE;UACAkC,KAAK,CAAC,KAAKxB,SAAN,CAAL,CAA4BkC,GAA5B,CAAgC,UAAhC,EAA4C,KAAKN,WAAjD,EAA8D,IAA9D;QACD;;QAED,IAAIC,IAAI,GAAG9D,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAX;QACAkC,KAAK,CAACK,IAAI,CAAC/B,MAAN,CAAL,CAAmBoC,GAAnB,CAAuBL,IAAI,CAACC,IAA5B,EAAkC,KAAKC,SAAvC,EAAkD,IAAlD;MACD,CApEM;;MAsEP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIL,mBA7EO,+BA6EaS,QA7Eb,EA6EuBL,IA7EvB,EA6E6BhC,MA7E7B,EA6EqC;QAC1C,IAAI,CAACgC,IAAL,EAAW;UACTA,IAAI,GAAGK,QAAQ,CAACL,IAAhB;QACD;;QAED,IAAI,CAAChC,MAAL,EAAa;UACXA,MAAM,GAAG/B,EAAE,CAACqE,GAAH,CAAOC,KAAP,CAAaC,SAAb,CAAuBH,QAAvB,CAAT;QACD;;QAED,IAAIL,IAAI,IAAI,cAAZ,EAA4B;UAC1B,KAAKS,YAAL,CAAkBJ,QAAlB,EAA4BrC,MAA5B;QACD,CAFD,MAEO,IAAIgC,IAAI,IAAI,aAAZ,EAA2B;UAChC,KAAKU,WAAL,CAAiBL,QAAjB,EAA2BrC,MAA3B;QACD,CAFM,MAEA,IAAIgC,IAAI,IAAI,eAAZ,EAA6B;UAClC,KAAKW,aAAL,CAAmBN,QAAnB,EAA6BrC,MAA7B;QACD,CAFM,MAEA,IAAIgC,IAAI,IAAI,eAAZ,EAA6B;UAClC,KAAKY,aAAL,CAAmBP,QAAQ,CAACQ,SAA5B;QACD;MACF,CA/FM;;MAiGP;AACJ;AACA;AACA;AACA;AACA;MACIJ,YAvGO,wBAuGMJ,QAvGN,EAuGgBrC,MAvGhB,EAuGwB;QAC7B,IAAI,KAAKI,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAJ,EAAwC;UACtC,KAAKC,UAAL,CAAwB,KAAK1C,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAxB;;UACA,OAAO,KAAKzC,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAP;QACD;QAED;AACN;AACA;AACA;AACA;;;QACM,IAAI,KAAKE,uBAAL,CAA6B/C,MAA7B,CAAJ,EAA0C;UACxC;QACD;;QAED,KAAKI,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,IAAqC;UACnCG,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADwB;UAEnCC,aAAa,EAAE,IAAIF,IAAJ,GAAWC,OAAX,EAFoB;UAGnCE,MAAM,EAAEf,QAAQ,CAACgB,OAHkB;UAInCC,MAAM,EAAEjB,QAAQ,CAACkB,OAJkB;UAKnCF,OAAO,EAAEhB,QAAQ,CAACgB,OALiB;UAMnCE,OAAO,EAAElB,QAAQ,CAACkB,OANiB;UAOnCC,SAAS,EAAE,CAPwB;UAQnCC,SAAS,EAAE,CARwB;UASnCzD,MAAM,EAAEA,MAT2B;UAUnC0D,KAAK,EAAE,IAV4B;UAWnCC,SAAS,EAAEtB,QAAQ,CAACsB,SAXe;UAYnCC,YAAY,EAAEC,MAAM,CAACC,UAAP,CACZ,KAAKC,UAAL,CAAmBlC,IAAnB,CAAwB,IAAxB,EAA8BQ,QAA9B,EAAwCrC,MAAxC,CADY,EAEZ/B,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6BjC,YAFjB;QAZqB,CAArC;;QAkBA,IAAI+C,QAAQ,CAACsB,SAAb,EAAwB;UACtB,KAAK9C,SAAL,GAA+B,KAA/B;UACA,KAAKD,SAAL,GAAuBZ,MAAvB;;UACA,KAAKgE,UAAL,CAAiB,YAAjB,EAA+B3B,QAA/B,EAAyCrC,MAAzC;QACD,CAJD,MAIO;UACL,KAAKa,SAAL,GAA+B,IAA/B;;UACA,IAAItC,MAAM,CAAC0F,IAAP,CAAY,KAAK7D,SAAjB,EAA4B8D,MAA5B,KAAuC,CAA3C,EAA8C;YAC5C,KAAKpD,UAAL,GAAsB,KAAKqD,UAAL,EAAtB;YACA,KAAKnD,UAAL,GAAyB,KAAKoD,aAAL,EAAzB;UACD;QACF;MACF,CAnJM;;MAqJP;AACJ;AACA;AACA;AACA;AACA;MACI1B,WA3JO,uBA2JKL,QA3JL,EA2JerC,MA3Jf,EA2JuB;QAC5B,IAAIqE,OAAO,GAAG,KAAKjE,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAd;;QAEA,IAAIwB,OAAJ,EAAa;UACX,IAAIC,UAAU,GAAGD,OAAO,CAAChB,OAAzB;UACA,IAAIkB,UAAU,GAAGF,OAAO,CAACd,OAAzB;UAEAc,OAAO,CAAChB,OAAR,GAAkBhB,QAAQ,CAACgB,OAA3B;UACAgB,OAAO,CAACd,OAAR,GAAkBlB,QAAQ,CAACkB,OAA3B;UACAc,OAAO,CAAClB,aAAR,GAAwB,IAAIF,IAAJ,GAAWC,OAAX,EAAxB;;UAEA,IAAIoB,UAAJ,EAAgB;YACdD,OAAO,CAACb,SAAR,GAAoBa,OAAO,CAAChB,OAAR,GAAkBiB,UAAtC;UACD;;UACD,IAAIC,UAAJ,EAAgB;YACdF,OAAO,CAACZ,SAAR,GAAoBY,OAAO,CAACd,OAAR,GAAkBgB,UAAtC;UACD;;UAED,IAAIhG,MAAM,CAAC0F,IAAP,CAAY,KAAK7D,SAAjB,EAA4B8D,MAA5B,KAAuC,CAA3C,EAA8C;YAC5C,KAAKM,UAAL,CAAkBnC,QAAlB,EAA4BgC,OAAO,CAACrE,MAApC;;YACA,KAAKyE,UAAL,CAAiBpC,QAAjB,EAA2BgC,OAAO,CAACrE,MAAnC;UACD;;UAED,IAAI,CAAC,KAAKa,SAAV,EAAmC;YACjC,KAAKmD,UAAL,CAAiB,OAAjB,EAA0B3B,QAA1B,EAAoCgC,OAAO,CAACrE,MAA5C;;YACA,KAAKiC,SAAL,CAAeI,QAAf,EAAyB,OAAzB,EAAkCgC,OAAO,CAACrE,MAA1C;UACD,CAvBU,CAyBX;;;UACA,IAAIqE,OAAO,CAACX,KAAZ,EAAmB;YACjBW,OAAO,CAACX,KAAR,GAAgB,KAAKgB,sBAAL,CAA4BrC,QAA5B,CAAhB;;YACA,IAAI,CAACgC,OAAO,CAACX,KAAb,EAAoB;cAClB,KAAKZ,UAAL,CAAwBuB,OAAxB;YACD;UACF;QACF;MACF,CA/LM;;MAiMP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACItB,uBAzMO,mCAyMiB/C,MAzMjB,EAyMyB;QAC9B,OAAOA,MAAM,IAAIA,MAAM,KAAK,KAAKE,SAAjC,EAAkD;UAChD,IAAIF,MAAM,CAAC2E,gBAAX,EAA6B;YAC3B,OAAO,IAAP;UACD;;UACD3E,MAAM,GAAGA,MAAM,CAAC4E,UAAhB;QACD;;QACD,OAAO,KAAP;MACD,CAjNM;;MAmNP;AACJ;AACA;AACA;AACA;AACA;MACIjC,aAzNO,yBAyNON,QAzNP,EAyNiBrC,MAzNjB,EAyNyB;QAC9B;QACA,IAAI,CAAC,KAAKI,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAL,EAAyC;UACvC;QACD;;QAED,IAAIwB,OAAO,GAAG,KAAKjE,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAd,CAN8B,CAO9B;;QACA,KAAKC,UAAL,CAAwBuB,OAAxB;QAEA;AACN;AACA;AACA;AACA;;;QACM,IAAI,KAAKtB,uBAAL,CAA6B/C,MAA7B,CAAJ,EAA0C;UACxC;QACD,CAjB6B,CAmB9B;;;QACA,KAAK6E,UAAL,CACER,OAAO,CAACb,SADV,EAEEa,OAAO,CAACZ,SAFV,EAGEpB,QAHF,EAIEgC,OAAO,CAACrE,MAJV;;QAOA,KAAKgE,UAAL,CAAiB,UAAjB,EAA6B3B,QAA7B,EAAuCgC,OAAO,CAACrE,MAA/C;;QAEA,IAAIqE,OAAO,CAACX,KAAZ,EAAmB;UACjB,IAAI1D,MAAM,KAAKqE,OAAO,CAACrE,MAAvB,EAA+B;YAC7B,OAAO,KAAKI,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAP;YACA;UACD;;UAED,KAAKiC,UAAL,CAAgBzC,QAAhB,EAA0B,KAA1B,EAAiCA,QAAQ,CAACrC,MAAT,IAAmBA,MAApD;;UAEA,IAAI+E,QAAQ,GAAG,KAAf;;UACA,IAAIxG,MAAM,CAAC0F,IAAP,CAAY,KAAK5D,SAAjB,EAA4B6D,MAA5B,GAAqC,CAAzC,EAA4C;YAC1C;YACA,IAAIc,KAAK,GAAG/B,IAAI,CAACgC,GAAL,KAAahH,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B9B,cAAtD;;YACA,KAAK,IAAIyF,IAAT,IAAiB,KAAK7E,SAAtB,EAAiC;cAC/B,IAAI6E,IAAI,GAAGF,KAAX,EAAkB;gBAChB,OAAO,KAAK3E,SAAL,CAAe6E,IAAf,CAAP;cACD,CAFD,MAEO;gBACL,IAAIC,OAAO,GAAG,KAAK9E,SAAL,CAAe6E,IAAf,CAAd;;gBACA,IAAIE,wBAAwB,GAAG,KAAKC,UAAL,CAC7BF,OAAO,CAAC/F,CADqB,EAE7B+F,OAAO,CAAC9F,CAFqB,EAG7BgD,QAAQ,CAACgB,OAHoB,EAI7BhB,QAAQ,CAACkB,OAJoB,EAK7BlB,QAAQ,CAACiD,cAAT,EAL6B,CAA/B;;gBAQA,IAAIC,YAAY,GAAGJ,OAAO,CAACnF,MAAR,MAAoBqC,QAAQ,CAACrC,MAAT,IAAmBA,MAAvC,CAAnB;gBACA,IAAIwF,YAAY,GAAGL,OAAO,CAACM,MAAR,KAAmBpD,QAAQ,CAACoD,MAA/C;;gBAEA,IAAIL,wBAAwB,IAAII,YAA5B,IAA4CD,YAAhD,EAA8D;kBAC5DR,QAAQ,GAAG,IAAX;kBACA,OAAO,KAAK1E,SAAL,CAAe6E,IAAf,CAAP;;kBACA,KAAKJ,UAAL,CAAgBzC,QAAhB,EAA0B,QAA1B,EAAoCA,QAAQ,CAACrC,MAAT,IAAmBA,MAAvD;gBACD;cACF;YACF;UACF;;UAED,IAAI,CAAC+E,QAAL,EAAe;YACb,KAAK1E,SAAL,CAAe4C,IAAI,CAACgC,GAAL,EAAf,IAA6B;cAC3B7F,CAAC,EAAEiD,QAAQ,CAACgB,OADe;cAE3BhE,CAAC,EAAEgD,QAAQ,CAACkB,OAFe;cAG3BvD,MAAM,EAAEqC,QAAQ,CAACrC,MAAT,IAAmBA,MAHA;cAI3ByF,MAAM,EAAEpD,QAAQ,CAACoD;YAJU,CAA7B;UAMD;QACF,CA7CD,MA6CO,IAAI,CAAC,KAAKf,sBAAL,CAA4BrC,QAA5B,CAAL,EAA4C;UACjD,IAAIqD,KAAK,GAAG,KAAKC,UAAL,CAAuBtD,QAAvB,EAAiCrC,MAAjC,CAAZ;;UACA,IAAI0F,KAAJ,EAAW;YACTrD,QAAQ,CAACqD,KAAT,GAAiBA,KAAjB;;YACA,KAAKZ,UAAL,CAAgBzC,QAAhB,EAA0B,OAA1B,EAAmCgC,OAAO,CAACrE,MAAR,IAAkBA,MAArD;UACD;QACF;;QAED,OAAO,KAAKI,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAP;MACD,CA5SM;;MA8SP;AACJ;AACA;AACA;AACA;MACI+C,YAnTO,wBAmTMC,EAnTN,EAmTU;QACf,KAAKvF,SAAL,CAAoBuF,EAApB,IAA0B,IAA1B;MACD,CArTM;;MAuTP;AACJ;AACA;AACA;MACIjD,aA3TO,yBA2TOiD,EA3TP,EA2TW;QAChB,IAAI,KAAKzF,SAAL,CAAeyF,EAAf,CAAJ,EAAwB;UACtB,KAAK/C,UAAL,CAAwB,KAAK1C,SAAL,CAAeyF,EAAf,CAAxB;;UACA,OAAO,KAAKzF,SAAL,CAAeyF,EAAf,CAAP;QACD;;QACD,IAAI,KAAKtF,SAAL,CAAgBsF,EAAhB,CAAJ,EAAyB;UACvB,KAAKD,YAAL,CAAkB,KAAKrF,SAAL,CAAgBsF,EAAhB,CAAlB;UACA,OAAO,KAAKtF,SAAL,CAAgBsF,EAAhB,CAAP;QACD;MACF,CApUM;;MAsUP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,mBA9UO,+BA8UaD,EA9Ub,EA8UiB7F,MA9UjB,EA8UyB;QAC9B,KAAKI,SAAL,CAAeyF,EAAf,EAAmB7F,MAAnB,GAA4BA,MAA5B;MACD,CAhVM;;MAkVP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI6E,UA1VO,sBA0VakB,MA1Vb,EA0VqBC,MA1VrB,EA0V6B3D,QA1V7B,EA0VuCrC,MA1VvC,EA0V+CkF,IA1V/C,EA0VqD;QAC1D,IAAIe,YAAY,GAAG5D,QAAQ,CAAC6D,SAA5B;;QACA,IAAI,CAAChB,IAAD,IAAS,KAAK3E,SAAL,CAAgB8B,QAAQ,CAACQ,SAAzB,CAAb,EAAkD;UAChD;UACA,KAAK+C,YAAL,CAAkB,KAAKrF,SAAL,CAAgB8B,QAAQ,CAACQ,SAAzB,CAAlB;QACD,CALyD,CAM1D;;;QACA,IACGsD,IAAI,CAACC,GAAL,CAASJ,MAAT,IAAmB,CAAnB,IAAwBG,IAAI,CAACC,GAAL,CAASL,MAAT,IAAmB,CAA5C,IACA,KAAKzF,SAAL,CAAoB2F,YAApB,CADA,IAEC,KAAKI,SAAL,IAAkB,CAAC,KAAKA,SAAL,EAHtB,EAIE;UACA,OAAO,KAAK/F,SAAL,CAAoB2F,YAApB,CAAP;UACA,OAAO,KAAK1F,SAAL,CAAgB8B,QAAQ,CAACQ,SAAzB,CAAP;UACA;QACD;;QAED,IAAI,CAACqC,IAAL,EAAW;UACTA,IAAI,GAAG,CAAP;UACA,IAAIoB,WAAW,GAAG,GAAlB;UACAN,MAAM,GAAGA,MAAM,GAAGM,WAAlB;UACAP,MAAM,GAAGA,MAAM,GAAGO,WAAlB;QACD;;QACDpB,IAAI,IAAI,MAAR;QAEAc,MAAM,GAAGA,MAAM,GAAGd,IAAlB;QACAa,MAAM,GAAGA,MAAM,GAAGb,IAAlB,CA1B0D,CA4B1D;;QACA,IAAIgB,SAAS,GAAGjI,EAAE,CAACqE,GAAH,CAAOiE,cAAP,CAAsBC,OAAtB,CACdvI,EAAE,CAACwI,IAAH,CAAQC,QAAR,CAAiB7E,IAAjB,CACE,UAAUkE,MAAV,EAAkBC,MAAlB,EAA0B3D,QAA1B,EAAoCrC,MAApC,EAA4CkF,IAA5C,EAAkD;UAChD,KAAKL,UAAL,CAAyBkB,MAAzB,EAAiCC,MAAjC,EAAyC3D,QAAzC,EAAmDrC,MAAnD,EAA2DkF,IAA3D;QACD,CAHH,EAIE,IAJF,EAKEa,MALF,EAMEC,MANF,EAOE3D,QAPF,EAQErC,MARF,EASEkF,IATF,CADc,CAAhB;QAcAa,MAAM,GAAGI,IAAI,CAACQ,KAAL,CAAWZ,MAAM,GAAG,GAApB,IAA2B,GAApC;QACAC,MAAM,GAAGG,IAAI,CAACQ,KAAL,CAAWX,MAAM,GAAG,GAApB,IAA2B,GAApC,CA5C0D,CA8C1D;;QACA3D,QAAQ,CAACuE,KAAT,GAAiB;UACfxH,CAAC,EAAE,CAAC2G,MADW;UAEf1G,CAAC,EAAE,CAAC2G;QAFW,CAAjB;QAKA3D,QAAQ,CAACwE,QAAT,GAAoB,IAApB;QACAxE,QAAQ,CAAC6D,SAAT,GAAqBA,SAArB;QACA,KAAK3F,SAAL,CAAgB8B,QAAQ,CAACQ,SAAzB,IAAsCqD,SAAtC;;QACA,KAAKpB,UAAL,CAAgBzC,QAAhB,EAA0B,MAA1B,EAAkCA,QAAQ,CAACrC,MAAT,IAAmBA,MAArD;MACD,CAlZM;;MAoZP;AACJ;AACA;AACA;MACImE,UAxZO,wBAwZM;QACX,IAAI2C,QAAQ,GAAG,IAAf;QACA,IAAIC,QAAQ,GAAG,IAAf;;QAEA,KAAK,IAAIlE,SAAT,IAAsB,KAAKzC,SAA3B,EAAsC;UACpC,IAAIiE,OAAO,GAAG,KAAKjE,SAAL,CAAeyC,SAAf,CAAd;;UACA,IAAIiE,QAAQ,KAAK,IAAjB,EAAuB;YACrBA,QAAQ,GAAGzC,OAAX;UACD,CAFD,MAEO;YACL0C,QAAQ,GAAG1C,OAAX;UACD;QACF;;QAED,IAAIjF,CAAC,GAAG0H,QAAQ,CAACzD,OAAT,GAAmB0D,QAAQ,CAAC1D,OAApC;QACA,IAAIhE,CAAC,GAAGyH,QAAQ,CAACvD,OAAT,GAAmBwD,QAAQ,CAACxD,OAApC;QAEA,OAAO,CAAC,MAAM4C,IAAI,CAACa,KAAL,CAAW3H,CAAX,EAAcD,CAAd,KAAoB,MAAM+G,IAAI,CAACc,EAA/B,CAAP,IAA6C,GAApD;MACD,CAzaM;;MA2aP;AACJ;AACA;AACA;MACI7C,aA/aO,2BA+aS;QACd,IAAI0C,QAAQ,GAAG,IAAf;QACA,IAAIC,QAAQ,GAAG,IAAf;;QAEA,KAAK,IAAIlE,SAAT,IAAsB,KAAKzC,SAA3B,EAAsC;UACpC,IAAIiE,OAAO,GAAG,KAAKjE,SAAL,CAAeyC,SAAf,CAAd;;UACA,IAAIiE,QAAQ,KAAK,IAAjB,EAAuB;YACrBA,QAAQ,GAAGzC,OAAX;UACD,CAFD,MAEO;YACL0C,QAAQ,GAAG1C,OAAX;UACD;QACF;;QAED,IAAI6C,KAAK,GAAGf,IAAI,CAACgB,IAAL,CACVhB,IAAI,CAACiB,GAAL,CAASN,QAAQ,CAACzD,OAAT,GAAmB0D,QAAQ,CAAC1D,OAArC,EAA8C,CAA9C,IACE8C,IAAI,CAACiB,GAAL,CAASN,QAAQ,CAACvD,OAAT,GAAmBwD,QAAQ,CAACxD,OAArC,EAA8C,CAA9C,CAFQ,CAAZ;QAKA,OAAO2D,KAAP;MACD,CAlcM;;MAocP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIxC,sBA3cO,kCA2cgBrC,QA3chB,EA2c0B;QAC/B,IAAIuE,KAAK,GAAG,KAAKS,oBAAL,CAA0BhF,QAA1B,CAAZ;;QACA,IAAIiF,WAAW,GACbrJ,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6BzC,gBAA7B,CACEuD,QAAQ,CAACiD,cAAT,EADF,CADF;;QAKA,IAAI,CAACsB,KAAL,EAAY;UACV,OAAO,IAAP;QACD;;QAED,OACET,IAAI,CAACC,GAAL,CAASQ,KAAK,CAACxH,CAAf,KAAqBkI,WAArB,IAAoCnB,IAAI,CAACC,GAAL,CAASQ,KAAK,CAACvH,CAAf,KAAqBiI,WAD3D;MAGD,CAzdM;;MA2dP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIjC,UAteO,sBAseoBkC,EAtepB,EAsewBC,EAtexB,EAse4BC,EAte5B,EAsegCC,EAtehC,EAseoC1F,IAtepC,EAse0C;QAC/C,IAAI2F,KAAK,GAAG1J,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAA7B;QAEA,IAAIqG,GAAG,GAAGzB,IAAI,CAACC,GAAL,CAASmB,EAAE,GAAGE,EAAd,IAAoBE,KAAK,CAACzI,sBAAN,CAA6B8C,IAA7B,CAA9B;QACA,IAAI6F,GAAG,GAAG1B,IAAI,CAACC,GAAL,CAASoB,EAAE,GAAGE,EAAd,IAAoBC,KAAK,CAACzI,sBAAN,CAA6B8C,IAA7B,CAA9B;QAEA,OAAO4F,GAAG,IAAIC,GAAd;MACD,CA7eM;;MA+eP;AACJ;AACA;AACA;AACA;MACIR,oBApfO,gCAofchF,QApfd,EAofwB;QAC7B,IAAIgC,OAAO,GAAG,KAAKjE,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAd;;QACA,IAAI,CAACwB,OAAL,EAAc;UACZ,OAAO,IAAP;QACD;;QAED,IAAI0B,MAAM,GAAG1D,QAAQ,CAACgB,OAAT,GAAmBgB,OAAO,CAACjB,MAAxC;QACA,IAAI4C,MAAM,GAAG3D,QAAQ,CAACkB,OAAT,GAAmBc,OAAO,CAACf,MAAxC;QAEA,IAAIwE,IAAI,GAAG,GAAX;;QACA,IAAI3B,IAAI,CAACC,GAAL,CAASL,MAAM,GAAGC,MAAlB,IAA4B,CAAhC,EAAmC;UACjC8B,IAAI,GAAG,GAAP;QACD;;QAED,OAAO;UACL1I,CAAC,EAAE2G,MADE;UAEL1G,CAAC,EAAE2G,MAFE;UAGL8B,IAAI,EAAEA;QAHD,CAAP;MAKD,CAvgBM;;MAygBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIhD,UAjhBO,sBAihBIzC,QAjhBJ,EAihBcL,IAjhBd,EAihBoBhC,MAjhBpB,EAihB4B;QACjC;QACA,IAAI,CAAC,KAAKE,SAAV,EAA2B;UACzB;QACD;;QACD,IAAI6H,GAAJ;;QACA,IAAI9J,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,qBAAxB,CAAJ,EAAoD;UAClDuI,GAAG,GAAG,IAAI9J,EAAE,CAACoD,KAAH,CAASW,IAAT,CAAcgG,GAAd,CAAkBC,MAAtB,CAA6BjG,IAA7B,EAAmCK,QAAnC,EAA6C;YACjD6F,OAAO,EAAE,IADwC;YAEjDxC,KAAK,EAAErD,QAAQ,CAACqD,KAFiC;YAGjDwB,KAAK,EAAE7E,QAAQ,CAAC6E,KAHiC;YAIjDiB,KAAK,EAAE9F,QAAQ,CAAC8F,KAJiC;YAKjDvB,KAAK,EAAEvE,QAAQ,CAACuE,KALiC;YAMjDzE,WAAW,EAAEE,QAAQ,CAACF,WAN2B;YAOjD0E,QAAQ,EAAExE,QAAQ,CAACwE;UAP8B,CAA7C,CAAN;UAUA,OAAO7G,MAAM,CAACoI,aAAP,CAAqBL,GAArB,CAAP;QACD,CAZD,MAYO,IAAI,KAAK5H,SAAT,EAAoB;UACzB4H,GAAG,GAAG,IAAI9J,EAAE,CAACoD,KAAH,CAASW,IAAT,CAAcgG,GAAd,CAAkBC,MAAtB,CAA6BjG,IAA7B,EAAmCK,QAAnC,EAA6C;YACjDrC,MAAM,EAAE,KAAKE,SADoC;YAEjDmI,aAAa,EAAE,KAAKnI,SAF6B;YAGjDoI,UAAU,EAAE,KAAKpI,SAHgC;YAIjDwF,KAAK,EAAErD,QAAQ,CAACqD,KAJiC;YAKjDwB,KAAK,EAAE7E,QAAQ,CAAC6E,KALiC;YAMjDiB,KAAK,EAAE9F,QAAQ,CAAC8F,KANiC;YAOjDvB,KAAK,EAAEvE,QAAQ,CAACuE,KAPiC;YAQjDzE,WAAW,EAAEE,QAAQ,CAACF,WAR2B;YASjD0E,QAAQ,EAAExE,QAAQ,CAACwE;UAT8B,CAA7C,CAAN;;UAYA,KAAK1G,SAAL,CAAeoI,IAAf,CAAoBvG,IAApB,EAA0BK,QAA1B;QACD;MACF,CAljBM;;MAojBP;AACJ;AACA;AACA;AACA;AACA;MACIP,WA1jBO,uBA0jBKO,QA1jBL,EA0jBe;QACpB,IAAIrC,MAAM,GAAG/B,EAAE,CAACqE,GAAH,CAAOC,KAAP,CAAaC,SAAb,CAAuBH,QAAvB,CAAb;;QACA,KAAKyC,UAAL,CAAgBzC,QAAhB,EAA0B,KAA1B,EAAiCrC,MAAjC;;QACA,KAAK8E,UAAL,CAAgBzC,QAAhB,EAA0B,QAA1B,EAAoCrC,MAApC;MACD,CA9jBM;;MAgkBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI2F,UAvkBO,sBAukBWtD,QAvkBX,EAukBqBrC,MAvkBrB,EAukB6B;QAClC,IAAIqE,OAAO,GAAG,KAAKjE,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAd;;QACA,IAAI,CAACwB,OAAL,EAAc;UACZ,OAAO,IAAP;QACD;;QAED,IAAIsD,KAAK,GAAG1J,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAA7B;;QACA,IAAIiH,gBAAgB,GAAG,KAAKnB,oBAAL,CAA0BhF,QAA1B,CAAvB;;QACA,IAAIoG,QAAQ,GAAG,IAAIxF,IAAJ,GAAWC,OAAX,KAAuBmB,OAAO,CAACrB,SAA9C;QACA,IAAI8E,IAAI,GACN3B,IAAI,CAACC,GAAL,CAASoC,gBAAgB,CAACpJ,CAA1B,KAAgC+G,IAAI,CAACC,GAAL,CAASoC,gBAAgB,CAACnJ,CAA1B,CAAhC,GACI,GADJ,GAEI,GAHN;QAIA,IAAIqJ,QAAQ,GAAGF,gBAAgB,CAACV,IAAD,CAA/B;QACA,IAAIa,SAAS,GAAGhB,KAAK,CAACxI,eAAN,CAAsB2I,IAAtB,EAA4BY,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmB,CAA/C,CAAhB;QACA,IAAIE,QAAQ,GAAGH,QAAQ,KAAK,CAAb,GAAiBC,QAAQ,GAAGD,QAA5B,GAAuC,CAAtD;QAEA,IAAI/C,KAAK,GAAG;UACV1C,SAAS,EAAEqB,OAAO,CAACrB,SADT;UAEVyF,QAAQ,EAAEA,QAFA;UAGVX,IAAI,EAAEA,IAHI;UAIVa,SAAS,EAAEA,SAJD;UAKVD,QAAQ,EAAEA,QALA;UAMVE,QAAQ,EAAEA;QANA,CAAZ;QASA,OAAOlD,KAAP;MACD,CAlmBM;;MAomBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI1B,UA3mBO,sBA2mBKhC,IA3mBL,EA2mBWK,QA3mBX,EA2mBqBrC,MA3mBrB,EA2mB6B;QAClCqC,QAAQ,CAACuE,KAAT,GAAiB,KAAKS,oBAAL,CAA0BhF,QAA1B,CAAjB;;QACA,KAAKyC,UAAL,CAAgBzC,QAAhB,EAA0BL,IAA1B,EAAgCK,QAAQ,CAACrC,MAAT,IAAmBA,MAAnD;MACD,CA9mBM;;MAgnBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI6I,UAvnBO,sBAunBSxG,QAvnBT,EAunBmBrC,MAvnBnB,EAunB2B8I,UAvnB3B,EAunBuC;QAC5CzG,QAAQ,CAACuE,KAAT,GAAiB;UACfxH,CAAC,EAAEnB,EAAE,CAAC8K,IAAH,CAAQC,KAAR,CAAcC,QAAd,CAAuB5G,QAAvB,EAAiC,GAAjC,IAAwCyG,UAD5B;UAEfzJ,CAAC,EAAEpB,EAAE,CAAC8K,IAAH,CAAQC,KAAR,CAAcC,QAAd,CAAuB5G,QAAvB,EAAiC,GAAjC,IAAwCyG;QAF5B,CAAjB;QAKAzG,QAAQ,CAACuE,KAAT,CAAekB,IAAf,GACE3B,IAAI,CAACC,GAAL,CAAS/D,QAAQ,CAACuE,KAAT,CAAexH,CAAf,GAAmBiD,QAAQ,CAACuE,KAAT,CAAevH,CAA3C,IAAgD,CAAhD,GAAoD,GAApD,GAA0D,GAD5D;QAEAgD,QAAQ,CAACF,WAAT,GAAuB,OAAvB;;QACA,KAAK2C,UAAL,CAAgBzC,QAAhB,EAA0B,MAA1B,EAAkCA,QAAQ,CAACrC,MAAT,IAAmBA,MAArD;MACD,CAjoBM;;MAmoBP;AACJ;AACA;AACA;AACA;MACIkJ,UAxoBO,sBAwoB0BlJ,MAxoB1B,EAwoBkC;QACvC,IAAI8I,UAAU,GAAG7K,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B7B,WAA9C;;QACA,IAAIzB,EAAE,CAAC8K,IAAH,CAAQC,KAAR,CAAcG,WAAlB,EAA+B;UAC7B;UACAL,UAAU,GAAG7K,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B5B,oBAA1C;QACD;;QACD,KAAKyB,UAAL,GAA2B,IAAI6B,IAAJ,GAAWC,OAAX,EAA3B;QACA,IAAIkG,QAAQ,GAAG,KAAK5I,SAAL,CAAkB0D,MAAjC;;QACA,KAAK,IAAImF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAApB,EAA8BC,CAAC,EAA/B,EAAmC;UACjC,IAAIhH,QAAQ,GAAG,KAAK7B,SAAL,CAAkB6I,CAAlB,CAAf;;UACA,KAAKR,UAAL,CAAqBxG,QAArB,EAA+BrC,MAA/B,EAAuC8I,UAAvC;QACD;;QACD,KAAKtI,SAAL,GAAoB,EAApB;MACD,CArpBM;;MAupBP;AACJ;AACA;MACI8I,UA1pBO,wBA0pBkB;QACvB,IACE,KAAK9I,SAAL,CAAkB0D,MAAlB,GACAjG,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B3B,+BAF/B,EAGE;UACA3B,EAAE,CAAC8K,IAAH,CAAQC,KAAR,CAAcG,WAAd,GAA4B,IAA5B;QACD,CALD,MAKO;UACLlL,EAAE,CAAC8K,IAAH,CAAQC,KAAR,CAAcG,WAAd,GAA4B,KAA5B;QACD;;QAID,KAAKhI,UAAL,GAAoC,IAApC;MACD,CAvqBM;;MAyqBP;AACJ;AACA;AACA;AACA;MACIoI,2BA9qBO,yCA8qBuB;QAC5B,OACEtL,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAAtC,IACAvB,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,YAAxB,KAAyC,KAF3C;MAID,CAnrBM;;MAqrBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIyC,SA9rBO,qBA8rBGI,QA9rBH,EA8rBaL,IA9rBb,EA8rBmBhC,MA9rBnB,EA8rB2B;QAChC,IAAIiF,GAAJ;QACA,IAAIuE,gBAAJ;;QACA,IAAInH,QAAQ,CAACL,IAAT,KAAkB/D,EAAE,CAACQ,IAAH,CAAQc,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,EAA4CwC,IAAlE,EAAwE;UACtE,IAAI,KAAKuH,2BAAL,EAAJ,EAAwC;YACtCtE,GAAG,GAAG,IAAIhC,IAAJ,GAAWC,OAAX,EAAN;YACAsG,gBAAgB,GACdvL,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6BzB,6BAD/B;;YAEA,IACE,KAAKsB,UAAL,GAA2B,CAA3B,IACA6D,GAAG,GAAG,KAAK7D,UAAX,GAAiCoI,gBAFnC,EAGE;cACA;cACA,KAAKrI,UAAL,GAAoC,KAApC;cACA,KAAKX,SAAL,GAAoB,EAApB;cACA,KAAKY,UAAL,GAA2B,CAA3B;YACD;;YACD,IAAI,CAAC,KAAKD,UAAV,EAAwC;cACtC;cACA;cACA;cACA,IAAI,KAAKX,SAAL,CAAkB0D,MAAlB,KAA6B,CAAjC,EAAoC;gBAClC;gBACA,KAAKjD,UAAL,GAA8BgE,GAA9B;gBACAhH,EAAE,CAACoD,KAAH,CAASoI,KAAT,CAAeC,IAAf,CACE,YAAY;kBACV,IAAI,CAAC,KAAKvI,UAAV,EAAwC;oBACtC;oBACA;oBACA,KAAKmI,UAAL;;oBACA,KAAKJ,UAAL,CAAsClJ,MAAtC;kBACD;gBACF,CARH,EASE,IATF,EAUE/B,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B1B,4BAA7B,GAA4D,EAV9D;cAYD;;cACD,KAAKW,SAAL,CAAkBmJ,IAAlB,CAAuBtH,QAAvB;;cACA,KAAKnB,UAAL;;cACA,IACE+D,GAAG,GAAG,KAAKhE,UAAX,GACAhD,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B1B,4BAF/B,EAGE;gBACA,KAAKyJ,UAAL;cACD;YACF;;YACD,IAAI,KAAKnI,UAAT,EAAuC;cACrC,IAAI,KAAKX,SAAL,CAAkB0D,MAAlB,KAA6B,CAAjC,EAAoC;gBAClC,KAAK1D,SAAL,CAAkBmJ,IAAlB,CAAuBtH,QAAvB;cACD,CAHoC,CAIrC;cACA;;;cACA,KAAK6G,UAAL,CAAsClJ,MAAtC;YACD;UACF,CAlDD,MAkDO;YACL,KAAK6I,UAAL,CACExG,QADF,EAEErC,MAFF,EAGE/B,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6B7B,WAH/B;UAKD;QACF,CA1DD,MA0DO;UACL,IAAI2E,OAAO,GAAG,KAAKjE,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAd;UACAR,QAAQ,CAACuE,KAAT,GAAiB;YACfxH,CAAC,EAAE,CAACiF,OAAO,CAACb,SADG;YAEfnE,CAAC,EAAE,CAACgF,OAAO,CAACZ,SAFG;YAGfqE,IAAI,EAAE3B,IAAI,CAACC,GAAL,CAAS/B,OAAO,CAACb,SAAR,GAAoBa,OAAO,CAACZ,SAArC,IAAkD,CAAlD,GAAsD,GAAtD,GAA4D;UAHnD,CAAjB;;UAMA,KAAKqB,UAAL,CAAgBzC,QAAhB,EAA0B,MAA1B,EAAkCA,QAAQ,CAACrC,MAAT,IAAmBA,MAArD;QACD;MACF,CArwBM;;MAuwBP;AACJ;AACA;AACA;AACA;AACA;MACIwE,UA7wBO,sBA6wBMnC,QA7wBN,EA6wBgBrC,MA7wBhB,EA6wBwB;QAC7B,IAAI,CAACqC,QAAQ,CAACsB,SAAd,EAAyB;UACvB,IAAIwE,KAAK,GAAG,KAAKhE,UAAL,EAAZ;;UACA9B,QAAQ,CAAC8F,KAAT,GAAiBhC,IAAI,CAACQ,KAAL,CAAW,CAACwB,KAAK,GAAG,KAAKrH,UAAd,IAAgC,GAA3C,CAAjB;;UACA,KAAKgE,UAAL,CAAgBzC,QAAhB,EAA0B,QAA1B,EAAoC,KAAKzB,SAAzC;QACD;MACF,CAnxBM;;MAqxBP;AACJ;AACA;AACA;AACA;AACA;MACI6D,UA3xBO,sBA2xBKpC,QA3xBL,EA2xBerC,MA3xBf,EA2xBuB;QAC5B,IAAI,CAACqC,QAAQ,CAACsB,SAAd,EAAyB;UACvB,IAAI+E,QAAQ,GAAG,KAAKtE,aAAL,EAAf;;UACA,IAAI8C,KAAK,GAAGwB,QAAQ,GAAG,KAAK1H,UAA5B;UACAqB,QAAQ,CAAC6E,KAAT,GAAiBf,IAAI,CAACQ,KAAL,CAAWO,KAAK,GAAG,GAAnB,IAA0B,GAA3C;;UACA,KAAKpC,UAAL,CAAgBzC,QAAhB,EAA0B,OAA1B,EAAmC,KAAKzB,SAAxC;QACD;MACF,CAlyBM;;MAoyBP;AACJ;AACA;AACA;AACA;AACA;MACImD,UA1yBO,sBA0yBO1B,QA1yBP,EA0yBiBrC,MA1yBjB,EA0yByB;QAC9B,IAAIqE,OAAO,GAAG,KAAKjE,SAAL,CAAeiC,QAAQ,CAACQ,SAAxB,CAAd;;QACA,IAAIwB,OAAJ,EAAa;UACX,KAAKS,UAAL,CAAgBzC,QAAhB,EAA0B,SAA1B,EAAqCA,QAAQ,CAACrC,MAAT,IAAmBA,MAAxD;;UACAqE,OAAO,CAACT,YAAR,GAAuB,IAAvB;UACAS,OAAO,CAACX,KAAR,GAAgB,KAAhB;QACD;MACF,CAjzBM;;MAmzBP;AACJ;AACA;AACA;MACIZ,UAvzBO,sBAuzBYuB,OAvzBZ,EAuzBqB;QAC1B,IAAIA,OAAO,CAACT,YAAZ,EAA0B;UACxBC,MAAM,CAAC+F,YAAP,CAAoBvF,OAAO,CAACT,YAA5B;UACAS,OAAO,CAACT,YAAR,GAAuB,IAAvB;QACD;MACF,CA5zBM;;MA8zBP;AACJ;AACA;MACIiG,OAj0BO,qBAi0BG;QACR,KAAK,IAAIxF,OAAT,IAAoB,KAAKjE,SAAzB,EAAoC;UAClC,KAAK0C,UAAL,CAAwBuB,OAAxB;QACD;;QAED,KAAKnC,aAAL;;QACA,KAAKhC,SAAL,GAAuB,KAAKC,SAAL,GAAiB,IAAxC;MACD;IAx0BM;EA/FyC,CAApD;EAvBAlC,EAAE,CAACoD,KAAH,CAASC,OAAT,CAAiBC,WAAjB,CAA6BnD,aAA7B,GAA6CA,aAA7C"
}