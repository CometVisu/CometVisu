{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "statics",
    "MOUSE_TO_POINTER_MAPPING",
    "mousedown",
    "mouseup",
    "mousemove",
    "mouseout",
    "mouseover",
    "TOUCH_TO_POINTER_MAPPING",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "MSPOINTER_TO_POINTER_MAPPING",
    "MSPointerDown",
    "MSPointerMove",
    "MSPointerUp",
    "MSPointerCancel",
    "MSPointerLeave",
    "MSPointerEnter",
    "MSPointerOver",
    "MSPointerOut",
    "POINTER_TO_GESTURE_MAPPING",
    "pointerdown",
    "pointerup",
    "pointercancel",
    "pointermove",
    "LEFT_BUTTON",
    "Environment",
    "get",
    "SIM_MOUSE_DISTANCE",
    "SIM_MOUSE_DELAY",
    "__lastTouch",
    "construct",
    "target",
    "emitter",
    "__defaultTarget",
    "__emitter",
    "__eventNames",
    "__buttonStates",
    "__activeTouches",
    "_processedFlag",
    "classname",
    "substr",
    "lastIndexOf",
    "engineName",
    "docMode",
    "parseInt",
    "_initPointerObserver",
    "__nativePointerEvents",
    "_initObserver",
    "_onTouchEvent",
    "_onMouseEvent",
    "members",
    "__wrappedListener",
    "__lastButtonState",
    "__primaryIdentifier",
    "_onPointerEvent",
    "callback",
    "useEmitter",
    "lang",
    "Function",
    "listener",
    "forEach",
    "type",
    "dom",
    "Node",
    "isDocument",
    "$$emitter",
    "event",
    "Emitter",
    "on",
    "bom",
    "Event",
    "addNativeListener",
    "bind",
    "domEvent",
    "toLowerCase",
    "indexOf",
    "stopPropagation",
    "handler",
    "PointerCore",
    "getTarget",
    "evt",
    "Pointer",
    "_fireEvent",
    "changedTouches",
    "_determineActiveTouches",
    "touches",
    "length",
    "i",
    "cancelEvent",
    "identifier",
    "pointerType",
    "pointerId",
    "l",
    "touch",
    "touchTarget",
    "view",
    "document",
    "elementFromPoint",
    "clientX",
    "clientY",
    "touchProps",
    "pageX",
    "pageY",
    "screenX",
    "screenY",
    "overEvt",
    "isPrimary",
    "button",
    "buttons",
    "x",
    "y",
    "time",
    "Date",
    "getTime",
    "outEvt",
    "_isSimulatedMouseEvent",
    "which",
    "ctrlKey",
    "buttonsPressed",
    "Array",
    "sum",
    "mouseProps",
    "moveEvt",
    "push",
    "updatedActiveTouches",
    "add",
    "j",
    "timeSinceTouch",
    "dist",
    "distX",
    "Math",
    "abs",
    "distY",
    "_stopObserver",
    "removeNativeListener",
    "gestureEvent",
    "normalize",
    "srcElement",
    "ex",
    "tracker",
    "Utils",
    "then",
    "dispatchEvent",
    "promise",
    "currentTarget",
    "_stopped",
    "emit",
    "parentNode",
    "dispose"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/PointerCore.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christopher Zuendorf (czuendorf)\r\n     * Daniel Wagner (danielwagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Low-level pointer event handler.\r\n *\r\n * @require(qx.bom.client.Event)\r\n * @require(qx.bom.client.Device)\r\n */\r\nqx.Bootstrap.define(\"qx.event.handler.PointerCore\", {\r\n  extend: Object,\r\n  implement: [qx.core.IDisposable],\r\n\r\n  statics: {\r\n    MOUSE_TO_POINTER_MAPPING: {\r\n      mousedown: \"pointerdown\",\r\n      mouseup: \"pointerup\",\r\n      mousemove: \"pointermove\",\r\n      mouseout: \"pointerout\",\r\n      mouseover: \"pointerover\"\r\n    },\r\n\r\n    TOUCH_TO_POINTER_MAPPING: {\r\n      touchstart: \"pointerdown\",\r\n      touchend: \"pointerup\",\r\n      touchmove: \"pointermove\",\r\n      touchcancel: \"pointercancel\"\r\n    },\r\n\r\n    MSPOINTER_TO_POINTER_MAPPING: {\r\n      MSPointerDown: \"pointerdown\",\r\n      MSPointerMove: \"pointermove\",\r\n      MSPointerUp: \"pointerup\",\r\n      MSPointerCancel: \"pointercancel\",\r\n      MSPointerLeave: \"pointerleave\",\r\n      MSPointerEnter: \"pointerenter\",\r\n      MSPointerOver: \"pointerover\",\r\n      MSPointerOut: \"pointerout\"\r\n    },\r\n\r\n    POINTER_TO_GESTURE_MAPPING: {\r\n      pointerdown: \"gesturebegin\",\r\n      pointerup: \"gesturefinish\",\r\n      pointercancel: \"gesturecancel\",\r\n      pointermove: \"gesturemove\"\r\n    },\r\n\r\n    LEFT_BUTTON:\r\n      qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n      qx.core.Environment.get(\"browser.documentmode\") <= 8\r\n        ? 1\r\n        : 0,\r\n\r\n    SIM_MOUSE_DISTANCE: 25,\r\n\r\n    SIM_MOUSE_DELAY: 2500,\r\n\r\n    /**\r\n     * Coordinates of the last touch. This needs to be static because the target could\r\n     * change between touch and simulated mouse events. Touch events will be detected\r\n     * by one instance which moves the target. The simulated mouse events will be fired with\r\n     * a delay which causes another target and with that, another instance of this handler.\r\n     * last touch was.\r\n     */\r\n    __lastTouch: null\r\n  },\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param target {Element} element on which to listen for native touch events\r\n   * @param emitter {qx.event.Emitter?} Event emitter (used if dispatchEvent\r\n   * is not supported, e.g. in IE8)\r\n   */\r\n  construct(target, emitter) {\r\n    this.__defaultTarget = target;\r\n    this.__emitter = emitter;\r\n    this.__eventNames = [];\r\n    this.__buttonStates = [];\r\n    this.__activeTouches = [];\r\n    this._processedFlag =\r\n      \"$$qx\" +\r\n      this.classname.substr(this.classname.lastIndexOf(\".\") + 1) +\r\n      \"Processed\";\r\n\r\n    var engineName = qx.core.Environment.get(\"engine.name\");\r\n    var docMode = parseInt(qx.core.Environment.get(\"browser.documentmode\"), 10);\r\n    if (engineName == \"mshtml\" && docMode == 10) {\r\n      // listen to native prefixed events and custom unprefixed (see bug #8921)\r\n      this.__eventNames = [\r\n        \"MSPointerDown\",\r\n        \"MSPointerMove\",\r\n        \"MSPointerUp\",\r\n        \"MSPointerCancel\",\r\n        \"MSPointerOver\",\r\n        \"MSPointerOut\",\r\n        \"pointerdown\",\r\n        \"pointermove\",\r\n        \"pointerup\",\r\n        \"pointercancel\",\r\n        \"pointerover\",\r\n        \"pointerout\"\r\n      ];\r\n\r\n      this._initPointerObserver();\r\n    } else {\r\n      if (qx.core.Environment.get(\"event.mspointer\")) {\r\n        this.__nativePointerEvents = true;\r\n      }\r\n      this.__eventNames = [\r\n        \"pointerdown\",\r\n        \"pointermove\",\r\n        \"pointerup\",\r\n        \"pointercancel\",\r\n        \"pointerover\",\r\n        \"pointerout\"\r\n      ];\r\n\r\n      this._initPointerObserver();\r\n    }\r\n    if (!qx.core.Environment.get(\"event.mspointer\")) {\r\n      if (qx.core.Environment.get(\"device.touch\")) {\r\n        this.__eventNames = [\r\n          \"touchstart\",\r\n          \"touchend\",\r\n          \"touchmove\",\r\n          \"touchcancel\"\r\n        ];\r\n\r\n        this._initObserver(this._onTouchEvent);\r\n      }\r\n\r\n      this.__eventNames = [\r\n        \"mousedown\",\r\n        \"mouseup\",\r\n        \"mousemove\",\r\n        \"mouseover\",\r\n        \"mouseout\",\r\n        \"contextmenu\"\r\n      ];\r\n\r\n      this._initObserver(this._onMouseEvent);\r\n    }\r\n  },\r\n\r\n  members: {\r\n    __defaultTarget: null,\r\n    __emitter: null,\r\n    __eventNames: null,\r\n    __nativePointerEvents: false,\r\n    __wrappedListener: null,\r\n    __lastButtonState: 0,\r\n    __buttonStates: null,\r\n    __primaryIdentifier: null,\r\n    __activeTouches: null,\r\n    _processedFlag: null,\r\n\r\n    /**\r\n     * Adds listeners to native pointer events if supported\r\n     */\r\n    _initPointerObserver() {\r\n      this._initObserver(this._onPointerEvent);\r\n    },\r\n\r\n    /**\r\n     * Register native event listeners\r\n     * @param callback {Function} listener callback\r\n     * @param useEmitter {Boolean} attach listener to Emitter instead of\r\n     * native event\r\n     */\r\n    _initObserver(callback, useEmitter) {\r\n      this.__wrappedListener = qx.lang.Function.listener(callback, this);\r\n      this.__eventNames.forEach(\r\n        function (type) {\r\n          if (useEmitter && qx.dom.Node.isDocument(this.__defaultTarget)) {\r\n            if (!this.__defaultTarget.$$emitter) {\r\n              this.__defaultTarget.$$emitter = new qx.event.Emitter();\r\n            }\r\n            this.__defaultTarget.$$emitter.on(type, this.__wrappedListener);\r\n          } else {\r\n            qx.bom.Event.addNativeListener(\r\n              this.__defaultTarget,\r\n              type,\r\n              this.__wrappedListener\r\n            );\r\n          }\r\n        }.bind(this)\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Handler for native pointer events\r\n     * @param domEvent {Event}  Native DOM event\r\n     */\r\n    _onPointerEvent(domEvent) {\r\n      if (\r\n        !qx.core.Environment.get(\"event.mspointer\") ||\r\n        // workaround for bug #8533\r\n        (qx.core.Environment.get(\"browser.documentmode\") === 10 &&\r\n          domEvent.type.toLowerCase().indexOf(\"ms\") == -1)\r\n      ) {\r\n        return;\r\n      }\r\n      if (!this.__nativePointerEvents) {\r\n        domEvent.stopPropagation();\r\n      }\r\n      var type =\r\n        qx.event.handler.PointerCore.MSPOINTER_TO_POINTER_MAPPING[\r\n          domEvent.type\r\n        ] || domEvent.type;\r\n      var target = qx.bom.Event.getTarget(domEvent);\r\n      var evt = new qx.event.type.dom.Pointer(type, domEvent);\r\n      this._fireEvent(evt, type, target);\r\n    },\r\n\r\n    /**\r\n     * Handler for touch events\r\n     * @param domEvent {Event} Native DOM event\r\n     */\r\n    _onTouchEvent(domEvent) {\r\n      if (domEvent[this._processedFlag]) {\r\n        return;\r\n      }\r\n      domEvent[this._processedFlag] = true;\r\n      var type =\r\n        qx.event.handler.PointerCore.TOUCH_TO_POINTER_MAPPING[domEvent.type];\r\n      var changedTouches = domEvent.changedTouches;\r\n\r\n      this._determineActiveTouches(domEvent.type, changedTouches);\r\n\r\n      // Detecting vacuum touches. (Touches which are not active anymore, but did not fire a touchcancel event)\r\n      if (domEvent.touches.length < this.__activeTouches.length) {\r\n        // Firing pointer cancel for previously active touches.\r\n        for (var i = this.__activeTouches.length - 1; i >= 0; i--) {\r\n          var cancelEvent = new qx.event.type.dom.Pointer(\r\n            \"pointercancel\",\r\n            domEvent,\r\n            {\r\n              identifier: this.__activeTouches[i].identifier,\r\n              target: domEvent.target,\r\n              pointerType: \"touch\",\r\n              pointerId: this.__activeTouches[i].identifier + 2\r\n            }\r\n          );\r\n\r\n          this._fireEvent(cancelEvent, \"pointercancel\", domEvent.target);\r\n        }\r\n\r\n        // Reset primary identifier\r\n        this.__primaryIdentifier = null;\r\n\r\n        // cleanup of active touches array.\r\n        this.__activeTouches = [];\r\n\r\n        // Do nothing after pointer cancel.\r\n        return;\r\n      }\r\n\r\n      if (domEvent.type == \"touchstart\" && this.__primaryIdentifier === null) {\r\n        this.__primaryIdentifier = changedTouches[0].identifier;\r\n      }\r\n\r\n      for (var i = 0, l = changedTouches.length; i < l; i++) {\r\n        var touch = changedTouches[i];\r\n\r\n        var touchTarget =\r\n          domEvent.view.document.elementFromPoint(\r\n            touch.clientX,\r\n            touch.clientY\r\n          ) || domEvent.target;\r\n\r\n        var touchProps = {\r\n          clientX: touch.clientX,\r\n          clientY: touch.clientY,\r\n          pageX: touch.pageX,\r\n          pageY: touch.pageY,\r\n          identifier: touch.identifier,\r\n          screenX: touch.screenX,\r\n          screenY: touch.screenY,\r\n          target: touchTarget,\r\n          pointerType: \"touch\",\r\n          pointerId: touch.identifier + 2\r\n        };\r\n\r\n        if (domEvent.type == \"touchstart\") {\r\n          // Fire pointerenter before pointerdown\r\n          var overEvt = new qx.event.type.dom.Pointer(\r\n            \"pointerover\",\r\n            domEvent,\r\n            touchProps\r\n          );\r\n\r\n          this._fireEvent(overEvt, \"pointerover\", touchProps.target);\r\n        }\r\n\r\n        if (touch.identifier == this.__primaryIdentifier) {\r\n          touchProps.isPrimary = true;\r\n          // always simulate left click on touch interactions for primary pointer\r\n          touchProps.button = 0;\r\n          touchProps.buttons = 1;\r\n          qx.event.handler.PointerCore.__lastTouch = {\r\n            x: touch.clientX,\r\n            y: touch.clientY,\r\n            time: new Date().getTime()\r\n          };\r\n        }\r\n\r\n        var evt = new qx.event.type.dom.Pointer(type, domEvent, touchProps);\r\n\r\n        this._fireEvent(evt, type, touchProps.target);\r\n\r\n        if (domEvent.type == \"touchend\" || domEvent.type == \"touchcancel\") {\r\n          // Fire pointerout after pointerup\r\n          var outEvt = new qx.event.type.dom.Pointer(\r\n            \"pointerout\",\r\n            domEvent,\r\n            touchProps\r\n          );\r\n\r\n          // fire on the original target to make sure over / out event are on the same target\r\n          this._fireEvent(outEvt, \"pointerout\", domEvent.target);\r\n\r\n          if (this.__primaryIdentifier == touch.identifier) {\r\n            this.__primaryIdentifier = null;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handler for touch events\r\n     * @param domEvent {Event} Native DOM event\r\n     */\r\n    _onMouseEvent(domEvent) {\r\n      if (domEvent[this._processedFlag]) {\r\n        return;\r\n      }\r\n      domEvent[this._processedFlag] = true;\r\n\r\n      if (this._isSimulatedMouseEvent(domEvent.clientX, domEvent.clientY)) {\r\n        /*\r\n          Simulated MouseEvents are fired by browsers directly after TouchEvents\r\n          for improving compatibility. They should not trigger PointerEvents.\r\n        */\r\n        return;\r\n      }\r\n\r\n      if (domEvent.type == \"mousedown\") {\r\n        this.__buttonStates[domEvent.which] = 1;\r\n      } else if (domEvent.type == \"mouseup\") {\r\n        if (\r\n          qx.core.Environment.get(\"os.name\") == \"osx\" &&\r\n          qx.core.Environment.get(\"engine.name\") == \"gecko\"\r\n        ) {\r\n          if (this.__buttonStates[domEvent.which] != 1 && domEvent.ctrlKey) {\r\n            this.__buttonStates[1] = 0;\r\n          }\r\n        }\r\n\r\n        this.__buttonStates[domEvent.which] = 0;\r\n      }\r\n\r\n      var type =\r\n        qx.event.handler.PointerCore.MOUSE_TO_POINTER_MAPPING[domEvent.type];\r\n      var target = qx.bom.Event.getTarget(domEvent);\r\n\r\n      var buttonsPressed = qx.lang.Array.sum(this.__buttonStates);\r\n\r\n      var mouseProps = { pointerType: \"mouse\", pointerId: 1 };\r\n\r\n      // if the button state changes but not from or to zero\r\n      if (\r\n        this.__lastButtonState != buttonsPressed &&\r\n        buttonsPressed !== 0 &&\r\n        this.__lastButtonState !== 0\r\n      ) {\r\n        var moveEvt = new qx.event.type.dom.Pointer(\r\n          \"pointermove\",\r\n          domEvent,\r\n          mouseProps\r\n        );\r\n\r\n        this._fireEvent(moveEvt, \"pointermove\", target);\r\n      }\r\n      this.__lastButtonState = buttonsPressed;\r\n\r\n      // pointerdown should only trigger form the first pressed button.\r\n      if (domEvent.type == \"mousedown\" && buttonsPressed > 1) {\r\n        return;\r\n      }\r\n\r\n      // pointerup should only trigger if user releases all buttons.\r\n      if (domEvent.type == \"mouseup\" && buttonsPressed > 0) {\r\n        return;\r\n      }\r\n\r\n      if (domEvent.type == \"contextmenu\") {\r\n        this.__buttonStates[domEvent.which] = 0;\r\n        return;\r\n      }\r\n\r\n      var evt = new qx.event.type.dom.Pointer(type, domEvent, mouseProps);\r\n      this._fireEvent(evt, type, target);\r\n    },\r\n\r\n    /**\r\n     * Determines the current active touches.\r\n     * @param type {String} the DOM event type.\r\n     * @param changedTouches {Array} the current changed touches.\r\n     */\r\n    _determineActiveTouches(type, changedTouches) {\r\n      if (type == \"touchstart\") {\r\n        for (var i = 0; i < changedTouches.length; i++) {\r\n          this.__activeTouches.push(changedTouches[i]);\r\n        }\r\n      } else if (type == \"touchend\" || type == \"touchcancel\") {\r\n        var updatedActiveTouches = [];\r\n\r\n        for (var i = 0; i < this.__activeTouches.length; i++) {\r\n          var add = true;\r\n          for (var j = 0; j < changedTouches.length; j++) {\r\n            if (\r\n              this.__activeTouches[i].identifier == changedTouches[j].identifier\r\n            ) {\r\n              add = false;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (add) {\r\n            updatedActiveTouches.push(this.__activeTouches[i]);\r\n          }\r\n        }\r\n        this.__activeTouches = updatedActiveTouches;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Detects whether the given MouseEvent position is identical to the previously fired TouchEvent position.\r\n     * If <code>true</code> the corresponding event can be identified as simulated.\r\n     * @param x {Integer} current mouse x\r\n     * @param y {Integer} current mouse y\r\n     * @return {Boolean} <code>true</code> if passed mouse position is a synthetic MouseEvent.\r\n     */\r\n    _isSimulatedMouseEvent(x, y) {\r\n      var touch = qx.event.handler.PointerCore.__lastTouch;\r\n      if (touch) {\r\n        var timeSinceTouch = new Date().getTime() - touch.time;\r\n        var dist = qx.event.handler.PointerCore.SIM_MOUSE_DISTANCE;\r\n        var distX = Math.abs(x - qx.event.handler.PointerCore.__lastTouch.x);\r\n        var distY = Math.abs(y - qx.event.handler.PointerCore.__lastTouch.y);\r\n        if (timeSinceTouch < qx.event.handler.PointerCore.SIM_MOUSE_DELAY) {\r\n          if (distX < dist || distY < dist) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Removes native pointer event listeners.\r\n     */\r\n    _stopObserver() {\r\n      for (var i = 0; i < this.__eventNames.length; i++) {\r\n        qx.bom.Event.removeNativeListener(\r\n          this.__defaultTarget,\r\n          this.__eventNames[i],\r\n          this.__wrappedListener\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fire a touch event with the given parameters\r\n     *\r\n     * @param domEvent {Event} DOM event\r\n     * @param type {String ? null} type of the event\r\n     * @param target {Element ? null} event target\r\n     * @return {qx.Promise?} a promise, if one was returned by event handlers\r\n     */\r\n    _fireEvent(domEvent, type, target) {\r\n      target = target || domEvent.target;\r\n      type = type || domEvent.type;\r\n\r\n      var gestureEvent;\r\n      if (\r\n        (domEvent.pointerType !== \"mouse\" ||\r\n          domEvent.button <= qx.event.handler.PointerCore.LEFT_BUTTON) &&\r\n        (type == \"pointerdown\" || type == \"pointerup\" || type == \"pointermove\")\r\n      ) {\r\n        gestureEvent = new qx.event.type.dom.Pointer(\r\n          qx.event.handler.PointerCore.POINTER_TO_GESTURE_MAPPING[type],\r\n          domEvent\r\n        );\r\n\r\n        qx.event.type.dom.Pointer.normalize(gestureEvent);\r\n        try {\r\n          gestureEvent.srcElement = target;\r\n        } catch (ex) {\r\n          // Nothing - strict mode prevents writing to read only properties\r\n        }\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"event.dispatchevent\")) {\r\n        var tracker = {};\r\n        if (!this.__nativePointerEvents) {\r\n          qx.event.Utils.then(tracker, function () {\r\n            return target.dispatchEvent(domEvent);\r\n          });\r\n        }\r\n        if (gestureEvent) {\r\n          qx.event.Utils.then(tracker, function () {\r\n            return target.dispatchEvent(gestureEvent);\r\n          });\r\n        }\r\n        return tracker.promise;\r\n      } else {\r\n        if (\r\n          qx.core.Environment.get(\"browser.name\") === \"msie\" &&\r\n          qx.core.Environment.get(\"browser.version\") < 9\r\n        ) {\r\n          // ensure compatibility with native events for IE8\r\n          try {\r\n            domEvent.srcElement = target;\r\n          } catch (ex) {\r\n            // Nothing - strict mode prevents writing to read only properties\r\n          }\r\n        }\r\n\r\n        while (target) {\r\n          if (target.$$emitter) {\r\n            domEvent.currentTarget = target;\r\n            if (!domEvent._stopped) {\r\n              target.$$emitter.emit(type, domEvent);\r\n            }\r\n            if (gestureEvent && !gestureEvent._stopped) {\r\n              gestureEvent.currentTarget = target;\r\n              target.$$emitter.emit(gestureEvent.type, gestureEvent);\r\n            }\r\n          }\r\n          target = target.parentNode;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Dispose this object\r\n     */\r\n    dispose() {\r\n      this._stopObserver();\r\n      this.__defaultTarget = this.__emitter = null;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}