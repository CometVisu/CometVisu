{
  "className": "qx.event.handler.TouchCore",
  "packageName": "qx.event.handler",
  "name": "TouchCore",
  "superClass": "Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 740
      },
      "end": {
        "line": 491,
        "column": 3,
        "index": 15173
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Listens for native touch events and fires composite events like \"tap\" and\n \"swipe\"</p>"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.event.*"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "TAP_MAX_DISTANCE": {
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1076
        },
        "end": {
          "line": 37,
          "column": 79,
          "index": 1151
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} The maximum distance of a tap. Only if the x or y distance of\n      the performed tap is less or equal the value of this constant, a tap\n      event is fired."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SWIPE_DIRECTION": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1230
        },
        "end": {
          "line": 43,
          "column": 5,
          "index": 1309
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} The direction of a swipe relative to the axis"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SWIPE_MIN_DISTANCE": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1537
        },
        "end": {
          "line": 50,
          "column": 63,
          "index": 1621
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} The minimum distance of a swipe. Only if the x or y distance\n      of the performed swipe is greater as or equal the value of this\n      constant, a swipe event is fired."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SWIPE_MIN_VELOCITY": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1842
        },
        "end": {
          "line": 56,
          "column": 25,
          "index": 1863
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} The minimum velocity of a swipe. Only if the velocity of the\n      performed swipe is greater as or equal the value of this constant, a\n      swipe event is fired."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "LONGTAP_TIME": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1971
        },
        "end": {
          "line": 61,
          "column": 71,
          "index": 2038
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} The time delta in milliseconds to fire a long tap event."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 70,
        "column": 2,
        "index": 2240
      },
      "end": {
        "line": 77,
        "column": 3,
        "index": 2431
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new instance</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "target {Element} element on which to listen for native touch events",
          "paramName": "target",
          "description": " element on which to listen for native touch events",
          "type": "qx.event.handler.Element"
        },
        {
          "name": "@param",
          "body": "emitter {qx.event.Emitter} Event emitter object",
          "paramName": "emitter",
          "description": " Event emitter object",
          "type": "qx.event.Emitter"
        }
      ]
    }
  },
  "members": {
    "__target": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2454
        },
        "end": {
          "line": 80,
          "column": 18,
          "index": 2468
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__emitter": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2475
        },
        "end": {
          "line": 81,
          "column": 19,
          "index": 2490
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__onTouchEventWrapper": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2497
        },
        "end": {
          "line": 82,
          "column": 31,
          "index": 2524
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__originalTarget": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2533
        },
        "end": {
          "line": 84,
          "column": 26,
          "index": 2555
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__touchStartPosition": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2564
        },
        "end": {
          "line": 86,
          "column": 30,
          "index": 2590
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__startTime": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2597
        },
        "end": {
          "line": 87,
          "column": 21,
          "index": 2614
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__beginScalingDistance": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2623
        },
        "end": {
          "line": 89,
          "column": 32,
          "index": 2651
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__beginRotation": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2658
        },
        "end": {
          "line": 90,
          "column": 25,
          "index": 2679
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__pointers": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2688
        },
        "end": {
          "line": 92,
          "column": 20,
          "index": 2704
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__touchEventNames": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2713
        },
        "end": {
          "line": 94,
          "column": 27,
          "index": 2736
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_initTouchObserver": {
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 3018
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 4158
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native touch event listeners.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopTouchObserver": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4440
        },
        "end": {
          "line": 169,
          "column": 5,
          "index": 4701
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native touch event listeners.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onTouchEvent": {
      "location": {
        "start": {
          "line": 182,
          "column": 4,
          "index": 5053
        },
        "end": {
          "line": 184,
          "column": 5,
          "index": 5133
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for native touch events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} The touch event from the browser.",
            "paramName": "domEvent",
            "description": " The touch event from the browser.",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getScalingDistance": {
      "location": {
        "start": {
          "line": 192,
          "column": 4,
          "index": 5399
        },
        "end": {
          "line": 197,
          "column": 5,
          "index": 5582
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the scaling distance between two touches.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touch0 {Event} The touch event from the browser.",
            "paramName": "touch0",
            "description": " The touch event from the browser.",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "touch1 {Event} The touch event from the browser.",
            "paramName": "touch1",
            "description": " The touch event from the browser.",
            "type": "Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the calculated distance.",
            "type": "Number",
            "description": " the calculated distance."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getRotationAngle": {
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5840
        },
        "end": {
          "line": 209,
          "column": 5,
          "index": 6020
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the rotation between two touches.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touch0 {Event} The touch event from the browser.",
            "paramName": "touch0",
            "description": " The touch event from the browser.",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "touch1 {Event} The touch event from the browser.",
            "paramName": "touch1",
            "description": " The touch event from the browser.",
            "type": "Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the calculated rotation.",
            "type": "Number",
            "description": " the calculated rotation."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_calcTouchesDelta": {
      "location": {
        "start": {
          "line": 217,
          "column": 4,
          "index": 6448
        },
        "end": {
          "line": 223,
          "column": 5,
          "index": 6647
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the delta of the touch position relative to its position when <code>touchstart/code&gt; event occurred.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touches {Array} an array with the current active touches, provided by <code>touchmove/code> event.",
            "paramName": "touches",
            "description": " an array with the current active touches, provided by <code>touchmove/code> event.",
            "type": "Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array containing objects with the calculated delta as <code>x</code>,\n <code>y</code> and the identifier of the corresponding touch.",
            "type": "Array",
            "description": " an array containing objects with the calculated delta as <code>x</code>,\n <code>y</code> and the identifier of the corresponding touch."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_calcSingleTouchDelta": {
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 7092
        },
        "end": {
          "line": 253,
          "column": 5,
          "index": 7821
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the delta of one single touch position relative to its position when <code>touchstart/code&gt; event occurred.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touch {Event} the current active touch, provided by <code>touchmove/code> event.",
            "paramName": "touch",
            "description": " the current active touch, provided by <code>touchmove/code> event.",
            "type": "Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} a map containing deltaX as <code>x</code>, deltaY as <code>y</code>, the direction of the movement as <code>axis</code> and the touch identifier as <code>identifier</code>.",
            "type": "Map",
            "description": " a map containing deltaX as <code>x</code>, deltaY as <code>y</code>, the direction of the movement as <code>axis</code> and the touch identifier as <code>identifier</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_commonTouchEventHandler": {
      "location": {
        "start": {
          "line": 261,
          "column": 4,
          "index": 7988
        },
        "end": {
          "line": 342,
          "column": 5,
          "index": 10600
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called by an event handler.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String ? null} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_detectTouchesByPointer": {
      "location": {
        "start": {
          "line": 351,
          "column": 4,
          "index": 10925
        },
        "end": {
          "line": 365,
          "column": 5,
          "index": 11364
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an array with all current used touches out of multiple serial pointer events.\n Needed because pointerEvents do not provide a touch list.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String ? null} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} touch list array.",
            "type": "Array",
            "description": " touch list array."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_mapPointerEvent": {
      "location": {
        "start": {
          "line": 372,
          "column": 4,
          "index": 11566
        },
        "end": {
          "line": 386,
          "column": 5,
          "index": 11999
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maps a pointer event type to the corresponding touch event type.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String} the event type to parse.",
            "paramName": "type",
            "description": " the event type to parse.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the parsed event name.",
            "type": "String",
            "description": " the parsed event name."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getTarget": {
      "location": {
        "start": {
          "line": 394,
          "column": 4,
          "index": 12155
        },
        "end": {
          "line": 419,
          "column": 5,
          "index": 13067
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the target of the event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} Event target",
            "type": "qx.event.handler.Element",
            "description": " Event target"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__evaluateTarget": {
      "location": {
        "start": {
          "line": 428,
          "column": 4,
          "index": 13417
        },
        "end": {
          "line": 455,
          "column": 5,
          "index": 14312
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method fixes \"pointer-events:none\" for Internet Explorer 10.\n Checks which elements are placed to position x/y and traverses the array\n till one element has no \"pointer-events:none\" inside its style attribute.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element|null} Event target",
            "type": "Element|null",
            "description": " Event target"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_fireEvent": {
      "location": {
        "start": {
          "line": 464,
          "column": 4,
          "index": 14548
        },
        "end": {
          "line": 474,
          "column": 5,
          "index": 14825
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fire a touch event with the given parameters</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String ? null} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element ? null} event target",
            "paramName": "target",
            "description": " event target",
            "optional": true,
            "defaultValue": "null",
            "type": "Element"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "dispose": {
      "location": {
        "start": {
          "line": 479,
          "column": 4,
          "index": 14880
        },
        "end": {
          "line": 489,
          "column": 5,
          "index": 15163
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Dispose this object</p>"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.IDisposable",
      "appearsIn": [
        "qx.core.IDisposable"
      ]
    }
  },
  "descendants": [
    "qx.event.handler.Touch"
  ]
}