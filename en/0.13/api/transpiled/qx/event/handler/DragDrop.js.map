{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "constructor",
    "call",
    "__manager",
    "__root",
    "getWindow",
    "document",
    "documentElement",
    "addListener",
    "_onLongtap",
    "_onPointerdown",
    "Registration",
    "window",
    "_onWindowBlur",
    "__rebuildStructures",
    "statics",
    "PRIORITY",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "dragstart",
    "dragend",
    "dragover",
    "dragleave",
    "drop",
    "drag",
    "dragchange",
    "droprequest",
    "IGNORE_CAN_HANDLE",
    "ALLOWED_BUTTONS",
    "MIN_DRAG_DISTANCE",
    "properties",
    "cursor",
    "check",
    "nullable",
    "init",
    "members",
    "__dropTarget",
    "__dragTarget",
    "__types",
    "__actions",
    "__keys",
    "__cache",
    "__currentType",
    "__currentAction",
    "__sessionActive",
    "__validDrop",
    "__validAction",
    "__dragTargetWidget",
    "__startConfig",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "addType",
    "addAction",
    "action",
    "supportsType",
    "supportsAction",
    "setDropAllowed",
    "isAllowed",
    "__detectAction",
    "getData",
    "Error",
    "__fireEvent",
    "getDataAsync",
    "tracker",
    "self",
    "Utils",
    "then",
    "getCurrentAction",
    "getCurrentActionAsync",
    "Environment",
    "select",
    "_true",
    "Promise",
    "resolve",
    "_false",
    "classname",
    "getDragTarget",
    "addData",
    "data",
    "getCurrentType",
    "isSessionActive",
    "__P_218_2",
    "__P_218_16",
    "get",
    "reject",
    "actions",
    "keys",
    "current",
    "Shift",
    "Control",
    "alias",
    "Alt",
    "copy",
    "move",
    "old",
    "validAction",
    "__P_218_17",
    "relatedTarget",
    "cancelable",
    "original",
    "async",
    "dragEvent",
    "createEvent",
    "Drag",
    "setRelatedTarget",
    "result",
    "dispatchEvent",
    "undefined",
    "getDefaultPrevented",
    "__findDraggable",
    "__P_218_18",
    "elem",
    "nodeType",
    "getAttribute",
    "parentNode",
    "__findDroppable",
    "__P_218_19",
    "clearSession",
    "removeListener",
    "_onPointermove",
    "_onPointerup",
    "_onKeyDown",
    "_onKeyUp",
    "_onKeyPress",
    "_onRoll",
    "removeState",
    "e",
    "getPointerType",
    "_start",
    "isButtonOk",
    "handler",
    "DragDrop",
    "indexOf",
    "getButton",
    "isPrimary",
    "getTarget",
    "draggable",
    "widgetOriginalTarget",
    "ui",
    "Widget",
    "getWidgetByElement",
    "isAnonymous",
    "getLayoutParent",
    "addState",
    "getOriginalTarget",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "delta",
    "_getDelta",
    "distance",
    "Math",
    "abs",
    "x",
    "y",
    "el",
    "getNativeEvent",
    "view",
    "elementFromPoint",
    "getCursor",
    "DragDropCursor",
    "getInstance",
    "cursorEl",
    "getContentElement",
    "getDomElement",
    "contains",
    "display",
    "bom",
    "element",
    "Style",
    "set",
    "droppable",
    "dropLeaveTarget",
    "innerTracker",
    "validDrop",
    "isCtrlPressed",
    "isShiftPressed",
    "isAltPressed",
    "deltaX",
    "deltaY",
    "stopPropagation",
    "stop",
    "iden",
    "getKeyIdentifier",
    "destruct",
    "defer",
    "addHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/DragDrop.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Event handler, which supports drag events on DOM elements.\r\n *\r\n * NOTE: Instances of this class must be disposed of after use\r\n *\r\n * @require(qx.event.handler.Gesture)\r\n * @require(qx.event.handler.Keyboard)\r\n * @require(qx.event.handler.Capture)\r\n */\r\nqx.Class.define(\"qx.event.handler.DragDrop\", {\r\n  extend: qx.core.Object,\r\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param manager {qx.event.Manager} Event manager for the window to use\r\n   */\r\n  construct(manager) {\r\n    super();\r\n\r\n    // Define shorthands\r\n    this.__manager = manager;\r\n    this.__root = manager.getWindow().document.documentElement;\r\n\r\n    // Initialize listener\r\n    this.__manager.addListener(this.__root, \"longtap\", this._onLongtap, this);\r\n    this.__manager.addListener(\r\n      this.__root,\r\n      \"pointerdown\",\r\n      this._onPointerdown,\r\n      this,\r\n      true\r\n    );\r\n\r\n    qx.event.Registration.addListener(window, \"blur\", this._onWindowBlur, this);\r\n\r\n    // Initialize data structures\r\n    this.__rebuildStructures();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      dragstart: 1,\r\n      dragend: 1,\r\n      dragover: 1,\r\n      dragleave: 1,\r\n      drop: 1,\r\n      drag: 1,\r\n      dragchange: 1,\r\n      droprequest: 1\r\n    },\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: true,\r\n\r\n    /**\r\n     * Array of strings holding the names of the allowed mouse buttons\r\n     * for Drag & Drop. The default is \"left\" but could be extended with\r\n     * \"middle\" or \"right\"\r\n     */\r\n    ALLOWED_BUTTONS: [\"left\"],\r\n\r\n    /**\r\n     * The distance needed to change the mouse position before a drag session start.\r\n     */\r\n    MIN_DRAG_DISTANCE: 5\r\n  },\r\n\r\n  properties: {\r\n    /**\r\n     * Widget instance of the drag & drop cursor. If non is given, the default\r\n     * {@link qx.ui.core.DragDropCursor} will be used.\r\n     */\r\n    cursor: {\r\n      check: \"qx.ui.core.Widget\",\r\n      nullable: true,\r\n      init: null\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __manager: null,\r\n    __root: null,\r\n    __dropTarget: null,\r\n    __dragTarget: null,\r\n    __types: null,\r\n    __actions: null,\r\n    __keys: null,\r\n    __cache: null,\r\n    __currentType: null,\r\n    __currentAction: null,\r\n    __sessionActive: false,\r\n    __validDrop: false,\r\n    __validAction: false,\r\n    __dragTargetWidget: null,\r\n    __startConfig: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {},\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Registers a supported type\r\n     *\r\n     * @param type {String} The type to add\r\n     */\r\n    addType(type) {\r\n      this.__types[type] = true;\r\n    },\r\n\r\n    /**\r\n     * Registers a supported action. One of <code>move</code>,\r\n     * <code>copy</code> or <code>alias</code>.\r\n     *\r\n     * @param action {String} The action to add\r\n     */\r\n    addAction(action) {\r\n      this.__actions[action] = true;\r\n    },\r\n\r\n    /**\r\n     * Whether the current drag target supports the given type\r\n     *\r\n     * @param type {String} Any type\r\n     * @return {Boolean} Whether the type is supported\r\n     */\r\n    supportsType(type) {\r\n      return !!this.__types[type];\r\n    },\r\n\r\n    /**\r\n     * Whether the current drag target supports the given action\r\n     *\r\n     * @param type {String} Any type\r\n     * @return {Boolean} Whether the action is supported\r\n     */\r\n    supportsAction(type) {\r\n      return !!this.__actions[type];\r\n    },\r\n\r\n    /**\r\n     * Whether the current drop target allows the current drag target.\r\n     *\r\n     * @param isAllowed {Boolean} False if a drop should be disallowed\r\n     */\r\n    setDropAllowed(isAllowed) {\r\n      this.__validDrop = isAllowed;\r\n      this.__detectAction();\r\n    },\r\n\r\n    /**\r\n     * Returns the data of the given type during the <code>drop</code> event\r\n     * on the drop target. This method fires a <code>droprequest</code> at\r\n     * the drag target which should be answered by calls to {@link #addData}.\r\n     *\r\n     * Note that this is a synchronous method and if any of the drag and drop\r\n     * events handlers are implemented using Promises, this may fail; @see\r\n     * `getDataAsync`.\r\n     *\r\n     * @param type {String} Any supported type\r\n     * @return {var} The result data in a promise\r\n     */\r\n    getData(type) {\r\n      if (!this.__validDrop || !this.__dropTarget) {\r\n        throw new Error(\r\n          \"This method must not be used outside the drop event listener!\"\r\n        );\r\n      }\r\n\r\n      if (!this.__types[type]) {\r\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\r\n      }\r\n\r\n      if (!this.__cache[type]) {\r\n        this.__currentType = type;\r\n        this.__fireEvent(\r\n          \"droprequest\",\r\n          this.__dragTarget,\r\n          this.__dropTarget,\r\n          false,\r\n          false\r\n        );\r\n      }\r\n\r\n      if (!this.__cache[type]) {\r\n        throw new Error(\r\n          \"Please use a droprequest listener to the drag source to fill the manager with data!\"\r\n        );\r\n      }\r\n\r\n      return this.__cache[type] || null;\r\n    },\r\n\r\n    /**\r\n     * Returns the data of the given type during the <code>drop</code> event\r\n     * on the drop target. This method fires a <code>droprequest</code> at\r\n     * the drag target which should be answered by calls to {@link #addData}.\r\n     *\r\n     * @param type {String} Any supported type\r\n     * @return {qx.Promise} The result data in a promise\r\n     */\r\n    getDataAsync(type) {\r\n      if (!this.__validDrop || !this.__dropTarget) {\r\n        throw new Error(\r\n          \"This method must not be used outside the drop event listener!\"\r\n        );\r\n      }\r\n\r\n      if (!this.__types[type]) {\r\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\r\n      }\r\n\r\n      var tracker = {};\r\n      var self = this;\r\n      if (!this.__cache[type]) {\r\n        qx.event.Utils.then(tracker, function () {\r\n          self.__currentType = type;\r\n          return self.__fireEvent(\r\n            \"droprequest\",\r\n            self.__dragTarget,\r\n            self.__dropTarget,\r\n            false\r\n          );\r\n        });\r\n      }\r\n\r\n      return qx.event.Utils.then(tracker, function () {\r\n        if (!this.__cache[type]) {\r\n          throw new Error(\r\n            \"Please use a droprequest listener to the drag source to fill the manager with data!\"\r\n          );\r\n        }\r\n\r\n        return this.__cache[type] || null;\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns the currently selected action (by user keyboard modifiers)\r\n     *\r\n     * @return {String} One of <code>move</code>, <code>copy</code> or\r\n     *    <code>alias</code>\r\n     */\r\n    getCurrentAction() {\r\n      this.__detectAction();\r\n      return this.__currentAction;\r\n    },\r\n\r\n    /**\r\n     * Returns the currently selected action (by user keyboard modifiers)\r\n     *\r\n     * @return {qx.Promise|String} One of <code>move</code>, <code>copy</code> or\r\n     *    <code>alias</code>\r\n     */\r\n    getCurrentActionAsync: qx.core.Environment.select(\"qx.promise\", {\r\n      true() {\r\n        var self = this;\r\n\r\n        return qx.Promise.resolve(self.__detectAction()).then(function () {\r\n          return self.__currentAction;\r\n        });\r\n      },\r\n      false() {\r\n        throw new Error(\r\n          this.classname +\r\n            \".getCurrentActionAsync not supported because qx.promise==false\"\r\n        );\r\n      }\r\n    }),\r\n\r\n    /**\r\n     * Returns the widget which has been the target of the drag start.\r\n     * @return {qx.ui.core.Widget} The widget on which the drag started.\r\n     */\r\n    getDragTarget() {\r\n      return this.__dragTargetWidget;\r\n    },\r\n\r\n    /**\r\n     * Adds data of the given type to the internal storage. The data\r\n     * is available until the <code>dragend</code> event is fired.\r\n     *\r\n     * @param type {String} Any valid type\r\n     * @param data {var} Any data to store\r\n     */\r\n    addData(type, data) {\r\n      this.__cache[type] = data;\r\n    },\r\n\r\n    /**\r\n     * Returns the type which was requested last.\r\n     *\r\n     * @return {String} The last requested data type\r\n     */\r\n    getCurrentType() {\r\n      return this.__currentType;\r\n    },\r\n\r\n    /**\r\n     * Returns if a drag session is currently active\r\n     *\r\n     * @return {Boolean} active drag session\r\n     */\r\n    isSessionActive() {\r\n      return this.__sessionActive;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      INTERNAL UTILS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Rebuilds the internal data storage used during a drag&drop session\r\n     */\r\n    __rebuildStructures() {\r\n      this.__types = {};\r\n      this.__actions = {};\r\n      this.__keys = {};\r\n      this.__cache = {};\r\n    },\r\n\r\n    /**\r\n     * Detects the current action and stores it under the private\r\n     * field <code>__currentAction</code>. Also fires the event\r\n     * <code>dragchange</code> on every modification.\r\n     *\r\n     * @return {qx.Promise|null}\r\n     */\r\n    __detectAction() {\r\n      if (this.__dragTarget == null) {\r\n        if (qx.core.Environment.get(\"qx.promise\")) {\r\n          return qx.Promise.reject();\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      var actions = this.__actions;\r\n      var keys = this.__keys;\r\n      var current = null;\r\n\r\n      if (this.__validDrop) {\r\n        if (keys.Shift && keys.Control && actions.alias) {\r\n          current = \"alias\";\r\n        } else if (keys.Shift && keys.Alt && actions.copy) {\r\n          current = \"copy\";\r\n        } else if (keys.Shift && actions.move) {\r\n          current = \"move\";\r\n        } else if (keys.Alt && actions.alias) {\r\n          current = \"alias\";\r\n        } else if (keys.Control && actions.copy) {\r\n          current = \"copy\";\r\n        } else if (actions.move) {\r\n          current = \"move\";\r\n        } else if (actions.copy) {\r\n          current = \"copy\";\r\n        } else if (actions.alias) {\r\n          current = \"alias\";\r\n        }\r\n      }\r\n\r\n      var self = this;\r\n      var tracker = {};\r\n      var old = this.__currentAction;\r\n      if (current != old) {\r\n        if (this.__dropTarget) {\r\n          qx.event.Utils.catch(function () {\r\n            self.__validAction = false;\r\n            current = null;\r\n          });\r\n          qx.event.Utils.then(tracker, function () {\r\n            self.__currentAction = current;\r\n            return self.__fireEvent(\r\n              \"dragchange\",\r\n              self.__dropTarget,\r\n              self.__dragTarget,\r\n              true\r\n            );\r\n          });\r\n          qx.event.Utils.then(tracker, function (validAction) {\r\n            self.__validAction = validAction;\r\n            if (!validAction) {\r\n              current = null;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      return qx.event.Utils.then(tracker, function () {\r\n        if (current != old) {\r\n          self.__currentAction = current;\r\n          return self.__fireEvent(\r\n            \"dragchange\",\r\n            self.__dragTarget,\r\n            self.__dropTarget,\r\n            false\r\n          );\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Wrapper for {@link qx.event.Registration#fireEvent} for drag&drop events\r\n     * needed in this class.\r\n     *\r\n     * @param type {String} Event type\r\n     * @param target {Object} Target to fire on\r\n     * @param relatedTarget {Object} Related target, i.e. drag or drop target\r\n     *    depending on the drag event\r\n     * @param cancelable {Boolean} Whether the event is cancelable\r\n     * @param original {qx.event.type.Pointer} Original pointer event\r\n     * @return {qx.Promise|Boolean} <code>true</code> if the event's default behavior was\r\n     * not prevented\r\n     */\r\n    __fireEvent(type, target, relatedTarget, cancelable, original, async) {\r\n      var Registration = qx.event.Registration;\r\n      var dragEvent = Registration.createEvent(type, qx.event.type.Drag, [\r\n        cancelable,\r\n        original\r\n      ]);\r\n\r\n      if (target !== relatedTarget) {\r\n        dragEvent.setRelatedTarget(relatedTarget);\r\n      }\r\n\r\n      var result = Registration.dispatchEvent(target, dragEvent);\r\n      if (qx.core.Environment.get(\"qx.promise\")) {\r\n        if (async === undefined || async) {\r\n          return qx.Promise.resolve(result).then(function () {\r\n            return !dragEvent.getDefaultPrevented();\r\n          });\r\n        } else {\r\n          if (qx.core.Environment.get(\"qx.debug\")) {\r\n            if (qx.Promise.isPromise(result)) {\r\n              this.error(\r\n                'DragDrop event \"' +\r\n                  type +\r\n                  '\" returned a promise but a synchronous event was required, drag and drop may not work as expected (consider using getDataAsync)'\r\n              );\r\n            }\r\n          }\r\n          return result;\r\n        }\r\n      } else {\r\n        return result;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Finds next draggable parent of the given element. Maybe the element itself as well.\r\n     *\r\n     * Looks for the attribute <code>qxDraggable</code> with the value <code>on</code>.\r\n     *\r\n     * @param elem {Element} The element to query\r\n     * @return {Element} The next parent element which is draggable. May also be <code>null</code>\r\n     */\r\n    __findDraggable(elem) {\r\n      while (elem && elem.nodeType == 1) {\r\n        if (elem.getAttribute(\"qxDraggable\") == \"on\") {\r\n          return elem;\r\n        }\r\n\r\n        elem = elem.parentNode;\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Finds next droppable parent of the given element. Maybe the element itself as well.\r\n     *\r\n     * Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.\r\n     *\r\n     * @param elem {Element} The element to query\r\n     * @return {Element} The next parent element which is droppable. May also be <code>null</code>\r\n     */\r\n    __findDroppable(elem) {\r\n      while (elem && elem.nodeType == 1) {\r\n        if (elem.getAttribute(\"qxDroppable\") == \"on\") {\r\n          return elem;\r\n        }\r\n\r\n        elem = elem.parentNode;\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Cleans up a drag&drop session when <code>dragstart</code> was fired before.\r\n     *\r\n     * @return {qx.Promise?} promise, if one was created by event handlers\r\n     */\r\n    clearSession() {\r\n      //this.debug(\"clearSession\");\r\n\r\n      // Deregister from root events\r\n      this.__manager.removeListener(\r\n        this.__root,\r\n        \"pointermove\",\r\n        this._onPointermove,\r\n        this\r\n      );\r\n\r\n      this.__manager.removeListener(\r\n        this.__root,\r\n        \"pointerup\",\r\n        this._onPointerup,\r\n        this,\r\n        true\r\n      );\r\n\r\n      this.__manager.removeListener(\r\n        this.__root,\r\n        \"keydown\",\r\n        this._onKeyDown,\r\n        this,\r\n        true\r\n      );\r\n\r\n      this.__manager.removeListener(\r\n        this.__root,\r\n        \"keyup\",\r\n        this._onKeyUp,\r\n        this,\r\n        true\r\n      );\r\n\r\n      this.__manager.removeListener(\r\n        this.__root,\r\n        \"keypress\",\r\n        this._onKeyPress,\r\n        this,\r\n        true\r\n      );\r\n\r\n      this.__manager.removeListener(\r\n        this.__root,\r\n        \"roll\",\r\n        this._onRoll,\r\n        this,\r\n        true\r\n      );\r\n\r\n      var tracker = {};\r\n      var self = this;\r\n\r\n      // Fire dragend event\r\n      if (this.__dragTarget) {\r\n        qx.event.Utils.then(tracker, function () {\r\n          return self.__fireEvent(\r\n            \"dragend\",\r\n            self.__dragTarget,\r\n            self.__dropTarget,\r\n            false\r\n          );\r\n        });\r\n      }\r\n\r\n      return qx.event.Utils.then(tracker, function () {\r\n        // Cleanup\r\n        self.__validDrop = false;\r\n        self.__dropTarget = null;\r\n        if (self.__dragTargetWidget) {\r\n          self.__dragTargetWidget.removeState(\"drag\");\r\n          self.__dragTargetWidget = null;\r\n        }\r\n\r\n        // Clear init\r\n        //self.debug(\"Clearing drag target\");\r\n        self.__dragTarget = null;\r\n        self.__sessionActive = false;\r\n        self.__startConfig = null;\r\n        self.__rebuildStructures();\r\n      });\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Handler for long tap which takes care of starting the drag & drop session for\r\n     * touch interactions.\r\n     * @param e {qx.event.type.Tap} The longtap event.\r\n     */\r\n    _onLongtap(e) {\r\n      // only for touch\r\n      if (e.getPointerType() != \"touch\") {\r\n        return;\r\n      }\r\n      // prevent scrolling\r\n      this.__manager.addListener(this.__root, \"roll\", this._onRoll, this, true);\r\n      return this._start(e);\r\n    },\r\n\r\n    /**\r\n     * Helper to start the drag & drop session. It is responsible for firing the\r\n     * dragstart event and attaching the key listener.\r\n     * @param e {qx.event.type.Pointer} Either a longtap or pointermove event.\r\n     *\r\n     * @return {Boolean} Returns <code>false</code> if drag session should be\r\n     * canceled.\r\n     */\r\n    _start(e) {\r\n      // only for primary pointer and allowed buttons\r\n      var isButtonOk =\r\n        qx.event.handler.DragDrop.ALLOWED_BUTTONS.indexOf(e.getButton()) !== -1;\r\n      if (!e.isPrimary() || !isButtonOk) {\r\n        return false;\r\n      }\r\n\r\n      // start target can be none as the drag & drop handler might\r\n      // be created after the first start event\r\n      var target = this.__startConfig\r\n        ? this.__startConfig.target\r\n        : e.getTarget();\r\n      var draggable = this.__findDraggable(target);\r\n      if (draggable) {\r\n        // This is the source target\r\n        //this.debug(\"Setting dragtarget = \" + draggable);\r\n        this.__dragTarget = draggable;\r\n\r\n        var widgetOriginalTarget = qx.ui.core.Widget.getWidgetByElement(\r\n          this.__startConfig.original\r\n        );\r\n\r\n        while (widgetOriginalTarget && widgetOriginalTarget.isAnonymous()) {\r\n          widgetOriginalTarget = widgetOriginalTarget.getLayoutParent();\r\n        }\r\n        if (widgetOriginalTarget) {\r\n          this.__dragTargetWidget = widgetOriginalTarget;\r\n          widgetOriginalTarget.addState(\"drag\");\r\n        }\r\n\r\n        // fire cancelable dragstart\r\n        var self = this;\r\n        var tracker = {};\r\n        qx.event.Utils.catch(function () {\r\n          //self.debug(\"dragstart FAILED, setting __sessionActive=false\");\r\n          self.__sessionActive = false;\r\n        });\r\n        qx.event.Utils.then(tracker, function () {\r\n          return self.__fireEvent(\r\n            \"dragstart\",\r\n            self.__dragTarget,\r\n            self.__dropTarget,\r\n            true,\r\n            e\r\n          );\r\n        });\r\n        return qx.event.Utils.then(tracker, function (validAction) {\r\n          if (!validAction) {\r\n            return;\r\n          }\r\n          //self.debug(\"dragstart ok, setting __sessionActive=true\")\r\n          self.__manager.addListener(\r\n            self.__root,\r\n            \"keydown\",\r\n            self._onKeyDown,\r\n            self,\r\n            true\r\n          );\r\n\r\n          self.__manager.addListener(\r\n            self.__root,\r\n            \"keyup\",\r\n            self._onKeyUp,\r\n            self,\r\n            true\r\n          );\r\n\r\n          self.__manager.addListener(\r\n            self.__root,\r\n            \"keypress\",\r\n            self._onKeyPress,\r\n            self,\r\n            true\r\n          );\r\n\r\n          self.__sessionActive = true;\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event handler for the pointerdown event which stores the initial targets and the coordinates.\r\n     * @param e {qx.event.type.Pointer} The pointerdown event.\r\n     */\r\n    _onPointerdown(e) {\r\n      if (e.isPrimary()) {\r\n        this.__startConfig = {\r\n          target: e.getTarget(),\r\n          original: e.getOriginalTarget(),\r\n          left: e.getDocumentLeft(),\r\n          top: e.getDocumentTop()\r\n        };\r\n\r\n        this.__manager.addListener(\r\n          this.__root,\r\n          \"pointermove\",\r\n          this._onPointermove,\r\n          this\r\n        );\r\n\r\n        this.__manager.addListener(\r\n          this.__root,\r\n          \"pointerup\",\r\n          this._onPointerup,\r\n          this,\r\n          true\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event handler for the pointermove event which starts the drag session and\r\n     * is responsible for firing the drag, dragover and dragleave event.\r\n     * @param e {qx.event.type.Pointer} The pointermove event.\r\n     */\r\n    _onPointermove(e) {\r\n      // only allow drag & drop for primary pointer\r\n      if (!e.isPrimary()) {\r\n        return;\r\n      }\r\n\r\n      //this.debug(\"_onPointermove: start\");\r\n\r\n      var self = this;\r\n      var tracker = {};\r\n\r\n      qx.event.Utils.catch(function () {\r\n        return self.clearSession();\r\n      });\r\n\r\n      // start the drag session for mouse\r\n      if (!self.__sessionActive && e.getPointerType() == \"mouse\") {\r\n        var delta = self._getDelta(e);\r\n        // if the mouse moved a bit in any direction\r\n        var distance = qx.event.handler.DragDrop.MIN_DRAG_DISTANCE;\r\n        if (\r\n          delta &&\r\n          (Math.abs(delta.x) > distance || Math.abs(delta.y) > distance)\r\n        ) {\r\n          //self.debug(\"_onPointermove: outside min drag distance\");\r\n          qx.event.Utils.then(tracker, function () {\r\n            return self._start(e);\r\n          });\r\n        }\r\n      }\r\n\r\n      return qx.event.Utils.then(tracker, function () {\r\n        // check if the session has been activated\r\n        if (!self.__sessionActive) {\r\n          //self.debug(\"not active\");\r\n          return;\r\n        }\r\n\r\n        var tracker = {};\r\n        qx.event.Utils.then(tracker, function () {\r\n          //self.debug(\"active, firing drag\");\r\n          return self.__fireEvent(\r\n            \"drag\",\r\n            self.__dragTarget,\r\n            self.__dropTarget,\r\n            true,\r\n            e\r\n          );\r\n        });\r\n        qx.event.Utils.then(tracker, function (validAction) {\r\n          if (!validAction) {\r\n            this.clearSession();\r\n          }\r\n\r\n          //self.debug(\"drag\");\r\n          // find current hovered droppable\r\n          var el = e.getTarget();\r\n          if (self.__startConfig.target === el) {\r\n            // on touch devices the native events return wrong elements as target (its always the element where the dragging started)\r\n            el = e\r\n              .getNativeEvent()\r\n              .view.document.elementFromPoint(\r\n                e.getDocumentLeft(),\r\n                e.getDocumentTop()\r\n              );\r\n          }\r\n          var cursor = self.getCursor();\r\n          if (!cursor) {\r\n            cursor = qx.ui.core.DragDropCursor.getInstance();\r\n          }\r\n          var cursorEl = cursor.getContentElement().getDomElement();\r\n          if (cursorEl && (el === cursorEl || cursorEl.contains(el))) {\r\n            var display = qx.bom.element.Style.get(cursorEl, \"display\");\r\n            // get the cursor out of the way\r\n            qx.bom.element.Style.set(cursorEl, \"display\", \"none\");\r\n            el = e\r\n              .getNativeEvent()\r\n              .view.document.elementFromPoint(\r\n                e.getDocumentLeft(),\r\n                e.getDocumentTop()\r\n              );\r\n\r\n            qx.bom.element.Style.set(cursorEl, \"display\", display);\r\n          }\r\n\r\n          if (el !== cursorEl) {\r\n            var droppable = self.__findDroppable(el);\r\n\r\n            // new drop target detected\r\n            if (droppable && droppable != self.__dropTarget) {\r\n              var dropLeaveTarget = self.__dropTarget;\r\n\r\n              self.__validDrop = true; // initial value should be true\r\n              self.__dropTarget = droppable;\r\n\r\n              var innerTracker = {};\r\n              qx.event.Utils.catch(innerTracker, function () {\r\n                self.__dropTarget = null;\r\n                self.__validDrop = false;\r\n              });\r\n\r\n              // fire dragleave for previous drop target\r\n              if (dropLeaveTarget) {\r\n                qx.event.Utils.then(innerTracker, function () {\r\n                  return self.__fireEvent(\r\n                    \"dragleave\",\r\n                    dropLeaveTarget,\r\n                    self.__dragTarget,\r\n                    false,\r\n                    e\r\n                  );\r\n                });\r\n              }\r\n\r\n              qx.event.Utils.then(innerTracker, function () {\r\n                return self.__fireEvent(\r\n                  \"dragover\",\r\n                  droppable,\r\n                  self.__dragTarget,\r\n                  true,\r\n                  e\r\n                );\r\n              });\r\n\r\n              return qx.event.Utils.then(innerTracker, function (validDrop) {\r\n                self.__validDrop = validDrop;\r\n              });\r\n            }\r\n\r\n            // only previous drop target\r\n            else if (!droppable && self.__dropTarget) {\r\n              var innerTracker = {};\r\n              qx.event.Utils.then(innerTracker, function () {\r\n                return self.__fireEvent(\r\n                  \"dragleave\",\r\n                  self.__dropTarget,\r\n                  self.__dragTarget,\r\n                  false,\r\n                  e\r\n                );\r\n              });\r\n              return qx.event.Utils.then(innerTracker, function () {\r\n                self.__dropTarget = null;\r\n                self.__validDrop = false;\r\n\r\n                return self.__detectAction();\r\n              });\r\n            }\r\n          }\r\n        });\r\n        return qx.event.Utils.then(tracker, function () {\r\n          // Reevaluate current action\r\n          var keys = self.__keys;\r\n          keys.Control = e.isCtrlPressed();\r\n          keys.Shift = e.isShiftPressed();\r\n          keys.Alt = e.isAltPressed();\r\n          return self.__detectAction();\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Helper function to compute the delta between current cursor position from given event\r\n     * and the stored coordinates at {@link #_onPointerdown}.\r\n     *\r\n     * @param e {qx.event.type.Pointer} The pointer event\r\n     *\r\n     * @return {Map} containing the deltaX as x, and deltaY as y.\r\n     */\r\n    _getDelta(e) {\r\n      if (!this.__startConfig) {\r\n        return null;\r\n      }\r\n\r\n      var deltaX = e.getDocumentLeft() - this.__startConfig.left;\r\n      var deltaY = e.getDocumentTop() - this.__startConfig.top;\r\n\r\n      return {\r\n        x: deltaX,\r\n        y: deltaY\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Handler for the pointerup event which is responsible fore firing the drop event.\r\n     * @param e {qx.event.type.Pointer} The pointerup event\r\n     */\r\n    _onPointerup(e) {\r\n      if (!e.isPrimary()) {\r\n        return;\r\n      }\r\n\r\n      var tracker = {};\r\n      var self = this;\r\n\r\n      // Fire drop event in success case\r\n      if (this.__validDrop && this.__validAction) {\r\n        qx.event.Utils.then(tracker, function () {\r\n          return self.__fireEvent(\r\n            \"drop\",\r\n            self.__dropTarget,\r\n            self.__dragTarget,\r\n            false,\r\n            e\r\n          );\r\n        });\r\n      }\r\n\r\n      return qx.event.Utils.then(tracker, function () {\r\n        // Stop event\r\n        if (e.getTarget() == self.__dragTarget) {\r\n          e.stopPropagation();\r\n        }\r\n\r\n        // Clean up\r\n        return self.clearSession();\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Roll listener to stop scrolling on touch devices.\r\n     * @param e {qx.event.type.Roll} The roll event.\r\n     */\r\n    _onRoll(e) {\r\n      e.stop();\r\n    },\r\n\r\n    /**\r\n     * Event listener for window's <code>blur</code> event\r\n     *\r\n     * @param e {qx.event.type.Event} Event object\r\n     */\r\n    _onWindowBlur(e) {\r\n      return this.clearSession();\r\n    },\r\n\r\n    /**\r\n     * Event listener for root's <code>keydown</code> event\r\n     *\r\n     * @param e {qx.event.type.KeySequence} Event object\r\n     */\r\n    _onKeyDown(e) {\r\n      var iden = e.getKeyIdentifier();\r\n      switch (iden) {\r\n        case \"Alt\":\r\n        case \"Control\":\r\n        case \"Shift\":\r\n          if (!this.__keys[iden]) {\r\n            this.__keys[iden] = true;\r\n            return this.__detectAction();\r\n          }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for root's <code>keyup</code> event\r\n     *\r\n     * @param e {qx.event.type.KeySequence} Event object\r\n     */\r\n    _onKeyUp(e) {\r\n      var iden = e.getKeyIdentifier();\r\n      switch (iden) {\r\n        case \"Alt\":\r\n        case \"Control\":\r\n        case \"Shift\":\r\n          if (this.__keys[iden]) {\r\n            this.__keys[iden] = false;\r\n            return this.__detectAction();\r\n          }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for root's <code>keypress</code> event\r\n     *\r\n     * @param e {qx.event.type.KeySequence} Event object\r\n     */\r\n    _onKeyPress(e) {\r\n      var iden = e.getKeyIdentifier();\r\n      switch (iden) {\r\n        case \"Escape\":\r\n          return this.clearSession();\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    qx.event.Registration.removeListener(\r\n      window,\r\n      \"blur\",\r\n      this._onWindowBlur,\r\n      this\r\n    );\r\n\r\n    // Clear fields\r\n    this.__dragTarget =\r\n      this.__dropTarget =\r\n      this.__manager =\r\n      this.__root =\r\n      this.__types =\r\n      this.__actions =\r\n      this.__keys =\r\n      this.__cache =\r\n        null;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,2BAA2B,EAAE;IAC3CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IACtBC,SAAS,EAAE,CAACT,EAAE,CAACU,KAAK,CAACC,aAAa,EAAEX,EAAE,CAACO,IAAI,CAACK,WAAW,CAAC;IAExD;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;IACEC,SAAS,WAAAA,UAACC,OAAO,EAAE;MACjBd,EAAA,CAAAO,IAAA,CAAAC,MAAA,CAAAO,WAAA,CAAAC,IAAA;;MAEA;MACA,IAAI,CAACC,SAAS,GAAGH,OAAO;MACxB,IAAI,CAACI,SAAM,GAAGJ,OAAO,CAACK,SAAS,CAAC,CAAC,CAACC,QAAQ,CAACC,eAAe;;MAE1D;MACA,IAAI,CAACJ,SAAS,CAACK,WAAW,CAAC,IAAI,CAACJ,SAAM,EAAE,SAAS,EAAE,IAAI,CAACK,UAAU,EAAE,IAAI,CAAC;MACzE,IAAI,CAACN,SAAS,CAACK,WAAW,CACxB,IAAI,CAACJ,SAAM,EACX,aAAa,EACb,IAAI,CAACM,cAAc,EACnB,IAAI,EACJ,IACF,CAAC;MAEDxB,EAAE,CAACU,KAAK,CAACe,YAAY,CAACH,WAAW,CAACI,MAAM,EAAE,MAAM,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;;MAE3E;MACA,IAAI,CAACC,SAAmB,CAAC,CAAC;IAC5B,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;MACAC,QAAQ,EAAE9B,EAAE,CAACU,KAAK,CAACe,YAAY,CAACM,eAAe;MAE/C;MACAC,eAAe,EAAE;QACfC,SAAS,EAAE,CAAC;QACZC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,CAAC;QACXC,SAAS,EAAE,CAAC;QACZC,IAAI,EAAE,CAAC;QACPC,IAAI,EAAE,CAAC;QACPC,UAAU,EAAE,CAAC;QACbC,WAAW,EAAE;MACf,CAAC;MAED;MACAC,iBAAiB,EAAE,IAAI;MAEvB;AACJ;AACA;AACA;AACA;MACIC,eAAe,EAAE,CAAC,MAAM,CAAC;MAEzB;AACJ;AACA;MACIC,iBAAiB,EAAE;IACrB,CAAC;IAEDC,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIC,MAAM,EAAE;QACNC,KAAK,EAAE,mBAAmB;QAC1BC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE;MACR;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACPhC,SAAS,EAAE,IAAI;MACfC,SAAM,EAAE,IAAI;MACZgC,SAAY,EAAE,IAAI;MAClBC,SAAY,EAAE,IAAI;MAClBC,SAAO,EAAE,IAAI;MACbC,SAAS,EAAE,IAAI;MACfC,SAAM,EAAE,IAAI;MACZC,SAAO,EAAE,IAAI;MACbC,SAAa,EAAE,IAAI;MACnBC,UAAe,EAAE,IAAI;MACrBC,UAAe,EAAE,KAAK;MACtBC,UAAW,EAAE,KAAK;MAClBC,UAAa,EAAE,KAAK;MACpBC,UAAkB,EAAE,IAAI;MACxBC,UAAa,EAAE,IAAI;MAEnB;AACJ;AACA;AACA;AACA;MAEI;MACAC,cAAc,WAAAA,eAACC,MAAM,EAAEC,IAAI,EAAE,CAAC,CAAC;MAE/B;MACAC,aAAa,WAAAA,cAACF,MAAM,EAAEC,IAAI,EAAEE,OAAO,EAAE;QACnC;MAAA,CACD;MAED;MACAC,eAAe,WAAAA,gBAACJ,MAAM,EAAEC,IAAI,EAAEE,OAAO,EAAE;QACrC;MAAA,CACD;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACIE,OAAO,WAAAA,QAACJ,IAAI,EAAE;QACZ,IAAI,CAACb,SAAO,CAACa,IAAI,CAAC,GAAG,IAAI;MAC3B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIK,SAAS,WAAAA,UAACC,MAAM,EAAE;QAChB,IAAI,CAAClB,SAAS,CAACkB,MAAM,CAAC,GAAG,IAAI;MAC/B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,YAAY,WAAAA,aAACP,IAAI,EAAE;QACjB,OAAO,CAAC,CAAC,IAAI,CAACb,SAAO,CAACa,IAAI,CAAC;MAC7B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIQ,cAAc,WAAAA,eAACR,IAAI,EAAE;QACnB,OAAO,CAAC,CAAC,IAAI,CAACZ,SAAS,CAACY,IAAI,CAAC;MAC/B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIS,cAAc,WAAAA,eAACC,SAAS,EAAE;QACxB,IAAI,CAAChB,UAAW,GAAGgB,SAAS;QAC5B,IAAI,CAACC,UAAc,CAAC,CAAC;MACvB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,WAAAA,QAACZ,IAAI,EAAE;QACZ,IAAI,CAAC,IAAI,CAACN,UAAW,IAAI,CAAC,IAAI,CAACT,SAAY,EAAE;UAC3C,MAAM,IAAI4B,KAAK,CACb,+DACF,CAAC;QACH;QAEA,IAAI,CAAC,IAAI,CAAC1B,SAAO,CAACa,IAAI,CAAC,EAAE;UACvB,MAAM,IAAIa,KAAK,CAAC,yBAAyB,GAAGb,IAAI,GAAG,GAAG,CAAC;QACzD;QAEA,IAAI,CAAC,IAAI,CAACV,SAAO,CAACU,IAAI,CAAC,EAAE;UACvB,IAAI,CAACT,SAAa,GAAGS,IAAI;UACzB,IAAI,CAACc,UAAW,CACd,aAAa,EACb,IAAI,CAAC5B,SAAY,EACjB,IAAI,CAACD,SAAY,EACjB,KAAK,EACL,KACF,CAAC;QACH;QAEA,IAAI,CAAC,IAAI,CAACK,SAAO,CAACU,IAAI,CAAC,EAAE;UACvB,MAAM,IAAIa,KAAK,CACb,qFACF,CAAC;QACH;QAEA,OAAO,IAAI,CAACvB,SAAO,CAACU,IAAI,CAAC,IAAI,IAAI;MACnC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIe,YAAY,WAAAA,aAACf,IAAI,EAAE;QACjB,IAAI,CAAC,IAAI,CAACN,UAAW,IAAI,CAAC,IAAI,CAACT,SAAY,EAAE;UAC3C,MAAM,IAAI4B,KAAK,CACb,+DACF,CAAC;QACH;QAEA,IAAI,CAAC,IAAI,CAAC1B,SAAO,CAACa,IAAI,CAAC,EAAE;UACvB,MAAM,IAAIa,KAAK,CAAC,yBAAyB,GAAGb,IAAI,GAAG,GAAG,CAAC;QACzD;QAEA,IAAIgB,OAAO,GAAG,CAAC,CAAC;QAChB,IAAIC,IAAI,GAAG,IAAI;QACf,IAAI,CAAC,IAAI,CAAC3B,SAAO,CAACU,IAAI,CAAC,EAAE;UACvBjE,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;YACvCC,IAAI,CAAC1B,SAAa,GAAGS,IAAI;YACzB,OAAOiB,IAAI,CAACH,UAAW,CACrB,aAAa,EACbG,IAAI,CAAC/B,SAAY,EACjB+B,IAAI,CAAChC,SAAY,EACjB,KACF,CAAC;UACH,CAAC,CAAC;QACJ;QAEA,OAAOlD,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;UAC9C,IAAI,CAAC,IAAI,CAAC1B,SAAO,CAACU,IAAI,CAAC,EAAE;YACvB,MAAM,IAAIa,KAAK,CACb,qFACF,CAAC;UACH;UAEA,OAAO,IAAI,CAACvB,SAAO,CAACU,IAAI,CAAC,IAAI,IAAI;QACnC,CAAC,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIoB,gBAAgB,WAAAA,iBAAA,EAAG;QACjB,IAAI,CAACT,UAAc,CAAC,CAAC;QACrB,OAAO,IAAI,CAACnB,UAAe;MAC7B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACI6B,qBAAqB,EAAEtF,EAAE,CAACO,IAAI,CAACgF,WAAW,CAACC,MAAM,CAAC,YAAY,EAAE;QAAA,iBAAAC,MAAA,EACvD;UACL,IAAIP,IAAI,GAAG,IAAI;UAEf,OAAOlF,EAAE,CAAC0F,OAAO,CAACC,OAAO,CAACT,IAAI,CAACN,UAAc,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,YAAY;YAChE,OAAOF,IAAI,CAACzB,UAAe;UAC7B,CAAC,CAAC;QACJ,CAAC;QAAA,kBAAAmC,OAAA,EACO;UACN,MAAM,IAAId,KAAK,CACb,IAAI,CAACe,SAAS,GACZ,gEACJ,CAAC;QACH;MACF,CAAC,CAAC;MAEF;AACJ;AACA;AACA;MACIC,aAAa,WAAAA,cAAA,EAAG;QACd,OAAO,IAAI,CAACjC,UAAkB;MAChC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIkC,OAAO,WAAAA,QAAC9B,IAAI,EAAE+B,IAAI,EAAE;QAClB,IAAI,CAACzC,SAAO,CAACU,IAAI,CAAC,GAAG+B,IAAI;MAC3B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIC,cAAc,WAAAA,eAAA,EAAG;QACf,OAAO,IAAI,CAACzC,SAAa;MAC3B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI0C,eAAe,WAAAA,gBAAA,EAAG;QAChB,OAAO,IAAI,CAACxC,UAAe;MAC7B,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;MACI9B,SAAmB,WAAAuE,UAAA,EAAG;QACpB,IAAI,CAAC/C,SAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAACC,SAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAACC,SAAO,GAAG,CAAC,CAAC;MACnB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIqB,UAAc,WAAAwB,WAAA,EAAG;QACf,IAAI,IAAI,CAACjD,SAAY,IAAI,IAAI,EAAE;UAC7B,IAAInD,EAAE,CAACO,IAAI,CAACgF,WAAW,CAACc,GAAG,CAAC,YAAY,CAAC,EAAE;YACzC,OAAOrG,EAAE,CAAC0F,OAAO,CAACY,MAAM,CAAC,CAAC;UAC5B,CAAC,MAAM;YACL,OAAO,IAAI;UACb;QACF;QAEA,IAAIC,OAAO,GAAG,IAAI,CAAClD,SAAS;QAC5B,IAAImD,IAAI,GAAG,IAAI,CAAClD,SAAM;QACtB,IAAImD,OAAO,GAAG,IAAI;QAElB,IAAI,IAAI,CAAC9C,UAAW,EAAE;UACpB,IAAI6C,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACG,OAAO,IAAIJ,OAAO,CAACK,KAAK,EAAE;YAC/CH,OAAO,GAAG,OAAO;UACnB,CAAC,MAAM,IAAID,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACK,GAAG,IAAIN,OAAO,CAACO,IAAI,EAAE;YACjDL,OAAO,GAAG,MAAM;UAClB,CAAC,MAAM,IAAID,IAAI,CAACE,KAAK,IAAIH,OAAO,CAACQ,IAAI,EAAE;YACrCN,OAAO,GAAG,MAAM;UAClB,CAAC,MAAM,IAAID,IAAI,CAACK,GAAG,IAAIN,OAAO,CAACK,KAAK,EAAE;YACpCH,OAAO,GAAG,OAAO;UACnB,CAAC,MAAM,IAAID,IAAI,CAACG,OAAO,IAAIJ,OAAO,CAACO,IAAI,EAAE;YACvCL,OAAO,GAAG,MAAM;UAClB,CAAC,MAAM,IAAIF,OAAO,CAACQ,IAAI,EAAE;YACvBN,OAAO,GAAG,MAAM;UAClB,CAAC,MAAM,IAAIF,OAAO,CAACO,IAAI,EAAE;YACvBL,OAAO,GAAG,MAAM;UAClB,CAAC,MAAM,IAAIF,OAAO,CAACK,KAAK,EAAE;YACxBH,OAAO,GAAG,OAAO;UACnB;QACF;QAEA,IAAIvB,IAAI,GAAG,IAAI;QACf,IAAID,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI+B,GAAG,GAAG,IAAI,CAACvD,UAAe;QAC9B,IAAIgD,OAAO,IAAIO,GAAG,EAAE;UAClB,IAAI,IAAI,CAAC9D,SAAY,EAAE;YACrBlD,EAAE,CAACU,KAAK,CAACyE,KAAK,SAAM,CAAC,YAAY;cAC/BD,IAAI,CAACtB,UAAa,GAAG,KAAK;cAC1B6C,OAAO,GAAG,IAAI;YAChB,CAAC,CAAC;YACFzG,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;cACvCC,IAAI,CAACzB,UAAe,GAAGgD,OAAO;cAC9B,OAAOvB,IAAI,CAACH,UAAW,CACrB,YAAY,EACZG,IAAI,CAAChC,SAAY,EACjBgC,IAAI,CAAC/B,SAAY,EACjB,IACF,CAAC;YACH,CAAC,CAAC;YACFnD,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,UAAUgC,WAAW,EAAE;cAClD/B,IAAI,CAACtB,UAAa,GAAGqD,WAAW;cAChC,IAAI,CAACA,WAAW,EAAE;gBAChBR,OAAO,GAAG,IAAI;cAChB;YACF,CAAC,CAAC;UACJ;QACF;QAEA,OAAOzG,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;UAC9C,IAAIwB,OAAO,IAAIO,GAAG,EAAE;YAClB9B,IAAI,CAACzB,UAAe,GAAGgD,OAAO;YAC9B,OAAOvB,IAAI,CAACH,UAAW,CACrB,YAAY,EACZG,IAAI,CAAC/B,SAAY,EACjB+B,IAAI,CAAChC,SAAY,EACjB,KACF,CAAC;UACH;QACF,CAAC,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI6B,UAAW,WAAAmC,WAACjD,IAAI,EAAED,MAAM,EAAEmD,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,EAAE;QACpE,IAAI7F,YAAY,GAAGzB,EAAE,CAACU,KAAK,CAACe,YAAY;QACxC,IAAI8F,SAAS,GAAG9F,YAAY,CAAC+F,WAAW,CAACvD,IAAI,EAAEjE,EAAE,CAACU,KAAK,CAACuD,IAAI,CAACwD,IAAI,EAAE,CACjEL,UAAU,EACVC,QAAQ,CACT,CAAC;QAEF,IAAIrD,MAAM,KAAKmD,aAAa,EAAE;UAC5BI,SAAS,CAACG,gBAAgB,CAACP,aAAa,CAAC;QAC3C;QAEA,IAAIQ,MAAM,GAAGlG,YAAY,CAACmG,aAAa,CAAC5D,MAAM,EAAEuD,SAAS,CAAC;QAC1D,IAAIvH,EAAE,CAACO,IAAI,CAACgF,WAAW,CAACc,GAAG,CAAC,YAAY,CAAC,EAAE;UACzC,IAAIiB,KAAK,KAAKO,SAAS,IAAIP,KAAK,EAAE;YAChC,OAAOtH,EAAE,CAAC0F,OAAO,CAACC,OAAO,CAACgC,MAAM,CAAC,CAACvC,IAAI,CAAC,YAAY;cACjD,OAAO,CAACmC,SAAS,CAACO,mBAAmB,CAAC,CAAC;YACzC,CAAC,CAAC;UACJ,CAAC,MAAM;YAUL,OAAOH,MAAM;UACf;QACF,CAAC,MAAM;UACL,OAAOA,MAAM;QACf;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACII,UAAe,WAAAC,WAACC,IAAI,EAAE;QACpB,OAAOA,IAAI,IAAIA,IAAI,CAACC,QAAQ,IAAI,CAAC,EAAE;UACjC,IAAID,IAAI,CAACE,YAAY,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE;YAC5C,OAAOF,IAAI;UACb;UAEAA,IAAI,GAAGA,IAAI,CAACG,UAAU;QACxB;QAEA,OAAO,IAAI;MACb,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,UAAe,WAAAC,WAACL,IAAI,EAAE;QACpB,OAAOA,IAAI,IAAIA,IAAI,CAACC,QAAQ,IAAI,CAAC,EAAE;UACjC,IAAID,IAAI,CAACE,YAAY,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE;YAC5C,OAAOF,IAAI;UACb;UAEAA,IAAI,GAAGA,IAAI,CAACG,UAAU;QACxB;QAEA,OAAO,IAAI;MACb,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIG,YAAY,WAAAA,aAAA,EAAG;QACb;;QAEA;QACA,IAAI,CAACtH,SAAS,CAACuH,cAAc,CAC3B,IAAI,CAACtH,SAAM,EACX,aAAa,EACb,IAAI,CAACuH,cAAc,EACnB,IACF,CAAC;QAED,IAAI,CAACxH,SAAS,CAACuH,cAAc,CAC3B,IAAI,CAACtH,SAAM,EACX,WAAW,EACX,IAAI,CAACwH,YAAY,EACjB,IAAI,EACJ,IACF,CAAC;QAED,IAAI,CAACzH,SAAS,CAACuH,cAAc,CAC3B,IAAI,CAACtH,SAAM,EACX,SAAS,EACT,IAAI,CAACyH,UAAU,EACf,IAAI,EACJ,IACF,CAAC;QAED,IAAI,CAAC1H,SAAS,CAACuH,cAAc,CAC3B,IAAI,CAACtH,SAAM,EACX,OAAO,EACP,IAAI,CAAC0H,QAAQ,EACb,IAAI,EACJ,IACF,CAAC;QAED,IAAI,CAAC3H,SAAS,CAACuH,cAAc,CAC3B,IAAI,CAACtH,SAAM,EACX,UAAU,EACV,IAAI,CAAC2H,WAAW,EAChB,IAAI,EACJ,IACF,CAAC;QAED,IAAI,CAAC5H,SAAS,CAACuH,cAAc,CAC3B,IAAI,CAACtH,SAAM,EACX,MAAM,EACN,IAAI,CAAC4H,OAAO,EACZ,IAAI,EACJ,IACF,CAAC;QAED,IAAI7D,OAAO,GAAG,CAAC,CAAC;QAChB,IAAIC,IAAI,GAAG,IAAI;;QAEf;QACA,IAAI,IAAI,CAAC/B,SAAY,EAAE;UACrBnD,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;YACvC,OAAOC,IAAI,CAACH,UAAW,CACrB,SAAS,EACTG,IAAI,CAAC/B,SAAY,EACjB+B,IAAI,CAAChC,SAAY,EACjB,KACF,CAAC;UACH,CAAC,CAAC;QACJ;QAEA,OAAOlD,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;UAC9C;UACAC,IAAI,CAACvB,UAAW,GAAG,KAAK;UACxBuB,IAAI,CAAChC,SAAY,GAAG,IAAI;UACxB,IAAIgC,IAAI,CAACrB,UAAkB,EAAE;YAC3BqB,IAAI,CAACrB,UAAkB,CAACkF,WAAW,CAAC,MAAM,CAAC;YAC3C7D,IAAI,CAACrB,UAAkB,GAAG,IAAI;UAChC;;UAEA;UACA;UACAqB,IAAI,CAAC/B,SAAY,GAAG,IAAI;UACxB+B,IAAI,CAACxB,UAAe,GAAG,KAAK;UAC5BwB,IAAI,CAACpB,UAAa,GAAG,IAAI;UACzBoB,IAAI,CAACtD,SAAmB,CAAC,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACIL,UAAU,WAAAA,WAACyH,CAAC,EAAE;QACZ;QACA,IAAIA,CAAC,CAACC,cAAc,CAAC,CAAC,IAAI,OAAO,EAAE;UACjC;QACF;QACA;QACA,IAAI,CAAChI,SAAS,CAACK,WAAW,CAAC,IAAI,CAACJ,SAAM,EAAE,MAAM,EAAE,IAAI,CAAC4H,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;QACzE,OAAO,IAAI,CAACI,MAAM,CAACF,CAAC,CAAC;MACvB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,MAAM,WAAAA,OAACF,CAAC,EAAE;QACR;QACA,IAAIG,UAAU,GACZnJ,EAAE,CAACU,KAAK,CAAC0I,OAAO,CAACC,QAAQ,CAAC3G,eAAe,CAAC4G,OAAO,CAACN,CAAC,CAACO,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACzE,IAAI,CAACP,CAAC,CAACQ,SAAS,CAAC,CAAC,IAAI,CAACL,UAAU,EAAE;UACjC,OAAO,KAAK;QACd;;QAEA;QACA;QACA,IAAInF,MAAM,GAAG,IAAI,CAACF,UAAa,GAC3B,IAAI,CAACA,UAAa,CAACE,MAAM,GACzBgF,CAAC,CAACS,SAAS,CAAC,CAAC;QACjB,IAAIC,SAAS,GAAG,IAAI,CAAC3B,UAAe,CAAC/D,MAAM,CAAC;QAC5C,IAAI0F,SAAS,EAAE;UACb;UACA;UACA,IAAI,CAACvG,SAAY,GAAGuG,SAAS;UAE7B,IAAIC,oBAAoB,GAAG3J,EAAE,CAAC4J,EAAE,CAACrJ,IAAI,CAACsJ,MAAM,CAACC,kBAAkB,CAC7D,IAAI,CAAChG,UAAa,CAACuD,QACrB,CAAC;UAED,OAAOsC,oBAAoB,IAAIA,oBAAoB,CAACI,WAAW,CAAC,CAAC,EAAE;YACjEJ,oBAAoB,GAAGA,oBAAoB,CAACK,eAAe,CAAC,CAAC;UAC/D;UACA,IAAIL,oBAAoB,EAAE;YACxB,IAAI,CAAC9F,UAAkB,GAAG8F,oBAAoB;YAC9CA,oBAAoB,CAACM,QAAQ,CAAC,MAAM,CAAC;UACvC;;UAEA;UACA,IAAI/E,IAAI,GAAG,IAAI;UACf,IAAID,OAAO,GAAG,CAAC,CAAC;UAChBjF,EAAE,CAACU,KAAK,CAACyE,KAAK,SAAM,CAAC,YAAY;YAC/B;YACAD,IAAI,CAACxB,UAAe,GAAG,KAAK;UAC9B,CAAC,CAAC;UACF1D,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;YACvC,OAAOC,IAAI,CAACH,UAAW,CACrB,WAAW,EACXG,IAAI,CAAC/B,SAAY,EACjB+B,IAAI,CAAChC,SAAY,EACjB,IAAI,EACJ8F,CACF,CAAC;UACH,CAAC,CAAC;UACF,OAAOhJ,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,UAAUgC,WAAW,EAAE;YACzD,IAAI,CAACA,WAAW,EAAE;cAChB;YACF;YACA;YACA/B,IAAI,CAACjE,SAAS,CAACK,WAAW,CACxB4D,IAAI,CAAChE,SAAM,EACX,SAAS,EACTgE,IAAI,CAACyD,UAAU,EACfzD,IAAI,EACJ,IACF,CAAC;YAEDA,IAAI,CAACjE,SAAS,CAACK,WAAW,CACxB4D,IAAI,CAAChE,SAAM,EACX,OAAO,EACPgE,IAAI,CAAC0D,QAAQ,EACb1D,IAAI,EACJ,IACF,CAAC;YAEDA,IAAI,CAACjE,SAAS,CAACK,WAAW,CACxB4D,IAAI,CAAChE,SAAM,EACX,UAAU,EACVgE,IAAI,CAAC2D,WAAW,EAChB3D,IAAI,EACJ,IACF,CAAC;YAEDA,IAAI,CAACxB,UAAe,GAAG,IAAI;UAC7B,CAAC,CAAC;QACJ;MACF,CAAC;MAED;AACJ;AACA;AACA;MACIlC,cAAc,WAAAA,eAACwH,CAAC,EAAE;QAChB,IAAIA,CAAC,CAACQ,SAAS,CAAC,CAAC,EAAE;UACjB,IAAI,CAAC1F,UAAa,GAAG;YACnBE,MAAM,EAAEgF,CAAC,CAACS,SAAS,CAAC,CAAC;YACrBpC,QAAQ,EAAE2B,CAAC,CAACkB,iBAAiB,CAAC,CAAC;YAC/BC,IAAI,EAAEnB,CAAC,CAACoB,eAAe,CAAC,CAAC;YACzBC,GAAG,EAAErB,CAAC,CAACsB,cAAc,CAAC;UACxB,CAAC;UAED,IAAI,CAACrJ,SAAS,CAACK,WAAW,CACxB,IAAI,CAACJ,SAAM,EACX,aAAa,EACb,IAAI,CAACuH,cAAc,EACnB,IACF,CAAC;UAED,IAAI,CAACxH,SAAS,CAACK,WAAW,CACxB,IAAI,CAACJ,SAAM,EACX,WAAW,EACX,IAAI,CAACwH,YAAY,EACjB,IAAI,EACJ,IACF,CAAC;QACH;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACID,cAAc,WAAAA,eAACO,CAAC,EAAE;QAChB;QACA,IAAI,CAACA,CAAC,CAACQ,SAAS,CAAC,CAAC,EAAE;UAClB;QACF;;QAEA;;QAEA,IAAItE,IAAI,GAAG,IAAI;QACf,IAAID,OAAO,GAAG,CAAC,CAAC;QAEhBjF,EAAE,CAACU,KAAK,CAACyE,KAAK,SAAM,CAAC,YAAY;UAC/B,OAAOD,IAAI,CAACqD,YAAY,CAAC,CAAC;QAC5B,CAAC,CAAC;;QAEF;QACA,IAAI,CAACrD,IAAI,CAACxB,UAAe,IAAIsF,CAAC,CAACC,cAAc,CAAC,CAAC,IAAI,OAAO,EAAE;UAC1D,IAAIsB,KAAK,GAAGrF,IAAI,CAACsF,SAAS,CAACxB,CAAC,CAAC;UAC7B;UACA,IAAIyB,QAAQ,GAAGzK,EAAE,CAACU,KAAK,CAAC0I,OAAO,CAACC,QAAQ,CAAC1G,iBAAiB;UAC1D,IACE4H,KAAK,KACJG,IAAI,CAACC,GAAG,CAACJ,KAAK,CAACK,CAAC,CAAC,GAAGH,QAAQ,IAAIC,IAAI,CAACC,GAAG,CAACJ,KAAK,CAACM,CAAC,CAAC,GAAGJ,QAAQ,CAAC,EAC9D;YACA;YACAzK,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;cACvC,OAAOC,IAAI,CAACgE,MAAM,CAACF,CAAC,CAAC;YACvB,CAAC,CAAC;UACJ;QACF;QAEA,OAAOhJ,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;UAC9C;UACA,IAAI,CAACC,IAAI,CAACxB,UAAe,EAAE;YACzB;YACA;UACF;UAEA,IAAIuB,OAAO,GAAG,CAAC,CAAC;UAChBjF,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;YACvC;YACA,OAAOC,IAAI,CAACH,UAAW,CACrB,MAAM,EACNG,IAAI,CAAC/B,SAAY,EACjB+B,IAAI,CAAChC,SAAY,EACjB,IAAI,EACJ8F,CACF,CAAC;UACH,CAAC,CAAC;UACFhJ,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,UAAUgC,WAAW,EAAE;YAClD,IAAI,CAACA,WAAW,EAAE;cAChB,IAAI,CAACsB,YAAY,CAAC,CAAC;YACrB;;YAEA;YACA;YACA,IAAIuC,EAAE,GAAG9B,CAAC,CAACS,SAAS,CAAC,CAAC;YACtB,IAAIvE,IAAI,CAACpB,UAAa,CAACE,MAAM,KAAK8G,EAAE,EAAE;cACpC;cACAA,EAAE,GAAG9B,CAAC,CACH+B,cAAc,CAAC,CAAC,CAChBC,IAAI,CAAC5J,QAAQ,CAAC6J,gBAAgB,CAC7BjC,CAAC,CAACoB,eAAe,CAAC,CAAC,EACnBpB,CAAC,CAACsB,cAAc,CAAC,CACnB,CAAC;YACL;YACA,IAAIzH,MAAM,GAAGqC,IAAI,CAACgG,SAAS,CAAC,CAAC;YAC7B,IAAI,CAACrI,MAAM,EAAE;cACXA,MAAM,GAAG7C,EAAE,CAAC4J,EAAE,CAACrJ,IAAI,CAAC4K,cAAc,CAACC,WAAW,CAAC,CAAC;YAClD;YACA,IAAIC,QAAQ,GAAGxI,MAAM,CAACyI,iBAAiB,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC;YACzD,IAAIF,QAAQ,KAAKP,EAAE,KAAKO,QAAQ,IAAIA,QAAQ,CAACG,QAAQ,CAACV,EAAE,CAAC,CAAC,EAAE;cAC1D,IAAIW,OAAO,GAAGzL,EAAE,CAAC0L,GAAG,CAACC,OAAO,CAACC,KAAK,CAACvF,GAAG,CAACgF,QAAQ,EAAE,SAAS,CAAC;cAC3D;cACArL,EAAE,CAAC0L,GAAG,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAACR,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC;cACrDP,EAAE,GAAG9B,CAAC,CACH+B,cAAc,CAAC,CAAC,CAChBC,IAAI,CAAC5J,QAAQ,CAAC6J,gBAAgB,CAC7BjC,CAAC,CAACoB,eAAe,CAAC,CAAC,EACnBpB,CAAC,CAACsB,cAAc,CAAC,CACnB,CAAC;cAEHtK,EAAE,CAAC0L,GAAG,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAACR,QAAQ,EAAE,SAAS,EAAEI,OAAO,CAAC;YACxD;YAEA,IAAIX,EAAE,KAAKO,QAAQ,EAAE;cACnB,IAAIS,SAAS,GAAG5G,IAAI,CAACmD,UAAe,CAACyC,EAAE,CAAC;;cAExC;cACA,IAAIgB,SAAS,IAAIA,SAAS,IAAI5G,IAAI,CAAChC,SAAY,EAAE;gBAC/C,IAAI6I,eAAe,GAAG7G,IAAI,CAAChC,SAAY;gBAEvCgC,IAAI,CAACvB,UAAW,GAAG,IAAI,CAAC,CAAC;gBACzBuB,IAAI,CAAChC,SAAY,GAAG4I,SAAS;gBAE7B,IAAIE,YAAY,GAAG,CAAC,CAAC;gBACrBhM,EAAE,CAACU,KAAK,CAACyE,KAAK,SAAM,CAAC6G,YAAY,EAAE,YAAY;kBAC7C9G,IAAI,CAAChC,SAAY,GAAG,IAAI;kBACxBgC,IAAI,CAACvB,UAAW,GAAG,KAAK;gBAC1B,CAAC,CAAC;;gBAEF;gBACA,IAAIoI,eAAe,EAAE;kBACnB/L,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAAC4G,YAAY,EAAE,YAAY;oBAC5C,OAAO9G,IAAI,CAACH,UAAW,CACrB,WAAW,EACXgH,eAAe,EACf7G,IAAI,CAAC/B,SAAY,EACjB,KAAK,EACL6F,CACF,CAAC;kBACH,CAAC,CAAC;gBACJ;gBAEAhJ,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAAC4G,YAAY,EAAE,YAAY;kBAC5C,OAAO9G,IAAI,CAACH,UAAW,CACrB,UAAU,EACV+G,SAAS,EACT5G,IAAI,CAAC/B,SAAY,EACjB,IAAI,EACJ6F,CACF,CAAC;gBACH,CAAC,CAAC;gBAEF,OAAOhJ,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAAC4G,YAAY,EAAE,UAAUC,SAAS,EAAE;kBAC5D/G,IAAI,CAACvB,UAAW,GAAGsI,SAAS;gBAC9B,CAAC,CAAC;cACJ;;cAEA;cAAA,KACK,IAAI,CAACH,SAAS,IAAI5G,IAAI,CAAChC,SAAY,EAAE;gBACxC,IAAI8I,YAAY,GAAG,CAAC,CAAC;gBACrBhM,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAAC4G,YAAY,EAAE,YAAY;kBAC5C,OAAO9G,IAAI,CAACH,UAAW,CACrB,WAAW,EACXG,IAAI,CAAChC,SAAY,EACjBgC,IAAI,CAAC/B,SAAY,EACjB,KAAK,EACL6F,CACF,CAAC;gBACH,CAAC,CAAC;gBACF,OAAOhJ,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAAC4G,YAAY,EAAE,YAAY;kBACnD9G,IAAI,CAAChC,SAAY,GAAG,IAAI;kBACxBgC,IAAI,CAACvB,UAAW,GAAG,KAAK;kBAExB,OAAOuB,IAAI,CAACN,UAAc,CAAC,CAAC;gBAC9B,CAAC,CAAC;cACJ;YACF;UACF,CAAC,CAAC;UACF,OAAO5E,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;YAC9C;YACA,IAAIuB,IAAI,GAAGtB,IAAI,CAAC5B,SAAM;YACtBkD,IAAI,CAACG,OAAO,GAAGqC,CAAC,CAACkD,aAAa,CAAC,CAAC;YAChC1F,IAAI,CAACE,KAAK,GAAGsC,CAAC,CAACmD,cAAc,CAAC,CAAC;YAC/B3F,IAAI,CAACK,GAAG,GAAGmC,CAAC,CAACoD,YAAY,CAAC,CAAC;YAC3B,OAAOlH,IAAI,CAACN,UAAc,CAAC,CAAC;UAC9B,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI4F,SAAS,WAAAA,UAACxB,CAAC,EAAE;QACX,IAAI,CAAC,IAAI,CAAClF,UAAa,EAAE;UACvB,OAAO,IAAI;QACb;QAEA,IAAIuI,MAAM,GAAGrD,CAAC,CAACoB,eAAe,CAAC,CAAC,GAAG,IAAI,CAACtG,UAAa,CAACqG,IAAI;QAC1D,IAAImC,MAAM,GAAGtD,CAAC,CAACsB,cAAc,CAAC,CAAC,GAAG,IAAI,CAACxG,UAAa,CAACuG,GAAG;QAExD,OAAO;UACLO,CAAC,EAAEyB,MAAM;UACTxB,CAAC,EAAEyB;QACL,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;MACI5D,YAAY,WAAAA,aAACM,CAAC,EAAE;QACd,IAAI,CAACA,CAAC,CAACQ,SAAS,CAAC,CAAC,EAAE;UAClB;QACF;QAEA,IAAIvE,OAAO,GAAG,CAAC,CAAC;QAChB,IAAIC,IAAI,GAAG,IAAI;;QAEf;QACA,IAAI,IAAI,CAACvB,UAAW,IAAI,IAAI,CAACC,UAAa,EAAE;UAC1C5D,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;YACvC,OAAOC,IAAI,CAACH,UAAW,CACrB,MAAM,EACNG,IAAI,CAAChC,SAAY,EACjBgC,IAAI,CAAC/B,SAAY,EACjB,KAAK,EACL6F,CACF,CAAC;UACH,CAAC,CAAC;QACJ;QAEA,OAAOhJ,EAAE,CAACU,KAAK,CAACyE,KAAK,CAACC,IAAI,CAACH,OAAO,EAAE,YAAY;UAC9C;UACA,IAAI+D,CAAC,CAACS,SAAS,CAAC,CAAC,IAAIvE,IAAI,CAAC/B,SAAY,EAAE;YACtC6F,CAAC,CAACuD,eAAe,CAAC,CAAC;UACrB;;UAEA;UACA,OAAOrH,IAAI,CAACqD,YAAY,CAAC,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;MACIO,OAAO,WAAAA,QAACE,CAAC,EAAE;QACTA,CAAC,CAACwD,IAAI,CAAC,CAAC;MACV,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI7K,aAAa,WAAAA,cAACqH,CAAC,EAAE;QACf,OAAO,IAAI,CAACT,YAAY,CAAC,CAAC;MAC5B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACII,UAAU,WAAAA,WAACK,CAAC,EAAE;QACZ,IAAIyD,IAAI,GAAGzD,CAAC,CAAC0D,gBAAgB,CAAC,CAAC;QAC/B,QAAQD,IAAI;UACV,KAAK,KAAK;UACV,KAAK,SAAS;UACd,KAAK,OAAO;YACV,IAAI,CAAC,IAAI,CAACnJ,SAAM,CAACmJ,IAAI,CAAC,EAAE;cACtB,IAAI,CAACnJ,SAAM,CAACmJ,IAAI,CAAC,GAAG,IAAI;cACxB,OAAO,IAAI,CAAC7H,UAAc,CAAC,CAAC;YAC9B;QACJ;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIgE,QAAQ,WAAAA,SAACI,CAAC,EAAE;QACV,IAAIyD,IAAI,GAAGzD,CAAC,CAAC0D,gBAAgB,CAAC,CAAC;QAC/B,QAAQD,IAAI;UACV,KAAK,KAAK;UACV,KAAK,SAAS;UACd,KAAK,OAAO;YACV,IAAI,IAAI,CAACnJ,SAAM,CAACmJ,IAAI,CAAC,EAAE;cACrB,IAAI,CAACnJ,SAAM,CAACmJ,IAAI,CAAC,GAAG,KAAK;cACzB,OAAO,IAAI,CAAC7H,UAAc,CAAC,CAAC;YAC9B;QACJ;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIiE,WAAW,WAAAA,YAACG,CAAC,EAAE;QACb,IAAIyD,IAAI,GAAGzD,CAAC,CAAC0D,gBAAgB,CAAC,CAAC;QAC/B,QAAQD,IAAI;UACV,KAAK,QAAQ;YACX,OAAO,IAAI,CAAClE,YAAY,CAAC,CAAC;QAC9B;MACF;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IAEEoE,QAAQ,WAAAA,SAAA,EAAG;MACT3M,EAAE,CAACU,KAAK,CAACe,YAAY,CAAC+G,cAAc,CAClC9G,MAAM,EACN,MAAM,EACN,IAAI,CAACC,aAAa,EAClB,IACF,CAAC;;MAED;MACA,IAAI,CAACwB,SAAY,GACf,IAAI,CAACD,SAAY,GACjB,IAAI,CAACjC,SAAS,GACd,IAAI,CAACC,SAAM,GACX,IAAI,CAACkC,SAAO,GACZ,IAAI,CAACC,SAAS,GACd,IAAI,CAACC,SAAM,GACX,IAAI,CAACC,SAAO,GACV,IAAI;IACV,CAAC;IAED;AACF;AACA;AACA;AACA;IAEEqJ,KAAK,WAAAA,MAAC/K,OAAO,EAAE;MACb7B,EAAE,CAACU,KAAK,CAACe,YAAY,CAACoL,UAAU,CAAChL,OAAO,CAAC;IAC3C;EACF,CAAC,CAAC;EAllCF7B,EAAE,CAACU,KAAK,CAAC0I,OAAO,CAACC,QAAQ,CAAClJ,aAAa,GAAGA,aAAa;AAAC"
}