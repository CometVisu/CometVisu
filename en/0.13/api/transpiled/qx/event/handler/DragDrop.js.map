{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__root",
    "getWindow",
    "document",
    "documentElement",
    "addListener",
    "_onLongtap",
    "_onPointerdown",
    "Registration",
    "window",
    "_onWindowBlur",
    "__rebuildStructures",
    "statics",
    "PRIORITY",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "dragstart",
    "dragend",
    "dragover",
    "dragleave",
    "drop",
    "drag",
    "dragchange",
    "droprequest",
    "IGNORE_CAN_HANDLE",
    "ALLOWED_BUTTONS",
    "MIN_DRAG_DISTANCE",
    "properties",
    "cursor",
    "check",
    "nullable",
    "init",
    "members",
    "__dropTarget",
    "__dragTarget",
    "__types",
    "__actions",
    "__keys",
    "__cache",
    "__currentType",
    "__currentAction",
    "__sessionActive",
    "__validDrop",
    "__validAction",
    "__dragTargetWidget",
    "__startConfig",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "addType",
    "addAction",
    "action",
    "supportsType",
    "supportsAction",
    "setDropAllowed",
    "isAllowed",
    "__detectAction",
    "getData",
    "Error",
    "__fireEvent",
    "getDataAsync",
    "tracker",
    "self",
    "Utils",
    "then",
    "getCurrentAction",
    "getCurrentActionAsync",
    "Environment",
    "select",
    "Promise",
    "resolve",
    "classname",
    "getDragTarget",
    "addData",
    "data",
    "getCurrentType",
    "isSessionActive",
    "get",
    "reject",
    "actions",
    "keys",
    "current",
    "Shift",
    "Control",
    "alias",
    "Alt",
    "copy",
    "move",
    "old",
    "validAction",
    "relatedTarget",
    "cancelable",
    "original",
    "async",
    "dragEvent",
    "createEvent",
    "Drag",
    "setRelatedTarget",
    "result",
    "dispatchEvent",
    "undefined",
    "getDefaultPrevented",
    "__findDraggable",
    "elem",
    "nodeType",
    "getAttribute",
    "parentNode",
    "__findDroppable",
    "clearSession",
    "removeListener",
    "_onPointermove",
    "_onPointerup",
    "_onKeyDown",
    "_onKeyUp",
    "_onKeyPress",
    "_onRoll",
    "removeState",
    "e",
    "getPointerType",
    "_start",
    "isButtonOk",
    "handler",
    "DragDrop",
    "indexOf",
    "getButton",
    "isPrimary",
    "getTarget",
    "draggable",
    "widgetOriginalTarget",
    "ui",
    "Widget",
    "getWidgetByElement",
    "isAnonymous",
    "getLayoutParent",
    "addState",
    "getOriginalTarget",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "delta",
    "_getDelta",
    "distance",
    "Math",
    "abs",
    "x",
    "y",
    "el",
    "getNativeEvent",
    "view",
    "elementFromPoint",
    "getCursor",
    "DragDropCursor",
    "getInstance",
    "cursorEl",
    "getContentElement",
    "getDomElement",
    "contains",
    "display",
    "bom",
    "element",
    "Style",
    "set",
    "droppable",
    "dropLeaveTarget",
    "innerTracker",
    "validDrop",
    "isCtrlPressed",
    "isShiftPressed",
    "isAltPressed",
    "deltaX",
    "deltaY",
    "stopPropagation",
    "stop",
    "iden",
    "getKeyIdentifier",
    "destruct",
    "defer",
    "addHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/DragDrop.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Event handler, which supports drag events on DOM elements.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.event.handler.Gesture)\n * @require(qx.event.handler.Keyboard)\n * @require(qx.event.handler.Capture)\n */\nqx.Class.define(\"qx.event.handler.DragDrop\", {\n  extend: qx.core.Object,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    // Define shorthands\n    this.__manager = manager;\n    this.__root = manager.getWindow().document.documentElement;\n\n    // Initialize listener\n    this.__manager.addListener(this.__root, \"longtap\", this._onLongtap, this);\n    this.__manager.addListener(\n      this.__root,\n      \"pointerdown\",\n      this._onPointerdown,\n      this,\n      true\n    );\n\n    qx.event.Registration.addListener(window, \"blur\", this._onWindowBlur, this);\n\n    // Initialize data structures\n    this.__rebuildStructures();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      dragstart: 1,\n      dragend: 1,\n      dragover: 1,\n      dragleave: 1,\n      drop: 1,\n      drag: 1,\n      dragchange: 1,\n      droprequest: 1\n    },\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true,\n\n    /**\n     * Array of strings holding the names of the allowed mouse buttons\n     * for Drag & Drop. The default is \"left\" but could be extended with\n     * \"middle\" or \"right\"\n     */\n    ALLOWED_BUTTONS: [\"left\"],\n\n    /**\n     * The distance needed to change the mouse position before a drag session start.\n     */\n    MIN_DRAG_DISTANCE: 5\n  },\n\n  properties: {\n    /**\n     * Widget instance of the drag & drop cursor. If non is given, the default\n     * {@link qx.ui.core.DragDropCursor} will be used.\n     */\n    cursor: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __manager: null,\n    __root: null,\n    __dropTarget: null,\n    __dragTarget: null,\n    __types: null,\n    __actions: null,\n    __keys: null,\n    __cache: null,\n    __currentType: null,\n    __currentAction: null,\n    __sessionActive: false,\n    __validDrop: false,\n    __validAction: false,\n    __dragTargetWidget: null,\n    __startConfig: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Registers a supported type\n     *\n     * @param type {String} The type to add\n     */\n    addType(type) {\n      this.__types[type] = true;\n    },\n\n    /**\n     * Registers a supported action. One of <code>move</code>,\n     * <code>copy</code> or <code>alias</code>.\n     *\n     * @param action {String} The action to add\n     */\n    addAction(action) {\n      this.__actions[action] = true;\n    },\n\n    /**\n     * Whether the current drag target supports the given type\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the type is supported\n     */\n    supportsType(type) {\n      return !!this.__types[type];\n    },\n\n    /**\n     * Whether the current drag target supports the given action\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the action is supported\n     */\n    supportsAction(type) {\n      return !!this.__actions[type];\n    },\n\n    /**\n     * Whether the current drop target allows the current drag target.\n     *\n     * @param isAllowed {Boolean} False if a drop should be disallowed\n     */\n    setDropAllowed(isAllowed) {\n      this.__validDrop = isAllowed;\n      this.__detectAction();\n    },\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * Note that this is a synchronous method and if any of the drag and drop\n     * events handlers are implemented using Promises, this may fail; @see\n     * `getDataAsync`.\n     *\n     * @param type {String} Any supported type\n     * @return {var} The result data in a promise\n     */\n    getData(type) {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\n          \"This method must not be used outside the drop event listener!\"\n        );\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      if (!this.__cache[type]) {\n        this.__currentType = type;\n        this.__fireEvent(\n          \"droprequest\",\n          this.__dragTarget,\n          this.__dropTarget,\n          false,\n          false\n        );\n      }\n\n      if (!this.__cache[type]) {\n        throw new Error(\n          \"Please use a droprequest listener to the drag source to fill the manager with data!\"\n        );\n      }\n\n      return this.__cache[type] || null;\n    },\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * @param type {String} Any supported type\n     * @return {qx.Promise} The result data in a promise\n     */\n    getDataAsync(type) {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\n          \"This method must not be used outside the drop event listener!\"\n        );\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      var tracker = {};\n      var self = this;\n      if (!this.__cache[type]) {\n        qx.event.Utils.then(tracker, function () {\n          self.__currentType = type;\n          return self.__fireEvent(\n            \"droprequest\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        if (!this.__cache[type]) {\n          throw new Error(\n            \"Please use a droprequest listener to the drag source to fill the manager with data!\"\n          );\n        }\n\n        return this.__cache[type] || null;\n      });\n    },\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentAction() {\n      this.__detectAction();\n      return this.__currentAction;\n    },\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {qx.Promise|String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentActionAsync: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        var self = this;\n\n        return qx.Promise.resolve(self.__detectAction()).then(function () {\n          return self.__currentAction;\n        });\n      },\n      false() {\n        throw new Error(\n          this.classname +\n            \".getCurrentActionAsync not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Returns the widget which has been the target of the drag start.\n     * @return {qx.ui.core.Widget} The widget on which the drag started.\n     */\n    getDragTarget() {\n      return this.__dragTargetWidget;\n    },\n\n    /**\n     * Adds data of the given type to the internal storage. The data\n     * is available until the <code>dragend</code> event is fired.\n     *\n     * @param type {String} Any valid type\n     * @param data {var} Any data to store\n     */\n    addData(type, data) {\n      this.__cache[type] = data;\n    },\n\n    /**\n     * Returns the type which was requested last.\n     *\n     * @return {String} The last requested data type\n     */\n    getCurrentType() {\n      return this.__currentType;\n    },\n\n    /**\n     * Returns if a drag session is currently active\n     *\n     * @return {Boolean} active drag session\n     */\n    isSessionActive() {\n      return this.__sessionActive;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Rebuilds the internal data storage used during a drag&drop session\n     */\n    __rebuildStructures() {\n      this.__types = {};\n      this.__actions = {};\n      this.__keys = {};\n      this.__cache = {};\n    },\n\n    /**\n     * Detects the current action and stores it under the private\n     * field <code>__currentAction</code>. Also fires the event\n     * <code>dragchange</code> on every modification.\n     *\n     * @return {qx.Promise|null}\n     */\n    __detectAction() {\n      if (this.__dragTarget == null) {\n        if (qx.core.Environment.get(\"qx.promise\")) {\n          return qx.Promise.reject();\n        } else {\n          return null;\n        }\n      }\n\n      var actions = this.__actions;\n      var keys = this.__keys;\n      var current = null;\n\n      if (this.__validDrop) {\n        if (keys.Shift && keys.Control && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Shift && keys.Alt && actions.copy) {\n          current = \"copy\";\n        } else if (keys.Shift && actions.move) {\n          current = \"move\";\n        } else if (keys.Alt && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Control && actions.copy) {\n          current = \"copy\";\n        } else if (actions.move) {\n          current = \"move\";\n        } else if (actions.copy) {\n          current = \"copy\";\n        } else if (actions.alias) {\n          current = \"alias\";\n        }\n      }\n\n      var self = this;\n      var tracker = {};\n      var old = this.__currentAction;\n      if (current != old) {\n        if (this.__dropTarget) {\n          qx.event.Utils.catch(function () {\n            self.__validAction = false;\n            current = null;\n          });\n          qx.event.Utils.then(tracker, function () {\n            self.__currentAction = current;\n            return self.__fireEvent(\n              \"dragchange\",\n              self.__dropTarget,\n              self.__dragTarget,\n              true\n            );\n          });\n          qx.event.Utils.then(tracker, function (validAction) {\n            self.__validAction = validAction;\n            if (!validAction) {\n              current = null;\n            }\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        if (current != old) {\n          self.__currentAction = current;\n          return self.__fireEvent(\n            \"dragchange\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        }\n      });\n    },\n\n    /**\n     * Wrapper for {@link qx.event.Registration#fireEvent} for drag&drop events\n     * needed in this class.\n     *\n     * @param type {String} Event type\n     * @param target {Object} Target to fire on\n     * @param relatedTarget {Object} Related target, i.e. drag or drop target\n     *    depending on the drag event\n     * @param cancelable {Boolean} Whether the event is cancelable\n     * @param original {qx.event.type.Pointer} Original pointer event\n     * @return {qx.Promise|Boolean} <code>true</code> if the event's default behavior was\n     * not prevented\n     */\n    __fireEvent(type, target, relatedTarget, cancelable, original, async) {\n      var Registration = qx.event.Registration;\n      var dragEvent = Registration.createEvent(type, qx.event.type.Drag, [\n        cancelable,\n        original\n      ]);\n\n      if (target !== relatedTarget) {\n        dragEvent.setRelatedTarget(relatedTarget);\n      }\n\n      var result = Registration.dispatchEvent(target, dragEvent);\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        if (async === undefined || async) {\n          return qx.Promise.resolve(result).then(function () {\n            return !dragEvent.getDefaultPrevented();\n          });\n        } else {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.Promise.isPromise(result)) {\n              this.error(\n                'DragDrop event \"' +\n                  type +\n                  '\" returned a promise but a synchronous event was required, drag and drop may not work as expected (consider using getDataAsync)'\n              );\n            }\n          }\n          return result;\n        }\n      } else {\n        return result;\n      }\n    },\n\n    /**\n     * Finds next draggable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDraggable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is draggable. May also be <code>null</code>\n     */\n    __findDraggable(elem) {\n      while (elem && elem.nodeType == 1) {\n        if (elem.getAttribute(\"qxDraggable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    /**\n     * Finds next droppable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is droppable. May also be <code>null</code>\n     */\n    __findDroppable(elem) {\n      while (elem && elem.nodeType == 1) {\n        if (elem.getAttribute(\"qxDroppable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    /**\n     * Cleans up a drag&drop session when <code>dragstart</code> was fired before.\n     *\n     * @return {qx.Promise?} promise, if one was created by event handlers\n     */\n    clearSession() {\n      //this.debug(\"clearSession\");\n\n      // Deregister from root events\n      this.__manager.removeListener(\n        this.__root,\n        \"pointermove\",\n        this._onPointermove,\n        this\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"pointerup\",\n        this._onPointerup,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keydown\",\n        this._onKeyDown,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keyup\",\n        this._onKeyUp,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keypress\",\n        this._onKeyPress,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"roll\",\n        this._onRoll,\n        this,\n        true\n      );\n\n      var tracker = {};\n      var self = this;\n\n      // Fire dragend event\n      if (this.__dragTarget) {\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"dragend\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // Cleanup\n        self.__validDrop = false;\n        self.__dropTarget = null;\n        if (self.__dragTargetWidget) {\n          self.__dragTargetWidget.removeState(\"drag\");\n          self.__dragTargetWidget = null;\n        }\n\n        // Clear init\n        //self.debug(\"Clearing drag target\");\n        self.__dragTarget = null;\n        self.__sessionActive = false;\n        self.__startConfig = null;\n        self.__rebuildStructures();\n      });\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for long tap which takes care of starting the drag & drop session for\n     * touch interactions.\n     * @param e {qx.event.type.Tap} The longtap event.\n     */\n    _onLongtap(e) {\n      // only for touch\n      if (e.getPointerType() != \"touch\") {\n        return;\n      }\n      // prevent scrolling\n      this.__manager.addListener(this.__root, \"roll\", this._onRoll, this, true);\n      return this._start(e);\n    },\n\n    /**\n     * Helper to start the drag & drop session. It is responsible for firing the\n     * dragstart event and attaching the key listener.\n     * @param e {qx.event.type.Pointer} Either a longtap or pointermove event.\n     *\n     * @return {Boolean} Returns <code>false</code> if drag session should be\n     * canceled.\n     */\n    _start(e) {\n      // only for primary pointer and allowed buttons\n      var isButtonOk =\n        qx.event.handler.DragDrop.ALLOWED_BUTTONS.indexOf(e.getButton()) !== -1;\n      if (!e.isPrimary() || !isButtonOk) {\n        return false;\n      }\n\n      // start target can be none as the drag & drop handler might\n      // be created after the first start event\n      var target = this.__startConfig\n        ? this.__startConfig.target\n        : e.getTarget();\n      var draggable = this.__findDraggable(target);\n      if (draggable) {\n        // This is the source target\n        //this.debug(\"Setting dragtarget = \" + draggable);\n        this.__dragTarget = draggable;\n\n        var widgetOriginalTarget = qx.ui.core.Widget.getWidgetByElement(\n          this.__startConfig.original\n        );\n\n        while (widgetOriginalTarget && widgetOriginalTarget.isAnonymous()) {\n          widgetOriginalTarget = widgetOriginalTarget.getLayoutParent();\n        }\n        if (widgetOriginalTarget) {\n          this.__dragTargetWidget = widgetOriginalTarget;\n          widgetOriginalTarget.addState(\"drag\");\n        }\n\n        // fire cancelable dragstart\n        var self = this;\n        var tracker = {};\n        qx.event.Utils.catch(function () {\n          //self.debug(\"dragstart FAILED, setting __sessionActive=false\");\n          self.__sessionActive = false;\n        });\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"dragstart\",\n            self.__dragTarget,\n            self.__dropTarget,\n            true,\n            e\n          );\n        });\n        return qx.event.Utils.then(tracker, function (validAction) {\n          if (!validAction) {\n            return;\n          }\n          //self.debug(\"dragstart ok, setting __sessionActive=true\")\n          self.__manager.addListener(\n            self.__root,\n            \"keydown\",\n            self._onKeyDown,\n            self,\n            true\n          );\n\n          self.__manager.addListener(\n            self.__root,\n            \"keyup\",\n            self._onKeyUp,\n            self,\n            true\n          );\n\n          self.__manager.addListener(\n            self.__root,\n            \"keypress\",\n            self._onKeyPress,\n            self,\n            true\n          );\n\n          self.__sessionActive = true;\n        });\n      }\n    },\n\n    /**\n     * Event handler for the pointerdown event which stores the initial targets and the coordinates.\n     * @param e {qx.event.type.Pointer} The pointerdown event.\n     */\n    _onPointerdown(e) {\n      if (e.isPrimary()) {\n        this.__startConfig = {\n          target: e.getTarget(),\n          original: e.getOriginalTarget(),\n          left: e.getDocumentLeft(),\n          top: e.getDocumentTop()\n        };\n\n        this.__manager.addListener(\n          this.__root,\n          \"pointermove\",\n          this._onPointermove,\n          this\n        );\n\n        this.__manager.addListener(\n          this.__root,\n          \"pointerup\",\n          this._onPointerup,\n          this,\n          true\n        );\n      }\n    },\n\n    /**\n     * Event handler for the pointermove event which starts the drag session and\n     * is responsible for firing the drag, dragover and dragleave event.\n     * @param e {qx.event.type.Pointer} The pointermove event.\n     */\n    _onPointermove(e) {\n      // only allow drag & drop for primary pointer\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      //this.debug(\"_onPointermove: start\");\n\n      var self = this;\n      var tracker = {};\n\n      qx.event.Utils.catch(function () {\n        return self.clearSession();\n      });\n\n      // start the drag session for mouse\n      if (!self.__sessionActive && e.getPointerType() == \"mouse\") {\n        var delta = self._getDelta(e);\n        // if the mouse moved a bit in any direction\n        var distance = qx.event.handler.DragDrop.MIN_DRAG_DISTANCE;\n        if (\n          delta &&\n          (Math.abs(delta.x) > distance || Math.abs(delta.y) > distance)\n        ) {\n          //self.debug(\"_onPointermove: outside min drag distance\");\n          qx.event.Utils.then(tracker, function () {\n            return self._start(e);\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // check if the session has been activated\n        if (!self.__sessionActive) {\n          //self.debug(\"not active\");\n          return;\n        }\n\n        var tracker = {};\n        qx.event.Utils.then(tracker, function () {\n          //self.debug(\"active, firing drag\");\n          return self.__fireEvent(\n            \"drag\",\n            self.__dragTarget,\n            self.__dropTarget,\n            true,\n            e\n          );\n        });\n        qx.event.Utils.then(tracker, function (validAction) {\n          if (!validAction) {\n            this.clearSession();\n          }\n\n          //self.debug(\"drag\");\n          // find current hovered droppable\n          var el = e.getTarget();\n          if (self.__startConfig.target === el) {\n            // on touch devices the native events return wrong elements as target (its always the element where the dragging started)\n            el = e\n              .getNativeEvent()\n              .view.document.elementFromPoint(\n                e.getDocumentLeft(),\n                e.getDocumentTop()\n              );\n          }\n          var cursor = self.getCursor();\n          if (!cursor) {\n            cursor = qx.ui.core.DragDropCursor.getInstance();\n          }\n          var cursorEl = cursor.getContentElement().getDomElement();\n          if (cursorEl && (el === cursorEl || cursorEl.contains(el))) {\n            var display = qx.bom.element.Style.get(cursorEl, \"display\");\n            // get the cursor out of the way\n            qx.bom.element.Style.set(cursorEl, \"display\", \"none\");\n            el = e\n              .getNativeEvent()\n              .view.document.elementFromPoint(\n                e.getDocumentLeft(),\n                e.getDocumentTop()\n              );\n\n            qx.bom.element.Style.set(cursorEl, \"display\", display);\n          }\n\n          if (el !== cursorEl) {\n            var droppable = self.__findDroppable(el);\n\n            // new drop target detected\n            if (droppable && droppable != self.__dropTarget) {\n              var dropLeaveTarget = self.__dropTarget;\n\n              self.__validDrop = true; // initial value should be true\n              self.__dropTarget = droppable;\n\n              var innerTracker = {};\n              qx.event.Utils.catch(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n              });\n\n              // fire dragleave for previous drop target\n              if (dropLeaveTarget) {\n                qx.event.Utils.then(innerTracker, function () {\n                  return self.__fireEvent(\n                    \"dragleave\",\n                    dropLeaveTarget,\n                    self.__dragTarget,\n                    false,\n                    e\n                  );\n                });\n              }\n\n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\n                  \"dragover\",\n                  droppable,\n                  self.__dragTarget,\n                  true,\n                  e\n                );\n              });\n\n              return qx.event.Utils.then(innerTracker, function (validDrop) {\n                self.__validDrop = validDrop;\n              });\n            }\n\n            // only previous drop target\n            else if (!droppable && self.__dropTarget) {\n              var innerTracker = {};\n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\n                  \"dragleave\",\n                  self.__dropTarget,\n                  self.__dragTarget,\n                  false,\n                  e\n                );\n              });\n              return qx.event.Utils.then(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n\n                return self.__detectAction();\n              });\n            }\n          }\n        });\n        return qx.event.Utils.then(tracker, function () {\n          // Reevaluate current action\n          var keys = self.__keys;\n          keys.Control = e.isCtrlPressed();\n          keys.Shift = e.isShiftPressed();\n          keys.Alt = e.isAltPressed();\n          return self.__detectAction();\n        });\n      });\n    },\n\n    /**\n     * Helper function to compute the delta between current cursor position from given event\n     * and the stored coordinates at {@link #_onPointerdown}.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     *\n     * @return {Map} containing the deltaX as x, and deltaY as y.\n     */\n    _getDelta(e) {\n      if (!this.__startConfig) {\n        return null;\n      }\n\n      var deltaX = e.getDocumentLeft() - this.__startConfig.left;\n      var deltaY = e.getDocumentTop() - this.__startConfig.top;\n\n      return {\n        x: deltaX,\n        y: deltaY\n      };\n    },\n\n    /**\n     * Handler for the pointerup event which is responsible fore firing the drop event.\n     * @param e {qx.event.type.Pointer} The pointerup event\n     */\n    _onPointerup(e) {\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      var tracker = {};\n      var self = this;\n\n      // Fire drop event in success case\n      if (this.__validDrop && this.__validAction) {\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"drop\",\n            self.__dropTarget,\n            self.__dragTarget,\n            false,\n            e\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // Stop event\n        if (e.getTarget() == self.__dragTarget) {\n          e.stopPropagation();\n        }\n\n        // Clean up\n        return self.clearSession();\n      });\n    },\n\n    /**\n     * Roll listener to stop scrolling on touch devices.\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll(e) {\n      e.stop();\n    },\n\n    /**\n     * Event listener for window's <code>blur</code> event\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    _onWindowBlur(e) {\n      return this.clearSession();\n    },\n\n    /**\n     * Event listener for root's <code>keydown</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyDown(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (!this.__keys[iden]) {\n            this.__keys[iden] = true;\n            return this.__detectAction();\n          }\n      }\n    },\n\n    /**\n     * Event listener for root's <code>keyup</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyUp(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (this.__keys[iden]) {\n            this.__keys[iden] = false;\n            return this.__detectAction();\n          }\n      }\n    },\n\n    /**\n     * Event listener for root's <code>keypress</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyPress(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Escape\":\n          return this.clearSession();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    qx.event.Registration.removeListener(\n      window,\n      \"blur\",\n      this._onWindowBlur,\n      this\n    );\n\n    // Clear fields\n    this.__dragTarget =\n      this.__dropTarget =\n      this.__manager =\n      this.__root =\n      this.__types =\n      this.__actions =\n      this.__keys =\n      this.__cache =\n        null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ],
  "mappings": "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"
}