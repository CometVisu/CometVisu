{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "statics",
    "TAP_MAX_DISTANCE",
    "Environment",
    "get",
    "SWIPE_DIRECTION",
    "x",
    "y",
    "SWIPE_MIN_DISTANCE",
    "SWIPE_MIN_VELOCITY",
    "LONGTAP_TIME",
    "construct",
    "target",
    "emitter",
    "__target",
    "__emitter",
    "_initTouchObserver",
    "__pointers",
    "__touchStartPosition",
    "members",
    "__onTouchEventWrapper",
    "__originalTarget",
    "__startTime",
    "__beginScalingDistance",
    "__beginRotation",
    "__touchEventNames",
    "lang",
    "Function",
    "listener",
    "_onTouchEvent",
    "engineVersion",
    "parseInt",
    "i",
    "length",
    "bom",
    "Event",
    "addNativeListener",
    "_stopTouchObserver",
    "removeNativeListener",
    "domEvent",
    "_commonTouchEventHandler",
    "_getScalingDistance",
    "touch0",
    "touch1",
    "Math",
    "sqrt",
    "pow",
    "pageX",
    "pageY",
    "_getRotationAngle",
    "atan2",
    "PI",
    "_calcTouchesDelta",
    "touches",
    "delta",
    "push",
    "_calcSingleTouchDelta",
    "touch",
    "hasOwnProperty",
    "identifier",
    "touchStartPosition",
    "deltaX",
    "floor",
    "clientX",
    "deltaY",
    "clientY",
    "axis",
    "abs",
    "type",
    "_mapPointerEvent",
    "_detectTouchesByPointer",
    "changedTouches",
    "targetTouches",
    "_getTarget",
    "scale",
    "currentScalingDistance",
    "rotation",
    "currentRotation",
    "_rotation",
    "_fireEvent",
    "pointerId",
    "pointer",
    "toLowerCase",
    "indexOf",
    "getTarget",
    "nodeType",
    "parentNode",
    "targetForIE",
    "__evaluateTarget",
    "hitTargets",
    "document",
    "msElementsFromPoint",
    "currentTarget",
    "pointerEvents",
    "element",
    "Style",
    "emit",
    "dispose",
    "event",
    "handler",
    "TouchCore"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/TouchCore.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Tino Butz (tbtz)\n     * Christian Hagendorn (chris_schmidt)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Listens for native touch events and fires composite events like \"tap\" and\n * \"swipe\"\n *\n * @ignore(qx.event.*)\n */\nqx.Bootstrap.define(\"qx.event.handler.TouchCore\", {\n  extend: Object,\n  implement: [qx.core.IDisposable],\n\n  statics: {\n    /** @type {Integer} The maximum distance of a tap. Only if the x or y distance of\n     *      the performed tap is less or equal the value of this constant, a tap\n     *      event is fired.\n     */\n    TAP_MAX_DISTANCE: qx.core.Environment.get(\"os.name\") != \"android\" ? 10 : 40,\n\n    /** @type {Map} The direction of a swipe relative to the axis */\n    SWIPE_DIRECTION: {\n      x: [\"left\", \"right\"],\n      y: [\"up\", \"down\"]\n    },\n\n    /** @type {Integer} The minimum distance of a swipe. Only if the x or y distance\n     *      of the performed swipe is greater as or equal the value of this\n     *      constant, a swipe event is fired.\n     */\n    SWIPE_MIN_DISTANCE:\n      qx.core.Environment.get(\"os.name\") != \"android\" ? 11 : 41,\n\n    /** @type {Integer} The minimum velocity of a swipe. Only if the velocity of the\n     *      performed swipe is greater as or equal the value of this constant, a\n     *      swipe event is fired.\n     */\n    SWIPE_MIN_VELOCITY: 0,\n\n    /**\n     * @type {Integer} The time delta in milliseconds to fire a long tap event.\n     */\n    LONGTAP_TIME: qx.core.Environment.get(\"device.touch\") ? 500 : 99999\n  },\n\n  /**\n   * Create a new instance\n   *\n   * @param target {Element} element on which to listen for native touch events\n   * @param emitter {qx.event.Emitter} Event emitter object\n   */\n  construct(target, emitter) {\n    this.__target = target;\n    this.__emitter = emitter;\n    this._initTouchObserver();\n    this.__pointers = [];\n\n    this.__touchStartPosition = {};\n  },\n\n  members: {\n    __target: null,\n    __emitter: null,\n    __onTouchEventWrapper: null,\n\n    __originalTarget: null,\n\n    __touchStartPosition: null,\n    __startTime: null,\n\n    __beginScalingDistance: null,\n    __beginRotation: null,\n\n    __pointers: null,\n\n    __touchEventNames: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER INIT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Initializes the native touch event listeners.\n     */\n    _initTouchObserver() {\n      this.__onTouchEventWrapper = qx.lang.Function.listener(\n        this._onTouchEvent,\n        this\n      );\n\n      this.__touchEventNames = [\n        \"touchstart\",\n        \"touchmove\",\n        \"touchend\",\n        \"touchcancel\"\n      ];\n\n      if (qx.core.Environment.get(\"event.mspointer\")) {\n        var engineVersion = parseInt(\n          qx.core.Environment.get(\"engine.version\"),\n          10\n        );\n\n        if (engineVersion == 10) {\n          // IE 10\n          this.__touchEventNames = [\n            \"MSPointerDown\",\n            \"MSPointerMove\",\n            \"MSPointerUp\",\n            \"MSPointerCancel\"\n          ];\n        } else {\n          // IE 11+\n          this.__touchEventNames = [\n            \"pointerdown\",\n            \"pointermove\",\n            \"pointerup\",\n            \"pointercancel\"\n          ];\n        }\n      }\n\n      for (var i = 0; i < this.__touchEventNames.length; i++) {\n        qx.bom.Event.addNativeListener(\n          this.__target,\n          this.__touchEventNames[i],\n          this.__onTouchEventWrapper\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER STOP\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Disconnects the native touch event listeners.\n     */\n    _stopTouchObserver() {\n      for (var i = 0; i < this.__touchEventNames.length; i++) {\n        qx.bom.Event.removeNativeListener(\n          this.__target,\n          this.__touchEventNames[i],\n          this.__onTouchEventWrapper\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      NATIVE EVENT OBSERVERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for native touch events.\n     *\n     * @param domEvent {Event} The touch event from the browser.\n     */\n    _onTouchEvent(domEvent) {\n      this._commonTouchEventHandler(domEvent);\n    },\n\n    /**\n     * Calculates the scaling distance between two touches.\n     * @param touch0 {Event} The touch event from the browser.\n     * @param touch1 {Event} The touch event from the browser.\n     * @return {Number} the calculated distance.\n     */\n    _getScalingDistance(touch0, touch1) {\n      return Math.sqrt(\n        Math.pow(touch0.pageX - touch1.pageX, 2) +\n          Math.pow(touch0.pageY - touch1.pageY, 2)\n      );\n    },\n\n    /**\n     * Calculates the rotation between two touches.\n     * @param touch0 {Event} The touch event from the browser.\n     * @param touch1 {Event} The touch event from the browser.\n     * @return {Number} the calculated rotation.\n     */\n    _getRotationAngle(touch0, touch1) {\n      var x = touch0.pageX - touch1.pageX;\n      var y = touch0.pageY - touch1.pageY;\n      return (Math.atan2(y, x) * 180) / Math.PI;\n    },\n\n    /**\n     * Calculates the delta of the touch position relative to its position when <code>touchstart/code> event occurred.\n     * @param touches {Array} an array with the current active touches, provided by <code>touchmove/code> event.\n     * @return {Array} an array containing objects with the calculated delta as <code>x</code>,\n     * <code>y</code> and the identifier of the corresponding touch.\n     */\n    _calcTouchesDelta(touches) {\n      var delta = [];\n      for (var i = 0; i < touches.length; i++) {\n        delta.push(this._calcSingleTouchDelta(touches[i]));\n      }\n      return delta;\n    },\n\n    /**\n     * Calculates the delta of one single touch position relative to its position when <code>touchstart/code> event occurred.\n     * @param touch {Event} the current active touch, provided by <code>touchmove/code> event.\n     * @return {Map} a map containing deltaX as <code>x</code>, deltaY as <code>y</code>, the direction of the movement as <code>axis</code> and the touch identifier as <code>identifier</code>.\n     */\n    _calcSingleTouchDelta(touch) {\n      if (this.__touchStartPosition.hasOwnProperty(touch.identifier)) {\n        var touchStartPosition = this.__touchStartPosition[touch.identifier];\n        var deltaX = Math.floor(touch.clientX - touchStartPosition[0]);\n        var deltaY = Math.floor(touch.clientY - touchStartPosition[1]);\n        var axis = \"x\";\n        if (Math.abs(deltaX / deltaY) < 1) {\n          axis = \"y\";\n        }\n        return {\n          x: deltaX,\n          y: deltaY,\n          axis: axis,\n          identifier: touch.identifier\n        };\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          axis: null,\n          identifier: touch.identifier\n        };\n      }\n    },\n\n    /**\n     * Called by an event handler.\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String ? null} type of the event\n     */\n    _commonTouchEventHandler(domEvent, type) {\n      var type = type || domEvent.type;\n      if (qx.core.Environment.get(\"event.mspointer\")) {\n        type = this._mapPointerEvent(type);\n        var touches = this._detectTouchesByPointer(domEvent, type);\n\n        domEvent.changedTouches = touches;\n        domEvent.targetTouches = touches;\n        domEvent.touches = touches;\n      }\n\n      domEvent.delta = [];\n\n      if (type == \"touchstart\") {\n        this.__originalTarget = this._getTarget(domEvent);\n\n        if (domEvent.touches && domEvent.touches.length > 1) {\n          this.__beginScalingDistance = this._getScalingDistance(\n            domEvent.touches[0],\n            domEvent.touches[1]\n          );\n\n          this.__beginRotation = this._getRotationAngle(\n            domEvent.touches[0],\n            domEvent.touches[1]\n          );\n        }\n\n        for (var i = 0; i < domEvent.changedTouches.length; i++) {\n          var touch = domEvent.changedTouches[i];\n          this.__touchStartPosition[touch.identifier] = [\n            touch.clientX,\n            touch.clientY\n          ];\n        }\n      }\n\n      if (type == \"touchmove\") {\n        // Polyfill for scale\n        if (\n          typeof domEvent.scale == \"undefined\" &&\n          domEvent.targetTouches.length > 1\n        ) {\n          var currentScalingDistance = this._getScalingDistance(\n            domEvent.targetTouches[0],\n            domEvent.targetTouches[1]\n          );\n\n          domEvent.scale = currentScalingDistance / this.__beginScalingDistance;\n        }\n        // Polyfill for rotation\n        if (\n          (typeof domEvent.rotation == \"undefined\" ||\n            qx.core.Environment.get(\"event.mspointer\")) &&\n          domEvent.targetTouches.length > 1\n        ) {\n          var currentRotation = this._getRotationAngle(\n            domEvent.targetTouches[0],\n            domEvent.targetTouches[1]\n          );\n\n          domEvent._rotation = currentRotation - this.__beginRotation;\n        }\n\n        domEvent.delta = this._calcTouchesDelta(domEvent.targetTouches);\n      }\n\n      this._fireEvent(domEvent, type, this.__originalTarget);\n\n      if (qx.core.Environment.get(\"event.mspointer\")) {\n        if (type == \"touchend\" || type == \"touchcancel\") {\n          delete this.__pointers[domEvent.pointerId];\n        }\n      }\n\n      if (\n        (type == \"touchend\" || type == \"touchcancel\") &&\n        domEvent.changedTouches[0]\n      ) {\n        delete this.__touchStartPosition[domEvent.changedTouches[0].identifier];\n      }\n    },\n\n    /**\n     * Creates an array with all current used touches out of multiple serial pointer events.\n     * Needed because pointerEvents do not provide a touch list.\n     * @param domEvent {Event} DOM event\n     * @param type {String ? null} type of the event\n     * @return {Array} touch list array.\n     */\n    _detectTouchesByPointer(domEvent, type) {\n      var touches = [];\n      if (type == \"touchstart\") {\n        this.__pointers[domEvent.pointerId] = domEvent;\n      } else if (type == \"touchmove\") {\n        this.__pointers[domEvent.pointerId] = domEvent;\n      }\n\n      for (var pointerId in this.__pointers) {\n        var pointer = this.__pointers[pointerId];\n        touches.push(pointer);\n      }\n\n      return touches;\n    },\n\n    /**\n     * Maps a pointer event type to the corresponding touch event type.\n     * @param type {String} the event type to parse.\n     * @return {String} the parsed event name.\n     */\n    _mapPointerEvent(type) {\n      type = type.toLowerCase();\n\n      if (type.indexOf(\"pointerdown\") !== -1) {\n        return \"touchstart\";\n      } else if (type.indexOf(\"pointerup\") !== -1) {\n        return \"touchend\";\n      } else if (type.indexOf(\"pointermove\") !== -1) {\n        return \"touchmove\";\n      } else if (type.indexOf(\"pointercancel\") !== -1) {\n        return \"touchcancel\";\n      }\n\n      return type;\n    },\n\n    /**\n     * Return the target of the event.\n     *\n     * @param domEvent {Event} DOM event\n     * @return {Element} Event target\n     */\n    _getTarget(domEvent) {\n      var target = qx.bom.Event.getTarget(domEvent);\n\n      // Text node. Fix Safari Bug, see http://www.quirksmode.org/js/events_properties.html\n      if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n        if (target && target.nodeType == 3) {\n          target = target.parentNode;\n        }\n      } else if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 11\n      ) {\n        // Fix for IE10 and pointer-events:none\n        //\n        // Changed the condition above to match exactly those browsers\n        // for which the fix was intended\n        // See: https://github.com/qooxdoo/qooxdoo/issues/9481\n        //\n        var targetForIE = this.__evaluateTarget(domEvent);\n        if (targetForIE) {\n          target = targetForIE;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * This method fixes \"pointer-events:none\" for Internet Explorer 10.\n     * Checks which elements are placed to position x/y and traverses the array\n     * till one element has no \"pointer-events:none\" inside its style attribute.\n     * @param domEvent {Event} DOM event\n     * @return {Element|null} Event target\n     */\n    __evaluateTarget(domEvent) {\n      var clientX = null;\n      var clientY = null;\n      if (domEvent && domEvent.touches && domEvent.touches.length !== 0) {\n        clientX = domEvent.touches[0].clientX;\n        clientY = domEvent.touches[0].clientY;\n      }\n\n      // Retrieve an array with elements on point X/Y.\n      var hitTargets = document.msElementsFromPoint(clientX, clientY);\n      if (hitTargets) {\n        // Traverse this array for the elements which has no pointer-events:none inside.\n        for (var i = 0; i < hitTargets.length; i++) {\n          var currentTarget = hitTargets[i];\n          var pointerEvents = qx.bom.element.Style.get(\n            currentTarget,\n            \"pointer-events\",\n            3\n          );\n\n          if (pointerEvents != \"none\") {\n            return currentTarget;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Fire a touch event with the given parameters\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    _fireEvent(domEvent, type, target) {\n      if (!target) {\n        target = this._getTarget(domEvent);\n      }\n\n      var type = type || domEvent.type;\n\n      if (target && target.nodeType && this.__emitter) {\n        this.__emitter.emit(type, domEvent);\n      }\n    },\n\n    /**\n     * Dispose this object\n     */\n    dispose() {\n      this._stopTouchObserver();\n      this.__originalTarget =\n        this.__target =\n        this.__touchEventNames =\n        this.__pointers =\n        this.__emitter =\n        this.__beginScalingDistance =\n        this.__beginRotation =\n          null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}