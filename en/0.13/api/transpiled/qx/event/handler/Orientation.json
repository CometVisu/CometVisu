{
  "className": "qx.event.handler.Orientation",
  "packageName": "qx.event.handler",
  "name": "Orientation",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.event.IEventHandler",
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 40,
        "column": 0,
        "index": 969
      },
      "end": {
        "line": 240,
        "column": 3,
        "index": 6687
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class provides a handler for the orientation event.\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 55,
        "column": 2,
        "index": 1415
      },
      "end": {
        "line": 62,
        "column": 3,
        "index": 1575
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new instance</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "manager {qx.event.Manager} Event manager for the window to use",
          "paramName": "manager",
          "description": " Event manager for the window to use",
          "type": "qx.event.Manager"
        }
      ]
    }
  },
  "statics": {
    "PRIORITY": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1831
        },
        "end": {
          "line": 72,
          "column": 51,
          "index": 1878
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Priority of this handler"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SUPPORTED_TYPES": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 1930
        },
        "end": {
          "line": 77,
          "column": 5,
          "index": 1981
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported event types"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "TARGET_CHECK": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2041
        },
        "end": {
          "line": 80,
          "column": 54,
          "index": 2091
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Which target check to use"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "IGNORE_CAN_HANDLE": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2176
        },
        "end": {
          "line": 83,
          "column": 27,
          "index": 2199
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Whether the method \"canHandleEvent\" must be called"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "members": {
    "__manager": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2407
        },
        "end": {
          "line": 93,
          "column": 19,
          "index": 2422
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__window": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2428
        },
        "end": {
          "line": 94,
          "column": 18,
          "index": 2442
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__nativeEventType": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2448
        },
        "end": {
          "line": 95,
          "column": 27,
          "index": 2471
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_currentOrientation": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2477
        },
        "end": {
          "line": 96,
          "column": 29,
          "index": 2502
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__onNativeWrapper": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2508
        },
        "end": {
          "line": 97,
          "column": 27,
          "index": 2531
        }
      },
      "type": "variable",
      "access": "private"
    },
    "canHandleEvent": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2775
        },
        "end": {
          "line": 108,
          "column": 5,
          "index": 2850
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "registerEvent": {
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 2889
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2972
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "unregisterEvent": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3011
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 3096
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "_initObserver": {
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3380
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 4044
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native orientation change event listeners.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopObserver": {
      "location": {
        "start": {
          "line": 159,
          "column": 4,
          "index": 4328
        },
        "end": {
          "line": 166,
          "column": 5,
          "index": 4512
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native orientation change event listeners.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onNative": {
      "location": {
        "start": {
          "line": 180,
          "column": 4,
          "index": 4904
        },
        "end": {
          "line": 195,
          "column": 6,
          "index": 5469
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the native orientation change event.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} The touch event from the browser.",
            "paramName": "domEvent",
            "description": " The touch event from the browser.",
            "type": "Event"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_onOrientationChange": {
      "location": {
        "start": {
          "line": 201,
          "column": 4,
          "index": 5616
        },
        "end": {
          "line": 217,
          "column": 5,
          "index": 6148
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the detection of an orientation change.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} The touch event from the browser.",
            "paramName": "domEvent",
            "description": " The touch event from the browser.",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 226,
        "column": 2,
        "index": 6344
      },
      "end": {
        "line": 229,
        "column": 3,
        "index": 6429
      }
    },
    "jsdoc": {}
  },
  "defer": {
    "location": {
      "start": {
        "line": 237,
        "column": 2,
        "index": 6616
      },
      "end": {
        "line": 239,
        "column": 3,
        "index": 6683
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}