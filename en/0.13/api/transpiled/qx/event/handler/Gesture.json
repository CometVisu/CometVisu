{
  "className": "qx.event.handler.Gesture",
  "packageName": "qx.event.handler",
  "name": "Gesture",
  "superClass": "qx.event.handler.GestureCore",
  "interfaces": [
    "qx.event.IEventHandler",
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 583
      },
      "end": {
        "line": 287,
        "column": 3,
        "index": 7442
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Unified gesture event handler.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.event.handler.Pointer"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "PRIORITY": {
      "location": {
        "start": {
          "line": 30,
          "column": 4,
          "index": 805
        },
        "end": {
          "line": 30,
          "column": 51,
          "index": 852
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Priority of this handler"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "SUPPORTED_TYPES": {
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 907
        },
        "end": {
          "line": 44,
          "column": 5,
          "index": 1110
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported event types"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "GESTURE_EVENTS": {
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1119
        },
        "end": {
          "line": 51,
          "column": 5,
          "index": 1235
        }
      },
      "type": "variable",
      "access": "public"
    },
    "TARGET_CHECK": {
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 1298
        },
        "end": {
          "line": 56,
          "column": 44,
          "index": 1404
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Which target check to use"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "IGNORE_CAN_HANDLE": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1492
        },
        "end": {
          "line": 59,
          "column": 27,
          "index": 1515
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Whether the method \"canHandleEvent\" must be called"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "EVENT_CLASSES": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1524
        },
        "end": {
          "line": 72,
          "column": 5,
          "index": 1899
        }
      },
      "type": "variable",
      "access": "public"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 80,
        "column": 2,
        "index": 2035
      },
      "end": {
        "line": 87,
        "column": 3,
        "index": 2266
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new instance</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "manager {qx.event.Manager} Event manager for the window to use",
          "paramName": "manager",
          "description": " Event manager for the window to use",
          "type": "qx.event.Manager"
        }
      ]
    }
  },
  "members": {
    "__manager": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2289
        },
        "end": {
          "line": 90,
          "column": 19,
          "index": 2304
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__window": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2311
        },
        "end": {
          "line": 91,
          "column": 18,
          "index": 2325
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__root": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2332
        },
        "end": {
          "line": 92,
          "column": 16,
          "index": 2344
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__listener": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2351
        },
        "end": {
          "line": 93,
          "column": 20,
          "index": 2367
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__onDblClickWrapped": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2374
        },
        "end": {
          "line": 94,
          "column": 29,
          "index": 2399
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__fireRollWrapped": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2406
        },
        "end": {
          "line": 95,
          "column": 27,
          "index": 2429
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getWindow": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2549
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 2598
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for the internal __window object</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Window} DOM window instance",
            "type": "qx.event.handler.Window",
            "description": " DOM window instance"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "canHandleEvent": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2640
        },
        "end": {
          "line": 106,
          "column": 35,
          "index": 2671
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "registerEvent": {
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 2713
        },
        "end": {
          "line": 111,
          "column": 5,
          "index": 2798
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "unregisterEvent": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 2840
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 2927
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "_initObserver": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 2955
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 4239
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.event.handler.GestureCore",
      "appearsIn": [
        "qx.event.handler.GestureCore"
      ]
    },
    "checkAndFireGesture": {
      "location": {
        "start": {
          "line": 173,
          "column": 4,
          "index": 4512
        },
        "end": {
          "line": 179,
          "column": 5,
          "index": 4734
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if a gesture was made and fires the gesture event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "pointerEvent {qx.event.type.Pointer} Pointer event",
            "paramName": "pointerEvent",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          },
          {
            "name": "@param",
            "body": "type {String ? null} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element ? null} event target",
            "paramName": "target",
            "description": " event target",
            "optional": true,
            "defaultValue": "null",
            "type": "Element"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.handler.GestureCore",
      "appearsIn": [
        "qx.event.handler.GestureCore"
      ]
    },
    "_stopObserver": {
      "location": {
        "start": {
          "line": 182,
          "column": 4,
          "index": 4762
        },
        "end": {
          "line": 210,
          "column": 5,
          "index": 5531
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.event.handler.GestureCore",
      "appearsIn": [
        "qx.event.handler.GestureCore"
      ]
    },
    "_hasIntermediaryHandler": {
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 5559
        },
        "end": {
          "line": 217,
          "column": 5,
          "index": 5723
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.event.handler.GestureCore",
      "appearsIn": [
        "qx.event.handler.GestureCore"
      ]
    },
    "_fireEvent": {
      "location": {
        "start": {
          "line": 226,
          "column": 4,
          "index": 5959
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 6661
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fire a touch event with the given parameters</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String ? null} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element ? null} event target",
            "paramName": "target",
            "description": " event target",
            "optional": true,
            "defaultValue": "null",
            "type": "Element"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.event.handler.GestureCore",
      "appearsIn": [
        "qx.event.handler.GestureCore"
      ]
    },
    "dispose": {
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 6716
        },
        "end": {
          "line": 268,
          "column": 5,
          "index": 6923
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Dispose this object</p>"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.IDisposable",
      "appearsIn": [
        "qx.core.IDisposable",
        "qx.event.handler.GestureCore"
      ]
    },
    "__callBase": {
      "location": {
        "start": {
          "line": 276,
          "column": 4,
          "index": 7091
        },
        "end": {
          "line": 278,
          "column": 5,
          "index": 7203
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Call overridden method.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "method {String} Name of the overridden method.",
            "paramName": "method",
            "description": " Name of the overridden method.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args {Array} Arguments.",
            "paramName": "args",
            "description": " Arguments.",
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 281,
        "column": 2,
        "index": 7215
      },
      "end": {
        "line": 286,
        "column": 3,
        "index": 7437
      }
    }
  },
  "descendants": []
}