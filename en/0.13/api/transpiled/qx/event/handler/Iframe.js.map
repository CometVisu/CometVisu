{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "load",
    "navigate",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "onevent",
    "GlobalError",
    "observeMethod",
    "target",
    "currentUrl",
    "bom",
    "Iframe",
    "queryCurrentUrl",
    "$$url",
    "fireEvent",
    "type",
    "Data",
    "members",
    "canHandleEvent",
    "tagName",
    "toLowerCase",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "defer",
    "addHandler",
    "handler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Iframe.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This handler provides a \"load\" event for iframes\r\n */\r\nqx.Class.define(\"qx.event.handler.Iframe\", {\r\n  extend: qx.core.Object,\r\n  implement: qx.event.IEventHandler,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      load: 1,\r\n      navigate: 1\r\n    },\r\n\r\n    /** @type {Integer} Which target check to use */\r\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_DOMNODE,\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: false,\r\n\r\n    /**\r\n     * Internal function called by iframes created using {@link qx.bom.Iframe}.\r\n     *\r\n     * @signature function(target)\r\n     * @internal\r\n     * @param target {Element} DOM element which is the target of this event\r\n     */\r\n    onevent: qx.event.GlobalError.observeMethod(function (target) {\r\n      // Fire navigate event when actual URL diverges from stored URL\r\n      var currentUrl = qx.bom.Iframe.queryCurrentUrl(target);\r\n\r\n      if (currentUrl !== target.$$url) {\r\n        qx.event.Registration.fireEvent(\r\n          target,\r\n          \"navigate\",\r\n          qx.event.type.Data,\r\n          [currentUrl]\r\n        );\r\n\r\n        target.$$url = currentUrl;\r\n      }\r\n\r\n      // Always fire load event\r\n      qx.event.Registration.fireEvent(target, \"load\");\r\n    })\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {\r\n      return target.tagName.toLowerCase() === \"iframe\";\r\n    },\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzCC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IACtBC,SAAS,EAAET,EAAE,CAACU,KAAK,CAACC,aAAa;IAEjC;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;MACAC,QAAQ,EAAEb,EAAE,CAACU,KAAK,CAACI,YAAY,CAACC,eAAe;MAE/C;MACAC,eAAe,EAAE;QACfC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE;MACZ,CAAC;MAED;MACAC,YAAY,EAAEnB,EAAE,CAACU,KAAK,CAACC,aAAa,CAACS,cAAc;MAEnD;MACAC,iBAAiB,EAAE,KAAK;MAExB;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,EAAEtB,EAAE,CAACU,KAAK,CAACa,WAAW,CAACC,aAAa,CAAC,UAAUC,MAAM,EAAE;QAC5D;QACA,IAAIC,UAAU,GAAG1B,EAAE,CAAC2B,GAAG,CAACC,MAAM,CAACC,eAAe,CAACJ,MAAM,CAAC;QAEtD,IAAIC,UAAU,KAAKD,MAAM,CAACK,KAAK,EAAE;UAC/B9B,EAAE,CAACU,KAAK,CAACI,YAAY,CAACiB,SAAS,CAC7BN,MAAM,EACN,UAAU,EACVzB,EAAE,CAACU,KAAK,CAACsB,IAAI,CAACC,IAAI,EAClB,CAACP,UAAU,CACb,CAAC;UAEDD,MAAM,CAACK,KAAK,GAAGJ,UAAU;QAC3B;;QAEA;QACA1B,EAAE,CAACU,KAAK,CAACI,YAAY,CAACiB,SAAS,CAACN,MAAM,EAAE,MAAM,CAAC;MACjD,CAAC;IACH,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEES,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MAEI;MACAC,cAAc,WAAAA,eAACV,MAAM,EAAEO,IAAI,EAAE;QAC3B,OAAOP,MAAM,CAACW,OAAO,CAACC,WAAW,CAAC,CAAC,KAAK,QAAQ;MAClD,CAAC;MAED;MACAC,aAAa,WAAAA,cAACb,MAAM,EAAEO,IAAI,EAAEO,OAAO,EAAE;QACnC;MAAA,CACD;MAED;MACAC,eAAe,WAAAA,gBAACf,MAAM,EAAEO,IAAI,EAAEO,OAAO,EAAE;QACrC;MAAA;IAEJ,CAAC;IAED;AACF;AACA;AACA;AACA;IAEEE,KAAK,WAAAA,MAAC7B,OAAO,EAAE;MACbZ,EAAE,CAACU,KAAK,CAACI,YAAY,CAAC4B,UAAU,CAAC9B,OAAO,CAAC;IAC3C;EACF,CAAC,CAAC;EAjHFZ,EAAE,CAACU,KAAK,CAACiC,OAAO,CAACf,MAAM,CAACzB,aAAa,GAAGA,aAAa;AAAC"
}