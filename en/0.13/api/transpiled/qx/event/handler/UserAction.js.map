{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "useraction",
    "TARGET_CHECK",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "destruct",
    "defer",
    "addHandler",
    "handler",
    "UserAction"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/UserAction.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This handler accepts the useraction event fired by the keyboard, mouse and\n * pointer handlers after an user triggered action has occurred.\n */\nqx.Class.define(\"qx.event.handler.UserAction\", {\n  extend: qx.core.Object,\n  implement: qx.event.IEventHandler,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    // Define shorthands\n    this.__manager = manager;\n    this.__window = manager.getWindow();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      useraction: 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_WINDOW,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __manager: null,\n    __window: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      // Nothing needs to be done here\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__manager = this.__window = null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EAA+C;IAC7CC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MAD6B;IAE7CC,SAAS,EAAET,EAAE,CAACU,KAAH,CAASC,aAFyB;;IAI7C;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;IACEC,SAf6C,qBAenCC,OAfmC,EAe1B;MACjB,sCADiB,CAGjB;;MACA,KAAKC,SAAL,GAAiBD,OAAjB;MACA,KAAKE,SAAL,GAAgBF,OAAO,CAACG,SAAR,EAAhB;IACD,CArB4C;;IAuB7C;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACP;MACAC,QAAQ,EAAElB,EAAE,CAACU,KAAH,CAASS,YAAT,CAAsBC,eAFzB;;MAIP;MACAC,eAAe,EAAE;QACfC,UAAU,EAAE;MADG,CALV;;MASP;MACAC,YAAY,EAAEvB,EAAE,CAACU,KAAH,CAASC,aAAT,CAAuBa,aAV9B;;MAYP;MACAC,iBAAiB,EAAE;IAbZ,CA7BoC;;IA6C7C;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACPZ,SAAS,EAAE,IADJ;MAEPC,SAAQ,EAAE,IAFH;;MAIP;AACJ;AACA;AACA;AACA;MAEI;MACAY,cAXO,0BAWQC,MAXR,EAWgBC,IAXhB,EAWsB,CAAE,CAXxB;MAaP;MACAC,aAdO,yBAcOF,MAdP,EAceC,IAdf,EAcqBE,OAdrB,EAc8B,CACnC;MACD,CAhBM;MAkBP;MACAC,eAnBO,2BAmBSJ,MAnBT,EAmBiBC,IAnBjB,EAmBuBE,OAnBvB,EAmBgC,CACrC;MACD;IArBM,CAnDoC;;IA2E7C;AACF;AACA;AACA;AACA;IAEEE,QAjF6C,sBAiFlC;MACT,KAAKnB,SAAL,GAAiB,KAAKC,SAAL,GAAgB,IAAjC;IACD,CAnF4C;;IAqF7C;AACF;AACA;AACA;AACA;IAEEmB,KA3F6C,iBA2FvCjB,OA3FuC,EA2F9B;MACbjB,EAAE,CAACU,KAAH,CAASS,YAAT,CAAsBgB,UAAtB,CAAiClB,OAAjC;IACD;EA7F4C,CAA/C;EAvBAjB,EAAE,CAACU,KAAH,CAAS0B,OAAT,CAAiBC,UAAjB,CAA4BlC,aAA5B,GAA4CA,aAA5C"
}