{
  "className": "qx.event.handler.Window",
  "packageName": "qx.event.handler",
  "name": "Window",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.event.IEventHandler",
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0,
        "index": 746
      },
      "end": {
        "line": 239,
        "column": 3,
        "index": 6169
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This handler provides event for the window object.\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.event.type.Native"
        },
        {
          "name": "@require",
          "body": "qx.event.Pool"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 44,
        "column": 2,
        "index": 1187
      },
      "end": {
        "line": 53,
        "column": 3,
        "index": 1380
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new instance</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "manager {qx.event.Manager} Event manager for the window to use",
          "paramName": "manager",
          "description": " Event manager for the window to use",
          "type": "qx.event.Manager"
        }
      ]
    }
  },
  "statics": {
    "PRIORITY": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1636
        },
        "end": {
          "line": 63,
          "column": 51,
          "index": 1683
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Priority of this handler"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SUPPORTED_TYPES": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1735
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1888
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported event types"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "TARGET_CHECK": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 1948
        },
        "end": {
          "line": 77,
          "column": 54,
          "index": 1998
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Which target check to use"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "IGNORE_CAN_HANDLE": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2083
        },
        "end": {
          "line": 80,
          "column": 27,
          "index": 2106
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Whether the method \"canHandleEvent\" must be called"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "members": {
    "canHandleEvent": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2551
        },
        "end": {
          "line": 97,
          "column": 35,
          "index": 2582
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "registerEvent": {
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2621
        },
        "end": {
          "line": 102,
          "column": 5,
          "index": 2704
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "unregisterEvent": {
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2743
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 2828
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "_initWindowObserver": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3112
        },
        "end": {
          "line": 130,
          "column": 5,
          "index": 3441
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native window event listeners.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopWindowObserver": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 3524
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 3777
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnect the native window event listeners.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onNative": {
      "location": {
        "start": {
          "line": 157,
          "column": 4,
          "index": 4075
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 4332
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>When qx.globalErrorHandling is enabled the callback will observed</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__onNativeHandler": {
      "location": {
        "start": {
          "line": 172,
          "column": 4,
          "index": 4482
        },
        "end": {
          "line": 216,
          "column": 5,
          "index": 5626
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Native listener for all supported events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} Native event",
            "paramName": "e",
            "description": " Native event",
            "type": "Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|undefined}",
            "type": "String|undefined",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 225,
        "column": 2,
        "index": 5822
      },
      "end": {
        "line": 228,
        "column": 3,
        "index": 5911
      }
    },
    "jsdoc": {}
  },
  "defer": {
    "location": {
      "start": {
        "line": 236,
        "column": 2,
        "index": 6098
      },
      "end": {
        "line": 238,
        "column": 3,
        "index": 6165
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}