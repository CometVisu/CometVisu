{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "constructor",
    "call",
    "_manager",
    "_window",
    "getWindow",
    "_initWindowObserver",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "error",
    "load",
    "beforeunload",
    "unload",
    "resize",
    "scroll",
    "beforeshutdown",
    "TARGET_CHECK",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "_onNativeWrapper",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "types",
    "handler",
    "Window",
    "key",
    "bom",
    "Event",
    "addNativeListener",
    "_stopWindowObserver",
    "removeNativeListener",
    "callback",
    "Environment",
    "select",
    "GlobalError",
    "observeMethod",
    "__onNativeHandler",
    "apply",
    "arguments",
    "__P_236_0",
    "e",
    "isDisposed",
    "win",
    "doc",
    "document",
    "ex",
    "html",
    "documentElement",
    "getTarget",
    "createEvent",
    "Native",
    "dispatchEvent",
    "result",
    "getReturnValue",
    "returnValue",
    "destruct",
    "defer",
    "addHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Window.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This handler provides event for the window object.\r\n *\r\n * NOTE: Instances of this class must be disposed of after use\r\n *\r\n * @require(qx.event.type.Native)\r\n * @require(qx.event.Pool)\r\n */\r\nqx.Class.define(\"qx.event.handler.Window\", {\r\n  extend: qx.core.Object,\r\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param manager {qx.event.Manager} Event manager for the window to use\r\n   */\r\n  construct(manager) {\r\n    super();\r\n\r\n    // Define shorthands\r\n    this._manager = manager;\r\n    this._window = manager.getWindow();\r\n\r\n    // Initialize observers\r\n    this._initWindowObserver();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      error: 1,\r\n      load: 1,\r\n      beforeunload: 1,\r\n      unload: 1,\r\n      resize: 1,\r\n      scroll: 1,\r\n      beforeshutdown: 1\r\n    },\r\n\r\n    /** @type {Integer} Which target check to use */\r\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_WINDOW,\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: true\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {},\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type, capture) {\r\n      // Nothing needs to be done here\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      OBSERVER INIT/STOP\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Initializes the native window event listeners.\r\n     *\r\n     */\r\n    _initWindowObserver() {\r\n      this._onNativeWrapper = qx.lang.Function.listener(this._onNative, this);\r\n      var types = qx.event.handler.Window.SUPPORTED_TYPES;\r\n\r\n      for (var key in types) {\r\n        qx.bom.Event.addNativeListener(\r\n          this._window,\r\n          key,\r\n          this._onNativeWrapper\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Disconnect the native window event listeners.\r\n     *\r\n     */\r\n    _stopWindowObserver() {\r\n      var types = qx.event.handler.Window.SUPPORTED_TYPES;\r\n\r\n      for (var key in types) {\r\n        qx.bom.Event.removeNativeListener(\r\n          this._window,\r\n          key,\r\n          this._onNativeWrapper\r\n        );\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      NATIVE EVENT SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * When qx.globalErrorHandling is enabled the callback will observed\r\n     */\r\n    _onNative() {\r\n      var callback = qx.core.Environment.select(\"qx.globalErrorHandling\", {\r\n        true: qx.event.GlobalError.observeMethod(this.__onNativeHandler),\r\n        false: this.__onNativeHandler\r\n      });\r\n\r\n      callback.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * Native listener for all supported events.\r\n     *\r\n     * @param e {Event} Native event\r\n     * @return {String|undefined}\r\n     */\r\n    __onNativeHandler(e) {\r\n      if (this.isDisposed()) {\r\n        return;\r\n      }\r\n\r\n      var win = this._window;\r\n      var doc;\r\n      try {\r\n        doc = win.document;\r\n      } catch (ex) {\r\n        // IE7 sometimes dispatches \"unload\" events on protected windows\r\n        // Ignore these events\r\n        return;\r\n      }\r\n\r\n      var html = doc.documentElement;\r\n\r\n      // At least Safari 3.1 and Opera 9.2.x have a bubbling scroll event\r\n      // which needs to be ignored here.\r\n      //\r\n      // In recent WebKit nightlies scroll events do no longer bubble\r\n      //\r\n      // Internet Explorer does not have a target in resize events.\r\n      var target = qx.bom.Event.getTarget(e);\r\n      if (\r\n        target == null ||\r\n        target === win ||\r\n        target === doc ||\r\n        target === html\r\n      ) {\r\n        var event = qx.event.Registration.createEvent(\r\n          e.type,\r\n          qx.event.type.Native,\r\n          [e, win]\r\n        );\r\n\r\n        qx.event.Registration.dispatchEvent(win, event);\r\n\r\n        var result = event.getReturnValue();\r\n        if (result != null) {\r\n          e.returnValue = result;\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._stopWindowObserver();\r\n    this._manager = this._window = null;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}