{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "statics",
    "__storage",
    "members",
    "__listener",
    "__any",
    "on",
    "name",
    "listener",
    "ctx",
    "id",
    "event",
    "Emitter",
    "length",
    "__getStorage",
    "push",
    "once",
    "off",
    "storage",
    "i",
    "entry",
    "splice",
    "offById",
    "addListener",
    "addListenerOnce",
    "removeListener",
    "removeListenerById",
    "emit",
    "data",
    "concat",
    "toDelete",
    "call",
    "forEach",
    "origStorage",
    "idx",
    "indexOf",
    "bind",
    "getListeners",
    "getEntryById",
    "store",
    "j",
    "__P_198_3"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/Emitter.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Basic implementation for an event emitter. This supplies a basic and\n * minimalistic event mechanism.\n */\nqx.Bootstrap.define(\"qx.event.Emitter\", {\n  extend: Object,\n  statics: {\n    /** Static storage for all event listener */\n    __storage: []\n  },\n\n  members: {\n    __listener: null,\n    __any: null,\n\n    /**\n     * Attach a listener to the event emitter. The given <code>name</code>\n     * will define the type of event. Handing in a <code>'*'</code> will\n     * listen to all events emitted by the event emitter.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    on(name, listener, ctx) {\n      var id = qx.event.Emitter.__storage.length;\n      this.__getStorage(name).push({\n        listener: listener,\n        ctx: ctx,\n        id: id,\n        name: name\n      });\n\n      qx.event.Emitter.__storage.push({\n        name: name,\n        listener: listener,\n        ctx: ctx\n      });\n\n      return id;\n    },\n\n    /**\n     * Attach a listener to the event emitter which will be executed only once.\n     * The given <code>name</code> will define the type of event. Handing in a\n     * <code>'*'</code> will listen to all events emitted by the event emitter.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    once(name, listener, ctx) {\n      var id = qx.event.Emitter.__storage.length;\n      this.__getStorage(name).push({\n        listener: listener,\n        ctx: ctx,\n        once: true,\n        id: id\n      });\n\n      qx.event.Emitter.__storage.push({\n        name: name,\n        listener: listener,\n        ctx: ctx\n      });\n\n      return id;\n    },\n\n    /**\n     * Remove a listener from the event emitter. The given <code>name</code>\n     * will define the type of event.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer|null} The listener's id if it was removed or\n     * <code>null</code> if it wasn't found\n     */\n    off(name, listener, ctx) {\n      var storage = this.__getStorage(name);\n      for (var i = storage.length - 1; i >= 0; i--) {\n        var entry = storage[i];\n        if (entry.listener == listener && entry.ctx == ctx) {\n          storage.splice(i, 1);\n          qx.event.Emitter.__storage[entry.id] = null;\n          return entry.id;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Removes the listener identified by the given <code>id</code>. The id\n     * will be return on attaching the listener and can be stored for removing.\n     *\n     * @param id {Integer} The id of the listener.\n     * @return {Integer|null} The listener's id if it was removed or\n     * <code>null</code> if it wasn't found\n     */\n    offById(id) {\n      var entry = qx.event.Emitter.__storage[id];\n      if (entry) {\n        this.off(entry.name, entry.listener, entry.ctx);\n      }\n      return null;\n    },\n\n    /**\n     * Alternative for {@link #on}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    addListener(name, listener, ctx) {\n      return this.on(name, listener, ctx);\n    },\n\n    /**\n     * Alternative for {@link #once}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    addListenerOnce(name, listener, ctx) {\n      return this.once(name, listener, ctx);\n    },\n\n    /**\n     * Alternative for {@link #off}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     */\n    removeListener(name, listener, ctx) {\n      this.off(name, listener, ctx);\n    },\n\n    /**\n     * Alternative for {@link #offById}.\n     * @param id {Integer} The id of the listener.\n     */\n    removeListenerById(id) {\n      this.offById(id);\n    },\n\n    /**\n     * Emits an event with the given name. The data will be passed\n     * to the listener.\n     * @param name {String} The name of the event to emit.\n     * @param data {var?undefined} The data which should be passed to the listener.\n     */\n    emit(name, data) {\n      var storage = this.__getStorage(name).concat();\n      var toDelete = [];\n      for (var i = 0; i < storage.length; i++) {\n        var entry = storage[i];\n        entry.listener.call(entry.ctx, data);\n        if (entry.once) {\n          toDelete.push(entry);\n        }\n      }\n\n      // listener callbacks could manipulate the storage\n      // (e.g. module.Event.once)\n      toDelete.forEach(\n        function (entry) {\n          var origStorage = this.__getStorage(name);\n          var idx = origStorage.indexOf(entry);\n          origStorage.splice(idx, 1);\n        }.bind(this)\n      );\n\n      // call on any\n      storage = this.__getStorage(\"*\");\n      for (var i = storage.length - 1; i >= 0; i--) {\n        var entry = storage[i];\n        entry.listener.call(entry.ctx, data);\n      }\n    },\n\n    /**\n     * Returns the internal attached listener.\n     * @internal\n     * @return {Map} A map which has the event name as key. The values are\n     *   arrays containing a map with 'listener' and 'ctx'.\n     */\n    getListeners() {\n      return this.__listener;\n    },\n\n    /**\n     * Returns the data entry for a given event id. If the entry could\n     * not be found, undefined will be returned.\n     * @internal\n     * @param id {Number} The listeners id\n     * @return {Map|undefined} The data entry if found\n     */\n    getEntryById(id) {\n      for (var name in this.__listener) {\n        var store = this.__listener[name];\n\n        for (var i = 0, j = store.length; i < j; i++) {\n          if (store[i].id === id) {\n            return store[i];\n          }\n        }\n      }\n    },\n\n    /**\n     * Internal helper which will return the storage for the given name.\n     * @param name {String} The name of the event.\n     * @return {Array} An array which is the storage for the listener and\n     *   the given event name.\n     */\n    __getStorage(name) {\n      if (this.__listener == null) {\n        this.__listener = {};\n      }\n      if (this.__listener[name] == null) {\n        this.__listener[name] = [];\n      }\n      return this.__listener[name];\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}