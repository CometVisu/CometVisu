{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "statics",
    "__storage",
    "members",
    "__listener",
    "__any",
    "on",
    "name",
    "listener",
    "ctx",
    "id",
    "event",
    "Emitter",
    "length",
    "__getStorage",
    "push",
    "once",
    "off",
    "storage",
    "i",
    "entry",
    "splice",
    "offById",
    "addListener",
    "addListenerOnce",
    "removeListener",
    "removeListenerById",
    "emit",
    "data",
    "concat",
    "toDelete",
    "call",
    "forEach",
    "origStorage",
    "idx",
    "indexOf",
    "bind",
    "getListeners",
    "getEntryById",
    "store",
    "j",
    "__P_206_3"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/Emitter.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Basic implementation for an event emitter. This supplies a basic and\r\n * minimalistic event mechanism.\r\n */\r\nqx.Bootstrap.define(\"qx.event.Emitter\", {\r\n  extend: Object,\r\n  statics: {\r\n    /** Static storage for all event listener */\r\n    __storage: []\r\n  },\r\n\r\n  members: {\r\n    __listener: null,\r\n    __any: null,\r\n\r\n    /**\r\n     * Attach a listener to the event emitter. The given <code>name</code>\r\n     * will define the type of event. Handing in a <code>'*'</code> will\r\n     * listen to all events emitted by the event emitter.\r\n     *\r\n     * @param name {String} The name of the event to listen to.\r\n     * @param listener {Function} The function execute on {@link #emit}.\r\n     * @param ctx {var?Window} The context of the listener.\r\n     * @return {Integer} An unique <code>id</code> for the attached listener.\r\n     */\r\n    on(name, listener, ctx) {\r\n      var id = qx.event.Emitter.__storage.length;\r\n      this.__getStorage(name).push({\r\n        listener: listener,\r\n        ctx: ctx,\r\n        id: id,\r\n        name: name\r\n      });\r\n\r\n      qx.event.Emitter.__storage.push({\r\n        name: name,\r\n        listener: listener,\r\n        ctx: ctx\r\n      });\r\n\r\n      return id;\r\n    },\r\n\r\n    /**\r\n     * Attach a listener to the event emitter which will be executed only once.\r\n     * The given <code>name</code> will define the type of event. Handing in a\r\n     * <code>'*'</code> will listen to all events emitted by the event emitter.\r\n     *\r\n     * @param name {String} The name of the event to listen to.\r\n     * @param listener {Function} The function execute on {@link #emit}.\r\n     * @param ctx {var?Window} The context of the listener.\r\n     * @return {Integer} An unique <code>id</code> for the attached listener.\r\n     */\r\n    once(name, listener, ctx) {\r\n      var id = qx.event.Emitter.__storage.length;\r\n      this.__getStorage(name).push({\r\n        listener: listener,\r\n        ctx: ctx,\r\n        once: true,\r\n        id: id\r\n      });\r\n\r\n      qx.event.Emitter.__storage.push({\r\n        name: name,\r\n        listener: listener,\r\n        ctx: ctx\r\n      });\r\n\r\n      return id;\r\n    },\r\n\r\n    /**\r\n     * Remove a listener from the event emitter. The given <code>name</code>\r\n     * will define the type of event.\r\n     *\r\n     * @param name {String} The name of the event to listen to.\r\n     * @param listener {Function} The function execute on {@link #emit}.\r\n     * @param ctx {var?Window} The context of the listener.\r\n     * @return {Integer|null} The listener's id if it was removed or\r\n     * <code>null</code> if it wasn't found\r\n     */\r\n    off(name, listener, ctx) {\r\n      var storage = this.__getStorage(name);\r\n      for (var i = storage.length - 1; i >= 0; i--) {\r\n        var entry = storage[i];\r\n        if (entry.listener == listener && entry.ctx == ctx) {\r\n          storage.splice(i, 1);\r\n          qx.event.Emitter.__storage[entry.id] = null;\r\n          return entry.id;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Removes the listener identified by the given <code>id</code>. The id\r\n     * will be return on attaching the listener and can be stored for removing.\r\n     *\r\n     * @param id {Integer} The id of the listener.\r\n     * @return {Integer|null} The listener's id if it was removed or\r\n     * <code>null</code> if it wasn't found\r\n     */\r\n    offById(id) {\r\n      var entry = qx.event.Emitter.__storage[id];\r\n      if (entry) {\r\n        this.off(entry.name, entry.listener, entry.ctx);\r\n      }\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Alternative for {@link #on}.\r\n     * @param name {String} The name of the event to listen to.\r\n     * @param listener {Function} The function execute on {@link #emit}.\r\n     * @param ctx {var?Window} The context of the listener.\r\n     * @return {Integer} An unique <code>id</code> for the attached listener.\r\n     */\r\n    addListener(name, listener, ctx) {\r\n      return this.on(name, listener, ctx);\r\n    },\r\n\r\n    /**\r\n     * Alternative for {@link #once}.\r\n     * @param name {String} The name of the event to listen to.\r\n     * @param listener {Function} The function execute on {@link #emit}.\r\n     * @param ctx {var?Window} The context of the listener.\r\n     * @return {Integer} An unique <code>id</code> for the attached listener.\r\n     */\r\n    addListenerOnce(name, listener, ctx) {\r\n      return this.once(name, listener, ctx);\r\n    },\r\n\r\n    /**\r\n     * Alternative for {@link #off}.\r\n     * @param name {String} The name of the event to listen to.\r\n     * @param listener {Function} The function execute on {@link #emit}.\r\n     * @param ctx {var?Window} The context of the listener.\r\n     */\r\n    removeListener(name, listener, ctx) {\r\n      this.off(name, listener, ctx);\r\n    },\r\n\r\n    /**\r\n     * Alternative for {@link #offById}.\r\n     * @param id {Integer} The id of the listener.\r\n     */\r\n    removeListenerById(id) {\r\n      this.offById(id);\r\n    },\r\n\r\n    /**\r\n     * Emits an event with the given name. The data will be passed\r\n     * to the listener.\r\n     * @param name {String} The name of the event to emit.\r\n     * @param data {var?undefined} The data which should be passed to the listener.\r\n     */\r\n    emit(name, data) {\r\n      var storage = this.__getStorage(name).concat();\r\n      var toDelete = [];\r\n      for (var i = 0; i < storage.length; i++) {\r\n        var entry = storage[i];\r\n        entry.listener.call(entry.ctx, data);\r\n        if (entry.once) {\r\n          toDelete.push(entry);\r\n        }\r\n      }\r\n\r\n      // listener callbacks could manipulate the storage\r\n      // (e.g. module.Event.once)\r\n      toDelete.forEach(\r\n        function (entry) {\r\n          var origStorage = this.__getStorage(name);\r\n          var idx = origStorage.indexOf(entry);\r\n          origStorage.splice(idx, 1);\r\n        }.bind(this)\r\n      );\r\n\r\n      // call on any\r\n      storage = this.__getStorage(\"*\");\r\n      for (var i = storage.length - 1; i >= 0; i--) {\r\n        var entry = storage[i];\r\n        entry.listener.call(entry.ctx, data);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the internal attached listener.\r\n     * @internal\r\n     * @return {Map} A map which has the event name as key. The values are\r\n     *   arrays containing a map with 'listener' and 'ctx'.\r\n     */\r\n    getListeners() {\r\n      return this.__listener;\r\n    },\r\n\r\n    /**\r\n     * Returns the data entry for a given event id. If the entry could\r\n     * not be found, undefined will be returned.\r\n     * @internal\r\n     * @param id {Number} The listeners id\r\n     * @return {Map|undefined} The data entry if found\r\n     */\r\n    getEntryById(id) {\r\n      for (var name in this.__listener) {\r\n        var store = this.__listener[name];\r\n\r\n        for (var i = 0, j = store.length; i < j; i++) {\r\n          if (store[i].id === id) {\r\n            return store[i];\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Internal helper which will return the storage for the given name.\r\n     * @param name {String} The name of the event.\r\n     * @return {Array} An array which is the storage for the listener and\r\n     *   the given event name.\r\n     */\r\n    __getStorage(name) {\r\n      if (this.__listener == null) {\r\n        this.__listener = {};\r\n      }\r\n      if (this.__listener[name] == null) {\r\n        this.__listener[name] = [];\r\n      }\r\n      return this.__listener[name];\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}