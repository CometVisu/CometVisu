{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "statics",
    "__storage",
    "members",
    "__listener",
    "__any",
    "on",
    "name",
    "listener",
    "ctx",
    "id",
    "event",
    "Emitter",
    "length",
    "__getStorage",
    "push",
    "once",
    "off",
    "storage",
    "i",
    "entry",
    "splice",
    "offById",
    "addListener",
    "addListenerOnce",
    "removeListener",
    "removeListenerById",
    "emit",
    "data",
    "concat",
    "toDelete",
    "call",
    "forEach",
    "origStorage",
    "idx",
    "indexOf",
    "bind",
    "getListeners",
    "getEntryById",
    "store",
    "j"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/Emitter.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Basic implementation for an event emitter. This supplies a basic and\n * minimalistic event mechanism.\n */\nqx.Bootstrap.define(\"qx.event.Emitter\", {\n  extend: Object,\n  statics: {\n    /** Static storage for all event listener */\n    __storage: []\n  },\n\n  members: {\n    __listener: null,\n    __any: null,\n\n    /**\n     * Attach a listener to the event emitter. The given <code>name</code>\n     * will define the type of event. Handing in a <code>'*'</code> will\n     * listen to all events emitted by the event emitter.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    on(name, listener, ctx) {\n      var id = qx.event.Emitter.__storage.length;\n      this.__getStorage(name).push({\n        listener: listener,\n        ctx: ctx,\n        id: id,\n        name: name\n      });\n\n      qx.event.Emitter.__storage.push({\n        name: name,\n        listener: listener,\n        ctx: ctx\n      });\n\n      return id;\n    },\n\n    /**\n     * Attach a listener to the event emitter which will be executed only once.\n     * The given <code>name</code> will define the type of event. Handing in a\n     * <code>'*'</code> will listen to all events emitted by the event emitter.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    once(name, listener, ctx) {\n      var id = qx.event.Emitter.__storage.length;\n      this.__getStorage(name).push({\n        listener: listener,\n        ctx: ctx,\n        once: true,\n        id: id\n      });\n\n      qx.event.Emitter.__storage.push({\n        name: name,\n        listener: listener,\n        ctx: ctx\n      });\n\n      return id;\n    },\n\n    /**\n     * Remove a listener from the event emitter. The given <code>name</code>\n     * will define the type of event.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer|null} The listener's id if it was removed or\n     * <code>null</code> if it wasn't found\n     */\n    off(name, listener, ctx) {\n      var storage = this.__getStorage(name);\n      for (var i = storage.length - 1; i >= 0; i--) {\n        var entry = storage[i];\n        if (entry.listener == listener && entry.ctx == ctx) {\n          storage.splice(i, 1);\n          qx.event.Emitter.__storage[entry.id] = null;\n          return entry.id;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Removes the listener identified by the given <code>id</code>. The id\n     * will be return on attaching the listener and can be stored for removing.\n     *\n     * @param id {Integer} The id of the listener.\n     * @return {Integer|null} The listener's id if it was removed or\n     * <code>null</code> if it wasn't found\n     */\n    offById(id) {\n      var entry = qx.event.Emitter.__storage[id];\n      if (entry) {\n        this.off(entry.name, entry.listener, entry.ctx);\n      }\n      return null;\n    },\n\n    /**\n     * Alternative for {@link #on}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    addListener(name, listener, ctx) {\n      return this.on(name, listener, ctx);\n    },\n\n    /**\n     * Alternative for {@link #once}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    addListenerOnce(name, listener, ctx) {\n      return this.once(name, listener, ctx);\n    },\n\n    /**\n     * Alternative for {@link #off}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     */\n    removeListener(name, listener, ctx) {\n      this.off(name, listener, ctx);\n    },\n\n    /**\n     * Alternative for {@link #offById}.\n     * @param id {Integer} The id of the listener.\n     */\n    removeListenerById(id) {\n      this.offById(id);\n    },\n\n    /**\n     * Emits an event with the given name. The data will be passed\n     * to the listener.\n     * @param name {String} The name of the event to emit.\n     * @param data {var?undefined} The data which should be passed to the listener.\n     */\n    emit(name, data) {\n      var storage = this.__getStorage(name).concat();\n      var toDelete = [];\n      for (var i = 0; i < storage.length; i++) {\n        var entry = storage[i];\n        entry.listener.call(entry.ctx, data);\n        if (entry.once) {\n          toDelete.push(entry);\n        }\n      }\n\n      // listener callbacks could manipulate the storage\n      // (e.g. module.Event.once)\n      toDelete.forEach(\n        function (entry) {\n          var origStorage = this.__getStorage(name);\n          var idx = origStorage.indexOf(entry);\n          origStorage.splice(idx, 1);\n        }.bind(this)\n      );\n\n      // call on any\n      storage = this.__getStorage(\"*\");\n      for (var i = storage.length - 1; i >= 0; i--) {\n        var entry = storage[i];\n        entry.listener.call(entry.ctx, data);\n      }\n    },\n\n    /**\n     * Returns the internal attached listener.\n     * @internal\n     * @return {Map} A map which has the event name as key. The values are\n     *   arrays containing a map with 'listener' and 'ctx'.\n     */\n    getListeners() {\n      return this.__listener;\n    },\n\n    /**\n     * Returns the data entry for a given event id. If the entry could\n     * not be found, undefined will be returned.\n     * @internal\n     * @param id {Number} The listeners id\n     * @return {Map|undefined} The data entry if found\n     */\n    getEntryById(id) {\n      for (var name in this.__listener) {\n        var store = this.__listener[name];\n\n        for (var i = 0, j = store.length; i < j; i++) {\n          if (store[i].id === id) {\n            return store[i];\n          }\n        }\n      }\n    },\n\n    /**\n     * Internal helper which will return the storage for the given name.\n     * @param name {String} The name of the event.\n     * @return {Array} An array which is the storage for the listener and\n     *   the given event name.\n     */\n    __getStorage(name) {\n      if (this.__listener == null) {\n        this.__listener = {};\n      }\n      if (this.__listener[name] == null) {\n        this.__listener[name] = [];\n      }\n      return this.__listener[name];\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}