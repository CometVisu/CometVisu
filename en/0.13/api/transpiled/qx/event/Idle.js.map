{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "type",
    "construct",
    "constructor",
    "call",
    "events",
    "interval",
    "properties",
    "timeoutInterval",
    "check",
    "init",
    "apply",
    "members",
    "__timer",
    "_applyTimeoutInterval",
    "value",
    "setInterval",
    "_onInterval",
    "fireEvent",
    "__startTimer",
    "__P_208_1",
    "hasListener",
    "timer",
    "event",
    "Timer",
    "getTimeoutInterval",
    "addListener",
    "start",
    "__stopTimer",
    "__P_208_2",
    "stop",
    "dispose",
    "listener",
    "self",
    "capture",
    "result",
    "Idle",
    "superclass",
    "prototype",
    "addListenerOnce",
    "removeListener",
    "removeListenerById",
    "id",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/Idle.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A generic singleton that fires an \"interval\" event all 100 milliseconds. It\n * can be used whenever one needs to run code periodically. The main purpose of\n * this class is reduce the number of timers.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\n\nqx.Class.define(\"qx.event.Idle\", {\n  extend: qx.core.Object,\n  implement: [qx.core.IDisposable],\n  type: \"singleton\",\n\n  construct() {\n    super();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** This event if fired each time the interval time has elapsed */\n    interval: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Interval for the timer, which periodically fires the \"interval\" event,\n     * in milliseconds.\n     */\n    timeoutInterval: {\n      check: \"Number\",\n      init: 100,\n      apply: \"_applyTimeoutInterval\"\n    }\n  },\n\n  members: {\n    __timer: null,\n\n    // property apply\n    _applyTimeoutInterval(value) {\n      if (this.__timer) {\n        this.__timer.setInterval(value);\n      }\n    },\n\n    /**\n     * Fires an \"interval\" event\n     */\n    _onInterval() {\n      this.fireEvent(\"interval\");\n    },\n\n    /**\n     * Starts the timer but only if there are listeners for the \"interval\" event\n     */\n    __startTimer() {\n      if (!this.__timer && this.hasListener(\"interval\")) {\n        var timer = new qx.event.Timer(this.getTimeoutInterval());\n        timer.addListener(\"interval\", this._onInterval, this);\n        timer.start();\n\n        this.__timer = timer;\n      }\n    },\n\n    /**\n     * Stops the timer but only if there are no listeners for the interval event\n     */\n    __stopTimer() {\n      if (this.__timer && !this.hasListener(\"interval\")) {\n        this.__timer.stop();\n        this.__timer.dispose();\n        this.__timer = null;\n      }\n    },\n\n    /*\n     * @Override\n     */\n    addListener(type, listener, self, capture) {\n      var result = super.addListener(type, listener, self, capture);\n      this.__startTimer();\n      return result;\n    },\n\n    /*\n     * @Override\n     */\n    addListenerOnce(type, listener, self, capture) {\n      var result = super.addListenerOnce(type, listener, self, capture);\n      this.__startTimer();\n      return result;\n    },\n\n    /*\n     * @Override\n     */\n    removeListener(type, listener, self, capture) {\n      var result = super.removeListener(type, listener, self, capture);\n      this.__stopTimer();\n      return result;\n    },\n\n    /*\n     * @Override\n     */\n    removeListenerById(id) {\n      var result = super.removeListenerById(id);\n      this.__stopTimer();\n      return result;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.__timer) {\n      this.__timer.stop();\n    }\n\n    this.__timer = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}