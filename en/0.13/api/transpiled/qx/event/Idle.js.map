{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "type",
    "construct",
    "constructor",
    "call",
    "events",
    "interval",
    "properties",
    "timeoutInterval",
    "check",
    "init",
    "apply",
    "members",
    "__timer",
    "_applyTimeoutInterval",
    "value",
    "setInterval",
    "_onInterval",
    "fireEvent",
    "__startTimer",
    "__P_200_1",
    "hasListener",
    "timer",
    "event",
    "Timer",
    "getTimeoutInterval",
    "addListener",
    "start",
    "__stopTimer",
    "__P_200_2",
    "stop",
    "dispose",
    "listener",
    "self",
    "capture",
    "result",
    "Idle",
    "superclass",
    "prototype",
    "addListenerOnce",
    "removeListener",
    "removeListenerById",
    "id",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/Idle.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A generic singleton that fires an \"interval\" event all 100 milliseconds. It\r\n * can be used whenever one needs to run code periodically. The main purpose of\r\n * this class is reduce the number of timers.\r\n *\r\n * NOTE: Instances of this class must be disposed of after use\r\n *\r\n */\r\n\r\nqx.Class.define(\"qx.event.Idle\", {\r\n  extend: qx.core.Object,\r\n  implement: [qx.core.IDisposable],\r\n  type: \"singleton\",\r\n\r\n  construct() {\r\n    super();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** This event if fired each time the interval time has elapsed */\r\n    interval: \"qx.event.type.Event\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * Interval for the timer, which periodically fires the \"interval\" event,\r\n     * in milliseconds.\r\n     */\r\n    timeoutInterval: {\r\n      check: \"Number\",\r\n      init: 100,\r\n      apply: \"_applyTimeoutInterval\"\r\n    }\r\n  },\r\n\r\n  members: {\r\n    __timer: null,\r\n\r\n    // property apply\r\n    _applyTimeoutInterval(value) {\r\n      if (this.__timer) {\r\n        this.__timer.setInterval(value);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fires an \"interval\" event\r\n     */\r\n    _onInterval() {\r\n      this.fireEvent(\"interval\");\r\n    },\r\n\r\n    /**\r\n     * Starts the timer but only if there are listeners for the \"interval\" event\r\n     */\r\n    __startTimer() {\r\n      if (!this.__timer && this.hasListener(\"interval\")) {\r\n        var timer = new qx.event.Timer(this.getTimeoutInterval());\r\n        timer.addListener(\"interval\", this._onInterval, this);\r\n        timer.start();\r\n\r\n        this.__timer = timer;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Stops the timer but only if there are no listeners for the interval event\r\n     */\r\n    __stopTimer() {\r\n      if (this.__timer && !this.hasListener(\"interval\")) {\r\n        this.__timer.stop();\r\n        this.__timer.dispose();\r\n        this.__timer = null;\r\n      }\r\n    },\r\n\r\n    /*\r\n     * @Override\r\n     */\r\n    addListener(type, listener, self, capture) {\r\n      var result = super.addListener(type, listener, self, capture);\r\n      this.__startTimer();\r\n      return result;\r\n    },\r\n\r\n    /*\r\n     * @Override\r\n     */\r\n    addListenerOnce(type, listener, self, capture) {\r\n      var result = super.addListenerOnce(type, listener, self, capture);\r\n      this.__startTimer();\r\n      return result;\r\n    },\r\n\r\n    /*\r\n     * @Override\r\n     */\r\n    removeListener(type, listener, self, capture) {\r\n      var result = super.removeListener(type, listener, self, capture);\r\n      this.__stopTimer();\r\n      return result;\r\n    },\r\n\r\n    /*\r\n     * @Override\r\n     */\r\n    removeListenerById(id) {\r\n      var result = super.removeListenerById(id);\r\n      this.__stopTimer();\r\n      return result;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    if (this.__timer) {\r\n      this.__timer.stop();\r\n    }\r\n\r\n    this.__timer = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}