{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventDispatcher",
    "construct",
    "manager",
    "_manager",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_LAST",
    "members",
    "canDispatchEvent",
    "target",
    "type",
    "getBubbles",
    "dispatchEvent",
    "setEventPhase",
    "Event",
    "AT_TARGET",
    "tracker",
    "self",
    "listeners",
    "getListeners",
    "forEach",
    "listener",
    "isBlacklisted",
    "unique",
    "context",
    "Utils",
    "then",
    "handler",
    "call",
    "promise",
    "defer",
    "addDispatcher",
    "dispatch",
    "Direct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/dispatch/Direct.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Dispatches events directly on the event target (no bubbling nor capturing).\r\n */\r\nqx.Class.define(\"qx.event.dispatch.Direct\", {\r\n  extend: qx.core.Object,\r\n  implement: qx.event.IEventDispatcher,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param manager {qx.event.Manager} Event manager for the window to use\r\n   */\r\n  construct(manager) {\r\n    this._manager = manager;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this dispatcher */\r\n    PRIORITY: qx.event.Registration.PRIORITY_LAST\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT DISPATCHER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canDispatchEvent(target, event, type) {\r\n      return !event.getBubbles();\r\n    },\r\n\r\n    // interface implementation\r\n    dispatchEvent(target, event, type) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (target instanceof qx.core.Object) {\r\n          var expectedEventClassName = qx.Class.getEventType(\r\n            target.constructor,\r\n            type\r\n          );\r\n\r\n          var expectedEventClass = qx.Class.getByName(expectedEventClassName);\r\n          if (!expectedEventClass) {\r\n            this.error(\r\n              \"The event type '\" +\r\n                type +\r\n                \"' declared in the class '\" +\r\n                target.constructor +\r\n                \" is not an available class': \" +\r\n                expectedEventClassName\r\n            );\r\n          } else if (!(event instanceof expectedEventClass)) {\r\n            this.error(\r\n              \"Expected event type to be instanceof '\" +\r\n                expectedEventClassName +\r\n                \"' but found '\" +\r\n                event.classname +\r\n                \"'\"\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      event.setEventPhase(qx.event.type.Event.AT_TARGET);\r\n\r\n      var tracker = {};\r\n      var self = this;\r\n      var listeners = this._manager.getListeners(target, type, false);\r\n      if (listeners) {\r\n        listeners.forEach(function (listener) {\r\n          if (self._manager.isBlacklisted(listener.unique)) {\r\n            return;\r\n          }\r\n          var context = listener.context || target;\r\n\r\n          if (qx.core.Environment.get(\"qx.debug\")) {\r\n            // warn if the context is disposed\r\n            if (\r\n              context &&\r\n              context.isDisposed &&\r\n              context.isDisposed() &&\r\n              !context.isDisposing()\r\n            ) {\r\n              self.warn(\r\n                \"The context object '\" +\r\n                  context +\r\n                  \"' for the event '\" +\r\n                  type +\r\n                  \"' of '\" +\r\n                  target +\r\n                  \"'is already disposed.\"\r\n              );\r\n            }\r\n          }\r\n          qx.event.Utils.then(tracker, function () {\r\n            return listener.handler.call(context, event);\r\n          });\r\n        });\r\n      }\r\n\r\n      return tracker.promise;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addDispatcher(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,0BAA0B,EAAE;IAC1CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IACtBC,SAAS,EAAET,EAAE,CAACU,KAAK,CAACC,gBAAgB;IAEpC;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,OAAO,EAAE;MACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO;IACzB,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEE,OAAO,EAAE;MACP;MACAC,QAAQ,EAAEhB,EAAE,CAACU,KAAK,CAACO,YAAY,CAACC;IAClC,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MAEI;MACAC,gBAAgB,WAAAA,iBAACC,MAAM,EAAEX,KAAK,EAAEY,IAAI,EAAE;QACpC,OAAO,CAACZ,KAAK,CAACa,UAAU,CAAC,CAAC;MAC5B,CAAC;MAED;MACAC,aAAa,WAAAA,cAACH,MAAM,EAAEX,KAAK,EAAEY,IAAI,EAAE;QA8BjCZ,KAAK,CAACe,aAAa,CAACzB,EAAE,CAACU,KAAK,CAACY,IAAI,CAACI,KAAK,CAACC,SAAS,CAAC;QAElD,IAAIC,OAAO,GAAG,CAAC,CAAC;QAChB,IAAIC,IAAI,GAAG,IAAI;QACf,IAAIC,SAAS,GAAG,IAAI,CAAChB,QAAQ,CAACiB,YAAY,CAACV,MAAM,EAAEC,IAAI,EAAE,KAAK,CAAC;QAC/D,IAAIQ,SAAS,EAAE;UACbA,SAAS,CAACE,OAAO,CAAC,UAAUC,QAAQ,EAAE;YACpC,IAAIJ,IAAI,CAACf,QAAQ,CAACoB,aAAa,CAACD,QAAQ,CAACE,MAAM,CAAC,EAAE;cAChD;YACF;YACA,IAAIC,OAAO,GAAGH,QAAQ,CAACG,OAAO,IAAIf,MAAM;YAqBxCrB,EAAE,CAACU,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAACV,OAAO,EAAE,YAAY;cACvC,OAAOK,QAAQ,CAACM,OAAO,CAACC,IAAI,CAACJ,OAAO,EAAE1B,KAAK,CAAC;YAC9C,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ;QAEA,OAAOkB,OAAO,CAACa,OAAO;MACxB;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IAEEC,KAAK,WAAAA,MAAC3B,OAAO,EAAE;MACbf,EAAE,CAACU,KAAK,CAACO,YAAY,CAAC0B,aAAa,CAAC5B,OAAO,CAAC;IAC9C;EACF,CAAC,CAAC;EAtJFf,EAAE,CAACU,KAAK,CAACkC,QAAQ,CAACC,MAAM,CAAC1C,aAAa,GAAGA,aAAa;AAAC"
}