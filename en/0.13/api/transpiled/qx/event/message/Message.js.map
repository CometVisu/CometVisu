{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "name",
    "data",
    "constructor",
    "call",
    "setName",
    "setData",
    "properties",
    "check",
    "init",
    "nullable",
    "sender",
    "destruct",
    "setSender",
    "event",
    "message",
    "Message"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/message/Message.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger\n\n************************************************************************ */\n\n/**\n * A message to be dispatched on the message bus.\n */\nqx.Class.define(\"qx.event.message.Message\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param name {String} The name of the message\n   * @param data {var} Any type of data to attach\n   */\n  construct(name, data) {\n    super();\n\n    if (name != null) {\n      this.setName(name);\n    }\n\n    if (data != null) {\n      this.setData(data);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Event name of the message. Based on this name the message is dispatched\n     * to the event listeners.\n     */\n    name: {\n      check: \"String\"\n    },\n\n    /**\n     * Any data the sender wants to pass with the event.\n     */\n    data: {\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * A reference to the sending object.\n     */\n    sender: {\n      check: \"Object\",\n      nullable: true\n    }\n  },\n\n  destruct() {\n    this.setData(null);\n    this.setSender(null);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,0BAA0B,EAAE;IAC1CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtB;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,IAAI,EAAEC,IAAI,EAAE;MACpBX,EAAA,CAAAO,IAAA,CAAAC,MAAA,CAAAI,WAAA,CAAAC,IAAA;MAEA,IAAIH,IAAI,IAAI,IAAI,EAAE;QAChB,IAAI,CAACI,OAAO,CAACJ,IAAI,CAAC;MACpB;MAEA,IAAIC,IAAI,IAAI,IAAI,EAAE;QAChB,IAAI,CAACI,OAAO,CAACJ,IAAI,CAAC;MACpB;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEK,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIN,IAAI,EAAE;QACJO,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIN,IAAI,EAAE;QACJO,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE;MACZ,CAAC;MAED;AACJ;AACA;MACIC,MAAM,EAAE;QACNH,KAAK,EAAE,QAAQ;QACfE,QAAQ,EAAE;MACZ;IACF,CAAC;IAEDE,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACN,OAAO,CAAC,IAAI,CAAC;MAClB,IAAI,CAACO,SAAS,CAAC,IAAI,CAAC;IACtB;EACF,CAAC,CAAC;EAlFFtB,EAAE,CAACuB,KAAK,CAACC,OAAO,CAACC,OAAO,CAACtB,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}