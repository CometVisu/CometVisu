{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "name",
    "data",
    "setName",
    "setData",
    "properties",
    "check",
    "init",
    "nullable",
    "sender",
    "destruct",
    "setSender",
    "event",
    "message",
    "Message"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/event/message/Message.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger\n\n************************************************************************ */\n\n/**\n * A message to be dispatched on the message bus.\n */\nqx.Class.define(\"qx.event.message.Message\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param name {String} The name of the message\n   * @param data {var} Any type of data to attach\n   */\n  construct(name, data) {\n    super();\n\n    if (name != null) {\n      this.setName(name);\n    }\n\n    if (data != null) {\n      this.setData(data);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Event name of the message. Based on this name the message is dispatched\n     * to the event listeners.\n     */\n    name: {\n      check: \"String\"\n    },\n\n    /**\n     * Any data the sender wants to pass with the event.\n     */\n    data: {\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * A reference to the sending object.\n     */\n    sender: {\n      check: \"Object\",\n      nullable: true\n    }\n  },\n\n  destruct() {\n    this.setData(null);\n    this.setSender(null);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EAA4C;IAC1CC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MAD0B;;IAG1C;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;IACEC,SAb0C,qBAahCC,IAbgC,EAa1BC,IAb0B,EAapB;MACpB;;MAEA,IAAID,IAAI,IAAI,IAAZ,EAAkB;QAChB,KAAKE,OAAL,CAAaF,IAAb;MACD;;MAED,IAAIC,IAAI,IAAI,IAAZ,EAAkB;QAChB,KAAKE,OAAL,CAAaF,IAAb;MACD;IACF,CAvByC;;IAyB1C;AACF;AACA;AACA;AACA;IAEEG,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIJ,IAAI,EAAE;QACJK,KAAK,EAAE;MADH,CALI;;MASV;AACJ;AACA;MACIJ,IAAI,EAAE;QACJK,IAAI,EAAE,IADF;QAEJC,QAAQ,EAAE;MAFN,CAZI;;MAiBV;AACJ;AACA;MACIC,MAAM,EAAE;QACNH,KAAK,EAAE,QADD;QAENE,QAAQ,EAAE;MAFJ;IApBE,CA/B8B;IAyD1CE,QAzD0C,sBAyD/B;MACT,KAAKN,OAAL,CAAa,IAAb;MACA,KAAKO,SAAL,CAAe,IAAf;IACD;EA5DyC,CAA5C;EArBApB,EAAE,CAACqB,KAAH,CAASC,OAAT,CAAiBC,OAAjB,CAAyBpB,aAAzB,GAAyCA,aAAzC"
}