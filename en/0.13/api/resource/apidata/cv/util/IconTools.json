{
  "version": 0.3,
  "lastModified": 1729100955417,
  "lastModifiedIso": "2024-10-16T17:49:15.417Z",
  "classFilename": "../../source/class/cv/util/IconTools.js",
  "type": "class",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 866
    },
    "end": {
      "line": 365,
      "column": 3,
      "index": 12961
    }
  },
  "className": "cv.util.IconTools",
  "jsdoc": {
    "raw": [
      "*",
      " * @author Christian Mayer",
      " * @since 2015",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": ""
      }
    ],
    "@author": [
      {
        "name": "@author",
        "body": "Christian Mayer"
      }
    ],
    "@since": [
      {
        "name": "@since",
        "body": "2015"
      }
    ]
  },
  "isSingleton": false,
  "abstract": false,
  "statics": {
    "hexColorRegEx": {
      "jsdoc": {
        "raw": [
          "*",
          "     * RegEx to determine a valid CSS style color like #rrggbb",
          "     * @type {RegExp}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>RegEx to determine a valid CSS style color like #rrggbb</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{RegExp}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1220
        },
        "end": {
          "line": 38,
          "column": 36,
          "index": 1252
        }
      },
      "appearsIn": []
    },
    "colorMapping": {
      "jsdoc": {
        "raw": [
          "*",
          "     * as a convenience, definition of a few colors",
          "     * @type {Object<string, string>}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>as a convenience, definition of a few colors</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object<string, string>}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1364
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1599
        }
      },
      "appearsIn": []
    },
    "iconCache": {
      "jsdoc": {
        "raw": [
          "*",
          "     * the Image() of all knows (i.e. used) icons",
          "     * @type {Object.<string, iconCacheEntryHash>}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>the Image() of all knows (i.e. used) icons</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object.<string, iconCacheEntryHash>}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 2115
        },
        "end": {
          "line": 68,
          "column": 17,
          "index": 2128
        }
      },
      "appearsIn": []
    },
    "iconCacheMap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * mapping of ID to Cache entry (URL)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>mapping of ID to Cache entry (URL)</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2192
        },
        "end": {
          "line": 72,
          "column": 20,
          "index": 2208
        }
      },
      "appearsIn": []
    },
    "iconDelay": {
      "jsdoc": {
        "raw": [
          "*",
          "     * array of all icons to fill where the Image is not ready yet",
          "     * @type {Array.<Array<(HTMLCanvasElement|SVGElement), Object.<string, ImageData>, string>>}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>array of all icons to fill where the Image is not ready yet</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array.<Array<(HTMLCanvasElement|SVGElement), Object.<string, ImageData>, string>>}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2394
        },
        "end": {
          "line": 77,
          "column": 17,
          "index": 2407
        }
      },
      "appearsIn": []
    },
    "iconDelayFn": {
      "jsdoc": {
        "raw": [
          "*",
          "     * handler for delay function",
          "     * @type {Function}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>handler for delay function</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2487
        },
        "end": {
          "line": 82,
          "column": 21,
          "index": 2504
        }
      },
      "appearsIn": []
    },
    "tmpCanvas": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2511
        },
        "end": {
          "line": 84,
          "column": 19,
          "index": 2526
        }
      },
      "appearsIn": []
    },
    "tmpCtx": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2532
        },
        "end": {
          "line": 85,
          "column": 16,
          "index": 2544
        }
      },
      "appearsIn": []
    },
    "preloadedKUFicons": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Were the KNX User Forum icons already preloaded?",
          "     * Only done when the config is using them",
          "     * @type {boolean}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Were the KNX User Forum icons already preloaded?\n Only done when the config is using them</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{boolean}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2692
        },
        "end": {
          "line": 91,
          "column": 28,
          "index": 2716
        }
      },
      "appearsIn": []
    },
    "iconDelayed": {
      "jsdoc": {
        "raw": [
          "*",
          "     *",
          "     * @param {(HTMLCanvasElement|SVGElement)} icon",
          "     * @param {Object.<string, ImageData>} colors",
          "     * @param {string} color",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{(HTMLCanvasElement|SVGElement)} icon",
            "paramName": "icon",
            "description": "",
            "type": [
              "(HTMLCanvasElement",
              "SVGElement)"
            ]
          },
          {
            "name": "@param",
            "body": "{Object.<string, ImageData>} colors",
            "paramName": "colors",
            "description": "",
            "type": "Object.<string, ImageData>"
          },
          {
            "name": "@param",
            "body": "{string} color",
            "paramName": "color",
            "description": "",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2877
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3722
        }
      },
      "type": "function",
      "params": [
        {
          "name": "icon",
          "type": [
            "(HTMLCanvasElement",
            "SVGElement)"
          ]
        },
        {
          "name": "colors",
          "type": "Object.<string, ImageData>"
        },
        {
          "name": "color",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "createCanvas": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Create the HTML for the canvas element and return it.",
          "     * @param {string} iconId",
          "     * @param {string?} styling",
          "     * @param {string?} classes",
          "     * @returns {string}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create the HTML for the canvas element and return it.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} iconId",
            "paramName": "iconId",
            "description": "",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} styling",
            "paramName": "styling",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} classes",
            "paramName": "classes",
            "description": "",
            "optional": true,
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3924
        },
        "end": {
          "line": 129,
          "column": 5,
          "index": 4061
        }
      },
      "type": "function",
      "params": [
        {
          "name": "iconId",
          "type": "string"
        },
        {
          "name": "styling",
          "type": "string",
          "optional": true
        },
        {
          "name": "classes",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "fillCanvas": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fill the canvas with the ImageData. Also resize the",
          "     * canvas at the same time.",
          "     * @param {HTMLCanvasElement} canvas",
          "     * @param {ImageData} imageData",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fill the canvas with the ImageData. Also resize the\n canvas at the same time.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{HTMLCanvasElement} canvas",
            "paramName": "canvas",
            "description": "",
            "type": "HTMLCanvasElement"
          },
          {
            "name": "@param",
            "body": "{ImageData} imageData",
            "paramName": "imageData",
            "description": "",
            "type": "ImageData"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 4251
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 4427
        }
      },
      "type": "function",
      "params": [
        {
          "name": "canvas",
          "type": "HTMLCanvasElement"
        },
        {
          "name": "imageData",
          "type": "ImageData"
        }
      ],
      "appearsIn": []
    },
    "innerRecolorLoop": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Two versions of a recoloring function to work around an Android bug:",
          "     * http://stackoverflow.com/questions/14969496/html5-canvas-pixel-manipulation-problems-on-mobile-devices-when-setting-the-alph",
          "     * https://code.google.com/p/android/issues/detail?id=17565",
          "     * @param {number} r",
          "     * @param {number} g",
          "     * @param {number} b",
          "     * @param {number[]} data",
          "     * @param {number} length",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Two versions of a recoloring function to work around an Android bug:\n http://stackoverflow.com/questions/14969496/html5-canvas-pixel-manipulation-problems-on-mobile-devices-when-setting-the-alph\n https://code.google.com/p/android/issues/detail?id=17565</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{number} r",
            "paramName": "r",
            "description": "",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "{number} g",
            "paramName": "g",
            "description": "",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "{number} b",
            "paramName": "b",
            "description": "",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "{number[]} data",
            "paramName": "data",
            "description": "",
            "type": "number[]"
          },
          {
            "name": "@param",
            "body": "{number} length",
            "paramName": "length",
            "description": "",
            "type": "number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 4856
        },
        "end": {
          "line": 181,
          "column": 11,
          "index": 5915
        }
      },
      "appearsIn": []
    },
    "doRecolorNonTransparent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Do the recoloring based on `thisIcon` and store it in the",
          "     * hash `thisIconColors`.",
          "     * @param {string} color - color in the CSS style #rrggbb",
          "     * @param {HTMLImageElement} thisIcon",
          "     * @param {Object.<string, iconCacheEntryHash>} thisIconColors",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Do the recoloring based on <code>thisIcon</code> and store it in the\n hash <code>thisIconColors</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} color - color in the CSS style #rrggbb",
            "paramName": "color",
            "description": "- color in the CSS style #rrggbb",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{HTMLImageElement} thisIcon",
            "paramName": "thisIcon",
            "description": "",
            "type": "HTMLImageElement"
          },
          {
            "name": "@param",
            "body": "{Object.<string, iconCacheEntryHash>} thisIconColors",
            "paramName": "thisIconColors",
            "description": "",
            "type": "Object.<string, iconCacheEntryHash>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 189,
          "column": 4,
          "index": 6203
        },
        "end": {
          "line": 215,
          "column": 5,
          "index": 7355
        }
      },
      "type": "function",
      "params": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "thisIcon",
          "type": "HTMLImageElement"
        },
        {
          "name": "thisIconColors",
          "type": "Object.<string, iconCacheEntryHash>"
        }
      ],
      "appearsIn": []
    },
    "recolorNonTransparent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Function to call for each icon that should be dynamically recolored.",
          "     * This will be called for each known URL, so only remember the string but",
          "     * don't load the image yet as it might not be needed.",
          "     * @param {string} url",
          "     * @returns {recolorCallback} a function that will append the recolored image to",
          "     * the jQuery element passed to that function",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Function to call for each icon that should be dynamically recolored.\n This will be called for each known URL, so only remember the string but\n don't load the image yet as it might not be needed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} url",
            "paramName": "url",
            "description": "",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{recolorCallback} a function that will append the recolored image to\n the jQuery element passed to that function",
            "type": "recolorCallback",
            "description": "a function that will append the recolored image to\n the jQuery element passed to that function"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 7754
        },
        "end": {
          "line": 289,
          "column": 5,
          "index": 10398
        }
      },
      "type": "function",
      "params": [
        {
          "name": "url",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "recolorCallback"
      },
      "appearsIn": []
    },
    "fillRecoloredIcon": {
      "jsdoc": {
        "raw": [
          "*",
          "     * This function must be called to fill a specific icon that was created.",
          "     * Is will be colored based on it's class name.",
          "     * @param {(HTMLCanvasElement|SVGElement)} icon",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function must be called to fill a specific icon that was created.\n Is will be colored based on it's class name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{(HTMLCanvasElement|SVGElement)} icon",
            "paramName": "icon",
            "description": "",
            "type": [
              "(HTMLCanvasElement",
              "SVGElement)"
            ]
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 296,
          "column": 4,
          "index": 10603
        },
        "end": {
          "line": 310,
          "column": 5,
          "index": 11162
        }
      },
      "type": "function",
      "params": [
        {
          "name": "icon",
          "type": [
            "(HTMLCanvasElement",
            "SVGElement)"
          ]
        }
      ],
      "appearsIn": []
    },
    "svgKUF": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @param {string} iconID",
          "     * @returns {recolorCallback}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} iconID",
            "paramName": "iconID",
            "description": "",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{recolorCallback}",
            "type": "recolorCallback",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 316,
          "column": 4,
          "index": 11249
        },
        "end": {
          "line": 357,
          "column": 5,
          "index": 12788
        }
      },
      "type": "function",
      "params": [
        {
          "name": "iconID",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "recolorCallback"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}