{
  "version": 0.3,
  "lastModified": 1735383634052,
  "lastModifiedIso": "2024-12-28T11:00:34.052Z",
  "classFilename": "../../source/class/cv/parser/pure/widgets/Audio.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 859
    },
    "end": {
      "line": 96,
      "column": 3,
      "index": 2795
    }
  },
  "className": "cv.parser.pure.widgets.Audio",
  "jsdoc": {
    "raw": [
      "*",
      " * Parse &lt;audio;gt; config elements",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Parse &lt;audio;gt; config elements</p>"
      }
    ]
  },
  "isSingleton": false,
  "abstract": false,
  "statics": {
    "parse": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Parses the widgets XML configuration and extracts the given information",
          "     * to a simple key/value map.",
          "     *",
          "     * @param xml {Element} XML-Element",
          "     * @param path {String} internal path of the widget",
          "     * @param flavour {String} Flavour of the widget",
          "     * @param pageType {String} Page type (2d, 3d, ...)",
          "     * @return {Map} extracted data from config element as key/value map",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses the widgets XML configuration and extracts the given information\n to a simple key/value map.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xml {Element} XML-Element",
            "paramName": "xml",
            "description": " XML-Element",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "path {String} internal path of the widget",
            "paramName": "path",
            "description": " internal path of the widget",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "flavour {String} Flavour of the widget",
            "paramName": "flavour",
            "description": " Flavour of the widget",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "pageType {String} Page type (2d, 3d, ...)",
            "paramName": "pageType",
            "description": " Page type (2d, 3d, ...)",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} extracted data from config element as key/value map",
            "type": "Map<any, any>",
            "description": "extracted data from config element as key/value map"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1495
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1867
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xml",
          "type": "Element"
        },
        {
          "name": "path",
          "type": "string"
        },
        {
          "name": "flavour",
          "type": "string"
        },
        {
          "name": "pageType",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getAttributeToPropertyMappings": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns a map with definitions for the XML Parser to map XML-Attribute values",
          "     * to properties e.g",
          "     * <pre>{",
          "     *  <attribute-name>: {",
          "     *    target: <property-name>,",
          "     *    default: <default-value>,",
          "     *    transform: <callback to transform the value to the desired value>",
          "     *  }",
          "     * }</pre>",
          "     * @return {Object}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a map with definitions for the XML Parser to map XML-Attribute values\n to properties e.g\n </p>\n<pre>{\n  <attribute-name>: {\n    target: <property-name>,\n    default: <default-value>,\n    transform: <callback to transform the value to the desired value>\n  }\n }</pre>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Record<any, any>",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 2238
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2673
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}