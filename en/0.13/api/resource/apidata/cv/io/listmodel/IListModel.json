{
  "version": 0.3,
  "lastModified": 1726088789829,
  "lastModifiedIso": "2024-09-11T21:06:29.829Z",
  "classFilename": "../../source/class/cv/io/listmodel/IListModel.js",
  "type": "interface",
  "location": {
    "start": {
      "line": 4,
      "column": 0,
      "index": 44
    },
    "end": {
      "line": 44,
      "column": 3,
      "index": 1096
    }
  },
  "className": "cv.io.listmodel.IListModel",
  "jsdoc": {
    "raw": [
      "*",
      " * Interface for Listmodel sources.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Interface for Listmodel sources.</p>"
      }
    ]
  },
  "properties": {
    "model": {
      "location": {
        "start": {
          "line": 11,
          "column": 4,
          "index": 241
        },
        "end": {
          "line": 14,
          "column": 5,
          "index": 310
        }
      },
      "json": {
        "check": "qx.data.Array",
        "deferredInit": true
      },
      "jsdoc": null,
      "appearsIn": []
    }
  },
  "events": {
    "refresh": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          " this event is sent when the model itself wants to trigger a list refresh."
        ]
      },
      "location": {
        "start": {
          "line": 24,
          "column": 4,
          "index": 535
        },
        "end": {
          "line": 24,
          "column": 34,
          "index": 565
        }
      }
    }
  },
  "members": {
    "refresh": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 711
        },
        "end": {
          "line": 33,
          "column": 22,
          "index": 729
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "handleEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * handles event from the list",
          "     * @param ev {Event}",
          "     * @param data {object} contains a map of all \"data-\" prefixed attributes of the event source, contains at least data.action",
          "     * @param model {object} model of the clicked list item",
          "     * @returns {boolean} if the event has been handled",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>handles event from the list</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}",
            "paramName": "ev",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "data {object} contains a map of all \"data-\" prefixed attributes of the event source, contains at least data.action",
            "paramName": "data",
            "description": " contains a map of all \"data-\" prefixed attributes of the event source, contains at least data.action",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "model {object} model of the clicked list item",
            "paramName": "model",
            "description": " model of the clicked list item",
            "type": "Record<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{boolean} if the event has been handled",
            "type": "boolean",
            "description": "if the event has been handled"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1057
        },
        "end": {
          "line": 42,
          "column": 35,
          "index": 1088
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev",
          "type": "Event"
        },
        {
          "name": "data",
          "type": "Record<any, any>"
        },
        {
          "name": "model",
          "type": "Record<any, any>"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "statics": {}
}