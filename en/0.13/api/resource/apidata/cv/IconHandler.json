{
  "version": 0.3,
  "lastModified": 1722151563971,
  "lastModifiedIso": "2024-07-28T07:26:03.971Z",
  "classFilename": "../../source/class/cv/IconHandler.js",
  "type": "class",
  "location": {
    "start": {
      "line": 29,
      "column": 0,
      "index": 955
    },
    "end": {
      "line": 306,
      "column": 3,
      "index": 9556
    }
  },
  "className": "cv.IconHandler",
  "jsdoc": {
    "raw": [
      "*",
      " * The object \"icon\" contains the whole API necessary to handle the icons.",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The object \"icon\" contains the whole API necessary to handle the icons.</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "isSingleton": true,
  "abstract": false,
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 38,
        "column": 2,
        "index": 1183
      },
      "end": {
        "line": 40,
        "column": 3,
        "index": 1234
      }
    }
  },
  "members": {
    "__db": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal database of the known icons.",
          "     * Initially filled with the default icons.",
          "     * @type {iconDB}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal database of the known icons.\n Initially filled with the default icons.</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{iconDB}"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1985
        },
        "end": {
          "line": 66,
          "column": 14,
          "index": 1995
        }
      },
      "appearsIn": []
    },
    "insert": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Insert or overwrite one or many icons into the database. The parameter",
          "     * might be a full hash of icon definitions or a single one consisting out of",
          "     * a name and a URI path. Optional further parameters are a \"type\" and a",
          "     * flavour.",
          "     * @param {string} name",
          "     * @param {string} uri",
          "     * @param {string?} type",
          "     * @param {string?} flavour",
          "     * @param {string?} color",
          "     * @param {string?} styling",
          "     * @param {string?} dynamic",
          "     * @param {string?} source",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Insert or overwrite one or many icons into the database. The parameter\n might be a full hash of icon definitions or a single one consisting out of\n a name and a URI path. Optional further parameters are a \"type\" and a\n flavour.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} name",
            "paramName": "name",
            "description": "",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string} uri",
            "paramName": "uri",
            "description": "",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} type",
            "paramName": "type",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} flavour",
            "paramName": "flavour",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} color",
            "paramName": "color",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} styling",
            "paramName": "styling",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} dynamic",
            "paramName": "dynamic",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} source",
            "paramName": "source",
            "description": "",
            "optional": true,
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2512
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 3328
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "type",
          "type": "string",
          "optional": true
        },
        {
          "name": "flavour",
          "type": "string",
          "optional": true
        },
        {
          "name": "color",
          "type": "string",
          "optional": true
        },
        {
          "name": "styling",
          "type": "string",
          "optional": true
        },
        {
          "name": "dynamic",
          "type": "string",
          "optional": true
        },
        {
          "name": "source",
          "type": "string",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "get": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the icon information for a name.",
          "     *",
          "     * @param {string} name",
          "     * @param {string?} type",
          "     * @param {string?} flavour",
          "     * @param {string?} color (only relevant for monochrome icons)",
          "     * @return {(string|recolorCallback|undefined)} The URI for the icon - or \"undefined\" if not known",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the icon information for a name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} name",
            "paramName": "name",
            "description": "",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} type",
            "paramName": "type",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} flavour",
            "paramName": "flavour",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} color (only relevant for monochrome icons)",
            "paramName": "color",
            "description": "(only relevant for monochrome icons)",
            "optional": true,
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{(string|recolorCallback|undefined)} The URI for the icon - or \"undefined\" if not known",
            "type": "(string|recolorCallback|undefined)",
            "description": "The URI for the icon - or \"undefined\" if not known"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3661
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 5497
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "type",
          "type": "string",
          "optional": true
        },
        {
          "name": "flavour",
          "type": "string",
          "optional": true
        },
        {
          "name": "color",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": {
        "type": "(string|recolorCallback|undefined)"
      },
      "mixin": "qx.core.MProperty",
      "appearsIn": [
        "qx.core.MProperty"
      ]
    },
    "getURI": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 166,
          "column": 4,
          "index": 5504
        },
        "end": {
          "line": 172,
          "column": 5,
          "index": 5676
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getIconElement": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the icon - either as DOM element (`asText = false`) or as string",
          "     * (`asText = true`).",
          "     * When it is returned as string and it was added to the DOM, the",
          "     * fillIcons method must be called to fill missing content (e.g. the",
          "     * <canvas> icons.",
          "     *",
          "     * @param {string} name",
          "     * @param {string?} type",
          "     * @param {string?} flavour",
          "     * @param {string?} color (only relevant for monochrome icons)",
          "     * @param {string?} styling",
          "     * @param {string?} iconclass",
          "     * @param {boolean?} asText",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the icon - either as DOM element (<code>asText = false</code>) or as string\n (<code>asText = true</code>).\n When it is returned as string and it was added to the DOM, the\n fillIcons method must be called to fill missing content (e.g. the\n <canvas> icons.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} name",
            "paramName": "name",
            "description": "",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} type",
            "paramName": "type",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} flavour",
            "paramName": "flavour",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} color (only relevant for monochrome icons)",
            "paramName": "color",
            "description": "(only relevant for monochrome icons)",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} styling",
            "paramName": "styling",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} iconclass",
            "paramName": "iconclass",
            "description": "",
            "optional": true,
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{boolean?} asText",
            "paramName": "asText",
            "description": "",
            "optional": true,
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 189,
          "column": 4,
          "index": 6228
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 7848
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "type",
          "type": "string",
          "optional": true
        },
        {
          "name": "flavour",
          "type": "string",
          "optional": true
        },
        {
          "name": "color",
          "type": "string",
          "optional": true
        },
        {
          "name": "styling",
          "type": "string",
          "optional": true
        },
        {
          "name": "iconclass",
          "type": "string",
          "optional": true
        },
        {
          "name": "asText",
          "type": "boolean",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "getIconSource": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Provide a value that can be used by cv.ui.manager.basic.Image to display the icon on an qooxdoo widget.",
          "     * @param {string} name",
          "     * @param {string?} classes - optional css classes used in the svg icon code (default is 'icon')",
          "     * @returns {string}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Provide a value that can be used by cv.ui.manager.basic.Image to display the icon on an qooxdoo widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} name",
            "paramName": "name",
            "description": "",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{string?} classes - optional css classes used in the svg icon code (default is 'icon')",
            "paramName": "classes",
            "description": "- optional css classes used in the svg icon code (default is 'icon')",
            "optional": true,
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 248,
          "column": 4,
          "index": 8136
        },
        "end": {
          "line": 274,
          "column": 5,
          "index": 8894
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "classes",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "fillIcons": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fill the icons in the array.",
          "     * @param array",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fill the icons in the array.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "array",
            "paramName": "array",
            "type": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 280,
          "column": 4,
          "index": 8973
        },
        "end": {
          "line": 282,
          "column": 5,
          "index": 9074
        }
      },
      "type": "function",
      "params": [
        {
          "name": "array"
        }
      ],
      "appearsIn": []
    },
    "list": {
      "jsdoc": {
        "raw": [
          "*",
          "     * List all known icons",
          "     *",
          "     *",
          "     * @return {string[]} List of all known icon names",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>List all known icons</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string[]} List of all known icon names",
            "type": "string[]",
            "description": "List of all known icon names"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 290,
          "column": 4,
          "index": 9194
        },
        "end": {
          "line": 292,
          "column": 5,
          "index": 9245
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string[]"
      },
      "appearsIn": []
    },
    "debug": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Return icon database for debuging purposes - use ONLY for debugging as it's",
          "     * circumventing the data hiding and exposes a writeable reference to the",
          "     * database object!",
          "     *",
          "     *",
          "     * @return {Object} The icon database",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return icon database for debuging purposes - use ONLY for debugging as it's\n circumventing the data hiding and exposes a writeable reference to the\n database object!</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The icon database",
            "type": "Record<any, any>",
            "description": "The icon database"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 302,
          "column": 4,
          "index": 9509
        },
        "end": {
          "line": 304,
          "column": 5,
          "index": 9548
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Record<any, any>"
      },
      "mixin": "qx.core.MLogging",
      "appearsIn": [
        "qx.core.MLogging"
      ]
    }
  },
  "statics": {},
  "properties": {}
}