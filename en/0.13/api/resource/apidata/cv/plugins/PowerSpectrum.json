{
  "version": 0.3,
  "lastModified": 1735341547555,
  "lastModifiedIso": "2024-12-27T23:19:07.555Z",
  "classFilename": "../../source/class/cv/plugins/PowerSpectrum.js",
  "type": "class",
  "location": {
    "start": {
      "line": 31,
      "column": 0,
      "index": 1261
    },
    "end": {
      "line": 632,
      "column": 3,
      "index": 15730
    }
  },
  "className": "cv.plugins.PowerSpectrum",
  "jsdoc": {
    "raw": [
      "*",
      " * The powerspectrum plugin and widget creates a graph to show the power",
      " * spectral data that the Enertex Smartmeter can send on the KNX bus.",
      " *",
      " * @author Christian Mayer",
      " * @since 0.10.0",
      " * @asset(plugins/diagram/dep/flot/jquery.flot.min.js)",
      " * @asset(plugins/diagram/dep/flot/jquery.flot.canvas.min.js)",
      " * @asset(plugins/diagram/dep/flot/jquery.flot.resize.min.js)",
      " * @asset(plugins/diagram/dep/flot/jquery.flot.navigate.min.js)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The powerspectrum plugin and widget creates a graph to show the power\n spectral data that the Enertex Smartmeter can send on the KNX bus.</p>"
      }
    ],
    "@author": [
      {
        "name": "@author",
        "body": "Christian Mayer"
      }
    ],
    "@since": [
      {
        "name": "@since",
        "body": "0.10.0"
      }
    ],
    "@asset": [
      {
        "name": "@asset",
        "body": "plugins/diagram/dep/flot/jquery.flot.min.js"
      },
      {
        "name": "@asset",
        "body": "plugins/diagram/dep/flot/jquery.flot.canvas.min.js"
      },
      {
        "name": "@asset",
        "body": "plugins/diagram/dep/flot/jquery.flot.resize.min.js"
      },
      {
        "name": "@asset",
        "body": "plugins/diagram/dep/flot/jquery.flot.navigate.min.js"
      }
    ]
  },
  "superClass": "cv.ui.structure.pure.AbstractWidget",
  "mixins": [
    "cv.ui.common.Update"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "props"
      }
    ],
    "location": {
      "start": {
        "line": 40,
        "column": 2,
        "index": 1531
      },
      "end": {
        "line": 62,
        "column": 3,
        "index": 2115
      }
    }
  },
  "statics": {
    "CURRENT": {
      "jsdoc": {
        "raw": [
          " Constants"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 2288
        },
        "end": {
          "line": 71,
          "column": 14,
          "index": 2298
        }
      },
      "appearsIn": []
    },
    "VOLTAGE": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2304
        },
        "end": {
          "line": 72,
          "column": 14,
          "index": 2314
        }
      },
      "appearsIn": []
    },
    "limitEN50160_1999": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 2320
        },
        "end": {
          "line": 98,
          "column": 5,
          "index": 2786
        }
      },
      "appearsIn": []
    },
    "limitEN61000_3_2": {
      "jsdoc": {
        "raw": [
          " limit for voltage in ratio"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2827
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3281
        }
      },
      "appearsIn": []
    },
    "referenceSin": {
      "jsdoc": {
        "raw": [
          " limit for current in Ampere"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3323
        },
        "end": {
          "line": 129,
          "column": 30,
          "index": 3349
        }
      },
      "appearsIn": []
    },
    "fixLimits": {
      "jsdoc": {
        "raw": [
          " fix limits for better displaying"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 3396
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3464
        }
      },
      "type": "function",
      "params": [
        {
          "name": "entry"
        },
        {
          "name": "index"
        },
        {
          "name": "array"
        }
      ],
      "appearsIn": []
    },
    "lastShifted": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 3470
        },
        "end": {
          "line": 138,
          "column": 5,
          "index": 3577
        }
      },
      "type": "function",
      "params": [
        {
          "name": "array"
        }
      ],
      "appearsIn": []
    },
    "parse": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Parses the widgets XML configuration and extracts the given information",
          "     * to a simple key/value map.",
          "     *",
          "     * @param xml {Element} XML-Element",
          "     * @param path {String} internal path of the widget",
          "     * @param flavour {String} Flavour of the widget",
          "     * @param pageType {String} Page type (2d, 3d, ...)",
          "     * @return {Map} extracted data from config element as key/value map",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses the widgets XML configuration and extracts the given information\n to a simple key/value map.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xml {Element} XML-Element",
            "paramName": "xml",
            "description": " XML-Element",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "path {String} internal path of the widget",
            "paramName": "path",
            "description": " internal path of the widget",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "flavour {String} Flavour of the widget",
            "paramName": "flavour",
            "description": " Flavour of the widget",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "pageType {String} Page type (2d, 3d, ...)",
            "paramName": "pageType",
            "description": " Page type (2d, 3d, ...)",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} extracted data from config element as key/value map",
            "type": "Map<any, any>",
            "description": "extracted data from config element as key/value map"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 150,
          "column": 4,
          "index": 3998
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 4395
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xml",
          "type": "Element"
        },
        {
          "name": "path",
          "type": "string"
        },
        {
          "name": "flavour",
          "type": "string"
        },
        {
          "name": "pageType",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getAttributeToPropertyMappings": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 166,
          "column": 4,
          "index": 4402
        },
        "end": {
          "line": 220,
          "column": 5,
          "index": 5565
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "makeAddressListFn": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 222,
          "column": 4,
          "index": 5572
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 5733
        }
      },
      "type": "function",
      "params": [
        {
          "name": "src"
        },
        {
          "name": "transform"
        },
        {
          "name": "mode"
        },
        {
          "name": "variant"
        }
      ],
      "appearsIn": []
    }
  },
  "properties": {
    "displayType": {
      "location": {
        "start": {
          "line": 236,
          "column": 4,
          "index": 5899
        },
        "end": {
          "line": 239,
          "column": 5,
          "index": 5954
        }
      },
      "json": {
        "check": [
          0,
          1
        ],
        "init": 1
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "singlePhase": {
      "location": {
        "start": {
          "line": 241,
          "column": 4,
          "index": 5961
        },
        "end": {
          "line": 244,
          "column": 5,
          "index": 6023
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "spectrum": {
      "location": {
        "start": {
          "line": 246,
          "column": 4,
          "index": 6030
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 6084
        }
      },
      "json": {
        "check": "Array",
        "init": []
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "limitName": {
      "location": {
        "start": {
          "line": 251,
          "column": 4,
          "index": 6091
        },
        "end": {
          "line": 254,
          "column": 5,
          "index": 6152
        }
      },
      "json": {
        "check": "String",
        "init": "limit"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "name1": {
      "location": {
        "start": {
          "line": 256,
          "column": 4,
          "index": 6159
        },
        "end": {
          "line": 259,
          "column": 5,
          "index": 6213
        }
      },
      "json": {
        "check": "String",
        "init": "L1"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "name2": {
      "location": {
        "start": {
          "line": 261,
          "column": 4,
          "index": 6220
        },
        "end": {
          "line": 264,
          "column": 5,
          "index": 6274
        }
      },
      "json": {
        "check": "String",
        "init": "L2"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "name3": {
      "location": {
        "start": {
          "line": 266,
          "column": 4,
          "index": 6281
        },
        "end": {
          "line": 269,
          "column": 5,
          "index": 6335
        }
      },
      "json": {
        "check": "String",
        "init": "L3"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "curve": {
      "location": {
        "start": {
          "line": 271,
          "column": 4,
          "index": 6342
        },
        "end": {
          "line": 274,
          "column": 5,
          "index": 6393
        }
      },
      "json": {
        "check": "Array",
        "init": []
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "showCurve": {
      "location": {
        "start": {
          "line": 276,
          "column": 4,
          "index": 6400
        },
        "end": {
          "line": 279,
          "column": 5,
          "index": 6460
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "showLegend": {
      "location": {
        "start": {
          "line": 281,
          "column": 4,
          "index": 6467
        },
        "end": {
          "line": 284,
          "column": 5,
          "index": 6528
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "current": {
      "location": {
        "start": {
          "line": 286,
          "column": 4,
          "index": 6535
        },
        "end": {
          "line": 289,
          "column": 5,
          "index": 6588
        }
      },
      "json": {
        "check": "Array",
        "init": []
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "limitColor": {
      "location": {
        "start": {
          "line": 291,
          "column": 4,
          "index": 6595
        },
        "end": {
          "line": 294,
          "column": 5,
          "index": 6658
        }
      },
      "json": {
        "check": "Color",
        "init": "#edc240"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "color1": {
      "location": {
        "start": {
          "line": 296,
          "column": 4,
          "index": 6665
        },
        "end": {
          "line": 299,
          "column": 5,
          "index": 6724
        }
      },
      "json": {
        "check": "Color",
        "init": "#afd8f8"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "color2": {
      "location": {
        "start": {
          "line": 301,
          "column": 4,
          "index": 6731
        },
        "end": {
          "line": 304,
          "column": 5,
          "index": 6790
        }
      },
      "json": {
        "check": "Color",
        "init": "#cb4b4b"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "color3": {
      "location": {
        "start": {
          "line": 306,
          "column": 4,
          "index": 6797
        },
        "end": {
          "line": 309,
          "column": 5,
          "index": 6856
        }
      },
      "json": {
        "check": "Color",
        "init": "#4da74d"
      },
      "jsdoc": null,
      "appearsIn": []
    }
  },
  "members": {
    "__plot": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 318,
          "column": 4,
          "index": 7016
        },
        "end": {
          "line": 318,
          "column": 16,
          "index": 7028
        }
      },
      "appearsIn": []
    },
    "__plotCurve": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 319,
          "column": 4,
          "index": 7034
        },
        "end": {
          "line": 319,
          "column": 21,
          "index": 7051
        }
      },
      "appearsIn": []
    },
    "_getInnerDomString": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 321,
          "column": 4,
          "index": 7058
        },
        "end": {
          "line": 329,
          "column": 5,
          "index": 7372
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "_onDomReady": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 331,
          "column": 4,
          "index": 7379
        },
        "end": {
          "line": 392,
          "column": 5,
          "index": 9019
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "_update": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 394,
          "column": 4,
          "index": 9026
        },
        "end": {
          "line": 429,
          "column": 5,
          "index": 10383
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ga"
        },
        {
          "name": "data"
        }
      ],
      "appearsIn": []
    },
    "setupCurve": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Setup helper",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setup helper</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 434,
          "column": 4,
          "index": 10426
        },
        "end": {
          "line": 487,
          "column": 5,
          "index": 11374
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "setupSpectrum": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 488,
          "column": 4,
          "index": 11380
        },
        "end": {
          "line": 498,
          "column": 5,
          "index": 11604
        }
      },
      "type": "function",
      "params": [
        {
          "name": "offset"
        }
      ],
      "appearsIn": []
    },
    "updateCurve": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Convert a spectrum to a curve",
          "     * @param input",
          "     * @param target",
          "     * @param phase",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Convert a spectrum to a curve</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "input",
            "paramName": "input",
            "type": ""
          },
          {
            "name": "@param",
            "body": "target",
            "paramName": "target",
            "type": ""
          },
          {
            "name": "@param",
            "body": "phase",
            "paramName": "phase",
            "type": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 506,
          "column": 4,
          "index": 11725
        },
        "end": {
          "line": 522,
          "column": 5,
          "index": 12201
        }
      },
      "type": "function",
      "params": [
        {
          "name": "input"
        },
        {
          "name": "target"
        },
        {
          "name": "phase"
        }
      ],
      "appearsIn": []
    },
    "createDatasetCurve": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Little helper to setup the Flot dataset structure.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Little helper to setup the Flot dataset structure.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 527,
          "column": 4,
          "index": 12282
        },
        "end": {
          "line": 562,
          "column": 5,
          "index": 13267
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "createDatasetSpectrum": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Little helper to setup the Flot dataset structure.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Little helper to setup the Flot dataset structure.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 567,
          "column": 4,
          "index": 13348
        },
        "end": {
          "line": 599,
          "column": 5,
          "index": 14534
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initOnCreate": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1530
        },
        "end": {
          "line": 48,
          "column": 24,
          "index": 1550
        }
      },
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "__initUpdater": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1557
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 2196
        }
      },
      "type": "function",
      "params": [],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "update": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Process the incoming data, update the shown value and the stylings",
          "     *",
          "     * @param address {String} Address of the incoming value",
          "     * @param data {String} the incoming value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Process the incoming data, update the shown value and the stylings</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} Address of the incoming value"
          },
          {
            "name": "@param",
            "body": "data {String} the incoming value"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2408
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2675
        }
      },
      "type": "function",
      "params": [
        {
          "name": "address"
        },
        {
          "name": "data"
        }
      ],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "processIncomingValue": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2682
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 3103
        }
      },
      "type": "function",
      "params": [
        {
          "name": "address"
        },
        {
          "name": "data"
        }
      ],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "update3d": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Description",
          "     *",
          "     * @param ev {var}",
          "     * @param data {var}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Description</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {var}"
          },
          {
            "name": "@param",
            "body": "data {var}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 3200
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3664
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        },
        {
          "name": "data"
        }
      ],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    }
  }
}