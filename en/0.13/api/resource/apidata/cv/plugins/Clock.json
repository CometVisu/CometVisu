{
  "version": 0.3,
  "lastModified": 1729100955401,
  "lastModifiedIso": "2024-10-16T17:49:15.401Z",
  "classFilename": "../../source/class/cv/plugins/Clock.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 847
    },
    "end": {
      "line": 603,
      "column": 3,
      "index": 17938
    }
  },
  "className": "cv.plugins.Clock",
  "jsdoc": {
    "raw": [
      "*",
      " * @asset(plugins/clock/*)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": ""
      }
    ],
    "@asset": [
      {
        "name": "@asset",
        "body": "plugins/clock/*"
      }
    ]
  },
  "superClass": "cv.ui.structure.pure.AbstractWidget",
  "mixins": [
    "cv.ui.common.Update",
    "cv.ui.common.Operate"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "props"
      }
    ],
    "location": {
      "start": {
        "line": 31,
        "column": 2,
        "index": 1116
      },
      "end": {
        "line": 37,
        "column": 3,
        "index": 1285
      }
    }
  },
  "properties": {
    "src": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1445
        },
        "end": {
          "line": 47,
          "column": 5,
          "index": 1479
        }
      },
      "json": {
        "check": "String"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "srcPopup": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1486
        },
        "end": {
          "line": 51,
          "column": 5,
          "index": 1525
        }
      },
      "json": {
        "check": "String"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "titlePopup": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1532
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1573
        }
      },
      "json": {
        "check": "String"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hide24h": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1580
        },
        "end": {
          "line": 60,
          "column": 5,
          "index": 1638
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hide24hPopup": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1645
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1708
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hideAMPM": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1715
        },
        "end": {
          "line": 70,
          "column": 5,
          "index": 1774
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hideAMPMPopup": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1781
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 1845
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hideDigits": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 1852
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 1913
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hideDigitsPopup": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 1920
        },
        "end": {
          "line": 85,
          "column": 5,
          "index": 1986
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hideSeconds": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 1993
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2055
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "hideSecondsPopup": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2062
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2129
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "sendOnFinish": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2136
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2199
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    }
  },
  "statics": {
    "parse": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Parses the widgets XML configuration and extracts the given information",
          "     * to a simple key/value map.",
          "     *",
          "     * @param xml {Element} XML-Element",
          "     * @param path {String} internal path of the widget",
          "     * @param flavour {String} Flavour of the widget",
          "     * @param pageType {String} Page type (2d, 3d, ...)",
          "     * @return {Map} extracted data from config element as key/value map",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses the widgets XML configuration and extracts the given information\n to a simple key/value map.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xml {Element} XML-Element",
            "paramName": "xml",
            "description": " XML-Element",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "path {String} internal path of the widget",
            "paramName": "path",
            "description": " internal path of the widget",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "flavour {String} Flavour of the widget",
            "paramName": "flavour",
            "description": " Flavour of the widget",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "pageType {String} Page type (2d, 3d, ...)",
            "paramName": "pageType",
            "description": " Page type (2d, 3d, ...)",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} extracted data from config element as key/value map",
            "type": "Map<any, any>",
            "description": "extracted data from config element as key/value map"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 2773
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3145
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xml",
          "type": "Element"
        },
        {
          "name": "path",
          "type": "string"
        },
        {
          "name": "flavour",
          "type": "string"
        },
        {
          "name": "pageType",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getAttributeToPropertyMappings": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 134,
          "column": 4,
          "index": 3152
        },
        "end": {
          "line": 208,
          "column": 5,
          "index": 4790
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getElements": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 210,
          "column": 4,
          "index": 4797
        },
        "end": {
          "line": 248,
          "column": 5,
          "index": 6076
        }
      },
      "type": "function",
      "params": [
        {
          "name": "svg"
        },
        {
          "name": "hide24h"
        },
        {
          "name": "hideAMPM"
        },
        {
          "name": "hideDigits"
        },
        {
          "name": "hideSeconds"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {
    "__svg": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 257,
          "column": 4,
          "index": 6236
        },
        "end": {
          "line": 257,
          "column": 15,
          "index": 6247
        }
      },
      "appearsIn": []
    },
    "__Elements": {
      "jsdoc": {
        "raw": [
          " cached access to the SVG in the DOM"
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 258,
          "column": 4,
          "index": 6292
        },
        "end": {
          "line": 258,
          "column": 20,
          "index": 6308
        }
      },
      "appearsIn": []
    },
    "__inDrag": {
      "jsdoc": {
        "raw": [
          " cached access to the individual clock parts"
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 259,
          "column": 4,
          "index": 6361
        },
        "end": {
          "line": 259,
          "column": 15,
          "index": 6372
        }
      },
      "appearsIn": []
    },
    "__timeToShow": {
      "jsdoc": {
        "raw": [
          " is the handle currently dragged?"
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 6414
        },
        "end": {
          "line": 260,
          "column": 22,
          "index": 6432
        }
      },
      "appearsIn": []
    },
    "__valueIsString": {
      "jsdoc": {
        "raw": [
          "*",
          "     *  to handle legacy mode, when a time string is used and not a `Date` object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>to handle legacy mode, when a time string is used and not a <code>Date</code> object</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 264,
          "column": 4,
          "index": 6565
        },
        "end": {
          "line": 264,
          "column": 26,
          "index": 6587
        }
      },
      "appearsIn": []
    },
    "_getInnerDomString": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 266,
          "column": 4,
          "index": 6594
        },
        "end": {
          "line": 268,
          "column": 5,
          "index": 6695
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "_onDomReady": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 270,
          "column": 4,
          "index": 6702
        },
        "end": {
          "line": 379,
          "column": 5,
          "index": 10721
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "initListeners": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 382,
          "column": 4,
          "index": 10746
        },
        "end": {
          "line": 382,
          "column": 22,
          "index": 10764
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "_update": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 385,
          "column": 4,
          "index": 10789
        },
        "end": {
          "line": 404,
          "column": 5,
          "index": 11804
        }
      },
      "type": "function",
      "params": [
        {
          "name": "address"
        },
        {
          "name": "data"
        },
        {
          "name": "isDataAlreadyHandled"
        }
      ],
      "appearsIn": []
    },
    "handleEvent": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 406,
          "column": 4,
          "index": 11811
        },
        "end": {
          "line": 464,
          "column": 5,
          "index": 13445
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "appearsIn": []
    },
    "dragHelper": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 466,
          "column": 4,
          "index": 13452
        },
        "end": {
          "line": 547,
          "column": 5,
          "index": 15817
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "appearsIn": []
    },
    "dragAction": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 549,
          "column": 4,
          "index": 15824
        },
        "end": {
          "line": 552,
          "column": 5,
          "index": 16034
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_updateHands": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 554,
          "column": 4,
          "index": 16041
        },
        "end": {
          "line": 596,
          "column": 5,
          "index": 17767
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initOnCreate": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1530
        },
        "end": {
          "line": 48,
          "column": 24,
          "index": 1550
        }
      },
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "__initUpdater": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1557
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 2196
        }
      },
      "type": "function",
      "params": [],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "update": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Process the incoming data, update the shown value and the stylings",
          "     *",
          "     * @param address {String} Address of the incoming value",
          "     * @param data {String} the incoming value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Process the incoming data, update the shown value and the stylings</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} Address of the incoming value"
          },
          {
            "name": "@param",
            "body": "data {String} the incoming value"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2408
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2675
        }
      },
      "type": "function",
      "params": [
        {
          "name": "address"
        },
        {
          "name": "data"
        }
      ],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "processIncomingValue": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2682
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 3103
        }
      },
      "type": "function",
      "params": [
        {
          "name": "address"
        },
        {
          "name": "data"
        }
      ],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "update3d": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Description",
          "     *",
          "     * @param ev {var}",
          "     * @param data {var}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Description</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {var}"
          },
          {
            "name": "@param",
            "body": "data {var}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 3200
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3664
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        },
        {
          "name": "data"
        }
      ],
      "mixin": "cv.ui.common.Update",
      "appearsIn": [
        "cv.ui.common.Update"
      ]
    },
    "action": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Action performed when the widget got clicked, sends data to the backend",
          "     *",
          "     * @param event {Event} tap event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Action performed when the widget got clicked, sends data to the backend</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {Event} tap event"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 1291
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1675
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "mixin": "cv.ui.common.Operate",
      "appearsIn": [
        "cv.ui.common.Operate",
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "downaction": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles pointerdown events",
          "     * @param event {Event} pointerdown event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles pointerdown events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {Event} pointerdown event"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1778
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1947
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "mixin": "cv.ui.common.Operate",
      "appearsIn": [
        "cv.ui.common.Operate",
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "sendToBackend": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Send the given value to all writeable addresses known to this widget",
          "     *",
          "     * @param value {var} value to send",
          "     * @param filter {Function} optional filter function for addresses",
          "     * @param currentBusValues {Object} optional: the (assumed) last encoded values",
          "     *          that were sent on the bus. When the encoding of the new value",
          "     *          to send is equal to the currentBusValues a transmission will",
          "     *          be suppressed. The object is a hash with the encoding as a key",
          "     *          for the encoded value",
          "     * @return the object/hash of encoded values that were sent last time",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Send the given value to all writeable addresses known to this widget</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} value to send"
          },
          {
            "name": "@param",
            "body": "filter {Function} optional filter function for addresses"
          },
          {
            "name": "@param",
            "body": "currentBusValues {Object} optional: the (assumed) last encoded values\n          that were sent on the bus. When the encoding of the new value\n          to send is equal to the currentBusValues a transmission will\n          be suppressed. The object is a hash with the encoding as a key\n          for the encoded value"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "the object/hash of encoded values that were sent last time"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2594
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 4221
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "filter"
        },
        {
          "name": "currentBusValues"
        }
      ],
      "mixin": "cv.ui.common.Operate",
      "appearsIn": [
        "cv.ui.common.Operate"
      ]
    }
  }
}