{
  "version": 0.3,
  "lastModified": 1735341547551,
  "lastModifiedIso": "2024-12-27T23:19:07.551Z",
  "classFilename": "../../source/class/cv/core/notifications/Router.js",
  "type": "class",
  "location": {
    "start": {
      "line": 27,
      "column": 0,
      "index": 1093
    },
    "end": {
      "line": 372,
      "column": 3,
      "index": 12533
    }
  },
  "className": "cv.core.notifications.Router",
  "jsdoc": {
    "raw": [
      "*",
      " * Global notification handler that routes messages topic-dependent to different {@link cv.core.notifications.IHandler}",
      " * (e.g. NotificationCenter, Dialog, Toast, console.log, native notification, internal message bus ...)",
      " *",
      " * @author Tobias Bräutigam",
      " * @since 0.11.0",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Global notification handler that routes messages topic-dependent to different {@link cv.core.notifications.IHandler}\n (e.g. NotificationCenter, Dialog, Toast, console.log, native notification, internal message bus …)</p>"
      }
    ],
    "@author": [
      {
        "name": "@author",
        "body": "Tobias Bräutigam"
      }
    ],
    "@since": [
      {
        "name": "@since",
        "body": "0.11.0"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "isSingleton": true,
  "abstract": false,
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1333
      },
      "end": {
        "line": 44,
        "column": 3,
        "index": 1607
      }
    }
  },
  "statics": {
    "evaluateCondition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Evaluate the message condition, default to true is message has no condition set",
          "     * @param message {Map}",
          "     * @returns {Boolean}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Evaluate the message condition, default to true is message has no condition set</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {Map}",
            "paramName": "message",
            "type": "Map<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "boolean",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1920
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 2388
        }
      },
      "type": "function",
      "params": [
        {
          "name": "message",
          "type": "Map<any, any>"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "dispatchMessage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Shortcut to {@link cv.core.notifications.Router#dispatchMessage}",
          "     * @param topic",
          "     * @param message",
          "     * @param target",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shortcut to {@link cv.core.notifications.Router#dispatchMessage}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "topic",
            "paramName": "topic",
            "type": ""
          },
          {
            "name": "@param",
            "body": "message",
            "paramName": "message",
            "type": ""
          },
          {
            "name": "@param",
            "body": "target",
            "paramName": "target",
            "type": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2546
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2666
        }
      },
      "type": "function",
      "params": [
        {
          "name": "topic"
        },
        {
          "name": "message"
        },
        {
          "name": "target"
        }
      ],
      "appearsIn": []
    },
    "getTarget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Converts a target name to the related target object/function.",
          "     *",
          "     * @param name {String} target name, e.g. popup, notificationCenter, etc.",
          "     * @return {Object|Function|null} the target that can handle messages",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a target name to the related target object/function.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} target name, e.g. popup, notificationCenter, etc.",
            "paramName": "name",
            "description": " target name, e.g. popup, notificationCenter, etc.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object|Function|null} the target that can handle messages",
            "type": "Object|Function|null",
            "description": "the target that can handle messages"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2917
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 3503
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Object|Function|null"
      },
      "appearsIn": []
    }
  },
  "members": {
    "__routes": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3710
        },
        "end": {
          "line": 115,
          "column": 18,
          "index": 3724
        }
      },
      "appearsIn": []
    },
    "__stateMessageConfig": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3730
        },
        "end": {
          "line": 116,
          "column": 30,
          "index": 3756
        }
      },
      "appearsIn": []
    },
    "__dateFormat": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3762
        },
        "end": {
          "line": 117,
          "column": 22,
          "index": 3780
        }
      },
      "appearsIn": []
    },
    "__timeFormat": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3786
        },
        "end": {
          "line": 118,
          "column": 22,
          "index": 3804
        }
      },
      "appearsIn": []
    },
    "getStateMessageConfig": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3811
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3882
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "registerStateUpdateHandler": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Register state update handler for one or more addresses.",
          "     *",
          "     * <h4>Config Map explanation:</h4>",
          "     * <pre class=\"javascript\">",
          "     * {",
          "     *   <address>: [{",
          "     *    topic: \"cv.state.<address>\", // message topic used for routing",
          "     *    target: \"popup\", // where to show the message",
          "     *    severity: \"normal\", // message severity e.g. high, normal, low",
          "     *    skipInitial: true, // do not show message for initial state update",
          "     *    deletable: true, // user can delete this message",
          "     *    unique: true, // show message once at a time",
          "     *    valueMapping: \"mapping-name\", // optional mapping for value",
          "     *    addressMapping: \"mapping-name\", // optional mapping name for address",
          "     *    titleTemplate: \"Kitchen light on\", // title template of the message",
          "     *    messageTemplate: \"turned on at {{ time }} o'clock\", // message content template",
          "     *    condition: 1 // show only when the value equals the condition value",
          "     *   }]",
          "     * }",
          "     * </pre>",
          "     *",
          "     * @param config {Map}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Register state update handler for one or more addresses.\n </p>\n<h4>Config Map explanation:</h4>\n<pre class=\"javascript\">\n {\n   <address>: [{\n    topic: \"cv.state.<address>\",\n    target: \"popup\",\n    severity: \"normal\",\n    skipInitial: true,\n    deletable: true,\n    unique: true,\n    valueMapping: \"mapping-name\",\n    addressMapping: \"mapping-name\",\n    titleTemplate: \"Kitchen light on\",\n    messageTemplate: \"turned on at {{ time }} o'clock\",\n    condition: 1\n   }]\n }\n </pre>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "config {Map}",
            "paramName": "config",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 148,
          "column": 4,
          "index": 4937
        },
        "end": {
          "line": 157,
          "column": 5,
          "index": 5309
        }
      },
      "type": "function",
      "params": [
        {
          "name": "config",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": []
    },
    "enableStateUpdateHandler": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Toggle state update handler enabled state",
          "     * @param id {number} ID of the handler",
          "     * @param enable {boolean}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Toggle state update handler enabled state</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {number} ID of the handler",
            "paramName": "id",
            "description": " ID of the handler",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "enable {boolean}",
            "paramName": "enable",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 164,
          "column": 4,
          "index": 5456
        },
        "end": {
          "line": 172,
          "column": 5,
          "index": 5725
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id",
          "type": "number"
        },
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "changeStateUpdateHandlerSeverity": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Change state update severity",
          "     * @param id {number} ID of the handler",
          "     * @param severity {string} new severity",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Change state update severity</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {number} ID of the handler",
            "paramName": "id",
            "description": " ID of the handler",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "severity {string} new severity",
            "paramName": "severity",
            "description": " new severity",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 179,
          "column": 4,
          "index": 5873
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 6155
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id",
          "type": "number"
        },
        {
          "name": "severity",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "unregisterStateUpdatehandler": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Unregister state update listeners for a list of addresses",
          "     * @param addresses {Array}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Unregister state update listeners for a list of addresses</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "addresses {Array}",
            "paramName": "addresses",
            "type": "Array<any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 193,
          "column": 4,
          "index": 6275
        },
        "end": {
          "line": 201,
          "column": 5,
          "index": 6592
        }
      },
      "type": "function",
      "params": [
        {
          "name": "addresses",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "registerMessageHandler": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Register a handler for a list of topics",
          "     * @param handler {cv.core.notifications.IHandler}",
          "     * @param topics {Map} map of topics as key and configuration-maps as values",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Register a handler for a list of topics</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "handler {cv.core.notifications.IHandler}",
            "paramName": "handler",
            "type": "cv.core.notifications.IHandler"
          },
          {
            "name": "@param",
            "body": "topics {Map} map of topics as key and configuration-maps as values",
            "paramName": "topics",
            "description": " map of topics as key and configuration-maps as values",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 208,
          "column": 4,
          "index": 6798
        },
        "end": {
          "line": 229,
          "column": 5,
          "index": 7582
        }
      },
      "type": "function",
      "params": [
        {
          "name": "handler",
          "type": "cv.core.notifications.IHandler"
        },
        {
          "name": "topics",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": []
    },
    "_onIncomingData": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handle address state updates and show them as message",
          "     * @param address {String} GA or openHAB item name",
          "     * @param state {var} received State",
          "     * @param initial {Boolean} true id this is the first state update for this address",
          "     * @param changed {Boolean} true if the incoming state update differs from the last one",
          "     * @protected",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle address state updates and show them as message</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} GA or openHAB item name",
            "paramName": "address",
            "description": " GA or openHAB item name",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "state {var} received State",
            "paramName": "state",
            "description": " received State",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "initial {Boolean} true id this is the first state update for this address",
            "paramName": "initial",
            "description": " true id this is the first state update for this address",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "changed {Boolean} true if the incoming state update differs from the last one",
            "paramName": "changed",
            "description": " true if the incoming state update differs from the last one",
            "type": "boolean"
          }
        ],
        "@protected": [
          {
            "name": "@protected",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 7960
        },
        "end": {
          "line": 297,
          "column": 5,
          "index": 10209
        }
      },
      "type": "function",
      "params": [
        {
          "name": "address",
          "type": "string"
        },
        {
          "name": "state",
          "type": "var"
        },
        {
          "name": "initial",
          "type": "boolean"
        },
        {
          "name": "changed",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "__collectHandlers": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 299,
          "column": 4,
          "index": 10216
        },
        "end": {
          "line": 329,
          "column": 5,
          "index": 11254
        }
      },
      "type": "function",
      "params": [
        {
          "name": "topic"
        }
      ],
      "appearsIn": []
    },
    "__collectAllFromSegment": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 331,
          "column": 4,
          "index": 11261
        },
        "end": {
          "line": 339,
          "column": 5,
          "index": 11598
        }
      },
      "type": "function",
      "params": [
        {
          "name": "segment"
        },
        {
          "name": "handlers"
        }
      ],
      "appearsIn": []
    },
    "dispatchMessage": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 341,
          "column": 4,
          "index": 11605
        },
        "end": {
          "line": 355,
          "column": 5,
          "index": 12203
        }
      },
      "type": "function",
      "params": [
        {
          "name": "topic"
        },
        {
          "name": "message"
        },
        {
          "name": "target"
        }
      ],
      "appearsIn": []
    },
    "clear": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 357,
          "column": 4,
          "index": 12210
        },
        "end": {
          "line": 360,
          "column": 5,
          "index": 12289
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 368,
        "column": 2,
        "index": 12437
      },
      "end": {
        "line": 371,
        "column": 3,
        "index": 12529
      }
    }
  },
  "properties": {}
}