{
  "version": 0.3,
  "lastModified": 1729100955413,
  "lastModifiedIso": "2024-10-16T17:49:15.413Z",
  "classFilename": "../../source/class/cv/ui/structure/tile/components/AbstractComponent.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 866
    },
    "end": {
      "line": 455,
      "column": 3,
      "index": 13992
    }
  },
  "className": "cv.ui.structure.tile.components.AbstractComponent",
  "jsdoc": {
    "raw": [
      "*",
      " * Base class for all components.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Base class for all components.</p>"
      }
    ]
  },
  "superClass": "cv.ui.structure.tile.elements.AbstractCustomElement",
  "isSingleton": false,
  "abstract": true,
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "element"
      }
    ],
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 1149
      },
      "end": {
        "line": 35,
        "column": 3,
        "index": 1225
      }
    }
  },
  "properties": {
    "value": {
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1373
        },
        "end": {
          "line": 48,
          "column": 5,
          "index": 1482
        }
      },
      "json": {
        "apply": "_applyValue",
        "nullable": true,
        "event": "changeValue"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "styleClass": {
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1489
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1618
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "apply": "_applyStyleClass",
        "event": "changeStyleClass"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "enabled": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1625
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 1712
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "apply": "_applyEnabled"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "visibility": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1719
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 1874
        }
      },
      "json": {
        "check": [
          "visible",
          "excluded",
          "hidden"
        ],
        "init": "visible",
        "apply": "_applyVisibility",
        "event": "changeVisibility"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "widget": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1964
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 2021
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * True if this tile is the content of a template based widget",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>True if this tile is the content of a template based widget</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "inPopup": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2095
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2153
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * True if this tile is the content of a popup",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>True if this tile is the content of a popup</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "statics": {
    "dateFormats": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2299
        },
        "end": {
          "line": 93,
          "column": 19,
          "index": 2314
        }
      },
      "appearsIn": []
    }
  },
  "members": {
    "_writeAddresses": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2460
        },
        "end": {
          "line": 102,
          "column": 25,
          "index": 2481
        }
      },
      "appearsIn": []
    },
    "_headerFooterParent": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2487
        },
        "end": {
          "line": 103,
          "column": 29,
          "index": 2512
        }
      },
      "appearsIn": []
    },
    "_preMappingHooks": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2518
        },
        "end": {
          "line": 104,
          "column": 26,
          "index": 2540
        }
      },
      "appearsIn": []
    },
    "_tileElement": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2546
        },
        "end": {
          "line": 105,
          "column": 22,
          "index": 2564
        }
      },
      "appearsIn": []
    },
    "__mobileReplacements": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2570
        },
        "end": {
          "line": 106,
          "column": 30,
          "index": 2596
        }
      },
      "appearsIn": []
    },
    "_checkEnvironment": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2603
        },
        "end": {
          "line": 124,
          "column": 5,
          "index": 3115
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getTileParent": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3122
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 3565
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_init": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 145,
          "column": 4,
          "index": 3572
        },
        "end": {
          "line": 209,
          "column": 5,
          "index": 5600
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "appearsIn": [
        "cv.ui.structure.tile.elements.AbstractCustomElement"
      ]
    },
    "__updateAttributes": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 211,
          "column": 4,
          "index": 5607
        },
        "end": {
          "line": 216,
          "column": 5,
          "index": 5853
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getElement": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 218,
          "column": 4,
          "index": 5860
        },
        "end": {
          "line": 220,
          "column": 5,
          "index": 5908
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "appearsIn": [
        "cv.ui.structure.tile.elements.AbstractCustomElement"
      ]
    },
    "appendToHeader": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Append the given element to a header inside the widget this component is a direct child of.",
          "     * If the header does not exist yet, it will be created.",
          "     * Does nothing when this component is no direct child of a widget.",
          "     * @param element {HTMLElement}",
          "     * @param align {String} center (default), left or right",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Append the given element to a header inside the widget this component is a direct child of.\n If the header does not exist yet, it will be created.\n Does nothing when this component is no direct child of a widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {HTMLElement}",
            "paramName": "element",
            "type": "HTMLElement"
          },
          {
            "name": "@param",
            "body": "align {String} center (default), left or right",
            "paramName": "align",
            "description": " center (default), left or right",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 229,
          "column": 4,
          "index": 6260
        },
        "end": {
          "line": 247,
          "column": 5,
          "index": 6984
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "HTMLElement"
        },
        {
          "name": "align",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "getHeader": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Gets the header or an element inside it, if the selector is not empty",
          "     * @param selector {String} css selector",
          "     * @return {Element|null}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the header or an element inside it, if the selector is not empty</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "selector {String} css selector",
            "paramName": "selector",
            "description": " css selector",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element|null}",
            "type": "Element|null",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 254,
          "column": 4,
          "index": 7159
        },
        "end": {
          "line": 265,
          "column": 5,
          "index": 7534
        }
      },
      "type": "function",
      "params": [
        {
          "name": "selector",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Element|null"
      },
      "appearsIn": []
    },
    "appendToFooter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Append the given element to a footer inside the widget this component is a direct child of.",
          "     * If the footer does not exist yet, it will be created.",
          "     * Does nothing when this component is no direct child of a widget.",
          "     * @param element {HTMLElement}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Append the given element to a footer inside the widget this component is a direct child of.\n If the footer does not exist yet, it will be created.\n Does nothing when this component is no direct child of a widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {HTMLElement}",
            "paramName": "element",
            "type": "HTMLElement"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 273,
          "column": 4,
          "index": 7825
        },
        "end": {
          "line": 282,
          "column": 5,
          "index": 8161
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "HTMLElement"
        }
      ],
      "appearsIn": []
    },
    "getFooter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Gets the footer or an element inside it, if the selector is not empty",
          "     * @param selector {String} css selector",
          "     * @return {Element|null}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the footer or an element inside it, if the selector is not empty</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "selector {String} css selector",
            "paramName": "selector",
            "description": " css selector",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element|null}",
            "type": "Element|null",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 289,
          "column": 4,
          "index": 8336
        },
        "end": {
          "line": 300,
          "column": 5,
          "index": 8711
        }
      },
      "type": "function",
      "params": [
        {
          "name": "selector",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Element|null"
      },
      "appearsIn": []
    },
    "registerPreMappingHook": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Register hook function {Function(value: number) : number} that is called before the mapping gets applied.",
          "     * It must return a number that is used as a new value for mapping.",
          "     * @param callback {{(value: number) : number}}",
          "     * @param context {object}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Register hook function {Function(value: number) : number} that is called before the mapping gets applied.\n It must return a number that is used as a new value for mapping.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {{(value: number) : number}}",
            "paramName": "callback",
            "description": "}",
            "type": "{(value: number) : number"
          },
          {
            "name": "@param",
            "body": "context {object}",
            "paramName": "context",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 308,
          "column": 4,
          "index": 9002
        },
        "end": {
          "line": 313,
          "column": 5,
          "index": 9218
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "{(value: number) : number"
        },
        {
          "name": "context",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": []
    },
    "unregisterPreMappingHook": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Unregister pre-mapping hook",
          "     * @param callback {{(value: number) : number}}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Unregister pre-mapping hook</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {{(value: number) : number}}",
            "paramName": "callback",
            "description": "}",
            "type": "{(value: number) : number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 319,
          "column": 4,
          "index": 9328
        },
        "end": {
          "line": 321,
          "column": 5,
          "index": 9454
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "{(value: number) : number"
        }
      ],
      "appearsIn": []
    },
    "_applyValue": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 324,
          "column": 4,
          "index": 9483
        },
        "end": {
          "line": 355,
          "column": 5,
          "index": 11142
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_updateValue": {
      "jsdoc": {
        "raw": [
          " needs to be implemented by inheriting classes"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 358,
          "column": 4,
          "index": 11202
        },
        "end": {
          "line": 358,
          "column": 39,
          "index": 11237
        }
      },
      "type": "function",
      "params": [
        {
          "name": "mappedValue"
        },
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_applyStyleClass": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 361,
          "column": 4,
          "index": 11266
        },
        "end": {
          "line": 369,
          "column": 5,
          "index": 11503
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "oldValue"
        }
      ],
      "appearsIn": []
    },
    "_applyEnabled": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 371,
          "column": 4,
          "index": 11510
        },
        "end": {
          "line": 393,
          "column": 5,
          "index": 12306
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_applyVisibility": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 395,
          "column": 4,
          "index": 12313
        },
        "end": {
          "line": 413,
          "column": 5,
          "index": 12793
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "oldValue"
        }
      ],
      "appearsIn": []
    },
    "onStateUpdate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles the incoming data from the backend for this widget",
          "     *",
          "     * @param ev {CustomEvent} stateUpdate event fired from a cv-address component",
          "     * @return {Boolean} true of the update has been handled",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the incoming data from the backend for this widget</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {CustomEvent} stateUpdate event fired from a cv-address component",
            "paramName": "ev",
            "description": " stateUpdate event fired from a cv-address component",
            "type": "CustomEvent"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true of the update has been handled",
            "type": "boolean",
            "description": "true of the update has been handled"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 421,
          "column": 4,
          "index": 13033
        },
        "end": {
          "line": 442,
          "column": 5,
          "index": 13671
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev",
          "type": "CustomEvent"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 450,
        "column": 2,
        "index": 13805
      },
      "end": {
        "line": 454,
        "column": 3,
        "index": 13988
      }
    }
  }
}