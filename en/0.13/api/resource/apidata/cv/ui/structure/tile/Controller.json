{
  "version": 0.3,
  "lastModified": 1729100955413,
  "lastModifiedIso": "2024-10-16T17:49:15.413Z",
  "classFilename": "../../source/class/cv/ui/structure/tile/Controller.js",
  "type": "class",
  "location": {
    "start": {
      "line": 43,
      "column": 0,
      "index": 1989
    },
    "end": {
      "line": 630,
      "column": 3,
      "index": 21836
    }
  },
  "className": "cv.ui.structure.tile.Controller",
  "jsdoc": {
    "raw": [
      "*",
      " * Controller for the 'tile' structure.",
      " *",
      " * This structure is based on web-components and does not need a parser to work.",
      " * The config file is directly attached to the document body.",
      " * The widgets in this structure register a customElement and the browser automatically creates instances",
      " * of this widgets once the customElement is added to the body.",
      " *",
      " * The basic structure is a set of pages that contain a list of tiles.",
      " * Each tile contains a grid of 3 rows and 3 columns. The components can be added to a cell of that grid",
      " * but also can spread over more than one cell by using row-/column spanning.",
      " *",
      " * This structure provides some tiles with a pre-defined content, e.g. a <cv-switch> which",
      " * contains of a button in the middle of the tile and a primary- and secondary label in the third row.",
      " *",
      " * Those pre-defined tiles are provided by a <template> (@see https://developer.mozilla.org/de/docs/Web/HTML/Element/template)",
      " * User are able to define own templates for re-usable tiles if they need one that this structure does not provide.",
      " *",
      " * @asset(structures/tile/*)",
      " * @author Tobias Bräutigam",
      " * @since 2022",
      " * @ignore(IntersectionObserver)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Controller for the 'tile' structure.\n This structure is based on web-components and does not need a parser to work.\n The config file is directly attached to the document body.\n The widgets in this structure register a customElement and the browser automatically creates instances\n of this widgets once the customElement is added to the body.\n The basic structure is a set of pages that contain a list of tiles.\n Each tile contains a grid of 3 rows and 3 columns. The components can be added to a cell of that grid\n but also can spread over more than one cell by using row-/column spanning.\n This structure provides some tiles with a pre-defined content, e.g. a <cv-switch> which\n contains of a button in the middle of the tile and a primary- and secondary label in the third row.\n Those pre-defined tiles are provided by a <template> (@see https://developer.mozilla.org/de/docs/Web/HTML/Element/template)\n User are able to define own templates for re-usable tiles if they need one that this structure does not provide.</p>"
      }
    ],
    "@asset": [
      {
        "name": "@asset",
        "body": "structures/tile/*"
      }
    ],
    "@author": [
      {
        "name": "@author",
        "body": "Tobias Bräutigam"
      }
    ],
    "@since": [
      {
        "name": "@since",
        "body": "2022"
      }
    ],
    "@ignore": [
      {
        "name": "@ignore",
        "body": "IntersectionObserver"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "isSingleton": true,
  "abstract": false,
  "interfaces": [
    "cv.ui.structure.IController"
  ],
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 53,
        "column": 2,
        "index": 2260
      },
      "end": {
        "line": 61,
        "column": 3,
        "index": 2625
      }
    }
  },
  "statics": {
    "PREFIX": {
      "jsdoc": {
        "raw": [
          " prefix for all custom components uses/provided by this structure"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2839
        },
        "end": {
          "line": 70,
          "column": 17,
          "index": 2852
        }
      },
      "appearsIn": []
    },
    "__MAP": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 2858
        },
        "end": {
          "line": 71,
          "column": 13,
          "index": 2867
        }
      },
      "appearsIn": []
    },
    "__I": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2873
        },
        "end": {
          "line": 72,
          "column": 11,
          "index": 2880
        }
      },
      "appearsIn": []
    },
    "MAPPING_PARAM_REGEX": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 2887
        },
        "end": {
          "line": 74,
          "column": 44,
          "index": 2927
        }
      },
      "appearsIn": []
    },
    "register": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2934
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 3023
        }
      },
      "type": "function",
      "params": [
        {
          "name": "webComponentName"
        },
        {
          "name": "qxClass"
        }
      ],
      "appearsIn": []
    },
    "onComponentCreated": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 3030
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 3486
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element"
        }
      ],
      "appearsIn": []
    }
  },
  "properties": {
    "renderTarget": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 3711
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 3782
        }
      },
      "json": {
        "check": "Element",
        "init": "document.body"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The target this structure should be inserted into",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The target this structure should be inserted into</p>"
          }
        ]
      },
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "namespace": {
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3835
        },
        "end": {
          "line": 114,
          "column": 5,
          "index": 3891
        }
      },
      "json": {
        "check": "String",
        "init": ""
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Namespace for path ids",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Namespace for path ids</p>"
          }
        ]
      },
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "scrolled": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3898
        },
        "end": {
          "line": 120,
          "column": 5,
          "index": 3988
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyScrolled"
      },
      "jsdoc": null,
      "appearsIn": []
    }
  },
  "members": {
    "__HTML_STRUCT": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 4134
        },
        "end": {
          "line": 129,
          "column": 23,
          "index": 4153
        }
      },
      "appearsIn": []
    },
    "__mappings": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 4159
        },
        "end": {
          "line": 130,
          "column": 20,
          "index": 4175
        }
      },
      "appearsIn": []
    },
    "__stylings": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 4181
        },
        "end": {
          "line": 131,
          "column": 20,
          "index": 4197
        }
      },
      "appearsIn": []
    },
    "_templateWidgets": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 4203
        },
        "end": {
          "line": 132,
          "column": 26,
          "index": 4225
        }
      },
      "appearsIn": []
    },
    "getHtmlStructure": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 134,
          "column": 4,
          "index": 4232
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 4291
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "supports": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 4298
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 4355
        }
      },
      "type": "function",
      "params": [
        {
          "name": "feature"
        },
        {
          "name": "subfeature"
        }
      ],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "initLayout": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 4362
        },
        "end": {
          "line": 142,
          "column": 19,
          "index": 4377
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__gotoStartPage": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 4384
        },
        "end": {
          "line": 151,
          "column": 5,
          "index": 4610
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "onHistoryRequest": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4617
        },
        "end": {
          "line": 157,
          "column": 5,
          "index": 4712
        }
      },
      "type": "function",
      "params": [
        {
          "name": "anchor"
        }
      ],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "scrollToPage": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 159,
          "column": 4,
          "index": 4719
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 6169
        }
      },
      "type": "function",
      "params": [
        {
          "name": "pageId"
        },
        {
          "name": "skipHistory"
        }
      ],
      "appearsIn": []
    },
    "parseBackendSettings": {
      "jsdoc": {
        "raw": [
          " not needed, backend parse/init themselves"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 198,
          "column": 4,
          "index": 6225
        },
        "end": {
          "line": 208,
          "column": 5,
          "index": 6652
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xml"
        }
      ],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "parseSettings": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Parses structure specific settings",
          "     * @param config {XMLDocument} loaded config",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses structure specific settings</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "config {XMLDocument} loaded config",
            "paramName": "config",
            "description": " loaded config",
            "type": "XMLDocument"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 214,
          "column": 4,
          "index": 6766
        },
        "end": {
          "line": 316,
          "column": 5,
          "index": 11199
        }
      },
      "type": "function",
      "params": [
        {
          "name": "config",
          "type": "XMLDocument"
        }
      ],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "_applyScrolled": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 318,
          "column": 4,
          "index": 11206
        },
        "end": {
          "line": 328,
          "column": 5,
          "index": 11592
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "preParse": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Pre parsing hook, do everything here that is needed before the real parsing process can start",
          "     * @param xml {XMLDocument}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Pre parsing hook, do everything here that is needed before the real parsing process can start</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xml {XMLDocument}",
            "paramName": "xml",
            "type": "XMLDocument"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 334,
          "column": 4,
          "index": 11748
        },
        "end": {
          "line": 360,
          "column": 5,
          "index": 12933
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xml",
          "type": "XMLDocument"
        }
      ],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "createUI": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Generate the UI code from the config file",
          "     * @param config {Object} loaded config file usually an XMLDocument but other structures might use different formats",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generate the UI code from the config file</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "config {Object} loaded config file usually an XMLDocument but other structures might use different formats",
            "paramName": "config",
            "description": " loaded config file usually an XMLDocument but other structures might use different formats",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 366,
          "column": 4,
          "index": 13126
        },
        "end": {
          "line": 367,
          "column": 5,
          "index": 13150
        }
      },
      "type": "function",
      "params": [
        {
          "name": "config",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "observeVisibility": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 13157
        },
        "end": {
          "line": 385,
          "column": 5,
          "index": 13883
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "translate": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 387,
          "column": 4,
          "index": 13890
        },
        "end": {
          "line": 437,
          "column": 5,
          "index": 15906
        }
      },
      "type": "function",
      "params": [
        {
          "name": "doc"
        },
        {
          "name": "rememberKeys"
        },
        {
          "name": "useKeys"
        }
      ],
      "appearsIn": []
    },
    "doScreenSave": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handle fired event from screensaver",
          "     * @return {Array<string>} Array with addresses",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle fired event from screensaver</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array<string>} Array with addresses",
            "type": "Array<string>",
            "description": "Array with addresses"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 443,
          "column": 4,
          "index": 16024
        },
        "end": {
          "line": 447,
          "column": 5,
          "index": 16177
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Array<string>"
      },
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "getInitialAddresses": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Return the addresses needed to update all states on the initially loaded page",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the addresses needed to update all states on the initially loaded page</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 452,
          "column": 4,
          "index": 16285
        },
        "end": {
          "line": 454,
          "column": 5,
          "index": 16331
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "getInitialPageId": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the widget id of the page item initially loaded",
          "     * @returns {String} widget path like 'id_'...",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the widget id of the page item initially loaded</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} widget path like 'id_'...",
            "type": "string",
            "description": "widget path like 'id_'..."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 460,
          "column": 4,
          "index": 16468
        },
        "end": {
          "line": 463,
          "column": 5,
          "index": 16597
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    },
    "addMapping": {
      "jsdoc": {
        "raw": [
          "*",
          "     *",
          "     * @param name {String} mapping name",
          "     * @param mapping {cv.ui.structure.tile.elements.Mapping}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} mapping name",
            "paramName": "name",
            "description": " mapping name",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "mapping {cv.ui.structure.tile.elements.Mapping}",
            "paramName": "mapping",
            "type": "cv.ui.structure.tile.elements.Mapping"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 470,
          "column": 4,
          "index": 16730
        },
        "end": {
          "line": 475,
          "column": 5,
          "index": 16870
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "mapping",
          "type": "cv.ui.structure.tile.elements.Mapping"
        }
      ],
      "appearsIn": []
    },
    "removeMapping": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 477,
          "column": 4,
          "index": 16877
        },
        "end": {
          "line": 481,
          "column": 5,
          "index": 16979
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name"
        }
      ],
      "appearsIn": []
    },
    "mapValue": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 483,
          "column": 4,
          "index": 16986
        },
        "end": {
          "line": 499,
          "column": 5,
          "index": 17650
        }
      },
      "type": "function",
      "params": [
        {
          "name": "mappingName"
        },
        {
          "name": "value"
        },
        {
          "name": "store"
        }
      ],
      "appearsIn": []
    },
    "addStyling": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @param name {String} styling name",
          "     * @param styling {cv.ui.structure.tile.elements.Styling}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} styling name",
            "paramName": "name",
            "description": " styling name",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "styling {cv.ui.structure.tile.elements.Styling}",
            "paramName": "styling",
            "type": "cv.ui.structure.tile.elements.Styling"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 505,
          "column": 4,
          "index": 17776
        },
        "end": {
          "line": 510,
          "column": 5,
          "index": 17916
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "styling",
          "type": "cv.ui.structure.tile.elements.Styling"
        }
      ],
      "appearsIn": []
    },
    "removeStyling": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 512,
          "column": 4,
          "index": 17923
        },
        "end": {
          "line": 516,
          "column": 5,
          "index": 18025
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name"
        }
      ],
      "appearsIn": []
    },
    "styleValue": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 518,
          "column": 4,
          "index": 18032
        },
        "end": {
          "line": 523,
          "column": 5,
          "index": 18269
        }
      },
      "type": "function",
      "params": [
        {
          "name": "stylingName"
        },
        {
          "name": "value"
        },
        {
          "name": "store"
        }
      ],
      "appearsIn": []
    },
    "parseLabel": {
      "jsdoc": {
        "raw": [
          " for compatibility with pure controller"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 526,
          "column": 4,
          "index": 18322
        },
        "end": {
          "line": 528,
          "column": 5,
          "index": 18359
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onChangeLocale": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 530,
          "column": 4,
          "index": 18366
        },
        "end": {
          "line": 532,
          "column": 5,
          "index": 18441
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "enablePullToRefresh": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 534,
          "column": 4,
          "index": 18448
        },
        "end": {
          "line": 576,
          "column": 5,
          "index": 20032
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "isTemplateWidget": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 578,
          "column": 4,
          "index": 20039
        },
        "end": {
          "line": 580,
          "column": 5,
          "index": 20120
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name"
        }
      ],
      "appearsIn": []
    },
    "registerTemplates": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Registers customElements for all templates in the given xml that are direct children of a <templates structure=\"tile\"> element",
          "     * @param xml {XMLDocument}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers customElements for all templates in the given xml that are direct children of a <templates structure=\"tile\"> element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xml {XMLDocument}",
            "paramName": "xml",
            "type": "XMLDocument"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 586,
          "column": 4,
          "index": 20309
        },
        "end": {
          "line": 606,
          "column": 5,
          "index": 21199
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xml",
          "type": "XMLDocument"
        }
      ],
      "appearsIn": []
    },
    "updateSentryScope": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 607,
          "column": 4,
          "index": 21205
        },
        "end": {
          "line": 612,
          "column": 5,
          "index": 21400
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "cv.ui.structure.IController"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 627,
        "column": 2,
        "index": 21720
      },
      "end": {
        "line": 629,
        "column": 3,
        "index": 21832
      }
    }
  }
}