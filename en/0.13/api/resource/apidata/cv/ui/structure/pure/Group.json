{
  "version": 0.3,
  "lastModified": 1731947857575,
  "lastModifiedIso": "2024-11-18T16:37:37.575Z",
  "classFilename": "../../source/class/cv/ui/structure/pure/Group.js",
  "type": "class",
  "location": {
    "start": {
      "line": 70,
      "column": 0,
      "index": 2448
    },
    "end": {
      "line": 152,
      "column": 3,
      "index": 4373
    }
  },
  "className": "cv.ui.structure.pure.Group",
  "jsdoc": {
    "raw": [
      "*",
      " * A group can be used to group a couple of widgets and optionally surround them with a border or name the group.",
      " *",
      " * @widgetexample <settings selector=\".widget_container[data-type=group]\">",
      " *  <screenshot name=\"group_with_border\">",
      " *    <caption>Group with border and name</caption>",
      " *    <data address=\"0/0/0\">1</data>",
      " *    <data address=\"0/0/1\">21</data>",
      " *  </screenshot>",
      " *  </settings>",
      " *  <group name=\"Example Group\">",
      " *    <layout colspan=\"6\" />",
      " *    <text><label>Some Text</label></text>",
      " *    <switch>",
      " *      <layout colspan=\"3\" />",
      " *      <label>Switch</label>",
      " *      <address transform=\"DPT:1.001\" mode=\"readwrite\">0/0/0</address>",
      " *    </switch>",
      " *    <info format=\"%.1f 째C\">",
      " *      <layout colspan=\"3\" />",
      " *      <label>Temperature</label>",
      " *      <address transform=\"DPT:9.001\">0/0/1</address>",
      " *    </info>",
      " *  </group>",
      " *",
      " * @widgetexample <settings selector=\".widget_container[data-type=group]\">",
      " *  <screenshot name=\"group_without_border\">",
      " *    <caption>Hidden Group: no border no name</caption>",
      " *    <data address=\"0/0/0\">1</data>",
      " *    <data address=\"0/0/1\">21</data>",
      " *  </screenshot>",
      " *  </settings>",
      " *  <group nowidget=\"true\">",
      " *    <layout colspan=\"6\" />",
      " *    <text><label>Some Text</label></text>",
      " *    <switch>",
      " *      <layout colspan=\"3\" />",
      " *      <label>Switch</label>",
      " *      <address transform=\"DPT:1.001\" mode=\"readwrite\">0/0/0</address>",
      " *    </switch>",
      " *    <info format=\"%.1f 째C\">",
      " *      <layout colspan=\"3\" />",
      " *      <label>Temperature</label>",
      " *      <address transform=\"DPT:9.001\">0/0/1</address>",
      " *    </info>",
      " *  </group>",
      " *",
      " * @author Christian Mayer",
      " * @since 0.8.0 (2012)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A group can be used to group a couple of widgets and optionally surround them with a border or name the group.</p>"
      }
    ],
    "@widgetexample": [
      {
        "name": "@widgetexample",
        "body": "<settings selector=\".widget_container[data-type=group]\">\n  <screenshot name=\"group_with_border\">\n    <caption>Group with border and name</caption>\n    <data address=\"0/0/0\">1</data>\n    <data address=\"0/0/1\">21</data>\n  </screenshot>\n  </settings>\n  <group name=\"Example Group\">\n    <layout colspan=\"6\" />\n    <text><label>Some Text</label></text>\n    <switch>\n      <layout colspan=\"3\" />\n      <label>Switch</label>\n      <address transform=\"DPT:1.001\" mode=\"readwrite\">0/0/0</address>\n    </switch>\n    <info format=\"%.1f 째C\">\n      <layout colspan=\"3\" />\n      <label>Temperature</label>\n      <address transform=\"DPT:9.001\">0/0/1</address>\n    </info>\n  </group>"
      },
      {
        "name": "@widgetexample",
        "body": "<settings selector=\".widget_container[data-type=group]\">\n  <screenshot name=\"group_without_border\">\n    <caption>Hidden Group: no border no name</caption>\n    <data address=\"0/0/0\">1</data>\n    <data address=\"0/0/1\">21</data>\n  </screenshot>\n  </settings>\n  <group nowidget=\"true\">\n    <layout colspan=\"6\" />\n    <text><label>Some Text</label></text>\n    <switch>\n      <layout colspan=\"3\" />\n      <label>Switch</label>\n      <address transform=\"DPT:1.001\" mode=\"readwrite\">0/0/0</address>\n    </switch>\n    <info format=\"%.1f 째C\">\n      <layout colspan=\"3\" />\n      <label>Temperature</label>\n      <address transform=\"DPT:9.001\">0/0/1</address>\n    </info>\n  </group>"
      }
    ],
    "@author": [
      {
        "name": "@author",
        "body": "Christian Mayer"
      }
    ],
    "@since": [
      {
        "name": "@since",
        "body": "0.8.0 (2012)"
      }
    ]
  },
  "superClass": "cv.ui.structure.pure.AbstractWidget",
  "mixins": [
    "cv.ui.common.HasChildren"
  ],
  "properties": {
    "noWidget": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2740
        },
        "end": {
          "line": 83,
          "column": 5,
          "index": 2799
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "name": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2806
        },
        "end": {
          "line": 88,
          "column": 5,
          "index": 2857
        }
      },
      "json": {
        "check": "String",
        "init": ""
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "target": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2864
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2923
        }
      },
      "json": {
        "check": "String",
        "nullable": true
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "children": {
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 2032
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 2086
        }
      },
      "json": {
        "check": "Array",
        "init": []
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Array with child paths",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Array with child paths</p>"
          }
        ]
      },
      "appearsIn": [
        "cv.ui.common.HasChildren"
      ],
      "mixin": "cv.ui.common.HasChildren"
    },
    "childWidgets": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 2148
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 2206
        }
      },
      "json": {
        "check": "Array",
        "init": []
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Array with child widget objects",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Array with child widget objects</p>"
          }
        ]
      },
      "appearsIn": [
        "cv.ui.common.HasChildren"
      ],
      "mixin": "cv.ui.common.HasChildren"
    }
  },
  "members": {
    "action": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Action performed when the group got clicked. If a target is specified in the group attributes",
          "     * the action will switch to the page defined by the target.",
          "     *",
          "     *",
          "     * @param  event {Event}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Action performed when the group got clicked. If a target is specified in the group attributes\n the action will switch to the page defined by the target.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {Event}",
            "paramName": "event",
            "type": "Event"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 3308
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 3521
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "Event"
        }
      ],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "getActor": {
      "jsdoc": {
        "raw": [
          " overridden, group has no actor"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3566
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 3619
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "_onDomReady": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3644
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 3741
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget"
      ]
    },
    "getDomString": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 3766
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 4273
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.structure.pure.AbstractWidget",
      "appearsIn": [
        "cv.ui.structure.pure.AbstractWidget",
        "cv.ui.structure.pure.AbstractBasicWidget"
      ]
    },
    "getChildrenDomString": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates the HTML code for the children if this widget",
          "     *",
          "     * @param {boolean=} noWidgetContainer if false: do not surround the childrens with a div-element with class 'widget_container'",
          "     * @return {string} HTML code",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the HTML code for the children if this widget</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{boolean=} noWidgetContainer if false: do not surround the childrens with a div-element with class 'widget_container'",
            "paramName": "noWidgetContainer",
            "description": "if false: do not surround the childrens with a div-element with class 'widget_container'",
            "type": "boolean="
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string} HTML code",
            "type": "string",
            "description": "HTML code"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2616
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 3562
        }
      },
      "type": "function",
      "params": [
        {
          "name": "noWidgetContainer",
          "type": "boolean="
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": [
        "cv.ui.common.HasChildren"
      ],
      "mixin": "cv.ui.common.HasChildren"
    },
    "getChildrenDom": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Create a collection of html elements of the children",
          "     * @returns {DocumentFragment}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create a collection of html elements of the children</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{DocumentFragment}",
            "type": "DocumentFragment",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3680
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 4105
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "DocumentFragment"
      },
      "appearsIn": [
        "cv.ui.common.HasChildren"
      ],
      "mixin": "cv.ui.common.HasChildren"
    }
  },
  "statics": {}
}