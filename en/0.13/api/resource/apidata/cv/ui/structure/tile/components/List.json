{
  "className": "cv.ui.structure.tile.components.List",
  "packageName": "cv.ui.structure.tile.components",
  "name": "List",
  "superClass": "cv.ui.structure.tile.components.AbstractComponent",
  "interfaces": [],
  "mixins": [
    "cv.ui.structure.tile.MVisibility",
    "cv.ui.structure.tile.MRefresh"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 55,
        "column": 0,
        "index": 2001
      },
      "end": {
        "line": 424,
        "column": 3,
        "index": 14911
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Generates a list of items. A &lt;template&gt;-element defines the content of the list-items and a model is used to\n generate those items and apply the models content to the list-items.\n It allows custom Javascript code in a &lt;script&gt;-Element to fill the model or address-Elements as model source.\n The model can be refreshed in a time defined interval, which is set by the 'refresh' attribute.</p><div class=\"widget-example last\"><img id=\"list_simple\" src=\"resource/qxl/apiviewer/examples/list_simple.png\"/></div><div class=\"caption\">Example list</div>\n<div class=\"code\"><pre class=\"sunlight-highlight-xml\">&lt;cv-list refresh=&quot;10&quot;&gt;\n  &lt;model&gt;\n    &lt;script&gt;&lt;![CDATA[\n         for (let i = 0; i &lt; Math.round(Math.random()*10); i++) {\n           model.push({\n             label: &apos;This is list item no &apos; + i,\n             subLabel: &apos;Sublabel number &apos; + i\n           })\n         }\n         ]]&gt;&lt;/script&gt;\n  &lt;/model&gt;\n  &lt;template&gt;\n    &lt;li&gt;\n      &lt;label class=&quot;primary&quot;&gt;${label}&lt;/label&gt;\n      &lt;label class=&quot;secondary&quot;&gt;${subLabel}&lt;/label&gt;\n    &lt;/li&gt;\n  &lt;/template&gt;\n  &lt;template when=&quot;empty&quot;&gt;\n    &lt;li&gt;\n      &lt;label class=&quot;primary&quot;&gt;Model is empty!&lt;/label&gt;\n    &lt;/li&gt;\n  &lt;/template&gt;\n&lt;/cv-list&gt;\n</pre></div>\n"
        }
      ],
      "@widgetexample": [
        {
          "name": "@widgetexample",
          "body": "<settings>\n    <caption>Example list</caption>\n    <screenshot name=\"list_simple\"/>\n  </settings>\n    <cv-list refresh=\"10\">\n      <model>\n        <script><![CDATA[\n         for (let i = 0; i < Math.round(Math.random()*10); i++) {\n           model.push({\n             label: 'This is list item no ' + i,\n             subLabel: 'Sublabel number ' + i\n           })\n         }\n         ]]>\n         </script>\n       </model>\n       <template>\n         <li>\n           <label class=\"primary\">${label}</label>\n           <label class=\"secondary\">${subLabel}</label>\n         </li>\n       </template>\n       <template when=\"empty\">\n         <li>\n           <label class=\"primary\">Model is empty!</label>\n         </li>\n       </template>\n   </cv-list>"
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "value": {
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 2344
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 2393
        }
      },
      "name": "value",
      "propertyType": "new",
      "refine": true,
      "init": [],
      "defaultValue": [],
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "appearsIn": {
        "cv.ui.structure.tile.components.AbstractComponent": "class"
      }
    },
    "visible": {
      "type": "property",
      "name": "visible",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MVisibility",
      "event": "changeVisible"
    },
    "refresh": {
      "type": "property",
      "name": "refresh",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MRefresh"
    }
  },
  "members": {
    "_target": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2539
        },
        "end": {
          "line": 77,
          "column": 17,
          "index": 2552
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_timer": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2558
        },
        "end": {
          "line": 78,
          "column": 16,
          "index": 2570
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_model": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2576
        },
        "end": {
          "line": 79,
          "column": 16,
          "index": 2588
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_getModel": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2594
        },
        "end": {
          "line": 80,
          "column": 19,
          "index": 2609
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_filterModel": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2615
        },
        "end": {
          "line": 81,
          "column": 22,
          "index": 2633
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_sortModel": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2639
        },
        "end": {
          "line": 82,
          "column": 20,
          "index": 2655
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_limit": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2661
        },
        "end": {
          "line": 83,
          "column": 16,
          "index": 2673
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_modelInstance": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2679
        },
        "end": {
          "line": 84,
          "column": 24,
          "index": 2699
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_init": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2706
        },
        "end": {
          "line": 233,
          "column": 5,
          "index": 8458
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "appearsIn": [
        "cv.ui.structure.tile.components.AbstractComponent",
        "cv.ui.structure.tile.elements.AbstractCustomElement"
      ]
    },
    "onStateUpdate": {
      "location": {
        "start": {
          "line": 235,
          "column": 4,
          "index": 8465
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 8892
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "appearsIn": [
        "cv.ui.structure.tile.components.AbstractComponent"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "ev {CustomEvent} stateUpdate event fired from an cv-address component",
            "paramName": "ev",
            "description": " stateUpdate event fired from an cv-address component",
            "type": "CustomEvent"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true of the update has been handled",
            "type": "Boolean",
            "description": " true of the update has been handled"
          }
        ]
      }
    },
    "_applyValue": {
      "location": {
        "start": {
          "line": 251,
          "column": 4,
          "index": 8899
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 9035
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "appearsIn": [
        "cv.ui.structure.tile.components.AbstractComponent"
      ]
    },
    "refresh": {
      "location": {
        "start": {
          "line": 257,
          "column": 4,
          "index": 9042
        },
        "end": {
          "line": 398,
          "column": 5,
          "index": 14380
        }
      },
      "type": "function",
      "access": "public"
    },
    "_observeVisibility": {
      "type": "function",
      "name": "_observeVisibility",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MVisibility"
    },
    "getVisible": {
      "type": "function",
      "name": "getVisible",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MVisibility",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for visible"
          }
        ]
      }
    },
    "isVisible": {
      "type": "function",
      "name": "isVisible",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MVisibility",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for visible"
          }
        ]
      }
    },
    "setVisible": {
      "type": "function",
      "name": "setVisible",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MVisibility",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for visible"
          }
        ]
      }
    },
    "resetVisible": {
      "type": "function",
      "name": "resetVisible",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MVisibility",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visible</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ]
      }
    },
    "_applyRefresh": {
      "type": "function",
      "name": "_applyRefresh",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MRefresh"
    },
    "__onVisibilityChange": {
      "type": "function",
      "name": "__onVisibilityChange",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "cv.ui.structure.tile.MRefresh"
    },
    "__doRefresh": {
      "type": "function",
      "name": "__doRefresh",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "cv.ui.structure.tile.MRefresh"
    },
    "getRefresh": {
      "type": "function",
      "name": "getRefresh",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MRefresh",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>refresh</code>.\n\nFor further details take a look at the property definition: {@link #refresh}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for refresh"
          }
        ]
      }
    },
    "setRefresh": {
      "type": "function",
      "name": "setRefresh",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MRefresh",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>refresh</code>.\n\nFor further details take a look at the property definition: {@link #refresh}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for refresh"
          }
        ]
      }
    },
    "resetRefresh": {
      "type": "function",
      "name": "resetRefresh",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MRefresh",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>refresh</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #refresh}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getValue": {
      "type": "function",
      "name": "getValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for value"
          }
        ]
      }
    },
    "setValue": {
      "type": "function",
      "name": "setValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for value"
          }
        ]
      }
    },
    "resetValue": {
      "type": "function",
      "name": "resetValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>value</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ]
      }
    },
    "getStyleClass": {
      "type": "function",
      "name": "getStyleClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>styleClass</code>.\n\nFor further details take a look at the property definition: {@link #styleClass}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for styleClass"
          }
        ]
      }
    },
    "setStyleClass": {
      "type": "function",
      "name": "setStyleClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>styleClass</code>.\n\nFor further details take a look at the property definition: {@link #styleClass}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for styleClass"
          }
        ]
      }
    },
    "resetStyleClass": {
      "type": "function",
      "name": "resetStyleClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>styleClass</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #styleClass}."
          }
        ]
      }
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>enabled</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ]
      }
    },
    "getVisibility": {
      "type": "function",
      "name": "getVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for visibility"
          }
        ]
      }
    },
    "setVisibility": {
      "type": "function",
      "name": "setVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for visibility"
          }
        ]
      }
    },
    "resetVisibility": {
      "type": "function",
      "name": "resetVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visibility</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ]
      }
    },
    "getWidget": {
      "type": "function",
      "name": "getWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>widget</code>.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for widget"
          }
        ]
      }
    },
    "isWidget": {
      "type": "function",
      "name": "isWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>widget</code>.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for widget"
          }
        ]
      }
    },
    "setWidget": {
      "type": "function",
      "name": "setWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>widget</code>.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for widget"
          }
        ]
      }
    },
    "resetWidget": {
      "type": "function",
      "name": "resetWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>widget</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ]
      }
    },
    "getInPopup": {
      "type": "function",
      "name": "getInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>inPopup</code>.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for inPopup"
          }
        ]
      }
    },
    "isInPopup": {
      "type": "function",
      "name": "isInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>inPopup</code>.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for inPopup"
          }
        ]
      }
    },
    "setInPopup": {
      "type": "function",
      "name": "setInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>inPopup</code>.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for inPopup"
          }
        ]
      }
    },
    "resetInPopup": {
      "type": "function",
      "name": "resetInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>inPopup</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 406,
        "column": 2,
        "index": 14514
      },
      "end": {
        "line": 412,
        "column": 3,
        "index": 14691
      }
    },
    "jsdoc": {}
  },
  "defer": {
    "location": {
      "start": {
        "line": 414,
        "column": 2,
        "index": 14696
      },
      "end": {
        "line": 423,
        "column": 3,
        "index": 14907
      }
    }
  },
  "descendants": []
}