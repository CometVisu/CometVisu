{
  "version": 0.3,
  "lastModified": 1717235105614,
  "lastModifiedIso": "2024-06-01T09:45:05.614Z",
  "classFilename": "../../source/class/cv/ui/structure/tile/components/svg/MSvgGrid.js",
  "type": "mixin",
  "location": {
    "start": {
      "line": 25,
      "column": 0,
      "index": 903
    },
    "end": {
      "line": 215,
      "column": 3,
      "index": 6039
    }
  },
  "className": "cv.ui.structure.tile.components.svg.MSvgGrid",
  "jsdoc": {
    "raw": [
      "*",
      " * Mixin for SVG elements that provide a grid layout.",
      " * @since 2023",
      " * @author Tobias Bräutigam",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Mixin for SVG elements that provide a grid layout.</p>"
      }
    ],
    "@since": [
      {
        "name": "@since",
        "body": "2023"
      }
    ],
    "@author": [
      {
        "name": "@author",
        "body": "Tobias Bräutigam"
      }
    ]
  },
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 1098
      },
      "end": {
        "line": 36,
        "column": 3,
        "index": 1266
      }
    }
  },
  "properties": {
    "rows": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1414
        },
        "end": {
          "line": 50,
          "column": 5,
          "index": 1553
        }
      },
      "json": {
        "check": "Number",
        "init": 3,
        "event": "changeRows",
        "apply": "_invalidateLayout",
        "transform": "__toInt"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "columns": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1560
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1705
        }
      },
      "json": {
        "check": "Number",
        "init": 3,
        "event": "changeColumns",
        "apply": "_invalidateLayout",
        "transform": "__toInt"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "outerPadding": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1712
        },
        "end": {
          "line": 66,
          "column": 5,
          "index": 1867
        }
      },
      "json": {
        "check": "Number",
        "event": "changeOuterPadding",
        "init": 4,
        "apply": "_invalidateLayout",
        "transform": "__toInt"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "spacing": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1874
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2019
        }
      },
      "json": {
        "check": "Number",
        "init": 8,
        "event": "changeSpacing",
        "apply": "_invalidateLayout",
        "transform": "__toInt"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "cellWidth": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2026
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2171
        }
      },
      "json": {
        "check": "Number",
        "init": 56,
        "apply": "_invalidateLayout",
        "event": "changeSize",
        "transform": "__toInt"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "cellHeight": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2178
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2324
        }
      },
      "json": {
        "check": "Number",
        "init": 56,
        "apply": "_invalidateLayout",
        "event": "changeSize",
        "transform": "__toInt"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "viewBox": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2331
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 2421
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "event": "changeViewBox"
      },
      "jsdoc": null,
      "appearsIn": []
    }
  },
  "members": {
    "_cells": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2567
        },
        "end": {
          "line": 105,
          "column": 16,
          "index": 2579
        }
      },
      "appearsIn": []
    },
    "_isLayoutValid": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2585
        },
        "end": {
          "line": 106,
          "column": 24,
          "index": 2605
        }
      },
      "appearsIn": []
    },
    "__toInt": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2612
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2733
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_invalidateLayout": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 2740
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 2835
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_layoutAll": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 2842
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 3129
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getCells": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the number of cells in this grid",
          "     * @returns {number}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the number of cells in this grid</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{number}",
            "type": "number",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 3225
        },
        "end": {
          "line": 135,
          "column": 5,
          "index": 3292
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "layout": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Add a SVGElement to a cell in the grid.",
          "     * @param element {SVGGraphicsElement} element to place",
          "     * @param row {number} row number (-1 to find next free row)",
          "     * @param column {number} column cumber (-1 to use next free cell)",
          "     * @param replace {boolean} it true replace current item in cell, otherwise the element will not be added when the cell is not empty",
          "     * @param retries {number} internal value used to limit layout retries for one element. Do not set this externally!",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a SVGElement to a cell in the grid.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {SVGGraphicsElement} element to place",
            "paramName": "element",
            "description": " element to place",
            "type": "SVGGraphicsElement"
          },
          {
            "name": "@param",
            "body": "row {number} row number (-1 to find next free row)",
            "paramName": "row",
            "description": " row number (-1 to find next free row)",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "column {number} column cumber (-1 to use next free cell)",
            "paramName": "column",
            "description": " column cumber (-1 to use next free cell)",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "replace {boolean} it true replace current item in cell, otherwise the element will not be added when the cell is not empty",
            "paramName": "replace",
            "description": " it true replace current item in cell, otherwise the element will not be added when the cell is not empty",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "retries {number} internal value used to limit layout retries for one element. Do not set this externally!",
            "paramName": "retries",
            "description": " internal value used to limit layout retries for one element. Do not set this externally!",
            "type": "number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 145,
          "column": 4,
          "index": 3815
        },
        "end": {
          "line": 172,
          "column": 5,
          "index": 4850
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "SVGGraphicsElement"
        },
        {
          "name": "row",
          "type": "number"
        },
        {
          "name": "column",
          "type": "number"
        },
        {
          "name": "replace",
          "type": "boolean"
        },
        {
          "name": "retries",
          "type": "number"
        }
      ],
      "appearsIn": []
    },
    "getNextFreeCell": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 4857
        },
        "end": {
          "line": 213,
          "column": 5,
          "index": 6031
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row"
        },
        {
          "name": "column"
        }
      ],
      "appearsIn": []
    }
  },
  "statics": {}
}