{
  "className": "cv.ui.manager.upload.MDragUpload",
  "packageName": "cv.ui.manager.upload",
  "name": "MDragUpload",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 30,
        "column": 0,
        "index": 1133
      },
      "end": {
        "line": 343,
        "column": 3,
        "index": 10692
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Add upload via drag&amp;drop feature to this widget. The including widget must have a\n \"upload-dropbox\" childcontrol or add\n  </p>\n<pre class=\"javascript\">\n   if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n   </pre>\n<p>to their own _createChildControlImpl method</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1376
      },
      "end": {
        "line": 49,
        "column": 3,
        "index": 1801
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "uploadMode": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 2010
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 2105
        }
      },
      "name": "uploadMode",
      "propertyType": "new",
      "apply": "__P_54_1",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "uploadHint": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 2112
        },
        "end": {
          "line": 66,
          "column": 5,
          "index": 2169
        }
      },
      "name": "uploadHint",
      "propertyType": "new",
      "init": "",
      "check": "String",
      "defaultValue": ""
    }
  },
  "statics": {
    "onHtml5Drop": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2430
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2536
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles HTML5 drop events (dropping external files on dom element)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "uploadFile": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2891
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3632
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Uploads the dropped file to the correct folder:</p>\n<ul>\n<li>config files to the resources/config folder</li>\n<li>accepted media files to the resources/config/media folder</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file {File}"
          },
          {
            "name": "@param",
            "body": "replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones",
            "paramName": "replaceFile",
            "description": " optional, if set this files content gets replaced with the uploaded ones",
            "optional": true,
            "type": "cv.ui.manager.model.FileItem"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hasDroppableFile": {
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3639
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3710
        }
      },
      "type": "function",
      "access": "public"
    },
    "getFiles": {
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3818
        },
        "end": {
          "line": 151,
          "column": 5,
          "index": 4638
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Extracts acceptable files from event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "members": {
    "__hasEmptyInfo": {
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 4845
        },
        "end": {
          "line": 160,
          "column": 24,
          "index": 4865
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_boundOnStop": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4871
        },
        "end": {
          "line": 161,
          "column": 22,
          "index": 4889
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__syncBounds": {
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4896
        },
        "end": {
          "line": 168,
          "column": 5,
          "index": 5186
        }
      },
      "type": "function",
      "access": "private"
    },
    "_createMDragUploadChildControlImpl": {
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 5211
        },
        "end": {
          "line": 219,
          "column": 5,
          "index": 6983
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected"
    },
    "_onStopDragging": {
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 6990
        },
        "end": {
          "line": 225,
          "column": 5,
          "index": 7150
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_applyStartDragListeners": {
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 7269
        },
        "end": {
          "line": 258,
          "column": 5,
          "index": 8203
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&amp;Drop</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyDragListeners": {
      "location": {
        "start": {
          "line": 263,
          "column": 4,
          "index": 8322
        },
        "end": {
          "line": 323,
          "column": 5,
          "index": 10092
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&amp;Drop</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__applyUploadMode": {
      "location": {
        "start": {
          "line": 326,
          "column": 4,
          "index": 10121
        },
        "end": {
          "line": 341,
          "column": 5,
          "index": 10684
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "private"
    },
    "getUploadMode": {
      "type": "function",
      "name": "getUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>uploadMode</code>.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for uploadMode"
          }
        ]
      }
    },
    "isUploadMode": {
      "type": "function",
      "name": "isUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>uploadMode</code>.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for uploadMode"
          }
        ]
      }
    },
    "setUploadMode": {
      "type": "function",
      "name": "setUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>uploadMode</code>.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for uploadMode"
          }
        ]
      }
    },
    "resetUploadMode": {
      "type": "function",
      "name": "resetUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>uploadMode</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ]
      }
    },
    "getUploadHint": {
      "type": "function",
      "name": "getUploadHint",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>uploadHint</code>.\n\nFor further details take a look at the property definition: {@link #uploadHint}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for uploadHint"
          }
        ]
      }
    },
    "setUploadHint": {
      "type": "function",
      "name": "setUploadHint",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>uploadHint</code>.\n\nFor further details take a look at the property definition: {@link #uploadHint}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for uploadHint"
          }
        ]
      }
    },
    "resetUploadHint": {
      "type": "function",
      "name": "resetUploadHint",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>uploadHint</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #uploadHint}."
          }
        ]
      }
    }
  },
  "descendants": []
}