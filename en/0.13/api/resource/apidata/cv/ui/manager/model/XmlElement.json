{
  "version": 0.3,
  "lastModified": 1722151563983,
  "lastModifiedIso": "2024-07-28T07:26:03.983Z",
  "classFilename": "../../source/class/cv/ui/manager/model/XmlElement.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 881
    },
    "end": {
      "line": 1458,
      "column": 3,
      "index": 48216
    }
  },
  "className": "cv.ui.manager.model.XmlElement",
  "jsdoc": {
    "raw": [
      "*",
      " * Represents an Element or TextNode in an XML document",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Represents an Element or TextNode in an XML document</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "mixins": [
    "qx.data.marshal.MEventBubbling"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "node"
      },
      {
        "name": "schemaElement"
      },
      {
        "name": "editor"
      },
      {
        "name": "parent"
      }
    ],
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 1133
      },
      "end": {
        "line": 61,
        "column": 3,
        "index": 2112
      }
    }
  },
  "statics": {
    "entityMap": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 2254
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2354
        }
      },
      "appearsIn": []
    }
  },
  "properties": {
    "editor": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2557
        },
        "end": {
          "line": 88,
          "column": 5,
          "index": 2664
        }
      },
      "json": {
        "check": "cv.ui.manager.editor.Tree",
        "nullable": true,
        "event": "changeEditor"
      },
      "jsdoc": {
        "raw": [
          " the current editor this element os shown in"
        ]
      },
      "appearsIn": []
    },
    "schemaElement": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2671
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2779
        }
      },
      "json": {
        "check": "cv.ui.manager.model.schema.Element",
        "apply": "_applySchemaElement"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "name": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2786
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2908
        }
      },
      "json": {
        "check": "String",
        "deferredInit": true,
        "event": "changeName",
        "apply": "updateDisplayName"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "displayName": {
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2915
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 3007
        }
      },
      "json": {
        "check": "String",
        "init": "",
        "event": "changeDisplayName"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "open": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 3014
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 3120
        }
      },
      "json": {
        "check": "Boolean",
        "event": "changeOpen",
        "init": false,
        "apply": "_onOpen"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "loaded": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3127
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3213
        }
      },
      "json": {
        "check": "Boolean",
        "event": "changeLoaded",
        "init": false
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "children": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3220
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3362
        }
      },
      "json": {
        "check": "qx.data.Array",
        "event": "changeChildren",
        "apply": "_applyEventPropagation",
        "deferredInit": true
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "textContent": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3369
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3541
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "apply": "_applyTextContent",
        "event": "changeTextContent",
        "validate": "_validateTextContent"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "temporary": {
      "location": {
        "start": {
          "line": 139,
          "column": 4,
          "index": 3619
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 3711
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "event": "changeTemporary"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Temporary nodes are not save in the backend yet",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Temporary nodes are not save in the backend yet</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "valid": {
      "location": {
        "start": {
          "line": 148,
          "column": 4,
          "index": 3782
        },
        "end": {
          "line": 153,
          "column": 5,
          "index": 3893
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "event": "changeValid",
        "apply": "_applyValid"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Validation result for this nodes content",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Validation result for this nodes content</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "invalidMessage": {
      "location": {
        "start": {
          "line": 155,
          "column": 4,
          "index": 3900
        },
        "end": {
          "line": 159,
          "column": 5,
          "index": 3998
        }
      },
      "json": {
        "check": "String",
        "init": "",
        "event": "changeInvalidMessage"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "status": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4005
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 4113
        }
      },
      "json": {
        "check": [
          "error",
          "valid",
          "comment"
        ],
        "init": "valid",
        "event": "changeStatus"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "editable": {
      "location": {
        "start": {
          "line": 167,
          "column": 4,
          "index": 4120
        },
        "end": {
          "line": 172,
          "column": 5,
          "index": 4240
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "event": "changeEditable",
        "apply": "_applyEditable"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "sortable": {
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 4247
        },
        "end": {
          "line": 178,
          "column": 5,
          "index": 4336
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "event": "changeSortable"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "deletable": {
      "location": {
        "start": {
          "line": 183,
          "column": 4,
          "index": 4451
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 4542
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "event": "changeDeletable"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * true if this element can be deleted (either no bounds.min or more existing elements)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>true if this element can be deleted (either no bounds.min or more existing elements)</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "modified": {
      "location": {
        "start": {
          "line": 189,
          "column": 4,
          "index": 4549
        },
        "end": {
          "line": 193,
          "column": 5,
          "index": 4639
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyModified"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "showEditButton": {
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 4646
        },
        "end": {
          "line": 199,
          "column": 5,
          "index": 4747
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "event": "changeShowEditButton"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "parent": {
      "location": {
        "start": {
          "line": 201,
          "column": 4,
          "index": 4754
        },
        "end": {
          "line": 204,
          "column": 5,
          "index": 4837
        }
      },
      "json": {
        "check": "cv.ui.manager.model.XmlElement",
        "nullable": true
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "icon": {
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 4876
        },
        "end": {
          "line": 211,
          "column": 5,
          "index": 4960
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "event": "changeIcon"
      },
      "jsdoc": {
        "raw": [
          " icon to show in the tree"
        ]
      },
      "appearsIn": []
    },
    "dragging": {
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 4967
        },
        "end": {
          "line": 217,
          "column": 5,
          "index": 5057
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "event": "changeDragging"
      },
      "jsdoc": null,
      "appearsIn": []
    }
  },
  "members": {
    "_node": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 226,
          "column": 4,
          "index": 5203
        },
        "end": {
          "line": 226,
          "column": 15,
          "index": 5214
        }
      },
      "appearsIn": []
    },
    "_schema": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 227,
          "column": 4,
          "index": 5220
        },
        "end": {
          "line": 227,
          "column": 17,
          "index": 5233
        }
      },
      "appearsIn": []
    },
    "_schemaElement": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 228,
          "column": 4,
          "index": 5239
        },
        "end": {
          "line": 228,
          "column": 24,
          "index": 5259
        }
      },
      "appearsIn": []
    },
    "_initialAttributes": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 229,
          "column": 4,
          "index": 5265
        },
        "end": {
          "line": 229,
          "column": 28,
          "index": 5289
        }
      },
      "appearsIn": []
    },
    "_initialChildNames": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 5295
        },
        "end": {
          "line": 230,
          "column": 28,
          "index": 5319
        }
      },
      "appearsIn": []
    },
    "_initialTextContent": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 231,
          "column": 4,
          "index": 5325
        },
        "end": {
          "line": 231,
          "column": 29,
          "index": 5350
        }
      },
      "appearsIn": []
    },
    "__initializing": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 232,
          "column": 4,
          "index": 5356
        },
        "end": {
          "line": 232,
          "column": 25,
          "index": 5377
        }
      },
      "appearsIn": []
    },
    "__addableChildren": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 233,
          "column": 4,
          "index": 5383
        },
        "end": {
          "line": 233,
          "column": 27,
          "index": 5406
        }
      },
      "appearsIn": []
    },
    "_structure": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 234,
          "column": 4,
          "index": 5412
        },
        "end": {
          "line": 234,
          "column": 20,
          "index": 5428
        }
      },
      "appearsIn": []
    },
    "_maintainStatus": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 236,
          "column": 4,
          "index": 5435
        },
        "end": {
          "line": 244,
          "column": 5,
          "index": 5675
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyValid": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 246,
          "column": 4,
          "index": 5682
        },
        "end": {
          "line": 251,
          "column": 5,
          "index": 5801
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "convertTextNodeType": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 253,
          "column": 4,
          "index": 5808
        },
        "end": {
          "line": 272,
          "column": 5,
          "index": 6513
        }
      },
      "type": "function",
      "params": [
        {
          "name": "newType"
        }
      ],
      "appearsIn": []
    },
    "_maintainIcon": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 274,
          "column": 4,
          "index": 6520
        },
        "end": {
          "line": 303,
          "column": 5,
          "index": 7663
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyEditable": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 305,
          "column": 4,
          "index": 7670
        },
        "end": {
          "line": 308,
          "column": 5,
          "index": 7760
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_updateShowEditButton": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 310,
          "column": 4,
          "index": 7767
        },
        "end": {
          "line": 317,
          "column": 5,
          "index": 8158
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "updateDeletable": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 319,
          "column": 4,
          "index": 8165
        },
        "end": {
          "line": 355,
          "column": 5,
          "index": 9489
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getNode": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 357,
          "column": 4,
          "index": 9496
        },
        "end": {
          "line": 359,
          "column": 5,
          "index": 9538
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "remove": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 361,
          "column": 4,
          "index": 9545
        },
        "end": {
          "line": 394,
          "column": 5,
          "index": 10464
        }
      },
      "type": "function",
      "params": [
        {
          "name": "skipUndo"
        }
      ],
      "appearsIn": []
    },
    "isAncestor": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Check is this element is an ancestor of the given element",
          "     * @param element {cv.ui.manager.model.XmlElement} element to check",
          "     * @returns {boolean}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check is this element is an ancestor of the given element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {cv.ui.manager.model.XmlElement} element to check",
            "paramName": "element",
            "description": " element to check",
            "type": "cv.ui.manager.model.XmlElement"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{boolean}",
            "type": "boolean",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 401,
          "column": 4,
          "index": 10650
        },
        "end": {
          "line": 410,
          "column": 5,
          "index": 10869
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "cv.ui.manager.model.XmlElement"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_move": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Move this node to a new position in relation to the target",
          "     * @param target {cv.ui.manager.model.XmlElement} new direct sibling",
          "     * @param position {String} more 'before', 'after' or 'inside' target",
          "     * @param skipUndo {Boolean} no not add an undo operation for this",
          "     * @private",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Move this node to a new position in relation to the target</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {cv.ui.manager.model.XmlElement} new direct sibling",
            "paramName": "target",
            "description": " new direct sibling",
            "type": "cv.ui.manager.model.XmlElement"
          },
          {
            "name": "@param",
            "body": "position {String} more 'before', 'after' or 'inside' target",
            "paramName": "position",
            "description": " more 'before', 'after' or 'inside' target",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "skipUndo {Boolean} no not add an undo operation for this",
            "paramName": "skipUndo",
            "description": " no not add an undo operation for this",
            "type": "boolean"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 419,
          "column": 4,
          "index": 11192
        },
        "end": {
          "line": 469,
          "column": 5,
          "index": 12915
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target",
          "type": "cv.ui.manager.model.XmlElement"
        },
        {
          "name": "position",
          "type": "string"
        },
        {
          "name": "skipUndo",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "moveTo": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 471,
          "column": 4,
          "index": 12922
        },
        "end": {
          "line": 515,
          "column": 5,
          "index": 14315
        }
      },
      "type": "function",
      "params": [
        {
          "name": "newParent"
        },
        {
          "name": "index"
        },
        {
          "name": "skipUndo"
        }
      ],
      "appearsIn": []
    },
    "moveAfter": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 517,
          "column": 4,
          "index": 14322
        },
        "end": {
          "line": 519,
          "column": 5,
          "index": 14409
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "skipUndo"
        }
      ],
      "appearsIn": []
    },
    "moveBefore": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 521,
          "column": 4,
          "index": 14416
        },
        "end": {
          "line": 523,
          "column": 5,
          "index": 14505
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "skipUndo"
        }
      ],
      "appearsIn": []
    },
    "moveInside": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 525,
          "column": 4,
          "index": 14512
        },
        "end": {
          "line": 527,
          "column": 5,
          "index": 14601
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "skipUndo"
        }
      ],
      "appearsIn": []
    },
    "insertAfter": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 529,
          "column": 4,
          "index": 14608
        },
        "end": {
          "line": 533,
          "column": 5,
          "index": 14837
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "skipUndo"
        }
      ],
      "appearsIn": []
    },
    "insertBefore": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 535,
          "column": 4,
          "index": 14844
        },
        "end": {
          "line": 539,
          "column": 5,
          "index": 15070
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "skipUndo"
        }
      ],
      "appearsIn": []
    },
    "getAddableChildren": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns a list of element names that can be added to this element.",
          "     * Checks the allowed elements and their bounds and the existing children",
          "     * to find out if we can add more of them.",
          "     * @param excludeComment {Boolean} exclude #comment child when set to true",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a list of element names that can be added to this element.\n Checks the allowed elements and their bounds and the existing children\n to find out if we can add more of them.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "excludeComment {Boolean} exclude #comment child when set to true",
            "paramName": "excludeComment",
            "description": " exclude #comment child when set to true",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 547,
          "column": 4,
          "index": 15371
        },
        "end": {
          "line": 608,
          "column": 5,
          "index": 18053
        }
      },
      "type": "function",
      "params": [
        {
          "name": "excludeComment",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "isChildAllowedAtPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if a new child is allowed at the given position",
          "     * @param xmlElement {cv.ui.manager.model.XmlElement|String} the element or an element name as string",
          "     * @param index {Number} position to check, use Number.POSITIVE_INFINITY to check if the child is allowed to be appended",
          "     * @returns {boolean}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if a new child is allowed at the given position</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xmlElement {cv.ui.manager.model.XmlElement|String} the element or an element name as string",
            "paramName": "xmlElement",
            "description": " the element or an element name as string",
            "type": [
              "cv.ui.manager.model.XmlElement",
              "String"
            ]
          },
          {
            "name": "@param",
            "body": "index {Number} position to check, use Number.POSITIVE_INFINITY to check if the child is allowed to be appended",
            "paramName": "index",
            "description": " position to check, use Number.POSITIVE_INFINITY to check if the child is allowed to be appended",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{boolean}",
            "type": "boolean",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 616,
          "column": 4,
          "index": 18395
        },
        "end": {
          "line": 669,
          "column": 5,
          "index": 20325
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xmlElement",
          "type": [
            "cv.ui.manager.model.XmlElement",
            "String"
          ]
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "findPositionForChild": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 671,
          "column": 4,
          "index": 20332
        },
        "end": {
          "line": 702,
          "column": 5,
          "index": 21577
        }
      },
      "type": "function",
      "params": [
        {
          "name": "newChild"
        }
      ],
      "appearsIn": []
    },
    "insertChild": {
      "jsdoc": {
        "raw": [
          "*",
          "     * insert child at given index",
          "     * @param xmlElement {cv.ui.manager.model.XmlElement} new child",
          "     * @param index {Number} index to insert the child, if set to -1 insert it at any allowed position",
          "     * @param skipUndo {Boolean} do not add an undo operation for this change",
          "     * @param internalOperation",
          "     * @return {Boolean} true if the child has been added",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>insert child at given index</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xmlElement {cv.ui.manager.model.XmlElement} new child",
            "paramName": "xmlElement",
            "description": " new child",
            "type": "cv.ui.manager.model.XmlElement"
          },
          {
            "name": "@param",
            "body": "index {Number} index to insert the child, if set to -1 insert it at any allowed position",
            "paramName": "index",
            "description": " index to insert the child, if set to -1 insert it at any allowed position",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "skipUndo {Boolean} do not add an undo operation for this change",
            "paramName": "skipUndo",
            "description": " do not add an undo operation for this change",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "internalOperation",
            "paramName": "internalOperation",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the child has been added",
            "type": "boolean",
            "description": "true if the child has been added"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 712,
          "column": 4,
          "index": 21974
        },
        "end": {
          "line": 786,
          "column": 5,
          "index": 24242
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xmlElement",
          "type": "cv.ui.manager.model.XmlElement"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "skipUndo",
          "type": "boolean"
        },
        {
          "name": "internalOperation"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_validateTextContent": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 788,
          "column": 4,
          "index": 24249
        },
        "end": {
          "line": 799,
          "column": 5,
          "index": 24730
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "validate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Validate this element (and its parent when this is a text node)",
          "     * @param recursive {Boolean} validate children too",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Validate this element (and its parent when this is a text node)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "recursive {Boolean} validate children too",
            "paramName": "recursive",
            "description": " validate children too",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 805,
          "column": 4,
          "index": 24880
        },
        "end": {
          "line": 866,
          "column": 5,
          "index": 27325
        }
      },
      "type": "function",
      "params": [
        {
          "name": "recursive",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "isTextNode": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 868,
          "column": 4,
          "index": 27332
        },
        "end": {
          "line": 870,
          "column": 5,
          "index": 27432
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyTextContent": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 872,
          "column": 4,
          "index": 27439
        },
        "end": {
          "line": 887,
          "column": 5,
          "index": 27951
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "getText": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 889,
          "column": 4,
          "index": 27958
        },
        "end": {
          "line": 891,
          "column": 5,
          "index": 28011
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "setText": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 893,
          "column": 4,
          "index": 28018
        },
        "end": {
          "line": 916,
          "column": 5,
          "index": 28789
        }
      },
      "type": "function",
      "params": [
        {
          "name": "text"
        },
        {
          "name": "nodeName"
        }
      ],
      "appearsIn": []
    },
    "getAttribute": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 918,
          "column": 4,
          "index": 28796
        },
        "end": {
          "line": 920,
          "column": 5,
          "index": 28866
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name"
        }
      ],
      "appearsIn": []
    },
    "setAttribute": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 922,
          "column": 4,
          "index": 28873
        },
        "end": {
          "line": 983,
          "column": 5,
          "index": 31086
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name"
        },
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "isRequired": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @return {Boolean} true if this element is a required child from its parent",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if this element is a required child from its parent",
            "type": "boolean",
            "description": "true if this element is a required child from its parent"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 988,
          "column": 4,
          "index": 31191
        },
        "end": {
          "line": 996,
          "column": 5,
          "index": 31522
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "setAttributes": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 998,
          "column": 4,
          "index": 31529
        },
        "end": {
          "line": 1072,
          "column": 5,
          "index": 34366
        }
      },
      "type": "function",
      "params": [
        {
          "name": "data"
        }
      ],
      "appearsIn": []
    },
    "_applySchemaElement": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 1074,
          "column": 4,
          "index": 34373
        },
        "end": {
          "line": 1085,
          "column": 5,
          "index": 34736
        }
      },
      "type": "function",
      "params": [
        {
          "name": "schemaElement"
        }
      ],
      "appearsIn": []
    },
    "_onOpen": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 1087,
          "column": 4,
          "index": 34743
        },
        "end": {
          "line": 1092,
          "column": 5,
          "index": 34861
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_applyModified": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 1094,
          "column": 4,
          "index": 34868
        },
        "end": {
          "line": 1096,
          "column": 5,
          "index": 34924
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "updateDisplayName": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1098,
          "column": 4,
          "index": 34931
        },
        "end": {
          "line": 1126,
          "column": 5,
          "index": 36071
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "hasChildren": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1127,
          "column": 4,
          "index": 36077
        },
        "end": {
          "line": 1143,
          "column": 5,
          "index": 36678
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "load": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1145,
          "column": 4,
          "index": 36685
        },
        "end": {
          "line": 1252,
          "column": 5,
          "index": 41553
        }
      },
      "type": "function",
      "params": [
        {
          "name": "force"
        }
      ],
      "appearsIn": []
    },
    "appendInvalidMessage": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1254,
          "column": 4,
          "index": 41560
        },
        "end": {
          "line": 1259,
          "column": 5,
          "index": 41764
        }
      },
      "type": "function",
      "params": [
        {
          "name": "errorMsg"
        }
      ],
      "appearsIn": []
    },
    "updateModified": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1261,
          "column": 4,
          "index": 41771
        },
        "end": {
          "line": 1295,
          "column": 5,
          "index": 43024
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "hasChildrenModified": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Special check if this element has modified children (position, of length)",
          "     * This is used to determine if the preview highlighting needs to be disabled because the xml structure has changed",
          "     * @returns {*|boolean}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Special check if this element has modified children (position, of length)\n This is used to determine if the preview highlighting needs to be disabled because the xml structure has changed</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|boolean}",
            "type": "*|boolean",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 1302,
          "column": 4,
          "index": 43276
        },
        "end": {
          "line": 1312,
          "column": 5,
          "index": 43678
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "*|boolean"
      },
      "appearsIn": []
    },
    "onSaved": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1314,
          "column": 4,
          "index": 43685
        },
        "end": {
          "line": 1334,
          "column": 5,
          "index": 44423
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "isElement": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1336,
          "column": 4,
          "index": 44430
        },
        "end": {
          "line": 1338,
          "column": 5,
          "index": 44505
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_currentChildNames": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 1340,
          "column": 4,
          "index": 44512
        },
        "end": {
          "line": 1360,
          "column": 5,
          "index": 45235
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_syncChildNodes": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 1362,
          "column": 4,
          "index": 45242
        },
        "end": {
          "line": 1367,
          "column": 5,
          "index": 45496
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        }
      ],
      "appearsIn": []
    },
    "_updateChildrenDeletableFlags": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 1369,
          "column": 4,
          "index": 45503
        },
        "end": {
          "line": 1377,
          "column": 5,
          "index": 45745
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getWidgetPath": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 1379,
          "column": 4,
          "index": 45752
        },
        "end": {
          "line": 1438,
          "column": 5,
          "index": 47739
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "clone": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 1441,
          "column": 4,
          "index": 47764
        },
        "end": {
          "line": 1443,
          "column": 5,
          "index": 47899
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object"
      ]
    },
    "_applyEventPropagation": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply function for every property created with the",
          "     * {@link qx.data.marshal.Json} marshaler. It fires and",
          "     * {@link #changeBubble} event on every change. It also adds the chaining",
          "     * listener if possible which is necessary for the bubbling of the events.",
          "     *",
          "     * @param value {var} The new value of the property.",
          "     * @param old {var} The old value of the property.",
          "     * @param name {String} The name of the changed property.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply function for every property created with the\n {@link qx.data.marshal.Json} marshaler. It fires and\n {@link #changeBubble} event on every change. It also adds the chaining\n listener if possible which is necessary for the bubbling of the events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The new value of the property."
          },
          {
            "name": "@param",
            "body": "old {var} The old value of the property."
          },
          {
            "name": "@param",
            "body": "name {String} The name of the changed property."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 2306
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 2540
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        },
        {
          "name": "name"
        }
      ],
      "mixin": "qx.data.marshal.MEventBubbling",
      "appearsIn": [
        "qx.data.marshal.MEventBubbling"
      ]
    },
    "_registerEventChaining": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Registers for the given parameters the changeBubble listener, if",
          "     * possible. It also removes the old listener, if an old item with",
          "     * a changeBubble event is given.",
          "     *",
          "     * @param value {var} The new value of the property.",
          "     * @param old {var} The old value of the property.",
          "     * @param name {String} The name of the changed property.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers for the given parameters the changeBubble listener, if\n possible. It also removes the old listener, if an old item with\n a changeBubble event is given.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The new value of the property."
          },
          {
            "name": "@param",
            "body": "old {var} The old value of the property."
          },
          {
            "name": "@param",
            "body": "name {String} The name of the changed property."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2925
        },
        "end": {
          "line": 114,
          "column": 5,
          "index": 4130
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        },
        {
          "name": "name"
        }
      ],
      "mixin": "qx.data.marshal.MEventBubbling",
      "appearsIn": [
        "qx.data.marshal.MEventBubbling"
      ]
    },
    "__changePropertyListener": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener responsible for formating the name and firing the change event",
          "     * for the changed property.",
          "     *",
          "     * @param name {String} The name of the former properties.",
          "     * @param e {qx.event.type.Data} The date event fired by the property",
          "     *   change.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener responsible for formating the name and firing the change event\n for the changed property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} The name of the former properties."
          },
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} The date event fired by the property\n   change."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 4426
        },
        "end": {
          "line": 177,
          "column": 5,
          "index": 6301
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name"
        },
        {
          "name": "e"
        }
      ],
      "mixin": "qx.data.marshal.MEventBubbling",
      "appearsIn": [
        "qx.data.marshal.MEventBubbling"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 1451,
        "column": 2,
        "index": 48033
      },
      "end": {
        "line": 1457,
        "column": 3,
        "index": 48212
      }
    }
  }
}