{
  "className": "cv.ui.manager.IActionHandler",
  "packageName": "cv.ui.manager",
  "name": "IActionHandler",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 938
      },
      "end": {
        "line": 58,
        "column": 3,
        "index": 2081
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>All Widgets that need to handle actions from the managers action event, need to implement this interface.</p>"
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "canHandleAction": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 1252
        },
        "end": {
          "line": 34,
          "column": 34,
          "index": 1282
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the action handle can process the action.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "actionName {String} action name",
            "paramName": "actionName",
            "description": " action name",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleAction": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1428
        },
        "end": {
          "line": 41,
          "column": 37,
          "index": 1461
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Executes the action handling.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "actionName {String} action name",
            "paramName": "actionName",
            "description": " action name",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {var} action payload",
            "paramName": "data",
            "description": " action payload",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "configureButton": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1796
        },
        "end": {
          "line": 49,
          "column": 40,
          "index": 1832
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The ActionHandler can configure the menubutton itself, e.g. disable it, when that action is currently not possible\n or change the button text / tooltip text etc.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "actionId {String} ID of the action that button triggers",
            "paramName": "actionId",
            "description": " ID of the action that button triggers",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "button {Widget} the button that should be configured",
            "paramName": "button",
            "description": " the button that should be configured",
            "type": "Widget"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "unConfigureButton": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 2035
        },
        "end": {
          "line": 56,
          "column": 42,
          "index": 2073
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Undo all changes that have been applied to the button in configureButton</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "actionId {String} ID of the action that button triggers",
            "paramName": "actionId",
            "description": " ID of the action that button triggers",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "button {Widget}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}