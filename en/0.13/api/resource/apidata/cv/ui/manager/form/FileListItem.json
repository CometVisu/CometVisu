{
  "version": 0.3,
  "lastModified": 1722153538623,
  "lastModifiedIso": "2024-07-28T07:58:58.623Z",
  "classFilename": "../../source/class/cv/ui/manager/form/FileListItem.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 921
    },
    "end": {
      "line": 554,
      "column": 3,
      "index": 16915
    }
  },
  "className": "cv.ui.manager.form.FileListItem",
  "jsdoc": {
    "raw": [
      "*",
      " * A qx.ui.form.ListItem with an additional label overlay over the icon to show the file type",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A qx.ui.form.ListItem with an additional label overlay over the icon to show the file type</p>"
      }
    ]
  },
  "superClass": "qx.ui.core.Widget",
  "interfaces": [
    "qx.ui.form.IModel"
  ],
  "mixins": [
    "cv.ui.manager.upload.MDragUpload"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "label"
      },
      {
        "name": "icon"
      },
      {
        "name": "model"
      }
    ],
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 1213
      },
      "end": {
        "line": 52,
        "column": 3,
        "index": 1784
      }
    }
  },
  "events": {
    "action": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* (Fired by {@link qx.ui.form.List}) "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>(Fired by {@link qx.ui.form.List})</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 2031
        },
        "end": {
          "line": 61,
          "column": 33,
          "index": 2060
        }
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2212
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 2278
        }
      },
      "json": {
        "refine": true,
        "init": "cv-file-item"
      },
      "jsdoc": null,
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "model": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2285
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 2446
        }
      },
      "json": {
        "nullable": true,
        "event": "changeModel",
        "apply": "_applyModel",
        "dereference": true,
        "check": "cv.ui.manager.model.FileItem"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "showFileActions": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2501
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2604
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_maintainFileActions"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Show the action buttons.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Show the action buttons.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "label": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2678
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2764
        }
      },
      "json": {
        "nullable": true,
        "check": "String",
        "event": "changeLabel"
      },
      "jsdoc": {
        "raw": [
          "* The label/caption/text of the qx.ui.basic.Atom instance "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The label/caption/text of the qx.ui.basic.Atom instance</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "icon": {
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2847
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2954
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "themeable": true,
        "event": "changeIcon"
      },
      "jsdoc": {
        "raw": [
          "* Any URI String supported by qx.ui.basic.Image to display an icon "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Any URI String supported by qx.ui.basic.Image to display an icon</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "gap": {
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 3025
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 3147
        }
      },
      "json": {
        "check": "Integer",
        "nullable": false,
        "event": "changeGap",
        "themeable": true,
        "init": 4
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The space between the icon and the label",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The space between the icon and the label</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "show": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3273
        },
        "end": {
          "line": 128,
          "column": 5,
          "index": 3420
        }
      },
      "json": {
        "init": "both",
        "check": [
          "both",
          "label",
          "icon"
        ],
        "themeable": true,
        "inheritable": true,
        "event": "changeShow"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Configure the visibility of the sub elements/widgets.",
          "     * Possible values: both, label, icon",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Configure the visibility of the sub elements/widgets.\n Possible values: both, label, icon</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "iconPosition": {
      "location": {
        "start": {
          "line": 134,
          "column": 4,
          "index": 3602
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 3806
        }
      },
      "json": {
        "init": "left",
        "check": [
          "top",
          "right",
          "bottom",
          "left",
          "top-left",
          "bottom-left",
          "top-right",
          "bottom-right"
        ],
        "themeable": true,
        "event": "changeIconPosition"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The position of the icon in relation to the text.",
          "     * Only useful/needed if text and icon is configured and 'show' is configured as 'both' (default)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The position of the icon in relation to the text.\n Only useful/needed if text and icon is configured and 'show' is configured as 'both' (default)</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "center": {
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 4378
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 4487
        }
      },
      "json": {
        "init": false,
        "check": "Boolean",
        "themeable": true,
        "event": "changeCenter"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the content should be rendered centrally when to much space",
          "     * is available. Enabling this property centers in both axis. The behavior",
          "     * when disabled of the centering depends on the {@link #iconPosition} property.",
          "     * If the icon position is <code>left</code> or <code>right</code>, the X axis",
          "     * is not centered, only the Y axis. If the icon position is <code>top</code>",
          "     * or <code>bottom</code>, the Y axis is not centered. In case of e.g. an",
          "     * icon position of <code>top-left</code> no axis is centered.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the content should be rendered centrally when to much space\n is available. Enabling this property centers in both axis. The behavior\n when disabled of the centering depends on the {@link #iconPosition} property.\n If the icon position is <code>left</code> or <code>right</code>, the X axis\n is not centered, only the Y axis. If the icon position is <code>top</code>\n or <code>bottom</code>, the Y axis is not centered. In case of e.g. an\n icon position of <code>top-left</code> no axis is centered.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "acceptUpload": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4581
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 4664
        }
      },
      "json": {
        "nullable": true,
        "check": "String"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Restrict possible file uploads (not supported by every browxer)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Restrict possible file uploads (not supported by every browxer)</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "viewMode": {
      "location": {
        "start": {
          "line": 167,
          "column": 4,
          "index": 4671
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4775
        }
      },
      "json": {
        "check": [
          "list",
          "preview"
        ],
        "init": "preview",
        "apply": "_applyViewMode"
      },
      "jsdoc": null,
      "appearsIn": []
    },
    "uploadMode": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 2010
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 2105
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "__applyUploadMode"
      },
      "jsdoc": null,
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "uploadHint": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 2112
        },
        "end": {
          "line": 66,
          "column": 5,
          "index": 2169
        }
      },
      "json": {
        "check": "String",
        "init": ""
      },
      "jsdoc": null,
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    }
  },
  "members": {
    "_uploadManager": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 4975
        },
        "end": {
          "line": 181,
          "column": 24,
          "index": 4995
        }
      },
      "appearsIn": []
    },
    "_forwardStates": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @lint ignoreReferenceField(_forwardStates)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_forwardStates)"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 5086
        },
        "end": {
          "line": 192,
          "column": 5,
          "index": 5194
        }
      },
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_applyViewMode": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 194,
          "column": 4,
          "index": 5201
        },
        "end": {
          "line": 232,
          "column": 5,
          "index": 6085
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onPointerOver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the pointer over event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer over event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 237,
          "column": 4,
          "index": 6157
        },
        "end": {
          "line": 239,
          "column": 5,
          "index": 6213
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onPointerOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the pointer out event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer out event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 244,
          "column": 4,
          "index": 6284
        },
        "end": {
          "line": 246,
          "column": 5,
          "index": 6342
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_isDroppable": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 248,
          "column": 4,
          "index": 6349
        },
        "end": {
          "line": 258,
          "column": 5,
          "index": 6690
        }
      },
      "type": "function",
      "params": [
        {
          "name": "files"
        }
      ],
      "appearsIn": []
    },
    "_onDrop": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 6697
        },
        "end": {
          "line": 278,
          "column": 5,
          "index": 7397
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        }
      ],
      "appearsIn": []
    },
    "_applyModel": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 280,
          "column": 4,
          "index": 7404
        },
        "end": {
          "line": 330,
          "column": 5,
          "index": 9120
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_onOpenWith": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 332,
          "column": 4,
          "index": 9127
        },
        "end": {
          "line": 338,
          "column": 5,
          "index": 9350
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        }
      ],
      "appearsIn": []
    },
    "_applyIcon": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 340,
          "column": 4,
          "index": 9357
        },
        "end": {
          "line": 351,
          "column": 5,
          "index": 9796
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_maintainFileActions": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 353,
          "column": 4,
          "index": 9803
        },
        "end": {
          "line": 397,
          "column": 5,
          "index": 11613
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__scaleWithAspect": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 399,
          "column": 4,
          "index": 11620
        },
        "end": {
          "line": 416,
          "column": 5,
          "index": 12357
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_maintainFileTypePosition": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 418,
          "column": 4,
          "index": 12364
        },
        "end": {
          "line": 427,
          "column": 5,
          "index": 12757
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_createChildControlImpl": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 430,
          "column": 4,
          "index": 12782
        },
        "end": {
          "line": 519,
          "column": 5,
          "index": 15926
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        }
      ],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "capture": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 522,
          "column": 4,
          "index": 15951
        },
        "end": {
          "line": 527,
          "column": 5,
          "index": 16172
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "releaseCapture": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 530,
          "column": 4,
          "index": 16197
        },
        "end": {
          "line": 535,
          "column": 5,
          "index": 16432
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "__hasEmptyInfo": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 4845
        },
        "end": {
          "line": 160,
          "column": 24,
          "index": 4865
        }
      },
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "_boundOnStop": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4871
        },
        "end": {
          "line": 161,
          "column": 22,
          "index": 4889
        }
      },
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "__syncBounds": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4896
        },
        "end": {
          "line": 168,
          "column": 5,
          "index": 5186
        }
      },
      "type": "function",
      "params": [],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "_createMDragUploadChildControlImpl": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 5211
        },
        "end": {
          "line": 219,
          "column": 5,
          "index": 6983
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        }
      ],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "_onStopDragging": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 6990
        },
        "end": {
          "line": 225,
          "column": 5,
          "index": 7150
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        }
      ],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "_applyStartDragListeners": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&amp;Drop</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 7269
        },
        "end": {
          "line": 258,
          "column": 5,
          "index": 8203
        }
      },
      "type": "function",
      "params": [],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "_applyDragListeners": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&amp;Drop</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 263,
          "column": 4,
          "index": 8322
        },
        "end": {
          "line": 323,
          "column": 5,
          "index": 10092
        }
      },
      "type": "function",
      "params": [],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "__applyUploadMode": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 326,
          "column": 4,
          "index": 10121
        },
        "end": {
          "line": 341,
          "column": 5,
          "index": 10684
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 543,
        "column": 2,
        "index": 16566
      },
      "end": {
        "line": 553,
        "column": 3,
        "index": 16911
      }
    }
  },
  "statics": {
    "onHtml5Drop": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles HTML5 drop events (dropping external files on dom element)",
          "     * @param ev {Event}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles HTML5 drop events (dropping external files on dom element)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2430
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2536
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        }
      ],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "uploadFile": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Uploads the dropped file to the correct folder:",
          "     * - config files to the resources/config folder",
          "     * - accepted media files to the resources/config/media folder",
          "     * @param file {File}",
          "     * @param replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Uploads the dropped file to the correct folder:</p>\n<ul>\n<li>config files to the resources/config folder</li>\n<li>accepted media files to the resources/config/media folder</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file {File}"
          },
          {
            "name": "@param",
            "body": "replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2891
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3632
        }
      },
      "type": "function",
      "params": [
        {
          "name": "file"
        },
        {
          "name": "replaceFile"
        }
      ],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "hasDroppableFile": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3639
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3710
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        }
      ],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    },
    "getFiles": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Extracts acceptable files from event",
          "     * @param ev {Event}",
          "     * @private",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Extracts acceptable files from event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3818
        },
        "end": {
          "line": 151,
          "column": 5,
          "index": 4638
        }
      },
      "type": "function",
      "params": [
        {
          "name": "ev"
        }
      ],
      "mixin": "cv.ui.manager.upload.MDragUpload",
      "appearsIn": [
        "cv.ui.manager.upload.MDragUpload"
      ]
    }
  }
}