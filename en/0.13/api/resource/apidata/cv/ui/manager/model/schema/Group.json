{
  "version": 0.3,
  "lastModified": 1726088789841,
  "lastModifiedIso": "2024-09-11T21:06:29.841Z",
  "classFilename": "../../source/class/cv/ui/manager/model/schema/Group.js",
  "type": "class",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 859
    },
    "end": {
      "line": 171,
      "column": 3,
      "index": 5484
    }
  },
  "className": "cv.ui.manager.model.schema.Group",
  "jsdoc": {
    "raw": [
      "*",
      " * a single group.",
      " * may be recursive",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>a single group.\n may be recursive</p>"
      }
    ]
  },
  "superClass": "cv.ui.manager.model.schema.Base",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "node"
      },
      {
        "name": "schema"
      }
    ],
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 1085
      },
      "end": {
        "line": 35,
        "column": 3,
        "index": 1157
      }
    }
  },
  "properties": {
    "type": {
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1305
        },
        "end": {
          "line": 46,
          "column": 5,
          "index": 1358
        }
      },
      "json": {
        "refine": true,
        "init": "group"
      },
      "jsdoc": null,
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    }
  },
  "members": {
    "parse": {
      "jsdoc": {
        "raw": [
          "*",
          "     * parse a list of elements in this group.",
          "     * Group is allowed (all|choice|sequence)? as per the definition.",
          "     * We do all of those (except for 'all')",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>parse a list of elements in this group.\n Group is allowed (all|choice|sequence)? as per the definition.\n We do all of those (except for 'all')</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1682
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 2426
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getAllowedElements": {
      "jsdoc": {
        "raw": [
          "*",
          "     * get the elements allowed for this group",
          "     *",
          "     * @return  object      list of allowed elements, key is the name",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the elements allowed for this group</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object      list of allowed elements, key is the name"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2573
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2726
        }
      },
      "type": "function",
      "params": [],
      "returnType": {},
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getAllowedElementsSorting": {
      "jsdoc": {
        "raw": [
          "*",
          "     * get the sorting of the allowed elements.",
          "     * For a group, all elements have the same sorting, so they will all have the",
          "     * same sort number",
          "     *",
          "     * Warning: this only works if any element can have only ONE position in the parent.",
          "     *",
          "     * @param   sortNumber  integer the sort number of a parent (only used when recursive)",
          "     * @return  object              list of allowed elements, with their sort-number as value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the sorting of the allowed elements.\n For a group, all elements have the same sorting, so they will all have the\n same sort number\n Warning: this only works if any element can have only ONE position in the parent.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "sortNumber  integer the sort number of a parent (only used when recursive)"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object              list of allowed elements, with their sort-number as value"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 3191
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 3959
        }
      },
      "type": "function",
      "params": [
        {
          "name": "sortNumber"
        }
      ],
      "returnType": {},
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getRegex": {
      "jsdoc": {
        "raw": [
          "*",
          "     * get a regex (string) describing this choice",
          "     *",
          "     * @param   separator   string  the string used to separate different elements, e.g. ';'",
          "     * @param   nocapture   bool    when set to true non capturing groups are used",
          "     * @return  string  regex",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>get a regex (string) describing this choice</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "separator   string  the string used to separate different elements, e.g. ';'"
          },
          {
            "name": "@param",
            "body": "nocapture   bool    when set to true non capturing groups are used"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "string  regex"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 4246
        },
        "end": {
          "line": 163,
          "column": 5,
          "index": 5223
        }
      },
      "type": "function",
      "params": [
        {
          "name": "separator"
        },
        {
          "name": "nocapture"
        }
      ],
      "returnType": {},
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getBoundsForElementName": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 165,
          "column": 4,
          "index": 5230
        },
        "end": {
          "line": 169,
          "column": 5,
          "index": 5476
        }
      },
      "type": "function",
      "params": [
        {
          "name": "childName"
        }
      ],
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    }
  },
  "statics": {}
}