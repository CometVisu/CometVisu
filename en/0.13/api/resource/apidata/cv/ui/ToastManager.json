{
  "className": "cv.ui.ToastManager",
  "packageName": "cv.ui",
  "name": "ToastManager",
  "superClass": "qx.core.Object",
  "interfaces": [
    "cv.core.notifications.IHandler"
  ],
  "mixins": [
    "cv.ui.MHandleMessage"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 868
      },
      "end": {
        "line": 151,
        "column": 3,
        "index": 4615
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Handles toast positioning in the gui.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 1176
      },
      "end": {
        "line": 67,
        "column": 3,
        "index": 2282
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "messageDuration": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2513
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 2577
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Default time in MS a toast message is visible</p>"
          }
        ]
      },
      "name": "messageDuration",
      "propertyType": "new",
      "init": 5000,
      "check": "Number",
      "defaultValue": 5000
    },
    "maxEntries": {
      "type": "property",
      "name": "maxEntries",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "event": "_applyMaxEntries",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maximum allowed messages</p>"
          }
        ]
      }
    },
    "counter": {
      "type": "property",
      "name": "counter",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "event": "changedCounter",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Current amount of messages</p>"
          }
        ]
      }
    },
    "globalSeverity": {
      "type": "property",
      "name": "globalSeverity",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "event": "changedGlobalSeverity",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Highest severity of the messages</p>"
          }
        ]
      }
    },
    "rootElementId": {
      "type": "property",
      "name": "rootElementId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>ID of the root element of this message handler (HTML attribute 'id' value)</p>"
          }
        ]
      }
    },
    "messageElementId": {
      "type": "property",
      "name": "messageElementId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Pattern id the message elements IDs (suffix without is,\n e.g. messages get mes<em>1, mes</em>2, â€¦ mes_ is the messageElementId)</p>"
          }
        ]
      }
    },
    "delegate": {
      "type": "property",
      "name": "delegate",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__domElement": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2737
        },
        "end": {
          "line": 90,
          "column": 22,
          "index": 2755
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__timer": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2761
        },
        "end": {
          "line": 91,
          "column": 17,
          "index": 2774
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__opened": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2780
        },
        "end": {
          "line": 92,
          "column": 19,
          "index": 2795
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_init": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2860
        },
        "end": {
          "line": 125,
          "column": 5,
          "index": 4047
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attach to dom element and style it</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_performAction": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 4054
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 4229
        }
      },
      "type": "function",
      "access": "protected"
    },
    "handleMessage": {
      "type": "function",
      "name": "handleMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.core.notifications.IHandler",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle messages from {@link cv.core.notifications.Router}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {Map}"
          },
          {
            "name": "@param",
            "body": "config {Map?} optional configuration of this message for the handler",
            "paramName": "config",
            "description": " optional configuration of this message for the handler",
            "optional": true,
            "type": "Map"
          }
        ]
      }
    },
    "getIdCounter": {
      "type": "function",
      "name": "getIdCounter",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getSeverities": {
      "type": "function",
      "name": "getSeverities",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "_updateHighestSeverity": {
      "type": "function",
      "name": "_updateHighestSeverity",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getSeverityColor": {
      "type": "function",
      "name": "getSeverityColor",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "_applyMaxEntries": {
      "type": "function",
      "name": "_applyMaxEntries",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {}
    },
    "getMessageIdFromEvent": {
      "type": "function",
      "name": "getMessageIdFromEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Finds the message the tap event has been triggered on an returns\n an array [messageId, action], where action can be one of \"delete\", \"action\".</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} [messageId, action]",
            "type": "Array",
            "description": " [messageId, action]"
          }
        ]
      }
    },
    "_onListTap": {
      "type": "function",
      "name": "_onListTap",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "_getTooltip": {
      "type": "function",
      "name": "_getTooltip",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "clear": {
      "type": "function",
      "name": "clear",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delete all messages.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "force {Boolean} if false: only delete \"deletable\" messages, if true: delete all messages",
            "paramName": "force",
            "description": " if false: only delete \"deletable\" messages, if true: delete all messages",
            "type": "Boolean"
          }
        ]
      }
    },
    "getMessage": {
      "type": "function",
      "name": "getMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getMessages": {
      "type": "function",
      "name": "getMessages",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "deleteMessage": {
      "type": "function",
      "name": "deleteMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delete a message by index</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number}"
          },
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ]
      }
    },
    "performAction": {
      "type": "function",
      "name": "performAction",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getMaxEntries": {
      "type": "function",
      "name": "getMaxEntries",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxEntries</code>.\n\nFor further details take a look at the property definition: {@link #maxEntries}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for maxEntries"
          }
        ]
      }
    },
    "setMaxEntries": {
      "type": "function",
      "name": "setMaxEntries",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxEntries</code>.\n\nFor further details take a look at the property definition: {@link #maxEntries}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for maxEntries"
          }
        ]
      }
    },
    "resetMaxEntries": {
      "type": "function",
      "name": "resetMaxEntries",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxEntries</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxEntries}."
          }
        ]
      }
    },
    "getCounter": {
      "type": "function",
      "name": "getCounter",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>counter</code>.\n\nFor further details take a look at the property definition: {@link #counter}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for counter"
          }
        ]
      }
    },
    "setCounter": {
      "type": "function",
      "name": "setCounter",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>counter</code>.\n\nFor further details take a look at the property definition: {@link #counter}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for counter"
          }
        ]
      }
    },
    "resetCounter": {
      "type": "function",
      "name": "resetCounter",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>counter</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #counter}."
          }
        ]
      }
    },
    "getGlobalSeverity": {
      "type": "function",
      "name": "getGlobalSeverity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>globalSeverity</code>.\n\nFor further details take a look at the property definition: {@link #globalSeverity}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for globalSeverity"
          }
        ]
      }
    },
    "setGlobalSeverity": {
      "type": "function",
      "name": "setGlobalSeverity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>globalSeverity</code>.\n\nFor further details take a look at the property definition: {@link #globalSeverity}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for globalSeverity"
          }
        ]
      }
    },
    "resetGlobalSeverity": {
      "type": "function",
      "name": "resetGlobalSeverity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>globalSeverity</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #globalSeverity}."
          }
        ]
      }
    },
    "getRootElementId": {
      "type": "function",
      "name": "getRootElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rootElementId</code>.\n\nFor further details take a look at the property definition: {@link #rootElementId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for rootElementId"
          }
        ]
      }
    },
    "setRootElementId": {
      "type": "function",
      "name": "setRootElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rootElementId</code>.\n\nFor further details take a look at the property definition: {@link #rootElementId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for rootElementId"
          }
        ]
      }
    },
    "resetRootElementId": {
      "type": "function",
      "name": "resetRootElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>rootElementId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #rootElementId}."
          }
        ]
      }
    },
    "getMessageElementId": {
      "type": "function",
      "name": "getMessageElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>messageElementId</code>.\n\nFor further details take a look at the property definition: {@link #messageElementId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for messageElementId"
          }
        ]
      }
    },
    "setMessageElementId": {
      "type": "function",
      "name": "setMessageElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>messageElementId</code>.\n\nFor further details take a look at the property definition: {@link #messageElementId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for messageElementId"
          }
        ]
      }
    },
    "resetMessageElementId": {
      "type": "function",
      "name": "resetMessageElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>messageElementId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #messageElementId}."
          }
        ]
      }
    },
    "getDelegate": {
      "type": "function",
      "name": "getDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>delegate</code>.\n\nFor further details take a look at the property definition: {@link #delegate}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for delegate"
          }
        ]
      }
    },
    "setDelegate": {
      "type": "function",
      "name": "setDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>delegate</code>.\n\nFor further details take a look at the property definition: {@link #delegate}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for delegate"
          }
        ]
      }
    },
    "resetDelegate": {
      "type": "function",
      "name": "resetDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>delegate</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #delegate}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getMessageDuration": {
      "type": "function",
      "name": "getMessageDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>messageDuration</code>.\n\nFor further details take a look at the property definition: {@link #messageDuration}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for messageDuration"
          }
        ]
      }
    },
    "setMessageDuration": {
      "type": "function",
      "name": "setMessageDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>messageDuration</code>.\n\nFor further details take a look at the property definition: {@link #messageDuration}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for messageDuration"
          }
        ]
      }
    },
    "resetMessageDuration": {
      "type": "function",
      "name": "resetMessageDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>messageDuration</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #messageDuration}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 141,
        "column": 2,
        "index": 4377
      },
      "end": {
        "line": 150,
        "column": 3,
        "index": 4611
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}