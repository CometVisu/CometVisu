{
  "className": "cv.ui.layout.States",
  "packageName": "cv.ui.layout",
  "name": "States",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 70,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class holds all states that are maintained by the {@link cv.ui.layout.ResizeHandler}.\n Other classes can use the instance of this class {@link cv.ui.layout.ResizeHandler.states} to listen to changes\n to the states.</p>"
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "pageSizeInvalid": {
      "location": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 5
        }
      },
      "name": "pageSizeInvalid",
      "propertyType": "new",
      "event": "changePageSizeInvalid",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "backdropInvalid": {
      "location": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 45,
          "column": 5
        }
      },
      "name": "backdropInvalid",
      "propertyType": "new",
      "event": "changeBackdropInvalid",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "navbarInvalid": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "name": "navbarInvalid",
      "propertyType": "new",
      "event": "changeNavbarInvalid",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "rowspanInvalid": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "name": "rowspanInvalid",
      "propertyType": "new",
      "event": "changeRowspanInvalid",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "resetAll": {
      "location": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 68,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getPageSizeInvalid": {
      "type": "function",
      "name": "getPageSizeInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>pageSizeInvalid</code>.\n\nFor further details take a look at the property definition: {@link #pageSizeInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for pageSizeInvalid"
          }
        ]
      }
    },
    "isPageSizeInvalid": {
      "type": "function",
      "name": "isPageSizeInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>pageSizeInvalid</code>.\n\nFor further details take a look at the property definition: {@link #pageSizeInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for pageSizeInvalid"
          }
        ]
      }
    },
    "setPageSizeInvalid": {
      "type": "function",
      "name": "setPageSizeInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>pageSizeInvalid</code>.\n\nFor further details take a look at the property definition: {@link #pageSizeInvalid}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for pageSizeInvalid"
          }
        ]
      }
    },
    "resetPageSizeInvalid": {
      "type": "function",
      "name": "resetPageSizeInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>pageSizeInvalid</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #pageSizeInvalid}."
          }
        ]
      }
    },
    "getBackdropInvalid": {
      "type": "function",
      "name": "getBackdropInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>backdropInvalid</code>.\n\nFor further details take a look at the property definition: {@link #backdropInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for backdropInvalid"
          }
        ]
      }
    },
    "isBackdropInvalid": {
      "type": "function",
      "name": "isBackdropInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>backdropInvalid</code>.\n\nFor further details take a look at the property definition: {@link #backdropInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for backdropInvalid"
          }
        ]
      }
    },
    "setBackdropInvalid": {
      "type": "function",
      "name": "setBackdropInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>backdropInvalid</code>.\n\nFor further details take a look at the property definition: {@link #backdropInvalid}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for backdropInvalid"
          }
        ]
      }
    },
    "resetBackdropInvalid": {
      "type": "function",
      "name": "resetBackdropInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>backdropInvalid</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #backdropInvalid}."
          }
        ]
      }
    },
    "getNavbarInvalid": {
      "type": "function",
      "name": "getNavbarInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>navbarInvalid</code>.\n\nFor further details take a look at the property definition: {@link #navbarInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for navbarInvalid"
          }
        ]
      }
    },
    "isNavbarInvalid": {
      "type": "function",
      "name": "isNavbarInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>navbarInvalid</code>.\n\nFor further details take a look at the property definition: {@link #navbarInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for navbarInvalid"
          }
        ]
      }
    },
    "setNavbarInvalid": {
      "type": "function",
      "name": "setNavbarInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>navbarInvalid</code>.\n\nFor further details take a look at the property definition: {@link #navbarInvalid}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for navbarInvalid"
          }
        ]
      }
    },
    "resetNavbarInvalid": {
      "type": "function",
      "name": "resetNavbarInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>navbarInvalid</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #navbarInvalid}."
          }
        ]
      }
    },
    "getRowspanInvalid": {
      "type": "function",
      "name": "getRowspanInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rowspanInvalid</code>.\n\nFor further details take a look at the property definition: {@link #rowspanInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for rowspanInvalid"
          }
        ]
      }
    },
    "isRowspanInvalid": {
      "type": "function",
      "name": "isRowspanInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rowspanInvalid</code>.\n\nFor further details take a look at the property definition: {@link #rowspanInvalid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for rowspanInvalid"
          }
        ]
      }
    },
    "setRowspanInvalid": {
      "type": "function",
      "name": "setRowspanInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rowspanInvalid</code>.\n\nFor further details take a look at the property definition: {@link #rowspanInvalid}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for rowspanInvalid"
          }
        ]
      }
    },
    "resetRowspanInvalid": {
      "type": "function",
      "name": "resetRowspanInvalid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>rowspanInvalid</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #rowspanInvalid}."
          }
        ]
      }
    }
  },
  "descendants": []
}