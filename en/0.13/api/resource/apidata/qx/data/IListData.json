{
  "className": "qx.data.IListData",
  "packageName": "qx.data",
  "name": "IListData",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 664
      },
      "end": {
        "line": 99,
        "column": 3,
        "index": 3084
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This interface defines a data structure compatible with the data binding\n controllers.\n It defines a minimum of functionality which the controller need to work.</p>"
        }
      ]
    }
  },
  "type": "interface",
  "events": {
    "change": {
      "type": "event",
      "name": "change",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The change event which will be fired if there is a change in the data structure.\n The data contains a map with three key value pairs:\n <li>start: The start index of the change.</li>\n <li>end: The end index of the change.</li>\n <li>type: The type of the change as a String. This can be 'add',\n 'remove', 'order' or 'add/remove'</li>\n <li>added: The items which has been added (as a JavaScript array)</li>\n <li>removed: The items which has been removed (as a JavaScript array)</li></p>"
          }
        ]
      }
    },
    "changeLength": {
      "type": "event",
      "name": "changeLength",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The changeLength event will be fired every time the length of the\n data structure changes.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "getItem": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1678
        },
        "end": {
          "line": 53,
          "column": 21,
          "index": 1695
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the item at the given index</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index requested of the data element.",
            "paramName": "index",
            "description": " The index requested of the data element.",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The element at the given index.",
            "type": "var",
            "description": " The element at the given index."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setItem": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1942
        },
        "end": {
          "line": 62,
          "column": 27,
          "index": 1965
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the given item at the given position in the data structure. A\n change event has to be fired.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index of the data element.",
            "paramName": "index",
            "description": " The index of the data element.",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "item {var} The new item to set.",
            "paramName": "item",
            "description": " The new item to set.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "splice": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2486
        },
        "end": {
          "line": 75,
          "column": 42,
          "index": 2524
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method to remove and add new element to the data. For every remove or\n add a change event should be fired.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startIndex {Integer} The index where the splice should start",
            "paramName": "startIndex",
            "description": " The index where the splice should start",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "amount {Integer} Defines number of element which will be removed\n   at the given position.",
            "paramName": "amount",
            "description": " Defines number of element which will be removed\n   at the given position.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "varargs {var} All following parameters will be added at the given\n   position to the array.",
            "paramName": "varargs",
            "description": " All following parameters will be added at the given\n   position to the array.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array} An array containing the removed elements.",
            "type": "qx.data.Array",
            "description": " An array containing the removed elements."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "contains": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2763
        },
        "end": {
          "line": 83,
          "column": 21,
          "index": 2780
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check if the given item is in the current data structure.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} The item which is possibly in the data structure.",
            "paramName": "item",
            "description": " The item which is possibly in the data structure.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true, if the array contains the given item.",
            "type": "Boolean",
            "description": " true, if the array contains the given item."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLength": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2933
        },
        "end": {
          "line": 90,
          "column": 18,
          "index": 2947
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current length of the data structure.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The current length of the data structure.",
            "type": "Number",
            "description": " The current length of the data structure."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "toArray": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 3064
        },
        "end": {
          "line": 97,
          "column": 16,
          "index": 3076
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the list data as native array.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The native array.",
            "type": "qx.data.Array",
            "description": " The native array."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}