{
  "version": 0.3,
  "lastModified": 1735341601939,
  "lastModifiedIso": "2024-12-27T23:20:01.939Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/data/marshal/IMarshaler.js",
  "type": "interface",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 595
    },
    "end": {
      "line": 46,
      "column": 3,
      "index": 1536
    }
  },
  "className": "qx.data.marshal.IMarshaler",
  "jsdoc": {
    "raw": [
      "*",
      " * Defines the methods needed by every marshaler which should work with the",
      " * qooxdoo data stores.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Defines the methods needed by every marshaler which should work with the\n qooxdoo data stores.</p>"
      }
    ]
  },
  "members": {
    "toClass": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates for the given data the needed classes. The classes contain for",
          "     * every key in the data a property. The classname is always the prefix",
          "     * <code>qx.data.model</code>. Two objects containing the same keys will not",
          "     * create two different classes.",
          "     *",
          "     * @param data {Object} The object for which classes should be created.",
          "     * @param includeBubbleEvents {Boolean} Whether the model should support",
          "     *   the bubbling of change events or not.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates for the given data the needed classes. The classes contain for\n every key in the data a property. The classname is always the prefix\n <code>qx.data.model</code>. Two objects containing the same keys will not\n create two different classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {Object} The object for which classes should be created.",
            "paramName": "data",
            "description": " The object for which classes should be created.",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "includeBubbleEvents {Boolean} Whether the model should support\n   the bubbling of change events or not.",
            "paramName": "includeBubbleEvents",
            "description": " Whether the model should support\n   the bubbling of change events or not.",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 1159
        },
        "end": {
          "line": 34,
          "column": 41,
          "index": 1196
        }
      },
      "type": "function",
      "params": [
        {
          "name": "data",
          "type": "Record<any, any>"
        },
        {
          "name": "includeBubbleEvents",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "toModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates for the given data the needed models. Be sure to have the classes",
          "     * created with {@link #toClass} before calling this method.",
          "     *",
          "     * @param data {Object} The object for which models should be created.",
          "     *",
          "     * @return {qx.core.Object} The created model object.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates for the given data the needed models. Be sure to have the classes\n created with {@link #toClass} before calling this method.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {Object} The object for which models should be created.",
            "paramName": "data",
            "description": " The object for which models should be created.",
            "type": "Record<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object} The created model object.",
            "type": "qx.core.Object",
            "description": "The created model object."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1512
        },
        "end": {
          "line": 44,
          "column": 20,
          "index": 1528
        }
      },
      "type": "function",
      "params": [
        {
          "name": "data",
          "type": "Record<any, any>"
        }
      ],
      "returnType": {
        "type": "qx.core.Object"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}