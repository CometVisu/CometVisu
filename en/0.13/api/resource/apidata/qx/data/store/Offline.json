{
  "className": "qx.data.store.Offline",
  "packageName": "qx.data.store",
  "name": "Offline",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 889
      },
      "end": {
        "line": 170,
        "column": 3,
        "index": 4225
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This store is a read / write store for local or session storage.\n It can be used like any other store by setting and manipulating the model\n property or the model itself. Please keep in mind that if you want to have\n the update functionality, you have to use a model which supports the\n {@link qx.data.marshal.MEventBubbling#changeBubble} event.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1305
      },
      "end": {
        "line": 63,
        "column": 3,
        "index": 1926
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "key {String} A unique key which is used to store the data.",
          "paramName": "key",
          "description": " A unique key which is used to store the data.",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "storage {String?} Either \"local\" or \"session\" to determinate which\n   storage should be used. Default: \"local\"",
          "paramName": "storage",
          "description": " Either \"local\" or \"session\" to determinate which\n   storage should be used. Default: \"local\"",
          "optional": true,
          "type": "String"
        },
        {
          "name": "@param",
          "body": "delegate {Object} An object containing one of the methods described\n   in {@link qx.data.marshal.IMarshalerDelegate}.",
          "paramName": "delegate",
          "description": " An object containing one of the methods described\n   in {@link qx.data.marshal.IMarshalerDelegate}.",
          "type": "Object"
        }
      ]
    }
  },
  "properties": {
    "model": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2097
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2188
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Property for holding the loaded model instance. Please keep in mind to\n use a model supporting the changeBubble event.</p>"
          }
        ]
      },
      "name": "model",
      "propertyType": "new",
      "event": "changeModel",
      "apply": "_applyModel",
      "nullable": true,
      "allowNull": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "statics": {
    "STORE_MODEL_DELAY": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2318
        },
        "end": {
          "line": 81,
          "column": 26,
          "index": 2340
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Defines the delay between the requested and actual execution of the setItem method</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "members": {
    "_storage": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2364
        },
        "end": {
          "line": 85,
          "column": 18,
          "index": 2378
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__modelListenerId": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2385
        },
        "end": {
          "line": 87,
          "column": 27,
          "index": 2408
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__storeModel": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2508
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2647
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The actual method that will called after a delay of STORE<em>MODEL</em>DELAY</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_applyModel": {
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2676
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 3136
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "model"
      ]
    },
    "_storeModel": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3259
        },
        "end": {
          "line": 124,
          "column": 21,
          "index": 3276
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for writing the set model to the browser storage.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_initializeModel": {
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3361
        },
        "end": {
          "line": 131,
          "column": 5,
          "index": 3443
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for reading the model from the browser storage.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_setModel": {
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3596
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 3908
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Responsible for creating the model read from the browser storage.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {var} The data read from the storage.",
            "paramName": "data",
            "description": " The data read from the storage.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getKey": {
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 4023
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 4063
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Accessor for the unique key used to store the data.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The key.",
            "type": "String",
            "description": " The key."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getModel": {
      "type": "function",
      "name": "getModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>model</code>.\n\nFor further details take a look at the property definition: {@link #model}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for model"
          }
        ]
      }
    },
    "setModel": {
      "type": "function",
      "name": "setModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>model</code>.\n\nFor further details take a look at the property definition: {@link #model}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for model"
          }
        ]
      }
    },
    "resetModel": {
      "type": "function",
      "name": "resetModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>model</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #model}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 161,
        "column": 2,
        "index": 4072
      },
      "end": {
        "line": 169,
        "column": 3,
        "index": 4221
      }
    }
  },
  "descendants": []
}