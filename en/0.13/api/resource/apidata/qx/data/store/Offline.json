{
  "version": 0.3,
  "lastModified": 1722153601199,
  "lastModifiedIso": "2024-07-28T08:00:01.199Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/data/store/Offline.js",
  "type": "class",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 889
    },
    "end": {
      "line": 170,
      "column": 3,
      "index": 4225
    }
  },
  "className": "qx.data.store.Offline",
  "jsdoc": {
    "raw": [
      "*",
      " * This store is a read / write store for local or session storage.",
      " * It can be used like any other store by setting and manipulating the model",
      " * property or the model itself. Please keep in mind that if you want to have",
      " * the update functionality, you have to use a model which supports the",
      " * {@link qx.data.marshal.MEventBubbling#changeBubble} event.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This store is a read / write store for local or session storage.\n It can be used like any other store by setting and manipulating the model\n property or the model itself. Please keep in mind that if you want to have\n the update functionality, you have to use a model which supports the\n {@link qx.data.marshal.MEventBubbling#changeBubble} event.</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "key"
      },
      {
        "name": "storage"
      },
      {
        "name": "delegate"
      }
    ],
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1305
      },
      "end": {
        "line": 63,
        "column": 3,
        "index": 1926
      }
    }
  },
  "properties": {
    "model": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2097
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2188
        }
      },
      "json": {
        "nullable": true,
        "event": "changeModel",
        "apply": "_applyModel"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Property for holding the loaded model instance. Please keep in mind to",
          "     * use a model supporting the changeBubble event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Property for holding the loaded model instance. Please keep in mind to\n use a model supporting the changeBubble event.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "statics": {
    "STORE_MODEL_DELAY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Defines the delay between the requested and actual execution of the setItem method",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Defines the delay between the requested and actual execution of the setItem method</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2318
        },
        "end": {
          "line": 81,
          "column": 26,
          "index": 2340
        }
      },
      "appearsIn": []
    }
  },
  "members": {
    "_storage": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2364
        },
        "end": {
          "line": 85,
          "column": 18,
          "index": 2378
        }
      },
      "appearsIn": []
    },
    "__modelListenerId": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2385
        },
        "end": {
          "line": 87,
          "column": 27,
          "index": 2408
        }
      },
      "appearsIn": []
    },
    "__storeModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The actual method that will called after a delay of STORE_MODEL_DELAY",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The actual method that will called after a delay of STORE<em>MODEL</em>DELAY</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2508
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2647
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyModel": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2676
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 3136
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_storeModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper for writing the set model to the browser storage.",
          "     *",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for writing the set model to the browser storage.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3259
        },
        "end": {
          "line": 124,
          "column": 21,
          "index": 3276
        }
      },
      "appearsIn": []
    },
    "_initializeModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper for reading the model from the browser storage.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for reading the model from the browser storage.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3361
        },
        "end": {
          "line": 131,
          "column": 5,
          "index": 3443
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_setModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Responsible for creating the model read from the browser storage.",
          "     * @param data {var} The data read from the storage.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Responsible for creating the model read from the browser storage.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {var} The data read from the storage.",
            "paramName": "data",
            "description": " The data read from the storage.",
            "type": "var"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3596
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 3908
        }
      },
      "type": "function",
      "params": [
        {
          "name": "data",
          "type": "var"
        }
      ],
      "appearsIn": []
    },
    "getKey": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Accessor for the unique key used to store the data.",
          "     * @return {String} The key.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Accessor for the unique key used to store the data.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The key.",
            "type": "string",
            "description": "The key."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 4023
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 4063
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 161,
        "column": 2,
        "index": 4072
      },
      "end": {
        "line": 169,
        "column": 3,
        "index": 4221
      }
    }
  }
}