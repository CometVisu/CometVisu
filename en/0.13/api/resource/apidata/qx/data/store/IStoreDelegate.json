{
  "version": 0.3,
  "lastModified": 1717235171454,
  "lastModifiedIso": "2024-06-01T09:46:11.454Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/data/store/IStoreDelegate.js",
  "type": "interface",
  "location": {
    "start": {
      "line": 30,
      "column": 0,
      "index": 994
    },
    "end": {
      "line": 51,
      "column": 3,
      "index": 1616
    }
  },
  "className": "qx.data.store.IStoreDelegate",
  "jsdoc": {
    "raw": [
      "*",
      " * Objects, which are used as delegates for a data binding store may",
      " * implement any of the methods described in this interface. The delegate does",
      " * not need implement all of the methods of this interface. If a method is not",
      " * implemented the store provides a default implementation.",
      " *",
      " * Note: This interface is meant to document the delegate but should not be",
      " * listed in the <code>implement</code> key of a class unless all methods are",
      " * really implemented.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Objects, which are used as delegates for a data binding store may\n implement any of the methods described in this interface. The delegate does\n not need implement all of the methods of this interface. If a method is not\n implemented the store provides a default implementation.\n Note: This interface is meant to document the delegate but should not be\n listed in the <code>implement</code> key of a class unless all methods are\n really implemented.</p>"
      }
    ]
  },
  "superClass": "qx.data.marshal.IMarshalerDelegate",
  "members": {
    "manipulateData": {
      "jsdoc": {
        "raw": [
          "*",
          "     * This method manipulates the data from the request and returns the",
          "     * manipulated data.",
          "     *",
          "     * @param data {Object} The data received by the request.",
          "     * @return {Object} The manipulated data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method manipulates the data from the request and returns the\n manipulated data.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {Object} The data received by the request.",
            "paramName": "data",
            "description": " The data received by the request.",
            "type": "Record<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The manipulated data.",
            "type": "Record<any, any>",
            "description": "The manipulated data."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1341
        },
        "end": {
          "line": 41,
          "column": 27,
          "index": 1364
        }
      },
      "type": "function",
      "params": [
        {
          "name": "data",
          "type": "Record<any, any>"
        }
      ],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    },
    "configureRequest": {
      "jsdoc": {
        "raw": [
          "*",
          "     * This method can change the settings on the used request by the store.",
          "     *",
          "     * @param request {var} The created request, depending on the implementation",
          "     *   of the data store.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method can change the settings on the used request by the store.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "request {var} The created request, depending on the implementation\n   of the data store.",
            "paramName": "request",
            "description": " The created request, depending on the implementation\n   of the data store.",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1580
        },
        "end": {
          "line": 49,
          "column": 32,
          "index": 1608
        }
      },
      "type": "function",
      "params": [
        {
          "name": "request",
          "type": "var"
        }
      ],
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}