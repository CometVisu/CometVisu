{
  "className": "qx.dom.Node",
  "packageName": "qx.dom",
  "name": "Node",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0,
        "index": 530
      },
      "end": {
        "line": 286,
        "column": 3,
        "index": 7822
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Basic node creation and type detection</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "ELEMENT": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1263
        },
        "end": {
          "line": 52,
          "column": 14,
          "index": 1273
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Node type:\n* ELEMENT\n* ATTRIBUTE\n* TEXT\n* CDATA_SECTION\n* ENTITY_REFERENCE\n* ENTITY\n* PROCESSING_INSTRUCTION\n* COMMENT\n* DOCUMENT\n* DOCUMENT_TYPE\n* DOCUMENT_FRAGMENT\n* NOTATION"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "ATTRIBUTE": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1279
        },
        "end": {
          "line": 53,
          "column": 16,
          "index": 1291
        }
      },
      "type": "variable",
      "access": "public"
    },
    "TEXT": {
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 1297
        },
        "end": {
          "line": 54,
          "column": 11,
          "index": 1304
        }
      },
      "type": "variable",
      "access": "public"
    },
    "CDATA_SECTION": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1310
        },
        "end": {
          "line": 55,
          "column": 20,
          "index": 1326
        }
      },
      "type": "variable",
      "access": "public"
    },
    "ENTITY_REFERENCE": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1332
        },
        "end": {
          "line": 56,
          "column": 23,
          "index": 1351
        }
      },
      "type": "variable",
      "access": "public"
    },
    "ENTITY": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1357
        },
        "end": {
          "line": 57,
          "column": 13,
          "index": 1366
        }
      },
      "type": "variable",
      "access": "public"
    },
    "PROCESSING_INSTRUCTION": {
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 1372
        },
        "end": {
          "line": 58,
          "column": 29,
          "index": 1397
        }
      },
      "type": "variable",
      "access": "public"
    },
    "COMMENT": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1403
        },
        "end": {
          "line": 59,
          "column": 14,
          "index": 1413
        }
      },
      "type": "variable",
      "access": "public"
    },
    "DOCUMENT": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1419
        },
        "end": {
          "line": 60,
          "column": 15,
          "index": 1430
        }
      },
      "type": "variable",
      "access": "public"
    },
    "DOCUMENT_TYPE": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1436
        },
        "end": {
          "line": 61,
          "column": 21,
          "index": 1453
        }
      },
      "type": "variable",
      "access": "public"
    },
    "DOCUMENT_FRAGMENT": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1459
        },
        "end": {
          "line": 62,
          "column": 25,
          "index": 1480
        }
      },
      "type": "variable",
      "access": "public"
    },
    "NOTATION": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1486
        },
        "end": {
          "line": 63,
          "column": 16,
          "index": 1498
        }
      },
      "type": "variable",
      "access": "public"
    },
    "getDocument": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 1917
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2112
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the owner document of the given node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node|Document|Window} the node which should be tested",
            "paramName": "node",
            "description": " the node which should be tested",
            "type": [
              "Node",
              "Document",
              "Window"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Document|null} The document of the given DOM node",
            "type": "Document|null",
            "description": " The document of the given DOM node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getWindow": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2330
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 2638
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the DOM2 <code>defaultView</code> (window).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node|Document|Window} node to inspect",
            "paramName": "node",
            "description": " node to inspect",
            "type": [
              "Node",
              "Document",
              "Window"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Window} the <code>defaultView</code> of the given node",
            "type": "Window",
            "description": " the <code>defaultView</code> of the given node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentElement": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3054
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 3139
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the document element. (Logical root node)\n This is a convenience attribute that allows direct access to the child\n node that is the root element of the document. For HTML documents,\n this is the element with the tagName \"HTML\".</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node|Document|Window} node to inspect",
            "paramName": "node",
            "description": " node to inspect",
            "type": [
              "Node",
              "Document",
              "Window"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} document element of the given node",
            "type": "qx.dom.Element",
            "description": " document element of the given node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getBodyElement": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3458
        },
        "end": {
          "line": 130,
          "column": 5,
          "index": 3528
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the body element. (Visual root node)\n This normally only makes sense for HTML documents. It returns\n the content area of the HTML document.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node|Document|Window} node to inspect",
            "paramName": "node",
            "description": " node to inspect",
            "type": [
              "Node",
              "Document",
              "Window"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} document body of the given node",
            "type": "qx.dom.Element",
            "description": " document body of the given node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isNode": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3910
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 3978
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given object is a DOM node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node which should be tested",
            "paramName": "node",
            "description": " the node which should be tested",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the node is a DOM node",
            "type": "Boolean",
            "description": " true if the node is a DOM node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isElement": {
      "location": {
        "start": {
          "line": 154,
          "column": 4,
          "index": 4179
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 4259
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given object is a DOM element node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node which should be tested",
            "paramName": "node",
            "description": " the node which should be tested",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the node is a DOM element",
            "type": "Boolean",
            "description": " true if the node is a DOM element"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isDocument": {
      "location": {
        "start": {
          "line": 164,
          "column": 4,
          "index": 4464
        },
        "end": {
          "line": 166,
          "column": 5,
          "index": 4546
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given object is a DOM document node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node which should be tested",
            "paramName": "node",
            "description": " the node which should be tested",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the node is a DOM document",
            "type": "Boolean",
            "description": " true when the node is a DOM document"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isDocumentFragment": {
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 4769
        },
        "end": {
          "line": 176,
          "column": 5,
          "index": 4868
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given object is a DOM document fragment node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node which should be tested",
            "paramName": "node",
            "description": " the node which should be tested",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the node is a DOM document fragment",
            "type": "Boolean",
            "description": " true when the node is a DOM document fragment"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isText": {
      "location": {
        "start": {
          "line": 184,
          "column": 4,
          "index": 5068
        },
        "end": {
          "line": 186,
          "column": 5,
          "index": 5142
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given object is a DOM text node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node which should be tested",
            "paramName": "node",
            "description": " the node which should be tested",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the node is a DOM text node",
            "type": "Boolean",
            "description": " true if the node is a DOM text node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isWindow": {
      "location": {
        "start": {
          "line": 194,
          "column": 4,
          "index": 5362
        },
        "end": {
          "line": 196,
          "column": 5,
          "index": 5452
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the given object is a browser window object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} the object which should be tested",
            "paramName": "obj",
            "description": " the object which should be tested",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the object is a window object",
            "type": "Boolean",
            "description": " true if the object is a window object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isNodeName": {
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5690
        },
        "end": {
          "line": 211,
          "column": 5,
          "index": 5871
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the node has the given node name</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node",
            "paramName": "node",
            "description": " the node",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "nodeName {String} the node name to check for",
            "paramName": "nodeName",
            "description": " the node name to check for",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the node has the given node name",
            "type": "Boolean",
            "description": " Whether the node has the given node name"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getName": {
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 6211
        },
        "end": {
          "line": 231,
          "column": 5,
          "index": 6341
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the node name as lower case string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node",
            "paramName": "node",
            "description": " the node",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the node name",
            "type": "String",
            "description": " the node name"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getText": {
      "location": {
        "start": {
          "line": 242,
          "column": 4,
          "index": 6800
        },
        "end": {
          "line": 266,
          "column": 5,
          "index": 7336
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the text content of an node where the node may be of node type\n NODE<em>ELEMENT, NODE</em>ATTRIBUTE, NODE<em>TEXT or NODE</em>CDATA</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} the node from where the search should start.\n     If the node has subnodes the text contents are recursively retreived and joined.",
            "paramName": "node",
            "description": " the node from where the search should start.\n     If the node has subnodes the text contents are recursively retreived and joined.",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the joined text content of the given node or null if not appropriate.",
            "type": "String",
            "description": " the joined text content of the given node or null if not appropriate."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(node)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isBlockNode": {
      "location": {
        "start": {
          "line": 274,
          "column": 4,
          "index": 7497
        },
        "end": {
          "line": 284,
          "column": 5,
          "index": 7814
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the given node is a block node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} Node",
            "paramName": "node",
            "description": " Node",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether it is a block node",
            "type": "Boolean",
            "description": " whether it is a block node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}