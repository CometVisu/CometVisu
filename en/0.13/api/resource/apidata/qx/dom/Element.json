{
  "className": "qx.dom.Element",
  "packageName": "qx.dom",
  "name": "Element",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 624
      },
      "end": {
        "line": 362,
        "column": 3,
        "index": 10278
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Manages children structures of an element. Easy and convenient APIs\n to insert, remove and replace children.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "hasChild": {
      "location": {
        "start": {
          "line": 32,
          "column": 4,
          "index": 973
        },
        "end": {
          "line": 34,
          "column": 5,
          "index": 1048
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given <code>child</code> is a child of <code>parent</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parent {Element} parent element",
            "paramName": "parent",
            "description": " parent element",
            "type": "qx.dom.Element"
          },
          {
            "name": "@param",
            "body": "child {Node} child node",
            "paramName": "child",
            "description": " child node",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the given <code>child</code> is a child of <code>parent</code>",
            "type": "Boolean",
            "description": " true when the given <code>child</code> is a child of <code>parent</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hasChildren": {
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1288
        },
        "end": {
          "line": 44,
          "column": 5,
          "index": 1353
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given <code>element</code> has children.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} element to test",
            "paramName": "element",
            "description": " element to test",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the given <code>element</code> has at least one child node",
            "type": "Boolean",
            "description": " true when the given <code>element</code> has at least one child node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hasChildElements": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1606
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1852
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given <code>element</code> has any child elements.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} element to test",
            "paramName": "element",
            "description": " element to test",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the given <code>element</code> has at least one child element",
            "type": "Boolean",
            "description": " true when the given <code>element</code> has at least one child element"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getParentElement": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2053
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2121
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the parent element of the given element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} Element to find the parent for",
            "paramName": "element",
            "description": " Element to find the parent for",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} The parent element",
            "type": "qx.dom.Element",
            "description": " The parent element"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isInDom": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2512
        },
        "end": {
          "line": 99,
          "column": 5,
          "index": 2846
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the <code>element</code> is in the DOM, but note that\n the method is very expensive!</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} The DOM element to check.",
            "paramName": "element",
            "description": " The DOM element to check.",
            "type": "qx.dom.Element"
          },
          {
            "name": "@param",
            "body": "win {Window} The window to check for.",
            "paramName": "win",
            "description": " The window to check for.",
            "type": "Window"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the <code>element</code> is in\n          the DOM, <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> if the <code>element</code> is in\n          the DOM, <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "insertAt": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3373
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3597
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Inserts <code>node</code> at the given <code>index</code>\n inside <code>parent</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} node to insert",
            "paramName": "node",
            "description": " node to insert",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "parent {Element} parent element node",
            "paramName": "parent",
            "description": " parent element node",
            "type": "qx.dom.Element"
          },
          {
            "name": "@param",
            "body": "index {Integer} where to insert",
            "paramName": "index",
            "description": " where to insert",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} returns true (successful)",
            "type": "Boolean",
            "description": " returns true (successful)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "insertBegin": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 3914
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 4113
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Insert <code>node</code> into <code>parent</code> as first child.\n Indexes of other children will be incremented by one.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} Node to insert",
            "paramName": "node",
            "description": " Node to insert",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "parent {Element} parent element node",
            "paramName": "parent",
            "description": " parent element node",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} returns true (successful)",
            "type": "Boolean",
            "description": " returns true (successful)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "insertEnd": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 4367
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4452
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Insert <code>node</code> into <code>parent</code> as last child.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} Node to insert",
            "paramName": "node",
            "description": " Node to insert",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "parent {Element} parent element node",
            "paramName": "parent",
            "description": " parent element node",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} returns true (successful)",
            "type": "Boolean",
            "description": " returns true (successful)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "insertBefore": {
      "location": {
        "start": {
          "line": 164,
          "column": 4,
          "index": 4736
        },
        "end": {
          "line": 167,
          "column": 5,
          "index": 4835
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Inserts <code>node</code> before <code>ref</code> in the same parent.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} Node to insert",
            "paramName": "node",
            "description": " Node to insert",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "ref {Node} Node which will be used as reference for insertion",
            "paramName": "ref",
            "description": " Node which will be used as reference for insertion",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} returns true (successful)",
            "type": "Boolean",
            "description": " returns true (successful)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "insertAfter": {
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 5118
        },
        "end": {
          "line": 186,
          "column": 5,
          "index": 5365
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Inserts <code>node</code> after <code>ref</code> in the same parent.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} Node to insert",
            "paramName": "node",
            "description": " Node to insert",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "ref {Node} Node which will be used as reference for insertion",
            "paramName": "ref",
            "description": " Node which will be used as reference for insertion",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} returns true (successful)",
            "type": "Boolean",
            "description": " returns true (successful)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 201,
          "column": 4,
          "index": 5825
        },
        "end": {
          "line": 208,
          "column": 5,
          "index": 5973
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given <code>node</code> from its parent element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} Node to remove",
            "paramName": "node",
            "description": " Node to remove",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when node was successfully removed,\n   otherwise <code>false</code>",
            "type": "Boolean",
            "description": " <code>true</code> when node was successfully removed,\n   otherwise <code>false</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeChild": {
      "location": {
        "start": {
          "line": 218,
          "column": 4,
          "index": 6327
        },
        "end": {
          "line": 225,
          "column": 5,
          "index": 6489
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given <code>node</code> from the <code>parent</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} Node to remove",
            "paramName": "node",
            "description": " Node to remove",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "parent {Element} parent element which contains the <code>node</code>",
            "paramName": "parent",
            "description": " parent element which contains the <code>node</code>",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when node was successfully removed,\n   otherwise <code>false</code>",
            "type": "Boolean",
            "description": " <code>true</code> when node was successfully removed,\n   otherwise <code>false</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeChildAt": {
      "location": {
        "start": {
          "line": 236,
          "column": 4,
          "index": 6865
        },
        "end": {
          "line": 245,
          "column": 5,
          "index": 7058
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the node at the given <code>index</code>\n from the <code>parent</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} position of the node which should be removed",
            "paramName": "index",
            "description": " position of the node which should be removed",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "parent {Element} parent DOM element",
            "paramName": "parent",
            "description": " parent DOM element",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when node was successfully removed,\n   otherwise <code>false</code>",
            "type": "Boolean",
            "description": " <code>true</code> when node was successfully removed,\n   otherwise <code>false</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "replaceChild": {
      "location": {
        "start": {
          "line": 261,
          "column": 4,
          "index": 7585
        },
        "end": {
          "line": 268,
          "column": 5,
          "index": 7770
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replaces <code>oldNode</code> with <code>newNode</code> in the current\n parent of <code>oldNode</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "newNode {Node} DOM node to insert",
            "paramName": "newNode",
            "description": " DOM node to insert",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "oldNode {Node} DOM node to remove",
            "paramName": "oldNode",
            "description": " DOM node to remove",
            "type": "qx.dom.Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when node was successfully replaced",
            "type": "Boolean",
            "description": " <code>true</code> when node was successfully replaced"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "replaceAt": {
      "location": {
        "start": {
          "line": 279,
          "column": 4,
          "index": 8144
        },
        "end": {
          "line": 288,
          "column": 5,
          "index": 8358
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replaces the node at <code>index</code> with <code>newNode</code> in\n the given parent.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "newNode {Node} DOM node to insert",
            "paramName": "newNode",
            "description": " DOM node to insert",
            "type": "qx.dom.Node"
          },
          {
            "name": "@param",
            "body": "index {Integer} position of old DOM node",
            "paramName": "index",
            "description": " position of old DOM node",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "parent {Element} parent DOM element",
            "paramName": "parent",
            "description": " parent DOM element",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when node was successfully replaced",
            "type": "Boolean",
            "description": " <code>true</code> when node was successfully replaced"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__helperElement": {
      "location": {
        "start": {
          "line": 295,
          "column": 4,
          "index": 8472
        },
        "end": {
          "line": 295,
          "column": 23,
          "index": 8491
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stores helper element for element creation in WebKit</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "getHelperElement": {
      "location": {
        "start": {
          "line": 303,
          "column": 4,
          "index": 8689
        },
        "end": {
          "line": 324,
          "column": 5,
          "index": 9346
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates and returns a DOM helper element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {Window?} Window to create the element for",
            "paramName": "win",
            "description": " Window to create the element for",
            "optional": true,
            "type": "Window"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} The created element node",
            "type": "qx.dom.Element",
            "description": " The created element node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "create": {
      "location": {
        "start": {
          "line": 334,
          "column": 4,
          "index": 9638
        },
        "end": {
          "line": 350,
          "column": 5,
          "index": 10012
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a DOM element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Tag name of the element",
            "paramName": "name",
            "description": " Tag name of the element",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "attributes {Map?} Map of attributes to apply",
            "paramName": "attributes",
            "description": " Map of attributes to apply",
            "optional": true,
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "win {Window?} Window to create the element for",
            "paramName": "win",
            "description": " Window to create the element for",
            "optional": true,
            "type": "Window"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} The created element node",
            "type": "qx.dom.Element",
            "description": " The created element node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "empty": {
      "location": {
        "start": {
          "line": 358,
          "column": 4,
          "index": 10205
        },
        "end": {
          "line": 360,
          "column": 5,
          "index": 10268
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes all content from the given element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} element to clean",
            "paramName": "element",
            "description": " element to clean",
            "type": "qx.dom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} empty string (new HTML content)",
            "type": "String",
            "description": " empty string (new HTML content)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}