{
  "version": 0.3,
  "lastModified": 1717235171686,
  "lastModifiedIso": "2024-06-01T09:46:11.686Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/app/ManifestFont.js",
  "type": "class",
  "location": {
    "start": {
      "line": 31,
      "column": 0,
      "index": 868
    },
    "end": {
      "line": 183,
      "column": 3,
      "index": 4800
    }
  },
  "className": "qx.tool.compiler.app.ManifestFont",
  "jsdoc": {
    "raw": [
      "*",
      " * Represents a font as defined in the Manifest.json's",
      " *",
      " * @typedef Sources",
      " * @param {String?} family the family name that is in the font files (defaults to the name of the font)",
      " * @param {String[]?} paths the filenames of font files inside the resources dircetory",
      " * @param {String[]?} urls the urls of font files in a CDN",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Represents a font as defined in the Manifest.json's</p>"
      }
    ],
    "@typedef": [
      {
        "name": "@typedef",
        "body": "Sources"
      }
    ],
    "@param": [
      {
        "name": "@param",
        "body": "{String?} family the family name that is in the font files (defaults to the name of the font)"
      },
      {
        "name": "@param",
        "body": "{String[]?} paths the filenames of font files inside the resources dircetory"
      },
      {
        "name": "@param",
        "body": "{String[]?} urls the urls of font files in a CDN"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "name"
      }
    ],
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 952
      },
      "end": {
        "line": 37,
        "column": 3,
        "index": 1010
      }
    }
  },
  "properties": {
    "name": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1115
        },
        "end": {
          "line": 43,
          "column": 5,
          "index": 1150
        }
      },
      "json": {
        "check": "String"
      },
      "jsdoc": {
        "raw": [
          "* The name of the font - this is the key in Manifest.json provides.fonts "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The name of the font - this is the key in Manifest.json provides.fonts</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "defaultSize": {
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1193
        },
        "end": {
          "line": 50,
          "column": 5,
          "index": 1276
        }
      },
      "json": {
        "nullable": true,
        "check": "Integer"
      },
      "jsdoc": {
        "raw": [
          "* Default size of the font "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Default size of the font</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "comparisonString": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1323
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1410
        }
      },
      "json": {
        "nullable": true,
        "check": "String"
      },
      "jsdoc": {
        "raw": [
          "* Comparison string to be used "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Comparison string to be used</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "css": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1526
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1599
        }
      },
      "json": {
        "check": "Array",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "* CSS filenames or URLs to be loaded (indicating that font-face will be defined outside of Qooxdoo) "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>CSS filenames or URLs to be loaded (indicating that font-face will be defined outside of Qooxdoo)</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "fontFaces": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1690
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 1769
        }
      },
      "json": {
        "check": "Array",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "* Font faces that have to be defined, including the resource paths or urls "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Font faces that have to be defined, including the resource paths or urls</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "glyphs": {
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 1858
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 1935
        }
      },
      "json": {
        "nullable": true,
        "check": "String"
      },
      "jsdoc": {
        "raw": [
          "* Glyphs filename (relative to resources of the library that defines it) "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Glyphs filename (relative to resources of the library that defines it)</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "family": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 1996
        },
        "end": {
          "line": 85,
          "column": 5,
          "index": 2072
        }
      },
      "json": {
        "nullable": true,
        "check": "Array"
      },
      "jsdoc": {
        "raw": [
          "* Family names for the browser to search for "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Family names for the browser to search for</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__fontData": {
      "jsdoc": {
        "raw": [
          "* @type{Map<String,Object>} font data required by the Qooxdoo app at runtime "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map<String,Object>} font data required by the Qooxdoo app at runtime"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2182
        },
        "end": {
          "line": 90,
          "column": 20,
          "index": 2198
        }
      },
      "appearsIn": []
    },
    "updateFromManifest": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates this from the data in the Manifest.json",
          "     *",
          "     * @param {Object} data the data from Manifest",
          "     * @param {qx.tool.compiler.app.Library} library the library",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates this from the data in the Manifest.json</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{Object} data the data from Manifest",
            "paramName": "data",
            "description": "the data from Manifest",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "{qx.tool.compiler.app.Library} library the library",
            "paramName": "library",
            "description": "the library",
            "type": "qx.tool.compiler.app.Library"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2399
        },
        "end": {
          "line": 135,
          "column": 5,
          "index": 3474
        }
      },
      "type": "function",
      "params": [
        {
          "name": "data",
          "type": "Record<any, any>"
        },
        {
          "name": "library",
          "type": "qx.tool.compiler.app.Library"
        }
      ],
      "appearsIn": []
    },
    "getApplicationFontData": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Generates the font data used by the application; loads the data if not already loaded",
          "     *",
          "     * @returns {Map<String,Object>}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates the font data used by the application; loads the data if not already loaded</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map<String,Object>}",
            "type": "Map<String,Object>",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 3634
        },
        "end": {
          "line": 144,
          "column": 5,
          "index": 3696
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Map<String,Object>"
      },
      "appearsIn": []
    },
    "getBootstrapCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Return bootstrap code that is executed before the Application starts.",
          "     *",
          "     * @param {qx.tool.compiler.targets.Target} target the target",
          "     * @param {qx.tool.compiler.app.Application} application the application being built",
          "     * @param {Boolean} useLocalFonts whether to use local fonts or use CSS",
          "     * @return {String} code to include in the output",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return bootstrap code that is executed before the Application starts.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{qx.tool.compiler.targets.Target} target the target",
            "paramName": "target",
            "description": "the target",
            "type": "qx.tool.compiler.targets.Target"
          },
          {
            "name": "@param",
            "body": "{qx.tool.compiler.app.Application} application the application being built",
            "paramName": "application",
            "description": "the application being built",
            "type": "qx.tool.compiler.app.Application"
          },
          {
            "name": "@param",
            "body": "{Boolean} useLocalFonts whether to use local fonts or use CSS",
            "paramName": "useLocalFonts",
            "description": "whether to use local fonts or use CSS",
            "type": "boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} code to include in the output",
            "type": "string",
            "description": "code to include in the output"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 154,
          "column": 4,
          "index": 4088
        },
        "end": {
          "line": 181,
          "column": 5,
          "index": 4792
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target",
          "type": "qx.tool.compiler.targets.Target"
        },
        {
          "name": "application",
          "type": "qx.tool.compiler.app.Application"
        },
        {
          "name": "useLocalFonts",
          "type": "boolean"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    }
  },
  "statics": {}
}