{
  "version": 0.3,
  "lastModified": 1717235171874,
  "lastModifiedIso": "2024-06-01T09:46:11.874Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/log/appender/NodeConsole.js",
  "type": "class",
  "location": {
    "start": {
      "line": 27,
      "column": 0,
      "index": 691
    },
    "end": {
      "line": 147,
      "column": 3,
      "index": 3428
    }
  },
  "className": "qx.log.appender.NodeConsole",
  "jsdoc": {
    "raw": [
      "*",
      " * Log appender for qooxdoo applications running in Node.js. Writes log",
      " * messages to STDOUT/STDERR.",
      " *",
      " * @ignore(process.*)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Log appender for qooxdoo applications running in Node.js. Writes log\n messages to STDOUT/STDERR.</p>"
      }
    ],
    "@ignore": [
      {
        "name": "@ignore",
        "body": "process.*"
      }
    ]
  },
  "statics": {
    "__OUT": {
      "jsdoc": {
        "raw": [
          "*",
          "     * process.stdout",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>process.stdout</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 32,
          "column": 4,
          "index": 795
        },
        "end": {
          "line": 32,
          "column": 15,
          "index": 806
        }
      },
      "appearsIn": []
    },
    "__ERR": {
      "jsdoc": {
        "raw": [
          "*",
          "     * process.stderr",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>process.stderr</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 850
        },
        "end": {
          "line": 36,
          "column": 15,
          "index": 861
        }
      },
      "appearsIn": []
    },
    "__useColors": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether to use color codes",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to use color codes</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 918
        },
        "end": {
          "line": 41,
          "column": 22,
          "index": 936
        }
      },
      "appearsIn": []
    },
    "__colorCodes": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Which ANSI color codes to use for which log level",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Which ANSI color codes to use for which log level</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1016
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1231
        }
      },
      "appearsIn": []
    },
    "setUseColors": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Turn the use of colors on or off",
          "     * @param {Boolean} value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Turn the use of colors on or off</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{Boolean} value",
            "paramName": "value",
            "description": "",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 1324
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 1426
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "log": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Writes a message to the shell. Errors will be sent to STDERR, everything",
          "     * else goes to STDOUT",
          "     *",
          "     * @param logMessage {String} Message to be logged",
          "     * @param level {String} Log level. One of \"debug\", \"info\", \"warn\", \"error\"",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes a message to the shell. Errors will be sent to STDERR, everything\n else goes to STDOUT</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "logMessage {String} Message to be logged",
            "paramName": "logMessage",
            "description": " Message to be logged",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "level {String} Log level. One of \"debug\", \"info\", \"warn\", \"error\"",
            "paramName": "level",
            "description": " Log level. One of \"debug\", \"info\", \"warn\", \"error\"",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1698
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 2034
        }
      },
      "type": "function",
      "params": [
        {
          "name": "logMessage",
          "type": "string"
        },
        {
          "name": "level",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "debug": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Logs a debug message",
          "     *",
          "     * @param logMessage {String} Message to be logged",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Logs a debug message</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "logMessage {String} Message to be logged",
            "paramName": "logMessage",
            "description": " Message to be logged",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2147
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2209
        }
      },
      "type": "function",
      "params": [
        {
          "name": "logMessage",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "info": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Logs an info message",
          "     *",
          "     * @param logMessage {String} Message to be logged",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Logs an info message</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "logMessage {String} Message to be logged",
            "paramName": "logMessage",
            "description": " Message to be logged",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2322
        },
        "end": {
          "line": 98,
          "column": 5,
          "index": 2382
        }
      },
      "type": "function",
      "params": [
        {
          "name": "logMessage",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "warn": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Logs a warning message",
          "     *",
          "     * @param logMessage {String} Message to be logged",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Logs a warning message</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "logMessage {String} Message to be logged",
            "paramName": "logMessage",
            "description": " Message to be logged",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2497
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 2557
        }
      },
      "type": "function",
      "params": [
        {
          "name": "logMessage",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "error": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Logs an error message",
          "     *",
          "     * @param logMessage {String} Message to be logged",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Logs an error message</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "logMessage {String} Message to be logged",
            "paramName": "logMessage",
            "description": " Message to be logged",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 2671
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 2733
        }
      },
      "type": "function",
      "params": [
        {
          "name": "logMessage",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "process": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Process a log entry object from qooxdoo's logging system.",
          "     *",
          "     * @param entry {Map} Log entry object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Process a log entry object from qooxdoo's logging system.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "entry {Map} Log entry object",
            "paramName": "entry",
            "description": " Log entry object",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 2871
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3196
        }
      },
      "type": "function",
      "params": [
        {
          "name": "entry",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}