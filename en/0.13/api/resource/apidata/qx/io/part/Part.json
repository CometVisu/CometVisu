{
  "version": 0.3,
  "lastModified": 1726088852657,
  "lastModifiedIso": "2024-09-11T21:07:32.657Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/io/part/Part.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 700
    },
    "end": {
      "line": 225,
      "column": 3,
      "index": 6447
    }
  },
  "className": "qx.io.part.Part",
  "jsdoc": {
    "raw": [
      "*",
      " * Wrapper for a part as defined in the config file. This class knows about all",
      " * packages the part depends on and provides functionality to load the part.",
      " *",
      " * @internal",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Wrapper for a part as defined in the config file. This class knows about all\n packages the part depends on and provides functionality to load the part.</p>"
      }
    ],
    "@internal": [
      {
        "name": "@internal",
        "body": ""
      }
    ]
  },
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "name"
      },
      {
        "name": "packages"
      },
      {
        "name": "loader"
      }
    ],
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 978
      },
      "end": {
        "line": 45,
        "column": 3,
        "index": 1310
      }
    }
  },
  "members": {
    "_readyState": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1330
        },
        "end": {
          "line": 48,
          "column": 21,
          "index": 1347
        }
      },
      "appearsIn": []
    },
    "_loader": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1353
        },
        "end": {
          "line": 49,
          "column": 17,
          "index": 1366
        }
      },
      "appearsIn": []
    },
    "_packages": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1372
        },
        "end": {
          "line": 50,
          "column": 19,
          "index": 1387
        }
      },
      "appearsIn": []
    },
    "__name": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1393
        },
        "end": {
          "line": 51,
          "column": 16,
          "index": 1405
        }
      },
      "appearsIn": []
    },
    "getReadyState": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the ready state of the part. The value is one of",
          "     * <ul>",
          "     * <li>",
          "     *   <b>initialized</b>: The part is initialized. The {@link #load}",
          "     *   method has not yet been called",
          "     * </li>",
          "     * <li><b>loading</b>: The part is still loading.</li>",
          "     * <li><b>complete</b>: The part has been loaded successfully</li>",
          "     * </li>",
          "     *",
          "     * @return {String} The ready state.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the ready state of the part. The value is one of\n <ul>\n <li>\n   <b>initialized</b>: The part is initialized. The {@link #load}\n   method has not yet been called\n </li>\n <li><b>loading</b>: The part is still loading.</li>\n <li><b>complete</b>: The part has been loaded successfully</li>\n </li></p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The ready state.",
            "type": "string",
            "description": "The ready state."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1828
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 1882
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getName": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The part name as defined in the config file",
          "     *",
          "     * @return {String} The part name",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The part name as defined in the config file</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The part name",
            "type": "string",
            "description": "The part name"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2001
        },
        "end": {
          "line": 77,
          "column": 5,
          "index": 2044
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getPackages": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal helper for testing purposes.",
          "     * @internal",
          "     * @return {qx.io.part.Package[]} All contained packages in an array.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for testing purposes.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.part.Package[]} All contained packages in an array.",
            "type": "qx.io.part.Package[]",
            "description": "All contained packages in an array."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2203
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2253
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.io.part.Package[]"
      },
      "appearsIn": []
    },
    "preload": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Method for preloading this part.",
          "     * Empty implementation! Regular parts can not be preloaded.",
          "     *",
          "     * @param callback {Function} Callback for the preload.",
          "     * @param self {Object?} The context of the callback.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method for preloading this part.\n Empty implementation! Regular parts can not be preloaded.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Callback for the preload.",
            "paramName": "callback",
            "description": " Callback for the preload.",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "self {Object?} The context of the callback.",
            "paramName": "self",
            "description": " The context of the callback.",
            "optional": true,
            "type": "Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2506
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2951
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "self",
          "type": "Object",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "load": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Loads the part asynchronously. The callback is called after the part and",
          "     * its dependencies are fully loaded. If the part is already loaded the",
          "     * callback is called immediately.",
          "     *",
          "     * @internal",
          "     *",
          "     * @param callback {Function} Function to execute on completion",
          "     * @param self {Object?window} Context to execute the given function in",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loads the part asynchronously. The callback is called after the part and\n its dependencies are fully loaded. If the part is already loaded the\n callback is called immediately.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to execute on completion",
            "paramName": "callback",
            "description": " Function to execute on completion",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "self {Object?window} Context to execute the given function in",
            "paramName": "self",
            "description": " Context to execute the given function in",
            "optional": true,
            "defaultValue": "window",
            "type": "Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3344
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 4364
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "self",
          "type": "Object",
          "optional": true,
          "defaultValue": "window"
        }
      ],
      "appearsIn": []
    },
    "_appendPartListener": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper for appending a listener for this part.",
          "     *",
          "     * @param callback {Function} The function to call when the part is loaded.",
          "     * @param self {Object?} The context of the callback.",
          "     * @param part {qx.io.part.Part|qx.io.part.ClosurePart} The part to listen",
          "     *   to.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for appending a listener for this part.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} The function to call when the part is loaded.",
            "paramName": "callback",
            "description": " The function to call when the part is loaded.",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "self {Object?} The context of the callback.",
            "paramName": "self",
            "description": " The context of the callback.",
            "optional": true,
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "part {qx.io.part.Part|qx.io.part.ClosurePart} The part to listen\n   to.",
            "paramName": "part",
            "description": " The part to listen\n   to.",
            "type": [
              "qx.io.part.Part",
              "qx.io.part.ClosurePart"
            ]
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4678
        },
        "end": {
          "line": 174,
          "column": 5,
          "index": 4893
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "self",
          "type": "Object",
          "optional": true
        },
        {
          "name": "part",
          "type": [
            "qx.io.part.Part",
            "qx.io.part.ClosurePart"
          ]
        }
      ],
      "appearsIn": []
    },
    "_markAsCompleted": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper for marking the part as complete.",
          "     *",
          "     * @param readyState {String} The new ready state.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for marking the part as complete.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "readyState {String} The new ready state.",
            "paramName": "readyState",
            "description": " The new ready state.",
            "type": "string"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 5026
        },
        "end": {
          "line": 184,
          "column": 5,
          "index": 5142
        }
      },
      "type": "function",
      "params": [
        {
          "name": "readyState",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_signalStartup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Method used to start up the application in case not all parts",
          "     * necessary to initialize the application are in the boot part. [BUG #3793]",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method used to start up the application in case not all parts\n necessary to initialize the application are in the boot part. [BUG #3793]</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 190,
          "column": 4,
          "index": 5315
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 5494
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_checkCompleteLoading": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper for checking if the part is loaded completely.",
          "     *",
          "     * @param callback {Function} The function to be called if the part has",
          "     *   been loaded completely.",
          "     * @param self {Object} The context of the callback function.",
          "     * @return {Boolean} true, if the part is loading, complete or has an error.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for checking if the part is loaded completely.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} The function to be called if the part has\n   been loaded completely.",
            "paramName": "callback",
            "description": " The function to be called if the part has\n   been loaded completely.",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "self {Object} The context of the callback function.",
            "paramName": "self",
            "description": " The context of the callback function.",
            "type": "Record<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true, if the part is loading, complete or has an error.",
            "type": "boolean",
            "description": "true, if the part is loading, complete or has an error."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5841
        },
        "end": {
          "line": 223,
          "column": 5,
          "index": 6439
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "self",
          "type": "Record<any, any>"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}