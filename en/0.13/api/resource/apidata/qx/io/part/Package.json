{
  "version": 0.3,
  "lastModified": 1726088852625,
  "lastModifiedIso": "2024-09-11T21:07:32.625Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/io/part/Package.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 27,
      "column": 0,
      "index": 675
    },
    "end": {
      "line": 261,
      "column": 3,
      "index": 7094
    }
  },
  "className": "qx.io.part.Package",
  "jsdoc": {
    "raw": [
      "*",
      " * The Package wraps a list of related script URLs, which are required by one",
      " * or more parts.",
      " *",
      " * @internal",
      " * @ignore(qx.util.ResourceManager)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The Package wraps a list of related script URLs, which are required by one\n or more parts.</p>"
      }
    ],
    "@internal": [
      {
        "name": "@internal",
        "body": ""
      }
    ],
    "@ignore": [
      {
        "name": "@ignore",
        "body": "qx.util.ResourceManager"
      }
    ]
  },
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "urls"
      },
      {
        "name": "id"
      },
      {
        "name": "loaded"
      }
    ],
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 901
      },
      "end": {
        "line": 37,
        "column": 3,
        "index": 1039
      }
    }
  },
  "members": {
    "__readyState": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1059
        },
        "end": {
          "line": 40,
          "column": 22,
          "index": 1077
        }
      },
      "appearsIn": []
    },
    "__urls": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1083
        },
        "end": {
          "line": 41,
          "column": 16,
          "index": 1095
        }
      },
      "appearsIn": []
    },
    "__id": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1101
        },
        "end": {
          "line": 42,
          "column": 14,
          "index": 1111
        }
      },
      "appearsIn": []
    },
    "__closure": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1117
        },
        "end": {
          "line": 43,
          "column": 19,
          "index": 1132
        }
      },
      "appearsIn": []
    },
    "__loadWithClosure": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1138
        },
        "end": {
          "line": 44,
          "column": 27,
          "index": 1161
        }
      },
      "appearsIn": []
    },
    "__timeoutId": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1167
        },
        "end": {
          "line": 45,
          "column": 21,
          "index": 1184
        }
      },
      "appearsIn": []
    },
    "__notifyPackageResult": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1190
        },
        "end": {
          "line": 46,
          "column": 31,
          "index": 1217
        }
      },
      "appearsIn": []
    },
    "getId": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the package ID.",
          "     *",
          "     * @return {String} The package id",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the package ID.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The package id",
            "type": "string",
            "description": "The package id"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1313
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1352
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getReadyState": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the ready state of the package. The value is one of",
          "     * <ul>",
          "     * <li>",
          "     *   <b>initialized</b>: The package is initialized. The {@link #load}",
          "     *   method has not yet been called",
          "     * </li>",
          "     * <li><b>loading</b>: The package is still loading.</li>",
          "     * <li><b>complete</b>: The package has been loaded successfully</li>",
          "     * <li><b>cached</b>: The package is loaded but is not executed",
          "     *   (for closure parts)</li>",
          "     * </li>",
          "     *",
          "     * @return {String} The ready state.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the ready state of the package. The value is one of\n <ul>\n <li>\n   <b>initialized</b>: The package is initialized. The {@link #load}\n   method has not yet been called\n </li>\n <li><b>loading</b>: The package is still loading.</li>\n <li><b>complete</b>: The package has been loaded successfully</li>\n <li><b>cached</b>: The package is loaded but is not executed\n   (for closure parts)</li>\n </li></p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The ready state.",
            "type": "string",
            "description": "The ready state."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1889
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1944
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getUrls": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the urlsstored stored in the package.",
          "     *",
          "     * @internal",
          "     * @return {String[]} An array of urls of this package.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the urlsstored stored in the package.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} An array of urls of this package.",
            "type": "String[]",
            "description": "An array of urls of this package."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2104
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2147
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "String[]"
      },
      "appearsIn": []
    },
    "saveClosure": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Method for storing the closure for this package. This is only relevant",
          "     * if a {@link qx.io.part.ClosurePart} is used.",
          "     *",
          "     * @param closure {Function} The code of this package wrapped in a closure.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method for storing the closure for this package. This is only relevant\n if a {@link qx.io.part.ClosurePart} is used.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "closure {Function} The code of this package wrapped in a closure.",
            "paramName": "closure",
            "description": " The code of this package wrapped in a closure.",
            "type": "((...args: any[]) => any)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2387
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 2719
        }
      },
      "type": "function",
      "params": [
        {
          "name": "closure",
          "type": "((...args: any[]) => any)"
        }
      ],
      "appearsIn": []
    },
    "execute": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Executes the stored closure. This is only relevant if a",
          "     * {@link qx.io.part.ClosurePart} is used.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Executes the stored closure. This is only relevant if a\n {@link qx.io.part.ClosurePart} is used.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 112,
          "column": 4,
          "index": 2852
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3157
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "loadClosure": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Load method if the package loads a closure. This is only relevant if a",
          "     * {@link qx.io.part.ClosurePart} is used.",
          "     *",
          "     * @param notifyPackageResult {Function} The callback if all scripts are",
          "     *   done loading in this package.",
          "     * @param self {Object?} The context of the callback.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Load method if the package loads a closure. This is only relevant if a\n {@link qx.io.part.ClosurePart} is used.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "notifyPackageResult {Function} The callback if all scripts are\n   done loading in this package.",
            "paramName": "notifyPackageResult",
            "description": " The callback if all scripts are\n   done loading in this package.",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "self {Object?} The context of the callback.",
            "paramName": "self",
            "description": " The context of the callback.",
            "optional": true,
            "type": "Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 3486
        },
        "end": {
          "line": 159,
          "column": 5,
          "index": 4161
        }
      },
      "type": "function",
      "params": [
        {
          "name": "notifyPackageResult",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "self",
          "type": "Object",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "load": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Load the part's script URLs in the correct order.",
          "     *",
          "     * @param notifyPackageResult {Function} The callback if all scripts are",
          "     *   done loading in this package.",
          "     * @param self {Object?} The context of the callback.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Load the part's script URLs in the correct order.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "notifyPackageResult {Function} The callback if all scripts are\n   done loading in this package.",
            "paramName": "notifyPackageResult",
            "description": " The callback if all scripts are\n   done loading in this package.",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "self {Object?} The context of the callback.",
            "paramName": "self",
            "description": " The context of the callback.",
            "optional": true,
            "type": "Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4422
        },
        "end": {
          "line": 190,
          "column": 5,
          "index": 4953
        }
      },
      "type": "function",
      "params": [
        {
          "name": "notifyPackageResult",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "self",
          "type": "Object",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "__loadScriptList": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Loads a list of scripts in the correct order.",
          "     *",
          "     * @param urlList {String[]} List of script urls",
          "     * @param callback {Function} Function to execute on completion",
          "     * @param errBack {Function} Function to execute on error",
          "     * @param self {Object?window} Context to execute the given function in",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loads a list of scripts in the correct order.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "urlList {String[]} List of script urls",
            "paramName": "urlList",
            "description": " List of script urls",
            "type": "String[]"
          },
          {
            "name": "@param",
            "body": "callback {Function} Function to execute on completion",
            "paramName": "callback",
            "description": " Function to execute on completion",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "errBack {Function} Function to execute on error",
            "paramName": "errBack",
            "description": " Function to execute on error",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "self {Object?window} Context to execute the given function in",
            "paramName": "self",
            "description": " Context to execute the given function in",
            "optional": true,
            "defaultValue": "window",
            "type": "Object"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 200,
          "column": 4,
          "index": 5295
        },
        "end": {
          "line": 250,
          "column": 5,
          "index": 6795
        }
      },
      "type": "function",
      "params": [
        {
          "name": "urlList",
          "type": "String[]"
        },
        {
          "name": "callback",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "errBack",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "self",
          "type": "Object",
          "optional": true,
          "defaultValue": "window"
        }
      ],
      "appearsIn": []
    },
    "__importPackageData": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Import the data of a package. The function is defined in the loader",
          "     * script.",
          "     *",
          "     * @signature function(packageData)",
          "     * @param packageData {Map} Map of package data categories (\"resources\",...)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Import the data of a package. The function is defined in the loader\n script.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(packageData)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "packageData {Map} Map of package data categories (\"resources\",...)",
            "paramName": "packageData",
            "description": " Map of package data categories (\"resources\",...)",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 259,
          "column": 4,
          "index": 7036
        },
        "end": {
          "line": 259,
          "column": 54,
          "index": 7086
        }
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}