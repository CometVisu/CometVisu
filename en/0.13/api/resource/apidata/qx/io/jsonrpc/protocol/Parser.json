{
  "version": 0.3,
  "lastModified": 1717235171962,
  "lastModifiedIso": "2024-06-01T09:46:11.962Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/io/jsonrpc/protocol/Parser.js",
  "type": "class",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 693
    },
    "end": {
      "line": 105,
      "column": 3,
      "index": 3087
    }
  },
  "className": "qx.io.jsonrpc.protocol.Parser",
  "jsdoc": {
    "raw": [
      "*",
      " * The parser object has a parse() method, which takes a UTF-encoded string and",
      " * returns an instance of the correponding subclass of {@link qx.io.jsonrpc.protocol.Message} or",
      " * a {@link qx.io.jsonrpc.protocol.Batch} instance.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The parser object has a parse() method, which takes a UTF-encoded string and\n returns an instance of the correponding subclass of {@link qx.io.jsonrpc.protocol.Message} or\n a {@link qx.io.jsonrpc.protocol.Batch} instance.</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "members": {
    "parse": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Given an UTF-8 encoded string, return the corresponding message object,",
          "     * which is one of {@link qx.io.jsonrpc.protocol.Batch}, {@link qx.io.jsonrpc.protocol.Notification},",
          "     * {@link qx.io.jsonrpc.protocol.Request}, {@link qx.io.jsonrpc.protocol.Result}, or",
          "     * {@link qx.io.jsonrpc.protocol.Error}.",
          "     *",
          "     * @param {String} message",
          "     * @return {qx.io.jsonrpc.protocol.Message}",
          "     * @throws {qx.io.exception.Transport}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Given an UTF-8 encoded string, return the corresponding message object,\n which is one of {@link qx.io.jsonrpc.protocol.Batch}, {@link qx.io.jsonrpc.protocol.Notification},\n {@link qx.io.jsonrpc.protocol.Request}, {@link qx.io.jsonrpc.protocol.Result}, or\n {@link qx.io.jsonrpc.protocol.Error}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{String} message",
            "paramName": "message",
            "description": "",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.jsonrpc.protocol.Message}",
            "type": "qx.io.jsonrpc.protocol.Message",
            "description": ""
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{qx.io.exception.Transport}",
            "type": "qx.io.exception.Transport",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1251
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 3079
        }
      },
      "type": "function",
      "params": [
        {
          "name": "message",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "qx.io.jsonrpc.protocol.Message"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}