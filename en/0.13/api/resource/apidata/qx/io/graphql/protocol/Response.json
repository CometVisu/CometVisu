{
  "version": 0.3,
  "lastModified": 1729101022984,
  "lastModifiedIso": "2024-10-16T17:50:22.984Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/io/graphql/protocol/Response.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 627
    },
    "end": {
      "line": 63,
      "column": 3,
      "index": 2348
    }
  },
  "className": "qx.io.graphql.protocol.Response",
  "jsdoc": {
    "raw": [
      "*",
      " * An Object modelling a GraphQL response (see http://spec.graphql.org/draft/#sec-Response-Format)",
      " * @experimental The API might change. Feedback is appreciated.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>An Object modelling a GraphQL response (see http://spec.graphql.org/draft/#sec-Response-Format)</p>"
      }
    ],
    "@experimental": [
      {
        "name": "@experimental",
        "body": "The API might change. Feedback is appreciated."
      }
    ]
  },
  "superClass": "qx.io.graphql.protocol.Message",
  "properties": {
    "data": {
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1337
        },
        "end": {
          "line": 41,
          "column": 5,
          "index": 1412
        }
      },
      "json": {
        "check": "Object",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * \"The data entry in the response will be the result of the execution",
          "     * of the requested operation. If the operation was a query, this",
          "     * output will be an object of the schema’s query root type; if the",
          "     * operation was a mutation, this output will be an object of the",
          "     * schema’s mutation root type. If an error was encountered before",
          "     * execution begins, the data entry should not be present in the result.",
          "     * If an error was encountered during the execution that prevented",
          "     * a valid response, the data entry in the response should be null\"",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>\"The data entry in the response will be the result of the execution\n of the requested operation. If the operation was a query, this\n output will be an object of the schema’s query root type; if the\n operation was a mutation, this output will be an object of the\n schema’s mutation root type. If an error was encountered before\n execution begins, the data entry should not be present in the result.\n If an error was encountered during the execution that prevented\n a valid response, the data entry in the response should be null\"</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "errors": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 2167
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 2340
        }
      },
      "json": {
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * \"The errors entry in the response is a non‐empty list of errors,",
          "     * where each error is a map. If no errors were encountered during",
          "     * the requested operation, the errors entry should not be present in",
          "     * the result. If the data entry in the response is not present, the",
          "     * errors entry in the response must not be empty. It must contain",
          "     * at least one error. The errors it contains should indicate why no",
          "     * data was able to be returned. If the data entry in the response is",
          "     * present (including if it is the value null), the errors entry in the",
          "     * response may contain any errors that occurred during execution. If",
          "     * errors occurred during execution, it should contain those errors.\"",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>\"The errors entry in the response is a non‐empty list of errors,\n where each error is a map. If no errors were encountered during\n the requested operation, the errors entry should not be present in\n the result. If the data entry in the response is not present, the\n errors entry in the response must not be empty. It must contain\n at least one error. The errors it contains should indicate why no\n data was able to be returned. If the data entry in the response is\n present (including if it is the value null), the errors entry in the\n response may contain any errors that occurred during execution. If\n errors occurred during execution, it should contain those errors.\"</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {},
  "statics": {}
}