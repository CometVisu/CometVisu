{
  "version": 0.3,
  "lastModified": 1722151625311,
  "lastModifiedIso": "2024-07-28T07:27:05.311Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/io/transport/Fetch.js",
  "type": "class",
  "location": {
    "start": {
      "line": 5,
      "column": 0,
      "index": 160
    },
    "end": {
      "line": 98,
      "column": 3,
      "index": 2684
    }
  },
  "className": "qx.io.transport.Fetch",
  "jsdoc": {
    "raw": [
      "*",
      " * The implementation of a HTTP Transport using the Fetch API,",
      " * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The implementation of a HTTP Transport using the Fetch API,</p>"
      }
    ],
    "@see": [
      {
        "name": "@see",
        "body": "https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch"
      }
    ]
  },
  "superClass": "qx.io.transport.AbstractTransport",
  "interfaces": [
    "qx.io.transport.ITransport"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "url"
      }
    ],
    "location": {
      "start": {
        "line": 14,
        "column": 2,
        "index": 383
      },
      "end": {
        "line": 16,
        "column": 3,
        "index": 419
      }
    }
  },
  "members": {
    "__tranportImpl": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Object}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object}"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 22,
          "column": 4,
          "index": 477
        },
        "end": {
          "line": 22,
          "column": 24,
          "index": 497
        }
      },
      "appearsIn": []
    },
    "getTransportImpl": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the object which implements the transport on the",
          "     * underlying level, so that transport-specific configuration",
          "     * can be done on it. In the case of the Fetch API, the",
          "     * \"implementation\" is a configuration object which will be",
          "     * passed to the `fetch` method as second parameter.",
          "     *",
          "     * @return {Object}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the object which implements the transport on the\n underlying level, so that transport-specific configuration\n can be done on it. In the case of the Fetch API, the\n \"implementation\" is a configuration object which will be\n passed to the <code>fetch</code> method as second parameter.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Record<any, any>",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 862
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1023
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": [
        "qx.io.transport.ITransport"
      ]
    },
    "send": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Transport the given message to the endpoint",
          "     *",
          "     * @param {String} message",
          "     *",
          "     * @return {qx.Promise} Promise that resolves (with no data)",
          "     * when the message has been successfully sent out, and rejects",
          "     * when there is an error or a cancellation up to that point.",
          "     * @ignore(fetch)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transport the given message to the endpoint</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{String} message",
            "paramName": "message",
            "description": "",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise} Promise that resolves (with no data)\n when the message has been successfully sent out, and rejects\n when there is an error or a cancellation up to that point.",
            "type": "qx.Promise",
            "description": "Promise that resolves (with no data)\n when the message has been successfully sent out, and rejects\n when there is an error or a cancellation up to that point."
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "fetch"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1363
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 2153
        }
      },
      "type": "function",
      "params": [
        {
          "name": "message",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "qx.Promise"
      },
      "appearsIn": [
        "qx.io.transport.ITransport"
      ]
    },
    "_createTransportImpl": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Factory method to create a request object. In this implementation,",
          "     * it returns an object that will be used as the `init` parameter of the",
          "     * fetch method.",
          "     * @return {Object}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Factory method to create a request object. In this implementation,\n it returns an object that will be used as the <code>init</code> parameter of the\n fetch method.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Record<any, any>",
            "description": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2372
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2582
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}