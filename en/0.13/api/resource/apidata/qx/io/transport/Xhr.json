{
  "className": "qx.io.transport.Xhr",
  "packageName": "qx.io.transport",
  "name": "Xhr",
  "superClass": "qx.io.transport.AbstractTransport",
  "interfaces": [
    "qx.io.transport.ITransport"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 10,
        "column": 0,
        "index": 403
      },
      "end": {
        "line": 138,
        "column": 3,
        "index": 4516
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The implementation of a HTTP Transport using the {@link qx.io.request} API,\n so any special configuration of the HTTP request must be done on the\n underlying implementation of {@link qx.io.request.AbstractRequest}.\n The assumption is that the payload will be JSON in both request and response.\n If that is not what you want, override the {@link #_createTransportImpl()} method.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 19,
        "column": 2,
        "index": 622
      },
      "end": {
        "line": 21,
        "column": 3,
        "index": 658
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor.</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "{String} url The URL of the http endpoint",
          "paramName": "url",
          "description": "The URL of the http endpoint",
          "type": "String"
        }
      ]
    }
  },
  "members": {
    "__tranportImpl": {
      "location": {
        "start": {
          "line": 28,
          "column": 4,
          "index": 774
        },
        "end": {
          "line": 28,
          "column": 24,
          "index": 794
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal implementation of the transport</p>"
          }
        ],
        "@var": [
          {
            "name": "@var",
            "body": "{qx.io.request.Xhr}"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "getTransportImpl": {
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 1188
        },
        "end": {
          "line": 42,
          "column": 5,
          "index": 1305
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the object which implements the transport on the\n underlying level, so that transport-specific configuration\n can be done on it. Note that since in the HTTP transport,\n this object cannot be reused, it will return a new object\n each time which will be used in the immediately next request.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.request.Xhr}",
            "type": "qx.io.request.Xhr",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.io.transport.ITransport",
      "appearsIn": [
        "qx.io.transport.ITransport"
      ]
    },
    "send": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1623
        },
        "end": {
          "line": 109,
          "column": 5,
          "index": 3424
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transport the given message to the endpoint</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{String} message"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise} Promise that resolves (with no data)\n when the message has been successfully sent out, and rejects\n when there is an error or a cancellation up to that point.",
            "type": "qx.Promise",
            "description": " Promise that resolves (with no data)\n when the message has been successfully sent out, and rejects\n when there is an error or a cancellation up to that point."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.io.transport.ITransport",
      "appearsIn": [
        "qx.io.transport.ITransport"
      ]
    },
    "_createTransportImpl": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 4042
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 4416
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Factory method to create a request object. By default, a POST\n request will be made, and the expected response type will be\n \"application/json\", but differently to the standard behavior,\n the response will not be parsed into a javascript object.\n Classes extending this one may override this method to obtain\n a Request object with different parameters and/or different\n authentication settings. The object must be a subclass of {@link\n qx.io.request.AbstractRequest} or implement its public API.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.request.Xhr}",
            "type": "qx.io.request.Xhr",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getEndpoint": {
      "type": "function",
      "name": "getEndpoint",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>endpoint</code>.\n\nFor further details take a look at the property definition: {@link #endpoint}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for endpoint"
          }
        ]
      }
    },
    "setEndpoint": {
      "type": "function",
      "name": "setEndpoint",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>endpoint</code>.\n\nFor further details take a look at the property definition: {@link #endpoint}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for endpoint"
          }
        ]
      }
    },
    "resetEndpoint": {
      "type": "function",
      "name": "resetEndpoint",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>endpoint</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #endpoint}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.io.transport.AbstractTransport",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 135,
        "column": 2,
        "index": 4425
      },
      "end": {
        "line": 137,
        "column": 3,
        "index": 4512
      }
    }
  },
  "events": {},
  "descendants": []
}