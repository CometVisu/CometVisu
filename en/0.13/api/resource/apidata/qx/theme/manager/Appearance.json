{
  "className": "qx.theme.manager.Appearance",
  "packageName": "qx.theme.manager",
  "name": "Appearance",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 550
      },
      "end": {
        "line": 312,
        "column": 3,
        "index": 9075
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Manager for appearance themes</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 837
      },
      "end": {
        "line": 38,
        "column": 3,
        "index": 922
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "theme": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1175
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1288
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Currently used appearance theme</p>"
          }
        ]
      },
      "name": "theme",
      "propertyType": "new",
      "event": "changeTheme",
      "apply": "_applyTheme",
      "nullable": true,
      "allowNull": true,
      "check": "Theme"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__defaultStates": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1616
        },
        "end": {
          "line": 66,
          "column": 23,
          "index": 1635
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__defaultStates)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__styleCache": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1641
        },
        "end": {
          "line": 67,
          "column": 22,
          "index": 1659
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__aliasMap": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1665
        },
        "end": {
          "line": 68,
          "column": 20,
          "index": 1681
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_applyTheme": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1710
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 1815
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "theme"
      ]
    },
    "__resolveId": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2364
        },
        "end": {
          "line": 160,
          "column": 5,
          "index": 4643
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the appearance entry ID to use\n when all aliases etc. are processed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} ID to resolve.",
            "paramName": "id",
            "description": " ID to resolve.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "theme {Theme} Theme to use for lookup.",
            "paramName": "theme",
            "description": " Theme to use for lookup.",
            "type": "Theme"
          },
          {
            "name": "@param",
            "body": "defaultId {String} ID for a fallback.",
            "paramName": "defaultId",
            "description": " ID for a fallback.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "chain {Array} The appearance id chain.",
            "paramName": "chain",
            "description": " The appearance id chain.",
            "type": "Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Resolved ID",
            "type": "String",
            "description": " Resolved ID"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "styleFrom": {
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 5056
        },
        "end": {
          "line": 310,
          "column": 5,
          "index": 9067
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the result of the \"state\" function for a given id and states</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} id of the appearance (e.g. \"button\", \"label\", ...)",
            "paramName": "id",
            "description": " id of the appearance (e.g. \"button\", \"label\", ...)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "states {Map} hash map defining the set states",
            "paramName": "states",
            "description": " hash map defining the set states",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "theme {Theme?} appearance theme",
            "paramName": "theme",
            "description": " appearance theme",
            "optional": true,
            "type": "Theme"
          },
          {
            "name": "@param",
            "body": "defaultId {String} fallback id.",
            "paramName": "defaultId",
            "description": " fallback id.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} map of widget properties as returned by the \"state\" function",
            "type": "Map",
            "description": " map of widget properties as returned by the \"state\" function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTheme": {
      "type": "function",
      "name": "getTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>theme</code>.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Theme",
            "desc": "Returns the value for theme"
          }
        ]
      }
    },
    "setTheme": {
      "type": "function",
      "name": "setTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>theme</code>.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Theme",
            "paramName": "value",
            "desc": "Value for theme"
          }
        ]
      }
    },
    "resetTheme": {
      "type": "function",
      "name": "resetTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>theme</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ]
      }
    }
  },
  "descendants": []
}