{
  "version": 0.3,
  "lastModified": 1735383686261,
  "lastModifiedIso": "2024-12-28T11:01:26.261Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/application/AbstractGui.js",
  "type": "class",
  "location": {
    "start": {
      "line": 25,
      "column": 0,
      "index": 613
    },
    "end": {
      "line": 112,
      "column": 3,
      "index": 2966
    }
  },
  "className": "qx.application.AbstractGui",
  "jsdoc": {
    "raw": [
      "*",
      " * Abstract base class for GUI applications using qooxdoo widgets.",
      " *",
      " * @require(qx.core.Init)",
      " * @use(qx.module.Animation)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Abstract base class for GUI applications using qooxdoo widgets.</p>"
      }
    ],
    "@require": [
      {
        "name": "@require",
        "body": "qx.core.Init"
      }
    ],
    "@use": [
      {
        "name": "@use",
        "body": "qx.module.Animation"
      }
    ]
  },
  "isSingleton": false,
  "abstract": true,
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.application.IApplication"
  ],
  "mixins": [
    "qx.locale.MTranslation"
  ],
  "members": {
    "__root": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.core.Widget} The root widget "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.core.Widget} The root widget"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 1041
        },
        "end": {
          "line": 39,
          "column": 16,
          "index": 1053
        }
      },
      "appearsIn": []
    },
    "_createRootWidget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Create the root widget. This method is abstract and must be overridden",
          "     * by sub classes.",
          "     *",
          "     * @return {qx.ui.core.Widget} The root widget. This widget must be configured",
          "     *     with a {@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas} layout.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create the root widget. This method is abstract and must be overridden\n by sub classes.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The root widget. This widget must be configured\n     with a {@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas} layout.",
            "type": "qx.ui.core.Widget",
            "description": "The root widget. This widget must be configured\n     with a {@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas} layout."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1351
        },
        "end": {
          "line": 50,
          "column": 5,
          "index": 1425
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "getRoot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the application's root widget. The root widgets can act as container",
          "     * for popups. It is configured with a {@link qx.ui.layout.Basic} (if the",
          "     * application is an inline application) layout or a {@link qx.ui.layout.Canvas}",
          "     * (if the application is a standalone application) layout .",
          "     *",
          "     * The root has the same add method as the configured layout",
          "     * ({@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas}).",
          "     *",
          "     * @return {qx.ui.core.Widget} The application's root widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the application's root widget. The root widgets can act as container\n for popups. It is configured with a {@link qx.ui.layout.Basic} (if the\n application is an inline application) layout or a {@link qx.ui.layout.Canvas}\n (if the application is a standalone application) layout .\n The root has the same add method as the configured layout\n ({@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas}).</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The application's root widget.",
            "type": "qx.ui.core.Widget",
            "description": "The application's root widget."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1973
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 2016
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "main": {
      "jsdoc": {
        "raw": [
          " interface method"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 2047
        },
        "end": {
          "line": 87,
          "column": 5,
          "index": 2640
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "finalize": {
      "jsdoc": {
        "raw": [
          " interface method"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2671
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2710
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "render": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates the GUI rendering",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the GUI rendering</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2773
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2829
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "close": {
      "jsdoc": {
        "raw": [
          " interface method"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2860
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2893
        }
      },
      "type": "function",
      "params": [
        {
          "name": "val"
        }
      ],
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "terminate": {
      "jsdoc": {
        "raw": [
          " interface method"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2924
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2958
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "tr": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Translate a message",
          "     * Mark the message for translation.",
          "     *",
          "     * @param messageId {String} message id (may contain format strings)",
          "     * @param varargs {Object?} variable number of arguments applied to the format string",
          "     * @return {String|LocalizedString} The translated message or localized string",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a message\n Mark the message for translation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)"
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|LocalizedString} The translated message or localized string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1068
        },
        "end": {
          "line": 46,
          "column": 5,
          "index": 1347
        }
      },
      "type": "function",
      "params": [
        {
          "name": "messageId"
        },
        {
          "name": "varargs"
        }
      ],
      "mixin": "qx.locale.MTranslation",
      "appearsIn": [
        "qx.locale.MTranslation"
      ]
    },
    "trn": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Translate a plural message",
          "     * Mark the messages for translation.",
          "     *",
          "     * Depending on the third argument the plural or the singular form is chosen.",
          "     *",
          "     * @param singularMessageId {String} message id of the singular form (may contain format strings)",
          "     * @param pluralMessageId {String} message id of the plural form (may contain format strings)",
          "     * @param count {Integer} if greater than 1 the plural form otherwise the singular form is returned.",
          "     * @param varargs {Object?} variable number of arguments applied to the format string",
          "     * @return {String|LocalizedString} The translated message or localized string",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a plural message\n Mark the messages for translation.\n Depending on the third argument the plural or the singular form is chosen.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "singularMessageId {String} message id of the singular form (may contain format strings)"
          },
          {
            "name": "@param",
            "body": "pluralMessageId {String} message id of the plural form (may contain format strings)"
          },
          {
            "name": "@param",
            "body": "count {Integer} if greater than 1 the plural form otherwise the singular form is returned."
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|LocalizedString} The translated message or localized string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 2020
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 2333
        }
      },
      "type": "function",
      "params": [
        {
          "name": "singularMessageId"
        },
        {
          "name": "pluralMessageId"
        },
        {
          "name": "count"
        },
        {
          "name": "varargs"
        }
      ],
      "mixin": "qx.locale.MTranslation",
      "appearsIn": [
        "qx.locale.MTranslation"
      ]
    },
    "trc": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Translate a message with translation hint",
          "     * Mark the messages for translation.",
          "     *",
          "     * @param hint {String} hint for the translator of the message. Will be included in the .po file.",
          "     * @param messageId {String} message id (may contain format strings)",
          "     * @param varargs {Object?} variable number of arguments applied to the format string",
          "     * @return {String|LocalizedString} The translated message or localized string",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a message with translation hint\n Mark the messages for translation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hint {String} hint for the translator of the message. Will be included in the .po file."
          },
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)"
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|LocalizedString} The translated message or localized string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2802
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 3089
        }
      },
      "type": "function",
      "params": [
        {
          "name": "hint"
        },
        {
          "name": "messageId"
        },
        {
          "name": "varargs"
        }
      ],
      "mixin": "qx.locale.MTranslation",
      "appearsIn": [
        "qx.locale.MTranslation"
      ]
    },
    "trnc": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Translate a plural message with translation hint",
          "     * Mark the messages for translation.",
          "     *",
          "     * Depending on the third argument the plural or the singular form is chosen.",
          "     *",
          "     * @param hint {String} hint for the translator of the message. Will be included in the .po file.",
          "     * @param singularMessageId {String} message id of the singular form (may contain format strings)",
          "     * @param pluralMessageId {String} message id of the plural form (may contain format strings)",
          "     * @param count {Integer} if greater than 1 the plural form otherwise the singular form is returned.",
          "     * @param varargs {Object?} variable number of arguments applied to the format string",
          "     * @return {String|LocalizedString} The translated message or localized string",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a plural message with translation hint\n Mark the messages for translation.\n Depending on the third argument the plural or the singular form is chosen.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hint {String} hint for the translator of the message. Will be included in the .po file."
          },
          {
            "name": "@param",
            "body": "singularMessageId {String} message id of the singular form (may contain format strings)"
          },
          {
            "name": "@param",
            "body": "pluralMessageId {String} message id of the plural form (may contain format strings)"
          },
          {
            "name": "@param",
            "body": "count {Integer} if greater than 1 the plural form otherwise the singular form is returned."
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|LocalizedString} The translated message or localized string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 3886
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 4207
        }
      },
      "type": "function",
      "params": [
        {
          "name": "hint"
        },
        {
          "name": "singularMessageId"
        },
        {
          "name": "pluralMessageId"
        },
        {
          "name": "count"
        },
        {
          "name": "varargs"
        }
      ],
      "mixin": "qx.locale.MTranslation",
      "appearsIn": [
        "qx.locale.MTranslation"
      ]
    },
    "marktr": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Mark the message for translation but return the original message.",
          "     *",
          "     * @param messageId {String} the message ID",
          "     * @return {String} messageId",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Mark the message for translation but return the original message.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} the message ID"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} messageId"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 4392
        },
        "end": {
          "line": 130,
          "column": 5,
          "index": 4670
        }
      },
      "type": "function",
      "params": [
        {
          "name": "messageId"
        }
      ],
      "mixin": "qx.locale.MTranslation",
      "appearsIn": [
        "qx.locale.MTranslation"
      ]
    }
  },
  "statics": {},
  "properties": {}
}