{
  "className": "qx.dev.unit.AsyncWrapper",
  "packageName": "qx.dev.unit",
  "name": "AsyncWrapper",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 647
      },
      "end": {
        "line": 89,
        "column": 3,
        "index": 2571
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class stores the information needed to instruct a running test to wait.\n  It is thrown as an exception to be caught by the method executing the test.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 2,
        "index": 1175
      },
      "end": {
        "line": 67,
        "column": 3,
        "index": 2135
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "delay {Integer?} The amount of time in milliseconds to wait",
          "paramName": "delay",
          "description": " The amount of time in milliseconds to wait",
          "optional": true,
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "deferredFunction {Function?} The function to run after the timeout\n has expired.",
          "paramName": "deferredFunction",
          "description": " The function to run after the timeout\n has expired.",
          "optional": true,
          "type": "Function"
        },
        {
          "name": "@param",
          "body": "context {Object?window} Optional execution context for deferredFunction",
          "paramName": "context",
          "description": " Optional execution context for deferredFunction",
          "optional": true,
          "defaultValue": "window",
          "type": "Object"
        }
      ]
    }
  },
  "properties": {
    "deferredFunction": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 2219
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2287
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The function to run after the timeout has expired</p>"
          }
        ]
      },
      "name": "deferredFunction",
      "propertyType": "new",
      "init": false,
      "check": "Function",
      "defaultValue": false
    },
    "context": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2367
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 2423
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The context in which the timeout function should be executed</p>"
          }
        ]
      },
      "name": "context",
      "propertyType": "new",
      "check": "Object"
    },
    "delay": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2484
        },
        "end": {
          "line": 87,
          "column": 5,
          "index": 2563
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The amount of time in milliseconds to wait</p>"
          }
        ]
      },
      "name": "delay",
      "propertyType": "new",
      "nullable": false,
      "init": 10000,
      "allowNull": false,
      "check": "Integer",
      "defaultValue": 10000
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getDeferredFunction": {
      "type": "function",
      "name": "getDeferredFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>deferredFunction</code>.\n\nFor further details take a look at the property definition: {@link #deferredFunction}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for deferredFunction"
          }
        ]
      }
    },
    "setDeferredFunction": {
      "type": "function",
      "name": "setDeferredFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>deferredFunction</code>.\n\nFor further details take a look at the property definition: {@link #deferredFunction}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for deferredFunction"
          }
        ]
      }
    },
    "resetDeferredFunction": {
      "type": "function",
      "name": "resetDeferredFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>deferredFunction</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #deferredFunction}."
          }
        ]
      }
    },
    "getContext": {
      "type": "function",
      "name": "getContext",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>context</code>.\n\nFor further details take a look at the property definition: {@link #context}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for context"
          }
        ]
      }
    },
    "setContext": {
      "type": "function",
      "name": "setContext",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>context</code>.\n\nFor further details take a look at the property definition: {@link #context}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for context"
          }
        ]
      }
    },
    "resetContext": {
      "type": "function",
      "name": "resetContext",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>context</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #context}."
          }
        ]
      }
    },
    "getDelay": {
      "type": "function",
      "name": "getDelay",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>delay</code>.\n\nFor further details take a look at the property definition: {@link #delay}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for delay"
          }
        ]
      }
    },
    "setDelay": {
      "type": "function",
      "name": "setDelay",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>delay</code>.\n\nFor further details take a look at the property definition: {@link #delay}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for delay"
          }
        ]
      }
    },
    "resetDelay": {
      "type": "function",
      "name": "resetDelay",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>delay</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #delay}."
          }
        ]
      }
    }
  },
  "descendants": []
}