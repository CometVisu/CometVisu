{
  "version": 0.3,
  "lastModified": 1735341602315,
  "lastModifiedIso": "2024-12-27T23:20:02.315Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/core/ObjectRegistry.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 714
    },
    "end": {
      "line": 315,
      "column": 3,
      "index": 8338
    }
  },
  "className": "qx.core.ObjectRegistry",
  "jsdoc": {
    "raw": [
      "*",
      " * Registration for all instances of qooxdoo classes. Mainly",
      " * used to manage them for the final shutdown sequence and to",
      " * use weak references when connecting widgets to DOM nodes etc.",
      " *",
      " * @ignore(qx.dev, qx.dev.Debug.*)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Registration for all instances of qooxdoo classes. Mainly\n used to manage them for the final shutdown sequence and to\n use weak references when connecting widgets to DOM nodes etc.</p>"
      }
    ],
    "@ignore": [
      {
        "name": "@ignore",
        "body": "qx.dev, qx.dev.Debug.*"
      }
    ]
  },
  "statics": {
    "inShutDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Boolean} Whether the application is in the shutdown phase",
          "     * @deprecated {6.0} shutdown is not a valid mechanism to terminate apps",
          "     * "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Whether the application is in the shutdown phase"
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{6.0} shutdown is not a valid mechanism to terminate apps"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1130
        },
        "end": {
          "line": 38,
          "column": 21,
          "index": 1147
        }
      },
      "appearsIn": []
    },
    "__registry": {
      "jsdoc": {
        "raw": [
          "* @type {Map} Internal data structure to store objects "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Internal data structure to store objects"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1218
        },
        "end": {
          "line": 41,
          "column": 18,
          "index": 1232
        }
      },
      "appearsIn": []
    },
    "__nextHash": {
      "jsdoc": {
        "raw": [
          "* @type {Integer} Next new hash code. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Next new hash code."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1286
        },
        "end": {
          "line": 44,
          "column": 17,
          "index": 1299
        }
      },
      "appearsIn": []
    },
    "__postId": {
      "jsdoc": {
        "raw": [
          "* @type {String} Post id for hash code creation. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} Post id for hash code creation."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1364
        },
        "end": {
          "line": 47,
          "column": 16,
          "index": 1376
        }
      },
      "appearsIn": []
    },
    "__stackTraces": {
      "jsdoc": {
        "raw": [
          "* @type {Map} Object hashes to stack traces (for dispose profiling only) "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Object hashes to stack traces (for dispose profiling only)"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1465
        },
        "end": {
          "line": 50,
          "column": 21,
          "index": 1482
        }
      },
      "appearsIn": []
    },
    "register": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Registers an object into the database. This adds a hashcode",
          "     * to the object (if not already done before) and stores it under",
          "     * this hashcode. You can access this object later using the hashcode",
          "     * by calling {@link #fromHashCode}.",
          "     *",
          "     * All registered objects are automatically disposed on application",
          "     * shutdown. Each registered object must at least have a method",
          "     * called <code>dispose</code>.",
          "     *",
          "     * @param obj {Object} Any object with a dispose() method",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers an object into the database. This adds a hashcode\n to the object (if not already done before) and stores it under\n this hashcode. You can access this object later using the hashcode\n by calling {@link #fromHashCode}.\n All registered objects are automatically disposed on application\n shutdown. Each registered object must at least have a method\n called <code>dispose</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} Any object with a dispose() method",
            "paramName": "obj",
            "description": " Any object with a dispose() method",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 2009
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2351
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": []
    },
    "unregister": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the given object from the database.",
          "     *",
          "     * @param obj {Object} Any previously registered object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given object from the database.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} Any previously registered object",
            "paramName": "obj",
            "description": " Any previously registered object",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2492
        },
        "end": {
          "line": 98,
          "column": 5,
          "index": 2744
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": []
    },
    "toHashCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an unique identifier for the given object. If such an identifier",
          "     * does not yet exist, create it.",
          "     *",
          "     * @param obj {Object} the object to get the hashcode for",
          "     * @return {String} unique identifier for the given object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an unique identifier for the given object. If such an identifier\n does not yet exist, create it.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} the object to get the hashcode for",
            "paramName": "obj",
            "description": " the object to get the hashcode for",
            "type": "Record<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} unique identifier for the given object",
            "type": "string",
            "description": "unique identifier for the given object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 3017
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3631
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "createHashCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates a hash code",
          "     *",
          "     * @return {String}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a hash code</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 139,
          "column": 4,
          "index": 3712
        },
        "end": {
          "line": 142,
          "column": 5,
          "index": 3815
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "clearHashCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Clears the unique identifier on the given object.",
          "     *",
          "     * @param obj {Object} the object to clear the hashcode for",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears the unique identifier on the given object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} the object to clear the hashcode for",
            "paramName": "obj",
            "description": " the object to clear the hashcode for",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 3966
        },
        "end": {
          "line": 170,
          "column": 5,
          "index": 4552
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": []
    },
    "fromHashCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get an object instance by its hash code as returned by {@link #toHashCode}.",
          "     * If the object is already disposed or the hashCode is invalid,",
          "     * <code>null</code> is returned.",
          "     *",
          "     * @param hash {String} The object's hash code.",
          "     * @param suppressWarnings {Boolean?} if true warnings are suppressed; default is false",
          "     * @return {qx.core.Object} The corresponding object or <code>null</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get an object instance by its hash code as returned by {@link #toHashCode}.\n If the object is already disposed or the hashCode is invalid,\n <code>null</code> is returned.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hash {String} The object's hash code.",
            "paramName": "hash",
            "description": " The object's hash code.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "suppressWarnings {Boolean?} if true warnings are suppressed; default is false",
            "paramName": "suppressWarnings",
            "description": " if true warnings are suppressed; default is false",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object} The corresponding object or <code>null</code>.",
            "type": "qx.core.Object",
            "description": "The corresponding object or <code>null</code>."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 4995
        },
        "end": {
          "line": 192,
          "column": 5,
          "index": 5408
        }
      },
      "type": "function",
      "params": [
        {
          "name": "hash",
          "type": "string"
        },
        {
          "name": "suppressWarnings",
          "type": "Boolean",
          "optional": true
        }
      ],
      "returnType": {
        "type": "qx.core.Object"
      },
      "appearsIn": []
    },
    "hasHashCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detects whether an object instance is indexed by its hash code as returned by {@link #toHashCode}.",
          "     * Unlike {@link #fromHashCode} this does not output warnings if the object does not exist",
          "     *",
          "     * @param hash {String} The object's hash code.",
          "     * @return {qx.core.Object} The corresponding object or <code>null</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether an object instance is indexed by its hash code as returned by {@link #toHashCode}.\n Unlike {@link #fromHashCode} this does not output warnings if the object does not exist</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hash {String} The object's hash code.",
            "paramName": "hash",
            "description": " The object's hash code.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object} The corresponding object or <code>null</code>.",
            "type": "qx.core.Object",
            "description": "The corresponding object or <code>null</code>."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 201,
          "column": 4,
          "index": 5770
        },
        "end": {
          "line": 203,
          "column": 5,
          "index": 5833
        }
      },
      "type": "function",
      "params": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "qx.core.Object"
      },
      "appearsIn": []
    },
    "shutdown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disposing all registered object and cleaning up registry. This is",
          "     * automatically executed at application shutdown.",
          "     *",
          "     * @deprecated {6.0} shutdown is not a valid means to clean up because destruction order",
          "     * is not defined and dispose()/destructors are deprecated in favour of automatic",
          "     * garbage collection",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disposing all registered object and cleaning up registry. This is\n automatically executed at application shutdown.</p>"
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{6.0} shutdown is not a valid means to clean up because destruction order\n is not defined and dispose()/destructors are deprecated in favour of automatic\n garbage collection"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 6196
        },
        "end": {
          "line": 261,
          "column": 5,
          "index": 7223
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getRegistry": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the object registry.",
          "     *",
          "     * @return {Object} The registry",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the object registry.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The registry",
            "type": "Record<any, any>",
            "description": "The registry"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 268,
          "column": 4,
          "index": 7326
        },
        "end": {
          "line": 270,
          "column": 5,
          "index": 7377
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    },
    "getNextHash": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the next hash code that will be used.",
          "     *",
          "     * @return {Integer} The next hash code",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the next hash code that will be used.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The next hash code",
            "type": "Integer",
            "description": "The next hash code"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 278,
          "column": 4,
          "index": 7521
        },
        "end": {
          "line": 280,
          "column": 5,
          "index": 7572
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getPostId": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the postfix that identifies the current iframe",
          "     *",
          "     * @return {Integer} The next hash code",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the postfix that identifies the current iframe</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The next hash code",
            "type": "Integer",
            "description": "The next hash code"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 288,
          "column": 4,
          "index": 7725
        },
        "end": {
          "line": 290,
          "column": 5,
          "index": 7772
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getStackTraces": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the map of stack traces recorded when objects are registered",
          "     * (for dispose profiling)",
          "     * @return {Map} Map: object hash codes to stack traces",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the map of stack traces recorded when objects are registered\n (for dispose profiling)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map: object hash codes to stack traces",
            "type": "Map<any, any>",
            "description": "Map: object hash codes to stack traces"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 298,
          "column": 4,
          "index": 7979
        },
        "end": {
          "line": 300,
          "column": 5,
          "index": 8036
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}