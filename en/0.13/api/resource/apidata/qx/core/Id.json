{
  "version": 0.3,
  "lastModified": 1731947916083,
  "lastModifiedIso": "2024-11-18T16:38:36.083Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/core/Id.js",
  "type": "class",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 551
    },
    "end": {
      "line": 215,
      "column": 3,
      "index": 6331
    }
  },
  "className": "qx.core.Id",
  "jsdoc": {
    "raw": [
      "*",
      " * Provides a registry of top level objects",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Provides a registry of top level objects</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "isSingleton": true,
  "abstract": false,
  "members": {
    "__registeredObjects": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 27,
          "column": 4,
          "index": 648
        },
        "end": {
          "line": 27,
          "column": 29,
          "index": 673
        }
      },
      "appearsIn": []
    },
    "__registeredIdHashes": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 28,
          "column": 4,
          "index": 679
        },
        "end": {
          "line": 28,
          "column": 30,
          "index": 705
        }
      },
      "appearsIn": []
    },
    "_createQxObject": {
      "jsdoc": {
        "raw": [
          "",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 744
        },
        "end": {
          "line": 37,
          "column": 5,
          "index": 915
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        }
      ],
      "mixin": "qx.core.MObjectId",
      "appearsIn": [
        "qx.core.MObjectId"
      ]
    },
    "_createQxObjectImpl": {
      "jsdoc": {
        "raw": [
          "",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 954
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1287
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        }
      ],
      "mixin": "qx.core.MObjectId",
      "appearsIn": [
        "qx.core.MObjectId"
      ]
    },
    "getAbsoluteIdOf": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an object path which can be used to locate an object anywhere in the application",
          "     * with a call to `qx.core.Id.getQxObject()`.",
          "     *",
          "     * This will return null if it is not possible to calculate a path because one of the",
          "     * ancestors has a null `qxObjectId`.",
          "     *",
          "     * This will also return null if the top-most ancestor is not one of the globals registered",
          "     * with `registerObject` or a known global (such as the application); however, by passing",
          "     * `true` as the `suppressWarnings` parameter, this will prevent errors from appearing in",
          "     * the console when this happens",
          "     *",
          "     * @param obj {qx.core.Object} the object",
          "     * @param suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created",
          "     * @return {String} full path to the object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an object path which can be used to locate an object anywhere in the application\n with a call to <code>qx.core.Id.getQxObject()</code>.\n This will return null if it is not possible to calculate a path because one of the\n ancestors has a null <code>qxObjectId</code>.\n This will also return null if the top-most ancestor is not one of the globals registered\n with <code>registerObject</code> or a known global (such as the application); however, by passing\n <code>true</code> as the <code>suppressWarnings</code> parameter, this will prevent errors from appearing in\n the console when this happens</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.core.Object} the object",
            "paramName": "obj",
            "description": " the object",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created",
            "paramName": "suppressWarnings",
            "description": " default: false; silently returns null if an ID cannot be created",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} full path to the object",
            "type": "string",
            "description": "full path to the object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 2131
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3738
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "qx.core.Object"
        },
        {
          "name": "suppressWarnings",
          "type": "Boolean",
          "optional": true
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "register": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Registers an object with an ID; as this is registering a global object which is the root of a tree",
          "     * of objects with IDs, the `id` parameter can be provided to set the ID used for the root object - this",
          "     * allows an object to be registered under a well known, common name without affecting the API of the",
          "     * object.",
          "     *",
          "     * @param obj {qx.core.Object} the object to register",
          "     * @param id {String?} the ID to register the object under, otherwise the object's own Object Id is used",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers an object with an ID; as this is registering a global object which is the root of a tree\n of objects with IDs, the <code>id</code> parameter can be provided to set the ID used for the root object - this\n allows an object to be registered under a well known, common name without affecting the API of the\n object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.core.Object} the object to register",
            "paramName": "obj",
            "description": " the object to register",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "id {String?} the ID to register the object under, otherwise the object's own Object Id is used",
            "paramName": "id",
            "description": " the ID to register the object under, otherwise the object's own Object Id is used",
            "optional": true,
            "type": "String"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 4271
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 4618
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "qx.core.Object"
        },
        {
          "name": "id",
          "type": "String",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "unregister": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Unregisters a previously registered object with an ID",
          "     *",
          "     * @param data {Object|String} the object to unregister, or the ID of the object",
          "     * @return {Boolean} whether there was an object to unregister",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Unregisters a previously registered object with an ID</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {Object|String} the object to unregister, or the ID of the object",
            "paramName": "data",
            "description": " the object to unregister, or the ID of the object",
            "type": [
              "Object",
              "String"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether there was an object to unregister",
            "type": "boolean",
            "description": "whether there was an object to unregister"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 4861
        },
        "end": {
          "line": 181,
          "column": 5,
          "index": 5445
        }
      },
      "type": "function",
      "params": [
        {
          "name": "data",
          "type": [
            "Object",
            "String"
          ]
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getRegisteredObjects": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns a map of the objects that have been registered as id roots, with",
          "     * the topmost part of the ID as key.",
          "     * @return {Object}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a map of the objects that have been registered as id roots, with\n the topmost part of the ID as key.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Record<any, any>",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 5614
        },
        "end": {
          "line": 190,
          "column": 5,
          "index": 5683
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    }
  },
  "statics": {
    "getQxObject": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns a top level instance",
          "     *",
          "     * @param id {String} the ID to look for",
          "     * @return {qx.core.Object?} the object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a top level instance</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} the ID to look for",
            "paramName": "id",
            "description": " the ID to look for",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object?} the object",
            "type": "qx.core.Object?",
            "description": "the object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 200,
          "column": 4,
          "index": 5855
        },
        "end": {
          "line": 202,
          "column": 5,
          "index": 5927
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "qx.core.Object?"
      },
      "appearsIn": []
    },
    "getAbsoluteIdOf": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper for `qx.core.Id.getAbsoluteIdOf`",
          "     *",
          "     * @param obj {qx.core.Object} the object",
          "     * @param suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created",
          "     * @return {String} full path to the object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for <code>qx.core.Id.getAbsoluteIdOf</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.core.Object} the object",
            "paramName": "obj",
            "description": " the object",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created",
            "paramName": "suppressWarnings",
            "description": " default: false; silently returns null if an ID cannot be created",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} full path to the object",
            "type": "string",
            "description": "full path to the object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 211,
          "column": 4,
          "index": 6205
        },
        "end": {
          "line": 213,
          "column": 5,
          "index": 6323
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "qx.core.Object"
        },
        {
          "name": "suppressWarnings",
          "type": "Boolean",
          "optional": true
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    }
  },
  "properties": {}
}