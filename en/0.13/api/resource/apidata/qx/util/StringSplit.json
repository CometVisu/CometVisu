{
  "version": 0.3,
  "lastModified": 1726088853141,
  "lastModifiedIso": "2024-09-11T21:07:33.141Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/util/StringSplit.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 40,
      "column": 0,
      "index": 1034
    },
    "end": {
      "line": 137,
      "column": 3,
      "index": 4456
    }
  },
  "className": "qx.util.StringSplit",
  "jsdoc": {
    "raw": [
      "*",
      " * Implements an ECMA-compliant, uniform cross-browser split method",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Implements an ECMA-compliant, uniform cross-browser split method</p>"
      }
    ]
  },
  "statics": {
    "split": {
      "jsdoc": {
        "raw": [
          "*",
          "     * ECMA-compliant, uniform cross-browser split method",
          "     *",
          "     * @param str {String} Incoming string to split",
          "     * @param separator {RegExp} Specifies the character to use for separating the string.",
          "     *   The separator is treated as a string or a  regular expression. If separator is",
          "     *   omitted, the array returned contains one element consisting of the entire string.",
          "     * @param limit {Integer?} Integer specifying a limit on the number of splits to be found.",
          "     * @return {String[]} split string",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>ECMA-compliant, uniform cross-browser split method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} Incoming string to split",
            "paramName": "str",
            "description": " Incoming string to split",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "separator {RegExp} Specifies the character to use for separating the string.\n   The separator is treated as a string or a  regular expression. If separator is\n   omitted, the array returned contains one element consisting of the entire string.",
            "paramName": "separator",
            "description": " Specifies the character to use for separating the string.\n   The separator is treated as a string or a  regular expression. If separator is\n   omitted, the array returned contains one element consisting of the entire string.",
            "type": "RegExp"
          },
          {
            "name": "@param",
            "body": "limit {Integer?} Integer specifying a limit on the number of splits to be found.",
            "paramName": "limit",
            "description": " Integer specifying a limit on the number of splits to be found.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} split string",
            "type": "String[]",
            "description": "split string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1633
        },
        "end": {
          "line": 135,
          "column": 5,
          "index": 4448
        }
      },
      "type": "function",
      "params": [
        {
          "name": "str",
          "type": "string"
        },
        {
          "name": "separator",
          "type": "RegExp"
        },
        {
          "name": "limit",
          "type": "Integer",
          "optional": true
        }
      ],
      "returnType": {
        "type": "String[]"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}