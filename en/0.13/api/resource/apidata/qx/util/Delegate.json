{
  "version": 0.3,
  "lastModified": 1735222258126,
  "lastModifiedIso": "2024-12-26T14:10:58.126Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/util/Delegate.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 585
    },
    "end": {
      "line": 57,
      "column": 3,
      "index": 1663
    }
  },
  "className": "qx.util.Delegate",
  "jsdoc": {
    "raw": [
      "*",
      " * Methods to work with the delegate pattern.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Methods to work with the delegate pattern.</p>"
      }
    ]
  },
  "statics": {
    "getMethod": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the delegate method given my its name.",
          "     *",
          "     * @param delegate {Object} The delegate object to check the method.",
          "     * @param specificMethod {String} The name of the delegate method.",
          "     * @return {Function|null} The requested method or null, if no method is set.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the delegate method given my its name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "delegate {Object} The delegate object to check the method.",
            "paramName": "delegate",
            "description": " The delegate object to check the method.",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "specificMethod {String} The name of the delegate method.",
            "paramName": "specificMethod",
            "description": " The name of the delegate method.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function|null} The requested method or null, if no method is set.",
            "type": "Function|null",
            "description": "The requested method or null, if no method is set."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 32,
          "column": 4,
          "index": 943
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1159
        }
      },
      "type": "function",
      "params": [
        {
          "name": "delegate",
          "type": "Record<any, any>"
        },
        {
          "name": "specificMethod",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Function|null"
      },
      "appearsIn": []
    },
    "containsMethod": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks, if the given delegate is valid or if a specific method is given.",
          "     *",
          "     * @param delegate {Object} The delegate object.",
          "     * @param specificMethod {String} The name of the method to search for.",
          "     * @return {Boolean} True, if everything was ok.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks, if the given delegate is valid or if a specific method is given.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "delegate {Object} The delegate object.",
            "paramName": "delegate",
            "description": " The delegate object.",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "specificMethod {String} The name of the method to search for.",
            "paramName": "specificMethod",
            "description": " The name of the method to search for.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if everything was ok.",
            "type": "boolean",
            "description": "True, if everything was ok."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1451
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1655
        }
      },
      "type": "function",
      "params": [
        {
          "name": "delegate",
          "type": "Record<any, any>"
        },
        {
          "name": "specificMethod",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}