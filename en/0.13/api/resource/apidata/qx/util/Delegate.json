{
  "className": "qx.util.Delegate",
  "packageName": "qx.util",
  "name": "Delegate",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 585
      },
      "end": {
        "line": 57,
        "column": 3,
        "index": 1663
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Methods to work with the delegate pattern.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "getMethod": {
      "location": {
        "start": {
          "line": 32,
          "column": 4,
          "index": 943
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1159
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the delegate method given my its name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "delegate {Object} The delegate object to check the method.",
            "paramName": "delegate",
            "description": " The delegate object to check the method.",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "specificMethod {String} The name of the delegate method.",
            "paramName": "specificMethod",
            "description": " The name of the delegate method.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function|null} The requested method or null, if no method is set.",
            "type": "Function|null",
            "description": " The requested method or null, if no method is set."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "containsMethod": {
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1451
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1655
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks, if the given delegate is valid or if a specific method is given.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "delegate {Object} The delegate object.",
            "paramName": "delegate",
            "description": " The delegate object.",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "specificMethod {String} The name of the method to search for.",
            "paramName": "specificMethod",
            "description": " The name of the method to search for.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if everything was ok.",
            "type": "Boolean",
            "description": " True, if everything was ok."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}