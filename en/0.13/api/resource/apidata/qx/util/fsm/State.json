{
  "className": "qx.util.fsm.State",
  "packageName": "qx.util.fsm",
  "name": "State",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0,
        "index": 530
      },
      "end": {
        "line": 887,
        "column": 3,
        "index": 28581
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new state which may be added to a finite state machine.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 145,
        "column": 2,
        "index": 5478
      },
      "end": {
        "line": 225,
        "column": 3,
        "index": 7648
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "stateName {String}\n   The name of this state.  This is the name which may be referenced in\n   objects of class qx.util.fsm.Transition, when passing of\n   the transition's predicate means transition to this state.",
          "paramName": "stateName",
          "description": "\n   The name of this state.  This is the name which may be referenced in\n   objects of class qx.util.fsm.Transition, when passing of\n   the transition's predicate means transition to this state.",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "stateInfo {Map}\n   <pre>\n   An object containing any of the following properties:\n     context -\n       A context in which all of the following functions should be run.\n     onentry -\n       A function which is called upon entry to the state.  Its signature\n       is function(fsm, event) and it is saved in the onentry property of\n       the state object.  (This function is called after the Transition's\n       action function and after the previous state's onexit function.)\n       In the onentry function:\n         fsm -\n           The finite state machine object to which this state is attached.\n         event -\n           The event that caused the finite state machine to run\n     onexit -\n       A function which is called upon exit from the state.  Its signature\n       is function(fsm, event) and it is saved in the onexit property of\n       the state object.  (This function is called after the Transition's\n       action function and before the next state's onentry function.)\n       In the onexit function:\n         fsm -\n           The finite state machine object to which this state is attached.\n         event -\n           The event that caused the finite state machine to run\n     autoActionsBeforeOnentry -\n     autoActionsAfterOnentry -\n     autoActionsBeforeOnexit -\n     autoActionsAfterOnexit -\n       Automatic actions which take place at the time specified by the\n       property name.  In all cases, the action takes place immediately\n       before or after the specified function.\n       The property value for each of these properties is an object which\n       describes some number of functions to invoke on a set of specified\n       objects (typically widgets).\n       An example, using autoActionsBeforeOnentry, might look like this:\n       \"autoActionsBeforeOnentry\" :\n       {\n\n         \"setEnabled\" :\n         [\n           {\n\n             \"parameters\" : [ true ],\n\n\n\n             \"objects\" : [ \"obj1\", \"obj2\" ],\n\n             \"groups\"  : [ \"group1\", \"group2\" ]\n           }\n         ],\n\n         \"setVisible\" :\n         [\n           {\n\n             \"parameters\" : [ false ],\n\n\n             \"objects\" : [ \"obj3\", \"obj4\" ],\n             \"groups\"  : [ \"group3\", \"group4\" ]\n           }\n         ]\n       };\n     events (required) -\n       A description to the finite state machine of how to handle a\n       particular event, optionally associated with a specific target\n       object on which the event was dispatched.  This should be an object\n       containing one property for each event which is either handled or\n       blocked.  The property name should be the event name.  The property\n       value should be one of:\n         (a) qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE\n         (b) qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED\n         (c) a string containing the name of an explicit Transition to use\n         (d) an object where each property name is the Friendly Name of an\n             object (meaning that this rule applies if both the event and\n             the event's target object's Friendly Name match), and its\n             property value is one of (a), (b) or (c), above.\n       This object is saved in the events property of the state object.\n     Additional properties may be provided in stateInfo.  They will not be\n     used by the finite state machine, but will be available via\n     this.getUserData(\"<propertyName>\") during the state's onentry and\n     onexit functions.\n   </pre>",
          "paramName": "stateInfo",
          "description": "\n   <pre>\n   An object containing any of the following properties:\n     context -\n       A context in which all of the following functions should be run.\n     onentry -\n       A function which is called upon entry to the state.  Its signature\n       is function(fsm, event) and it is saved in the onentry property of\n       the state object.  (This function is called after the Transition's\n       action function and after the previous state's onexit function.)\n       In the onentry function:\n         fsm -\n           The finite state machine object to which this state is attached.\n         event -\n           The event that caused the finite state machine to run\n     onexit -\n       A function which is called upon exit from the state.  Its signature\n       is function(fsm, event) and it is saved in the onexit property of\n       the state object.  (This function is called after the Transition's\n       action function and before the next state's onentry function.)\n       In the onexit function:\n         fsm -\n           The finite state machine object to which this state is attached.\n         event -\n           The event that caused the finite state machine to run\n     autoActionsBeforeOnentry -\n     autoActionsAfterOnentry -\n     autoActionsBeforeOnexit -\n     autoActionsAfterOnexit -\n       Automatic actions which take place at the time specified by the\n       property name.  In all cases, the action takes place immediately\n       before or after the specified function.\n       The property value for each of these properties is an object which\n       describes some number of functions to invoke on a set of specified\n       objects (typically widgets).\n       An example, using autoActionsBeforeOnentry, might look like this:\n       \"autoActionsBeforeOnentry\" :\n       {\n\n         \"setEnabled\" :\n         [\n           {\n\n             \"parameters\" : [ true ],\n\n\n\n             \"objects\" : [ \"obj1\", \"obj2\" ],\n\n             \"groups\"  : [ \"group1\", \"group2\" ]\n           }\n         ],\n\n         \"setVisible\" :\n         [\n           {\n\n             \"parameters\" : [ false ],\n\n\n             \"objects\" : [ \"obj3\", \"obj4\" ],\n             \"groups\"  : [ \"group3\", \"group4\" ]\n           }\n         ]\n       };\n     events (required) -\n       A description to the finite state machine of how to handle a\n       particular event, optionally associated with a specific target\n       object on which the event was dispatched.  This should be an object\n       containing one property for each event which is either handled or\n       blocked.  The property name should be the event name.  The property\n       value should be one of:\n         (a) qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE\n         (b) qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED\n         (c) a string containing the name of an explicit Transition to use\n         (d) an object where each property name is the Friendly Name of an\n             object (meaning that this rule applies if both the event and\n             the event's target object's Friendly Name match), and its\n             property value is one of (a), (b) or (c), above.\n       This object is saved in the events property of the state object.\n     Additional properties may be provided in stateInfo.  They will not be\n     used by the finite state machine, but will be available via\n     this.getUserData(\"<propertyName>\") during the state's onentry and\n     onexit functions.\n   </pre>",
          "type": "Map"
        }
      ],
      "@throws": [
        {
          "name": "@throws",
          "body": "{Error} If the state info is not a valid object.",
          "type": "Error",
          "description": " If the state info is not a valid object."
        },
        {
          "name": "@throws",
          "body": "{Error} If the events object is not provided in new state info.",
          "type": "Error",
          "description": " If the events object is not provided in new state info."
        }
      ]
    }
  },
  "statics": {
    "_commonTransformAutoActions": {
      "location": {
        "start": {
          "line": 286,
          "column": 4,
          "index": 9680
        },
        "end": {
          "line": 454,
          "column": 5,
          "index": 15458
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Common function for checking the value provided for\n auto actions.\n Auto-action property values passed to us look akin to:\n     <pre class='javascript'>\n     {</p>\n<pre><code>   \"setEnabled\" :\n   [\n     {\n\n       \"parameters\"   : [ true ],\n\n\n\n       \"objects\" : [ \"obj1\", \"obj2\" ]\n\n       \"groups\"  : [ \"group1\", \"group2\" ],\n     }\n   ];\n   \"setTextColor\" :\n   [\n     {\n       \"parameters\" : [ \"blue\" ]\n       \"groups\"     : [ \"group3\", \"group4\" ],\n       \"objects\"    : [ \"obj3\", \"obj4\" ]\n     }\n   ];\n };\n &lt;/pre&gt;\n</code></pre>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "actionType {String}\n   The name of the action being validated (for debug messages)",
            "paramName": "actionType",
            "description": "\n   The name of the action being validated (for debug messages)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {Object}\n   The property value which is being validated",
            "paramName": "value",
            "description": "\n   The property value which is being validated",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "context {Object}\n   The object to which the created function should be bound.",
            "paramName": "context",
            "description": "\n   The object to which the created function should be bound.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function}\n   Function that implements calls to each of the requested automatic\n   actions",
            "type": "Function",
            "description": "\n   Function that implements calls to each of the requested automatic\n   actions"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} If the value has an invalid type.",
            "type": "Error",
            "description": " If the value has an invalid type."
          },
          {
            "name": "@throws",
            "body": "{Error} If the function type is not an array.",
            "type": "Error",
            "description": " If the function type is not an array."
          },
          {
            "name": "@throws",
            "body": "{Error} If the function request parameter type is not valid.",
            "type": "Error",
            "description": " If the function request parameter type is not valid."
          },
          {
            "name": "@throws",
            "body": "{Error} If the function parameters are not valid.",
            "type": "Error",
            "description": " If the function parameters are not valid."
          },
          {
            "name": "@throws",
            "body": "{Error} If 'objects' list is invalid.",
            "type": "Error",
            "description": " If 'objects' list is invalid."
          },
          {
            "name": "@throws",
            "body": "{Error} If a name in the 'objects' list is not valid.",
            "type": "Error",
            "description": " If a name in the 'objects' list is not valid."
          },
          {
            "name": "@throws",
            "body": "{Error} If the 'groups' list is not valid.",
            "type": "Error",
            "description": " If the 'groups' list is not valid."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    }
  },
  "properties": {
    "name": {
      "location": {
        "start": {
          "line": 463,
          "column": 4,
          "index": 15672
        },
        "end": {
          "line": 466,
          "column": 5,
          "index": 15742
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The name of this state.  This name may be used as a Transition's\n nextState value, or an explicit next state in the 'events' handling\n list in a State.</p>"
          }
        ]
      },
      "name": "name",
      "propertyType": "new",
      "nullable": true,
      "transform": "__P_517_1",
      "allowNull": true
    },
    "onentry": {
      "location": {
        "start": {
          "line": 474,
          "column": 4,
          "index": 16021
        },
        "end": {
          "line": 478,
          "column": 5,
          "index": 16124
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The onentry function for this state.  This is documented in the\n constructor, and is typically provided through the constructor's\n stateInfo object, but it is also possible (but highly NOT recommended)\n to change this dynamically.</p>"
          }
        ]
      },
      "name": "onentry",
      "propertyType": "new",
      "nullable": true,
      "init": "[[ ObjectMethod Function ]]",
      "transform": "__P_517_2",
      "allowNull": true,
      "defaultValue": "[[ ObjectMethod Function ]]"
    },
    "onexit": {
      "location": {
        "start": {
          "line": 486,
          "column": 4,
          "index": 16402
        },
        "end": {
          "line": 490,
          "column": 5,
          "index": 16503
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The onexit function for this state.  This is documented in the\n constructor, and is typically provided through the constructor's\n stateInfo object, but it is also possible (but highly NOT recommended)\n to change this dynamically.</p>"
          }
        ]
      },
      "name": "onexit",
      "propertyType": "new",
      "nullable": true,
      "init": "[[ ObjectMethod Function ]]",
      "transform": "__P_517_3",
      "allowNull": true,
      "defaultValue": "[[ ObjectMethod Function ]]"
    },
    "autoActionsBeforeOnentry": {
      "location": {
        "start": {
          "line": 520,
          "column": 4,
          "index": 17486
        },
        "end": {
          "line": 524,
          "column": 5,
          "index": 17623
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Automatic actions to take prior to calling the state's onentry function.\n The value passed to setAutoActionsBeforeOnentry() should like something\n akin to:\n     <pre class='javascript'>\n     \"autoActionsBeforeOnentry\" :\n     {</p>\n<pre><code>   \"enabled\" :\n   [\n     {\n\n       \"parameters\" : [ true ],\n\n\n\n       \"objects\" : [ \"obj1\", \"obj2\" ]\n\n       \"groups\"  : [ \"group1\", \"group2\" ],\n     }\n   ];\n };\n &lt;/pre&gt;\n</code></pre>"
          }
        ]
      },
      "name": "autoActionsBeforeOnentry",
      "propertyType": "new",
      "nullable": true,
      "init": "[[ ObjectMethod Function ]]",
      "transform": "__P_517_4",
      "allowNull": true,
      "defaultValue": "[[ ObjectMethod Function ]]"
    },
    "autoActionsAfterOnentry": {
      "location": {
        "start": {
          "line": 555,
          "column": 4,
          "index": 18612
        },
        "end": {
          "line": 559,
          "column": 5,
          "index": 18747
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Automatic actions to take after return from the state's onentry\n function.\n The value passed to setAutoActionsAfterOnentry() should like something\n akin to:\n     <pre class='javascript'>\n     \"autoActionsAfterOnentry\" :\n     {</p>\n<pre><code>   \"enabled\" :\n   [\n     {\n\n       \"parameters\" : [ true ],\n\n\n\n       \"objects\" : [ \"obj1\", \"obj2\" ]\n\n       \"groups\"  : [ \"group1\", \"group2\" ],\n     }\n   ];\n };\n &lt;/pre&gt;\n</code></pre>"
          }
        ]
      },
      "name": "autoActionsAfterOnentry",
      "propertyType": "new",
      "nullable": true,
      "init": "[[ ObjectMethod Function ]]",
      "transform": "__P_517_5",
      "allowNull": true,
      "defaultValue": "[[ ObjectMethod Function ]]"
    },
    "autoActionsBeforeOnexit": {
      "location": {
        "start": {
          "line": 589,
          "column": 4,
          "index": 19727
        },
        "end": {
          "line": 593,
          "column": 5,
          "index": 19862
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Automatic actions to take prior to calling the state's onexit function.\n The value passed to setAutoActionsBeforeOnexit() should like something\n akin to:\n     <pre class='javascript'>\n     \"autoActionsBeforeOnexit\" :\n     {</p>\n<pre><code>   \"enabled\" :\n   [\n     {\n\n       \"parameters\" : [ true ],\n\n\n\n       \"objects\" : [ \"obj1\", \"obj2\" ]\n\n       \"groups\"  : [ \"group1\", \"group2\" ],\n     }\n   ];\n };\n &lt;/pre&gt;\n</code></pre>"
          }
        ]
      },
      "name": "autoActionsBeforeOnexit",
      "propertyType": "new",
      "nullable": true,
      "init": "[[ ObjectMethod Function ]]",
      "transform": "__P_517_6",
      "allowNull": true,
      "defaultValue": "[[ ObjectMethod Function ]]"
    },
    "autoActionsAfterOnexit": {
      "location": {
        "start": {
          "line": 624,
          "column": 4,
          "index": 20852
        },
        "end": {
          "line": 628,
          "column": 5,
          "index": 20985
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Automatic actions to take after returning from the state's onexit\n function.\n The value passed to setAutoActionsAfterOnexit() should like something\n akin to:\n     <pre class='javascript'>\n     \"autoActionsBeforeOnexit\" :\n     {</p>\n<pre><code>   \"enabled\" :\n   [\n     {\n\n       \"parameters\" : [ true ],\n\n\n\n       \"objects\" : [ \"obj1\", \"obj2\" ]\n\n       \"groups\"  : [ \"group1\", \"group2\" ],\n     }\n   ];\n };\n &lt;/pre&gt;\n</code></pre>"
          }
        ]
      },
      "name": "autoActionsAfterOnexit",
      "propertyType": "new",
      "nullable": true,
      "init": "[[ ObjectMethod Function ]]",
      "transform": "__P_517_7",
      "allowNull": true,
      "defaultValue": "[[ ObjectMethod Function ]]"
    },
    "events": {
      "location": {
        "start": {
          "line": 636,
          "column": 4,
          "index": 21293
        },
        "end": {
          "line": 639,
          "column": 5,
          "index": 21367
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The object representing handled and blocked events for this state.\n This is documented in the constructor, and is typically provided\n through the constructor's stateInfo object, but it is also possible\n (but highly NOT recommended) to change this dynamically.</p>"
          }
        ]
      },
      "name": "events",
      "propertyType": "new",
      "nullable": true,
      "transform": "__P_517_8",
      "allowNull": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__transformName": {
      "location": {
        "start": {
          "line": 650,
          "column": 4,
          "index": 21590
        },
        "end": {
          "line": 657,
          "column": 5,
          "index": 21801
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Value passed to setter",
            "paramName": "value",
            "description": " Value passed to setter",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} when an invalid value is detected",
            "type": "Error",
            "description": " when an invalid value is detected"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__transformOnentry": {
      "location": {
        "start": {
          "line": 666,
          "column": 4,
          "index": 21998
        },
        "end": {
          "line": 680,
          "column": 5,
          "index": 22470
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} when an invalid value is detected",
            "type": "Error",
            "description": " when an invalid value is detected"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__transformOnexit": {
      "location": {
        "start": {
          "line": 689,
          "column": 4,
          "index": 22667
        },
        "end": {
          "line": 703,
          "column": 5,
          "index": 23136
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} when an invalid value is detected",
            "type": "Error",
            "description": " when an invalid value is detected"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__transformEvents": {
      "location": {
        "start": {
          "line": 712,
          "column": 4,
          "index": 23333
        },
        "end": {
          "line": 784,
          "column": 5,
          "index": 25878
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} when an invalid value is detected",
            "type": "Error",
            "description": " when an invalid value is detected"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__transformAutoActionsBeforeOnentry": {
      "location": {
        "start": {
          "line": 792,
          "column": 4,
          "index": 26018
        },
        "end": {
          "line": 798,
          "column": 5,
          "index": 26224
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__transformAutoActionsAfterOnentry": {
      "location": {
        "start": {
          "line": 806,
          "column": 4,
          "index": 26364
        },
        "end": {
          "line": 812,
          "column": 5,
          "index": 26568
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__transformAutoActionsBeforeOnexit": {
      "location": {
        "start": {
          "line": 820,
          "column": 4,
          "index": 26708
        },
        "end": {
          "line": 826,
          "column": 5,
          "index": 26912
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__transformAutoActionsAfterOnexit": {
      "location": {
        "start": {
          "line": 834,
          "column": 4,
          "index": 27052
        },
        "end": {
          "line": 840,
          "column": 5,
          "index": 27254
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal transform method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the final value",
            "type": "var",
            "description": " the final value"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__bindIfFunction": {
      "location": {
        "start": {
          "line": 856,
          "column": 4,
          "index": 27731
        },
        "end": {
          "line": 864,
          "column": 5,
          "index": 27969
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If given a function, bind it to a specified context.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "f {Function|var}\n   The (possibly) function to be bound to the specified context.",
            "paramName": "f",
            "description": "\n   The (possibly) function to be bound to the specified context.",
            "type": [
              "Function",
              "var"
            ]
          },
          {
            "name": "@param",
            "body": "context {Object}\n   The context to bind the function to.",
            "paramName": "context",
            "description": "\n   The context to bind the function to.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function}\n   If f was a function, the return value is f wrapped such that it will\n   be called in the specified context. Otherwise, f is returned\n   unaltered.",
            "type": "Function",
            "description": "\n   If f was a function, the return value is f wrapped such that it will\n   be called in the specified context. Otherwise, f is returned\n   unaltered."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "addTransition": {
      "location": {
        "start": {
          "line": 875,
          "column": 4,
          "index": 28216
        },
        "end": {
          "line": 885,
          "column": 5,
          "index": 28573
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a transition to a state</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "trans {qx.util.fsm.Transition}\n   An object of class qx.util.fsm.Transition representing a transition\n   which is to be a part of this state.",
            "paramName": "trans",
            "description": "\n   An object of class qx.util.fsm.Transition representing a transition\n   which is to be a part of this state.",
            "type": "qx.util.fsm.Transition"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getName": {
      "type": "function",
      "name": "getName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for name"
          }
        ]
      }
    },
    "setName": {
      "type": "function",
      "name": "setName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for name"
          }
        ]
      }
    },
    "resetName": {
      "type": "function",
      "name": "resetName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>name</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ]
      }
    },
    "getOnentry": {
      "type": "function",
      "name": "getOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>onentry</code>.\n\nFor further details take a look at the property definition: {@link #onentry}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for onentry"
          }
        ]
      }
    },
    "setOnentry": {
      "type": "function",
      "name": "setOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>onentry</code>.\n\nFor further details take a look at the property definition: {@link #onentry}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for onentry"
          }
        ]
      }
    },
    "resetOnentry": {
      "type": "function",
      "name": "resetOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>onentry</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #onentry}."
          }
        ]
      }
    },
    "getOnexit": {
      "type": "function",
      "name": "getOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>onexit</code>.\n\nFor further details take a look at the property definition: {@link #onexit}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for onexit"
          }
        ]
      }
    },
    "setOnexit": {
      "type": "function",
      "name": "setOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>onexit</code>.\n\nFor further details take a look at the property definition: {@link #onexit}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for onexit"
          }
        ]
      }
    },
    "resetOnexit": {
      "type": "function",
      "name": "resetOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>onexit</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #onexit}."
          }
        ]
      }
    },
    "getAutoActionsBeforeOnentry": {
      "type": "function",
      "name": "getAutoActionsBeforeOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>autoActionsBeforeOnentry</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsBeforeOnentry}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for autoActionsBeforeOnentry"
          }
        ]
      }
    },
    "setAutoActionsBeforeOnentry": {
      "type": "function",
      "name": "setAutoActionsBeforeOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>autoActionsBeforeOnentry</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsBeforeOnentry}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for autoActionsBeforeOnentry"
          }
        ]
      }
    },
    "resetAutoActionsBeforeOnentry": {
      "type": "function",
      "name": "resetAutoActionsBeforeOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>autoActionsBeforeOnentry</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #autoActionsBeforeOnentry}."
          }
        ]
      }
    },
    "getAutoActionsAfterOnentry": {
      "type": "function",
      "name": "getAutoActionsAfterOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>autoActionsAfterOnentry</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsAfterOnentry}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for autoActionsAfterOnentry"
          }
        ]
      }
    },
    "setAutoActionsAfterOnentry": {
      "type": "function",
      "name": "setAutoActionsAfterOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>autoActionsAfterOnentry</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsAfterOnentry}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for autoActionsAfterOnentry"
          }
        ]
      }
    },
    "resetAutoActionsAfterOnentry": {
      "type": "function",
      "name": "resetAutoActionsAfterOnentry",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>autoActionsAfterOnentry</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #autoActionsAfterOnentry}."
          }
        ]
      }
    },
    "getAutoActionsBeforeOnexit": {
      "type": "function",
      "name": "getAutoActionsBeforeOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>autoActionsBeforeOnexit</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsBeforeOnexit}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for autoActionsBeforeOnexit"
          }
        ]
      }
    },
    "setAutoActionsBeforeOnexit": {
      "type": "function",
      "name": "setAutoActionsBeforeOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>autoActionsBeforeOnexit</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsBeforeOnexit}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for autoActionsBeforeOnexit"
          }
        ]
      }
    },
    "resetAutoActionsBeforeOnexit": {
      "type": "function",
      "name": "resetAutoActionsBeforeOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>autoActionsBeforeOnexit</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #autoActionsBeforeOnexit}."
          }
        ]
      }
    },
    "getAutoActionsAfterOnexit": {
      "type": "function",
      "name": "getAutoActionsAfterOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>autoActionsAfterOnexit</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsAfterOnexit}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for autoActionsAfterOnexit"
          }
        ]
      }
    },
    "setAutoActionsAfterOnexit": {
      "type": "function",
      "name": "setAutoActionsAfterOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>autoActionsAfterOnexit</code>.\n\nFor further details take a look at the property definition: {@link #autoActionsAfterOnexit}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for autoActionsAfterOnexit"
          }
        ]
      }
    },
    "resetAutoActionsAfterOnexit": {
      "type": "function",
      "name": "resetAutoActionsAfterOnexit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>autoActionsAfterOnexit</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #autoActionsAfterOnexit}."
          }
        ]
      }
    },
    "getEvents": {
      "type": "function",
      "name": "getEvents",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>events</code>.\n\nFor further details take a look at the property definition: {@link #events}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for events"
          }
        ]
      }
    },
    "setEvents": {
      "type": "function",
      "name": "setEvents",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>events</code>.\n\nFor further details take a look at the property definition: {@link #events}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for events"
          }
        ]
      }
    },
    "resetEvents": {
      "type": "function",
      "name": "resetEvents",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>events</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #events}."
          }
        ]
      }
    }
  },
  "descendants": []
}