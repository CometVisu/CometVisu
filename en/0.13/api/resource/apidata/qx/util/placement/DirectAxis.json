{
  "className": "qx.util.placement.DirectAxis",
  "packageName": "qx.util.placement",
  "name": "DirectAxis",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 654
      },
      "end": {
        "line": 64,
        "column": 3,
        "index": 2781
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Places the object directly at the specified position. It is not moved if\n parts of the object are outside of the axis' range.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "_moveToEdgeAndAlign": {
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 1431
        },
        "end": {
          "line": 39,
          "column": 75,
          "index": 1502
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the start of the object by taking only the attachment and\n alignment into account. The object by be not fully visible.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "size {Integer} Size of the object to align",
            "paramName": "size",
            "description": " Size of the object to align",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "target {Map} Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "paramName": "target",
            "description": " Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "offsets {Map} Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "paramName": "offsets",
            "description": " Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "position {String} Accepts the same values as the <code> position</code>\n   argument of {@link #computeStart}.",
            "paramName": "position",
            "description": " Accepts the same values as the <code> position</code>\n   argument of {@link #computeStart}.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The computed start position of the object.",
            "type": "Integer",
            "description": " The computed start position of the object."
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "computeStart": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 2638
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 2773
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the start of the object on the axis</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "size {Integer} Size of the object to align",
            "paramName": "size",
            "description": " Size of the object to align",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "target {Map} Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "paramName": "target",
            "description": " Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "offsets {Map} Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "paramName": "offsets",
            "description": " Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "areaSize {Integer} Size of the axis.",
            "paramName": "areaSize",
            "description": " Size of the axis.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "position {String} Alignment of the object on the target. Valid values are\n   <ul>\n   <li><code>edge-start</code> The object is placed before the target</li>\n   <li><code>edge-end</code> The object is placed after the target</li>\n   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>\n   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>\n   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>\n   </ul>",
            "paramName": "position",
            "description": " Alignment of the object on the target. Valid values are\n   <ul>\n   <li><code>edge-start</code> The object is placed before the target</li>\n   <li><code>edge-end</code> The object is placed after the target</li>\n   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>\n   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>\n   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>\n   </ul>",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The computed start position of the object.",
            "type": "Integer",
            "description": " The computed start position of the object."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}