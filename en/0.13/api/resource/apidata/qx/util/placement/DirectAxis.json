{
  "version": 0.3,
  "lastModified": 1735383687197,
  "lastModifiedIso": "2024-12-28T11:01:27.197Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/util/placement/DirectAxis.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 654
    },
    "end": {
      "line": 64,
      "column": 3,
      "index": 2781
    }
  },
  "className": "qx.util.placement.DirectAxis",
  "jsdoc": {
    "raw": [
      "*",
      " * Places the object directly at the specified position. It is not moved if",
      " * parts of the object are outside of the axis' range.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Places the object directly at the specified position. It is not moved if\n parts of the object are outside of the axis' range.</p>"
      }
    ]
  },
  "statics": {
    "_moveToEdgeAndAlign": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Computes the start of the object by taking only the attachment and",
          "     * alignment into account. The object by be not fully visible.",
          "     *",
          "     * @param size {Integer} Size of the object to align",
          "     * @param target {Map} Location of the object to align the object to. This map",
          "     *   should have the keys <code>start</code> and <code>end</code>.",
          "     * @param offsets {Map} Map with all offsets on each side.",
          "     *   Comes with the keys <code>start</code> and <code>end</code>.",
          "     * @param position {String} Accepts the same values as the <code> position</code>",
          "     *   argument of {@link #computeStart}.",
          "     * @return {Integer} The computed start position of the object.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the start of the object by taking only the attachment and\n alignment into account. The object by be not fully visible.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "size {Integer} Size of the object to align",
            "paramName": "size",
            "description": " Size of the object to align",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "target {Map} Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "paramName": "target",
            "description": " Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "offsets {Map} Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "paramName": "offsets",
            "description": " Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "position {String} Accepts the same values as the <code> position</code>\n   argument of {@link #computeStart}.",
            "paramName": "position",
            "description": " Accepts the same values as the <code> position</code>\n   argument of {@link #computeStart}.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The computed start position of the object.",
            "type": "Integer",
            "description": "The computed start position of the object."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 1431
        },
        "end": {
          "line": 39,
          "column": 75,
          "index": 1502
        }
      },
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "computeStart": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Computes the start of the object on the axis",
          "     *",
          "     * @param size {Integer} Size of the object to align",
          "     * @param target {Map} Location of the object to align the object to. This map",
          "     *   should have the keys <code>start</code> and <code>end</code>.",
          "     * @param offsets {Map} Map with all offsets on each side.",
          "     *   Comes with the keys <code>start</code> and <code>end</code>.",
          "     * @param areaSize {Integer} Size of the axis.",
          "     * @param position {String} Alignment of the object on the target. Valid values are",
          "     *   <ul>",
          "     *   <li><code>edge-start</code> The object is placed before the target</li>",
          "     *   <li><code>edge-end</code> The object is placed after the target</li>",
          "     *   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>",
          "     *   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>",
          "     *   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>",
          "     *   </ul>",
          "     * @return {Integer} The computed start position of the object.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the start of the object on the axis</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "size {Integer} Size of the object to align",
            "paramName": "size",
            "description": " Size of the object to align",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "target {Map} Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "paramName": "target",
            "description": " Location of the object to align the object to. This map\n   should have the keys <code>start</code> and <code>end</code>.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "offsets {Map} Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "paramName": "offsets",
            "description": " Map with all offsets on each side.\n   Comes with the keys <code>start</code> and <code>end</code>.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "areaSize {Integer} Size of the axis.",
            "paramName": "areaSize",
            "description": " Size of the axis.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "position {String} Alignment of the object on the target. Valid values are\n   <ul>\n   <li><code>edge-start</code> The object is placed before the target</li>\n   <li><code>edge-end</code> The object is placed after the target</li>\n   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>\n   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>\n   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>\n   </ul>",
            "paramName": "position",
            "description": " Alignment of the object on the target. Valid values are\n   <ul>\n   <li><code>edge-start</code> The object is placed before the target</li>\n   <li><code>edge-end</code> The object is placed after the target</li>\n   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>\n   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>\n   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>\n   </ul>",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The computed start position of the object.",
            "type": "Integer",
            "description": "The computed start position of the object."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 2638
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 2773
        }
      },
      "type": "function",
      "params": [
        {
          "name": "size",
          "type": "Integer"
        },
        {
          "name": "target",
          "type": "Map<any, any>"
        },
        {
          "name": "offsets",
          "type": "Map<any, any>"
        },
        {
          "name": "areaSize",
          "type": "Integer"
        },
        {
          "name": "position",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}