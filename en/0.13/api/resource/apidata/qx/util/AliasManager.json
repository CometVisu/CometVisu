{
  "className": "qx.util.AliasManager",
  "packageName": "qx.util",
  "name": "AliasManager",
  "superClass": "qx.util.ValueManager",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 45,
        "column": 0,
        "index": 1798
      },
      "end": {
        "line": 174,
        "column": 3,
        "index": 5034
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This singleton manages global resource aliases.\n The AliasManager supports simple prefix replacement on strings. There are\n some pre-defined aliases, and you can register your own with {@link #add}.\n The AliasManager is automatically invoked in various situations, e.g. when\n resolving the icon image for a button, so it is common to register aliases for\n <a href=\"http://qooxdoo.org/docs/#desktop/gui/resources.md\">resource id's</a>.\n You can of course call the AliasManager's {@link #resolve}\n explicitly to get an alias resolution in any situation, but keep that\n automatic invocation of the AliasManager in mind when defining new aliases as\n they will be applied globally in many classes, not only your own.\n Examples:\n </p>\n<ul>\n  <li> <code>foo</code> -> <code>bar/16pt/baz</code>  (resolves e.g. __\"foo/a/b/c.png\"__ to\n    __\"bar/16pt/baz/a/b/c.png\"__)\n  <li> <code>imgserver</code> -> <code>http&#058;&#047;&#047;imgs03.myserver.com/my/app/</code>\n    (resolves e.g. __\"imgserver/a/b/c.png\"__ to\n    __\"http&#058;&#047;&#047;imgs03.myserver.com/my/app/a/b/c.png\"__)\n </ul>\n<p>For resources, only aliases that resolve to proper resource id's can be <strong>managed</strong>\n resources, and will be considered <strong>unmanaged</strong> resources otherwise.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 55,
        "column": 2,
        "index": 2084
      },
      "end": {
        "line": 63,
        "column": 3,
        "index": 2293
      }
    },
    "jsdoc": {}
  },
  "members": {
    "__aliases": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2497
        },
        "end": {
          "line": 72,
          "column": 19,
          "index": 2512
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_preprocess": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2672
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 3494
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>pre-process incoming dynamic value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} incoming value",
            "paramName": "value",
            "description": " incoming value",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} pre processed value",
            "type": "String",
            "description": " pre processed value"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "add": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3714
        },
        "end": {
          "line": 131,
          "column": 5,
          "index": 4101
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Define an alias to a resource path</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "alias {String} alias name for the resource path/url",
            "paramName": "alias",
            "description": " alias name for the resource path/url",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "base {String} first part of URI for all images which use this alias",
            "paramName": "base",
            "description": " first part of URI for all images which use this alias",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 4238
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 4404
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove a previously defined alias</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "alias {String} alias name for the resource path/url",
            "paramName": "alias",
            "description": " alias name for the resource path/url",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resolve": {
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 4568
        },
        "end": {
          "line": 159,
          "column": 5,
          "index": 4740
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resolves a given path</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} input path",
            "paramName": "path",
            "description": " input path",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} resulting path (with interpreted aliases)",
            "type": "String",
            "description": " resulting path (with interpreted aliases)"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.util.ValueManager",
      "appearsIn": [
        "qx.util.ValueManager"
      ]
    },
    "getAliases": {
      "location": {
        "start": {
          "line": 166,
          "column": 4,
          "index": 4880
        },
        "end": {
          "line": 172,
          "column": 5,
          "index": 5026
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get registered aliases</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} the map of the currently registered alias:resolution pairs",
            "type": "Map",
            "description": " the map of the currently registered alias:resolution pairs"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}