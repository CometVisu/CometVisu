{
  "version": 0.3,
  "lastModified": 1735341602315,
  "lastModifiedIso": "2024-12-27T23:20:02.315Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/util/ObjectPool.js",
  "type": "class",
  "location": {
    "start": {
      "line": 30,
      "column": 0,
      "index": 884
    },
    "end": {
      "line": 193,
      "column": 3,
      "index": 5082
    }
  },
  "className": "qx.util.ObjectPool",
  "jsdoc": {
    "raw": [
      "*",
      " * This class manages pooled Object instances.",
      " *",
      " * It exists mainly to minimize the amount of browser memory usage by reusing",
      " * window instances after they have been closed.  However, it could equally be",
      " * used to pool instances of any type of Object (expect singletons).",
      " *",
      " * It is the client's responsibility to ensure that pooled objects are not",
      " * referenced or used from anywhere else in the application.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This class manages pooled Object instances.\n It exists mainly to minimize the amount of browser memory usage by reusing\n window instances after they have been closed.  However, it could equally be\n used to pool instances of any type of Object (expect singletons).\n It is the client's responsibility to ensure that pooled objects are not\n referenced or used from anywhere else in the application.</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "size"
      }
    ],
    "location": {
      "start": {
        "line": 43,
        "column": 2,
        "index": 1240
      },
      "end": {
        "line": 51,
        "column": 3,
        "index": 1354
      }
    }
  },
  "properties": {
    "size": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1891
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1949
        }
      },
      "json": {
        "check": "Integer",
        "init": "Infinity"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Number of objects of each class, which are pooled.",
          "     *",
          "     * A size of \"null\" represents an unlimited pool.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Number of objects of each class, which are pooled.\n A size of \"null\" represents an unlimited pool.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__pool": {
      "jsdoc": {
        "raw": [
          "* @type {Map} Stores arrays of instances for all managed classes "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Stores arrays of instances for all managed classes"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2231
        },
        "end": {
          "line": 85,
          "column": 16,
          "index": 2243
        }
      },
      "appearsIn": []
    },
    "getObject": {
      "jsdoc": {
        "raw": [
          "*",
          "     * This method finds and returns an instance of a requested type in the pool,",
          "     * if there is one.  Note that the pool determines which instance (if any) to",
          "     * return to the client.  The client cannot get a specific instance from the",
          "     * pool.",
          "     *",
          "     * @param clazz {Class} A reference to a class from which an instance should be created.",
          "     * @return {Object} An instance of the requested type. If non existed in the pool a new",
          "     *   one is transparently created and returned.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method finds and returns an instance of a requested type in the pool,\n if there is one.  Note that the pool determines which instance (if any) to\n return to the client.  The client cannot get a specific instance from the\n pool.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} A reference to a class from which an instance should be created.",
            "paramName": "clazz",
            "description": " A reference to a class from which an instance should be created.",
            "type": "Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} An instance of the requested type. If non existed in the pool a new\n   one is transparently created and returned.",
            "type": "Record<any, any>",
            "description": "An instance of the requested type. If non existed in the pool a new\n   one is transparently created and returned."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2954
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3367
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        }
      ],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    },
    "poolObject": {
      "jsdoc": {
        "raw": [
          "*",
          "     * This method places an Object in a pool of Objects of its type. Note that",
          "     * once an instance has been pooled, there is no means to get that exact",
          "     * instance back. The instance may be discarded for garbage collection if",
          "     * the pool of its type is already full.",
          "     *",
          "     * It is assumed that no other references exist to this Object, and that it will",
          "     * not be used at all while it is pooled.",
          "     *",
          "     * @param obj {Object} An Object instance to pool.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method places an Object in a pool of Objects of its type. Note that\n once an instance has been pooled, there is no means to get that exact\n instance back. The instance may be discarded for garbage collection if\n the pool of its type is already full.\n It is assumed that no other references exist to this Object, and that it will\n not be used at all while it is pooled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} An Object instance to pool.",
            "paramName": "obj",
            "description": " An Object instance to pool.",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 139,
          "column": 4,
          "index": 3870
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4631
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 180,
        "column": 2,
        "index": 4827
      },
      "end": {
        "line": 192,
        "column": 3,
        "index": 5078
      }
    }
  },
  "statics": {}
}