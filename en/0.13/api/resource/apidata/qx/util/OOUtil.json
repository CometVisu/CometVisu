{
  "version": 0.3,
  "lastModified": 1735383688161,
  "lastModifiedIso": "2024-12-28T11:01:28.161Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/util/OOUtil.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 678
    },
    "end": {
      "line": 164,
      "column": 3,
      "index": 4622
    }
  },
  "className": "qx.util.OOUtil",
  "jsdoc": {
    "raw": [
      "*",
      " * This class is a base class for the OO system defined by Class, Mixin",
      " * and Interface. It contains helper which are basically needed to create the",
      " * Classes which define the OO system.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This class is a base class for the OO system defined by Class, Mixin\n and Interface. It contains helper which are basically needed to create the\n Classes which define the OO system.</p>"
      }
    ]
  },
  "statics": {
    "classIsDefined": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the given class exists",
          "     *",
          "     * @param name {String} class name to check",
          "     * @return {Boolean} true if class exists",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given class exists</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} class name to check",
            "paramName": "name",
            "description": " class name to check",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if class exists",
            "type": "boolean",
            "description": "true if class exists"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 31,
          "column": 4,
          "index": 890
        },
        "end": {
          "line": 33,
          "column": 5,
          "index": 975
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getPropertyDefinition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the definition of the given property, if not redefined.",
          "     * Returns null if the property does not exist.",
          "     *",
          "     * @param clazz {Class} class to check",
          "     * @param name {String} name of the class to check for",
          "     * @return {Map|null} whether the object support the given event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the definition of the given property, if not redefined.\n Returns null if the property does not exist.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} class to check",
            "paramName": "clazz",
            "description": " class to check",
            "type": "Class"
          },
          {
            "name": "@param",
            "body": "name {String} name of the class to check for",
            "paramName": "name",
            "description": " name of the class to check for",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map|null} whether the object support the given event.",
            "type": "Map|null",
            "description": "whether the object support the given event."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1300
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1542
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Map|null"
      },
      "appearsIn": []
    },
    "hasProperty": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether a class has the given property",
          "     *",
          "     * @param clazz {Class} class to check",
          "     * @param name {String} name of the property to check for",
          "     * @return {Boolean} whether the class includes the given property.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether a class has the given property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} class to check",
            "paramName": "clazz",
            "description": " class to check",
            "type": "Class"
          },
          {
            "name": "@param",
            "body": "name {String} name of the property to check for",
            "paramName": "name",
            "description": " name of the property to check for",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the class includes the given property.",
            "type": "boolean",
            "description": "whether the class includes the given property."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1795
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1893
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getEventType": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the event type of the given event. Returns null if",
          "     * the event does not exist.",
          "     *",
          "     * @param clazz {Class} class to check",
          "     * @param name {String} name of the event",
          "     * @return {String|null} Event type of the given event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the event type of the given event. Returns null if\n the event does not exist.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} class to check",
            "paramName": "clazz",
            "description": " class to check",
            "type": "Class"
          },
          {
            "name": "@param",
            "body": "name {String} name of the event",
            "paramName": "name",
            "description": " name of the event",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} Event type of the given event.",
            "type": "String|null",
            "description": "Event type of the given event."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 2171
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2455
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "String|null"
      },
      "appearsIn": []
    },
    "supportsEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether a class supports the given event type",
          "     *",
          "     * @param clazz {Class} class to check",
          "     * @param name {String} name of the event to check for",
          "     * @return {Boolean} whether the class supports the given event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether a class supports the given event type</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} class to check",
            "paramName": "clazz",
            "description": " class to check",
            "type": "Class"
          },
          {
            "name": "@param",
            "body": "name {String} name of the event to check for",
            "paramName": "name",
            "description": " name of the event to check for",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the class supports the given event.",
            "type": "boolean",
            "description": "whether the class supports the given event."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2709
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2800
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getByInterface": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the class or one of its super classes which contains the",
          "     * declaration of the given interface. Returns null if the interface is not",
          "     * specified anywhere.",
          "     *",
          "     * @param clazz {Class} class to look for the interface",
          "     * @param iface {Interface} interface to look for",
          "     * @return {Class|null} the class which directly implements the given interface",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the class or one of its super classes which contains the\n declaration of the given interface. Returns null if the interface is not\n specified anywhere.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} class to look for the interface",
            "paramName": "clazz",
            "description": " class to look for the interface",
            "type": "Class"
          },
          {
            "name": "@param",
            "body": "iface {Interface} interface to look for",
            "paramName": "iface",
            "description": " interface to look for",
            "type": "Interface"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Class|null} the class which directly implements the given interface",
            "type": "Class|null",
            "description": "the class which directly implements the given interface"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 3207
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3581
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        },
        {
          "name": "iface",
          "type": "Interface"
        }
      ],
      "returnType": {
        "type": "Class|null"
      },
      "appearsIn": []
    },
    "hasInterface": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether a given class or any of its super classes includes a given interface.",
          "     *",
          "     * This function will return \"true\" if the interface was defined",
          "     * in the class declaration ({@link qx.Class#define}) of the class",
          "     * or any of its super classes using the \"implement\"",
          "     * key.",
          "     *",
          "     * @param clazz {Class} class to check",
          "     * @param iface {Interface} the interface to check for",
          "     * @return {Boolean} whether the class includes the interface.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether a given class or any of its super classes includes a given interface.\n This function will return \"true\" if the interface was defined\n in the class declaration ({@link qx.Class#define}) of the class\n or any of its super classes using the \"implement\"\n key.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} class to check",
            "paramName": "clazz",
            "description": " class to check",
            "type": "Class"
          },
          {
            "name": "@param",
            "body": "iface {Interface} the interface to check for",
            "paramName": "iface",
            "description": " the interface to check for",
            "type": "Interface"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the class includes the interface.",
            "type": "boolean",
            "description": "whether the class includes the interface."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 4081
        },
        "end": {
          "line": 142,
          "column": 5,
          "index": 4175
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        },
        {
          "name": "iface",
          "type": "Interface"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getMixins": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns a list of all mixins available in a given class.",
          "     *",
          "     * @param clazz {Class} class which should be inspected",
          "     * @return {Mixin[]} array of mixins this class uses",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a list of all mixins available in a given class.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} class which should be inspected",
            "paramName": "clazz",
            "description": " class which should be inspected",
            "type": "Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Mixin[]} array of mixins this class uses",
            "type": "Mixin[]",
            "description": "array of mixins this class uses"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 150,
          "column": 4,
          "index": 4386
        },
        "end": {
          "line": 162,
          "column": 5,
          "index": 4614
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clazz",
          "type": "Class"
        }
      ],
      "returnType": {
        "type": "Mixin[]"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}