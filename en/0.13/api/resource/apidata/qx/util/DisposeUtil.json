{
  "version": 0.3,
  "lastModified": 1735222258306,
  "lastModifiedIso": "2024-12-26T14:10:58.306Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/util/DisposeUtil.js",
  "type": "class",
  "location": {
    "start": {
      "line": 32,
      "column": 0,
      "index": 835
    },
    "end": {
      "line": 264,
      "column": 3,
      "index": 7461
    }
  },
  "className": "qx.util.DisposeUtil",
  "jsdoc": {
    "raw": [
      "*",
      " * Methods to cleanup fields from maps/objects.",
      " *",
      " * @ignore(qx.log.Logger)",
      " * @ignore(qx.log)",
      " * @ignore(qx.ui.container.Composite)",
      " * @ignore(qx.ui.container.Scroll)",
      " * @ignore(qx.ui.container.SlideBar)",
      " * @ignore(qx.ui.container.Stack)",
      " * @ignore(qx.ui.mobile)",
      " * @ignore(qx.ui.mobile.container.Composite)",
      " * @ignore(qx.ui.mobile.core.Widget)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Methods to cleanup fields from maps/objects.</p>"
      }
    ],
    "@ignore": [
      {
        "name": "@ignore",
        "body": "qx.log.Logger"
      },
      {
        "name": "@ignore",
        "body": "qx.log"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.container.Composite"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.container.Scroll"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.container.SlideBar"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.container.Stack"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.mobile"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.mobile.container.Composite"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.mobile.core.Widget"
      }
    ]
  },
  "statics": {
    "disposeObjects": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disconnects and disposes given objects from instance.",
          "     * Only works with qx.core.Object based objects e.g. Widgets.",
          "     *",
          "     * @param obj {Object} Object which contains the fields",
          "     * @param arr {Array} List of fields (which store objects) to dispose",
          "     * @param disposeSingletons {Boolean?} true, if singletons should be disposed",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects and disposes given objects from instance.\n Only works with qx.core.Object based objects e.g. Widgets.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} Object which contains the fields",
            "paramName": "obj",
            "description": " Object which contains the fields",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "arr {Array} List of fields (which store objects) to dispose",
            "paramName": "arr",
            "description": " List of fields (which store objects) to dispose",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "disposeSingletons {Boolean?} true, if singletons should be disposed",
            "paramName": "disposeSingletons",
            "description": " true, if singletons should be disposed",
            "optional": true,
            "type": "Boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1259
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 2128
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        },
        {
          "name": "arr",
          "type": "Array<any>"
        },
        {
          "name": "disposeSingletons",
          "type": "Boolean",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "disposeArray": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disposes all members of the given array and deletes",
          "     * the field which refers to the array afterwards.",
          "     *",
          "     * @param obj {Object} Object which contains the field",
          "     * @param field {String} Name of the field which refers to the array",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disposes all members of the given array and deletes\n the field which refers to the array afterwards.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} Object which contains the field",
            "paramName": "obj",
            "description": " Object which contains the field",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "field {String} Name of the field which refers to the array",
            "paramName": "field",
            "description": " Name of the field which refers to the array",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2404
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 3206
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        },
        {
          "name": "field",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "disposeMap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disposes all members of the given map and deletes",
          "     * the field which refers to the map afterwards.",
          "     *",
          "     * @param obj {Object} Object which contains the field",
          "     * @param field {String} Name of the field which refers to the array",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disposes all members of the given map and deletes\n the field which refers to the map afterwards.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} Object which contains the field",
            "paramName": "obj",
            "description": " Object which contains the field",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "field {String} Name of the field which refers to the array",
            "paramName": "field",
            "description": " Name of the field which refers to the array",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3478
        },
        "end": {
          "line": 160,
          "column": 5,
          "index": 4226
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        },
        {
          "name": "field",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "disposeTriggeredBy": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disposes a given object when another object is disposed",
          "     *",
          "     * @param disposeMe {Object} Object to dispose when other object is disposed",
          "     * @param trigger {Object} Other object",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disposes a given object when another object is disposed</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "disposeMe {Object} Object to dispose when other object is disposed",
            "paramName": "disposeMe",
            "description": " Object to dispose when other object is disposed",
            "type": "Record<any, any>"
          },
          {
            "name": "@param",
            "body": "trigger {Object} Other object",
            "paramName": "trigger",
            "description": " Other object",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4451
        },
        "end": {
          "line": 175,
          "column": 5,
          "index": 4655
        }
      },
      "type": "function",
      "params": [
        {
          "name": "disposeMe",
          "type": "Record<any, any>"
        },
        {
          "name": "trigger",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": []
    },
    "destroyContainer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Destroys a container and all of its children recursively.",
          "     * @param container {qx.ui.container.Composite | qx.ui.container.Scroll |",
          "     *   qx.ui.container.SlideBar | qx.ui.container.Stack} Container to be destroyed",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Destroys a container and all of its children recursively.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "container {qx.ui.container.Composite | qx.ui.container.Scroll |\n   qx.ui.container.SlideBar | qx.ui.container.Stack} Container to be destroyed",
            "paramName": "container",
            "description": " Container to be destroyed",
            "type": [
              "qx.ui.container.Composite",
              "qx.ui.container.Scroll",
              "qx.ui.container.SlideBar",
              "qx.ui.container.Stack"
            ]
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 182,
          "column": 4,
          "index": 4906
        },
        "end": {
          "line": 212,
          "column": 5,
          "index": 5946
        }
      },
      "type": "function",
      "params": [
        {
          "name": "container",
          "type": [
            "qx.ui.container.Composite",
            "qx.ui.container.Scroll",
            "qx.ui.container.SlideBar",
            "qx.ui.container.Stack"
          ]
        }
      ],
      "appearsIn": []
    },
    "_collectContainerChildren": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper function to collect all children widgets of an container recursively.",
          "     * @param container {qx.ui.container.Composite | qx.ui.container.Scroll | qx.ui.container.SlideBar | qx.ui.container.Stack} Container to be destroyed",
          "     * @param arr {Array} Array which holds all children widgets",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper function to collect all children widgets of an container recursively.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "container {qx.ui.container.Composite | qx.ui.container.Scroll | qx.ui.container.SlideBar | qx.ui.container.Stack} Container to be destroyed",
            "paramName": "container",
            "description": " Container to be destroyed",
            "type": [
              "qx.ui.container.Composite",
              "qx.ui.container.Scroll",
              "qx.ui.container.SlideBar",
              "qx.ui.container.Stack"
            ]
          },
          {
            "name": "@param",
            "body": "arr {Array} Array which holds all children widgets",
            "paramName": "arr",
            "description": " Array which holds all children widgets",
            "type": "Array<any>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 219,
          "column": 4,
          "index": 6272
        },
        "end": {
          "line": 230,
          "column": 5,
          "index": 6594
        }
      },
      "type": "function",
      "params": [
        {
          "name": "container",
          "type": [
            "qx.ui.container.Composite",
            "qx.ui.container.Scroll",
            "qx.ui.container.SlideBar",
            "qx.ui.container.Stack"
          ]
        },
        {
          "name": "arr",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "__isChildrenContainer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the given object is a qx container widget",
          "     *",
          "     * @param obj {Object} The object to check",
          "     * @return {Boolean} <code>true</code> if the object is a container for",
          "     * child widgets",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the given object is a qx container widget</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object} The object to check",
            "paramName": "obj",
            "description": " The object to check",
            "type": "Record<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the object is a container for\n child widgets",
            "type": "boolean",
            "description": "<code>true</code> if the object is a container for\n child widgets"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 6827
        },
        "end": {
          "line": 262,
          "column": 5,
          "index": 7453
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "Record<any, any>"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}