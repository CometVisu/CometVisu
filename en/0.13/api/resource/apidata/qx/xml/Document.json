{
  "className": "qx.xml.Document",
  "packageName": "qx.xml",
  "name": "Document",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 39,
        "column": 0,
        "index": 1541
      },
      "end": {
        "line": 173,
        "column": 3,
        "index": 5913
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Cross browser XML document creation API\n The main purpose of this class is to allow you to create XML document objects in a\n cross-browser fashion. Use <code>create</code> to create an empty document,\n <code>fromString</code> to create one from an existing XML text. Both methods\n return a <em>native DOM object</em>. That means you use standard DOM methods on such\n an object (e.g. <code>createElement</code>).\n The following links provide further information on XML documents:</p>\n<ul>\n<li><a href=\"http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document\">W3C Interface Specification</a></li>\n<li><a href=\"http://msdn2.microsoft.com/en-us/library/ms535918.aspx\">MS xml Object</a></li>\n<li><a href=\"http://msdn2.microsoft.com/en-us/library/ms764622.aspx\">MSXML GUIDs and ProgIDs</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Parsing_and_serializing_XML\">MDN Parsing and Serializing XML</a></li>\n</ul>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "DOMDOC": {
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1676
        },
        "end": {
          "line": 42,
          "column": 16,
          "index": 1688
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} ActiveX class name of DOMDocument (IE specific)"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "XMLHTTP": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1775
        },
        "end": {
          "line": 45,
          "column": 17,
          "index": 1788
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} ActiveX class name of XMLHttpRequest (IE specific)"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "isXmlDocument": {
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 2059
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 2323
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given element is a XML document or element\n which is part of a XML document.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "elem {Document|Element} Any DOM Document or Element",
            "paramName": "elem",
            "description": " Any DOM Document or Element",
            "type": [
              "Document",
              "Element"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the document is a XML document",
            "type": "Boolean",
            "description": " Whether the document is a XML document"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "create": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2759
        },
        "end": {
          "line": 111,
          "column": 5,
          "index": 3931
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create an XML document.\n Returns a native DOM document object, set up for XML.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "namespaceUri {String ? null} The namespace URI of the document element to create or null.",
            "paramName": "namespaceUri",
            "description": " The namespace URI of the document element to create or null.",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "qualifiedName {String ? null} The qualified name of the document element to be created or null.",
            "paramName": "qualifiedName",
            "description": " The qualified name of the document element to be created or null.",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Document} empty XML object",
            "type": "qx.xml.Document",
            "description": " empty XML object"
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "ActiveXObject"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "fromString": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 4205
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 4639
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The string passed in is parsed into a DOM document.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} the string to be parsed",
            "paramName": "str",
            "description": " the string to be parsed",
            "type": "qx.xml.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Document} XML document with given content",
            "type": "qx.xml.Document",
            "description": " XML document with given content"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(str)"
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "DOMParser"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 145,
        "column": 2,
        "index": 4839
      },
      "end": {
        "line": 172,
        "column": 3,
        "index": 5908
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}