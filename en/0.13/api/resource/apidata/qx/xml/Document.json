{
  "version": 0.3,
  "lastModified": 1735341601375,
  "lastModifiedIso": "2024-12-27T23:20:01.375Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/xml/Document.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 39,
      "column": 0,
      "index": 1503
    },
    "end": {
      "line": 173,
      "column": 3,
      "index": 5741
    }
  },
  "className": "qx.xml.Document",
  "jsdoc": {
    "raw": [
      " global window "
    ]
  },
  "statics": {
    "DOMDOC": {
      "jsdoc": {
        "raw": [
          "* @type {String} ActiveX class name of DOMDocument (IE specific) "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} ActiveX class name of DOMDocument (IE specific)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1635
        },
        "end": {
          "line": 42,
          "column": 16,
          "index": 1647
        }
      },
      "appearsIn": []
    },
    "XMLHTTP": {
      "jsdoc": {
        "raw": [
          "* @type {String} ActiveX class name of XMLHttpRequest (IE specific) "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} ActiveX class name of XMLHttpRequest (IE specific)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1731
        },
        "end": {
          "line": 45,
          "column": 17,
          "index": 1744
        }
      },
      "appearsIn": []
    },
    "isXmlDocument": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the given element is a XML document or element",
          "     * which is part of a XML document.",
          "     *",
          "     * @param elem {Document|Element} Any DOM Document or Element",
          "     * @return {Boolean} Whether the document is a XML document",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given element is a XML document or element\n which is part of a XML document.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "elem {Document|Element} Any DOM Document or Element",
            "paramName": "elem",
            "description": " Any DOM Document or Element",
            "type": [
              "Document",
              "Element"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the document is a XML document",
            "type": "boolean",
            "description": "Whether the document is a XML document"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 2006
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 2262
        }
      },
      "type": "function",
      "params": [
        {
          "name": "elem",
          "type": [
            "Document",
            "Element"
          ]
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "create": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Create an XML document.",
          "     *",
          "     * Returns a native DOM document object, set up for XML.",
          "     *",
          "     * @param namespaceUri {String ? null} The namespace URI of the document element to create or null.",
          "     * @param qualifiedName {String ? null} The qualified name of the document element to be created or null.",
          "     * @return {Document} empty XML object",
          "     *",
          "     * @ignore(ActiveXObject)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create an XML document.\n Returns a native DOM document object, set up for XML.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "namespaceUri {String ? null} The namespace URI of the document element to create or null.",
            "paramName": "namespaceUri",
            "description": " The namespace URI of the document element to create or null.",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "qualifiedName {String ? null} The qualified name of the document element to be created or null.",
            "paramName": "qualifiedName",
            "description": " The qualified name of the document element to be created or null.",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Document} empty XML object",
            "type": "qx.xml.Document",
            "description": "empty XML object"
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "ActiveXObject"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2685
        },
        "end": {
          "line": 111,
          "column": 5,
          "index": 3821
        }
      },
      "type": "function",
      "params": [
        {
          "name": "namespaceUri",
          "type": "String",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "qualifiedName",
          "type": "String",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "returnType": {
        "type": "qx.xml.Document"
      },
      "appearsIn": []
    },
    "fromString": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The string passed in is parsed into a DOM document.",
          "     *",
          "     * @param str {String} the string to be parsed",
          "     * @return {Document} XML document with given content",
          "     * @signature function(str)",
          "     *",
          "     * @ignore(DOMParser)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The string passed in is parsed into a DOM document.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} the string to be parsed",
            "paramName": "str",
            "description": " the string to be parsed",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Document} XML document with given content",
            "type": "qx.xml.Document",
            "description": "XML document with given content"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(str)"
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "DOMParser"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 4084
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 4504
        }
      },
      "type": "function",
      "params": [
        {
          "name": "str",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "qx.xml.Document"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}