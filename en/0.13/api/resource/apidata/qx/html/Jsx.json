{
  "className": "qx.html.Jsx",
  "packageName": "qx.html",
  "name": "Jsx",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 927
      },
      "end": {
        "line": 204,
        "column": 3,
        "index": 5774
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class includes work from on https://github.com/alecsgone/jsx-render; at the time of writing,\n the https://github.com/alecsgone/jsx-render repo is available under an MIT license.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "createElement": {
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1405
        },
        "end": {
          "line": 139,
          "column": 5,
          "index": 4420
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an element.\n Fragments are supported if the tagname is <code>qx.html.Jsx.FRAGMENT</code>; but in this case,\n an <code>qx.data.Array</code> is returned.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "tagname {String} the name of the tag",
            "paramName": "tagname",
            "description": " the name of the tag",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "attributes {Map?} map of attribute values",
            "paramName": "attributes",
            "description": " map of attribute values",
            "optional": true,
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "children {qx.html.Node[]} array of children",
            "paramName": "children",
            "description": " array of children",
            "type": "qx.html.Node[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Element | qx.data.Array}",
            "type": "qx.html.Element | qx.data.Array",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "SYNTETIC_EVENTS": {
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 4492
        },
        "end": {
          "line": 142,
          "column": 25,
          "index": 4513
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} map of event names, all values are <code>true</code>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "FRAGMENT": {
      "location": {
        "start": {
          "line": 145,
          "column": 4,
          "index": 4568
        },
        "end": {
          "line": 145,
          "column": 26,
          "index": 4590
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} tagname for fragments"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 148,
        "column": 2,
        "index": 4599
      },
      "end": {
        "line": 203,
        "column": 3,
        "index": 5770
      }
    }
  },
  "members": {
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}