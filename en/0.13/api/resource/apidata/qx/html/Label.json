{
  "className": "qx.html.Label",
  "packageName": "qx.html",
  "name": "Label",
  "superClass": "qx.html.Element",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 845
      },
      "end": {
        "line": 140,
        "column": 3,
        "index": 3718
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>A cross browser label instance with support for rich HTML and text labels.\n Text labels supports ellipsis to reduce the text width.\n The mode can be changed through the method {@link #setRich}\n which accepts a boolean value. The default mode is \"text\" which is\n a good choice because it has a better performance.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 996
      },
      "end": {
        "line": 39,
        "column": 3,
        "index": 1149
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Creates a new Image</p>"
        }
      ],
      "@see": [
        {
          "name": "@see",
          "body": "constructor for {Element}"
        }
      ]
    }
  },
  "members": {
    "__rich": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1362
        },
        "end": {
          "line": 48,
          "column": 16,
          "index": 1374
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_setValueProperty": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1710
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1832
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Implementation of setter for the \"value\" property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String?} value to set",
            "paramName": "value",
            "description": " value to set",
            "optional": true,
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createDomElement": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1860
        },
        "end": {
          "line": 72,
          "column": 5,
          "index": 2032
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.html.Element",
      "appearsIn": [
        "qx.html.Element",
        "qx.html.Node"
      ]
    },
    "_copyData": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2129
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 2234
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.html.Element",
      "appearsIn": [
        "qx.html.Element",
        "qx.html.Node"
      ]
    },
    "setRich": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2662
        },
        "end": {
          "line": 109,
          "column": 5,
          "index": 3013
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Toggles between rich HTML mode and pure text mode.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Boolean} Whether the HTML mode should be used.",
            "paramName": "value",
            "description": " Whether the HTML mode should be used.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Label} This instance for chaining support.",
            "type": "qx.html.Label",
            "description": " This instance for chaining support."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setValue": {
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3240
        },
        "end": {
          "line": 120,
          "column": 5,
          "index": 3326
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the HTML/text content depending on the content mode.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} The content to be used.",
            "paramName": "value",
            "description": " The content to be used.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Label} This instance for for chaining support.",
            "type": "qx.html.Label",
            "description": " This instance for for chaining support."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getValue": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3440
        },
        "end": {
          "line": 129,
          "column": 5,
          "index": 3501
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the current content.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The labels's content",
            "type": "String",
            "description": " The labels's content"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetValue": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 3642
        },
        "end": {
          "line": 138,
          "column": 5,
          "index": 3708
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset the current content</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Label} This instance for for chaining support.",
            "type": "qx.html.Label",
            "description": " This instance for for chaining support."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getVisible": {
      "type": "function",
      "name": "getVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for visible"
          }
        ]
      }
    },
    "isVisible": {
      "type": "function",
      "name": "isVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for visible"
          }
        ]
      }
    },
    "setVisible": {
      "type": "function",
      "name": "setVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for visible"
          }
        ]
      }
    },
    "resetVisible": {
      "type": "function",
      "name": "resetVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visible</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ]
      }
    },
    "getCssClass": {
      "type": "function",
      "name": "getCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>cssClass</code>.\n\nFor further details take a look at the property definition: {@link #cssClass}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for cssClass"
          }
        ]
      }
    },
    "setCssClass": {
      "type": "function",
      "name": "setCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>cssClass</code>.\n\nFor further details take a look at the property definition: {@link #cssClass}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for cssClass"
          }
        ]
      }
    },
    "resetCssClass": {
      "type": "function",
      "name": "resetCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>cssClass</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #cssClass}."
          }
        ]
      }
    }
  },
  "descendants": []
}