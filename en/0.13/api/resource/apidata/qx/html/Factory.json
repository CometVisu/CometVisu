{
  "className": "qx.html.Factory",
  "packageName": "qx.html",
  "name": "Factory",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0,
        "index": 600
      },
      "end": {
        "line": 129,
        "column": 3,
        "index": 4052
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Factory class used to create Virtual DOM instances by JSX support</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 26,
        "column": 2,
        "index": 687
      },
      "end": {
        "line": 39,
        "column": 3,
        "index": 1234
      }
    }
  },
  "members": {
    "__factoriesByTagName": {
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1254
        },
        "end": {
          "line": 42,
          "column": 30,
          "index": 1280
        }
      },
      "type": "variable",
      "access": "private"
    },
    "registerFactory": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1674
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1929
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers a factory; a factory is either a class, or a function which is\n called with the parameters (tagName {String}, styles{Map?}, attributes {Map?}), and\n which is expected to return an {Element}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "tagName {String} the name of the tag",
            "paramName": "tagName",
            "description": " the name of the tag",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "factory {Class|Function} the function used to create instances for that tagName",
            "paramName": "factory",
            "description": " the function used to create instances for that tagName",
            "type": [
              "Class",
              "Function"
            ]
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createElement": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 2156
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 4044
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called to create an {Element}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "tagName {String} the name of the tag",
            "paramName": "tagName",
            "description": " the name of the tag",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "attributes {Map?} the attributes to create (including style etc)",
            "paramName": "attributes",
            "description": " the attributes to create (including style etc)",
            "optional": true,
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Node}",
            "type": "qx.html.Node",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}