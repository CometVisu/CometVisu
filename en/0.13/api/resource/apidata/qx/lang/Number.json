{
  "version": 0.3,
  "lastModified": 1729101022700,
  "lastModifiedIso": "2024-10-16T17:50:22.700Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/lang/Number.js",
  "type": "class",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 619
    },
    "end": {
      "line": 95,
      "column": 3,
      "index": 2676
    }
  },
  "className": "qx.lang.Number",
  "jsdoc": {
    "raw": [
      "*",
      " * Helper functions for numbers.",
      " *",
      " * The native JavaScript Number is not modified by this class.",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Helper functions for numbers.\n The native JavaScript Number is not modified by this class.</p>"
      }
    ]
  },
  "statics": {
    "isInRange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Check whether the number is in a given range",
          "     *",
          "     * @param nr {Number} the number to check",
          "     * @param vmin {Integer} lower bound of the range",
          "     * @param vmax {Integer} upper bound of the range",
          "     * @return {Boolean} whether the number is >= vmin and <= vmax",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the number is in a given range</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nr {Number} the number to check",
            "paramName": "nr",
            "description": " the number to check",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "vmin {Integer} lower bound of the range",
            "paramName": "vmin",
            "description": " lower bound of the range",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "vmax {Integer} upper bound of the range",
            "paramName": "vmax",
            "description": " upper bound of the range",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the number is >= vmin and <= vmax",
            "type": "boolean",
            "description": "whether the number is >= vmin and <= vmax"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 968
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1040
        }
      },
      "type": "function",
      "params": [
        {
          "name": "nr",
          "type": "number"
        },
        {
          "name": "vmin",
          "type": "Integer"
        },
        {
          "name": "vmax",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "isBetweenRange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Check whether the number is between a given range",
          "     *",
          "     * @param nr {Number} the number to check",
          "     * @param vmin {Integer} lower bound of the range",
          "     * @param vmax {Integer} upper bound of the range",
          "     * @return {Boolean} whether the number is > vmin and < vmax",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the number is between a given range</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nr {Number} the number to check",
            "paramName": "nr",
            "description": " the number to check",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "vmin {Integer} lower bound of the range",
            "paramName": "vmin",
            "description": " lower bound of the range",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "vmax {Integer} upper bound of the range",
            "paramName": "vmax",
            "description": " upper bound of the range",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the number is > vmin and < vmax",
            "type": "boolean",
            "description": "whether the number is > vmin and < vmax"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1346
        },
        "end": {
          "line": 50,
          "column": 5,
          "index": 1421
        }
      },
      "type": "function",
      "params": [
        {
          "name": "nr",
          "type": "number"
        },
        {
          "name": "vmin",
          "type": "Integer"
        },
        {
          "name": "vmax",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "limit": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Limit the number to a given range",
          "     *",
          "     * * If the number is greater than the upper bound, the upper bound is returned",
          "     * * If the number is smaller than the lower bound, the lower bound is returned",
          "     * * If the number is in the range, the number is returned",
          "     *",
          "     * @param nr {Number} the number to limit",
          "     * @param vmin {Integer} lower bound of the range",
          "     * @param vmax {Integer} upper bound of the range",
          "     * @return {Integer} the limited number",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Limit the number to a given range</p>\n<ul>\n<li>If the number is greater than the upper bound, the upper bound is returned</li>\n<li>If the number is smaller than the lower bound, the lower bound is returned</li>\n<li>If the number is in the range, the number is returned</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nr {Number} the number to limit",
            "paramName": "nr",
            "description": " the number to limit",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "vmin {Integer} lower bound of the range",
            "paramName": "vmin",
            "description": " lower bound of the range",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "vmax {Integer} upper bound of the range",
            "paramName": "vmax",
            "description": " upper bound of the range",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the limited number",
            "type": "Integer",
            "description": "the limited number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1928
        },
        "end": {
          "line": 72,
          "column": 5,
          "index": 2126
        }
      },
      "type": "function",
      "params": [
        {
          "name": "nr",
          "type": "number"
        },
        {
          "name": "vmin",
          "type": "Integer"
        },
        {
          "name": "vmax",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "equals": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks the equality of two numbers regarding the imprecision of floats.",
          "     *",
          "     * @param x {Number}",
          "     * @param y {Number}",
          "     * @return {Boolean}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks the equality of two numbers regarding the imprecision of floats.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Number}",
            "paramName": "x",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "y {Number}",
            "paramName": "y",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "boolean",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2310
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2668
        }
      },
      "type": "function",
      "params": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}