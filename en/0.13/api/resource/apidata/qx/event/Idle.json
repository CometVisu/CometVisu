{
  "version": 0.3,
  "lastModified": 1731947916091,
  "lastModifiedIso": "2024-11-18T16:38:36.091Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/event/Idle.js",
  "type": "class",
  "location": {
    "start": {
      "line": 28,
      "column": 0,
      "index": 766
    },
    "end": {
      "line": 157,
      "column": 3,
      "index": 3696
    }
  },
  "className": "qx.event.Idle",
  "jsdoc": {
    "raw": [
      "*",
      " * A generic singleton that fires an \"interval\" event all 100 milliseconds. It",
      " * can be used whenever one needs to run code periodically. The main purpose of",
      " * this class is reduce the number of timers.",
      " *",
      " * NOTE: Instances of this class must be disposed of after use",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A generic singleton that fires an \"interval\" event all 100 milliseconds. It\n can be used whenever one needs to run code periodically. The main purpose of\n this class is reduce the number of timers.\n NOTE: Instances of this class must be disposed of after use</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "isSingleton": true,
  "abstract": false,
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 887
      },
      "end": {
        "line": 35,
        "column": 3,
        "index": 917
      }
    }
  },
  "events": {
    "interval": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* This event if fired each time the interval time has elapsed "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This event if fired each time the interval time has elapsed</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1190
        },
        "end": {
          "line": 45,
          "column": 35,
          "index": 1221
        }
      }
    }
  },
  "properties": {
    "timeoutInterval": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1553
        },
        "end": {
          "line": 63,
          "column": 5,
          "index": 1654
        }
      },
      "json": {
        "check": "Number",
        "init": 100,
        "apply": "_applyTimeoutInterval"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Interval for the timer, which periodically fires the \"interval\" event,",
          "     * in milliseconds.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Interval for the timer, which periodically fires the \"interval\" event,\n in milliseconds.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__timer": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1678
        },
        "end": {
          "line": 67,
          "column": 17,
          "index": 1691
        }
      },
      "appearsIn": []
    },
    "_applyTimeoutInterval": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1720
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1831
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_onInterval": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fires an \"interval\" event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires an \"interval\" event</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 1887
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 1942
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__startTimer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Starts the timer but only if there are listeners for the \"interval\" event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the timer but only if there are listeners for the \"interval\" event</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2046
        },
        "end": {
          "line": 94,
          "column": 5,
          "index": 2319
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__stopTimer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Stops the timer but only if there are no listeners for the interval event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops the timer but only if there are no listeners for the interval event</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2423
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2601
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "addListener": {
      "jsdoc": {
        "raw": [
          "",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 2640
        },
        "end": {
          "line": 114,
          "column": 5,
          "index": 2807
        }
      },
      "type": "function",
      "params": [
        {
          "name": "type"
        },
        {
          "name": "listener"
        },
        {
          "name": "self"
        },
        {
          "name": "capture"
        }
      ],
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    },
    "addListenerOnce": {
      "jsdoc": {
        "raw": [
          "",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 2846
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3021
        }
      },
      "type": "function",
      "params": [
        {
          "name": "type"
        },
        {
          "name": "listener"
        },
        {
          "name": "self"
        },
        {
          "name": "capture"
        }
      ],
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    },
    "removeListener": {
      "jsdoc": {
        "raw": [
          "",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3060
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3232
        }
      },
      "type": "function",
      "params": [
        {
          "name": "type"
        },
        {
          "name": "listener"
        },
        {
          "name": "self"
        },
        {
          "name": "capture"
        }
      ],
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    },
    "removeListenerById": {
      "jsdoc": {
        "raw": [
          "",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3271
        },
        "end": {
          "line": 141,
          "column": 5,
          "index": 3397
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        }
      ],
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MEvent"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 150,
        "column": 2,
        "index": 3593
      },
      "end": {
        "line": 156,
        "column": 3,
        "index": 3692
      }
    }
  },
  "statics": {}
}