{
  "version": 0.3,
  "lastModified": 1735383688213,
  "lastModifiedIso": "2024-12-28T11:01:28.213Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/event/type/Pointer.js",
  "type": "class",
  "location": {
    "start": {
      "line": 25,
      "column": 0,
      "index": 624
    },
    "end": {
      "line": 204,
      "column": 3,
      "index": 5905
    }
  },
  "className": "qx.event.type.Pointer",
  "jsdoc": {
    "raw": [
      "*",
      " * Pointer event object.",
      " *",
      " * the interface of this class is based on the pointer event interface:",
      " * http://www.w3.org/TR/pointerevents/",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Pointer event object.\n the interface of this class is based on the pointer event interface:\n http://www.w3.org/TR/pointerevents/</p>"
      }
    ]
  },
  "superClass": "qx.event.type.Mouse",
  "members": {
    "_cloneNativeEvent": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 918
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1642
        }
      },
      "type": "function",
      "params": [
        {
          "name": "nativeEvent"
        },
        {
          "name": "clone"
        }
      ],
      "overriddenFrom": "qx.event.type.Mouse",
      "appearsIn": [
        "qx.event.type.Mouse",
        "qx.event.type.Dom",
        "qx.event.type.Native"
      ]
    },
    "getDocumentLeft": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1667
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 2026
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.event.type.Mouse",
      "appearsIn": [
        "qx.event.type.Mouse"
      ]
    },
    "getDocumentTop": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2051
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 2408
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.event.type.Mouse",
      "appearsIn": [
        "qx.event.type.Mouse"
      ]
    },
    "getPointerId": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns a unique identified for the pointer. This id is",
          "     * unique for all active pointers.",
          "     *",
          "     * @return {Number} The unique id.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a unique identified for the pointer. This id is\n unique for all active pointers.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The unique id.",
            "type": "number",
            "description": "The unique id."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2579
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2643
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the contact geometry in it's width.",
          "     *",
          "     * @return {Number} The number of pixels (width) of the contact geometry.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the contact geometry in it's width.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The number of pixels (width) of the contact geometry.",
            "type": "number",
            "description": "The number of pixels (width) of the contact geometry."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2802
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2858
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the contact geometry in it's height.",
          "     *",
          "     * @return {Number} The number of pixels (height) of the contact geometry.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the contact geometry in it's height.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The number of pixels (height) of the contact geometry.",
            "type": "number",
            "description": "The number of pixels (height) of the contact geometry."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 3019
        },
        "end": {
          "line": 109,
          "column": 5,
          "index": 3077
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getPressure": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the pressure of the pointer in a rage from 0 to 1.",
          "     *",
          "     * @return {Number} <code>1</code> for full pressure. The default is 0.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the pressure of the pointer in a rage from 0 to 1.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} <code>1</code> for full pressure. The default is 0.",
            "type": "number",
            "description": "<code>1</code> for full pressure. The default is 0."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3249
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 3311
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getTiltX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the plane angle in degrees between the Y-Z plane and the",
          "     * plane containing e.g. the stylus and the Y axis.",
          "     *",
          "     * @return {Number} A value between -90 and 90. The default is 0.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the plane angle in degrees between the Y-Z plane and the\n plane containing e.g. the stylus and the Y axis.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} A value between -90 and 90. The default is 0.",
            "type": "number",
            "description": "A value between -90 and 90. The default is 0."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3539
        },
        "end": {
          "line": 128,
          "column": 5,
          "index": 3595
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getTiltY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the plane angle in degrees between the X-Z plane and the",
          "     * plane containing e.g. the stylus and the X axis.",
          "     *",
          "     * @return {Number} A value between -90 and 90. The default is 0.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the plane angle in degrees between the X-Z plane and the\n plane containing e.g. the stylus and the X axis.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} A value between -90 and 90. The default is 0.",
            "type": "number",
            "description": "A value between -90 and 90. The default is 0."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 3823
        },
        "end": {
          "line": 138,
          "column": 5,
          "index": 3879
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getOriginalTarget": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 141,
          "column": 4,
          "index": 3904
        },
        "end": {
          "line": 166,
          "column": 5,
          "index": 4855
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.event.type.Event",
      "appearsIn": [
        "qx.event.type.Event"
      ]
    },
    "getPointerType": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the device type which the event triggered. This can be one",
          "     * of the following strings: <code>mouse</code>, <code>wheel</code>,",
          "     * <code>pen</code> or <code>touch</code>.",
          "     *",
          "     * @return {String} The type of the pointer.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the device type which the event triggered. This can be one\n of the following strings: <code>mouse</code>, <code>wheel</code>,\n <code>pen</code> or <code>touch</code>.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The type of the pointer.",
            "type": "string",
            "description": "The type of the pointer."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 175,
          "column": 4,
          "index": 5128
        },
        "end": {
          "line": 193,
          "column": 5,
          "index": 5677
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "isPrimary": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns whether the pointer is the primary pointer.",
          "     *",
          "     * @return {Boolean} <code>true</code>, if it's the primary pointer.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether the pointer is the primary pointer.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if it's the primary pointer.",
            "type": "boolean",
            "description": "<code>true</code>, if it's the primary pointer."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 200,
          "column": 4,
          "index": 5839
        },
        "end": {
          "line": 202,
          "column": 5,
          "index": 5897
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}