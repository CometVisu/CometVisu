{
  "version": 0.3,
  "lastModified": 1722151626247,
  "lastModifiedIso": "2024-07-28T07:27:06.247Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/event/util/Keyboard.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 614
    },
    "end": {
      "line": 278,
      "column": 3,
      "index": 7950
    }
  },
  "className": "qx.event.util.Keyboard",
  "jsdoc": {
    "raw": [
      "*",
      " * Utilities for working with character codes and key identifiers",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Utilities for working with character codes and key identifiers</p>"
      }
    ]
  },
  "statics": {
    "specialCharCodeMap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Map} maps the charcodes of special printable keys to key identifiers",
          "     *",
          "     * @lint ignoreReferenceField(specialCharCodeMap)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} maps the charcodes of special printable keys to key identifiers"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(specialCharCodeMap)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1029
        },
        "end": {
          "line": 46,
          "column": 5,
          "index": 1393
        }
      },
      "appearsIn": []
    },
    "numpadToCharCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Map} maps the keycodes of the numpad keys to the right charcodes",
          "     *",
          "     * @lint ignoreReferenceField(numpadToCharCode)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} maps the keycodes of the numpad keys to the right charcodes"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(numpadToCharCode)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1554
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 2024
        }
      },
      "appearsIn": []
    },
    "keyCodeToIdentifierMap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Map} maps the keycodes of non printable keys to key identifiers",
          "     *",
          "     * @lint ignoreReferenceField(keyCodeToIdentifierMap)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} maps the keycodes of non printable keys to key identifiers"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(keyCodeToIdentifierMap)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2190
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3815
        }
      },
      "appearsIn": []
    },
    "charCodeA": {
      "jsdoc": {
        "raw": [
          "* char code for capital A "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>char code for capital A</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3857
        },
        "end": {
          "line": 122,
          "column": 32,
          "index": 3885
        }
      },
      "appearsIn": []
    },
    "charCodeZ": {
      "jsdoc": {
        "raw": [
          "* char code for capital Z "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>char code for capital Z</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3926
        },
        "end": {
          "line": 124,
          "column": 32,
          "index": 3954
        }
      },
      "appearsIn": []
    },
    "charCode0": {
      "jsdoc": {
        "raw": [
          "* char code for 0 "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>char code for 0</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3987
        },
        "end": {
          "line": 126,
          "column": 32,
          "index": 4015
        }
      },
      "appearsIn": []
    },
    "charCode9": {
      "jsdoc": {
        "raw": [
          "* char code for 9 "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>char code for 9</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 4048
        },
        "end": {
          "line": 128,
          "column": 32,
          "index": 4076
        }
      },
      "appearsIn": []
    },
    "keyCodeToIdentifier": {
      "jsdoc": {
        "raw": [
          "*",
          "     * converts a keyboard code to the corresponding identifier",
          "     *",
          "     * @param keyCode {Integer} key code",
          "     * @return {String} key identifier",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>converts a keyboard code to the corresponding identifier</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyCode {Integer} key code",
            "paramName": "keyCode",
            "description": " key code",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} key identifier",
            "type": "string",
            "description": "key identifier"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 4250
        },
        "end": {
          "line": 152,
          "column": 5,
          "index": 4706
        }
      },
      "type": "function",
      "params": [
        {
          "name": "keyCode",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "charCodeToIdentifier": {
      "jsdoc": {
        "raw": [
          "*",
          "     * converts a character code to the corresponding identifier",
          "     *",
          "     * @param charCode {String} character code",
          "     * @return {String} key identifier",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>converts a character code to the corresponding identifier</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "charCode {String} character code",
            "paramName": "charCode",
            "description": " character code",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} key identifier",
            "type": "string",
            "description": "key identifier"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 4887
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 5046
        }
      },
      "type": "function",
      "params": [
        {
          "name": "charCode",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "isIdentifiableKeyCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Check whether the keycode can be reliably detected in keyup/keydown events",
          "     *",
          "     * @param keyCode {String} key code to check.",
          "     * @return {Boolean} Whether the keycode can be reliably detected in keyup/keydown events.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the keycode can be reliably detected in keyup/keydown events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyCode {String} key code to check.",
            "paramName": "keyCode",
            "description": " key code to check.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the keycode can be reliably detected in keyup/keydown events.",
            "type": "boolean",
            "description": "Whether the keycode can be reliably detected in keyup/keydown events."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 173,
          "column": 4,
          "index": 5303
        },
        "end": {
          "line": 199,
          "column": 5,
          "index": 5881
        }
      },
      "type": "function",
      "params": [
        {
          "name": "keyCode",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "isNonPrintableKeyCode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether the keyCode represents a non printable key",
          "     *",
          "     * @param keyCode {String} key code to check.",
          "     * @return {Boolean} Whether the keyCode represents a non printable key.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether the keyCode represents a non printable key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyCode {String} key code to check.",
            "paramName": "keyCode",
            "description": " key code to check.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the keyCode represents a non printable key.",
            "type": "boolean",
            "description": "Whether the keyCode represents a non printable key."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 6103
        },
        "end": {
          "line": 209,
          "column": 5,
          "index": 6207
        }
      },
      "type": "function",
      "params": [
        {
          "name": "keyCode",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "isValidKeyIdentifier": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether a given string is a valid keyIdentifier",
          "     *",
          "     * @param keyIdentifier {String} The key identifier.",
          "     * @return {Boolean} whether the given string is a valid keyIdentifier",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether a given string is a valid keyIdentifier</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyIdentifier {String} The key identifier.",
            "paramName": "keyIdentifier",
            "description": " The key identifier.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the given string is a valid keyIdentifier",
            "type": "boolean",
            "description": "whether the given string is a valid keyIdentifier"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 217,
          "column": 4,
          "index": 6431
        },
        "end": {
          "line": 245,
          "column": 5,
          "index": 7000
        }
      },
      "type": "function",
      "params": [
        {
          "name": "keyIdentifier",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "isPrintableKeyIdentifier": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether a given string is a printable keyIdentifier.",
          "     *",
          "     * @param keyIdentifier {String} The key identifier.",
          "     * @return {Boolean} whether the given string is a printable keyIdentifier.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether a given string is a printable keyIdentifier.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyIdentifier {String} The key identifier.",
            "paramName": "keyIdentifier",
            "description": " The key identifier.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the given string is a printable keyIdentifier.",
            "type": "boolean",
            "description": "whether the given string is a printable keyIdentifier."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 253,
          "column": 4,
          "index": 7234
        },
        "end": {
          "line": 259,
          "column": 5,
          "index": 7438
        }
      },
      "type": "function",
      "params": [
        {
          "name": "keyIdentifier",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}