{
  "className": "qx.event.handler.PointerCore",
  "packageName": "qx.event.handler",
  "name": "PointerCore",
  "superClass": "Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 631
      },
      "end": {
        "line": 571,
        "column": 3,
        "index": 17244
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Low-level pointer event handler.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.bom.client.Event"
        },
        {
          "name": "@require",
          "body": "qx.bom.client.Device"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "MOUSE_TO_POINTER_MAPPING": {
      "location": {
        "start": {
          "line": 31,
          "column": 4,
          "index": 757
        },
        "end": {
          "line": 37,
          "column": 5,
          "index": 943
        }
      },
      "type": "variable",
      "access": "public"
    },
    "TOUCH_TO_POINTER_MAPPING": {
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 950
        },
        "end": {
          "line": 44,
          "column": 5,
          "index": 1112
        }
      },
      "type": "variable",
      "access": "public"
    },
    "MSPOINTER_TO_POINTER_MAPPING": {
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1119
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1445
        }
      },
      "type": "variable",
      "access": "public"
    },
    "POINTER_TO_GESTURE_MAPPING": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1452
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1627
        }
      },
      "type": "variable",
      "access": "public"
    },
    "LEFT_BUTTON": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1634
        },
        "end": {
          "line": 68,
          "column": 11,
          "index": 1789
        }
      },
      "type": "variable",
      "access": "public"
    },
    "SIM_MOUSE_DISTANCE": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1796
        },
        "end": {
          "line": 70,
          "column": 26,
          "index": 1818
        }
      },
      "type": "variable",
      "access": "public"
    },
    "SIM_MOUSE_DELAY": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1825
        },
        "end": {
          "line": 72,
          "column": 25,
          "index": 1846
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__lastTouch": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2250
        },
        "end": {
          "line": 81,
          "column": 21,
          "index": 2267
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Coordinates of the last touch. This needs to be static because the target could\n change between touch and simulated mouse events. Touch events will be detected\n by one instance which moves the target. The simulated mouse events will be fired with\n a delay which causes another target and with that, another instance of this handler.\n last touch was.</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 91,
        "column": 2,
        "index": 2513
      },
      "end": {
        "line": 160,
        "column": 3,
        "index": 4307
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new instance</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "target {Element} element on which to listen for native touch events",
          "paramName": "target",
          "description": " element on which to listen for native touch events",
          "type": "qx.event.handler.Element"
        },
        {
          "name": "@param",
          "body": "emitter {qx.event.Emitter?} Event emitter (used if dispatchEvent\n is not supported, e.g. in IE8)",
          "paramName": "emitter",
          "description": " Event emitter (used if dispatchEvent\n is not supported, e.g. in IE8)",
          "optional": true,
          "type": "qx.event.Emitter"
        }
      ]
    }
  },
  "members": {
    "__defaultTarget": {
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4327
        },
        "end": {
          "line": 163,
          "column": 25,
          "index": 4348
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__emitter": {
      "location": {
        "start": {
          "line": 164,
          "column": 4,
          "index": 4354
        },
        "end": {
          "line": 164,
          "column": 19,
          "index": 4369
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__eventNames": {
      "location": {
        "start": {
          "line": 165,
          "column": 4,
          "index": 4375
        },
        "end": {
          "line": 165,
          "column": 22,
          "index": 4393
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__nativePointerEvents": {
      "location": {
        "start": {
          "line": 166,
          "column": 4,
          "index": 4399
        },
        "end": {
          "line": 166,
          "column": 32,
          "index": 4427
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__wrappedListener": {
      "location": {
        "start": {
          "line": 167,
          "column": 4,
          "index": 4433
        },
        "end": {
          "line": 167,
          "column": 27,
          "index": 4456
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__lastButtonState": {
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4462
        },
        "end": {
          "line": 168,
          "column": 24,
          "index": 4482
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__buttonStates": {
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4488
        },
        "end": {
          "line": 169,
          "column": 24,
          "index": 4508
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__primaryIdentifier": {
      "location": {
        "start": {
          "line": 170,
          "column": 4,
          "index": 4514
        },
        "end": {
          "line": 170,
          "column": 29,
          "index": 4539
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__activeTouches": {
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4545
        },
        "end": {
          "line": 171,
          "column": 25,
          "index": 4566
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_processedFlag": {
      "location": {
        "start": {
          "line": 172,
          "column": 4,
          "index": 4572
        },
        "end": {
          "line": 172,
          "column": 24,
          "index": 4592
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_initPointerObserver": {
      "location": {
        "start": {
          "line": 177,
          "column": 4,
          "index": 4675
        },
        "end": {
          "line": 179,
          "column": 5,
          "index": 4753
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds listeners to native pointer events if supported</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_initObserver": {
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 4960
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5638
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Register native event listeners</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} listener callback",
            "paramName": "callback",
            "description": " listener callback",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "useEmitter {Boolean} attach listener to Emitter instead of\n native event",
            "paramName": "useEmitter",
            "description": " attach listener to Emitter instead of\n native event",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerEvent": {
      "location": {
        "start": {
          "line": 211,
          "column": 4,
          "index": 5751
        },
        "end": {
          "line": 230,
          "column": 5,
          "index": 6425
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for native pointer events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event}  Native DOM event",
            "paramName": "domEvent",
            "description": "  Native DOM event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onTouchEvent": {
      "location": {
        "start": {
          "line": 236,
          "column": 4,
          "index": 6528
        },
        "end": {
          "line": 344,
          "column": 5,
          "index": 10099
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for touch events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} Native DOM event",
            "paramName": "domEvent",
            "description": " Native DOM event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onMouseEvent": {
      "location": {
        "start": {
          "line": 350,
          "column": 4,
          "index": 10202
        },
        "end": {
          "line": 420,
          "column": 5,
          "index": 12387
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for touch events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} Native DOM event",
            "paramName": "domEvent",
            "description": " Native DOM event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_determineActiveTouches": {
      "location": {
        "start": {
          "line": 427,
          "column": 4,
          "index": 12570
        },
        "end": {
          "line": 452,
          "column": 5,
          "index": 13392
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Determines the current active touches.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String} the DOM event type.",
            "paramName": "type",
            "description": " the DOM event type.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "changedTouches {Array} the current changed touches.",
            "paramName": "changedTouches",
            "description": " the current changed touches.",
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isSimulatedMouseEvent": {
      "location": {
        "start": {
          "line": 461,
          "column": 4,
          "index": 13789
        },
        "end": {
          "line": 475,
          "column": 5,
          "index": 14390
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the given MouseEvent position is identical to the previously fired TouchEvent position.\n If <code>true</code> the corresponding event can be identified as simulated.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Integer} current mouse x",
            "paramName": "x",
            "description": " current mouse x",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "y {Integer} current mouse y",
            "paramName": "y",
            "description": " current mouse y",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if passed mouse position is a synthetic MouseEvent.",
            "type": "Boolean",
            "description": " <code>true</code> if passed mouse position is a synthetic MouseEvent."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopObserver": {
      "location": {
        "start": {
          "line": 480,
          "column": 4,
          "index": 14460
        },
        "end": {
          "line": 488,
          "column": 5,
          "index": 14701
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes native pointer event listeners.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_fireEvent": {
      "location": {
        "start": {
          "line": 498,
          "column": 4,
          "index": 15006
        },
        "end": {
          "line": 561,
          "column": 5,
          "index": 17089
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fire a touch event with the given parameters</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String ? null} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element ? null} event target",
            "paramName": "target",
            "description": " event target",
            "optional": true,
            "defaultValue": "null",
            "type": "Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise?} a promise, if one was returned by event handlers",
            "type": "qx.Promise?",
            "description": " a promise, if one was returned by event handlers"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "dispose": {
      "location": {
        "start": {
          "line": 566,
          "column": 4,
          "index": 17139
        },
        "end": {
          "line": 569,
          "column": 5,
          "index": 17236
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Dispose this object</p>"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.IDisposable",
      "appearsIn": [
        "qx.core.IDisposable"
      ]
    }
  },
  "descendants": [
    "qx.event.handler.Pointer"
  ]
}