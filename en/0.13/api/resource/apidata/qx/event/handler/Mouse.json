{
  "className": "qx.event.handler.Mouse",
  "packageName": "qx.event.handler",
  "name": "Mouse",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.event.IEventHandler",
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 32,
        "column": 0,
        "index": 873
      },
      "end": {
        "line": 645,
        "column": 3,
        "index": 17597
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class provides an unified mouse event handler for Internet Explorer,\n Firefox, Opera and Safari\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.event.handler.UserAction"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.event.handler.DragDrop"
        },
        {
          "name": "@ignore",
          "body": "performance.now"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 47,
        "column": 2,
        "index": 1313
      },
      "end": {
        "line": 60,
        "column": 3,
        "index": 1690
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new instance</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "manager {qx.event.Manager} Event manager for the window to use",
          "paramName": "manager",
          "description": " Event manager for the window to use",
          "type": "qx.event.Manager"
        }
      ]
    }
  },
  "statics": {
    "PRIORITY": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1946
        },
        "end": {
          "line": 70,
          "column": 51,
          "index": 1993
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Priority of this handler"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SUPPORTED_TYPES": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 2045
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2304
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported event types"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "NON_BUBBLING_EVENTS": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2442
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2517
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} these event types cannot be attached to the root (the document), they must be attached to the element itself"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "TARGET_CHECK": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2577
        },
        "end": {
          "line": 98,
          "column": 42,
          "index": 2726
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Which target check to use"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "IGNORE_CAN_HANDLE": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2811
        },
        "end": {
          "line": 101,
          "column": 27,
          "index": 2834
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Whether the method \"canHandleEvent\" must be called"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "members": {
    "__onButtonEventWrapper": {
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3042
        },
        "end": {
          "line": 111,
          "column": 32,
          "index": 3070
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__onMoveEventWrapper": {
      "location": {
        "start": {
          "line": 112,
          "column": 4,
          "index": 3076
        },
        "end": {
          "line": 112,
          "column": 30,
          "index": 3102
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__onWheelEventWrapper": {
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 3108
        },
        "end": {
          "line": 113,
          "column": 31,
          "index": 3135
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__lastEventType": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3141
        },
        "end": {
          "line": 114,
          "column": 25,
          "index": 3162
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__lastMouseDownTarget": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3168
        },
        "end": {
          "line": 115,
          "column": 31,
          "index": 3195
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__manager": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3201
        },
        "end": {
          "line": 116,
          "column": 19,
          "index": 3216
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__window": {
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3222
        },
        "end": {
          "line": 117,
          "column": 18,
          "index": 3236
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__root": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3242
        },
        "end": {
          "line": 118,
          "column": 16,
          "index": 3254
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__preventNextClick": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3260
        },
        "end": {
          "line": 119,
          "column": 28,
          "index": 3284
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__onNativeListener": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3370
        },
        "end": {
          "line": 122,
          "column": 28,
          "index": 3394
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function} wrapper for <code>_onNative</code>, bound as a native listener"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "canHandleEvent": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3638
        },
        "end": {
          "line": 131,
          "column": 35,
          "index": 3669
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "registerEvent": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 3709
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 4339
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "unregisterEvent": {
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4379
        },
        "end": {
          "line": 163,
          "column": 5,
          "index": 4723
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "_onNative": {
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4902
        },
        "end": {
          "line": 180,
          "column": 6,
          "index": 5227
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Default event handler for events that do not bubble</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, eventId)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} Native event",
            "paramName": "domEvent",
            "description": " Native event",
            "type": "Event"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__fireEvent": {
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 5628
        },
        "end": {
          "line": 219,
          "column": 5,
          "index": 6381
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fire a mouse event with the given parameters</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element} event target",
            "paramName": "target",
            "description": " event target",
            "type": "qx.event.handler.Element"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "preventNextClick": {
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 6462
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 6526
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to prevent the next click.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_initButtonObserver": {
      "location": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 6840
        },
        "end": {
          "line": 283,
          "column": 5,
          "index": 7724
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native mouse button event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_initMoveObserver": {
      "location": {
        "start": {
          "line": 290,
          "column": 4,
          "index": 7841
        },
        "end": {
          "line": 314,
          "column": 5,
          "index": 8360
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native mouse move event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_initWheelObserver": {
      "location": {
        "start": {
          "line": 321,
          "column": 4,
          "index": 8478
        },
        "end": {
          "line": 333,
          "column": 5,
          "index": 8808
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native mouse wheel event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopButtonObserver": {
      "location": {
        "start": {
          "line": 346,
          "column": 4,
          "index": 9122
        },
        "end": {
          "line": 378,
          "column": 5,
          "index": 9788
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native mouse button event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopMoveObserver": {
      "location": {
        "start": {
          "line": 385,
          "column": 4,
          "index": 9905
        },
        "end": {
          "line": 405,
          "column": 5,
          "index": 10323
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native mouse move event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopWheelObserver": {
      "location": {
        "start": {
          "line": 412,
          "column": 4,
          "index": 10441
        },
        "end": {
          "line": 419,
          "column": 5,
          "index": 10661
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native mouse wheel event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onMoveEvent": {
      "location": {
        "start": {
          "line": 434,
          "column": 4,
          "index": 11082
        },
        "end": {
          "line": 436,
          "column": 6,
          "index": 11193
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Global handler for all mouse move related events like \"mousemove\",\n \"mouseout\" and \"mouseover\".</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_onButtonEvent": {
      "location": {
        "start": {
          "line": 445,
          "column": 4,
          "index": 11434
        },
        "end": {
          "line": 499,
          "column": 6,
          "index": 13193
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Global handler for all mouse button related events like \"mouseup\",\n \"mousedown\", \"click\", \"dblclick\" and \"contextmenu\".</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_onWheelEvent": {
      "location": {
        "start": {
          "line": 507,
          "column": 4,
          "index": 13350
        },
        "end": {
          "line": 509,
          "column": 6,
          "index": 13476
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Global handler for the mouse wheel event.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__rightClickFixPost": {
      "location": {
        "start": {
          "line": 531,
          "column": 4,
          "index": 14179
        },
        "end": {
          "line": 539,
          "column": 6,
          "index": 14446
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Normalizes the click sequence of right click events in Webkit and Opera.\n The normalized sequence is:</p>\n<ol>\n<li>mousedown  &lt;- not fired by Webkit</li>\n<li>mouseup  &lt;- not fired by Webkit</li>\n<li>contextmenu &lt;- not fired by Opera</li>\n</ol>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} original DOM event",
            "paramName": "domEvent",
            "description": " original DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} event type",
            "paramName": "type",
            "description": " event type",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element} event target of the DOM event.",
            "paramName": "target",
            "description": " event target of the DOM event.",
            "type": "qx.event.handler.Element"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, type, target)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__doubleClickFixPre": {
      "location": {
        "start": {
          "line": 562,
          "column": 4,
          "index": 15104
        },
        "end": {
          "line": 578,
          "column": 6,
          "index": 15670
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Normalizes the click sequence of double click event in the Internet\n Explorer. The normalized sequence is:</p>\n<ol>\n<li>mousedown</li>\n<li>mouseup</li>\n<li>click</li>\n<li>mousedown  &lt;- not fired by IE</li>\n<li>mouseup</li>\n<li>click  &lt;- not fired by IE</li>\n<li>dblclick\nNote: This fix is only applied, when the IE event model is used, otherwise\nthe fix is ignored.</li>\n</ol>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} original DOM event",
            "paramName": "domEvent",
            "description": " original DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} event type",
            "paramName": "type",
            "description": " event type",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element} event target of the DOM event.",
            "paramName": "target",
            "description": " event target of the DOM event.",
            "type": "qx.event.handler.Element"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, type, target)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__differentTargetClickFixPost": {
      "location": {
        "start": {
          "line": 593,
          "column": 4,
          "index": 16274
        },
        "end": {
          "line": 615,
          "column": 6,
          "index": 16921
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If the mouseup event happens on a different target than the corresponding\n mousedown event the internet explorer dispatches a click event on the\n first common ancestor of both targets. The presence of this click event\n is essential for the qooxdoo widget system. All other browsers don't fire\n the click event so it must be emulated.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} original DOM event",
            "paramName": "domEvent",
            "description": " original DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} event type",
            "paramName": "type",
            "description": " event type",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "target {Element} event target of the DOM event.",
            "paramName": "target",
            "description": " event target of the DOM event.",
            "type": "qx.event.handler.Element"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, type, target)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 624,
        "column": 2,
        "index": 17117
      },
      "end": {
        "line": 634,
        "column": 3,
        "index": 17339
      }
    },
    "jsdoc": {}
  },
  "defer": {
    "location": {
      "start": {
        "line": 642,
        "column": 2,
        "index": 17526
      },
      "end": {
        "line": 644,
        "column": 3,
        "index": 17593
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}