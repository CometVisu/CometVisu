{
  "version": 0.3,
  "lastModified": 1722151626507,
  "lastModifiedIso": "2024-07-28T07:27:06.507Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/event/handler/Mouse.js",
  "type": "class",
  "location": {
    "start": {
      "line": 32,
      "column": 0,
      "index": 873
    },
    "end": {
      "line": 645,
      "column": 3,
      "index": 17597
    }
  },
  "className": "qx.event.handler.Mouse",
  "jsdoc": {
    "raw": [
      "*",
      " * This class provides an unified mouse event handler for Internet Explorer,",
      " * Firefox, Opera and Safari",
      " *",
      " * NOTE: Instances of this class must be disposed of after use",
      " *",
      " * @require(qx.event.handler.UserAction)",
      " * @ignore(qx.event.handler.DragDrop)",
      " * @ignore(performance.now)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This class provides an unified mouse event handler for Internet Explorer,\n Firefox, Opera and Safari\n NOTE: Instances of this class must be disposed of after use</p>"
      }
    ],
    "@require": [
      {
        "name": "@require",
        "body": "qx.event.handler.UserAction"
      }
    ],
    "@ignore": [
      {
        "name": "@ignore",
        "body": "qx.event.handler.DragDrop"
      },
      {
        "name": "@ignore",
        "body": "performance.now"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.event.IEventHandler",
    "qx.core.IDisposable"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "manager"
      }
    ],
    "location": {
      "start": {
        "line": 47,
        "column": 2,
        "index": 1313
      },
      "end": {
        "line": 60,
        "column": 3,
        "index": 1690
      }
    }
  },
  "statics": {
    "PRIORITY": {
      "jsdoc": {
        "raw": [
          "* @type {Integer} Priority of this handler "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Priority of this handler"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1946
        },
        "end": {
          "line": 70,
          "column": 51,
          "index": 1993
        }
      },
      "appearsIn": []
    },
    "SUPPORTED_TYPES": {
      "jsdoc": {
        "raw": [
          "* @type {Map} Supported event types "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported event types"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 2045
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2304
        }
      },
      "appearsIn": []
    },
    "NON_BUBBLING_EVENTS": {
      "jsdoc": {
        "raw": [
          "* @type{Map} these event types cannot be attached to the root (the document), they must be attached to the element itself "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} these event types cannot be attached to the root (the document), they must be attached to the element itself"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2442
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2517
        }
      },
      "appearsIn": []
    },
    "TARGET_CHECK": {
      "jsdoc": {
        "raw": [
          "* @type {Integer} Which target check to use "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Which target check to use"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2577
        },
        "end": {
          "line": 98,
          "column": 42,
          "index": 2726
        }
      },
      "appearsIn": []
    },
    "IGNORE_CAN_HANDLE": {
      "jsdoc": {
        "raw": [
          "* @type {Integer} Whether the method \"canHandleEvent\" must be called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Whether the method \"canHandleEvent\" must be called"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2811
        },
        "end": {
          "line": 101,
          "column": 27,
          "index": 2834
        }
      },
      "appearsIn": []
    }
  },
  "members": {
    "__onButtonEventWrapper": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3042
        },
        "end": {
          "line": 111,
          "column": 32,
          "index": 3070
        }
      },
      "appearsIn": []
    },
    "__onMoveEventWrapper": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 112,
          "column": 4,
          "index": 3076
        },
        "end": {
          "line": 112,
          "column": 30,
          "index": 3102
        }
      },
      "appearsIn": []
    },
    "__onWheelEventWrapper": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 3108
        },
        "end": {
          "line": 113,
          "column": 31,
          "index": 3135
        }
      },
      "appearsIn": []
    },
    "__lastEventType": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3141
        },
        "end": {
          "line": 114,
          "column": 25,
          "index": 3162
        }
      },
      "appearsIn": []
    },
    "__lastMouseDownTarget": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3168
        },
        "end": {
          "line": 115,
          "column": 31,
          "index": 3195
        }
      },
      "appearsIn": []
    },
    "__manager": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3201
        },
        "end": {
          "line": 116,
          "column": 19,
          "index": 3216
        }
      },
      "appearsIn": []
    },
    "__window": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3222
        },
        "end": {
          "line": 117,
          "column": 18,
          "index": 3236
        }
      },
      "appearsIn": []
    },
    "__root": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3242
        },
        "end": {
          "line": 118,
          "column": 16,
          "index": 3254
        }
      },
      "appearsIn": []
    },
    "__preventNextClick": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3260
        },
        "end": {
          "line": 119,
          "column": 28,
          "index": 3284
        }
      },
      "appearsIn": []
    },
    "__onNativeListener": {
      "jsdoc": {
        "raw": [
          "* @type{Function} wrapper for `_onNative`, bound as a native listener "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function} wrapper for <code>_onNative</code>, bound as a native listener"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3370
        },
        "end": {
          "line": 122,
          "column": 28,
          "index": 3394
        }
      },
      "appearsIn": []
    },
    "canHandleEvent": {
      "jsdoc": {
        "raw": [
          " interface implementation"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3638
        },
        "end": {
          "line": 131,
          "column": 35,
          "index": 3669
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "type"
        }
      ],
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "registerEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 3709
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 4339
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "type"
        },
        {
          "name": "capture"
        }
      ],
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "unregisterEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @Override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4379
        },
        "end": {
          "line": 163,
          "column": 5,
          "index": 4723
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target"
        },
        {
          "name": "type"
        },
        {
          "name": "capture"
        }
      ],
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "_onNative": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Default event handler for events that do not bubble",
          "     *",
          "     * @signature function(domEvent, eventId)",
          "     * @param domEvent {Event} Native event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Default event handler for events that do not bubble</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, eventId)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} Native event",
            "paramName": "domEvent",
            "description": " Native event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4902
        },
        "end": {
          "line": 180,
          "column": 6,
          "index": 5227
        }
      },
      "appearsIn": []
    },
    "__fireEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fire a mouse event with the given parameters",
          "     *",
          "     * @param domEvent {Event} DOM event",
          "     * @param type {String} type of the event",
          "     * @param target {Element} event target",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fire a mouse event with the given parameters</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} type of the event",
            "paramName": "type",
            "description": " type of the event",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "target {Element} event target",
            "paramName": "target",
            "description": " event target",
            "type": "qx.event.handler.Element"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 5628
        },
        "end": {
          "line": 219,
          "column": 5,
          "index": 6381
        }
      },
      "type": "function",
      "params": [
        {
          "name": "domEvent",
          "type": "Event"
        },
        {
          "name": "type",
          "type": "string"
        },
        {
          "name": "target",
          "type": "qx.event.handler.Element"
        }
      ],
      "appearsIn": []
    },
    "preventNextClick": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper to prevent the next click.",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to prevent the next click.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 6462
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 6526
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initButtonObserver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initializes the native mouse button event listeners.",
          "     *",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native mouse button event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 6840
        },
        "end": {
          "line": 283,
          "column": 5,
          "index": 7724
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initMoveObserver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initializes the native mouse move event listeners.",
          "     *",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native mouse move event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 290,
          "column": 4,
          "index": 7841
        },
        "end": {
          "line": 314,
          "column": 5,
          "index": 8360
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initWheelObserver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initializes the native mouse wheel event listeners.",
          "     *",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the native mouse wheel event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 321,
          "column": 4,
          "index": 8478
        },
        "end": {
          "line": 333,
          "column": 5,
          "index": 8808
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_stopButtonObserver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disconnects the native mouse button event listeners.",
          "     *",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native mouse button event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 346,
          "column": 4,
          "index": 9122
        },
        "end": {
          "line": 378,
          "column": 5,
          "index": 9788
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_stopMoveObserver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disconnects the native mouse move event listeners.",
          "     *",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native mouse move event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 385,
          "column": 4,
          "index": 9905
        },
        "end": {
          "line": 405,
          "column": 5,
          "index": 10323
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_stopWheelObserver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Disconnects the native mouse wheel event listeners.",
          "     *",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disconnects the native mouse wheel event listeners.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 412,
          "column": 4,
          "index": 10441
        },
        "end": {
          "line": 419,
          "column": 5,
          "index": 10661
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onMoveEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Global handler for all mouse move related events like \"mousemove\",",
          "     * \"mouseout\" and \"mouseover\".",
          "     *",
          "     * @signature function(domEvent)",
          "     * @param domEvent {Event} DOM event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Global handler for all mouse move related events like \"mousemove\",\n \"mouseout\" and \"mouseover\".</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 434,
          "column": 4,
          "index": 11082
        },
        "end": {
          "line": 436,
          "column": 6,
          "index": 11193
        }
      },
      "appearsIn": []
    },
    "_onButtonEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Global handler for all mouse button related events like \"mouseup\",",
          "     * \"mousedown\", \"click\", \"dblclick\" and \"contextmenu\".",
          "     *",
          "     * @signature function(domEvent)",
          "     * @param domEvent {Event} DOM event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Global handler for all mouse button related events like \"mouseup\",\n \"mousedown\", \"click\", \"dblclick\" and \"contextmenu\".</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 445,
          "column": 4,
          "index": 11434
        },
        "end": {
          "line": 499,
          "column": 6,
          "index": 13193
        }
      },
      "appearsIn": []
    },
    "_onWheelEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Global handler for the mouse wheel event.",
          "     *",
          "     * @signature function(domEvent)",
          "     * @param domEvent {Event} DOM event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Global handler for the mouse wheel event.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 507,
          "column": 4,
          "index": 13350
        },
        "end": {
          "line": 509,
          "column": 6,
          "index": 13476
        }
      },
      "appearsIn": []
    },
    "__rightClickFixPost": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Normalizes the click sequence of right click events in Webkit and Opera.",
          "     * The normalized sequence is:",
          "     *",
          "     *  1. mousedown  <- not fired by Webkit",
          "     *  2. mouseup  <- not fired by Webkit",
          "     *  3. contextmenu <- not fired by Opera",
          "     *",
          "     * @param domEvent {Event} original DOM event",
          "     * @param type {String} event type",
          "     * @param target {Element} event target of the DOM event.",
          "     *",
          "     * @signature function(domEvent, type, target)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Normalizes the click sequence of right click events in Webkit and Opera.\n The normalized sequence is:</p>\n<ol>\n<li>mousedown  &lt;- not fired by Webkit</li>\n<li>mouseup  &lt;- not fired by Webkit</li>\n<li>contextmenu &lt;- not fired by Opera</li>\n</ol>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} original DOM event",
            "paramName": "domEvent",
            "description": " original DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} event type",
            "paramName": "type",
            "description": " event type",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "target {Element} event target of the DOM event.",
            "paramName": "target",
            "description": " event target of the DOM event.",
            "type": "qx.event.handler.Element"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, type, target)"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 531,
          "column": 4,
          "index": 14179
        },
        "end": {
          "line": 539,
          "column": 6,
          "index": 14446
        }
      },
      "appearsIn": []
    },
    "__doubleClickFixPre": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Normalizes the click sequence of double click event in the Internet",
          "     * Explorer. The normalized sequence is:",
          "     *",
          "     *  1. mousedown",
          "     *  2. mouseup",
          "     *  3. click",
          "     *  4. mousedown  <- not fired by IE",
          "     *  5. mouseup",
          "     *  6. click  <- not fired by IE",
          "     *  7. dblclick",
          "     *",
          "     *  Note: This fix is only applied, when the IE event model is used, otherwise",
          "     *  the fix is ignored.",
          "     *",
          "     * @param domEvent {Event} original DOM event",
          "     * @param type {String} event type",
          "     * @param target {Element} event target of the DOM event.",
          "     *",
          "     * @signature function(domEvent, type, target)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Normalizes the click sequence of double click event in the Internet\n Explorer. The normalized sequence is:</p>\n<ol>\n<li>mousedown</li>\n<li>mouseup</li>\n<li>click</li>\n<li>mousedown  &lt;- not fired by IE</li>\n<li>mouseup</li>\n<li>click  &lt;- not fired by IE</li>\n<li>dblclick\nNote: This fix is only applied, when the IE event model is used, otherwise\nthe fix is ignored.</li>\n</ol>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} original DOM event",
            "paramName": "domEvent",
            "description": " original DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} event type",
            "paramName": "type",
            "description": " event type",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "target {Element} event target of the DOM event.",
            "paramName": "target",
            "description": " event target of the DOM event.",
            "type": "qx.event.handler.Element"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, type, target)"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 562,
          "column": 4,
          "index": 15104
        },
        "end": {
          "line": 578,
          "column": 6,
          "index": 15670
        }
      },
      "appearsIn": []
    },
    "__differentTargetClickFixPost": {
      "jsdoc": {
        "raw": [
          "*",
          "     * If the mouseup event happens on a different target than the corresponding",
          "     * mousedown event the internet explorer dispatches a click event on the",
          "     * first common ancestor of both targets. The presence of this click event",
          "     * is essential for the qooxdoo widget system. All other browsers don't fire",
          "     * the click event so it must be emulated.",
          "     *",
          "     * @param domEvent {Event} original DOM event",
          "     * @param type {String} event type",
          "     * @param target {Element} event target of the DOM event.",
          "     *",
          "     * @signature function(domEvent, type, target)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>If the mouseup event happens on a different target than the corresponding\n mousedown event the internet explorer dispatches a click event on the\n first common ancestor of both targets. The presence of this click event\n is essential for the qooxdoo widget system. All other browsers don't fire\n the click event so it must be emulated.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} original DOM event",
            "paramName": "domEvent",
            "description": " original DOM event",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "type {String} event type",
            "paramName": "type",
            "description": " event type",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "target {Element} event target of the DOM event.",
            "paramName": "target",
            "description": " event target of the DOM event.",
            "type": "qx.event.handler.Element"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(domEvent, type, target)"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 593,
          "column": 4,
          "index": 16274
        },
        "end": {
          "line": 615,
          "column": 6,
          "index": 16921
        }
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 624,
        "column": 2,
        "index": 17117
      },
      "end": {
        "line": 634,
        "column": 3,
        "index": 17339
      }
    }
  },
  "properties": {}
}