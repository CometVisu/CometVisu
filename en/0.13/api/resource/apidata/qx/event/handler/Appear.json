{
  "className": "qx.event.handler.Appear",
  "packageName": "qx.event.handler",
  "name": "Appear",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.event.IEventHandler",
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 676
      },
      "end": {
        "line": 202,
        "column": 3,
        "index": 5615
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class supports <code>appear</code> and <code>disappear</code> events\n on DOM level.\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 41,
        "column": 2,
        "index": 1132
      },
      "end": {
        "line": 49,
        "column": 3,
        "index": 1317
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new instance</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "manager {qx.event.Manager} Event manager for the window to use",
          "paramName": "manager",
          "description": " Event manager for the window to use",
          "type": "qx.event.Manager"
        }
      ]
    }
  },
  "statics": {
    "PRIORITY": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1583
        },
        "end": {
          "line": 59,
          "column": 51,
          "index": 1630
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Priority of this handler"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "SUPPORTED_TYPES": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1685
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1754
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported event types"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "TARGET_CHECK": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1817
        },
        "end": {
          "line": 68,
          "column": 55,
          "index": 1868
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Which target check to use"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "IGNORE_CAN_HANDLE": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1956
        },
        "end": {
          "line": 71,
          "column": 27,
          "index": 1979
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Whether the method \"canHandleEvent\" must be called"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "__instances": {
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 2048
        },
        "end": {
          "line": 74,
          "column": 19,
          "index": 2063
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Stores all appear manager instances"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "refresh": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2214
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2337
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Refreshes all appear handlers. Useful after massive DOM manipulations e.g.\n through qx.html.Element.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "members": {
    "__manager": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2555
        },
        "end": {
          "line": 96,
          "column": 19,
          "index": 2570
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__targets": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2577
        },
        "end": {
          "line": 97,
          "column": 19,
          "index": 2592
        }
      },
      "type": "variable",
      "access": "private"
    },
    "canHandleEvent": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2845
        },
        "end": {
          "line": 106,
          "column": 35,
          "index": 2876
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "registerEvent": {
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 2918
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 3206
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "unregisterEvent": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3248
        },
        "end": {
          "line": 130,
          "column": 5,
          "index": 3519
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "refresh": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3967
        },
        "end": {
          "line": 177,
          "column": 5,
          "index": 4990
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be called by all DOM tree modifying routines\n to check the registered nodes for changes.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise?} a promise, if one or more of the event handlers returned one",
            "type": "qx.Promise?",
            "description": " a promise, if one or more of the event handlers returned one"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 186,
        "column": 2,
        "index": 5195
      },
      "end": {
        "line": 191,
        "column": 3,
        "index": 5346
      }
    },
    "jsdoc": {}
  },
  "defer": {
    "location": {
      "start": {
        "line": 199,
        "column": 2,
        "index": 5541
      },
      "end": {
        "line": 201,
        "column": 3,
        "index": 5610
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}