{
  "version": 0.3,
  "lastModified": 1735341600319,
  "lastModifiedIso": "2024-12-27T23:20:00.319Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/module/Animation.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 28,
      "column": 0,
      "index": 754
    },
    "end": {
      "line": 314,
      "column": 3,
      "index": 9043
    }
  },
  "className": "qx.module.Animation",
  "jsdoc": {
    "raw": [
      "*",
      " * Cross browser animation layer. It uses feature detection to check if CSS",
      " * animations are available and ready to use. If not, a JavaScript-based",
      " * fallback will be used.",
      " *",
      " * @require(qx.module.Css)",
      " * @require(qx.module.Event)",
      " * @require(qx.module.Environment)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Cross browser animation layer. It uses feature detection to check if CSS\n animations are available and ready to use. If not, a JavaScript-based\n fallback will be used.</p>"
      }
    ],
    "@require": [
      {
        "name": "@require",
        "body": "qx.module.Css"
      },
      {
        "name": "@require",
        "body": "qx.module.Event"
      },
      {
        "name": "@require",
        "body": "qx.module.Environment"
      }
    ]
  },
  "events": {
    "animationStart": {
      "type": null,
      "jsdoc": {
        "raw": [
          "* Fired when an animation starts. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an animation starts.</p>"
          }
        ]
      }
    },
    "animationIteration": {
      "type": null,
      "jsdoc": {
        "raw": [
          "* Fired when an animation has ended one iteration. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an animation has ended one iteration.</p>"
          }
        ]
      }
    },
    "animationEnd": {
      "type": null,
      "jsdoc": {
        "raw": [
          "* Fired when an animation has ended. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an animation has ended.</p>"
          }
        ]
      }
    }
  },
  "statics": {
    "_fadeOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Animation description used in {@link #fadeOut}.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Animation description used in {@link #fadeOut}.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1150
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1330
        }
      },
      "appearsIn": []
    },
    "_fadeIn": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Animation description used in {@link #fadeIn}.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Animation description used in {@link #fadeIn}.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1407
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1568
        }
      },
      "appearsIn": []
    },
    "_animate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Animation execute either regular or reversed direction.",
          "     * @param desc {Map} The animation\"s description.",
          "     * @param duration {Number?} The duration in milliseconds of the animation,",
          "     *   which will override the duration given in the description.",
          "     * @param reverse {Boolean} <code>true</code>, if the animation should be reversed",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Animation execute either regular or reversed direction.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "desc {Map} The animation\"s description.",
            "paramName": "desc",
            "description": " The animation\"s description.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "duration {Number?} The duration in milliseconds of the animation,\n   which will override the duration given in the description.",
            "paramName": "duration",
            "description": " The duration in milliseconds of the animation,\n   which will override the duration given in the description.",
            "optional": true,
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "reverse {Boolean} <code>true</code>, if the animation should be reversed",
            "paramName": "reverse",
            "description": " <code>true</code>, if the animation should be reversed",
            "type": "boolean"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 1943
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 3090
        }
      },
      "type": "function",
      "params": [
        {
          "name": "desc",
          "type": "Map<any, any>"
        },
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        },
        {
          "name": "reverse",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {
    "getAnimationHandles": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the stored animation handles. The handles are only",
          "     * available while an animation is running.",
          "     *",
          "     * @internal",
          "     * @return {Array} An array of animation handles.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the stored animation handles. The handles are only\n available while an animation is running.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} An array of animation handles.",
            "type": "Array<any>",
            "description": "An array of animation handles."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 3322
        },
        "end": {
          "line": 138,
          "column": 5,
          "index": 3520
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Array<any>"
      },
      "appearsIn": []
    },
    "animate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Starts the animation with the given description.",
          "     *",
          "     * *duration* is the time in milliseconds one animation cycle should take.",
          "     *",
          "     * *keep* is the key frame to apply at the end of the animation. (optional)",
          "     *",
          "     * *keyFrames* is a map of separate frames. Each frame is defined by a",
          "     *   number which is the percentage value of time in the animation. The value",
          "     *   is a map itself which holds css properties or transforms",
          "     *   (Transforms only for CSS Animations).",
          "     *",
          "     * *origin* maps to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin\">transform origin</a>",
          "     * (Only for CSS animations).",
          "     *",
          "     * *repeat* is the amount of time the animation should be run in",
          "     *   sequence. You can also use \"infinite\".",
          "     *",
          "     * *timing* takes one of these predefined values:",
          "     *   <code>ease</code> | <code>linear</code> | <code>ease-in</code>",
          "     *   | <code>ease-out</code> | <code>ease-in-out</code> |",
          "     *   <code>cubic-bezier(&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;)</code>",
          "     *   (cubic-bezier only available for CSS animations)",
          "     *",
          "     * *alternate* defines if every other animation should be run in reverse order.",
          "     *",
          "     * *delay* is the time in milliseconds the animation should wait before start.",
          "     *",
          "     * @attach {qxWeb}",
          "     * @param desc {Map} The animation\"s description.",
          "     * @param duration {Number?} The duration in milliseconds of the animation,",
          "     *   which will override the duration given in the description.",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the animation with the given description.\n<em>duration</em> is the time in milliseconds one animation cycle should take.\n<em>keep</em> is the key frame to apply at the end of the animation. (optional)\n<em>keyFrames</em> is a map of separate frames. Each frame is defined by a\n   number which is the percentage value of time in the animation. The value\n   is a map itself which holds css properties or transforms\n   (Transforms only for CSS Animations).\n<em>origin</em> maps to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin\">transform origin</a>\n (Only for CSS animations).\n<em>repeat</em> is the amount of time the animation should be run in\n   sequence. You can also use \"infinite\".\n<em>timing</em> takes one of these predefined values:\n   <code>ease</code> | <code>linear</code> | <code>ease-in</code>\n   | <code>ease-out</code> | <code>ease-in-out</code> |\n   <code>cubic-bezier(&amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;)</code>\n   (cubic-bezier only available for CSS animations)\n<em>alternate</em> defines if every other animation should be run in reverse order.\n<em>delay</em> is the time in milliseconds the animation should wait before start.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "desc {Map} The animation\"s description.",
            "paramName": "desc",
            "description": " The animation\"s description.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "duration {Number?} The duration in milliseconds of the animation,\n   which will override the duration given in the description.",
            "paramName": "duration",
            "description": " The duration in milliseconds of the animation,\n   which will override the duration given in the description.",
            "optional": true,
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 5156
        },
        "end": {
          "line": 177,
          "column": 5,
          "index": 5276
        }
      },
      "type": "function",
      "params": [
        {
          "name": "desc",
          "type": "Map<any, any>"
        },
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    },
    "animateReverse": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Starts an animation in reversed order. For further details, take a look at",
          "     * the {@link #animate} method.",
          "     * @attach {qxWeb}",
          "     * @param desc {Map} The animation\"s description.",
          "     * @param duration {Number?} The duration in milliseconds of the animation,",
          "     *   which will override the duration given in the description.",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts an animation in reversed order. For further details, take a look at\n the {@link #animate} method.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "desc {Map} The animation\"s description.",
            "paramName": "desc",
            "description": " The animation\"s description.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "duration {Number?} The duration in milliseconds of the animation,\n   which will override the duration given in the description.",
            "paramName": "duration",
            "description": " The duration in milliseconds of the animation,\n   which will override the duration given in the description.",
            "optional": true,
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 5694
        },
        "end": {
          "line": 191,
          "column": 5,
          "index": 5820
        }
      },
      "type": "function",
      "params": [
        {
          "name": "desc",
          "type": "Map<any, any>"
        },
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    },
    "play": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Manipulates the play state of the animation.",
          "     * This can be used to continue an animation when paused.",
          "     * @attach {qxWeb}",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Manipulates the play state of the animation.\n This can be used to continue an animation when paused.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 6032
        },
        "end": {
          "line": 207,
          "column": 5,
          "index": 6218
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    },
    "pause": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Manipulates the play state of the animation.",
          "     * This can be used to pause an animation when running.",
          "     * @attach {qxWeb}",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Manipulates the play state of the animation.\n This can be used to pause an animation when running.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 215,
          "column": 4,
          "index": 6428
        },
        "end": {
          "line": 224,
          "column": 5,
          "index": 6617
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    },
    "stop": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Stops a running animation.",
          "     * @attach {qxWeb}",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops a running animation.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 231,
          "column": 4,
          "index": 6749
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 6936
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    },
    "isPlaying": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns whether an animation is running or not.",
          "     * @attach {qxWeb}",
          "     * @return {Boolean} <code>true</code>, if an animation is running.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether an animation is running or not.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if an animation is running.",
            "type": "boolean",
            "description": "<code>true</code>, if an animation is running."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 7109
        },
        "end": {
          "line": 256,
          "column": 5,
          "index": 7322
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "isEnded": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns whether an animation has ended or not.",
          "     * @attach {qxWeb}",
          "     * @return {Boolean} <code>true</code>, if an animation has ended.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether an animation has ended or not.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if an animation has ended.",
            "type": "boolean",
            "description": "<code>true</code>, if an animation has ended."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 263,
          "column": 4,
          "index": 7493
        },
        "end": {
          "line": 272,
          "column": 5,
          "index": 7703
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "fadeIn": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fades in all elements in the collection.",
          "     * @attach {qxWeb}",
          "     * @param duration {Number?} The duration in milliseconds.",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fades in all elements in the collection.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "duration {Number?} The duration in milliseconds.",
            "paramName": "duration",
            "description": " The duration in milliseconds.",
            "optional": true,
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 280,
          "column": 4,
          "index": 7912
        },
        "end": {
          "line": 284,
          "column": 5,
          "index": 8076
        }
      },
      "type": "function",
      "params": [
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    },
    "fadeOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fades out all elements in the collection.",
          "     * @attach {qxWeb}",
          "     * @param duration {Number?} The duration in milliseconds.",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fades out all elements in the collection.</p>"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "duration {Number?} The duration in milliseconds.",
            "paramName": "duration",
            "description": " The duration in milliseconds.",
            "optional": true,
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 292,
          "column": 4,
          "index": 8286
        },
        "end": {
          "line": 294,
          "column": 5,
          "index": 8378
        }
      },
      "type": "function",
      "params": [
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    }
  },
  "properties": {}
}