{
  "version": 0.3,
  "lastModified": 1717235172406,
  "lastModifiedIso": "2024-06-01T09:46:12.406Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/module/Storage.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 844
    },
    "end": {
      "line": 194,
      "column": 3,
      "index": 5760
    }
  },
  "className": "qx.module.Storage",
  "jsdoc": {
    "raw": [
      "*",
      " * This module offers a cross browser storage implementation. The API is aligned",
      " * with the API of the HTML web storage (http://www.w3.org/TR/webstorage/) which is",
      " * also the preferred implementation used. As fallback for IE < 8, we use user data.",
      " * If both techniques are unsupported, we supply a in memory storage, which is",
      " * of course, not persistent.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This module offers a cross browser storage implementation. The API is aligned\n with the API of the HTML web storage (http://www.w3.org/TR/webstorage/) which is\n also the preferred implementation used. As fallback for IE &lt; 8, we use user data.\n If both techniques are unsupported, we supply a in memory storage, which is\n of course, not persistent.</p>"
      }
    ]
  },
  "statics": {
    "setLocalItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Store an item in the storage.",
          "     *",
          "     * @attachStatic {qxWeb, localStorage.setItem}",
          "     * @param key {String} The identifier key.",
          "     * @param value {var} The data, which will be stored as JSON.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Store an item in the storage.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, localStorage.setItem}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier key.",
            "paramName": "key",
            "description": " The identifier key.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "value {var} The data, which will be stored as JSON.",
            "paramName": "value",
            "description": " The data, which will be stored as JSON.",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 35,
          "column": 4,
          "index": 1128
        },
        "end": {
          "line": 37,
          "column": 5,
          "index": 1213
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": []
    },
    "getLocalItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the stored item.",
          "     *",
          "     * @attachStatic {qxWeb, localStorage.getItem}",
          "     * @param key {String} The identifier to get the data.",
          "     * @return {var} The stored data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the stored item.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, localStorage.getItem}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier to get the data.",
            "paramName": "key",
            "description": " The identifier to get the data.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The stored data.",
            "type": "var",
            "description": "The stored data."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1423
        },
        "end": {
          "line": 48,
          "column": 5,
          "index": 1501
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": []
    },
    "removeLocalItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes an item form the storage.",
          "     * @attachStatic {qxWeb, localStorage.removeItem}",
          "     * @param key {String} The identifier.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes an item form the storage.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, localStorage.removeItem}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier.",
            "paramName": "key",
            "description": " The identifier.",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1662
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1739
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "getLocalLength": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the amount of key-value pairs stored.",
          "     * @attachStatic {qxWeb, localStorage.getLength}",
          "     * @return {Number} The length of the storage.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the amount of key-value pairs stored.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, localStorage.getLength}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The length of the storage.",
            "type": "number",
            "description": "The length of the storage."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1919
        },
        "end": {
          "line": 66,
          "column": 5,
          "index": 1995
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getLocalKey": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the named key at the given index.",
          "     * @attachStatic {qxWeb, localStorage.getKey}",
          "     * @param index {Number} The index in the storage.",
          "     * @return {String} The key stored at the given index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the named key at the given index.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, localStorage.getKey}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index in the storage.",
            "paramName": "index",
            "description": " The index in the storage.",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The key stored at the given index.",
            "type": "string",
            "description": "The key stored at the given index."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 2231
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 2311
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "clearLocal": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Deletes every stored item in the storage.",
          "     * @attachStatic {qxWeb, localStorage.clear}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Deletes every stored item in the storage.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, localStorage.clear}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2432
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2493
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "forEachLocal": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper to access every stored item.",
          "     *",
          "     * @attachStatic {qxWeb, localStorage.forEach}",
          "     * @param callback {Function} A function which will be called for every item.",
          "     *   The function will have two arguments, first the key and second the value",
          "     *    of the stored data.",
          "     * @param scope {var} The scope of the function.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to access every stored item.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, localStorage.forEach}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} A function which will be called for every item.\n   The function will have two arguments, first the key and second the value\n    of the stored data.",
            "paramName": "callback",
            "description": " A function which will be called for every item.\n   The function will have two arguments, first the key and second the value\n    of the stored data.",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "scope {var} The scope of the function.",
            "paramName": "scope",
            "description": " The scope of the function.",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2864
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2959
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "scope",
          "type": "var"
        }
      ],
      "appearsIn": []
    },
    "setSessionItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Store an item in the storage.",
          "     *",
          "     * @attachStatic {qxWeb, sessionStorage.setItem}",
          "     * @param key {String} The identifier key.",
          "     * @param value {var} The data, which will be stored as JSON.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Store an item in the storage.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, sessionStorage.setItem}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier key.",
            "paramName": "key",
            "description": " The identifier key.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "value {var} The data, which will be stored as JSON.",
            "paramName": "value",
            "description": " The data, which will be stored as JSON.",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 3192
        },
        "end": {
          "line": 108,
          "column": 5,
          "index": 3281
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": []
    },
    "getSessionItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the stored item.",
          "     *",
          "     * @attachStatic {qxWeb, sessionStorage.getItem}",
          "     * @param key {String} The identifier to get the data.",
          "     * @return {var} The stored data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the stored item.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, sessionStorage.getItem}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier to get the data.",
            "paramName": "key",
            "description": " The identifier to get the data.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The stored data.",
            "type": "var",
            "description": "The stored data."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3493
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3575
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": []
    },
    "removeSessionItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes an item form the storage.",
          "     * @attachStatic {qxWeb, sessionStorage.removeItem}",
          "     * @param key {String} The identifier.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes an item form the storage.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, sessionStorage.removeItem}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier.",
            "paramName": "key",
            "description": " The identifier.",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3738
        },
        "end": {
          "line": 128,
          "column": 5,
          "index": 3819
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "getSessionLength": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the amount of key-value pairs stored.",
          "     * @attachStatic {qxWeb, sessionStorage.getLength}",
          "     * @return {Number} The length of the storage.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the amount of key-value pairs stored.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, sessionStorage.getLength}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The length of the storage.",
            "type": "number",
            "description": "The length of the storage."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 4001
        },
        "end": {
          "line": 137,
          "column": 5,
          "index": 4081
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getSessionKey": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the named key at the given index.",
          "     * @attachStatic {qxWeb, sessionStorage.getKey}",
          "     * @param index {Number} The index in the storage.",
          "     * @return {String} The key stored at the given index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the named key at the given index.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, sessionStorage.getKey}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index in the storage.",
            "paramName": "index",
            "description": " The index in the storage.",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The key stored at the given index.",
            "type": "string",
            "description": "The key stored at the given index."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 145,
          "column": 4,
          "index": 4319
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 4403
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "clearSession": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Deletes every stored item in the storage.",
          "     * @attachStatic {qxWeb, sessionStorage.clear}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Deletes every stored item in the storage.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, sessionStorage.clear}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4526
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4591
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "forEachSession": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper to access every stored item.",
          "     *",
          "     * @attachStatic {qxWeb, sessionStorage.forEach}",
          "     * @param callback {Function} A function which will be called for every item.",
          "     *   The function will have two arguments, first the key and second the value",
          "     *    of the stored data.",
          "     * @param scope {var} The scope of the function.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to access every stored item.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, sessionStorage.forEach}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} A function which will be called for every item.\n   The function will have two arguments, first the key and second the value\n    of the stored data.",
            "paramName": "callback",
            "description": " A function which will be called for every item.\n   The function will have two arguments, first the key and second the value\n    of the stored data.",
            "type": "((...args: any[]) => any)"
          },
          {
            "name": "@param",
            "body": "scope {var} The scope of the function.",
            "paramName": "scope",
            "description": " The scope of the function.",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 166,
          "column": 4,
          "index": 4964
        },
        "end": {
          "line": 168,
          "column": 5,
          "index": 5063
        }
      },
      "type": "function",
      "params": [
        {
          "name": "callback",
          "type": "((...args: any[]) => any)"
        },
        {
          "name": "scope",
          "type": "var"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}