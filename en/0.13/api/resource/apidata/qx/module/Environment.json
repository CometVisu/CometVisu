{
  "version": 0.3,
  "lastModified": 1731947915431,
  "lastModifiedIso": "2024-11-18T16:38:35.431Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/module/Environment.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 39,
      "column": 0,
      "index": 1450
    },
    "end": {
      "line": 85,
      "column": 3,
      "index": 2830
    }
  },
  "className": "qx.module.Environment",
  "jsdoc": {
    "raw": [
      "*",
      " * Module for querying information about the environment / runtime.",
      " * It adds a static key <code>env</code> to qxWeb and offers the given methods.",
      " *",
      " * The following values are predefined:",
      " *",
      " * * <code>browser.name</code> : The name of the browser",
      " * * <code>browser.version</code> : The version of the browser",
      " * * <code>browser.quirksmode</code>  : <code>true</code> if the browser is in quirksmode",
      " * * <code>browser.documentmode</code> : The document mode of the browser",
      " *",
      " * * <code>device.name</code> : The name of the device e.g. <code>iPad</code>.",
      " * * <code>device.type</code> : Either <code>desktop</code>, <code>tablet</code> or <code>mobile</code>.",
      " *",
      " * * <code>engine.name</code> : The name of the browser engine",
      " * * <code>engine.version</code> : The version of the browser engine",
      " *",
      " * * <code>event.touch</code> : Checks if touch events are supported",
      " * * <code>event.mspointer</code> : Checks if MSPointer events are available",
      " * @group (Core)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Module for querying information about the environment / runtime.\n It adds a static key <code>env</code> to qxWeb and offers the given methods.\n The following values are predefined:</p>\n<ul>\n<li><code>browser.name</code> : The name of the browser</li>\n<li><code>browser.version</code> : The version of the browser</li>\n<li><code>browser.quirksmode</code>  : <code>true</code> if the browser is in quirksmode</li>\n<li><code>browser.documentmode</code> : The document mode of the browser</li>\n<li><code>device.name</code> : The name of the device e.g. <code>iPad</code>.</li>\n<li><code>device.type</code> : Either <code>desktop</code>, <code>tablet</code> or <code>mobile</code>.</li>\n<li><code>engine.name</code> : The name of the browser engine</li>\n<li><code>engine.version</code> : The version of the browser engine</li>\n<li><code>event.touch</code> : Checks if touch events are supported</li>\n<li><code>event.mspointer</code> : Checks if MSPointer events are available</li>\n</ul>"
      }
    ],
    "@group": [
      {
        "name": "@group",
        "body": "Core"
      }
    ]
  },
  "statics": {
    "get": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the value stored for the given key.",
          "     *",
          "     * @attachStatic {qxWeb, env.get}",
          "     * @param key {String} The key to check for.",
          "     * @return {var} The value stored for the given key.",
          "     * @lint environmentNonLiteralKey(key)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the value stored for the given key.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, env.get}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The key to check for.",
            "paramName": "key",
            "description": " The key to check for.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The value stored for the given key.",
            "type": "var",
            "description": "The value stored for the given key."
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "environmentNonLiteralKey(key)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1771
        },
        "end": {
          "line": 51,
          "column": 5,
          "index": 1830
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": []
    },
    "add": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a new environment setting which can be queried via {@link #get}.",
          "     * @param key {String} The key to store the value for.",
          "     *",
          "     * @attachStatic {qxWeb, env.add}",
          "     * @param value {var} The value to store.",
          "     * @return {qxWeb} The collection for chaining.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a new environment setting which can be queried via {@link #get}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The key to store the value for.",
            "paramName": "key",
            "description": " The key to store the value for.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "value {var} The value to store.",
            "paramName": "value",
            "description": " The value to store.",
            "type": "var"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, env.add}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining.",
            "type": "qxWeb",
            "description": "The collection for chaining."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 2132
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 2217
        }
      },
      "type": "function",
      "params": [
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "var"
        }
      ],
      "returnType": {
        "type": "qxWeb"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}