{
  "className": "qx.module.util.String",
  "packageName": "qx.module.util",
  "name": "String",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 678
      },
      "end": {
        "line": 120,
        "column": 3,
        "index": 3718
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Utility module to give some support to work with strings.\n<em>Info:</em> The <pre class='javascript'>trim</pre> method is available as <a href=\"#String\">Polyfill</a>.</p>"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Utilities"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "camelCase": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 968
        },
        "end": {
          "line": 36,
          "column": 5,
          "index": 1055
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a hyphenated string (separated by '-') to camel case.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.camelCase}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} hyphenated string",
            "paramName": "str",
            "description": " hyphenated string",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} camelcase string",
            "type": "qx.module.util.String",
            "description": " camelcase string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hyphenate": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1298
        },
        "end": {
          "line": 47,
          "column": 5,
          "index": 1385
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a camelcased string to a hyphenated (separated by '-') string.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.hyphenate}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} camelcased string",
            "paramName": "str",
            "description": " camelcased string",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} hyphenated string",
            "type": "qx.module.util.String",
            "description": " hyphenated string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "firstUp": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1664
        },
        "end": {
          "line": 57,
          "column": 35,
          "index": 1695
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Convert the first character of the string to upper case.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.firstUp}"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(str)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} the string",
            "paramName": "str",
            "description": " the string",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the string with an upper case first character",
            "type": "qx.module.util.String",
            "description": " the string with an upper case first character"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "firstLow": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1974
        },
        "end": {
          "line": 67,
          "column": 37,
          "index": 2007
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Convert the first character of the string to lower case.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.firstLow}"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(str)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} the string",
            "paramName": "str",
            "description": " the string",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the string with a lower case first character",
            "type": "qx.module.util.String",
            "description": " the string with a lower case first character"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "startsWith": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2381
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 2457
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the string starts with the given substring.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.startsWith}"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(fullstr, substr)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fullstr {String} the string to search in",
            "paramName": "fullstr",
            "description": " the string to search in",
            "type": "qx.module.util.String"
          },
          {
            "name": "@param",
            "body": "substr {String} the substring to look for",
            "paramName": "substr",
            "description": " the substring to look for",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the string starts with the given substring",
            "type": "Boolean",
            "description": " whether the string starts with the given substring"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "endsWith": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2825
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2897
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the string ends with the given substring.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.endsWith}"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(fullstr, substr)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fullstr {String} the string to search in",
            "paramName": "fullstr",
            "description": " the string to search in",
            "type": "qx.module.util.String"
          },
          {
            "name": "@param",
            "body": "substr {String} the substring to look for",
            "paramName": "substr",
            "description": " the substring to look for",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the string ends with the given substring",
            "type": "Boolean",
            "description": " whether the string ends with the given substring"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "escapeRegexpChars": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 3215
        },
        "end": {
          "line": 103,
          "column": 55,
          "index": 3266
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Escapes all chars that have a special meaning in regular expressions.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.escapeRegexpChars}"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(str)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} the string where to escape the chars.",
            "paramName": "str",
            "description": " the string where to escape the chars.",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the string with the escaped chars.",
            "type": "qx.module.util.String",
            "description": " the string with the escaped chars."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "escapeHtml": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3615
        },
        "end": {
          "line": 114,
          "column": 36,
          "index": 3647
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Escapes the characters in a <code>String</code> using HTML entities.\n Supports all known HTML 4.0 entities, including funky accents.</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, string.escapeHtml}"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(str)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} the String to escape",
            "paramName": "str",
            "description": " the String to escape",
            "type": "qx.module.util.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} a new escaped String",
            "type": "qx.module.util.String",
            "description": " a new escaped String"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 117,
        "column": 2,
        "index": 3656
      },
      "end": {
        "line": 119,
        "column": 3,
        "index": 3714
      }
    }
  },
  "descendants": []
}