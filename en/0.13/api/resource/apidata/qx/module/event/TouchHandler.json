{
  "version": 0.3,
  "lastModified": 1735341602719,
  "lastModifiedIso": "2024-12-27T23:20:02.719Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/module/event/TouchHandler.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 27,
      "column": 0,
      "index": 689
    },
    "end": {
      "line": 84,
      "column": 3,
      "index": 2255
    }
  },
  "className": "qx.module.event.TouchHandler",
  "jsdoc": {
    "raw": [
      "*",
      " * Creates a touch event handler that fires high-level events such as \"swipe\"",
      " * based on low-level event sequences on the given element",
      " *",
      " * @require(qx.module.Event)",
      " *",
      " * @group (Event_Normalization)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Creates a touch event handler that fires high-level events such as \"swipe\"\n based on low-level event sequences on the given element</p>"
      }
    ],
    "@require": [
      {
        "name": "@require",
        "body": "qx.module.Event"
      }
    ],
    "@group": [
      {
        "name": "@group",
        "body": "Event_Normalization"
      }
    ]
  },
  "statics": {
    "TYPES": {
      "jsdoc": {
        "raw": [
          "*",
          "     * List of events that require a touch handler",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of events that require a touch handler</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 32,
          "column": 4,
          "index": 827
        },
        "end": {
          "line": 32,
          "column": 65,
          "index": 888
        }
      },
      "appearsIn": []
    },
    "register": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates a touch handler for the given element when a touch event listener",
          "     * is attached to it",
          "     *",
          "     * @param element {Element} DOM element",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a touch handler for the given element when a touch event listener\n is attached to it</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element",
            "paramName": "element",
            "description": " DOM element",
            "type": "Element"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1068
        },
        "end": {
          "line": 50,
          "column": 5,
          "index": 1359
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        }
      ],
      "appearsIn": []
    },
    "unregister": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the touch event handler from the element if there are no more",
          "     * touch event listeners attached to it",
          "     * @param element {Element} DOM element",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the touch event handler from the element if there are no more\n touch event listeners attached to it</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element",
            "paramName": "element",
            "description": " DOM element",
            "type": "Element"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1547
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2115
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}