{
  "version": 0.3,
  "lastModified": 1726088852533,
  "lastModifiedIso": "2024-09-11T21:07:32.533Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/module/event/Native.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 28,
      "column": 0,
      "index": 674
    },
    "end": {
      "line": 138,
      "column": 3,
      "index": 3506
    }
  },
  "className": "qx.module.event.Native",
  "jsdoc": {
    "raw": [
      "*",
      " * Common normalizations for native events",
      " *",
      " * @require(qx.module.Event)",
      " * @require(qx.bom.Event#getTarget)",
      " * @require(qx.bom.Event#getRelatedTarget)",
      " *",
      " * @group (Event_Normalization)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Common normalizations for native events</p>"
      }
    ],
    "@require": [
      {
        "name": "@require",
        "body": "qx.module.Event"
      },
      {
        "name": "@require",
        "body": "qx.bom.Event#getTarget"
      },
      {
        "name": "@require",
        "body": "qx.bom.Event#getRelatedTarget"
      }
    ],
    "@group": [
      {
        "name": "@group",
        "body": "Event_Normalization"
      }
    ]
  },
  "statics": {
    "TYPES": {
      "jsdoc": {
        "raw": [
          "*",
          "     * List of event types to be normalized",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of event types to be normalized</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 799
        },
        "end": {
          "line": 33,
          "column": 16,
          "index": 811
        }
      },
      "appearsIn": []
    },
    "FORWARD_METHODS": {
      "jsdoc": {
        "raw": [
          "*",
          "     * List of qx.bom.Event methods to be attached to native event objects",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of qx.bom.Event methods to be attached to native event objects</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 926
        },
        "end": {
          "line": 39,
          "column": 54,
          "index": 976
        }
      },
      "appearsIn": []
    },
    "BIND_METHODS": {
      "jsdoc": {
        "raw": [
          "*",
          "     * List of qx.module.event.Native methods to be attached to native event objects",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of qx.module.event.Native methods to be attached to native event objects</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1101
        },
        "end": {
          "line": 45,
          "column": 66,
          "index": 1163
        }
      },
      "appearsIn": []
    },
    "preventDefault": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Prevent the native default behavior of the event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Prevent the native default behavior of the event.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1243
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1451
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "stopPropagation": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Stops the event's propagation to the element's parent",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops the event's propagation to the element's parent</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1535
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1592
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getType": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the event's type",
          "     *",
          "     * @return {String} event type",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the event's type</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} event type",
            "type": "string",
            "description": "event type"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1689
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1744
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getTarget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the target of the event.",
          "     *",
          "     * @signature function ()",
          "     * @return {Object} Any valid native event target",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the target of the event.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function ()"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} Any valid native event target",
            "type": "Record<any, any>",
            "description": "Any valid native event target"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 1898
        },
        "end": {
          "line": 82,
          "column": 18,
          "index": 1912
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    },
    "getRelatedTarget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Computes the related target from the native DOM event",
          "     *",
          "     * @signature function ()",
          "     * @return {Element} The related target",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the related target from the native DOM event</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function ()"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} The related target",
            "type": "Element",
            "description": "The related target"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2077
        },
        "end": {
          "line": 90,
          "column": 25,
          "index": 2098
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Element"
      },
      "appearsIn": []
    },
    "getCurrentTarget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Computes the current target from the native DOM event. Emulates the current target",
          "     * for all browsers without native support (like older IEs).",
          "     *",
          "     * @signature function ()",
          "     * @return {Element} The current target",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the current target from the native DOM event. Emulates the current target\n for all browsers without native support (like older IEs).</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function ()"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} The current target",
            "type": "Element",
            "description": "The current target"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2357
        },
        "end": {
          "line": 99,
          "column": 25,
          "index": 2378
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Element"
      },
      "appearsIn": []
    },
    "normalize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Manipulates the native event object, adding methods if they're not",
          "     * already present",
          "     *",
          "     * @param event {Event} Native event object",
          "     * @param element {Element} DOM element the listener was attached to",
          "     * @return {Event} Normalized event object",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Manipulates the native event object, adding methods if they're not\n already present</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {Event} Native event object",
            "paramName": "event",
            "description": " Native event object",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "element {Element} DOM element the listener was attached to",
            "paramName": "element",
            "description": " DOM element the listener was attached to",
            "type": "Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Event} Normalized event object",
            "type": "Event",
            "description": "Normalized event object"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 2690
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3400
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "Event"
        },
        {
          "name": "element",
          "type": "Element"
        }
      ],
      "returnType": {
        "type": "Event"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}