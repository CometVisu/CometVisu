{
  "className": "qx.module.MatchMedia",
  "packageName": "qx.module",
  "name": "MatchMedia",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 722
      },
      "end": {
        "line": 140,
        "column": 3,
        "index": 3990
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Module for mediaqueries evaluation. The module is a wrapper for media.match.js,\n that implements a polyfill for window.matchMedia when it's not supported natively.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "matchMedia": {
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 1014
        },
        "end": {
          "line": 35,
          "column": 5,
          "index": 1084
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Evaluates the specified mediaquery list</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "query {String} the media query to evaluate",
            "paramName": "query",
            "description": " the media query to evaluate",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.MediaQuery}  The media query",
            "type": "qx.bom.MediaQuery",
            "description": "  The media query"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, matchMedia}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addSizeClasses": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1641
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2785
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds screen size classes (e.g. small-only or medium-up) by pre-defined media queries using em.\n The range goes from small to medium, large and xlarge up to xxlarge:\n small: 0em - 40em\n medium: 40.063em - 64em\n large: 64.063em - 90em\n xlarge: 90.063em - 120em\n xxlarge: &gt; 120.063em\n The suffix of the class name indicates either that the current screen\n is larger than this size (<em>-up) or in that range (</em>-only).</p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__applyClass": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 3030
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 3200
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds or removes a class depending on matching a given media query</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "query {String} the media query to evaluate",
            "paramName": "query",
            "description": " the media query to evaluate",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "className {String} css class name that gets bind to an element",
            "paramName": "className",
            "description": " css class name that gets bind to an element",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "members": {
    "mediaQueryToClass": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3554
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3923
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listens for media query updates and applies/removes the css class.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "queryString {String} the media query to evaluate",
            "paramName": "queryString",
            "description": " the media query to evaluate",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "className {String} css class name that gets bind to an element",
            "paramName": "className",
            "description": " css class name that gets bind to an element",
            "type": "String"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} Self instance for chaining",
            "type": "qxWeb",
            "description": " Self instance for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 137,
        "column": 2,
        "index": 3935
      },
      "end": {
        "line": 139,
        "column": 3,
        "index": 3985
      }
    }
  },
  "descendants": []
}