{
  "className": "qx.ui.core.selection.Abstract",
  "packageName": "qx.ui.core.selection",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 720
      },
      "end": {
        "line": 1762,
        "column": 3,
        "index": 48770
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Generic selection manager to bring rich desktop like selection behavior\n to widgets and low-level interactive controls.\n The selection handling supports both Shift and Ctrl/Meta modifies like\n known from native applications.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1008
      },
      "end": {
        "line": 41,
        "column": 3,
        "index": 1106
      }
    },
    "jsdoc": {}
  },
  "events": {
    "changeSelection": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1407
        },
        "end": {
          "line": 51,
          "column": 41,
          "index": 1444
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after the selection was modified. Contains the selection under the data property.</p>"
          }
        ]
      },
      "name": "changeSelection",
      "type": "qx.event.type.Data"
    }
  },
  "properties": {
    "mode": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 2007
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 2121
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects the selection mode to use.</p>\n<ul>\n<li>single: One or no element is selected</li>\n<li>multi: Multi items could be selected. Also allows empty selections.</li>\n<li>additive: Easy Web-2.0 selection mode. Allows multiple selections without modifier keys.</li>\n<li>one: If possible always exactly one item is selected</li>\n</ul>"
          }
        ]
      },
      "name": "mode",
      "propertyType": "new",
      "apply": "_applyMode",
      "init": "single",
      "possibleValues": [
        "single",
        "multi",
        "additive",
        "one"
      ],
      "defaultValue": "single"
    },
    "drag": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2342
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2397
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable drag selection (multi selection of items through\n dragging the pointer in pressed states).\n Only possible for the modes <code>multi</code> and <code>additive</code></p>"
          }
        ]
      },
      "name": "drag",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "quick": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2588
        },
        "end": {
          "line": 94,
          "column": 5,
          "index": 2644
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable quick selection mode, where no tap is needed to change the selection.\n Only possible for the modes <code>single</code> and <code>one</code>.</p>"
          }
        ]
      },
      "name": "quick",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "readOnly": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2731
        },
        "end": {
          "line": 102,
          "column": 5,
          "index": 2790
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the selection can be changed by user interaction</p>"
          }
        ]
      },
      "name": "readOnly",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__scrollStepX": {
      "location": {
        "start": {
          "line": 112,
          "column": 4,
          "index": 3051
        },
        "end": {
          "line": 112,
          "column": 20,
          "index": 3067
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__scrollStepY": {
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 3073
        },
        "end": {
          "line": 113,
          "column": 20,
          "index": 3089
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__scrollTimer": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3095
        },
        "end": {
          "line": 114,
          "column": 23,
          "index": 3114
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__frameScroll": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3120
        },
        "end": {
          "line": 115,
          "column": 23,
          "index": 3139
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__lastRelX": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3145
        },
        "end": {
          "line": 116,
          "column": 20,
          "index": 3161
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__lastRelY": {
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3167
        },
        "end": {
          "line": 117,
          "column": 20,
          "index": 3183
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__frameLocation": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3189
        },
        "end": {
          "line": 118,
          "column": 25,
          "index": 3210
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__dragStartX": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3216
        },
        "end": {
          "line": 119,
          "column": 22,
          "index": 3234
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__dragStartY": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3240
        },
        "end": {
          "line": 120,
          "column": 22,
          "index": 3258
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__inCapture": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3264
        },
        "end": {
          "line": 121,
          "column": 21,
          "index": 3281
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__pointerX": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3287
        },
        "end": {
          "line": 122,
          "column": 20,
          "index": 3303
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__pointerY": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3309
        },
        "end": {
          "line": 123,
          "column": 20,
          "index": 3325
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__moveDirectionX": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3331
        },
        "end": {
          "line": 124,
          "column": 26,
          "index": 3353
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__moveDirectionY": {
      "location": {
        "start": {
          "line": 125,
          "column": 4,
          "index": 3359
        },
        "end": {
          "line": 125,
          "column": 26,
          "index": 3381
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__selectionModified": {
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3387
        },
        "end": {
          "line": 126,
          "column": 29,
          "index": 3412
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__selectionContext": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3418
        },
        "end": {
          "line": 127,
          "column": 28,
          "index": 3442
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__leadItem": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3448
        },
        "end": {
          "line": 128,
          "column": 20,
          "index": 3464
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__selection": {
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3470
        },
        "end": {
          "line": 129,
          "column": 21,
          "index": 3487
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__anchorItem": {
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 3493
        },
        "end": {
          "line": 130,
          "column": 22,
          "index": 3511
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__pointerDownOnSelected": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3517
        },
        "end": {
          "line": 131,
          "column": 33,
          "index": 3546
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_userInteraction": {
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 3690
        },
        "end": {
          "line": 135,
          "column": 27,
          "index": 3713
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "protected"
    },
    "__oldScrollTop": {
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3720
        },
        "end": {
          "line": 137,
          "column": 24,
          "index": 3740
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getSelectionContext": {
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4256
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4323
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the selection context. One of <code>tap</code>,\n <code>quick</code>, <code>drag</code> or <code>key</code> or\n <code>null</code>.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} One of <code>tap</code>, <code>quick</code>,\n    <code>drag</code> or <code>key</code> or <code>null</code>",
            "type": "String",
            "description": " One of <code>tap</code>, <code>quick</code>,\n    <code>drag</code> or <code>key</code> or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "selectAll": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4401
        },
        "end": {
          "line": 169,
          "column": 5,
          "index": 4645
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects all items of the managed object.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "selectItem": {
      "location": {
        "start": {
          "line": 180,
          "column": 4,
          "index": 4918
        },
        "end": {
          "line": 191,
          "column": 5,
          "index": 5201
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects the given item. Replaces current selection\n completely with the new item.\n Use {@link #addItem} instead if you want to add new\n items to an existing selection.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {Object} Any valid item",
            "paramName": "item",
            "description": " Any valid item",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addItem": {
      "location": {
        "start": {
          "line": 201,
          "column": 4,
          "index": 5427
        },
        "end": {
          "line": 216,
          "column": 5,
          "index": 5817
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the given item to the existing selection.\n Use {@link #selectItem} instead if you want to replace\n the current selection.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {Object} Any valid item",
            "paramName": "item",
            "description": " Any valid item",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeItem": {
      "location": {
        "start": {
          "line": 226,
          "column": 4,
          "index": 6041
        },
        "end": {
          "line": 247,
          "column": 5,
          "index": 6536
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given item from the selection.\n Use {@link #clearSelection} when you want to clear\n the whole selection at once.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {Object} Any valid item",
            "paramName": "item",
            "description": " Any valid item",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "selectItemRange": {
      "location": {
        "start": {
          "line": 255,
          "column": 4,
          "index": 6710
        },
        "end": {
          "line": 271,
          "column": 5,
          "index": 7110
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects an item range between two given items.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "begin {Object} Item to start with",
            "paramName": "begin",
            "description": " Item to start with",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "end {Object} Item to end at",
            "paramName": "end",
            "description": " Item to end at",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "clearSelection": {
      "location": {
        "start": {
          "line": 279,
          "column": 4,
          "index": 7253
        },
        "end": {
          "line": 292,
          "column": 5,
          "index": 7562
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears the whole selection at once. Also\n resets the lead and anchor items and their\n styles.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "replaceSelection": {
      "location": {
        "start": {
          "line": 302,
          "column": 4,
          "index": 7823
        },
        "end": {
          "line": 320,
          "column": 5,
          "index": 8305
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replaces current selection with given array of items.\n Please note that in single selection scenarios it is more\n efficient to directly use {@link #selectItem}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "items {Array} Items to select",
            "paramName": "items",
            "description": " Items to select",
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectedItem": {
      "location": {
        "start": {
          "line": 328,
          "column": 4,
          "index": 8481
        },
        "end": {
          "line": 338,
          "column": 5,
          "index": 8822
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the selected item. This method does only work in <code>single</code>\n selection mode.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The selected item.",
            "type": "Object",
            "description": " The selected item."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelection": {
      "location": {
        "start": {
          "line": 348,
          "column": 4,
          "index": 9090
        },
        "end": {
          "line": 350,
          "column": 5,
          "index": 9158
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array of currently selected items.\n Note: The result is only a set of selected items, so the order can\n differ from the sequence in which the items were added.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} List of items.",
            "type": "Object[]",
            "description": " List of items."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSortedSelection": {
      "location": {
        "start": {
          "line": 358,
          "column": 4,
          "index": 9347
        },
        "end": {
          "line": 367,
          "column": 5,
          "index": 9589
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the selection sorted by the index in the\n container of the selection (the assigned widget)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Sorted list of items",
            "type": "Object[]",
            "description": " Sorted list of items"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isItemSelected": {
      "location": {
        "start": {
          "line": 375,
          "column": 4,
          "index": 9785
        },
        "end": {
          "line": 378,
          "column": 5,
          "index": 9915
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the given item is currently selected.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any valid selectable item",
            "paramName": "item",
            "description": " Any valid selectable item",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the item is selected",
            "type": "Boolean",
            "description": " Whether the item is selected"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSelectionEmpty": {
      "location": {
        "start": {
          "line": 385,
          "column": 4,
          "index": 10039
        },
        "end": {
          "line": 387,
          "column": 5,
          "index": 10120
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the selection is empty</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the selection is empty",
            "type": "Boolean",
            "description": " Whether the selection is empty"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "invertSelection": {
      "location": {
        "start": {
          "line": 392,
          "column": 4,
          "index": 10223
        },
        "end": {
          "line": 406,
          "column": 5,
          "index": 10660
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Invert the selection. Select the non selected and deselect the selected.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_setLeadItem": {
      "location": {
        "start": {
          "line": 420,
          "column": 4,
          "index": 11062
        },
        "end": {
          "line": 432,
          "column": 5,
          "index": 11329
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the lead item. Generally the item which was last modified\n by the user (tapped on etc.)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Object} Any valid item or <code>null</code>",
            "paramName": "value",
            "description": " Any valid item or <code>null</code>",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getLeadItem": {
      "location": {
        "start": {
          "line": 440,
          "column": 4,
          "index": 11535
        },
        "end": {
          "line": 442,
          "column": 5,
          "index": 11586
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current lead item. Generally the item which was last modified\n by the user (tapped on etc.)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The lead item or <code>null</code>",
            "type": "Object",
            "description": " The lead item or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_setAnchorItem": {
      "location": {
        "start": {
          "line": 451,
          "column": 4,
          "index": 11890
        },
        "end": {
          "line": 463,
          "column": 5,
          "index": 12165
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the anchor item. This is the item which is the starting\n point for all range selections. Normally this is the item which was\n tapped on the last time without any modifier keys pressed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Object} Any valid item or <code>null</code>",
            "paramName": "value",
            "description": " Any valid item or <code>null</code>",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getAnchorItem": {
      "location": {
        "start": {
          "line": 472,
          "column": 4,
          "index": 12476
        },
        "end": {
          "line": 474,
          "column": 5,
          "index": 12568
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current anchor item. This is the item which is the starting\n point for all range selections. Normally this is the item which was\n tapped on the last time without any modifier keys pressed.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The anchor item or <code>null</code>",
            "type": "Object",
            "description": " The anchor item or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isSelectable": {
      "location": {
        "start": {
          "line": 488,
          "column": 4,
          "index": 12943
        },
        "end": {
          "line": 490,
          "column": 5,
          "index": 13034
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given item is selectable.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the item is selectable",
            "type": "Boolean",
            "description": " <code>true</code> when the item is selectable"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getSelectableFromPointerEvent": {
      "location": {
        "start": {
          "line": 498,
          "column": 4,
          "index": 13238
        },
        "end": {
          "line": 505,
          "column": 5,
          "index": 13499
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Finds the selectable instance from a pointer event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} The pointer event",
            "paramName": "event",
            "description": " The pointer event",
            "type": "qx.event.type.Pointer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object|null} The resulting selectable",
            "type": "Object|null",
            "description": " The resulting selectable"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_selectableToHashCode": {
      "location": {
        "start": {
          "line": 513,
          "column": 4,
          "index": 13658
        },
        "end": {
          "line": 515,
          "column": 5,
          "index": 13765
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an unique hashcode for the given item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} A valid hashcode",
            "type": "String",
            "description": " A valid hashcode"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_styleSelectable": {
      "location": {
        "start": {
          "line": 524,
          "column": 4,
          "index": 14075
        },
        "end": {
          "line": 526,
          "column": 5,
          "index": 14187
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the style (appearance) of the given item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Item to modify",
            "paramName": "item",
            "description": " Item to modify",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "type {String} Any of <code>selected</code>, <code>anchor</code> or <code>lead</code>",
            "paramName": "type",
            "description": " Any of <code>selected</code>, <code>anchor</code> or <code>lead</code>",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "enabled {Boolean} Whether the given style should be added or removed.",
            "paramName": "enabled",
            "description": " Whether the given style should be added or removed.",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_capture": {
      "location": {
        "start": {
          "line": 532,
          "column": 4,
          "index": 14260
        },
        "end": {
          "line": 534,
          "column": 5,
          "index": 14337
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enables capturing of the container.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_releaseCapture": {
      "location": {
        "start": {
          "line": 540,
          "column": 4,
          "index": 14410
        },
        "end": {
          "line": 542,
          "column": 5,
          "index": 14501
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Releases capturing of the container</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getLocation": {
      "location": {
        "start": {
          "line": 556,
          "column": 4,
          "index": 14910
        },
        "end": {
          "line": 558,
          "column": 5,
          "index": 14995
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the location of the container</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the keys <code>top</code>, <code>right</code>,\n    <code>bottom</code> and <code>left</code>.",
            "type": "Map",
            "description": " Map with the keys <code>top</code>, <code>right</code>,\n    <code>bottom</code> and <code>left</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getDimension": {
      "location": {
        "start": {
          "line": 565,
          "column": 4,
          "index": 15183
        },
        "end": {
          "line": 567,
          "column": 5,
          "index": 15270
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the dimension of the container (available scrolling space).</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the keys <code>width</code> and <code>height</code>.",
            "type": "Map",
            "description": " Map with the keys <code>width</code> and <code>height</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getSelectableLocationX": {
      "location": {
        "start": {
          "line": 575,
          "column": 4,
          "index": 15503
        },
        "end": {
          "line": 577,
          "column": 5,
          "index": 15614
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the relative (to the container) horizontal location of the given item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map with the keys <code>left</code> and <code>right</code>.",
            "type": "Map",
            "description": " A map with the keys <code>left</code> and <code>right</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getSelectableLocationY": {
      "location": {
        "start": {
          "line": 585,
          "column": 4,
          "index": 15847
        },
        "end": {
          "line": 587,
          "column": 5,
          "index": 15958
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the relative (to the container) horizontal location of the given item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map with the keys <code>top</code> and <code>bottom</code>.",
            "type": "Map",
            "description": " A map with the keys <code>top</code> and <code>bottom</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getScroll": {
      "location": {
        "start": {
          "line": 600,
          "column": 4,
          "index": 16316
        },
        "end": {
          "line": 602,
          "column": 5,
          "index": 16397
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the scroll position of the container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the keys <code>left</code> and <code>top</code>.",
            "type": "Map",
            "description": " Map with the keys <code>left</code> and <code>top</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_scrollBy": {
      "location": {
        "start": {
          "line": 610,
          "column": 4,
          "index": 16580
        },
        "end": {
          "line": 612,
          "column": 5,
          "index": 16669
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls by the given offset</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xoff {Integer} Horizontal offset to scroll by",
            "paramName": "xoff",
            "description": " Horizontal offset to scroll by",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "yoff {Integer} Vertical offset to scroll by",
            "paramName": "yoff",
            "description": " Vertical offset to scroll by",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_scrollItemIntoView": {
      "location": {
        "start": {
          "line": 619,
          "column": 4,
          "index": 16795
        },
        "end": {
          "line": 621,
          "column": 5,
          "index": 16898
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the given item into the view (make it visible)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getSelectables": {
      "location": {
        "start": {
          "line": 636,
          "column": 4,
          "index": 17339
        },
        "end": {
          "line": 638,
          "column": 5,
          "index": 17431
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns all selectable items of the container.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "all {Boolean} true for all selectables, false for the\n   selectables the user can interactively select",
            "paramName": "all",
            "description": " true for all selectables, false for the\n   selectables the user can interactively select",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} A list of items",
            "type": "Array",
            "description": " A list of items"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_getSelectableRange": {
      "location": {
        "start": {
          "line": 649,
          "column": 4,
          "index": 17691
        },
        "end": {
          "line": 651,
          "column": 5,
          "index": 17802
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns all selectable items between the two given items.\n The items could be given in any order.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item1 {var} First item",
            "paramName": "item1",
            "description": " First item",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "item2 {var} Second item",
            "paramName": "item2",
            "description": " Second item",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} List of items",
            "type": "Array",
            "description": " List of items"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getFirstSelectable": {
      "location": {
        "start": {
          "line": 658,
          "column": 4,
          "index": 17921
        },
        "end": {
          "line": 660,
          "column": 5,
          "index": 18020
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the first selectable item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The first selectable item",
            "type": "var",
            "description": " The first selectable item"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getLastSelectable": {
      "location": {
        "start": {
          "line": 667,
          "column": 4,
          "index": 18137
        },
        "end": {
          "line": 669,
          "column": 5,
          "index": 18234
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the last selectable item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The last selectable item",
            "type": "var",
            "description": " The last selectable item"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getFirstVisibleSelectable": {
      "location": {
        "start": {
          "line": 676,
          "column": 4,
          "index": 18377
        },
        "end": {
          "line": 678,
          "column": 5,
          "index": 18490
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the first visible and selectable item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The first visible and selectable item",
            "type": "var",
            "description": " The first visible and selectable item"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getLastVisibleSelectable": {
      "location": {
        "start": {
          "line": 685,
          "column": 4,
          "index": 18631
        },
        "end": {
          "line": 687,
          "column": 5,
          "index": 18742
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the last visible and selectable item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The last visible and selectable item",
            "type": "var",
            "description": " The last visible and selectable item"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getRelatedSelectable": {
      "location": {
        "start": {
          "line": 698,
          "column": 4,
          "index": 19116
        },
        "end": {
          "line": 700,
          "column": 5,
          "index": 19233
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a selectable item which is related to the given\n <code>item</code> through the value of <code>relation</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "relation {String} A valid relation: <code>above</code>,\n    <code>right</code>, <code>under</code> or <code>left</code>",
            "paramName": "relation",
            "description": " A valid relation: <code>above</code>,\n    <code>right</code>, <code>under</code> or <code>left</code>",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The related item",
            "type": "var",
            "description": " The related item"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getPage": {
      "location": {
        "start": {
          "line": 711,
          "column": 4,
          "index": 19541
        },
        "end": {
          "line": 713,
          "column": 5,
          "index": 19626
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the item which should be selected on pageUp/pageDown.\n May also scroll to the needed position.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "lead {var} The current lead item",
            "paramName": "lead",
            "description": " The current lead item",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "up {Boolean?false} Which page key was pressed:\n   <code>up</code> or <code>down</code>.",
            "paramName": "up",
            "description": " Which page key was pressed:\n   <code>up</code> or <code>down</code>.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyMode": {
      "location": {
        "start": {
          "line": 722,
          "column": 4,
          "index": 19860
        },
        "end": {
          "line": 734,
          "column": 5,
          "index": 20140
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "mode"
      ]
    },
    "handlePointerOver": {
      "location": {
        "start": {
          "line": 748,
          "column": 4,
          "index": 20540
        },
        "end": {
          "line": 796,
          "column": 5,
          "index": 21976
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>pointerover</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} A valid pointer event",
            "paramName": "event",
            "description": " A valid pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handlePointerDown": {
      "location": {
        "start": {
          "line": 804,
          "column": 4,
          "index": 22179
        },
        "end": {
          "line": 868,
          "column": 5,
          "index": 24085
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>pointerdown</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} A valid pointer event",
            "paramName": "event",
            "description": " A valid pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleTap": {
      "location": {
        "start": {
          "line": 876,
          "column": 4,
          "index": 24276
        },
        "end": {
          "line": 953,
          "column": 5,
          "index": 26467
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>tap</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Tap} A valid pointer event",
            "paramName": "event",
            "description": " A valid pointer event",
            "type": "qx.event.type.Tap"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleLoseCapture": {
      "location": {
        "start": {
          "line": 961,
          "column": 4,
          "index": 26670
        },
        "end": {
          "line": 963,
          "column": 5,
          "index": 26725
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>losecapture</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} A valid pointer event",
            "paramName": "event",
            "description": " A valid pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handlePointerMove": {
      "location": {
        "start": {
          "line": 971,
          "column": 4,
          "index": 26928
        },
        "end": {
          "line": 1037,
          "column": 5,
          "index": 29020
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>pointermove</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} A valid pointer event",
            "paramName": "event",
            "description": " A valid pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleAddItem": {
      "location": {
        "start": {
          "line": 1045,
          "column": 4,
          "index": 29207
        },
        "end": {
          "line": 1050,
          "column": 5,
          "index": 29362
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>addItem</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} The event object",
            "paramName": "e",
            "description": " The event object",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleRemoveItem": {
      "location": {
        "start": {
          "line": 1058,
          "column": 4,
          "index": 29552
        },
        "end": {
          "line": 1060,
          "column": 5,
          "index": 29615
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>removeItem</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} The event object",
            "paramName": "e",
            "description": " The event object",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_cleanup": {
      "location": {
        "start": {
          "line": 1071,
          "column": 4,
          "index": 29917
        },
        "end": {
          "line": 1093,
          "column": 5,
          "index": 30390
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops all timers, release capture etc. to cleanup drag selection</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onInterval": {
      "location": {
        "start": {
          "line": 1100,
          "column": 4,
          "index": 30525
        },
        "end": {
          "line": 1109,
          "column": 5,
          "index": 30811
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for timer used by drag selection</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Timer event",
            "paramName": "e",
            "description": " Timer event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_autoSelect": {
      "location": {
        "start": {
          "line": 1114,
          "column": 4,
          "index": 30923
        },
        "end": {
          "line": 1220,
          "column": 5,
          "index": 34084
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Automatically selects items based on the pointer movement during a drag selection</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__navigationKeys": {
      "location": {
        "start": {
          "line": 1233,
          "column": 4,
          "index": 34413
        },
        "end": {
          "line": 1242,
          "column": 5,
          "index": 34561
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} All supported navigation keys"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__navigationKeys)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "handleKeyPress": {
      "location": {
        "start": {
          "line": 1250,
          "column": 4,
          "index": 34770
        },
        "end": {
          "line": 1450,
          "column": 5,
          "index": 40216
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be connected to the <code>keypress</code> event\n of the managed object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.KeySequence} A valid key sequence event",
            "paramName": "event",
            "description": " A valid key sequence event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_selectAllItems": {
      "location": {
        "start": {
          "line": 1461,
          "column": 4,
          "index": 40483
        },
        "end": {
          "line": 1466,
          "column": 5,
          "index": 40651
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds all items to the selection</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_clearSelection": {
      "location": {
        "start": {
          "line": 1471,
          "column": 4,
          "index": 40706
        },
        "end": {
          "line": 1477,
          "column": 5,
          "index": 40896
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears current selection</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_selectItemRange": {
      "location": {
        "start": {
          "line": 1487,
          "column": 4,
          "index": 41202
        },
        "end": {
          "line": 1506,
          "column": 5,
          "index": 41771
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Select a range from <code>item1</code> to <code>item2</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item1 {Object} Start with this item",
            "paramName": "item1",
            "description": " Start with this item",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "item2 {Object} End with this item",
            "paramName": "item2",
            "description": " End with this item",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "extend {Boolean?false} Whether the current\n    selection should be replaced or extended.",
            "paramName": "extend",
            "description": " Whether the current\n    selection should be replaced or extended.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_deselectItemRange": {
      "location": {
        "start": {
          "line": 1514,
          "column": 4,
          "index": 41976
        },
        "end": {
          "line": 1519,
          "column": 5,
          "index": 42181
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Deselect all items between <code>item1</code> and <code>item2</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item1 {Object} Start with this item",
            "paramName": "item1",
            "description": " Start with this item",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "item2 {Object} End with this item",
            "paramName": "item2",
            "description": " End with this item",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__rangeToMap": {
      "location": {
        "start": {
          "line": 1527,
          "column": 4,
          "index": 42389
        },
        "end": {
          "line": 1537,
          "column": 5,
          "index": 42622
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal method to convert a range to a map of hash\n codes for faster lookup during selection compare routines.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "range {Array} List of selectable items",
            "paramName": "range",
            "description": " List of selectable items",
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_getSelectedItem": {
      "location": {
        "start": {
          "line": 1551,
          "column": 4,
          "index": 43039
        },
        "end": {
          "line": 1557,
          "column": 5,
          "index": 43175
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the first selected item. Only makes sense\n when using manager in single selection mode.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The selected item (or <code>null</code>)",
            "type": "var",
            "description": " The selected item (or <code>null</code>)"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_setSelectedItem": {
      "location": {
        "start": {
          "line": 1564,
          "column": 4,
          "index": 43306
        },
        "end": {
          "line": 1575,
          "column": 5,
          "index": 43683
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replace current selection with given item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any valid selectable item",
            "paramName": "item",
            "description": " Any valid selectable item",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_addToSelection": {
      "location": {
        "start": {
          "line": 1588,
          "column": 4,
          "index": 43999
        },
        "end": {
          "line": 1597,
          "column": 5,
          "index": 44296
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds an item to the current selection.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {Object} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_toggleInSelection": {
      "location": {
        "start": {
          "line": 1605,
          "column": 4,
          "index": 44464
        },
        "end": {
          "line": 1617,
          "column": 5,
          "index": 44844
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Toggles the item e.g. remove it when already selected\n or select it when currently not.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {Object} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_removeFromSelection": {
      "location": {
        "start": {
          "line": 1624,
          "column": 4,
          "index": 44969
        },
        "end": {
          "line": 1633,
          "column": 5,
          "index": 45244
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given item from the current selection.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {Object} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_replaceMultiSelection": {
      "location": {
        "start": {
          "line": 1640,
          "column": 4,
          "index": 45389
        },
        "end": {
          "line": 1709,
          "column": 5,
          "index": 47276
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replaces current selection with items from given array.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "items {Array} List of items to select",
            "paramName": "items",
            "description": " List of items to select",
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_fireChange": {
      "location": {
        "start": {
          "line": 1718,
          "column": 4,
          "index": 47534
        },
        "end": {
          "line": 1727,
          "column": 5,
          "index": 47858
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires the selection change event if the selection has\n been modified.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "context {String} One of <code>tap</code>, <code>quick</code>,\n    <code>drag</code> or <code>key</code> or <code>null</code>",
            "paramName": "context",
            "description": " One of <code>tap</code>, <code>quick</code>,\n    <code>drag</code> or <code>key</code> or <code>null</code>",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyDefaultSelection": {
      "location": {
        "start": {
          "line": 1736,
          "column": 4,
          "index": 48087
        },
        "end": {
          "line": 1748,
          "column": 5,
          "index": 48403
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Applies the default selection. The default item is the first item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "force {Boolean} Whether the default selection should be forced.",
            "paramName": "force",
            "description": " Whether the default selection should be forced.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The selected item.",
            "type": "var",
            "description": " The selected item."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getMode": {
      "type": "function",
      "name": "getMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>mode</code>.\n\nFor further details take a look at the property definition: {@link #mode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for mode"
          }
        ]
      }
    },
    "setMode": {
      "type": "function",
      "name": "setMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>mode</code>.\n\nFor further details take a look at the property definition: {@link #mode}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for mode"
          }
        ]
      }
    },
    "resetMode": {
      "type": "function",
      "name": "resetMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>mode</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #mode}."
          }
        ]
      }
    },
    "getDrag": {
      "type": "function",
      "name": "getDrag",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>drag</code>.\n\nFor further details take a look at the property definition: {@link #drag}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for drag"
          }
        ]
      }
    },
    "isDrag": {
      "type": "function",
      "name": "isDrag",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>drag</code>.\n\nFor further details take a look at the property definition: {@link #drag}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for drag"
          }
        ]
      }
    },
    "setDrag": {
      "type": "function",
      "name": "setDrag",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>drag</code>.\n\nFor further details take a look at the property definition: {@link #drag}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for drag"
          }
        ]
      }
    },
    "resetDrag": {
      "type": "function",
      "name": "resetDrag",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>drag</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #drag}."
          }
        ]
      }
    },
    "getQuick": {
      "type": "function",
      "name": "getQuick",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>quick</code>.\n\nFor further details take a look at the property definition: {@link #quick}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for quick"
          }
        ]
      }
    },
    "isQuick": {
      "type": "function",
      "name": "isQuick",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>quick</code>.\n\nFor further details take a look at the property definition: {@link #quick}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for quick"
          }
        ]
      }
    },
    "setQuick": {
      "type": "function",
      "name": "setQuick",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>quick</code>.\n\nFor further details take a look at the property definition: {@link #quick}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for quick"
          }
        ]
      }
    },
    "resetQuick": {
      "type": "function",
      "name": "resetQuick",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>quick</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #quick}."
          }
        ]
      }
    },
    "getReadOnly": {
      "type": "function",
      "name": "getReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "isReadOnly": {
      "type": "function",
      "name": "isReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "setReadOnly": {
      "type": "function",
      "name": "setReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for readOnly"
          }
        ]
      }
    },
    "resetReadOnly": {
      "type": "function",
      "name": "resetReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>readOnly</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 1757,
        "column": 2,
        "index": 48599
      },
      "end": {
        "line": 1761,
        "column": 3,
        "index": 48766
      }
    },
    "jsdoc": {}
  },
  "descendants": [
    "qx.ui.core.selection.Widget",
    "qx.ui.virtual.selection.Abstract"
  ]
}