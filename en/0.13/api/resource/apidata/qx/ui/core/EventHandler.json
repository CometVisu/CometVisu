{
  "className": "qx.ui.core.EventHandler",
  "packageName": "qx.ui.core",
  "name": "EventHandler",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.event.IEventHandler"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 570
      },
      "end": {
        "line": 368,
        "column": 3,
        "index": 9525
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Connects the widgets to the browser DOM events.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 869
      },
      "end": {
        "line": 37,
        "column": 3,
        "index": 963
      }
    },
    "jsdoc": {}
  },
  "statics": {
    "PRIORITY": {
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1219
        },
        "end": {
          "line": 47,
          "column": 50,
          "index": 1265
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Priority of this handler"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SUPPORTED_TYPES": {
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1363
        },
        "end": {
          "line": 120,
          "column": 5,
          "index": 2577
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported event types. Identical to events map of qx.ui.core.Widget"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "IGNORE_CAN_HANDLE": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 2662
        },
        "end": {
          "line": 123,
          "column": 28,
          "index": 2686
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} Whether the method \"canHandleEvent\" must be called"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "members": {
    "__manager": {
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 2947
        },
        "end": {
          "line": 133,
          "column": 19,
          "index": 2962
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__focusEvents": {
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 3088
        },
        "end": {
          "line": 145,
          "column": 5,
          "index": 3177
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Supported focus event types"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__focusEvents)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__ignoreDisabled": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 3348
        },
        "end": {
          "line": 160,
          "column": 5,
          "index": 3494
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Map of events which should be fired independently from being disabled"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__ignoreDisabled)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "canHandleEvent": {
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 3533
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 3619
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "_dispatchEvent": {
      "location": {
        "start": {
          "line": 172,
          "column": 4,
          "index": 3767
        },
        "end": {
          "line": 316,
          "column": 5,
          "index": 8321
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Dispatches a DOM event on a widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {qx.event.type.Event} The event object to dispatch.",
            "paramName": "domEvent",
            "description": " The event object to dispatch.",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "registerEvent": {
      "location": {
        "start": {
          "line": 319,
          "column": 4,
          "index": 8360
        },
        "end": {
          "line": 331,
          "column": 5,
          "index": 8672
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "unregisterEvent": {
      "location": {
        "start": {
          "line": 334,
          "column": 4,
          "index": 8711
        },
        "end": {
          "line": 346,
          "column": 5,
          "index": 9028
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.IEventHandler",
      "appearsIn": [
        "qx.event.IEventHandler"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 355,
        "column": 2,
        "index": 9224
      },
      "end": {
        "line": 357,
        "column": 3,
        "index": 9267
      }
    },
    "jsdoc": {}
  },
  "defer": {
    "location": {
      "start": {
        "line": 365,
        "column": 2,
        "index": 9454
      },
      "end": {
        "line": 367,
        "column": 3,
        "index": 9521
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}