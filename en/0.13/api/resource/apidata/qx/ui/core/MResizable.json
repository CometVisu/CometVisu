{
  "className": "qx.ui.core.MResizable",
  "packageName": "qx.ui.core",
  "name": "MResizable",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 702
      },
      "end": {
        "line": 600,
        "column": 3,
        "index": 16617
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Provides resizing behavior to any widget.</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 942
      },
      "end": {
        "line": 51,
        "column": 3,
        "index": 1720
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "resizableTop": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1985
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 2050
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the top edge is resizable</p>"
          }
        ]
      },
      "name": "resizableTop",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "resizableRight": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 2107
        },
        "end": {
          "line": 70,
          "column": 5,
          "index": 2174
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the right edge is resizable</p>"
          }
        ]
      },
      "name": "resizableRight",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "resizableBottom": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 2232
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 2300
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the bottom edge is resizable</p>"
          }
        ]
      },
      "name": "resizableBottom",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "resizableLeft": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2356
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2422
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the left edge is resizable</p>"
          }
        ]
      },
      "name": "resizableLeft",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "resizable": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2528
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 2705
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Property group to configure the resize behaviour for all edges at once</p>"
          }
        ]
      },
      "name": "resizable",
      "propertyType": "new",
      "group": [
        "resizableTop",
        "resizableRight",
        "resizableBottom",
        "resizableLeft"
      ]
    },
    "resizeSensitivity": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2761
        },
        "end": {
          "line": 102,
          "column": 5,
          "index": 2828
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The tolerance to activate resizing</p>"
          }
        ]
      },
      "name": "resizeSensitivity",
      "propertyType": "new",
      "init": 5,
      "check": "Integer",
      "defaultValue": 5
    },
    "useResizeFrame": {
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2919
        },
        "end": {
          "line": 108,
          "column": 5,
          "index": 2986
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether a frame replacement should be used during the resize sequence</p>"
          }
        ]
      },
      "name": "useResizeFrame",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    }
  },
  "members": {
    "__dragDropHandler": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3257
        },
        "end": {
          "line": 118,
          "column": 27,
          "index": 3280
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__resizeFrame": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3287
        },
        "end": {
          "line": 119,
          "column": 23,
          "index": 3306
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__resizeActive": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3313
        },
        "end": {
          "line": 120,
          "column": 24,
          "index": 3333
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__resizeLeft": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3340
        },
        "end": {
          "line": 121,
          "column": 22,
          "index": 3358
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__resizeTop": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3365
        },
        "end": {
          "line": 122,
          "column": 21,
          "index": 3382
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__resizeStart": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3389
        },
        "end": {
          "line": 123,
          "column": 23,
          "index": 3408
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__resizeRange": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3415
        },
        "end": {
          "line": 124,
          "column": 23,
          "index": 3434
        }
      },
      "type": "variable",
      "access": "private"
    },
    "RESIZE_TOP": {
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3443
        },
        "end": {
          "line": 126,
          "column": 17,
          "index": 3456
        }
      },
      "type": "variable",
      "access": "public"
    },
    "RESIZE_BOTTOM": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3463
        },
        "end": {
          "line": 127,
          "column": 20,
          "index": 3479
        }
      },
      "type": "variable",
      "access": "public"
    },
    "RESIZE_LEFT": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3486
        },
        "end": {
          "line": 128,
          "column": 18,
          "index": 3500
        }
      },
      "type": "variable",
      "access": "public"
    },
    "RESIZE_RIGHT": {
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3507
        },
        "end": {
          "line": 129,
          "column": 19,
          "index": 3522
        }
      },
      "type": "variable",
      "access": "public"
    },
    "_getResizeFrame": {
      "location": {
        "start": {
          "line": 143,
          "column": 4,
          "index": 3953
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 4269
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the widget, which draws the resize/move frame. The resize frame is\n shared by all widgets and is added to the root widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The resize frame",
            "type": "qx.ui.core.Widget",
            "description": " The resize frame"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__showResizeFrame": {
      "location": {
        "start": {
          "line": 159,
          "column": 4,
          "index": 4356
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4711
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates, shows and syncs the frame with the widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__computeResizeResult": {
      "location": {
        "start": {
          "line": 186,
          "column": 4,
          "index": 5150
        },
        "end": {
          "line": 258,
          "column": 5,
          "index": 7145
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the new boundaries at each interval\n of the resize sequence.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Last pointer event",
            "paramName": "e",
            "description": " Last pointer event",
            "type": "qx.event.type.Pointer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map with the computed boundaries",
            "type": "Map",
            "description": " A map with the computed boundaries"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__resizeCursors": {
      "location": {
        "start": {
          "line": 265,
          "column": 4,
          "index": 7298
        },
        "end": {
          "line": 275,
          "column": 5,
          "index": 7505
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Maps internal states to cursor symbols to use"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__resizeCursors)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__computeResizeMode": {
      "location": {
        "start": {
          "line": 282,
          "column": 4,
          "index": 7650
        },
        "end": {
          "line": 310,
          "column": 5,
          "index": 8429
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the internally stored resize mode</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Last pointer event",
            "paramName": "e",
            "description": " Last pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__computeResizeActive": {
      "location": {
        "start": {
          "line": 322,
          "column": 4,
          "index": 8900
        },
        "end": {
          "line": 363,
          "column": 5,
          "index": 10294
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for computing the proper resize action based on the\n given parameters.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "location {Map} The current location of the widget.",
            "paramName": "location",
            "description": " The current location of the widget.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "pointerLeft {Integer} The left position of the pointer.",
            "paramName": "pointerLeft",
            "description": " The left position of the pointer.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "pointerTop {Integer} The top position of the pointer.",
            "paramName": "pointerTop",
            "description": " The top position of the pointer.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "pointerTolerance {Integer} The desired distance to the edge.",
            "paramName": "pointerTolerance",
            "description": " The desired distance to the edge.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The resize active number.",
            "type": "Integer",
            "description": " The resize active number."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onResizePointerDown": {
      "location": {
        "start": {
          "line": 376,
          "column": 4,
          "index": 10655
        },
        "end": {
          "line": 427,
          "column": 5,
          "index": 12044
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer down event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The pointer event instance",
            "paramName": "e",
            "description": " The pointer event instance",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onResizePointerUp": {
      "location": {
        "start": {
          "line": 434,
          "column": 4,
          "index": 12194
        },
        "end": {
          "line": 478,
          "column": 5,
          "index": 13270
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer up event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The pointer event instance",
            "paramName": "e",
            "description": " The pointer event instance",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onResizeLoseCapture": {
      "location": {
        "start": {
          "line": 485,
          "column": 4,
          "index": 13422
        },
        "end": {
          "line": 502,
          "column": 5,
          "index": 13844
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for <code>losecapture</code> event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Lose capture event",
            "paramName": "e",
            "description": " Lose capture event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onResizePointerMove": {
      "location": {
        "start": {
          "line": 509,
          "column": 4,
          "index": 13996
        },
        "end": {
          "line": 561,
          "column": 5,
          "index": 15548
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer move event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The pointer event instance",
            "paramName": "e",
            "description": " The pointer event instance",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onResizePointerOut": {
      "location": {
        "start": {
          "line": 568,
          "column": 4,
          "index": 15699
        },
        "end": {
          "line": 579,
          "column": 5,
          "index": 16105
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer out event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The pointer event instance",
            "paramName": "e",
            "description": " The pointer event instance",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getResizableTop": {
      "type": "function",
      "name": "getResizableTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableTop</code>.\n\nFor further details take a look at the property definition: {@link #resizableTop}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableTop"
          }
        ]
      }
    },
    "isResizableTop": {
      "type": "function",
      "name": "isResizableTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableTop</code>.\n\nFor further details take a look at the property definition: {@link #resizableTop}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableTop"
          }
        ]
      }
    },
    "setResizableTop": {
      "type": "function",
      "name": "setResizableTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resizableTop</code>.\n\nFor further details take a look at the property definition: {@link #resizableTop}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for resizableTop"
          }
        ]
      }
    },
    "resetResizableTop": {
      "type": "function",
      "name": "resetResizableTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resizableTop</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resizableTop}."
          }
        ]
      }
    },
    "getResizableRight": {
      "type": "function",
      "name": "getResizableRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableRight</code>.\n\nFor further details take a look at the property definition: {@link #resizableRight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableRight"
          }
        ]
      }
    },
    "isResizableRight": {
      "type": "function",
      "name": "isResizableRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableRight</code>.\n\nFor further details take a look at the property definition: {@link #resizableRight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableRight"
          }
        ]
      }
    },
    "setResizableRight": {
      "type": "function",
      "name": "setResizableRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resizableRight</code>.\n\nFor further details take a look at the property definition: {@link #resizableRight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for resizableRight"
          }
        ]
      }
    },
    "resetResizableRight": {
      "type": "function",
      "name": "resetResizableRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resizableRight</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resizableRight}."
          }
        ]
      }
    },
    "getResizableBottom": {
      "type": "function",
      "name": "getResizableBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableBottom</code>.\n\nFor further details take a look at the property definition: {@link #resizableBottom}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableBottom"
          }
        ]
      }
    },
    "isResizableBottom": {
      "type": "function",
      "name": "isResizableBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableBottom</code>.\n\nFor further details take a look at the property definition: {@link #resizableBottom}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableBottom"
          }
        ]
      }
    },
    "setResizableBottom": {
      "type": "function",
      "name": "setResizableBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resizableBottom</code>.\n\nFor further details take a look at the property definition: {@link #resizableBottom}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for resizableBottom"
          }
        ]
      }
    },
    "resetResizableBottom": {
      "type": "function",
      "name": "resetResizableBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resizableBottom</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resizableBottom}."
          }
        ]
      }
    },
    "getResizableLeft": {
      "type": "function",
      "name": "getResizableLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableLeft</code>.\n\nFor further details take a look at the property definition: {@link #resizableLeft}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableLeft"
          }
        ]
      }
    },
    "isResizableLeft": {
      "type": "function",
      "name": "isResizableLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizableLeft</code>.\n\nFor further details take a look at the property definition: {@link #resizableLeft}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resizableLeft"
          }
        ]
      }
    },
    "setResizableLeft": {
      "type": "function",
      "name": "setResizableLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resizableLeft</code>.\n\nFor further details take a look at the property definition: {@link #resizableLeft}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for resizableLeft"
          }
        ]
      }
    },
    "resetResizableLeft": {
      "type": "function",
      "name": "resetResizableLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resizableLeft</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resizableLeft}."
          }
        ]
      }
    },
    "setResizable": {
      "type": "function",
      "name": "setResizable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resizable</code>.\n\nFor further details take a look at the property definition: {@link #resizable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for resizable"
          }
        ]
      }
    },
    "resetResizable": {
      "type": "function",
      "name": "resetResizable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resizable</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resizable}."
          }
        ]
      }
    },
    "getResizeSensitivity": {
      "type": "function",
      "name": "getResizeSensitivity",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizeSensitivity</code>.\n\nFor further details take a look at the property definition: {@link #resizeSensitivity}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for resizeSensitivity"
          }
        ]
      }
    },
    "setResizeSensitivity": {
      "type": "function",
      "name": "setResizeSensitivity",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resizeSensitivity</code>.\n\nFor further details take a look at the property definition: {@link #resizeSensitivity}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for resizeSensitivity"
          }
        ]
      }
    },
    "resetResizeSensitivity": {
      "type": "function",
      "name": "resetResizeSensitivity",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resizeSensitivity</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resizeSensitivity}."
          }
        ]
      }
    },
    "getUseResizeFrame": {
      "type": "function",
      "name": "getUseResizeFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>useResizeFrame</code>.\n\nFor further details take a look at the property definition: {@link #useResizeFrame}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for useResizeFrame"
          }
        ]
      }
    },
    "isUseResizeFrame": {
      "type": "function",
      "name": "isUseResizeFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>useResizeFrame</code>.\n\nFor further details take a look at the property definition: {@link #useResizeFrame}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for useResizeFrame"
          }
        ]
      }
    },
    "setUseResizeFrame": {
      "type": "function",
      "name": "setUseResizeFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>useResizeFrame</code>.\n\nFor further details take a look at the property definition: {@link #useResizeFrame}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for useResizeFrame"
          }
        ]
      }
    },
    "resetUseResizeFrame": {
      "type": "function",
      "name": "resetUseResizeFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>useResizeFrame</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #useResizeFrame}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 588,
        "column": 2,
        "index": 16310
      },
      "end": {
        "line": 599,
        "column": 3,
        "index": 16612
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}