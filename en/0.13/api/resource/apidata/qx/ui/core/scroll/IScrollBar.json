{
  "version": 0.3,
  "lastModified": 1731947916243,
  "lastModifiedIso": "2024-11-18T16:38:36.243Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/core/scroll/IScrollBar.js",
  "type": "interface",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 549
    },
    "end": {
      "line": 99,
      "column": 3,
      "index": 2673
    }
  },
  "className": "qx.ui.core.scroll.IScrollBar",
  "jsdoc": {
    "raw": [
      "*",
      " * All widget used as scrollbars must implement this interface.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>All widget used as scrollbars must implement this interface.</p>"
      }
    ]
  },
  "events": {
    "scroll": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "* Fired if the user scroll "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired if the user scroll</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 25,
          "column": 4,
          "index": 655
        },
        "end": {
          "line": 25,
          "column": 32,
          "index": 683
        }
      }
    },
    "scrollAnimationEnd": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired as soon as the scroll animation ended. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired as soon as the scroll animation ended.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 27,
          "column": 4,
          "index": 745
        },
        "end": {
          "line": 27,
          "column": 45,
          "index": 786
        }
      }
    }
  },
  "properties": {
    "orientation": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 863
        },
        "end": {
          "line": 34,
          "column": 19,
          "index": 878
        }
      },
      "json": {},
      "jsdoc": {
        "raw": [
          "*",
          "     * The scroll bar orientation",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The scroll bar orientation</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "maximum": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 987
        },
        "end": {
          "line": 40,
          "column": 15,
          "index": 998
        }
      },
      "json": {},
      "jsdoc": {
        "raw": [
          "*",
          "     * The maximum value (difference between available size and",
          "     * content size).",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The maximum value (difference between available size and\n content size).</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "position": {
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1315
        },
        "end": {
          "line": 50,
          "column": 16,
          "index": 1327
        }
      },
      "json": {},
      "jsdoc": {
        "raw": [
          "*",
          "     * Position of the scrollbar (which means the scroll left/top of the",
          "     * attached area's pane)",
          "     *",
          "     * Strictly validates according to {@link #maximum}.",
          "     * Does not apply any correction to the incoming value. If you depend",
          "     * on this, please use {@link #scrollTo} instead.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Position of the scrollbar (which means the scroll left/top of the\n attached area's pane)\n Strictly validates according to {@link #maximum}.\n Does not apply any correction to the incoming value. If you depend\n on this, please use {@link #scrollTo} instead.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "knobFactor": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1465
        },
        "end": {
          "line": 56,
          "column": 18,
          "index": 1479
        }
      },
      "json": {},
      "jsdoc": {
        "raw": [
          "*",
          "     * Factor to apply to the width/height of the knob in relation",
          "     * to the dimension of the underlying area.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Factor to apply to the width/height of the knob in relation\n to the dimension of the underlying area.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "scrollTo": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls to the given position.",
          "     *",
          "     * This method automatically corrects the given position to respect",
          "     * the {@link #maximum}.",
          "     *",
          "     * @param position {Integer} Scroll to this position. Must be greater zero.",
          "     * @param duration {Number} The time in milliseconds the slide to should take.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls to the given position.\n This method automatically corrects the given position to respect\n the {@link #maximum}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} Scroll to this position. Must be greater zero.",
            "paramName": "position",
            "description": " Scroll to this position. Must be greater zero.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number} The time in milliseconds the slide to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the slide to should take.",
            "type": "number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 1835
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 1906
        }
      },
      "type": "function",
      "params": [
        {
          "name": "position",
          "type": "Integer"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "appearsIn": []
    },
    "scrollBy": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls by the given offset.",
          "     *",
          "     * This method automatically corrects the given position to respect",
          "     * the {@link #maximum}.",
          "     *",
          "     * @param offset {Integer} Scroll by this offset",
          "     * @param duration {Number} The time in milliseconds the slide to should take.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls by the given offset.\n This method automatically corrects the given position to respect\n the {@link #maximum}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "offset {Integer} Scroll by this offset",
            "paramName": "offset",
            "description": " Scroll by this offset",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number} The time in milliseconds the slide to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the slide to should take.",
            "type": "number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2216
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2283
        }
      },
      "type": "function",
      "params": [
        {
          "name": "offset",
          "type": "Integer"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "appearsIn": []
    },
    "scrollBySteps": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls by the given number of steps.",
          "     *",
          "     * This method automatically corrects the given position to respect",
          "     * the {@link #maximum}.",
          "     *",
          "     * @param steps {Integer} Number of steps",
          "     * @param duration {Number} The time in milliseconds the slide to should take.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls by the given number of steps.\n This method automatically corrects the given position to respect\n the {@link #maximum}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "steps {Integer} Number of steps",
            "paramName": "steps",
            "description": " Number of steps",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number} The time in milliseconds the slide to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the slide to should take.",
            "type": "number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2595
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2665
        }
      },
      "type": "function",
      "params": [
        {
          "name": "steps",
          "type": "Integer"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "appearsIn": []
    }
  },
  "statics": {}
}