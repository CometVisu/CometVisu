{
  "version": 0.3,
  "lastModified": 1726088853097,
  "lastModifiedIso": "2024-09-11T21:07:33.097Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/core/Spacer.js",
  "type": "class",
  "location": {
    "start": {
      "line": 47,
      "column": 0,
      "index": 1459
    },
    "end": {
      "line": 114,
      "column": 3,
      "index": 3117
    }
  },
  "className": "qx.ui.core.Spacer",
  "jsdoc": {
    "raw": [
      "*",
      " * A Spacer is a \"virtual\" widget, which can be placed into any layout and takes",
      " * the space a normal widget of the same size would take.",
      " *",
      " * Spacers are invisible and very light weight because they don't require any",
      " * DOM modifications.",
      " *",
      " * *Example*",
      " *",
      " * Here is a little example of how to use the widget.",
      " *",
      " * <pre class='javascript'>",
      " *   var container = new qx.ui.container.Composite(new qx.ui.layout.HBox());",
      " *   container.add(new qx.ui.core.Widget());",
      " *   container.add(new qx.ui.core.Spacer(50));",
      " *   container.add(new qx.ui.core.Widget());",
      " * </pre>",
      " *",
      " * This example places two widgets and a spacer into a container with a",
      " * horizontal box layout. In this scenario the spacer creates an empty area of",
      " * 50 pixel width between the two widgets.",
      " *",
      " * *External Documentation*",
      " *",
      " * <a href='http://qooxdoo.org/docs/#desktop/widget/spacer.md' target='_blank'>",
      " * Documentation of this widget in the qooxdoo manual.</a>",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A Spacer is a \"virtual\" widget, which can be placed into any layout and takes\n the space a normal widget of the same size would take.\n Spacers are invisible and very light weight because they don't require any\n DOM modifications.\n<em>Example</em>\n Here is a little example of how to use the widget.\n </p>\n<pre class='javascript'>\n   var container = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n   container.add(new qx.ui.core.Widget());\n   container.add(new qx.ui.core.Spacer(50));\n   container.add(new qx.ui.core.Widget());\n </pre>\n<p>This example places two widgets and a spacer into a container with a\n horizontal box layout. In this scenario the spacer creates an empty area of\n 50 pixel width between the two widgets.\n<em>External Documentation</em>\n <a href='http://qooxdoo.org/docs/#desktop/widget/spacer.md' target='_blank'>\n Documentation of this widget in the qooxdoo manual.</a></p>"
      }
    ]
  },
  "superClass": "qx.ui.core.LayoutItem",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "width"
      },
      {
        "name": "height"
      }
    ],
    "location": {
      "start": {
        "line": 60,
        "column": 2,
        "index": 1838
      },
      "end": {
        "line": 66,
        "column": 3,
        "index": 2006
      }
    }
  },
  "members": {
    "checkAppearanceNeeds": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper method called from the visibility queue to detect outstanding changes",
          "     * to the appearance.",
          "     *",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method called from the visibility queue to detect outstanding changes\n to the appearance.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2360
        },
        "end": {
          "line": 83,
          "column": 5,
          "index": 2449
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "addChildrenToQueue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Recursively adds all children to the given queue",
          "     *",
          "     * @param queue {Map} The queue to add widgets to",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Recursively adds all children to the given queue</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "queue {Map} The queue to add widgets to",
            "paramName": "queue",
            "description": " The queue to add widgets to",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2589
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2681
        }
      },
      "type": "function",
      "params": [
        {
          "name": "queue",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": []
    },
    "destroy": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes this widget from its parent and dispose it.",
          "     *",
          "     * Please note that the widget is not disposed synchronously. The",
          "     * real dispose happens after the next queue flush.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes this widget from its parent and dispose it.\n Please note that the widget is not disposed synchronously. The\n real dispose happens after the next queue flush.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2903
        },
        "end": {
          "line": 112,
          "column": 5,
          "index": 3109
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}