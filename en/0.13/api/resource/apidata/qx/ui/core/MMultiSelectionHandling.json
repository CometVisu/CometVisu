{
  "version": 0.3,
  "lastModified": 1717235171786,
  "lastModifiedIso": "2024-06-01T09:46:11.786Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/core/MMultiSelectionHandling.js",
  "type": "mixin",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 647
    },
    "end": {
      "line": 436,
      "column": 3,
      "index": 12363
    }
  },
  "className": "qx.ui.core.MMultiSelectionHandling",
  "jsdoc": {
    "raw": [
      "*",
      " * This mixin links all methods to manage the multi selection from the",
      " * internal selection manager to the widget.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This mixin links all methods to manage the multi selection from the\n internal selection manager to the widget.</p>"
      }
    ]
  },
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 31,
        "column": 2,
        "index": 893
      },
      "end": {
        "line": 49,
        "column": 3,
        "index": 1729
      }
    }
  },
  "events": {
    "changeValue": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "* Fires after the value was modified "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after the value was modified</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1977
        },
        "end": {
          "line": 59,
          "column": 37,
          "index": 2010
        }
      }
    },
    "changeSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "* Fires after the selection was modified "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after the selection was modified</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 2067
        },
        "end": {
          "line": 62,
          "column": 41,
          "index": 2104
        }
      }
    }
  },
  "properties": {
    "selectionMode": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2475
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2607
        }
      },
      "json": {
        "check": [
          "single",
          "multi",
          "additive",
          "one"
        ],
        "init": "single",
        "apply": "_applySelectionMode"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The selection mode to use.",
          "     *",
          "     * For further details please have a look at:",
          "     * {@link qx.ui.core.selection.Abstract#mode}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The selection mode to use.\n For further details please have a look at:\n {@link qx.ui.core.selection.Abstract#mode}</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "dragSelection": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2838
        },
        "end": {
          "line": 94,
          "column": 5,
          "index": 2938
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyDragSelection"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Enable drag selection (multi selection of items through",
          "     * dragging the pointer in pressed states).",
          "     *",
          "     * Only possible for the selection modes <code>multi</code> and <code>additive</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable drag selection (multi selection of items through\n dragging the pointer in pressed states).\n Only possible for the selection modes <code>multi</code> and <code>additive</code></p>"
          }
        ]
      },
      "appearsIn": []
    },
    "quickSelection": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 3129
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 3231
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyQuickSelection"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Enable quick selection mode, where no tap is needed to change the selection.",
          "     *",
          "     * Only possible for the modes <code>single</code> and <code>one</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable quick selection mode, where no tap is needed to change the selection.\n Only possible for the modes <code>single</code> and <code>one</code>.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__manager": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.core.selection.Abstract} The selection manager "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.core.selection.Abstract} The selection manager"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3510
        },
        "end": {
          "line": 116,
          "column": 19,
          "index": 3525
        }
      },
      "appearsIn": []
    },
    "__inOnSelectionChange": {
      "jsdoc": {
        "raw": [
          "* @type {Boolean} used to control recursion in onSelectionChange "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} used to control recursion in onSelectionChange"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3606
        },
        "end": {
          "line": 119,
          "column": 32,
          "index": 3634
        }
      },
      "appearsIn": []
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * setValue implements part of the {@link qx.ui.form.IField} interface.",
          "     *",
          "     * @param items {null|qx.ui.core.Widget[]} Items to select.",
          "     * @returns {null|TypeError} The status of this operation.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>setValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "items {null|qx.ui.core.Widget[]} Items to select.",
            "paramName": "items",
            "description": " Items to select.",
            "type": [
              "null",
              {
                "type": "qx.ui.core.Widget",
                "dimensions": 2
              }
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|TypeError} The status of this operation.",
            "type": "null|TypeError",
            "description": "The status of this operation."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 4057
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4599
        }
      },
      "type": "function",
      "params": [
        {
          "name": "items",
          "type": [
            "null",
            {
              "type": "qx.ui.core.Widget",
              "dimensions": 2
            }
          ]
        }
      ],
      "returnType": {
        "type": "null|TypeError"
      },
      "appearsIn": []
    },
    "getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * getValue implements part of the {@link qx.ui.form.IField} interface.",
          "     *",
          "     * @returns {qx.ui.core.Widget[]} The selected widgets or null if there are none.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>getValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget[]} The selected widgets or null if there are none.",
            "type": "qx.ui.core.Widget[]",
            "description": "The selected widgets or null if there are none."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 162,
          "column": 4,
          "index": 4791
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 4853
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget[]"
      },
      "appearsIn": []
    },
    "resetValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * resetValue implements part of the {@link qx.ui.form.IField} interface.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>resetValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4954
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 5013
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "selectAll": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Selects all items of the managed object.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects all items of the managed object.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 5084
        },
        "end": {
          "line": 178,
          "column": 5,
          "index": 5137
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "isSelected": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detects whether the given item is currently selected.",
          "     *",
          "     * @param item {qx.ui.core.Widget} Any valid selectable item.",
          "     * @return {Boolean} Whether the item is selected.",
          "     * @throws {Error} if the item is not a child element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the given item is currently selected.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Any valid selectable item.",
            "paramName": "item",
            "description": " Any valid selectable item.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the item is selected.",
            "type": "boolean",
            "description": "Whether the item is selected."
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the item is not a child element.",
            "type": "Error",
            "description": " if the item is not a child element."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 5408
        },
        "end": {
          "line": 197,
          "column": 5,
          "index": 5695
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "addToSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds the given item to the existing selection.",
          "     *",
          "     * Use {@link #setSelection} instead if you want to replace",
          "     * the current selection.",
          "     *",
          "     * @param item {qx.ui.core.Widget} Any valid item.",
          "     * @throws {Error} if the item is not a child element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the given item to the existing selection.\n Use {@link #setSelection} instead if you want to replace\n the current selection.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Any valid item.",
            "paramName": "item",
            "description": " Any valid item.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the item is not a child element.",
            "type": "Error",
            "description": " if the item is not a child element."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 208,
          "column": 4,
          "index": 5994
        },
        "end": {
          "line": 218,
          "column": 5,
          "index": 6270
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        }
      ],
      "appearsIn": []
    },
    "removeFromSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the given item from the selection.",
          "     *",
          "     * Use {@link #resetSelection} when you want to clear",
          "     * the whole selection at once.",
          "     *",
          "     * @param item {qx.ui.core.Widget} Any valid item",
          "     * @throws {Error} if the item is not a child element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given item from the selection.\n Use {@link #resetSelection} when you want to clear\n the whole selection at once.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Any valid item",
            "paramName": "item",
            "description": " Any valid item",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the item is not a child element.",
            "type": "Error",
            "description": " if the item is not a child element."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 229,
          "column": 4,
          "index": 6564
        },
        "end": {
          "line": 239,
          "column": 5,
          "index": 6851
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        }
      ],
      "appearsIn": []
    },
    "selectRange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Selects an item range between two given items.",
          "     *",
          "     * @param begin {qx.ui.core.Widget} Item to start with",
          "     * @param end {qx.ui.core.Widget} Item to end at",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects an item range between two given items.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "begin {qx.ui.core.Widget} Item to start with",
            "paramName": "begin",
            "description": " Item to start with",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "end {qx.ui.core.Widget} Item to end at",
            "paramName": "end",
            "description": " Item to end at",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 7047
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 7128
        }
      },
      "type": "function",
      "params": [
        {
          "name": "begin",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "end",
          "type": "qx.ui.core.Widget"
        }
      ],
      "appearsIn": []
    },
    "resetSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Clears the whole selection at once. Also",
          "     * resets the lead and anchor items and their",
          "     * styles.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears the whole selection at once. Also\n resets the lead and anchor items and their\n styles.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 256,
          "column": 4,
          "index": 7264
        },
        "end": {
          "line": 258,
          "column": 5,
          "index": 7327
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "setSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Replaces current selection with the given items.",
          "     *",
          "     * @param items {qx.ui.core.Widget[]} Items to select.",
          "     * @throws {Error} if one of the items is not a child element and if",
          "     *    the mode is set to <code>single</code> or <code>one</code> and",
          "     *    the items contains more than one item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replaces current selection with the given items.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "items {qx.ui.core.Widget[]} Items to select.",
            "paramName": "items",
            "description": " Items to select.",
            "type": "qx.ui.core.Widget[]"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if one of the items is not a child element and if\n    the mode is set to <code>single</code> or <code>one</code> and\n    the items contains more than one item.",
            "type": "Error",
            "description": " if one of the items is not a child element and if\n    the mode is set to <code>single</code> or <code>one</code> and\n    the items contains more than one item."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 268,
          "column": 4,
          "index": 7667
        },
        "end": {
          "line": 294,
          "column": 5,
          "index": 8581
        }
      },
      "type": "function",
      "params": [
        {
          "name": "items",
          "type": "qx.ui.core.Widget[]"
        }
      ],
      "appearsIn": []
    },
    "getSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an array of currently selected items.",
          "     *",
          "     * Note: The result is only a set of selected items, so the order can",
          "     * differ from the sequence in which the items were added.",
          "     *",
          "     * @return {qx.ui.core.Widget[]} List of items.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array of currently selected items.\n Note: The result is only a set of selected items, so the order can\n differ from the sequence in which the items were added.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget[]} List of items.",
            "type": "qx.ui.core.Widget[]",
            "description": "List of items."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 304,
          "column": 4,
          "index": 8860
        },
        "end": {
          "line": 306,
          "column": 5,
          "index": 8926
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget[]"
      },
      "appearsIn": []
    },
    "getSortedSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an array of currently selected items sorted",
          "     * by their index in the container.",
          "     *",
          "     * @return {qx.ui.core.Widget[]} Sorted list of items",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array of currently selected items sorted\n by their index in the container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget[]} Sorted list of items",
            "type": "qx.ui.core.Widget[]",
            "description": "Sorted list of items"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 314,
          "column": 4,
          "index": 9113
        },
        "end": {
          "line": 316,
          "column": 5,
          "index": 9191
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget[]"
      },
      "appearsIn": []
    },
    "isSelectionEmpty": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the selection is empty",
          "     *",
          "     * @return {Boolean} Whether the selection is empty",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the selection is empty</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the selection is empty",
            "type": "boolean",
            "description": "Whether the selection is empty"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 323,
          "column": 4,
          "index": 9315
        },
        "end": {
          "line": 325,
          "column": 5,
          "index": 9389
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getSelectionContext": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the last selection context.",
          "     *",
          "     * @return {String|null} One of <code>tap</code>, <code>quick</code>,",
          "     *    <code>drag</code> or <code>key</code> or <code>null</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the last selection context.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} One of <code>tap</code>, <code>quick</code>,\n    <code>drag</code> or <code>key</code> or <code>null</code>.",
            "type": "String|null",
            "description": "One of <code>tap</code>, <code>quick</code>,\n    <code>drag</code> or <code>key</code> or <code>null</code>."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 333,
          "column": 4,
          "index": 9606
        },
        "end": {
          "line": 335,
          "column": 5,
          "index": 9686
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "String|null"
      },
      "appearsIn": []
    },
    "_getManager": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the internal selection manager. Use this with",
          "     * caution!",
          "     *",
          "     * @return {qx.ui.core.selection.Abstract} The selection manager",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the internal selection manager. Use this with\n caution!</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.selection.Abstract} The selection manager",
            "type": "qx.ui.core.selection.Abstract",
            "description": "The selection manager"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 343,
          "column": 4,
          "index": 9862
        },
        "end": {
          "line": 345,
          "column": 5,
          "index": 9912
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.selection.Abstract"
      },
      "appearsIn": []
    },
    "getSelectables": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns all elements which are selectable.",
          "     *",
          "     * @param all {Boolean} true for all selectables, false for the",
          "     *   selectables the user can interactively select",
          "     * @return {qx.ui.core.Widget[]} The contained items.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns all elements which are selectable.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "all {Boolean} true for all selectables, false for the\n   selectables the user can interactively select",
            "paramName": "all",
            "description": " true for all selectables, false for the\n   selectables the user can interactively select",
            "type": "boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget[]} The contained items.",
            "type": "qx.ui.core.Widget[]",
            "description": "The contained items."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 354,
          "column": 4,
          "index": 10173
        },
        "end": {
          "line": 356,
          "column": 5,
          "index": 10249
        }
      },
      "type": "function",
      "params": [
        {
          "name": "all",
          "type": "boolean"
        }
      ],
      "returnType": {
        "type": "qx.ui.core.Widget[]"
      },
      "appearsIn": []
    },
    "invertSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Invert the selection. Select the non selected and deselect the selected.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Invert the selection. Select the non selected and deselect the selected.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 361,
          "column": 4,
          "index": 10352
        },
        "end": {
          "line": 363,
          "column": 5,
          "index": 10417
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getLeadItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the current lead item. Generally the item which was last modified",
          "     * by the user (tapped on etc.)",
          "     *",
          "     * @return {qx.ui.core.Widget} The lead item or <code>null</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current lead item. Generally the item which was last modified\n by the user (tapped on etc.)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The lead item or <code>null</code>",
            "type": "qx.ui.core.Widget",
            "description": "The lead item or <code>null</code>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 371,
          "column": 4,
          "index": 10634
        },
        "end": {
          "line": 379,
          "column": 5,
          "index": 10866
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "_applySelectionMode": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 388,
          "column": 4,
          "index": 11100
        },
        "end": {
          "line": 390,
          "column": 5,
          "index": 11176
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyDragSelection": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 393,
          "column": 4,
          "index": 11205
        },
        "end": {
          "line": 395,
          "column": 5,
          "index": 11281
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyQuickSelection": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 398,
          "column": 4,
          "index": 11310
        },
        "end": {
          "line": 400,
          "column": 5,
          "index": 11388
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_onSelectionChange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event listener for <code>changeSelection</code> event on selection manager.",
          "     *",
          "     * @param e {qx.event.type.Data} Data event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for <code>changeSelection</code> event on selection manager.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} Data event",
            "paramName": "e",
            "description": " Data event",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 413,
          "column": 4,
          "index": 11744
        },
        "end": {
          "line": 424,
          "column": 5,
          "index": 12108
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 433,
        "column": 2,
        "index": 12304
      },
      "end": {
        "line": 435,
        "column": 3,
        "index": 12359
      }
    }
  },
  "statics": {}
}