{
  "version": 0.3,
  "lastModified": 1731947916803,
  "lastModifiedIso": "2024-11-18T16:38:36.803Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/core/scroll/ScrollPane.js",
  "type": "class",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 792
    },
    "end": {
      "line": 491,
      "column": 3,
      "index": 12766
    }
  },
  "className": "qx.ui.core.scroll.ScrollPane",
  "jsdoc": {
    "raw": [
      "*",
      " * This class represents a scroll able pane. This means that this widget",
      " * may contain content which is bigger than the available (inner)",
      " * dimensions of this widget. The widget also offer methods to control",
      " * the scrolling position. It can only have exactly one child.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This class represents a scroll able pane. This means that this widget\n may contain content which is bigger than the available (inner)\n dimensions of this widget. The widget also offer methods to control\n the scrolling position. It can only have exactly one child.</p>"
      }
    ]
  },
  "superClass": "qx.ui.core.Widget",
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 35,
        "column": 2,
        "index": 1062
      },
      "end": {
        "line": 57,
        "column": 3,
        "index": 1701
      }
    }
  },
  "events": {
    "update": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired on resize of both the container or the content. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired on resize of both the container or the content.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1968
        },
        "end": {
          "line": 67,
          "column": 33,
          "index": 1997
        }
      }
    },
    "scrollAnimationEnd": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired on scroll animation end invoked by 'scroll*' methods. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired on scroll animation end invoked by 'scroll*' methods.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2075
        },
        "end": {
          "line": 70,
          "column": 45,
          "index": 2116
        }
      }
    }
  },
  "properties": {
    "scrollX": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2372
        },
        "end": {
          "line": 88,
          "column": 5,
          "index": 2586
        }
      },
      "json": {
        "check": "qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxX()",
        "apply": "_applyScrollX",
        "transform": "_transformScrollX",
        "event": "scrollX",
        "init": 0
      },
      "jsdoc": {
        "raw": [
          "* The horizontal scroll position "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The horizontal scroll position</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "scrollY": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2633
        },
        "end": {
          "line": 98,
          "column": 5,
          "index": 2847
        }
      },
      "json": {
        "check": "qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxY()",
        "apply": "_applyScrollY",
        "transform": "_transformScrollY",
        "event": "scrollY",
        "init": 0
      },
      "jsdoc": {
        "raw": [
          "* The vertical scroll position "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The vertical scroll position</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__frame": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 3055
        },
        "end": {
          "line": 108,
          "column": 17,
          "index": 3068
        }
      },
      "appearsIn": []
    },
    "add": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Configures the content of the scroll pane. Replaces any existing child",
          "     * with the newly given one.",
          "     *",
          "     * @param widget {qx.ui.core.Widget?null} The content widget of the pane",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Configures the content of the scroll pane. Replaces any existing child\n with the newly given one.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget?null} The content widget of the pane",
            "paramName": "widget",
            "description": " The content widget of the pane",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3486
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3773
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "appearsIn": []
    },
    "remove": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the given widget from the content. The pane is empty",
          "     * afterwards as only one child is supported by the pane.",
          "     *",
          "     * @param widget {qx.ui.core.Widget?null} The content widget of the pane",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given widget from the content. The pane is empty\n afterwards as only one child is supported by the pane.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget?null} The content widget of the pane",
            "paramName": "widget",
            "description": " The content widget of the pane",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 141,
          "column": 4,
          "index": 4010
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 4153
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "appearsIn": []
    },
    "getChildren": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an array containing the current content.",
          "     *",
          "     * @return {Object[]} The content array",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array containing the current content.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} The content array",
            "type": "Object[]",
            "description": "The content array"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4283
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4338
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Object[]"
      },
      "appearsIn": []
    },
    "_onUpdate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event listener for resize event of content and container",
          "     *",
          "     * @param e {Event} Resize event object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for resize event of content and container</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} Resize event object",
            "paramName": "e",
            "description": " Resize event object",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4672
        },
        "end": {
          "line": 170,
          "column": 5,
          "index": 4724
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "Event"
        }
      ],
      "appearsIn": []
    },
    "_onScroll": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event listener for scroll event of content",
          "     *",
          "     * @param e {qx.event.type.Event} Scroll event object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for scroll event of content</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Scroll event object",
            "paramName": "e",
            "description": " Scroll event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 177,
          "column": 4,
          "index": 4862
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 5025
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Event"
        }
      ],
      "appearsIn": []
    },
    "_onAppear": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event listener for appear event of content",
          "     *",
          "     * @param e {qx.event.type.Event} Appear event object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for appear event of content</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Appear event object",
            "paramName": "e",
            "description": " Appear event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 189,
          "column": 4,
          "index": 5163
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5557
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Event"
        }
      ],
      "appearsIn": []
    },
    "getItemTop": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the top offset of the given item in relation to the",
          "     * inner height of this widget.",
          "     *",
          "     * @param item {qx.ui.core.Widget} Item to query",
          "     * @return {Integer} Top offset",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the top offset of the given item in relation to the\n inner height of this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to query",
            "paramName": "item",
            "description": " Item to query",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Top offset",
            "type": "Integer",
            "description": "Top offset"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 220,
          "column": 4,
          "index": 5982
        },
        "end": {
          "line": 229,
          "column": 5,
          "index": 6171
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getItemBottom": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the top offset of the end of the given item in relation to the",
          "     * inner height of this widget.",
          "     *",
          "     * @param item {qx.ui.core.Widget} Item to query",
          "     * @return {Integer} Top offset",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the top offset of the end of the given item in relation to the\n inner height of this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to query",
            "paramName": "item",
            "description": " Item to query",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Top offset",
            "type": "Integer",
            "description": "Top offset"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 238,
          "column": 4,
          "index": 6404
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 6493
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getItemLeft": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the left offset of the given item in relation to the",
          "     * inner width of this widget.",
          "     *",
          "     * @param item {qx.ui.core.Widget} Item to query",
          "     * @return {Integer} Top offset",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the left offset of the given item in relation to the\n inner width of this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to query",
            "paramName": "item",
            "description": " Item to query",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Top offset",
            "type": "Integer",
            "description": "Top offset"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 249,
          "column": 4,
          "index": 6715
        },
        "end": {
          "line": 263,
          "column": 5,
          "index": 7027
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getItemRight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the left offset of the end of the given item in relation to the",
          "     * inner width of this widget.",
          "     *",
          "     * @param item {qx.ui.core.Widget} Item to query",
          "     * @return {Integer} Right offset",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the left offset of the end of the given item in relation to the\n inner width of this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to query",
            "paramName": "item",
            "description": " Item to query",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Right offset",
            "type": "Integer",
            "description": "Right offset"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 272,
          "column": 4,
          "index": 7262
        },
        "end": {
          "line": 274,
          "column": 5,
          "index": 7350
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getScrollSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The size (identical with the preferred size) of the content.",
          "     *",
          "     * @return {Map} Size of the content (keys: <code>width</code> and <code>height</code>)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The size (identical with the preferred size) of the content.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Size of the content (keys: <code>width</code> and <code>height</code>)",
            "type": "Map<any, any>",
            "description": "Size of the content (keys: <code>width</code> and <code>height</code>)"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 287,
          "column": 4,
          "index": 7732
        },
        "end": {
          "line": 289,
          "column": 5,
          "index": 7803
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getScrollMaxX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The maximum horizontal scroll position.",
          "     *",
          "     * @return {Integer} Maximum horizontal scroll position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The maximum horizontal scroll position.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Maximum horizontal scroll position.",
            "type": "Integer",
            "description": "Maximum horizontal scroll position."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 302,
          "column": 4,
          "index": 8137
        },
        "end": {
          "line": 311,
          "column": 5,
          "index": 8372
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getScrollMaxY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The maximum vertical scroll position.",
          "     *",
          "     * @return {Integer} Maximum vertical scroll position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The maximum vertical scroll position.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Maximum vertical scroll position.",
            "type": "Integer",
            "description": "Maximum vertical scroll position."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 318,
          "column": 4,
          "index": 8506
        },
        "end": {
          "line": 327,
          "column": 5,
          "index": 8743
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "scrollToX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the element's content to the given left coordinate",
          "     *",
          "     * @param value {Integer} The vertical position to scroll to.",
          "     * @param duration {Number?} The time in milliseconds the scroll to should take.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the element's content to the given left coordinate</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Integer} The vertical position to scroll to.",
            "paramName": "value",
            "description": " The vertical position to scroll to.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number?} The time in milliseconds the scroll to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the scroll to should take.",
            "optional": true,
            "type": "Number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 335,
          "column": 4,
          "index": 8990
        },
        "end": {
          "line": 375,
          "column": 5,
          "index": 9904
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "Integer"
        },
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "scrollToY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the element's content to the given top coordinate",
          "     *",
          "     * @param value {Integer} The horizontal position to scroll to.",
          "     * @param duration {Number?} The time in milliseconds the scroll to should take.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the element's content to the given top coordinate</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Integer} The horizontal position to scroll to.",
            "paramName": "value",
            "description": " The horizontal position to scroll to.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number?} The time in milliseconds the scroll to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the scroll to should take.",
            "optional": true,
            "type": "Number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 383,
          "column": 4,
          "index": 10152
        },
        "end": {
          "line": 423,
          "column": 5,
          "index": 11066
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "Integer"
        },
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "scrollByX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the element's content horizontally by the given amount.",
          "     *",
          "     * @param x {Integer?0} Amount to scroll",
          "     * @param duration {Number?} The time in milliseconds the scroll to should take.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the element's content horizontally by the given amount.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Integer?0} Amount to scroll",
            "paramName": "x",
            "description": " Amount to scroll",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number?} The time in milliseconds the scroll to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the scroll to should take.",
            "optional": true,
            "type": "Number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 431,
          "column": 4,
          "index": 11297
        },
        "end": {
          "line": 433,
          "column": 5,
          "index": 11382
        }
      },
      "type": "function",
      "params": [
        {
          "name": "x",
          "type": "Integer",
          "optional": true,
          "defaultValue": "0"
        },
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "scrollByY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the element's content vertically by the given amount.",
          "     *",
          "     * @param y {Integer?0} Amount to scroll",
          "     * @param duration {Number?} The time in milliseconds the scroll to should take.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the element's content vertically by the given amount.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "y {Integer?0} Amount to scroll",
            "paramName": "y",
            "description": " Amount to scroll",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number?} The time in milliseconds the scroll to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the scroll to should take.",
            "optional": true,
            "type": "Number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 441,
          "column": 4,
          "index": 11611
        },
        "end": {
          "line": 443,
          "column": 5,
          "index": 11696
        }
      },
      "type": "function",
      "params": [
        {
          "name": "y",
          "type": "Integer",
          "optional": true,
          "defaultValue": "0"
        },
        {
          "name": "duration",
          "type": "Number",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "stopScrollAnimation": {
      "jsdoc": {
        "raw": [
          "*",
          "     * If an scroll animation is running, it will be stopped with that method.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>If an scroll animation is running, it will be stopped with that method.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 448,
          "column": 4,
          "index": 11798
        },
        "end": {
          "line": 453,
          "column": 5,
          "index": 11929
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyScrollX": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 462,
          "column": 4,
          "index": 12163
        },
        "end": {
          "line": 464,
          "column": 5,
          "index": 12240
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_transformScrollX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Transform property",
          "     *",
          "     * @param value {Number} Value to transform",
          "     * @return {Number} Rounded value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transform property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} Value to transform",
            "paramName": "value",
            "description": " Value to transform",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} Rounded value",
            "type": "number",
            "description": "Rounded value"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 472,
          "column": 4,
          "index": 12382
        },
        "end": {
          "line": 474,
          "column": 5,
          "index": 12446
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_applyScrollY": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 477,
          "column": 4,
          "index": 12475
        },
        "end": {
          "line": 479,
          "column": 5,
          "index": 12552
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_transformScrollY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Transform property",
          "     *",
          "     * @param value {Number} Value to transform",
          "     * @return {Number} Rounded value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transform property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} Value to transform",
            "paramName": "value",
            "description": " Value to transform",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} Rounded value",
            "type": "number",
            "description": "Rounded value"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 487,
          "column": 4,
          "index": 12694
        },
        "end": {
          "line": 489,
          "column": 5,
          "index": 12758
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    }
  },
  "statics": {}
}