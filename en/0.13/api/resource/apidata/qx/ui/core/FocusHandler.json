{
  "version": 0.3,
  "lastModified": 1722151625367,
  "lastModifiedIso": "2024-07-28T07:27:05.367Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/core/FocusHandler.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 599
    },
    "end": {
      "line": 581,
      "column": 3,
      "index": 15480
    }
  },
  "className": "qx.ui.core.FocusHandler",
  "jsdoc": {
    "raw": [
      "*",
      " * Each focus root delegates the focus handling to instances of the FocusHandler.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Each focus root delegates the focus handling to instances of the FocusHandler.</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "isSingleton": true,
  "abstract": false,
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 882
      },
      "end": {
        "line": 38,
        "column": 3,
        "index": 965
      }
    }
  },
  "properties": {
    "useTabNavigation": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1193
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1259
        }
      },
      "json": {
        "check": "Boolean",
        "init": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Activate changing focus with the tab key (default: true)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Activate changing focus with the tab key (default: true)</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__roots": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1467
        },
        "end": {
          "line": 62,
          "column": 17,
          "index": 1480
        }
      },
      "appearsIn": []
    },
    "__activeChild": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1486
        },
        "end": {
          "line": 63,
          "column": 23,
          "index": 1505
        }
      },
      "appearsIn": []
    },
    "__focusedChild": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1511
        },
        "end": {
          "line": 64,
          "column": 24,
          "index": 1531
        }
      },
      "appearsIn": []
    },
    "__currentRoot": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1537
        },
        "end": {
          "line": 65,
          "column": 23,
          "index": 1556
        }
      },
      "appearsIn": []
    },
    "connectTo": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Connects to a top-level root element (which initially receives",
          "     * all events of the root). This are normally all page and application",
          "     * roots, but no inline roots (they are typically sitting inside",
          "     * another root).",
          "     *",
          "     * @param root {qx.ui.root.Abstract} Any root",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Connects to a top-level root element (which initially receives\n all events of the root). This are normally all page and application\n roots, but no inline roots (they are typically sitting inside\n another root).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "root {qx.ui.root.Abstract} Any root",
            "paramName": "root",
            "description": " Any root",
            "type": "qx.ui.root.Abstract"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 1872
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2266
        }
      },
      "type": "function",
      "params": [
        {
          "name": "root",
          "type": "qx.ui.root.Abstract"
        }
      ],
      "appearsIn": []
    },
    "addRoot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Registers a widget as a focus root. A focus root comes",
          "     * with an separate tab sequence handling.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to register",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers a widget as a focus root. A focus root comes\n with an separate tab sequence handling.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to register",
            "paramName": "widget",
            "description": " The widget to register",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2469
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2591
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "appearsIn": []
    },
    "removeRoot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Deregisters a previous added widget.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to deregister",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Deregisters a previous added widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to deregister",
            "paramName": "widget",
            "description": " The widget to deregister",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2731
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 2857
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "appearsIn": []
    },
    "getActiveWidget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the active widget",
          "     *",
          "     * @return {qx.ui.core.Widget|null} The active widget or <code>null</code>",
          "     *    if no widget is active",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the active widget</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget|null} The active widget or <code>null</code>\n    if no widget is active",
            "type": "qx.ui.core.Widget|null",
            "description": "The active widget or <code>null</code>\n    if no widget is active"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3028
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 3086
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget|null"
      },
      "appearsIn": []
    },
    "isActive": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the given widget is the active one",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to check",
          "     * @return {Boolean} <code>true</code> if the given widget is active",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is the active one</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to check",
            "paramName": "widget",
            "description": " The widget to check",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the given widget is active",
            "type": "boolean",
            "description": "<code>true</code> if the given widget is active"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3300
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3367
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getFocusedWidget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the focused widget",
          "     *",
          "     * @return {qx.ui.core.Widget|null} The focused widget or <code>null</code>",
          "     *    if no widget has the focus",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the focused widget</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget|null} The focused widget or <code>null</code>\n    if no widget has the focus",
            "type": "qx.ui.core.Widget|null",
            "description": "The focused widget or <code>null</code>\n    if no widget has the focus"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3544
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3604
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget|null"
      },
      "appearsIn": []
    },
    "isFocused": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the given widget is the focused one.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to check",
          "     * @return {Boolean} <code>true</code> if the given widget is focused",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is the focused one.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to check",
            "paramName": "widget",
            "description": " The widget to check",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the given widget is focused",
            "type": "boolean",
            "description": "<code>true</code> if the given widget is focused"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 141,
          "column": 4,
          "index": 3821
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 3890
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "isFocusRoot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the given widgets acts as a focus root.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to check",
          "     * @return {Boolean} <code>true</code> if the given widget is a focus root",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widgets acts as a focus root.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to check",
            "paramName": "widget",
            "description": " The widget to check",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the given widget is a focus root",
            "type": "boolean",
            "description": "<code>true</code> if the given widget is a focus root"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 4115
        },
        "end": {
          "line": 153,
          "column": 5,
          "index": 4192
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_onActivate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal event handler for activate event.",
          "     *",
          "     * @param e {qx.event.type.Focus} Focus event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler for activate event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Focus} Focus event",
            "paramName": "e",
            "description": " Focus event",
            "type": "qx.event.type.Focus"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 166,
          "column": 4,
          "index": 4517
        },
        "end": {
          "line": 175,
          "column": 5,
          "index": 4780
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Focus"
        }
      ],
      "appearsIn": []
    },
    "_onDeactivate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal event handler for deactivate event.",
          "     *",
          "     * @param e {qx.event.type.Focus} Focus event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler for deactivate event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Focus} Focus event",
            "paramName": "e",
            "description": " Focus event",
            "type": "qx.event.type.Focus"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 182,
          "column": 4,
          "index": 4912
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 5055
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Focus"
        }
      ],
      "appearsIn": []
    },
    "_onFocusIn": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal event handler for focusin event.",
          "     *",
          "     * @param e {qx.event.type.Focus} Focus event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler for focusin event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Focus} Focus event",
            "paramName": "e",
            "description": " Focus event",
            "type": "qx.event.type.Focus"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 194,
          "column": 4,
          "index": 5184
        },
        "end": {
          "line": 200,
          "column": 5,
          "index": 5361
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Focus"
        }
      ],
      "appearsIn": []
    },
    "_onFocusOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal event handler for focusout event.",
          "     *",
          "     * @param e {qx.event.type.Focus} Focus event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler for focusout event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Focus} Focus event",
            "paramName": "e",
            "description": " Focus event",
            "type": "qx.event.type.Focus"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 5491
        },
        "end": {
          "line": 213,
          "column": 5,
          "index": 5666
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Focus"
        }
      ],
      "appearsIn": []
    },
    "__onKeyPress": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal event handler for TAB key.",
          "     *",
          "     * @param e {qx.event.type.KeySequence} Key event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler for TAB key.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} Key event",
            "paramName": "e",
            "description": " Key event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 220,
          "column": 4,
          "index": 5793
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 6545
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.KeySequence"
        }
      ],
      "appearsIn": []
    },
    "__findFocusRoot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Finds the next focus root, starting with the given widget.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to find a focus root for.",
          "     * @return {qx.ui.core.Widget|null} The focus root for the given widget or",
          "     * <code>true</code> if no focus root could be found",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Finds the next focus root, starting with the given widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to find a focus root for.",
            "paramName": "widget",
            "description": " The widget to find a focus root for.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget|null} The focus root for the given widget or\n <code>true</code> if no focus root could be found",
            "type": "qx.ui.core.Widget|null",
            "description": "The focus root for the given widget or\n <code>true</code> if no focus root could be found"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 264,
          "column": 4,
          "index": 7042
        },
        "end": {
          "line": 275,
          "column": 5,
          "index": 7277
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "qx.ui.core.Widget|null"
      },
      "appearsIn": []
    },
    "__compareTabOrder": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Compares the order of two widgets",
          "     *",
          "     * @param widget1 {qx.ui.core.Widget} Widget A",
          "     * @param widget2 {qx.ui.core.Widget} Widget B",
          "     * @return {Integer} A sort() compatible integer with values",
          "     *   small than 0, exactly 0 or bigger than 0.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compares the order of two widgets</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget1 {qx.ui.core.Widget} Widget A",
            "paramName": "widget1",
            "description": " Widget A",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "widget2 {qx.ui.core.Widget} Widget B",
            "paramName": "widget2",
            "description": " Widget B",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} A sort() compatible integer with values\n   small than 0, exactly 0 or bigger than 0.",
            "type": "Integer",
            "description": "A sort() compatible integer with values\n   small than 0, exactly 0 or bigger than 0."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 291,
          "column": 4,
          "index": 7774
        },
        "end": {
          "line": 332,
          "column": 5,
          "index": 8748
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget1",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "widget2",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "__getFirstWidget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the first widget.",
          "     *",
          "     * @return {qx.ui.core.Widget} Returns the first (positioned) widget from",
          "     *    the current root.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the first widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} Returns the first (positioned) widget from\n    the current root.",
            "type": "qx.ui.core.Widget",
            "description": "Returns the first (positioned) widget from\n    the current root."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 340,
          "column": 4,
          "index": 8917
        },
        "end": {
          "line": 342,
          "column": 5,
          "index": 8999
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "__getLastWidget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the last widget.",
          "     *",
          "     * @return {qx.ui.core.Widget} Returns the last (positioned) widget from",
          "     *    the current root.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the last widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} Returns the last (positioned) widget from\n    the current root.",
            "type": "qx.ui.core.Widget",
            "description": "Returns the last (positioned) widget from\n    the current root."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 350,
          "column": 4,
          "index": 9166
        },
        "end": {
          "line": 352,
          "column": 5,
          "index": 9246
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "__getWidgetAfter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the widget after the given one.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} Widget to start with",
          "     * @return {qx.ui.core.Widget} The found widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the widget after the given one.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Widget to start with",
            "paramName": "widget",
            "description": " Widget to start with",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The found widget.",
            "type": "qx.ui.core.Widget",
            "description": "The found widget."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 360,
          "column": 4,
          "index": 9438
        },
        "end": {
          "line": 380,
          "column": 5,
          "index": 9950
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "__getWidgetBefore": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the widget before the given one.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} Widget to start with",
          "     * @return {qx.ui.core.Widget} The found widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the widget before the given one.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Widget to start with",
            "paramName": "widget",
            "description": " Widget to start with",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The found widget.",
            "type": "qx.ui.core.Widget",
            "description": "The found widget."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 388,
          "column": 4,
          "index": 10143
        },
        "end": {
          "line": 408,
          "column": 5,
          "index": 10661
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "__collectAllAfter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Collects all widgets which are after the given widget in",
          "     * the given parent widget. Append all found children to the",
          "     * <code>list</code>.",
          "     *",
          "     * @param parent {qx.ui.core.Widget} Parent widget",
          "     * @param widget {qx.ui.core.Widget} Child widget to start with",
          "     * @param result {Array} Result list",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Collects all widgets which are after the given widget in\n the given parent widget. Append all found children to the\n <code>list</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parent {qx.ui.core.Widget} Parent widget",
            "paramName": "parent",
            "description": " Parent widget",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Child widget to start with",
            "paramName": "widget",
            "description": " Child widget to start with",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "result {Array} Result list",
            "paramName": "result",
            "description": " Result list",
            "type": "Array<any>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 425,
          "column": 4,
          "index": 11226
        },
        "end": {
          "line": 449,
          "column": 5,
          "index": 11866
        }
      },
      "type": "function",
      "params": [
        {
          "name": "parent",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "result",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "__collectAllBefore": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Collects all widgets which are before the given widget in",
          "     * the given parent widget. Append all found children to the",
          "     * <code>list</code>.",
          "     *",
          "     * @param parent {qx.ui.core.Widget} Parent widget",
          "     * @param widget {qx.ui.core.Widget} Child widget to start with",
          "     * @param result {Array} Result list",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Collects all widgets which are before the given widget in\n the given parent widget. Append all found children to the\n <code>list</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parent {qx.ui.core.Widget} Parent widget",
            "paramName": "parent",
            "description": " Parent widget",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Child widget to start with",
            "paramName": "widget",
            "description": " Child widget to start with",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "result {Array} Result list",
            "paramName": "result",
            "description": " Result list",
            "type": "Array<any>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 460,
          "column": 4,
          "index": 12216
        },
        "end": {
          "line": 484,
          "column": 5,
          "index": 12858
        }
      },
      "type": "function",
      "params": [
        {
          "name": "parent",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "result",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "__getFirst": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Find first (positioned) widget. (Sorted by coordinates, zIndex, etc.)",
          "     *",
          "     * @param parent {qx.ui.core.Widget} Parent widget",
          "     * @param firstWidget {qx.ui.core.Widget?null} Current first widget",
          "     * @return {qx.ui.core.Widget} The first (positioned) widget",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Find first (positioned) widget. (Sorted by coordinates, zIndex, etc.)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parent {qx.ui.core.Widget} Parent widget",
            "paramName": "parent",
            "description": " Parent widget",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "firstWidget {qx.ui.core.Widget?null} Current first widget",
            "paramName": "firstWidget",
            "description": " Current first widget",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The first (positioned) widget",
            "type": "qx.ui.core.Widget",
            "description": "The first (positioned) widget"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 493,
          "column": 4,
          "index": 13157
        },
        "end": {
          "line": 526,
          "column": 5,
          "index": 14014
        }
      },
      "type": "function",
      "params": [
        {
          "name": "parent",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "firstWidget",
          "type": "qx.ui.core.Widget",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "__getLast": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Find last (positioned) widget. (Sorted by coordinates, zIndex, etc.)",
          "     *",
          "     * @param parent {qx.ui.core.Widget} Parent widget",
          "     * @param lastWidget {qx.ui.core.Widget?null} Current last widget",
          "     * @return {qx.ui.core.Widget} The last (positioned) widget",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Find last (positioned) widget. (Sorted by coordinates, zIndex, etc.)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parent {qx.ui.core.Widget} Parent widget",
            "paramName": "parent",
            "description": " Parent widget",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "lastWidget {qx.ui.core.Widget?null} Current last widget",
            "paramName": "lastWidget",
            "description": " Current last widget",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The last (positioned) widget",
            "type": "qx.ui.core.Widget",
            "description": "The last (positioned) widget"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 535,
          "column": 4,
          "index": 14309
        },
        "end": {
          "line": 568,
          "column": 5,
          "index": 15157
        }
      },
      "type": "function",
      "params": [
        {
          "name": "parent",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "lastWidget",
          "type": "qx.ui.core.Widget",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 577,
        "column": 2,
        "index": 15353
      },
      "end": {
        "line": 580,
        "column": 3,
        "index": 15476
      }
    }
  },
  "statics": {}
}