{
  "version": 0.3,
  "lastModified": 1722153601107,
  "lastModifiedIso": "2024-07-28T08:00:01.107Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/core/MRemoteLayoutHandling.js",
  "type": "mixin",
  "location": {
    "start": {
      "line": 29,
      "column": 0,
      "index": 900
    },
    "end": {
      "line": 67,
      "column": 3,
      "index": 2043
    }
  },
  "className": "qx.ui.core.MRemoteLayoutHandling",
  "jsdoc": {
    "raw": [
      "*",
      " * This mixin redirects the layout manager to a child widget of the",
      " * including class. This is e.g. used in {@link qx.ui.window.Window} to configure",
      " * the layout manager of the window pane instead of the window directly.",
      " *",
      " * The including class must implement the method <code>getChildrenContainer</code>,",
      " * which has to return the widget, to which the layout should be set.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This mixin redirects the layout manager to a child widget of the\n including class. This is e.g. used in {@link qx.ui.window.Window} to configure\n the layout manager of the window pane instead of the window directly.\n The including class must implement the method <code>getChildrenContainer</code>,\n which has to return the widget, to which the layout should be set.</p>"
      }
    ]
  },
  "members": {
    "setLayout": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set a layout manager for the widget. A a layout manager can only be connected",
          "     * with one widget. Reset the connection with a previous widget first, if you",
          "     * like to use it in another widget instead.",
          "     *",
          "     * @param layout {qx.ui.layout.Abstract} The new layout or",
          "     *     <code>null</code> to reset the layout.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set a layout manager for the widget. A a layout manager can only be connected\n with one widget. Reset the connection with a previous widget first, if you\n like to use it in another widget instead.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "layout {qx.ui.layout.Abstract} The new layout or\n     <code>null</code> to reset the layout.",
            "paramName": "layout",
            "description": " The new layout or\n     <code>null</code> to reset the layout.",
            "type": "qx.ui.layout.Abstract"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1507
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1713
        }
      },
      "type": "function",
      "params": [
        {
          "name": "layout",
          "type": "qx.ui.layout.Abstract"
        }
      ],
      "appearsIn": []
    },
    "getLayout": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the widget's layout manager.",
          "     *",
          "     * @return {qx.ui.layout.Abstract} The widget's layout manager",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the widget's layout manager.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.layout.Abstract} The widget's layout manager",
            "type": "qx.ui.layout.Abstract",
            "description": "The widget's layout manager"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1850
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 2035
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.layout.Abstract"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}