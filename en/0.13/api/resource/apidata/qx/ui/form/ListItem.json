{
  "version": 0.3,
  "lastModified": 1726088852285,
  "lastModifiedIso": "2024-09-11T21:07:32.285Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/form/ListItem.js",
  "type": "class",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 660
    },
    "end": {
      "line": 127,
      "column": 3,
      "index": 3022
    }
  },
  "className": "qx.ui.form.ListItem",
  "jsdoc": {
    "raw": [
      "*",
      " * A item for a list. Could be added to all List like widgets but also",
      " * to the {@link qx.ui.form.SelectBox} and {@link qx.ui.form.ComboBox}.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A item for a list. Could be added to all List like widgets but also\n to the {@link qx.ui.form.SelectBox} and {@link qx.ui.form.ComboBox}.</p>"
      }
    ]
  },
  "superClass": "qx.ui.basic.Atom",
  "interfaces": [
    "qx.ui.form.IModel",
    "qx.ui.form.IListItem"
  ],
  "mixins": [
    "qx.ui.form.MModelProperty"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "label"
      },
      {
        "name": "icon"
      },
      {
        "name": "model"
      }
    ],
    "location": {
      "start": {
        "line": 40,
        "column": 2,
        "index": 1159
      },
      "end": {
        "line": 49,
        "column": 3,
        "index": 1405
      }
    }
  },
  "events": {
    "action": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* (Fired by {@link qx.ui.form.List}) "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>(Fired by {@link qx.ui.form.List})</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1653
        },
        "end": {
          "line": 59,
          "column": 33,
          "index": 1682
        }
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 1896
        },
        "end": {
          "line": 72,
          "column": 5,
          "index": 1958
        }
      },
      "json": {
        "refine": true,
        "init": "listitem"
      },
      "jsdoc": null,
      "appearsIn": [
        "qx.ui.basic.Atom",
        "qx.ui.core.Widget"
      ]
    },
    "readOnly": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2019
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2140
        }
      },
      "json": {
        "check": "Boolean",
        "event": "changeReadOnly",
        "apply": "_applyReadOnly",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the field is read only",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the field is read only</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "model": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1367
        },
        "end": {
          "line": 45,
          "column": 5,
          "index": 1483
        }
      },
      "json": {
        "nullable": true,
        "event": "changeModel",
        "apply": "_applyModel",
        "dereference": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Model property for storing additional information for the including",
          "     * object. It can act as value property on form items for example.",
          "     *",
          "     * Be careful using that property as this is used for the",
          "     * {@link qx.ui.form.MModelSelection} it has some restrictions:",
          "     *",
          "     * * Don't use equal models in one widget using the",
          "     *     {@link qx.ui.form.MModelSelection}.",
          "     *",
          "     * * Avoid setting only some model properties if the widgets are added to",
          "     *     a {@link qx.ui.form.MModelSelection} widget.",
          "     *",
          "     * Both restrictions result of the fact, that the set models are deputies",
          "     * for their widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Model property for storing additional information for the including\n object. It can act as value property on form items for example.\n Be careful using that property as this is used for the\n {@link qx.ui.form.MModelSelection} it has some restrictions:</p>\n<ul>\n<li>Don't use equal models in one widget using the\n {@link qx.ui.form.MModelSelection}.</li>\n<li>Avoid setting only some model properties if the widgets are added to\n a {@link qx.ui.form.MModelSelection} widget.\nBoth restrictions result of the fact, that the set models are deputies\nfor their widget.</li>\n</ul>"
          }
        ]
      },
      "mixin": "qx.ui.form.MModelProperty",
      "appearsIn": [
        "qx.ui.form.MModelProperty"
      ]
    }
  },
  "members": {
    "_forwardStates": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @lint ignoreReferenceField(_forwardStates)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_forwardStates)"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2302
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 2410
        }
      },
      "overriddenFrom": "qx.ui.basic.Atom",
      "appearsIn": [
        "qx.ui.basic.Atom",
        "qx.ui.core.Widget"
      ]
    },
    "_applyReadOnly": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2417
        },
        "end": {
          "line": 104,
          "column": 5,
          "index": 2561
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "_onPointerOver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the pointer over event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer over event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 2633
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2732
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onPointerOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the pointer out event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the pointer out event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 2803
        },
        "end": {
          "line": 120,
          "column": 5,
          "index": 2861
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyModel": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1527
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1588
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "mixin": "qx.ui.form.MModelProperty",
      "appearsIn": [
        "qx.ui.form.MModelProperty"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 123,
        "column": 2,
        "index": 2870
      },
      "end": {
        "line": 126,
        "column": 3,
        "index": 3018
      }
    }
  },
  "statics": {}
}