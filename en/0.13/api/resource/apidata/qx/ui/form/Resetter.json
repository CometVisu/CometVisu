{
  "className": "qx.ui.form.Resetter",
  "packageName": "qx.ui.form",
  "name": "Resetter",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 731
      },
      "end": {
        "line": 171,
        "column": 3,
        "index": 4976
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The resetter is responsible for managing a set of fields and resetting these\n fields on a {@link #reset} call. It can handle all form field implementing IField.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 27,
        "column": 2,
        "index": 801
      },
      "end": {
        "line": 31,
        "column": 3,
        "index": 855
      }
    }
  },
  "members": {
    "__items": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 875
        },
        "end": {
          "line": 34,
          "column": 17,
          "index": 888
        }
      },
      "type": "variable",
      "access": "private"
    },
    "add": {
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1154
        },
        "end": {
          "line": 46,
          "column": 5,
          "index": 1269
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adding a field to the resetter will get its current value and store\n it for resetting.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "field {qx.ui.form.IField} The field which should be added.",
            "paramName": "field",
            "description": " The field which should be added.",
            "type": "qx.ui.form.IField"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{TypeError} When given argument is not a field.",
            "type": "TypeError",
            "description": " When given argument is not a field."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1554
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1841
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes a field from the resetter.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "field {qx.ui.form.IField} The field which should be removed.",
            "paramName": "field",
            "description": " The field which should be removed.",
            "type": "qx.ui.form.IField"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{TypeError} When given argument is not a field.",
            "type": "TypeError",
            "description": " When given argument is not a field."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if the field has been removed.",
            "type": "Boolean",
            "description": " <code>true</code>, if the field has been removed."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "reset": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 2085
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2497
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets all added fields to their initial value. The initial value\n is the value in the widget during the {@link #add}.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|Error} Returns an error when some fields could not be reset.",
            "type": "null|Error",
            "description": " Returns an error when some fields could not be reset."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MProperty"
      ]
    },
    "resetItem": {
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2881
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 3201
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets a single given field. The field has to be added to the resetter\n instance before. Otherwise, an error is thrown.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "field {qx.ui.form.IField} The field, which should be reset.",
            "paramName": "field",
            "description": " The field, which should be reset.",
            "type": "qx.ui.form.IField"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{TypeError} When given argument is not a field.",
            "type": "TypeError",
            "description": " When given argument is not a field."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|Error} Returns an error when the field value could not be set.",
            "type": "null|Error",
            "description": " Returns an error when the field value could not be set."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "redefine": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3335
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3585
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Takes the current values of all added fields and uses these values as\n init values for resetting.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "redefineItem": {
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 3849
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 4249
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Takes the current value of the given field and stores this value as init\n value for resetting.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "field {qx.ui.form.IField} The field to redefine.",
            "paramName": "field",
            "description": " The field to redefine.",
            "type": "qx.ui.form.IField"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{TypeError} When given argument is not a field.",
            "type": "TypeError",
            "description": " When given argument is not a field."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__typeCheck": {
      "location": {
        "start": {
          "line": 155,
          "column": 4,
          "index": 4489
        },
        "end": {
          "line": 159,
          "column": 5,
          "index": 4678
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Assert when given argument is not a field.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "field {qx.ui.form.IField|var} Any argument that should be a field.",
            "paramName": "field",
            "description": " Any argument that should be a field.",
            "type": [
              "qx.ui.form.IField",
              "var"
            ]
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{TypeError} When given argument is not a field.",
            "type": "TypeError",
            "description": " When given argument is not a field."
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 167,
        "column": 2,
        "index": 4873
      },
      "end": {
        "line": 170,
        "column": 3,
        "index": 4972
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}