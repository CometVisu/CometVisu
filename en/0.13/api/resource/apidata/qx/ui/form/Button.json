{
  "version": 0.3,
  "lastModified": 1722153599191,
  "lastModifiedIso": "2024-07-28T07:59:59.191Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/form/Button.js",
  "type": "class",
  "location": {
    "start": {
      "line": 52,
      "column": 0,
      "index": 1536
    },
    "end": {
      "line": 333,
      "column": 3,
      "index": 8964
    }
  },
  "className": "qx.ui.form.Button",
  "jsdoc": {
    "raw": [
      "*",
      " * A Button widget which supports various states and allows it to be used",
      " * via the mouse, touch, pen and the keyboard.",
      " *",
      " * If the user presses the button by clicking on it, or the <code>Enter</code> or",
      " * <code>Space</code> keys, the button fires an {@link qx.ui.core.MExecutable#execute} event.",
      " *",
      " * If the {@link qx.ui.core.MExecutable#command} property is set, the",
      " * command is executed as well.",
      " *",
      " * *Example*",
      " *",
      " * Here is a little example of how to use the widget.",
      " *",
      " * <pre class='javascript'>",
      " *   var button = new qx.ui.form.Button(\"Hello World\");",
      " *",
      " *   button.addListener(\"execute\", function(e) {",
      " *     alert(\"Button was clicked\");",
      " *   }, this);",
      " *",
      " *   this.getRoot().add(button);",
      " * </pre>",
      " *",
      " * This example creates a button with the label \"Hello World\" and attaches an",
      " * event listener to the {@link #execute} event.",
      " *",
      " * *External Documentation*",
      " *",
      " * <a href='http://qooxdoo.org/docs/#desktop/widget/button.md' target='_blank'>",
      " * Documentation of this widget in the qooxdoo manual.</a>",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A Button widget which supports various states and allows it to be used\n via the mouse, touch, pen and the keyboard.\n If the user presses the button by clicking on it, or the <code>Enter</code> or\n <code>Space</code> keys, the button fires an {@link qx.ui.core.MExecutable#execute} event.\n If the {@link qx.ui.core.MExecutable#command} property is set, the\n command is executed as well.\n<em>Example</em>\n Here is a little example of how to use the widget.\n </p>\n<pre class='javascript'>\n   var button = new qx.ui.form.Button(\"Hello World\");\n   button.addListener(\"execute\", function(e) {\n     alert(\"Button was clicked\");\n   }, this);\n   this.getRoot().add(button);\n </pre>\n<p>This example creates a button with the label \"Hello World\" and attaches an\n event listener to the {@link #execute} event.\n<em>External Documentation</em>\n <a href='http://qooxdoo.org/docs/#desktop/widget/button.md' target='_blank'>\n Documentation of this widget in the qooxdoo manual.</a></p>"
      }
    ]
  },
  "superClass": "qx.ui.basic.Atom",
  "mixins": [
    "qx.ui.core.MExecutable"
  ],
  "interfaces": [
    "qx.ui.form.IExecutable"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "label"
      },
      {
        "name": "icon"
      },
      {
        "name": "command"
      }
    ],
    "location": {
      "start": {
        "line": 68,
        "column": 2,
        "index": 2061
      },
      "end": {
        "line": 105,
        "column": 3,
        "index": 3464
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3692
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 3752
        }
      },
      "json": {
        "refine": true,
        "init": "button"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.basic.Atom",
        "qx.ui.core.Widget"
      ]
    },
    "focusable": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3777
        },
        "end": {
          "line": 124,
          "column": 5,
          "index": 3832
        }
      },
      "json": {
        "refine": true,
        "init": true
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "command": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1320
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1455
        }
      },
      "json": {
        "check": "qx.ui.command.Command",
        "apply": "_applyCommand",
        "event": "changeCommand",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * A command called if the {@link #execute} method is called, e.g. on a",
          "     * button tap.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>A command called if the {@link #execute} method is called, e.g. on a\n button tap.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.core.MExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    }
  },
  "members": {
    "_forwardStates": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @lint ignoreReferenceField(_forwardStates)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_forwardStates)"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 4177
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 4284
        }
      },
      "overriddenFrom": "qx.ui.basic.Atom",
      "appearsIn": [
        "qx.ui.basic.Atom",
        "qx.ui.core.Widget"
      ]
    },
    "press": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Manually press the button",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Manually press the button</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 154,
          "column": 4,
          "index": 4530
        },
        "end": {
          "line": 160,
          "column": 5,
          "index": 4642
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "release": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Manually release the button",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Manually release the button</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 165,
          "column": 4,
          "index": 4700
        },
        "end": {
          "line": 169,
          "column": 5,
          "index": 4800
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "reset": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Completely reset the button (remove all states)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Completely reset the button (remove all states)</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 4878
        },
        "end": {
          "line": 178,
          "column": 5,
          "index": 5000
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MProperty"
      ]
    },
    "_onPointerOver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"pointerover\" event",
          "     * <ul>",
          "     * <li>Adds state \"hovered\"</li>",
          "     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>",
          "     * </ul>",
          "     *",
          "     * @param e {qx.event.type.Pointer} Mouse event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"pointerover\" event\n </p>\n<ul>\n <li>Adds state \"hovered\"</li>\n <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n </ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 5479
        },
        "end": {
          "line": 206,
          "column": 5,
          "index": 5740
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onPointerOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"pointerout\" event",
          "     * <ul>",
          "     * <li>Removes \"hovered\" state</li>",
          "     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>",
          "     * </ul>",
          "     *",
          "     * @param e {qx.event.type.Pointer} Mouse event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"pointerout\" event\n </p>\n<ul>\n <li>Removes \"hovered\" state</li>\n <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n </ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 217,
          "column": 4,
          "index": 6022
        },
        "end": {
          "line": 228,
          "column": 5,
          "index": 6283
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onPointerDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"pointerdown\" event",
          "     * <ul>",
          "     * <li>Removes \"abandoned\" state</li>",
          "     * <li>Adds \"pressed\" state</li>",
          "     * </ul>",
          "     *",
          "     * @param e {qx.event.type.Pointer} Mouse event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"pointerdown\" event\n </p>\n<ul>\n <li>Removes \"abandoned\" state</li>\n <li>Adds \"pressed\" state</li>\n </ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 6516
        },
        "end": {
          "line": 252,
          "column": 5,
          "index": 6815
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onPointerUp": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"pointerup\" event",
          "     * <ul>",
          "     * <li>Removes \"pressed\" state (if set)</li>",
          "     * <li>Removes \"abandoned\" state (if set)</li>",
          "     * <li>Adds \"hovered\" state (if \"abandoned\" state is not set)</li>",
          "     *</ul>",
          "     *",
          "     * @param e {qx.event.type.Pointer} Mouse event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"pointerup\" event\n </p>\n<ul>\n <li>Removes \"pressed\" state (if set)</li>\n <li>Removes \"abandoned\" state (if set)</li>\n <li>Adds \"hovered\" state (if \"abandoned\" state is not set)</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 264,
          "column": 4,
          "index": 7137
        },
        "end": {
          "line": 282,
          "column": 5,
          "index": 7652
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onTap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"tap\" event which stops the propagation.",
          "     *",
          "     * @param e {qx.event.type.Pointer} Pointer event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"tap\" event which stops the propagation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Pointer event",
            "paramName": "e",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 289,
          "column": 4,
          "index": 7804
        },
        "end": {
          "line": 294,
          "column": 5,
          "index": 8000
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onKeyDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"keydown\" event.<br/>",
          "     * Removes \"abandoned\" and adds \"pressed\" state",
          "     * for the keys \"Enter\" or \"Space\"",
          "     *",
          "     * @param e {Event} Key event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"keydown\" event.<br/>\n Removes \"abandoned\" and adds \"pressed\" state\n for the keys \"Enter\" or \"Space\"</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} Key event",
            "paramName": "e",
            "description": " Key event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 303,
          "column": 4,
          "index": 8204
        },
        "end": {
          "line": 311,
          "column": 5,
          "index": 8423
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "Event"
        }
      ],
      "appearsIn": []
    },
    "_onKeyUp": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"keyup\" event.<br/>",
          "     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)",
          "     * for the keys \"Enter\" or \"Space\"",
          "     *",
          "     * @param e {Event} Key event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"keyup\" event.<br/>\n Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n for the keys \"Enter\" or \"Space\"</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} Key event",
            "paramName": "e",
            "description": " Key event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 320,
          "column": 4,
          "index": 8648
        },
        "end": {
          "line": 331,
          "column": 5,
          "index": 8956
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "Event"
        }
      ],
      "appearsIn": []
    },
    "__executableBindingIds": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1663
        },
        "end": {
          "line": 63,
          "column": 32,
          "index": 1691
        }
      },
      "appearsIn": [
        "qx.ui.core.MExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    },
    "__semaphore": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1697
        },
        "end": {
          "line": 64,
          "column": 22,
          "index": 1715
        }
      },
      "appearsIn": [
        "qx.ui.core.MExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    },
    "__executeListenerId": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1721
        },
        "end": {
          "line": 65,
          "column": 29,
          "index": 1746
        }
      },
      "appearsIn": [
        "qx.ui.core.MExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    },
    "_bindableProperties": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Map} Set of properties, which will by synced from the command to the",
          "     *    including widget",
          "     *",
          "     * @lint ignoreReferenceField(_bindableProperties)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Set of properties, which will by synced from the command to the\n    including widget"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_bindableProperties)"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1941
        },
        "end": {
          "line": 77,
          "column": 6,
          "index": 2161
        }
      },
      "appearsIn": [
        "qx.ui.core.MExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    },
    "execute": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initiate the execute action.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initiate the execute action.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2220
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2491
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.core.MExecutable",
        "qx.ui.form.IExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    },
    "__onCommandExecute": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the execute event of the command.",
          "     *",
          "     * @param e {qx.event.type.Event} The execute event of the command.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the execute event of the command.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} The execute event of the command.",
            "paramName": "e",
            "description": " The execute event of the command.",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2646
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2912
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Event"
        }
      ],
      "appearsIn": [
        "qx.ui.core.MExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    },
    "_applyCommand": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 2941
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 4874
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": [
        "qx.ui.core.MExecutable"
      ],
      "mixin": "qx.ui.core.MExecutable"
    }
  },
  "statics": {}
}