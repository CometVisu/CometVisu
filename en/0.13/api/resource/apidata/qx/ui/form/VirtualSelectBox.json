{
  "version": 0.3,
  "lastModified": 1729101023632,
  "lastModifiedIso": "2024-10-16T17:50:23.632Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/form/VirtualSelectBox.js",
  "type": "class",
  "location": {
    "start": {
      "line": 41,
      "column": 0,
      "index": 1614
    },
    "end": {
      "line": 779,
      "column": 3,
      "index": 22288
    }
  },
  "className": "qx.ui.form.VirtualSelectBox",
  "jsdoc": {
    "raw": [
      "*",
      " * A form virtual widget which allows a single selection. Looks somewhat like",
      " * a normal button, but opens a virtual list of items to select when tapping",
      " * on it.",
      " *",
      " * @childControl spacer {qx.ui.core.Spacer} Flexible spacer widget.",
      " * @childControl atom {qx.ui.basic.Atom} Shows the text and icon of the content.",
      " * @childControl arrow {qx.ui.basic.Image} Shows the arrow to open the drop-down list.",
      " *",
      " * Item labels are plain text by default. Property <code>rich</code> can be used",
      " * to enable HTML formatting.",
      " *",
      " * Incremental search can be enabled by setting property <code>incrementalSearch</code>",
      " * to <code>true</code>. Highlightung of the search string is controlled by property",
      " * <code>highlightMode</code>. BEWARE that html highlighting sets property <code>rich</code>",
      " * automatically to <code>true</code>.",
      " *",
      " * With <code>highlightMode=='html'</code> item label parts and search value are all HTML-escaped.",
      " * If HTML-formatted item labels are used, this might lead to unexpected or undesirable (but save)",
      " * results. In this case you might want to override the various protected methods involved.",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A form virtual widget which allows a single selection. Looks somewhat like\n a normal button, but opens a virtual list of items to select when tapping\n on it.</p>"
      }
    ],
    "@childControl": [
      {
        "name": "@childControl",
        "body": "spacer {qx.ui.core.Spacer} Flexible spacer widget."
      },
      {
        "name": "@childControl",
        "body": "atom {qx.ui.basic.Atom} Shows the text and icon of the content."
      },
      {
        "name": "@childControl",
        "body": "arrow {qx.ui.basic.Image} Shows the arrow to open the drop-down list.\n Item labels are plain text by default. Property <code>rich</code> can be used\n to enable HTML formatting.\n Incremental search can be enabled by setting property <code>incrementalSearch</code>\n to <code>true</code>. Highlightung of the search string is controlled by property\n <code>highlightMode</code>. BEWARE that html highlighting sets property <code>rich</code>\n automatically to <code>true</code>.\n With <code>highlightMode=='html'</code> item label parts and search value are all HTML-escaped.\n If HTML-formatted item labels are used, this might lead to unexpected or undesirable (but save)\n results. In this case you might want to override the various protected methods involved."
      }
    ]
  },
  "superClass": "qx.ui.form.core.AbstractVirtualBox",
  "interfaces": [
    "qx.data.controller.ISelection",
    "qx.ui.form.IField"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "model"
      }
    ],
    "location": {
      "start": {
        "line": 45,
        "column": 2,
        "index": 1777
      },
      "end": {
        "line": 72,
        "column": 3,
        "index": 2600
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2641
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2712
        }
      },
      "json": {
        "refine": true,
        "init": "virtual-selectbox"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "width": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2737
        },
        "end": {
          "line": 85,
          "column": 5,
          "index": 2787
        }
      },
      "json": {
        "refine": true,
        "init": 120
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox",
        "qx.ui.core.LayoutItem"
      ]
    },
    "incrementalSearch": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2859
        },
        "end": {
          "line": 94,
          "column": 5,
          "index": 2967
        }
      },
      "json": {
        "apply": "_applyIncrementalSearch",
        "init": false,
        "check": "Boolean"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether or not to use incremental search.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether or not to use incremental search.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "plainMarkers": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 3089
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 3186
        }
      },
      "json": {
        "apply": "__applyMarkers",
        "init": [
          "|",
          "|"
        ],
        "check": "Array"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Array of non-HTML strings for opening an closing marker for incremental search highlighting",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Array of non-HTML strings for opening an closing marker for incremental search highlighting</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "htmlMarkers": {
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 3382
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 3480
        }
      },
      "json": {
        "apply": "__applyMarkers",
        "deferredInit": true,
        "check": "Array"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Array of HTML strings for opening an closing marker for incremental search highlighting.",
          "     * Initialized from 'list-search-highlight' theme if not set explicitly.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Array of HTML strings for opening an closing marker for incremental search highlighting.\n Initialized from 'list-search-highlight' theme if not set explicitly.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "rich": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3589
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3670
        }
      },
      "json": {
        "apply": "_applyRich",
        "check": "Boolean"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Setting rich to true sets both the select box atom and the list items to rich.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setting rich to true sets both the select box atom and the list items to rich.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "highlightMode": {
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 4016
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 4133
        }
      },
      "json": {
        "apply": "_applyHighlightMode",
        "init": "none",
        "check": [
          "plain",
          "html",
          "none"
        ]
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Define how to highlight the incremental search string.",
          "     *",
          "     * none: no highlighting (this is the default)",
          "     * plain: use characters from plainMarkers property",
          "     * html: use HTML for highlighting; this automatically calls <code>this.setRich(true)</code> and thus sets item labels to rich as well.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Define how to highlight the incremental search string.\n none: no highlighting (this is the default)\n plain: use characters from plainMarkers property\n html: use HTML for highlighting; this automatically calls <code>this.setRich(true)</code> and thus sets item labels to rich as well.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "selection": {
      "location": {
        "start": {
          "line": 139,
          "column": 4,
          "index": 4175
        },
        "end": {
          "line": 145,
          "column": 5,
          "index": 4335
        }
      },
      "json": {
        "check": "qx.data.Array",
        "event": "changeSelection",
        "apply": "_applySelection",
        "nullable": false,
        "deferredInit": true
      },
      "jsdoc": {
        "raw": [
          "* Current selected items. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Current selected items.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "events": {
    "changeSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * This event is fired as soon as the content of the selection property changes, but",
          "     * this is not equal to the change of the selection of the widget. If the selection",
          "     * of the widget changes, the content of the array stored in the selection property",
          "     * changes. This means you have to listen to the change event of the selection array",
          "     * to get an event as soon as the user changes the selected item.",
          "     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This event is fired as soon as the content of the selection property changes, but\n this is not equal to the change of the selection of the widget. If the selection\n of the widget changes, the content of the array stored in the selection property\n changes. This means you have to listen to the change event of the selection array\n to get an event as soon as the user changes the selected item.\n </p>\n<pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 157,
          "column": 4,
          "index": 4893
        },
        "end": {
          "line": 157,
          "column": 41,
          "index": 4930
        }
      }
    },
    "changeValue": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "* Fires after the value was modified "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after the value was modified</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 4983
        },
        "end": {
          "line": 160,
          "column": 37,
          "index": 5016
        }
      }
    }
  },
  "members": {
    "__searchValue": {
      "jsdoc": {
        "raw": [
          "* @type {String} The search value to {@link #__preselect} an item. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} The search value to {@link #__preselect} an item."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 165,
          "column": 4,
          "index": 5116
        },
        "end": {
          "line": 165,
          "column": 21,
          "index": 5133
        }
      },
      "appearsIn": []
    },
    "__searchTimer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {qx.event.Timer} The time which triggers the search for pre-selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.event.Timer} The time which triggers the search for pre-selection."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 170,
          "column": 4,
          "index": 5240
        },
        "end": {
          "line": 170,
          "column": 23,
          "index": 5259
        }
      },
      "appearsIn": []
    },
    "__bindings": {
      "jsdoc": {
        "raw": [
          "* @type {Array} Contains the id from all bindings. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array} Contains the id from all bindings."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 173,
          "column": 4,
          "index": 5326
        },
        "end": {
          "line": 173,
          "column": 20,
          "index": 5342
        }
      },
      "appearsIn": []
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @param selected {var|null} Item to select as value.",
          "     * @returns {null|TypeError} The status of this operation.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "selected {var|null} Item to select as value.",
            "paramName": "selected",
            "description": " Item to select as value.",
            "type": [
              "var",
              "null"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|TypeError} The status of this operation.",
            "type": "null|TypeError",
            "description": "The status of this operation."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 179,
          "column": 4,
          "index": 5487
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 5682
        }
      },
      "type": "function",
      "params": [
        {
          "name": "selected",
          "type": [
            "var",
            "null"
          ]
        }
      ],
      "returnType": {
        "type": "null|TypeError"
      },
      "appearsIn": [
        "qx.ui.form.IField"
      ]
    },
    "getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @returns {null|var} The currently selected item or null if there is none.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|var} The currently selected item or null if there is none.",
            "type": "null|var",
            "description": "The currently selected item or null if there is none."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 192,
          "column": 4,
          "index": 5786
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 5890
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "null|var"
      },
      "appearsIn": [
        "qx.ui.form.IField"
      ]
    },
    "resetValue": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 197,
          "column": 4,
          "index": 5897
        },
        "end": {
          "line": 199,
          "column": 5,
          "index": 5944
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.form.IField"
      ]
    },
    "syncWidget": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 5969
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 6050
        }
      },
      "type": "function",
      "params": [
        {
          "name": "jobs"
        }
      ],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_createChildControlImpl": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 214,
          "column": 4,
          "index": 6269
        },
        "end": {
          "line": 241,
          "column": 5,
          "index": 6913
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        },
        {
          "name": "hash"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox",
        "qx.ui.core.Widget"
      ]
    },
    "_getAction": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 244,
          "column": 4,
          "index": 6938
        },
        "end": {
          "line": 260,
          "column": 5,
          "index": 7439
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_addBindings": {
      "jsdoc": {
        "raw": [
          "*",
          "     * This method is called when the binding can be added to the",
          "     * widget. For e.q. bind the drop-down selection with the widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method is called when the binding can be added to the\n widget. For e.q. bind the drop-down selection with the widget.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 266,
          "column": 4,
          "index": 7598
        },
        "end": {
          "line": 282,
          "column": 5,
          "index": 8249
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_removeBindings": {
      "jsdoc": {
        "raw": [
          "*",
          "     * This method is called when the binding can be removed from the",
          "     * widget. For e.q. remove the bound drop-down selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method is called when the binding can be removed from the\n widget. For e.q. remove the bound drop-down selection.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 288,
          "column": 4,
          "index": 8404
        },
        "end": {
          "line": 293,
          "column": 5,
          "index": 8552
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onBlur": {
      "jsdoc": {
        "raw": [
          "",
          "    ---------------------------------------------------------------------------",
          "      EVENT LISTENERS",
          "    ---------------------------------------------------------------------------",
          "    "
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 301,
          "column": 4,
          "index": 8756
        },
        "end": {
          "line": 305,
          "column": 5,
          "index": 8844
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_handlePointer": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 308,
          "column": 4,
          "index": 8869
        },
        "end": {
          "line": 315,
          "column": 5,
          "index": 9027
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_handleKeyboard": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 318,
          "column": 4,
          "index": 9052
        },
        "end": {
          "line": 336,
          "column": 5,
          "index": 9490
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_onPointerOver": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"pointerover\" event.",
          "     *",
          "     * <ul>",
          "     * <li>Adds state \"hovered\"</li>",
          "     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state",
          "     *   is set)</li>",
          "     * </ul>",
          "     *",
          "     * @param event {qx.event.type.Pointer} Pointer event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"pointerover\" event.\n </p>\n<ul>\n <li>Adds state \"hovered\"</li>\n <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state\n   is set)</li>\n </ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} Pointer event",
            "paramName": "event",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 349,
          "column": 4,
          "index": 9795
        },
        "end": {
          "line": 360,
          "column": 5,
          "index": 10064
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onPointerOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener method for \"pointerout\" event.",
          "     *",
          "     * <ul>",
          "     * <li>Removes \"hovered\" state</li>",
          "     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state",
          "     *   is set)</li>",
          "     * </ul>",
          "     *",
          "     * @param event {qx.event.type.Pointer} Pointer event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener method for \"pointerout\" event.\n </p>\n<ul>\n <li>Removes \"hovered\" state</li>\n <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state\n   is set)</li>\n </ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} Pointer event",
            "paramName": "event",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 373,
          "column": 4,
          "index": 10369
        },
        "end": {
          "line": 384,
          "column": 5,
          "index": 10638
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_applySelection": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 393,
          "column": 4,
          "index": 10863
        },
        "end": {
          "line": 396,
          "column": 5,
          "index": 10999
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__preselect": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Preselects an item in the drop-down, when item starts with the",
          "     * __searchValue value.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Preselects an item in the drop-down, when item starts with the\n __searchValue value.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 408,
          "column": 4,
          "index": 11316
        },
        "end": {
          "line": 457,
          "column": 5,
          "index": 12733
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__convertKeyIdentifier": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Converts the keyIdentifier to a printable character e.q. <code>\"Space\"</code>",
          "     * to <code>\" \"</code>.",
          "     *",
          "     * @param keyIdentifier {String} The keyIdentifier to convert.",
          "     * @return {String} The converted keyIdentifier.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts the keyIdentifier to a printable character e.q. <code>\"Space\"</code>\n to <code>\" \"</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyIdentifier {String} The keyIdentifier to convert.",
            "paramName": "keyIdentifier",
            "description": " The keyIdentifier to convert.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The converted keyIdentifier.",
            "type": "string",
            "description": "The converted keyIdentifier."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 466,
          "column": 4,
          "index": 12996
        },
        "end": {
          "line": 472,
          "column": 5,
          "index": 13153
        }
      },
      "type": "function",
      "params": [
        {
          "name": "keyIdentifier",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "_updateSelectionValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Called when selection changes.",
          "     *",
          "     * @param event {qx.event.type.Data} {@link qx.data.Array} change event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called when selection changes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} {@link qx.data.Array} change event.",
            "paramName": "event",
            "description": " {@link qx.data.Array} change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 479,
          "column": 4,
          "index": 13298
        },
        "end": {
          "line": 483,
          "column": 5,
          "index": 13479
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "__filterValue": {
      "jsdoc": {
        "raw": [
          "",
          "    ---------------------------------------------------------------------------",
          "      INCREMENTAL SEARCH",
          "    ---------------------------------------------------------------------------",
          "    "
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 491,
          "column": 4,
          "index": 13686
        },
        "end": {
          "line": 491,
          "column": 23,
          "index": 13705
        }
      },
      "appearsIn": []
    },
    "__lastMatch": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 492,
          "column": 4,
          "index": 13711
        },
        "end": {
          "line": 492,
          "column": 19,
          "index": 13726
        }
      },
      "appearsIn": []
    },
    "__filterUpdateRunning": {
      "jsdoc": {
        "raw": [
          " prevent recursion problems when deleting unsucessful filtering"
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 494,
          "column": 4,
          "index": 13802
        },
        "end": {
          "line": 494,
          "column": 28,
          "index": 13826
        }
      },
      "appearsIn": []
    },
    "__filterInput": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 495,
          "column": 4,
          "index": 13832
        },
        "end": {
          "line": 495,
          "column": 23,
          "index": 13851
        }
      },
      "appearsIn": []
    },
    "__highlightMarkers": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 496,
          "column": 4,
          "index": 13857
        },
        "end": {
          "line": 496,
          "column": 28,
          "index": 13881
        }
      },
      "appearsIn": []
    },
    "_highlightFilterValueFunction": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 498,
          "column": 4,
          "index": 13888
        },
        "end": {
          "line": 498,
          "column": 39,
          "index": 13923
        }
      },
      "appearsIn": []
    },
    "_searchRegExp": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 499,
          "column": 4,
          "index": 13929
        },
        "end": {
          "line": 499,
          "column": 23,
          "index": 13948
        }
      },
      "appearsIn": []
    },
    "__addFilterInput": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 501,
          "column": 4,
          "index": 13955
        },
        "end": {
          "line": 538,
          "column": 5,
          "index": 15040
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__getHighlightStyleFromAppearance": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 540,
          "column": 4,
          "index": 15047
        },
        "end": {
          "line": 567,
          "column": 5,
          "index": 15966
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_searchMatch": {
      "jsdoc": {
        "raw": [
          " we use _searchRegExp here for efficiency"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 571,
          "column": 4,
          "index": 16098
        },
        "end": {
          "line": 573,
          "column": 5,
          "index": 16182
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item"
        },
        {
          "name": "filterValue"
        }
      ],
      "appearsIn": []
    },
    "_highlightFilterValuePlainFunction": {
      "jsdoc": {
        "raw": [
          " highlight plain"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 576,
          "column": 4,
          "index": 16212
        },
        "end": {
          "line": 585,
          "column": 5,
          "index": 16467
        }
      },
      "type": "function",
      "params": [
        {
          "name": "parts"
        }
      ],
      "appearsIn": []
    },
    "_highlightFilterValueHtmlFunction": {
      "jsdoc": {
        "raw": [
          " htmlEscape all label parts"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 588,
          "column": 4,
          "index": 16508
        },
        "end": {
          "line": 598,
          "column": 5,
          "index": 16906
        }
      },
      "type": "function",
      "params": [
        {
          "name": "parts"
        }
      ],
      "appearsIn": []
    },
    "_configureItemRich": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 600,
          "column": 4,
          "index": 16913
        },
        "end": {
          "line": 602,
          "column": 5,
          "index": 16971
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item"
        }
      ],
      "appearsIn": []
    },
    "_configureItemPlain": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 604,
          "column": 4,
          "index": 16978
        },
        "end": {
          "line": 606,
          "column": 5,
          "index": 17038
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item"
        }
      ],
      "appearsIn": []
    },
    "__updateDelegate": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 608,
          "column": 4,
          "index": 17045
        },
        "end": {
          "line": 671,
          "column": 5,
          "index": 19246
        }
      },
      "type": "function",
      "params": [
        {
          "name": "lastFilterValue"
        }
      ],
      "appearsIn": []
    },
    "__initIncrementalSearch": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 673,
          "column": 4,
          "index": 19253
        },
        "end": {
          "line": 694,
          "column": 5,
          "index": 19952
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyDelegate": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 696,
          "column": 4,
          "index": 19959
        },
        "end": {
          "line": 703,
          "column": 5,
          "index": 20254
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_applyRich": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 705,
          "column": 4,
          "index": 20261
        },
        "end": {
          "line": 720,
          "column": 5,
          "index": 20726
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyHighlightMode": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 722,
          "column": 4,
          "index": 20733
        },
        "end": {
          "line": 740,
          "column": 5,
          "index": 21349
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__applyMarkers": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 742,
          "column": 4,
          "index": 21356
        },
        "end": {
          "line": 753,
          "column": 5,
          "index": 21723
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyIncrementalSearch": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 755,
          "column": 4,
          "index": 21730
        },
        "end": {
          "line": 763,
          "column": 5,
          "index": 21981
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 766,
        "column": 2,
        "index": 21990
      },
      "end": {
        "line": 778,
        "column": 3,
        "index": 22284
      }
    }
  },
  "statics": {}
}