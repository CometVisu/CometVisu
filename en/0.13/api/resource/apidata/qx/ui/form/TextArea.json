{
  "version": 0.3,
  "lastModified": 1735341602691,
  "lastModifiedIso": "2024-12-27T23:20:02.691Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/form/TextArea.js",
  "type": "class",
  "location": {
    "start": {
      "line": 25,
      "column": 0,
      "index": 639
    },
    "end": {
      "line": 530,
      "column": 3,
      "index": 14703
    }
  },
  "className": "qx.ui.form.TextArea",
  "jsdoc": {
    "raw": [
      "*",
      " * The TextField is a multi-line text input field.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The TextField is a multi-line text input field.</p>"
      }
    ]
  },
  "superClass": "qx.ui.form.AbstractField",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "value"
      }
    ],
    "location": {
      "start": {
        "line": 37,
        "column": 2,
        "index": 979
      },
      "end": {
        "line": 43,
        "column": 3,
        "index": 1145
      }
    }
  },
  "properties": {
    "wrap": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1414
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1495
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "apply": "_applyWrap"
      },
      "jsdoc": {
        "raw": [
          "* Controls whether text wrap is activated or not. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Controls whether text wrap is activated or not.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "appearance": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1520
        },
        "end": {
          "line": 63,
          "column": 5,
          "index": 1582
        }
      },
      "json": {
        "refine": true,
        "init": "textarea"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "singleStep": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1669
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 1727
        }
      },
      "json": {
        "check": "Integer",
        "init": 20
      },
      "jsdoc": {
        "raw": [
          "* Factor for scrolling the <code>TextArea</code> with the mouse wheel. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Factor for scrolling the <code>TextArea</code> with the mouse wheel.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "minimalLineHeight": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1804
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 1908
        }
      },
      "json": {
        "check": "Integer",
        "apply": "_applyMinimalLineHeight",
        "init": 4
      },
      "jsdoc": {
        "raw": [
          "* Minimal line height. On default this is set to four lines. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Minimal line height. On default this is set to four lines.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "autoSize": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2393
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2483
        }
      },
      "json": {
        "check": "Boolean",
        "apply": "_applyAutoSize",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the <code>TextArea</code> should automatically adjust to",
          "     * the height of the content.",
          "     *",
          "     * To set the initial height, modify {@link #minHeight}. If you wish",
          "     * to set a minHeight below four lines of text, also set",
          "     * {@link #minimalLineHeight}. In order to limit growing to a certain",
          "     * height, set {@link #maxHeight} respectively. Please note that",
          "     * autoSize is ignored when the {@link #height} property is in use.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the <code>TextArea</code> should automatically adjust to\n the height of the content.\n To set the initial height, modify {@link #minHeight}. If you wish\n to set a minHeight below four lines of text, also set\n {@link #minimalLineHeight}. In order to limit growing to a certain\n height, set {@link #maxHeight} respectively. Please note that\n autoSize is ignored when the {@link #height} property is in use.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__areaClone": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2691
        },
        "end": {
          "line": 102,
          "column": 21,
          "index": 2708
        }
      },
      "appearsIn": []
    },
    "__areaHeight": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2714
        },
        "end": {
          "line": 103,
          "column": 22,
          "index": 2732
        }
      },
      "appearsIn": []
    },
    "__originalAreaHeight": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2738
        },
        "end": {
          "line": 104,
          "column": 30,
          "index": 2764
        }
      },
      "appearsIn": []
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2789
        },
        "end": {
          "line": 112,
          "column": 5,
          "index": 2895
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "overriddenFrom": "qx.ui.form.AbstractField",
      "appearsIn": [
        "qx.ui.form.AbstractField",
        "qx.ui.form.IStringForm",
        "qx.ui.form.IField"
      ]
    },
    "_onRoll": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles the roll for scrolling the <code>TextArea</code>.",
          "     *",
          "     * @param e {qx.event.type.Roll} roll event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the roll for scrolling the <code>TextArea</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Roll} roll event.",
            "paramName": "e",
            "description": " roll event.",
            "type": "qx.event.type.Roll"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3039
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 3466
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Roll"
        }
      ],
      "appearsIn": []
    },
    "_onResize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * When the element resizes we throw away the clone and trigger autosize again, otherwise the clone would have",
          "     * another width and the autosize calculation would be faulty.",
          "     *",
          "     * @param e {qx.event.type.Data} resize event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the element resizes we throw away the clone and trigger autosize again, otherwise the clone would have\n another width and the autosize calculation would be faulty.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} resize event.",
            "paramName": "e",
            "description": " resize event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3729
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 3883
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "__autoSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adjust height of <code>TextArea</code> so that content fits without scroll bar.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adjust height of <code>TextArea</code> so that content fits without scroll bar.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 162,
          "column": 4,
          "index": 4191
        },
        "end": {
          "line": 201,
          "column": 5,
          "index": 5499
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getAreaHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get actual height of <code>TextArea</code>",
          "     *",
          "     * @return {Integer} Height of <code>TextArea</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get actual height of <code>TextArea</code></p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Height of <code>TextArea</code>",
            "type": "Integer",
            "description": "Height of <code>TextArea</code>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 208,
          "column": 4,
          "index": 5636
        },
        "end": {
          "line": 210,
          "column": 5,
          "index": 5701
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "_setAreaHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set actual height of <code>TextArea</code>",
          "     *",
          "     * @param height {Integer} Desired height of <code>TextArea</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set actual height of <code>TextArea</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "height {Integer} Desired height of <code>TextArea</code>",
            "paramName": "height",
            "description": " Desired height of <code>TextArea</code>",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 217,
          "column": 4,
          "index": 5852
        },
        "end": {
          "line": 231,
          "column": 5,
          "index": 6374
        }
      },
      "type": "function",
      "params": [
        {
          "name": "height",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_getScrolledAreaHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get scrolled area height. Equals the total height of the <code>TextArea</code>,",
          "     * as if no scroll-bar was visible.",
          "     *",
          "     * @return {Integer} Height of scrolled area",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get scrolled area height. Equals the total height of the <code>TextArea</code>,\n as if no scroll-bar was visible.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Height of scrolled area",
            "type": "Integer",
            "description": "Height of scrolled area"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 6580
        },
        "end": {
          "line": 306,
          "column": 5,
          "index": 8910
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "__getAreaClone": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the area clone.",
          "     *",
          "     * @return {Element|null} DOM Element or <code>null</code> if there is no",
          "     * original element",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the area clone.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element|null} DOM Element or <code>null</code> if there is no\n original element",
            "type": "Element|null",
            "description": "DOM Element or <code>null</code> if there is no\n original element"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 314,
          "column": 4,
          "index": 9073
        },
        "end": {
          "line": 317,
          "column": 5,
          "index": 9199
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Element|null"
      },
      "appearsIn": []
    },
    "__createAreaClone": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates and prepares the area clone.",
          "     *",
          "     * @return {Element} Element",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates and prepares the area clone.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} Element",
            "type": "Element",
            "description": "Element"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 324,
          "column": 4,
          "index": 9306
        },
        "end": {
          "line": 371,
          "column": 5,
          "index": 10410
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Element"
      },
      "appearsIn": []
    },
    "__scrollCloneToBottom": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scroll <code>TextArea</code> to bottom. That way, scrollTop reflects the height",
          "     * of the <code>TextArea</code>.",
          "     *",
          "     * @param clone {Element} The <code>TextArea</code> to scroll",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scroll <code>TextArea</code> to bottom. That way, scrollTop reflects the height\n of the <code>TextArea</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clone {Element} The <code>TextArea</code> to scroll",
            "paramName": "clone",
            "description": " The <code>TextArea</code> to scroll",
            "type": "Element"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 379,
          "column": 4,
          "index": 10630
        },
        "end": {
          "line": 384,
          "column": 5,
          "index": 10763
        }
      },
      "type": "function",
      "params": [
        {
          "name": "clone",
          "type": "Element"
        }
      ],
      "appearsIn": []
    },
    "_createInputElement": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 393,
          "column": 4,
          "index": 10979
        },
        "end": {
          "line": 398,
          "column": 5,
          "index": 11116
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.form.AbstractField",
      "appearsIn": [
        "qx.ui.form.AbstractField"
      ]
    },
    "_applyWrap": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 407,
          "column": 4,
          "index": 11341
        },
        "end": {
          "line": 414,
          "column": 5,
          "index": 11598
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyMinimalLineHeight": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 417,
          "column": 4,
          "index": 11627
        },
        "end": {
          "line": 419,
          "column": 5,
          "index": 11701
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyAutoSize": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 422,
          "column": 4,
          "index": 11730
        },
        "end": {
          "line": 445,
          "column": 5,
          "index": 12587
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyDimension": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 448,
          "column": 4,
          "index": 12616
        },
        "end": {
          "line": 458,
          "column": 5,
          "index": 12854
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": [
        "qx.ui.core.LayoutItem"
      ]
    },
    "__forceRewrap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Force rewrapping of text.",
          "     *",
          "     * The distribution of characters depends on the space available.",
          "     * Unfortunately, browsers do not reliably (or not at all) rewrap text when",
          "     * the size of the text area changes.",
          "     *",
          "     * This method is called on change of the area's size.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Force rewrapping of text.\n The distribution of characters depends on the space available.\n Unfortunately, browsers do not reliably (or not at all) rewrap text when\n the size of the text area changes.\n This method is called on change of the area's size.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 469,
          "column": 4,
          "index": 13175
        },
        "end": {
          "line": 484,
          "column": 5,
          "index": 13630
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__warnAutoSizeAndHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Warn when both autoSize and height property are set.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Warn when both autoSize and height property are set.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 490,
          "column": 4,
          "index": 13720
        },
        "end": {
          "line": 498,
          "column": 5,
          "index": 14015
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getContentHint": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 507,
          "column": 4,
          "index": 14228
        },
        "end": {
          "line": 521,
          "column": 5,
          "index": 14577
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.form.AbstractField",
      "appearsIn": [
        "qx.ui.form.AbstractField",
        "qx.ui.core.Widget"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 524,
        "column": 2,
        "index": 14586
      },
      "end": {
        "line": 529,
        "column": 3,
        "index": 14699
      }
    }
  },
  "statics": {}
}