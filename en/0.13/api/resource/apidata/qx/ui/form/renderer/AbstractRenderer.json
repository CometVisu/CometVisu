{
  "version": 0.3,
  "lastModified": 1735222257014,
  "lastModifiedIso": "2024-12-26T14:10:57.014Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/form/renderer/AbstractRenderer.js",
  "type": "class",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 869
    },
    "end": {
      "line": 205,
      "column": 3,
      "index": 5518
    }
  },
  "className": "qx.ui.form.renderer.AbstractRenderer",
  "jsdoc": {
    "raw": [
      "*",
      " * Abstract renderer for {@link qx.ui.form.Form}. This abstract renderer should",
      " * be the superclass of all form renderer. It takes the form, which is",
      " * supplied as constructor parameter and configures itself. So if you need to",
      " * set some additional information on your renderer before adding the widgets,",
      " * be sure to do that before calling this.base(arguments, form).",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Abstract renderer for {@link qx.ui.form.Form}. This abstract renderer should\n be the superclass of all form renderer. It takes the form, which is\n supplied as constructor parameter and configures itself. So if you need to\n set some additional information on your renderer before adding the widgets,\n be sure to do that before calling this.base(arguments, form).</p>"
      }
    ]
  },
  "isSingleton": false,
  "abstract": true,
  "superClass": "qx.ui.core.Widget",
  "interfaces": [
    "qx.ui.form.renderer.IFormRenderer"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "form"
      }
    ],
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 1094
      },
      "end": {
        "line": 53,
        "column": 3,
        "index": 1491
      }
    }
  },
  "properties": {
    "labelSuffix": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1620
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1736
        }
      },
      "json": {
        "check": "String",
        "init": " :",
        "event": "changeLabelSuffix",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * A string that is appended to the label if it is not empty.",
          "     * Defaults to \" :\"",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>A string that is appended to the label if it is not empty.\n Defaults to \" :\"</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "requiredSuffix": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1918
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 2073
        }
      },
      "json": {
        "check": "String",
        "init": " <span style='color:red'>*</span> ",
        "event": "changeRequiredSuffix",
        "nullable": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * A string that is appended to the label and the label suffix if the corresponding",
          "     * form field is mandatory. Defaults to space plus a red asterisk.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>A string that is appended to the label and the label suffix if the corresponding\n form field is mandatory. Defaults to space plus a red asterisk.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "_names": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2097
        },
        "end": {
          "line": 80,
          "column": 16,
          "index": 2109
        }
      },
      "appearsIn": []
    },
    "_form": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2115
        },
        "end": {
          "line": 81,
          "column": 15,
          "index": 2126
        }
      },
      "appearsIn": []
    },
    "_labels": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2132
        },
        "end": {
          "line": 82,
          "column": 17,
          "index": 2145
        }
      },
      "appearsIn": []
    },
    "_render": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Renders the form: adds the items and buttons.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Renders the form: adds the items and buttons.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2221
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 2790
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onFormChange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler responsible for updating the rendered widget as soon as the",
          "     * form changes.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler responsible for updating the rendered widget as soon as the\n form changes.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 2909
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3137
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_connectVisibility": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper to bind the item's visibility to the label's visibility.",
          "     * @param item {qx.ui.core.Widget} The form element.",
          "     * @param label {qx.ui.basic.Label} The label for the form element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to bind the item's visibility to the label's visibility.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The form element.",
            "paramName": "item",
            "description": " The form element.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "label {qx.ui.basic.Label} The label for the form element.",
            "paramName": "label",
            "description": " The label for the form element.",
            "type": "qx.ui.basic.Label"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3360
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3498
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "label",
          "type": "qx.ui.basic.Label"
        }
      ],
      "appearsIn": []
    },
    "_onChangeLocale": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Locale change event handler",
          "     *",
          "     * @signature function(e)",
          "     * @param e {Event} the change event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Locale change event handler</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(e)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} the change event",
            "paramName": "e",
            "description": " the change event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 3634
        },
        "end": {
          "line": 153,
          "column": 6,
          "index": 4074
        }
      },
      "appearsIn": []
    },
    "_createLabelText": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates the label text for the given form item.",
          "     *",
          "     * @param name {String} The content of the label without the",
          "     *   trailing * and :",
          "     * @param item {qx.ui.form.IForm} The item, which has the required state.",
          "     * @return {String} The text for the given item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the label text for the given form item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} The content of the label without the\n   trailing * and :",
            "paramName": "name",
            "description": " The content of the label without the\n   trailing * and :",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "item {qx.ui.form.IForm} The item, which has the required state.",
            "paramName": "item",
            "description": " The item, which has the required state.",
            "type": "qx.ui.form.IForm"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The text for the given item.",
            "type": "string",
            "description": "The text for the given item."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4381
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 4766
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "item",
          "type": "qx.ui.form.IForm"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "addItems": {
      "jsdoc": {
        "raw": [
          " interface implementation"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 4805
        },
        "end": {
          "line": 178,
          "column": 5,
          "index": 4889
        }
      },
      "type": "function",
      "params": [
        {
          "name": "items"
        },
        {
          "name": "names"
        },
        {
          "name": "title"
        }
      ],
      "appearsIn": [
        "qx.ui.form.renderer.IFormRenderer"
      ]
    },
    "addButton": {
      "jsdoc": {
        "raw": [
          " interface implementation"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 4928
        },
        "end": {
          "line": 183,
          "column": 5,
          "index": 5000
        }
      },
      "type": "function",
      "params": [
        {
          "name": "button"
        }
      ],
      "appearsIn": [
        "qx.ui.form.renderer.IFormRenderer"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 192,
        "column": 2,
        "index": 5196
      },
      "end": {
        "line": 204,
        "column": 3,
        "index": 5514
      }
    }
  },
  "statics": {}
}