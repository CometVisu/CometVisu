{
  "version": 0.3,
  "lastModified": 1722153601927,
  "lastModifiedIso": "2024-07-28T08:00:01.927Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/form/VirtualComboBox.js",
  "type": "class",
  "location": {
    "start": {
      "line": 27,
      "column": 0,
      "index": 754
    },
    "end": {
      "line": 390,
      "column": 3,
      "index": 11134
    }
  },
  "className": "qx.ui.form.VirtualComboBox",
  "jsdoc": {
    "raw": [
      "*",
      " * A virtual form widget that allows text entry as well as selection from a",
      " * drop-down.",
      " *",
      " * @childControl textfield {qx.ui.form.TextField} Field for text entry.",
      " * @childControl button {qx.ui.form.Button} Opens the drop-down.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A virtual form widget that allows text entry as well as selection from a\n drop-down.</p>"
      }
    ],
    "@childControl": [
      {
        "name": "@childControl",
        "body": "textfield {qx.ui.form.TextField} Field for text entry."
      },
      {
        "name": "@childControl",
        "body": "button {qx.ui.form.Button} Opens the drop-down."
      }
    ]
  },
  "superClass": "qx.ui.form.core.AbstractVirtualBox",
  "interfaces": [
    "qx.ui.form.IStringForm"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "model"
      }
    ],
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 891
      },
      "end": {
        "line": 57,
        "column": 3,
        "index": 1812
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1853
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1923
        }
      },
      "json": {
        "refine": true,
        "init": "virtual-combobox"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "width": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1948
        },
        "end": {
          "line": 70,
          "column": 5,
          "index": 1998
        }
      },
      "json": {
        "refine": true,
        "init": 120
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox",
        "qx.ui.core.LayoutItem"
      ]
    },
    "value": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2069
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 2132
        }
      },
      "json": {
        "nullable": true,
        "event": "changeValue"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The currently selected or entered value.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The currently selected or entered value.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "placeholder": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2317
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2415
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "apply": "_applyPlaceholder"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * String value which will be shown as a hint if the field is all of:",
          "     * unset, unfocused and enabled. Set to null to not show a placeholder",
          "     * text.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>String value which will be shown as a hint if the field is all of:\n unset, unfocused and enabled. Set to null to not show a placeholder\n text.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "defaultFormat": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2901
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 2987
        }
      },
      "json": {
        "check": "Function",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Formatting function that will be applied to the value of a selected model",
          "     * item's label before it is written to the text field. Also used to find",
          "     * and preselect the first list entry that begins with the current content",
          "     * of the text field when the drop-down list is opened. Can be used e.g. to",
          "     * strip HTML tags from rich-formatted item labels. The function will be",
          "     * called with the item's label (String) as the only parameter.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Formatting function that will be applied to the value of a selected model\n item's label before it is written to the text field. Also used to find\n and preselect the first list entry that begins with the current content\n of the text field when the drop-down list is opened. Can be used e.g. to\n strip HTML tags from rich-formatted item labels. The function will be\n called with the item's label (String) as the only parameter.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__localBindId": {
      "jsdoc": {
        "raw": [
          "* @type {var} Binding id between local value and text field value. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{var} Binding id between local value and text field value."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 3087
        },
        "end": {
          "line": 108,
          "column": 23,
          "index": 3106
        }
      },
      "appearsIn": []
    },
    "__textFieldBindId": {
      "jsdoc": {
        "raw": [
          "* @type {var} Binding id between text field value and local value. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{var} Binding id between text field value and local value."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3189
        },
        "end": {
          "line": 111,
          "column": 27,
          "index": 3212
        }
      },
      "appearsIn": []
    },
    "__selection": {
      "jsdoc": {
        "raw": [
          "* @type {qx.data.Array} the drop-down selection. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.data.Array} the drop-down selection."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3277
        },
        "end": {
          "line": 114,
          "column": 21,
          "index": 3294
        }
      },
      "appearsIn": []
    },
    "__ignoreChangeSelection": {
      "jsdoc": {
        "raw": [
          "* @type {Boolean} Indicator to ignore selection changes from the list. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Indicator to ignore selection changes from the list."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3381
        },
        "end": {
          "line": 117,
          "column": 33,
          "index": 3410
        }
      },
      "appearsIn": []
    },
    "getTextSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the current selection. This method only works if the widget is",
          "     * already created and added to the document.",
          "     *",
          "     * @return {String|null} The current text selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current selection. This method only works if the widget is\n already created and added to the document.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} The current text selection.",
            "type": "String|null",
            "description": "The current text selection."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3817
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3910
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "String|null"
      },
      "appearsIn": []
    },
    "getTextSelectionLength": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the current selection length. This method only works if the",
          "     * widget is already created and added to the document.",
          "     *",
          "     * @return {Integer|null} The current text selection length.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current selection length. This method only works if the\n widget is already created and added to the document.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer|null} The current text selection length.",
            "type": "Integer|null",
            "description": "The current text selection length."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 141,
          "column": 4,
          "index": 4140
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 4245
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer|null"
      },
      "appearsIn": []
    },
    "setTextSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the selection to the given start and end (zero-based). If no end",
          "     * value is given the selection will extend to the end of the textfield's",
          "     * content. This method only works if the widget is already created and",
          "     * added to the document.",
          "     *",
          "     * @param start {Integer} Start of the selection (zero-based).",
          "     * @param end {Integer} End of the selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the selection to the given start and end (zero-based). If no end\n value is given the selection will extend to the end of the textfield's\n content. This method only works if the widget is already created and\n added to the document.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "start {Integer} Start of the selection (zero-based).",
            "paramName": "start",
            "description": " Start of the selection (zero-based).",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "end {Integer} End of the selection.",
            "paramName": "end",
            "description": " End of the selection.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 154,
          "column": 4,
          "index": 4652
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 4758
        }
      },
      "type": "function",
      "params": [
        {
          "name": "start",
          "type": "Integer"
        },
        {
          "name": "end",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "clearTextSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Clears the current selection. This method only works if the widget is",
          "     * already created and added to the document.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears the current selection. This method only works if the widget is\n already created and added to the document.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 162,
          "column": 4,
          "index": 4908
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 4998
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "selectAllText": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Selects the whole content.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects the whole content.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 5055
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 5135
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "resetAllTextSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Clear any text selection, then select all text.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clear any text selection, then select all text.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 5213
        },
        "end": {
          "line": 179,
          "column": 5,
          "index": 5305
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "tabFocus": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 182,
          "column": 4,
          "index": 5330
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 5470
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "focus": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 190,
          "column": 4,
          "index": 5495
        },
        "end": {
          "line": 193,
          "column": 5,
          "index": 5598
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_createChildControlImpl": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 5817
        },
        "end": {
          "line": 224,
          "column": 5,
          "index": 6474
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        },
        {
          "name": "hash"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox",
        "qx.ui.core.Widget"
      ]
    },
    "_beforeOpen": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 227,
          "column": 4,
          "index": 6499
        },
        "end": {
          "line": 229,
          "column": 5,
          "index": 6553
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_handleKeyboard": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 232,
          "column": 4,
          "index": 6578
        },
        "end": {
          "line": 244,
          "column": 5,
          "index": 6870
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_getAction": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 6895
        },
        "end": {
          "line": 257,
          "column": 5,
          "index": 7260
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_handlePointer": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 266,
          "column": 4,
          "index": 7482
        },
        "end": {
          "line": 275,
          "column": 5,
          "index": 7654
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event"
        }
      ],
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "__onSelectionChange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler to synchronize selection changes with the value property.",
          "     *",
          "     * @param event {qx.event.type.Data} The change event from the qx.data.Array.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler to synchronize selection changes with the value property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The change event from the qx.data.Array.",
            "paramName": "event",
            "description": " The change event from the qx.data.Array.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 282,
          "column": 4,
          "index": 7839
        },
        "end": {
          "line": 292,
          "column": 5,
          "index": 8111
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_applyPlaceholder": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 300,
          "column": 4,
          "index": 8335
        },
        "end": {
          "line": 302,
          "column": 5,
          "index": 8435
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__selectFirstMatch": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Selects the first list item that starts with the text field's value.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects the first list item that starts with the text field's value.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 313,
          "column": 4,
          "index": 8730
        },
        "end": {
          "line": 346,
          "column": 5,
          "index": 9953
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__convertValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper method to convert the model item to a String.",
          "     *",
          "     * @param modelItem {var} The model item to convert.",
          "     * @return {String} The converted value.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to convert the model item to a String.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "modelItem {var} The model item to convert.",
            "paramName": "modelItem",
            "description": " The model item to convert.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The converted value.",
            "type": "string",
            "description": "The converted value."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 354,
          "column": 4,
          "index": 10145
        },
        "end": {
          "line": 379,
          "column": 5,
          "index": 10876
        }
      },
      "type": "function",
      "params": [
        {
          "name": "modelItem",
          "type": "var"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 382,
        "column": 2,
        "index": 10885
      },
      "end": {
        "line": 389,
        "column": 3,
        "index": 11130
      }
    }
  },
  "statics": {}
}