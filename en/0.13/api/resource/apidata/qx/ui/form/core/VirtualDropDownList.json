{
  "version": 0.3,
  "lastModified": 1722153601927,
  "lastModifiedIso": "2024-07-28T08:00:01.927Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/form/core/VirtualDropDownList.js",
  "type": "class",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 644
    },
    "end": {
      "line": 598,
      "column": 3,
      "index": 16791
    }
  },
  "className": "qx.ui.form.core.VirtualDropDownList",
  "jsdoc": {
    "raw": [
      "*",
      " * A drop-down (popup) widget which contains a virtual list for selection.",
      " *",
      " * @childControl list {qx.ui.list.List} The virtual list.",
      " *",
      " * @internal",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A drop-down (popup) widget which contains a virtual list for selection.</p>"
      }
    ],
    "@childControl": [
      {
        "name": "@childControl",
        "body": "list {qx.ui.list.List} The virtual list."
      }
    ],
    "@internal": [
      {
        "name": "@internal",
        "body": ""
      }
    ]
  },
  "superClass": "qx.ui.popup.Popup",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "target"
      }
    ],
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 861
      },
      "end": {
        "line": 52,
        "column": 3,
        "index": 1450
      }
    }
  },
  "properties": {
    "autoHide": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1491
        },
        "end": {
          "line": 59,
          "column": 5,
          "index": 1546
        }
      },
      "json": {
        "refine": true,
        "init": false
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.popup.Popup"
      ]
    },
    "keepActive": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1571
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1627
        }
      },
      "json": {
        "refine": true,
        "init": true
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "selection": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1669
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1829
        }
      },
      "json": {
        "check": "qx.data.Array",
        "event": "changeSelection",
        "apply": "_applySelection",
        "nullable": false,
        "deferredInit": true
      },
      "jsdoc": {
        "raw": [
          "* Current selected items. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Current selected items.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "allowGrowDropDown": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 1910
        },
        "end": {
          "line": 85,
          "column": 5,
          "index": 2069
        }
      },
      "json": {
        "init": false,
        "nullable": false,
        "check": "Boolean",
        "apply": "_adjustSize",
        "event": "changeAllowGrowDropDown"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Allow the drop-down to grow wider than its parent.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Allow the drop-down to grow wider than its parent.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "events": {
    "changeSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * This event is fired as soon as the content of the selection property changes, but",
          "     * this is not equal to the change of the selection of the widget. If the selection",
          "     * of the widget changes, the content of the array stored in the selection property",
          "     * changes. This means you have to listen to the change event of the selection array",
          "     * to get an event as soon as the user changes the selected item.",
          "     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This event is fired as soon as the content of the selection property changes, but\n this is not equal to the change of the selection of the widget. If the selection\n of the widget changes, the content of the array stored in the selection property\n changes. This means you have to listen to the change event of the selection array\n to get an event as soon as the user changes the selected item.\n </p>\n<pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2627
        },
        "end": {
          "line": 97,
          "column": 41,
          "index": 2664
        }
      }
    }
  },
  "members": {
    "_target": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.form.core.AbstractVirtualBox} The composite widget. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.form.core.AbstractVirtualBox} The composite widget."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2764
        },
        "end": {
          "line": 102,
          "column": 17,
          "index": 2777
        }
      },
      "appearsIn": []
    },
    "_preselected": {
      "jsdoc": {
        "raw": [
          "* @type {var} The pre-selected model item. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{var} The pre-selected model item."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2836
        },
        "end": {
          "line": 105,
          "column": 22,
          "index": 2854
        }
      },
      "appearsIn": []
    },
    "__ignoreSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Boolean} Indicator to ignore selection changes from the",
          "     * {@link #selection} array.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Indicator to ignore selection changes from the\n {@link #selection} array."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 2980
        },
        "end": {
          "line": 111,
          "column": 28,
          "index": 3004
        }
      },
      "appearsIn": []
    },
    "__ignoreListSelection": {
      "jsdoc": {
        "raw": [
          "* @type {Boolean} Indicator to ignore selection changes from the list. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Indicator to ignore selection changes from the list."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3091
        },
        "end": {
          "line": 114,
          "column": 32,
          "index": 3119
        }
      },
      "appearsIn": []
    },
    "__defaultSelection": {
      "jsdoc": {
        "raw": [
          "* @type {qx.data.Array} The initial selection array. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.data.Array} The initial selection array."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3188
        },
        "end": {
          "line": 117,
          "column": 28,
          "index": 3212
        }
      },
      "appearsIn": []
    },
    "__cachedMaxListItemWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * When the drop-down is allowed to grow wider than its parent,",
          "     * this member variable will contain the cached maximum list item width in pixels.",
          "     * This variable gets updated whenever the model or model length changes.",
          "     *",
          "     * @type {Number}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the drop-down is allowed to grow wider than its parent,\n this member variable will contain the cached maximum list item width in pixels.\n This variable gets updated whenever the model or model length changes.</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Number}"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3497
        },
        "end": {
          "line": 126,
          "column": 31,
          "index": 3524
        }
      },
      "appearsIn": []
    },
    "open": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Shows the drop-down.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the drop-down.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3767
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 3846
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "close": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Hides the drop-down.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Hides the drop-down.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 145,
          "column": 4,
          "index": 3897
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 3931
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "setPreselected": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Pre-selects the drop-down item corresponding to the given model object.",
          "     *",
          "     * @param modelItem {Object} Item to be pre-selected.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Pre-selects the drop-down item corresponding to the given model object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "modelItem {Object} Item to be pre-selected.",
            "paramName": "modelItem",
            "description": " Item to be pre-selected.",
            "type": "Record<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 154,
          "column": 4,
          "index": 4098
        },
        "end": {
          "line": 162,
          "column": 5,
          "index": 4455
        }
      },
      "type": "function",
      "params": [
        {
          "name": "modelItem",
          "type": "Record<any, any>"
        }
      ],
      "appearsIn": []
    },
    "_createChildControlImpl": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4674
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5704
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        },
        {
          "name": "hash"
        }
      ],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_handleKeyboard": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles the complete keyboard events dispatched on the widget.",
          "     *",
          "     * @param event {qx.event.type.KeySequence} The keyboard event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the complete keyboard events dispatched on the widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.KeySequence} The keyboard event.",
            "paramName": "event",
            "description": " The keyboard event.",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 218,
          "column": 4,
          "index": 6069
        },
        "end": {
          "line": 229,
          "column": 5,
          "index": 6405
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.KeySequence"
        }
      ],
      "appearsIn": []
    },
    "_handlePointer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles all mouse events dispatched on the widget.",
          "     *",
          "     * @param event {qx.event.type.Mouse} The mouse event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles all mouse events dispatched on the widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Mouse} The mouse event.",
            "paramName": "event",
            "description": " The mouse event.",
            "type": "qx.event.type.Mouse"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 236,
          "column": 4,
          "index": 6552
        },
        "end": {
          "line": 238,
          "column": 5,
          "index": 6615
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Mouse"
        }
      ],
      "appearsIn": []
    },
    "__onChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the local selection change. The method is responsible for",
          "     * the synchronization between the own selection and the selection",
          "     * form the drop-down.",
          "     *",
          "     * @param event {qx.event.type.Data} The data event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the local selection change. The method is responsible for\n the synchronization between the own selection and the selection\n form the drop-down.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The data event.",
            "paramName": "event",
            "description": " The data event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 6877
        },
        "end": {
          "line": 262,
          "column": 5,
          "index": 7368
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onListChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the selection change on the list. The method is responsible",
          "     * for the synchronization between the list selection and the own selection.",
          "     *",
          "     * @param event {qx.event.type.Data} The data event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the selection change on the list. The method is responsible\n for the synchronization between the list selection and the own selection.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The data event.",
            "paramName": "event",
            "description": " The data event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 270,
          "column": 4,
          "index": 7615
        },
        "end": {
          "line": 284,
          "column": 5,
          "index": 8049
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "__onChangeVisibility": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the own visibility changes. The method is responsible that",
          "     * the list selects the current selected item.",
          "     *",
          "     * @param event {qx.event.type.Data} The event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the own visibility changes. The method is responsible that\n the list selects the current selected item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The event.",
            "paramName": "event",
            "description": " The event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 292,
          "column": 4,
          "index": 8260
        },
        "end": {
          "line": 303,
          "column": 5,
          "index": 8649
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onChangeModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the model change event.",
          "     * Called when the whole model changes, not when its length changes.",
          "     *",
          "     * @param event {qx.event.type.Data} The change event.",
          "     * @protected",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the model change event.\n Called when the whole model changes, not when its length changes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The change event.",
            "paramName": "event",
            "description": " The change event.",
            "type": "qx.event.type.Data"
          }
        ],
        "@protected": [
          {
            "name": "@protected",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 312,
          "column": 4,
          "index": 8872
        },
        "end": {
          "line": 318,
          "column": 5,
          "index": 9022
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onChangeModelLength": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the model length change event.",
          "     * Called whenever items get added or removed from the model,",
          "     * not when the model itself changes.",
          "     *",
          "     * @param event {qx.event.type.Data}",
          "     * @protected",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the model length change event.\n Called whenever items get added or removed from the model,\n not when the model itself changes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data}",
            "paramName": "event",
            "type": "qx.event.type.Data"
          }
        ],
        "@protected": [
          {
            "name": "@protected",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 328,
          "column": 4,
          "index": 9269
        },
        "end": {
          "line": 334,
          "column": 5,
          "index": 9425
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onChangeDelegate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the delegate change event.",
          "     *",
          "     * @param event {qx.event.type.Data} The change event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the delegate change event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The change event.",
            "paramName": "event",
            "description": " The change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 341,
          "column": 4,
          "index": 9560
        },
        "end": {
          "line": 343,
          "column": 5,
          "index": 9631
        }
      },
      "type": "function",
      "params": [
        {
          "name": "event",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_applySelection": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 352,
          "column": 4,
          "index": 9856
        },
        "end": {
          "line": 363,
          "column": 5,
          "index": 10179
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__selectPreselected": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper method to select the current preselected item, also closes the",
          "     * drop-down.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to select the current preselected item, also closes the\n drop-down.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 375,
          "column": 4,
          "index": 10493
        },
        "end": {
          "line": 382,
          "column": 5,
          "index": 10721
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__synchronizeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper method to synchronize both selection. The target selection has",
          "     * the same selection like the source selection after the synchronization.",
          "     *",
          "     * @param source {qx.data.Array} The source selection.",
          "     * @param target {qx.data.Array} The target selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to synchronize both selection. The target selection has\n the same selection like the source selection after the synchronization.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "source {qx.data.Array} The source selection.",
            "paramName": "source",
            "description": " The source selection.",
            "type": "qx.data.Array"
          },
          {
            "name": "@param",
            "body": "target {qx.data.Array} The target selection.",
            "paramName": "target",
            "description": " The target selection.",
            "type": "qx.data.Array"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 391,
          "column": 4,
          "index": 11025
        },
        "end": {
          "line": 408,
          "column": 5,
          "index": 11704
        }
      },
      "type": "function",
      "params": [
        {
          "name": "source",
          "type": "qx.data.Array"
        },
        {
          "name": "target",
          "type": "qx.data.Array"
        }
      ],
      "appearsIn": []
    },
    "_adjustSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adjust the drop-down to the available width and height, by calling",
          "     * {@link #_adjustWidth} and {@link #_adjustHeight}.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adjust the drop-down to the available width and height, by calling\n {@link #<em>adjustWidth} and {@link #</em>adjustHeight}.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 414,
          "column": 4,
          "index": 11858
        },
        "end": {
          "line": 422,
          "column": 5,
          "index": 12062
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_adjustWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adjust the drop-down to the available width. The width is limited by",
          "     * the current width from the _target, unless allowGrowDropDown is true.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adjust the drop-down to the available width. The width is limited by\n the current width from the _target, unless allowGrowDropDown is true.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 428,
          "column": 4,
          "index": 12238
        },
        "end": {
          "line": 445,
          "column": 5,
          "index": 12809
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_adjustHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adjust the drop-down to the available height. Ensure that the list",
          "     * is never bigger that the max list height and the available space",
          "     * in the viewport.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adjust the drop-down to the available height. Ensure that the list\n is never bigger that the max list height and the available space\n in the viewport.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 452,
          "column": 4,
          "index": 13002
        },
        "end": {
          "line": 476,
          "column": 5,
          "index": 13680
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getAvailableHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Calculates the available height in the viewport.",
          "     *",
          "     * @return {Integer|null} Available height in the viewport.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the available height in the viewport.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer|null} Available height in the viewport.",
            "type": "Integer|null",
            "description": "Available height in the viewport."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 483,
          "column": 4,
          "index": 13830
        },
        "end": {
          "line": 496,
          "column": 5,
          "index": 14230
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer|null"
      },
      "appearsIn": []
    },
    "_recalculateMaxListItemWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Loop over all model items to recalculate the maximum list item width.",
          "     *",
          "     * @protected",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loop over all model items to recalculate the maximum list item width.</p>"
          }
        ],
        "@protected": [
          {
            "name": "@protected",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 503,
          "column": 4,
          "index": 14355
        },
        "end": {
          "line": 580,
          "column": 5,
          "index": 16487
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getMaxListItemWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the cached maximum list item width.",
          "     *",
          "     * @return {Number}",
          "     * @protected",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the cached maximum list item width.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number}",
            "type": "number",
            "description": ""
          }
        ],
        "@protected": [
          {
            "name": "@protected",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 588,
          "column": 4,
          "index": 16606
        },
        "end": {
          "line": 590,
          "column": 5,
          "index": 16680
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 593,
        "column": 2,
        "index": 16689
      },
      "end": {
        "line": 597,
        "column": 3,
        "index": 16787
      }
    }
  },
  "statics": {}
}