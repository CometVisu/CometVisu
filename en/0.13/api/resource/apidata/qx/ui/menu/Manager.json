{
  "version": 0.3,
  "lastModified": 1735383688041,
  "lastModifiedIso": "2024-12-28T11:01:28.041Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Manager.js",
  "type": "class",
  "location": {
    "start": {
      "line": 29,
      "column": 0,
      "index": 795
    },
    "end": {
      "line": 850,
      "column": 3,
      "index": 23628
    }
  },
  "className": "qx.ui.menu.Manager",
  "jsdoc": {
    "raw": [
      "*",
      " * This singleton manages visible menu instances and supports some",
      " * core features to schedule menu open/close with timeout support.",
      " *",
      " * It also manages the whole keyboard support for the currently",
      " * registered widgets.",
      " *",
      " * The zIndex order is also managed by this class.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This singleton manages visible menu instances and supports some\n core features to schedule menu open/close with timeout support.\n It also manages the whole keyboard support for the currently\n registered widgets.\n The zIndex order is also managed by this class.</p>"
      }
    ]
  },
  "isSingleton": true,
  "abstract": false,
  "superClass": "qx.core.Object",
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 39,
        "column": 2,
        "index": 1073
      },
      "end": {
        "line": 78,
        "column": 3,
        "index": 2414
      }
    }
  },
  "members": {
    "__scheduleOpen": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2672
        },
        "end": {
          "line": 88,
          "column": 24,
          "index": 2692
        }
      },
      "appearsIn": []
    },
    "__scheduleClose": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2698
        },
        "end": {
          "line": 89,
          "column": 25,
          "index": 2719
        }
      },
      "appearsIn": []
    },
    "__openTimer": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2725
        },
        "end": {
          "line": 90,
          "column": 21,
          "index": 2742
        }
      },
      "appearsIn": []
    },
    "__closeTimer": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2748
        },
        "end": {
          "line": 91,
          "column": 22,
          "index": 2766
        }
      },
      "appearsIn": []
    },
    "__objects": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2772
        },
        "end": {
          "line": 92,
          "column": 19,
          "index": 2787
        }
      },
      "appearsIn": []
    },
    "_getChild": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Query engine for menu children.",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} Any menu instance",
          "     * @param start {Integer} Child index to start with",
          "     * @param iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>",
          "     * @param loop {Boolean?false} Whether to wrap when reaching the begin/end of the list",
          "     * @return {qx.ui.menu.Button} Any menu button or <code>null</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Query engine for menu children.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} Any menu instance",
            "paramName": "menu",
            "description": " Any menu instance",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "start {Integer} Child index to start with",
            "paramName": "start",
            "description": " Child index to start with",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>",
            "paramName": "iter",
            "description": " Iteration count, normally <code>+1</code> or <code>-1</code>",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "loop {Boolean?false} Whether to wrap when reaching the begin/end of the list",
            "paramName": "loop",
            "description": " Whether to wrap when reaching the begin/end of the list",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Button} Any menu button or <code>null</code>",
            "type": "qx.ui.menu.Button",
            "description": "Any menu button or <code>null</code>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 3416
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 4051
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        },
        {
          "name": "start",
          "type": "Integer"
        },
        {
          "name": "iter",
          "type": "Integer"
        },
        {
          "name": "loop",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "false"
        }
      ],
      "returnType": {
        "type": "qx.ui.menu.Button"
      },
      "appearsIn": []
    },
    "_isInMenu": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the given widget is inside any Menu instance.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} Any widget",
          "     * @return {Boolean} <code>true</code> when the widget is part of any menu",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is inside any Menu instance.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Any widget",
            "paramName": "widget",
            "description": " Any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the widget is part of any menu",
            "type": "boolean",
            "description": "<code>true</code> when the widget is part of any menu"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 4273
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 4476
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_isMenuOpener": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the given widget is one of the menu openers.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} Any widget",
          "     * @return {Boolean} <code>true</code> if the widget is a menu opener",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is one of the menu openers.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Any widget",
            "paramName": "widget",
            "description": " Any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the widget is a menu opener",
            "type": "boolean",
            "description": "<code>true</code> if the widget is a menu opener"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 158,
          "column": 4,
          "index": 4692
        },
        "end": {
          "line": 168,
          "column": 5,
          "index": 4912
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_getMenuButton": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an instance of a menu button if the given widget is a child",
          "     *",
          "     * @param widget {qx.ui.core.Widget} any widget",
          "     * @return {qx.ui.menu.Button} Any menu button instance or <code>null</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an instance of a menu button if the given widget is a child</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} any widget",
            "paramName": "widget",
            "description": " any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Button} Any menu button instance or <code>null</code>",
            "type": "qx.ui.menu.Button",
            "description": "Any menu button instance or <code>null</code>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 5150
        },
        "end": {
          "line": 186,
          "column": 5,
          "index": 5369
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "returnType": {
        "type": "qx.ui.menu.Button"
      },
      "appearsIn": []
    },
    "add": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a menu to the list of visible menus.",
          "     *",
          "     * @param obj {qx.ui.menu.Menu} Any menu instance.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a menu to the list of visible menus.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.menu.Menu} Any menu instance.",
            "paramName": "obj",
            "description": " Any menu instance.",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 5699
        },
        "end": {
          "line": 209,
          "column": 5,
          "index": 5980
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "remove": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Remove a menu from the list of visible menus.",
          "     *",
          "     * @param obj {qx.ui.menu.Menu} Any menu instance.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove a menu from the list of visible menus.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.menu.Menu} Any menu instance.",
            "paramName": "obj",
            "description": " Any menu instance.",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 216,
          "column": 4,
          "index": 6118
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 6407
        }
      },
      "type": "function",
      "params": [
        {
          "name": "obj",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "hideAll": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Hides all currently opened menus.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Hides all currently opened menus.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 232,
          "column": 4,
          "index": 6471
        },
        "end": {
          "line": 239,
          "column": 5,
          "index": 6635
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getActiveMenu": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the menu which was opened at last (which",
          "     * is the active one this way)",
          "     *",
          "     * @return {qx.ui.menu.Menu} The current active menu or <code>null</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the menu which was opened at last (which\n is the active one this way)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Menu} The current active menu or <code>null</code>",
            "type": "qx.ui.menu.Menu",
            "description": "The current active menu or <code>null</code>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 6834
        },
        "end": {
          "line": 250,
          "column": 5,
          "index": 6947
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.menu.Menu"
      },
      "appearsIn": []
    },
    "scheduleOpen": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Schedules the given menu to be opened after the",
          "     * {@link qx.ui.menu.Menu#openInterval} configured by the",
          "     * menu instance itself.",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The menu to schedule for open",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Schedules the given menu to be opened after the\n {@link qx.ui.menu.Menu#openInterval} configured by the\n menu instance itself.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to schedule for open",
            "paramName": "menu",
            "description": " The menu to schedule for open",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 265,
          "column": 4,
          "index": 7400
        },
        "end": {
          "line": 284,
          "column": 5,
          "index": 8009
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "scheduleClose": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Schedules the given menu to be closed after the",
          "     * {@link qx.ui.menu.Menu#closeInterval} configured by the",
          "     * menu instance itself.",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The menu to schedule for close",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Schedules the given menu to be closed after the\n {@link qx.ui.menu.Menu#closeInterval} configured by the\n menu instance itself.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to schedule for close",
            "paramName": "menu",
            "description": " The menu to schedule for close",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 293,
          "column": 4,
          "index": 8254
        },
        "end": {
          "line": 312,
          "column": 5,
          "index": 8868
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "cancelOpen": {
      "jsdoc": {
        "raw": [
          "*",
          "     * When the given menu is scheduled for open this pending",
          "     * request is canceled.",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The menu to cancel for open",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the given menu is scheduled for open this pending\n request is canceled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to cancel for open",
            "paramName": "menu",
            "description": " The menu to cancel for open",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 320,
          "column": 4,
          "index": 9053
        },
        "end": {
          "line": 326,
          "column": 5,
          "index": 9233
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "cancelClose": {
      "jsdoc": {
        "raw": [
          "*",
          "     * When the given menu is scheduled for close this pending",
          "     * request is canceled.",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The menu to cancel for close",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the given menu is scheduled for close this pending\n request is canceled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to cancel for close",
            "paramName": "menu",
            "description": " The menu to cancel for close",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 334,
          "column": 4,
          "index": 9420
        },
        "end": {
          "line": 340,
          "column": 5,
          "index": 9605
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "_onOpenInterval": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event listener for a pending open request. Configured to the interval",
          "     * of the current menu to open.",
          "     *",
          "     * @param e {qx.event.type.Event} Interval event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for a pending open request. Configured to the interval\n of the current menu to open.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Interval event",
            "paramName": "e",
            "description": " Interval event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 354,
          "column": 4,
          "index": 10003
        },
        "end": {
          "line": 361,
          "column": 5,
          "index": 10183
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Event"
        }
      ],
      "appearsIn": []
    },
    "_onCloseInterval": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event listener for a pending close request. Configured to the interval",
          "     * of the current menu to close.",
          "     *",
          "     * @param e {qx.event.type.Event} Interval event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for a pending close request. Configured to the interval\n of the current menu to close.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Interval event",
            "paramName": "e",
            "description": " Interval event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 10381
        },
        "end": {
          "line": 376,
          "column": 5,
          "index": 10592
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Event"
        }
      ],
      "appearsIn": []
    },
    "preventContextMenuOnce": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal function registers a handler to stop next",
          "     * <code>contextmenu</code> event.",
          "     * This function will be called by {@link qx.ui.menu.Button#_onTap}, if",
          "     * right click was pressed.",
          "     *",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal function registers a handler to stop next\n <code>contextmenu</code> event.\n This function will be called by {@link qx.ui.menu.Button#_onTap}, if\n right click was pressed.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 392,
          "column": 4,
          "index": 11052
        },
        "end": {
          "line": 400,
          "column": 5,
          "index": 11244
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__onPreventContextMenu": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal event handler to stop <code>contextmenu</code> event bubbling,",
          "     * if target is inside the opened menu.",
          "     *",
          "     * @param e {qx.event.type.Mouse} contextmenu event",
          "     *",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler to stop <code>contextmenu</code> event bubbling,\n if target is inside the opened menu.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Mouse} contextmenu event",
            "paramName": "e",
            "description": " contextmenu event",
            "type": "qx.event.type.Mouse"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 410,
          "column": 4,
          "index": 11477
        },
        "end": {
          "line": 426,
          "column": 5,
          "index": 11900
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Mouse"
        }
      ],
      "appearsIn": []
    },
    "_onPointerDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for pointerdown events",
          "     *",
          "     * @param e {qx.event.type.Pointer} pointerdown event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for pointerdown events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerdown event",
            "paramName": "e",
            "description": " pointerdown event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 439,
          "column": 4,
          "index": 12236
        },
        "end": {
          "line": 463,
          "column": 5,
          "index": 13181
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "__selectionKeys": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Map} Map of all keys working on an active menu selection",
          "     * @lint ignoreReferenceField(__selectionKeys)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Map of all keys working on an active menu selection"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__selectionKeys)"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 475,
          "column": 4,
          "index": 13526
        },
        "end": {
          "line": 478,
          "column": 5,
          "index": 13581
        }
      },
      "appearsIn": []
    },
    "__navigationKeys": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Map} Map of all keys working without a selection",
          "     * @lint ignoreReferenceField(__navigationKeys)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Map of all keys working without a selection"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__navigationKeys)"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 484,
          "column": 4,
          "index": 13719
        },
        "end": {
          "line": 491,
          "column": 5,
          "index": 13833
        }
      },
      "appearsIn": []
    },
    "_onKeyUpDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for all keyup/keydown events. Stops all events",
          "     * when any menu is opened.",
          "     *",
          "     * @param e {qx.event.type.KeySequence} Keyboard event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for all keyup/keydown events. Stops all events\n when any menu is opened.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} Keyboard event",
            "paramName": "e",
            "description": " Keyboard event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 499,
          "column": 4,
          "index": 14022
        },
        "end": {
          "line": 513,
          "column": 5,
          "index": 14372
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.KeySequence"
        }
      ],
      "appearsIn": []
    },
    "_onKeyPress": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for all keypress events. Delegates the event to the more",
          "     * specific methods defined in this class.",
          "     *",
          "     * Currently processes the keys: <code>Up</code>, <code>Down</code>,",
          "     * <code>Left</code>, <code>Right</code> and <code>Enter</code>.",
          "     *",
          "     * @param e {qx.event.type.KeySequence} Keyboard event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for all keypress events. Delegates the event to the more\n specific methods defined in this class.\n Currently processes the keys: <code>Up</code>, <code>Down</code>,\n <code>Left</code>, <code>Right</code> and <code>Enter</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} Keyboard event",
            "paramName": "e",
            "description": " Keyboard event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 524,
          "column": 4,
          "index": 14735
        },
        "end": {
          "line": 578,
          "column": 5,
          "index": 16005
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.KeySequence"
        }
      ],
      "appearsIn": []
    },
    "_onKeyPressUp": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>Up</code> key",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The active menu",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Up</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 585,
          "column": 4,
          "index": 16133
        },
        "end": {
          "line": 600,
          "column": 5,
          "index": 16609
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "_onKeyPressDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>Down</code> key",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The active menu",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Down</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 607,
          "column": 4,
          "index": 16739
        },
        "end": {
          "line": 619,
          "column": 5,
          "index": 17137
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "_onKeyPressLeft": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>Left</code> key",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The active menu",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Left</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 626,
          "column": 4,
          "index": 17267
        },
        "end": {
          "line": 665,
          "column": 5,
          "index": 18437
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "_onKeyPressRight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>Right</code> key",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The active menu",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Right</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 672,
          "column": 4,
          "index": 18568
        },
        "end": {
          "line": 758,
          "column": 5,
          "index": 21038
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        }
      ],
      "appearsIn": []
    },
    "_onKeyPressEnter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>Enter</code> key",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The active menu",
          "     * @param button {qx.ui.menu.AbstractButton} The selected button",
          "     * @param e {qx.event.type.KeySequence} The keypress event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Enter</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "button {qx.ui.menu.AbstractButton} The selected button",
            "paramName": "button",
            "description": " The selected button",
            "type": "qx.ui.menu.AbstractButton"
          },
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} The keypress event",
            "paramName": "e",
            "description": " The keypress event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 767,
          "column": 4,
          "index": 21301
        },
        "end": {
          "line": 781,
          "column": 5,
          "index": 21711
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        },
        {
          "name": "button",
          "type": "qx.ui.menu.AbstractButton"
        },
        {
          "name": "e",
          "type": "qx.event.type.KeySequence"
        }
      ],
      "appearsIn": []
    },
    "_onKeyPressSpace": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>Space</code> key",
          "     *",
          "     * @param menu {qx.ui.menu.Menu} The active menu",
          "     * @param button {qx.ui.menu.AbstractButton} The selected button",
          "     * @param e {qx.event.type.KeySequence} The keypress event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Space</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "button {qx.ui.menu.AbstractButton} The selected button",
            "paramName": "button",
            "description": " The selected button",
            "type": "qx.ui.menu.AbstractButton"
          },
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} The keypress event",
            "paramName": "e",
            "description": " The keypress event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 790,
          "column": 4,
          "index": 21974
        },
        "end": {
          "line": 801,
          "column": 5,
          "index": 22332
        }
      },
      "type": "function",
      "params": [
        {
          "name": "menu",
          "type": "qx.ui.menu.Menu"
        },
        {
          "name": "button",
          "type": "qx.ui.menu.AbstractButton"
        },
        {
          "name": "e",
          "type": "qx.event.type.KeySequence"
        }
      ],
      "appearsIn": []
    },
    "_onRoll": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for roll which hides all windows on scroll.",
          "     *",
          "     * @param e {qx.event.type.Roll} The roll event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for roll which hides all windows on scroll.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Roll} The roll event.",
            "paramName": "e",
            "description": " The roll event.",
            "type": "qx.event.type.Roll"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 808,
          "column": 4,
          "index": 22480
        },
        "end": {
          "line": 820,
          "column": 5,
          "index": 22789
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Roll"
        }
      ],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 829,
        "column": 2,
        "index": 22985
      },
      "end": {
        "line": 849,
        "column": 3,
        "index": 23624
      }
    }
  },
  "statics": {},
  "properties": {}
}