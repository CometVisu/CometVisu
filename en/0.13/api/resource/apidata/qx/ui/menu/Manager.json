{
  "className": "qx.ui.menu.Manager",
  "packageName": "qx.ui.menu",
  "name": "Manager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0,
        "index": 823
      },
      "end": {
        "line": 850,
        "column": 3,
        "index": 24477
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This singleton manages visible menu instances and supports some\n core features to schedule menu open/close with timeout support.\n It also manages the whole keyboard support for the currently\n registered widgets.\n The zIndex order is also managed by this class.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 39,
        "column": 2,
        "index": 1111
      },
      "end": {
        "line": 78,
        "column": 3,
        "index": 2491
      }
    },
    "jsdoc": {}
  },
  "members": {
    "__scheduleOpen": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2759
        },
        "end": {
          "line": 88,
          "column": 24,
          "index": 2779
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__scheduleClose": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2786
        },
        "end": {
          "line": 89,
          "column": 25,
          "index": 2807
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__openTimer": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2814
        },
        "end": {
          "line": 90,
          "column": 21,
          "index": 2831
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__closeTimer": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2838
        },
        "end": {
          "line": 91,
          "column": 22,
          "index": 2856
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__objects": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2863
        },
        "end": {
          "line": 92,
          "column": 19,
          "index": 2878
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_getChild": {
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 3524
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 4182
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Query engine for menu children.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} Any menu instance",
            "paramName": "menu",
            "description": " Any menu instance",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "start {Integer} Child index to start with",
            "paramName": "start",
            "description": " Child index to start with",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>",
            "paramName": "iter",
            "description": " Iteration count, normally <code>+1</code> or <code>-1</code>",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "loop {Boolean?false} Whether to wrap when reaching the begin/end of the list",
            "paramName": "loop",
            "description": " Whether to wrap when reaching the begin/end of the list",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Button} Any menu button or <code>null</code>",
            "type": "qx.ui.menu.Button",
            "description": " Any menu button or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isInMenu": {
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 4412
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 4625
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is inside any Menu instance.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Any widget",
            "paramName": "widget",
            "description": " Any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the widget is part of any menu",
            "type": "Boolean",
            "description": " <code>true</code> when the widget is part of any menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isMenuOpener": {
      "location": {
        "start": {
          "line": 158,
          "column": 4,
          "index": 4849
        },
        "end": {
          "line": 168,
          "column": 5,
          "index": 5079
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is one of the menu openers.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Any widget",
            "paramName": "widget",
            "description": " Any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the widget is a menu opener",
            "type": "Boolean",
            "description": " <code>true</code> if the widget is a menu opener"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getMenuButton": {
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 5325
        },
        "end": {
          "line": 186,
          "column": 5,
          "index": 5554
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an instance of a menu button if the given widget is a child</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} any widget",
            "paramName": "widget",
            "description": " any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Button} Any menu button instance or <code>null</code>",
            "type": "qx.ui.menu.Button",
            "description": " Any menu button instance or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "add": {
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 5897
        },
        "end": {
          "line": 209,
          "column": 5,
          "index": 6188
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a menu to the list of visible menus.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.menu.Menu} Any menu instance.",
            "paramName": "obj",
            "description": " Any menu instance.",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 216,
          "column": 4,
          "index": 6333
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 6633
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove a menu from the list of visible menus.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.menu.Menu} Any menu instance.",
            "paramName": "obj",
            "description": " Any menu instance.",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hideAll": {
      "location": {
        "start": {
          "line": 232,
          "column": 4,
          "index": 6702
        },
        "end": {
          "line": 239,
          "column": 5,
          "index": 6873
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Hides all currently opened menus.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getActiveMenu": {
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 7080
        },
        "end": {
          "line": 250,
          "column": 5,
          "index": 7196
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the menu which was opened at last (which\n is the active one this way)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Menu} The current active menu or <code>null</code>",
            "type": "qx.ui.menu.Menu",
            "description": " The current active menu or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scheduleOpen": {
      "location": {
        "start": {
          "line": 265,
          "column": 4,
          "index": 7664
        },
        "end": {
          "line": 284,
          "column": 5,
          "index": 8292
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Schedules the given menu to be opened after the\n {@link qx.ui.menu.Menu#openInterval} configured by the\n menu instance itself.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to schedule for open",
            "paramName": "menu",
            "description": " The menu to schedule for open",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scheduleClose": {
      "location": {
        "start": {
          "line": 293,
          "column": 4,
          "index": 8546
        },
        "end": {
          "line": 312,
          "column": 5,
          "index": 9179
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Schedules the given menu to be closed after the\n {@link qx.ui.menu.Menu#closeInterval} configured by the\n menu instance itself.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to schedule for close",
            "paramName": "menu",
            "description": " The menu to schedule for close",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cancelOpen": {
      "location": {
        "start": {
          "line": 320,
          "column": 4,
          "index": 9372
        },
        "end": {
          "line": 326,
          "column": 5,
          "index": 9558
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the given menu is scheduled for open this pending\n request is canceled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to cancel for open",
            "paramName": "menu",
            "description": " The menu to cancel for open",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cancelClose": {
      "location": {
        "start": {
          "line": 334,
          "column": 4,
          "index": 9753
        },
        "end": {
          "line": 340,
          "column": 5,
          "index": 9944
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the given menu is scheduled for close this pending\n request is canceled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to cancel for close",
            "paramName": "menu",
            "description": " The menu to cancel for close",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onOpenInterval": {
      "location": {
        "start": {
          "line": 354,
          "column": 4,
          "index": 10356
        },
        "end": {
          "line": 361,
          "column": 5,
          "index": 10543
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for a pending open request. Configured to the interval\n of the current menu to open.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Interval event",
            "paramName": "e",
            "description": " Interval event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onCloseInterval": {
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 10749
        },
        "end": {
          "line": 376,
          "column": 5,
          "index": 10967
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for a pending close request. Configured to the interval\n of the current menu to close.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Interval event",
            "paramName": "e",
            "description": " Interval event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "preventContextMenuOnce": {
      "location": {
        "start": {
          "line": 392,
          "column": 4,
          "index": 11443
        },
        "end": {
          "line": 400,
          "column": 5,
          "index": 11643
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal function registers a handler to stop next\n <code>contextmenu</code> event.\n This function will be called by {@link qx.ui.menu.Button#_onTap}, if\n right click was pressed.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__onPreventContextMenu": {
      "location": {
        "start": {
          "line": 410,
          "column": 4,
          "index": 11886
        },
        "end": {
          "line": 426,
          "column": 5,
          "index": 12325
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler to stop <code>contextmenu</code> event bubbling,\n if target is inside the opened menu.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Mouse} contextmenu event",
            "paramName": "e",
            "description": " contextmenu event",
            "type": "qx.event.type.Mouse"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onPointerDown": {
      "location": {
        "start": {
          "line": 439,
          "column": 4,
          "index": 12674
        },
        "end": {
          "line": 463,
          "column": 5,
          "index": 13643
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for pointerdown events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerdown event",
            "paramName": "e",
            "description": " pointerdown event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__selectionKeys": {
      "location": {
        "start": {
          "line": 475,
          "column": 4,
          "index": 14000
        },
        "end": {
          "line": 478,
          "column": 5,
          "index": 14058
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Map of all keys working on an active menu selection"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__selectionKeys)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__navigationKeys": {
      "location": {
        "start": {
          "line": 484,
          "column": 4,
          "index": 14202
        },
        "end": {
          "line": 491,
          "column": 5,
          "index": 14323
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Map of all keys working without a selection"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__navigationKeys)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "_onKeyUpDown": {
      "location": {
        "start": {
          "line": 499,
          "column": 4,
          "index": 14520
        },
        "end": {
          "line": 513,
          "column": 5,
          "index": 14884
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for all keyup/keydown events. Stops all events\n when any menu is opened.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} Keyboard event",
            "paramName": "e",
            "description": " Keyboard event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPress": {
      "location": {
        "start": {
          "line": 524,
          "column": 4,
          "index": 15258
        },
        "end": {
          "line": 578,
          "column": 5,
          "index": 16582
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for all keypress events. Delegates the event to the more\n specific methods defined in this class.\n Currently processes the keys: <code>Up</code>, <code>Down</code>,\n <code>Left</code>, <code>Right</code> and <code>Enter</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} Keyboard event",
            "paramName": "e",
            "description": " Keyboard event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressUp": {
      "location": {
        "start": {
          "line": 585,
          "column": 4,
          "index": 16717
        },
        "end": {
          "line": 600,
          "column": 5,
          "index": 17208
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Up</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressDown": {
      "location": {
        "start": {
          "line": 607,
          "column": 4,
          "index": 17345
        },
        "end": {
          "line": 619,
          "column": 5,
          "index": 17755
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Down</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressLeft": {
      "location": {
        "start": {
          "line": 626,
          "column": 4,
          "index": 17892
        },
        "end": {
          "line": 665,
          "column": 5,
          "index": 19101
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Left</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressRight": {
      "location": {
        "start": {
          "line": 672,
          "column": 4,
          "index": 19239
        },
        "end": {
          "line": 758,
          "column": 5,
          "index": 21795
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Right</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressEnter": {
      "location": {
        "start": {
          "line": 767,
          "column": 4,
          "index": 22067
        },
        "end": {
          "line": 781,
          "column": 5,
          "index": 22491
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Enter</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "button {qx.ui.menu.AbstractButton} The selected button",
            "paramName": "button",
            "description": " The selected button",
            "type": "qx.ui.menu.AbstractButton"
          },
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} The keypress event",
            "paramName": "e",
            "description": " The keypress event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressSpace": {
      "location": {
        "start": {
          "line": 790,
          "column": 4,
          "index": 22763
        },
        "end": {
          "line": 801,
          "column": 5,
          "index": 23132
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Space</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "button {qx.ui.menu.AbstractButton} The selected button",
            "paramName": "button",
            "description": " The selected button",
            "type": "qx.ui.menu.AbstractButton"
          },
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} The keypress event",
            "paramName": "e",
            "description": " The keypress event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onRoll": {
      "location": {
        "start": {
          "line": 808,
          "column": 4,
          "index": 23287
        },
        "end": {
          "line": 820,
          "column": 5,
          "index": 23608
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for roll which hides all windows on scroll.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Roll} The roll event.",
            "paramName": "e",
            "description": " The roll event.",
            "type": "qx.event.type.Roll"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 829,
        "column": 2,
        "index": 23813
      },
      "end": {
        "line": 849,
        "column": 3,
        "index": 24472
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}