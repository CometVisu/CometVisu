{
  "version": 0.3,
  "lastModified": 1726088852785,
  "lastModifiedIso": "2024-09-11T21:07:32.785Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/menu/RadioButton.js",
  "type": "class",
  "location": {
    "start": {
      "line": 25,
      "column": 0,
      "index": 739
    },
    "end": {
      "line": 142,
      "column": 3,
      "index": 3667
    }
  },
  "className": "qx.ui.menu.RadioButton",
  "jsdoc": {
    "raw": [
      "*",
      " * Renders a special radio button inside a menu. The button behaves like",
      " * a normal {@link qx.ui.form.RadioButton} and shows a radio icon when",
      " * checked; normally shows no icon when not checked (depends on the theme).",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Renders a special radio button inside a menu. The button behaves like\n a normal {@link qx.ui.form.RadioButton} and shows a radio icon when\n checked; normally shows no icon when not checked (depends on the theme).</p>"
      }
    ]
  },
  "superClass": "qx.ui.menu.AbstractButton",
  "mixins": [
    "qx.ui.form.MModelProperty"
  ],
  "interfaces": [
    "qx.ui.form.IRadioItem",
    "qx.ui.form.IBooleanForm",
    "qx.ui.form.IModel"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "label"
      },
      {
        "name": "menu"
      }
    ],
    "location": {
      "start": {
        "line": 44,
        "column": 2,
        "index": 1254
      },
      "end": {
        "line": 63,
        "column": 3,
        "index": 1764
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1992
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 2062
        }
      },
      "json": {
        "refine": true,
        "init": "menu-radiobutton"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "value": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2137
        },
        "end": {
          "line": 85,
          "column": 5,
          "index": 2271
        }
      },
      "json": {
        "check": "Boolean",
        "nullable": true,
        "event": "changeValue",
        "apply": "_applyValue",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "* The value of the widget. True, if the widget is checked. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The value of the widget. True, if the widget is checked.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "group": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2379
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2480
        }
      },
      "json": {
        "check": "qx.ui.form.RadioGroup",
        "nullable": true,
        "apply": "_applyGroup"
      },
      "jsdoc": {
        "raw": [
          "* The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "model": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1367
        },
        "end": {
          "line": 45,
          "column": 5,
          "index": 1483
        }
      },
      "json": {
        "nullable": true,
        "event": "changeModel",
        "apply": "_applyModel",
        "dereference": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Model property for storing additional information for the including",
          "     * object. It can act as value property on form items for example.",
          "     *",
          "     * Be careful using that property as this is used for the",
          "     * {@link qx.ui.form.MModelSelection} it has some restrictions:",
          "     *",
          "     * * Don't use equal models in one widget using the",
          "     *     {@link qx.ui.form.MModelSelection}.",
          "     *",
          "     * * Avoid setting only some model properties if the widgets are added to",
          "     *     a {@link qx.ui.form.MModelSelection} widget.",
          "     *",
          "     * Both restrictions result of the fact, that the set models are deputies",
          "     * for their widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Model property for storing additional information for the including\n object. It can act as value property on form items for example.\n Be careful using that property as this is used for the\n {@link qx.ui.form.MModelSelection} it has some restrictions:</p>\n<ul>\n<li>Don't use equal models in one widget using the\n {@link qx.ui.form.MModelSelection}.</li>\n<li>Avoid setting only some model properties if the widgets are added to\n a {@link qx.ui.form.MModelSelection} widget.\nBoth restrictions result of the fact, that the set models are deputies\nfor their widget.</li>\n</ul>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.form.MModelProperty"
      ],
      "mixin": "qx.ui.form.MModelProperty"
    }
  },
  "members": {
    "_bindableProperties": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @lint ignoreReferenceField(_bindableProperties)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_bindableProperties)"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2886
        },
        "end": {
          "line": 107,
          "column": 77,
          "index": 2959
        }
      },
      "overriddenFrom": "qx.ui.menu.AbstractButton",
      "appearsIn": [
        "qx.ui.menu.AbstractButton",
        "qx.ui.core.MExecutable"
      ]
    },
    "_applyValue": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 2988
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3187
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyGroup": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3216
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3351
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_onExecute": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the execute event.",
          "     *",
          "     * @param e {qx.event.type.Event} The execute event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the execute event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} The execute event.",
            "paramName": "e",
            "description": " The execute event.",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 3476
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 3659
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Event"
        }
      ],
      "appearsIn": []
    },
    "_applyModel": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1527
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1588
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": [
        "qx.ui.form.MModelProperty"
      ],
      "mixin": "qx.ui.form.MModelProperty"
    }
  },
  "statics": {}
}