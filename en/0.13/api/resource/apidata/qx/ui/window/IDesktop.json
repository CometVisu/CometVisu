{
  "version": 0.3,
  "lastModified": 1722153600511,
  "lastModifiedIso": "2024-07-28T08:00:00.511Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/window/IDesktop.js",
  "type": "interface",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 549
    },
    "end": {
      "line": 70,
      "column": 3,
      "index": 1739
    }
  },
  "className": "qx.ui.window.IDesktop",
  "jsdoc": {
    "raw": [
      "*",
      " * All parent widgets of windows must implement this interface.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>All parent widgets of windows must implement this interface.</p>"
      }
    ]
  },
  "members": {
    "setWindowManager": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the desktop's window manager",
          "     *",
          "     * @param manager {qx.ui.window.IWindowManager} The window manager",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the desktop's window manager</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "manager {qx.ui.window.IWindowManager} The window manager",
            "paramName": "manager",
            "description": " The window manager",
            "type": "qx.ui.window.IWindowManager"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 29,
          "column": 4,
          "index": 748
        },
        "end": {
          "line": 31,
          "column": 5,
          "index": 847
        }
      },
      "type": "function",
      "params": [
        {
          "name": "manager",
          "type": "qx.ui.window.IWindowManager"
        }
      ],
      "appearsIn": []
    },
    "getWindows": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get a list of all windows added to the desktop (including hidden windows)",
          "     *",
          "     * @return {qx.ui.window.Window[]} Array of managed windows",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a list of all windows added to the desktop (including hidden windows)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.window.Window[]} Array of managed windows",
            "type": "qx.ui.window.Window[]",
            "description": "Array of managed windows"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1022
        },
        "end": {
          "line": 38,
          "column": 19,
          "index": 1037
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.window.Window[]"
      },
      "appearsIn": []
    },
    "supportsMaximize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the configured layout supports a maximized window",
          "     * e.g. is a Canvas.",
          "     *",
          "     * @return {Boolean} Whether the layout supports maximized windows",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the configured layout supports a maximized window\n e.g. is a Canvas.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the layout supports maximized windows",
            "type": "boolean",
            "description": "Whether the layout supports maximized windows"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1228
        },
        "end": {
          "line": 46,
          "column": 25,
          "index": 1249
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "blockContent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Block direct child widgets with a zIndex below <code>zIndex</code>",
          "     *",
          "     * @param zIndex {Integer} All child widgets with a zIndex below this value",
          "     *     will be blocked",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Block direct child widgets with a zIndex below <code>zIndex</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "zIndex {Integer} All child widgets with a zIndex below this value\n     will be blocked",
            "paramName": "zIndex",
            "description": " All child widgets with a zIndex below this value\n     will be blocked",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 1460
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1522
        }
      },
      "type": "function",
      "params": [
        {
          "name": "zIndex",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "unblock": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Remove the blocker.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove the blocker.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1572
        },
        "end": {
          "line": 61,
          "column": 16,
          "index": 1584
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "isBlocked": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the widget is currently blocked",
          "     *",
          "     * @return {Boolean} whether the widget is blocked.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the widget is currently blocked</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the widget is blocked.",
            "type": "boolean",
            "description": "whether the widget is blocked."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1717
        },
        "end": {
          "line": 68,
          "column": 18,
          "index": 1731
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}