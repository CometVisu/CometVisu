{
  "className": "qx.ui.layout.Dock",
  "packageName": "qx.ui.layout",
  "name": "Dock",
  "superClass": "qx.ui.layout.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 90,
        "column": 0,
        "index": 3198
      },
      "end": {
        "line": 954,
        "column": 3,
        "index": 27053
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Docks children to one of the edges.\n<em>Features</em></p>\n<ul>\n<li>Percent width for left/right/center attached children</li>\n<li>Percent height for top/bottom/center attached children</li>\n<li>Minimum and maximum dimensions</li>\n<li>Prioritized growing/shrinking (flex)</li>\n<li>Auto sizing</li>\n<li>Margins and Spacings</li>\n<li>Alignment in orthogonal axis (e.g. alignX of north attached)</li>\n<li><p>Different sort options for children\n<em>Item Properties</em></p></li>\n</ul>\n<ul>\n <li><strong>edge</strong> <em>(String)</em>: The edge where the layout item\n   should be docked. This may be one of <code>north</code>, <code>east</code>,\n   <code>south</code>, <code>west</code> or <code>center</code>. (Required)</li>\n <li><strong>width</strong> <em>(String)</em>: Defines a percent\n   width for the item. The percent width,\n   when specified, is used instead of the width defined by the size hint.\n   This is only supported for children added to the north or south edge or\n   are centered in the middle of the layout.\n   The minimum and maximum width still takes care of the elements limitations.\n   It has no influence on the layout's size hint. Percents are mainly useful for\n   widgets which are sized by the outer hierarchy.\n </li>\n <li><strong>height</strong> <em>(String)</em>: Defines a percent\n   height for the item. The percent height,\n   when specified, is used instead of the height defined by the size hint.\n   This is only supported for children added to the west or east edge or\n   are centered in the middle of the layout.\n   The minimum and maximum height still takes care of the elements limitations.\n   It has no influence on the layout's size hint. Percents are mainly useful for\n   widgets which are sized by the outer hierarchy.\n </li>\n </ul>\n<p><em>Example</em>\n </p>\n<pre class=\"javascript\">\n var layout = new qx.ui.layout.Dock();\n var w1 = new qx.ui.core.Widget();\n var w2 = new qx.ui.core.Widget();\n var w3 = new qx.ui.core.Widget();\n w1.setHeight(200);\n w2.setWidth(150);\n var container = new qx.ui.container.Composite(layout);\n container.add(w1, {edge:\"north\"});\n container.add(w2, {edge:\"west\"});\n container.add(w3, {edge:\"center\"});\n </pre>\n<p><em>Detailed Description</em>\n Using this layout, items may be \"docked\" to a specific side\n of the available space. Each displayed item reduces the available space\n for the following children. Priorities depend on the position of\n the child in the internal children list.\n<em>External Documentation</em>\n <a href='https://qooxdoo.org/documentation/#/desktop/layout/dock.md'>\n Extended documentation</a> and links to demos of this layout in the qooxdoo manual.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 105,
        "column": 2,
        "index": 3822
      },
      "end": {
        "line": 123,
        "column": 3,
        "index": 4150
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "spacingX {Integer?0} The horizontal spacing. Sets {@link #spacingX}.",
          "paramName": "spacingX",
          "description": " The horizontal spacing. Sets {@link #spacingX}.",
          "optional": true,
          "defaultValue": "0",
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "spacingY {Integer?0} The vertical spacing. Sets {@link #spacingY}.",
          "paramName": "spacingY",
          "description": " The vertical spacing. Sets {@link #spacingY}.",
          "optional": true,
          "defaultValue": "0",
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "separatorX {String|qx.ui.decoration.IDecorator} Separator to render between columns",
          "paramName": "separatorX",
          "description": " Separator to render between columns",
          "type": [
            "String",
            "qx.ui.decoration.IDecorator"
          ]
        },
        {
          "name": "@param",
          "body": "separatorY {String|qx.ui.decoration.IDecorator} Separator to render between rows",
          "paramName": "separatorY",
          "description": " Separator to render between rows",
          "type": [
            "String",
            "qx.ui.decoration.IDecorator"
          ]
        }
      ]
    }
  },
  "properties": {
    "sort": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 4491
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 4583
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The way the widgets should be displayed (in conjunction with their\n position in the childrens array).</p>"
          }
        ]
      },
      "name": "sort",
      "propertyType": "new",
      "apply": "_applySort",
      "init": "auto",
      "possibleValues": [
        "auto",
        "y",
        "x"
      ],
      "defaultValue": "auto"
    },
    "separatorX": {
      "location": {
        "start": {
          "line": 143,
          "column": 4,
          "index": 4655
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 4756
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Separator lines to use between the horizontal objects</p>"
          }
        ]
      },
      "name": "separatorX",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "nullable": true,
      "allowNull": true,
      "check": "Decorator"
    },
    "separatorY": {
      "location": {
        "start": {
          "line": 150,
          "column": 4,
          "index": 4826
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 4927
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Separator lines to use between the vertical objects</p>"
          }
        ]
      },
      "name": "separatorY",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "nullable": true,
      "allowNull": true,
      "check": "Decorator"
    },
    "connectSeparators": {
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 5068
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 5171
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether separators should be collapsed so when a spacing is\n configured the line go over into each other</p>"
          }
        ]
      },
      "name": "connectSeparators",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "spacingX": {
      "location": {
        "start": {
          "line": 167,
          "column": 4,
          "index": 5229
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 5319
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Horizontal spacing between two children</p>"
          }
        ]
      },
      "name": "spacingX",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "init": 0,
      "check": "Integer",
      "defaultValue": 0
    },
    "spacingY": {
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 5375
        },
        "end": {
          "line": 178,
          "column": 5,
          "index": 5465
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Vertical spacing between two children</p>"
          }
        ]
      },
      "name": "spacingY",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "init": 0,
      "check": "Integer",
      "defaultValue": 0
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__children": {
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 5673
        },
        "end": {
          "line": 188,
          "column": 20,
          "index": 5689
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__edges": {
      "location": {
        "start": {
          "line": 189,
          "column": 4,
          "index": 5695
        },
        "end": {
          "line": 189,
          "column": 17,
          "index": 5708
        }
      },
      "type": "variable",
      "access": "private"
    },
    "verifyLayoutProperty": {
      "location": {
        "start": {
          "line": 192,
          "column": 4,
          "index": 5733
        },
        "end": {
          "line": 217,
          "column": 6,
          "index": 6432
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "_applySort": {
      "location": {
        "start": {
          "line": 220,
          "column": 4,
          "index": 6461
        },
        "end": {
          "line": 226,
          "column": 5,
          "index": 6639
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "sort"
      ]
    },
    "__edgeMap": {
      "location": {
        "start": {
          "line": 233,
          "column": 4,
          "index": 6765
        },
        "end": {
          "line": 239,
          "column": 5,
          "index": 6861
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Maps edge IDs to numeric values"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__edgeMap)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__alignMap": {
      "location": {
        "start": {
          "line": 246,
          "column": 4,
          "index": 6983
        },
        "end": {
          "line": 251,
          "column": 5,
          "index": 7071
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Maps edges to align values"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__alignMap)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__rebuildCache": {
      "location": {
        "start": {
          "line": 257,
          "column": 4,
          "index": 7149
        },
        "end": {
          "line": 311,
          "column": 5,
          "index": 8584
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Rebuilds cache for sorted children list.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "renderLayout": {
      "location": {
        "start": {
          "line": 320,
          "column": 4,
          "index": 8807
        },
        "end": {
          "line": 780,
          "column": 5,
          "index": 21793
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "appearsIn": [
        "qx.ui.layout.Abstract"
      ]
    },
    "_getSeparatorWidths": {
      "location": {
        "start": {
          "line": 789,
          "column": 4,
          "index": 22016
        },
        "end": {
          "line": 812,
          "column": 5,
          "index": 22836
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the dimensions each separator on both the <code>x</code> and\n <code>y</code> axis needs.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the keys <code>x</code> and\n   <code>y</code>",
            "type": "Map",
            "description": " Map with the keys <code>x</code> and\n   <code>y</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_computeSizeHint": {
      "location": {
        "start": {
          "line": 815,
          "column": 4,
          "index": 22861
        },
        "end": {
          "line": 942,
          "column": 5,
          "index": 26794
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "appearsIn": [
        "qx.ui.layout.Abstract"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getSort": {
      "type": "function",
      "name": "getSort",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sort</code>.\n\nFor further details take a look at the property definition: {@link #sort}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for sort"
          }
        ]
      }
    },
    "setSort": {
      "type": "function",
      "name": "setSort",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sort</code>.\n\nFor further details take a look at the property definition: {@link #sort}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for sort"
          }
        ]
      }
    },
    "resetSort": {
      "type": "function",
      "name": "resetSort",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sort</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sort}."
          }
        ]
      }
    },
    "getSeparatorX": {
      "type": "function",
      "name": "getSeparatorX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>separatorX</code>.\n\nFor further details take a look at the property definition: {@link #separatorX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Decorator",
            "desc": "Returns the value for separatorX"
          }
        ]
      }
    },
    "setSeparatorX": {
      "type": "function",
      "name": "setSeparatorX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>separatorX</code>.\n\nFor further details take a look at the property definition: {@link #separatorX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Decorator",
            "paramName": "value",
            "desc": "Value for separatorX"
          }
        ]
      }
    },
    "resetSeparatorX": {
      "type": "function",
      "name": "resetSeparatorX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>separatorX</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #separatorX}."
          }
        ]
      }
    },
    "getSeparatorY": {
      "type": "function",
      "name": "getSeparatorY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>separatorY</code>.\n\nFor further details take a look at the property definition: {@link #separatorY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Decorator",
            "desc": "Returns the value for separatorY"
          }
        ]
      }
    },
    "setSeparatorY": {
      "type": "function",
      "name": "setSeparatorY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>separatorY</code>.\n\nFor further details take a look at the property definition: {@link #separatorY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Decorator",
            "paramName": "value",
            "desc": "Value for separatorY"
          }
        ]
      }
    },
    "resetSeparatorY": {
      "type": "function",
      "name": "resetSeparatorY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>separatorY</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #separatorY}."
          }
        ]
      }
    },
    "getConnectSeparators": {
      "type": "function",
      "name": "getConnectSeparators",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connectSeparators</code>.\n\nFor further details take a look at the property definition: {@link #connectSeparators}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connectSeparators"
          }
        ]
      }
    },
    "isConnectSeparators": {
      "type": "function",
      "name": "isConnectSeparators",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connectSeparators</code>.\n\nFor further details take a look at the property definition: {@link #connectSeparators}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connectSeparators"
          }
        ]
      }
    },
    "setConnectSeparators": {
      "type": "function",
      "name": "setConnectSeparators",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connectSeparators</code>.\n\nFor further details take a look at the property definition: {@link #connectSeparators}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connectSeparators"
          }
        ]
      }
    },
    "resetConnectSeparators": {
      "type": "function",
      "name": "resetConnectSeparators",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connectSeparators</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connectSeparators}."
          }
        ]
      }
    },
    "getSpacingX": {
      "type": "function",
      "name": "getSpacingX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>spacingX</code>.\n\nFor further details take a look at the property definition: {@link #spacingX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for spacingX"
          }
        ]
      }
    },
    "setSpacingX": {
      "type": "function",
      "name": "setSpacingX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>spacingX</code>.\n\nFor further details take a look at the property definition: {@link #spacingX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for spacingX"
          }
        ]
      }
    },
    "resetSpacingX": {
      "type": "function",
      "name": "resetSpacingX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>spacingX</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #spacingX}."
          }
        ]
      }
    },
    "getSpacingY": {
      "type": "function",
      "name": "getSpacingY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>spacingY</code>.\n\nFor further details take a look at the property definition: {@link #spacingY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for spacingY"
          }
        ]
      }
    },
    "setSpacingY": {
      "type": "function",
      "name": "setSpacingY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>spacingY</code>.\n\nFor further details take a look at the property definition: {@link #spacingY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for spacingY"
          }
        ]
      }
    },
    "resetSpacingY": {
      "type": "function",
      "name": "resetSpacingY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>spacingY</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #spacingY}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 951,
        "column": 2,
        "index": 26990
      },
      "end": {
        "line": 953,
        "column": 3,
        "index": 27049
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}