{
  "className": "qx.ui.tree.core.OpenCloseController",
  "packageName": "qx.ui.tree.core",
  "name": "OpenCloseController",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 30,
        "column": 0,
        "index": 901
      },
      "end": {
        "line": 133,
        "column": 3,
        "index": 3851
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Because of the virtual nature of the VirtualTree, and the fact that\n rendering occurs asynchronously, it is not a simple matter to bind a\n property in the model that will open or close branches in the\n tree. Instead, this controller listens to both the model and the tree, and\n synchronizes the openness of branches in the tree.\n To use this controller, simply instantiate it with the requisite\n constructor arguments.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 42,
        "column": 2,
        "index": 1303
      },
      "end": {
        "line": 74,
        "column": 3,
        "index": 2246
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "tree {qx.ui.tree.VirtualTree}\n   The tree whose branch open or closed state is to be synchronized to a\n   model property.",
          "paramName": "tree",
          "description": "\n   The tree whose branch open or closed state is to be synchronized to a\n   model property.",
          "type": "qx.ui.tree.VirtualTree"
        },
        {
          "name": "@param",
          "body": "rootModel {qx.data.Array}\n   The tree root model wherein a property is to be synchronized to the\n   tree branches' open or closed states",
          "paramName": "rootModel",
          "description": "\n   The tree root model wherein a property is to be synchronized to the\n   tree branches' open or closed states",
          "type": "qx.data.Array"
        }
      ]
    }
  },
  "members": {
    "_tree": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2315
        },
        "end": {
          "line": 78,
          "column": 15,
          "index": 2326
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The tree which is synced to the model</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_lids": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2372
        },
        "end": {
          "line": 81,
          "column": 15,
          "index": 2383
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener IDs that we manage</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_onOpen": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2435
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2514
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected"
    },
    "_onClose": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2567
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2648
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected"
    },
    "_onChangeBubble": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2695
        },
        "end": {
          "line": 124,
          "column": 5,
          "index": 3707
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 127,
        "column": 2,
        "index": 3716
      },
      "end": {
        "line": 132,
        "column": 3,
        "index": 3847
      }
    }
  },
  "descendants": []
}