{
  "version": 0.3,
  "lastModified": 1731947914239,
  "lastModifiedIso": "2024-11-18T16:38:34.239Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/tree/core/AbstractTreeItem.js",
  "type": "class",
  "location": {
    "start": {
      "line": 30,
      "column": 0,
      "index": 937
    },
    "end": {
      "line": 526,
      "column": 3,
      "index": 14082
    }
  },
  "className": "qx.ui.tree.core.AbstractTreeItem",
  "jsdoc": {
    "raw": [
      "*",
      " * The AbstractTreeItem serves as a common superclass for the {@link",
      " * qx.ui.tree.TreeFile} and {@link qx.ui.tree.TreeFolder} classes.",
      " *",
      " * @childControl label {qx.ui.basic.Label} label of the tree item",
      " * @childControl icon {qx.ui.basic.Image} icon of the tree item",
      " * @childControl open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The AbstractTreeItem serves as a common superclass for the {@link\n qx.ui.tree.TreeFile} and {@link qx.ui.tree.TreeFolder} classes.</p>"
      }
    ],
    "@childControl": [
      {
        "name": "@childControl",
        "body": "label {qx.ui.basic.Label} label of the tree item"
      },
      {
        "name": "@childControl",
        "body": "icon {qx.ui.basic.Image} icon of the tree item"
      },
      {
        "name": "@childControl",
        "body": "open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree"
      }
    ]
  },
  "superClass": "qx.ui.tree.core.AbstractItem",
  "isSingleton": false,
  "abstract": true,
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "label"
      }
    ],
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 1054
      },
      "end": {
        "line": 38,
        "column": 3,
        "index": 1121
      }
    }
  },
  "properties": {
    "parent": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1191
        },
        "end": {
          "line": 47,
          "column": 5,
          "index": 1276
        }
      },
      "json": {
        "check": "qx.ui.tree.core.AbstractTreeItem",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The parent tree folder.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The parent tree folder.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__children": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1300
        },
        "end": {
          "line": 51,
          "column": 20,
          "index": 1316
        }
      },
      "appearsIn": []
    },
    "__childrenContainer": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1322
        },
        "end": {
          "line": 52,
          "column": 29,
          "index": 1347
        }
      },
      "appearsIn": []
    },
    "getTree": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the tree the tree item is connected to. If the item is not part of",
          "     * a tree <code>null</code> will be returned.",
          "     *",
          "     * @return {qx.ui.tree.Tree|null} The item's tree or <code>null</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the tree the tree item is connected to. If the item is not part of\n a tree <code>null</code> will be returned.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.tree.Tree|null} The item's tree or <code>null</code>.",
            "type": "qx.ui.tree.Tree|null",
            "description": "The item's tree or <code>null</code>."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1585
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 1960
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.tree.Tree|null"
      },
      "appearsIn": []
    },
    "_applyOpen": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 1989
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2199
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "overriddenFrom": "qx.ui.tree.core.AbstractItem",
      "appearsIn": [
        "qx.ui.tree.core.AbstractItem"
      ]
    },
    "_shouldShowOpenSymbol": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2421
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2896
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.tree.core.AbstractItem",
      "appearsIn": [
        "qx.ui.tree.core.AbstractItem"
      ]
    },
    "_updateIndent": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 2921
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3027
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.tree.core.AbstractItem",
      "appearsIn": [
        "qx.ui.tree.core.AbstractItem"
      ]
    },
    "getLevel": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 125,
          "column": 4,
          "index": 3052
        },
        "end": {
          "line": 149,
          "column": 5,
          "index": 3501
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.tree.core.AbstractItem",
      "appearsIn": [
        "qx.ui.tree.core.AbstractItem"
      ]
    },
    "addState": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 158,
          "column": 4,
          "index": 3722
        },
        "end": {
          "line": 168,
          "column": 5,
          "index": 3994
        }
      },
      "type": "function",
      "params": [
        {
          "name": "state"
        }
      ],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "removeState": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4019
        },
        "end": {
          "line": 181,
          "column": 5,
          "index": 4303
        }
      },
      "type": "function",
      "params": [
        {
          "name": "state"
        }
      ],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "getChildrenContainer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the widget, which acts as container for the child items.",
          "     * This widget must have a vertical box layout.",
          "     *",
          "     * @return {qx.ui.core.Widget} The children container",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the widget, which acts as container for the child items.\n This widget must have a vertical box layout.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The children container",
            "type": "qx.ui.core.Widget",
            "description": "The children container"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 4715
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5021
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "hasChildrenContainer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the tree item has a children container",
          "     *",
          "     * @return {Boolean} Whether it has a children container",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the tree item has a children container</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether it has a children container",
            "type": "boolean",
            "description": "Whether it has a children container"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 212,
          "column": 4,
          "index": 5166
        },
        "end": {
          "line": 214,
          "column": 5,
          "index": 5235
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getParentChildrenContainer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the children container of the item's parent. This function will return",
          "     * <code>null</code>, if the item does not have a parent or is not the root",
          "     * item.",
          "     *",
          "     * @return {qx.ui.core.Widget} The parent's children container.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the children container of the item's parent. This function will return\n <code>null</code>, if the item does not have a parent or is not the root\n item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The parent's children container.",
            "type": "qx.ui.core.Widget",
            "description": "The parent's children container."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 223,
          "column": 4,
          "index": 5508
        },
        "end": {
          "line": 231,
          "column": 5,
          "index": 5756
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget"
      },
      "appearsIn": []
    },
    "getChildren": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get all child items.",
          "     *",
          "     * Note: Don not modify the returned array, since this function does not",
          "     * return a copy!",
          "     *",
          "     * @return {qx.ui.tree.core.AbstractTreeItem[]} An array of all child items.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get all child items.\n Note: Don not modify the returned array, since this function does not\n return a copy!</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.tree.core.AbstractTreeItem[]} An array of all child items.",
            "type": "qx.ui.tree.core.AbstractTreeItem[]",
            "description": "An array of all child items."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 6200
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 6251
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.tree.core.AbstractTreeItem[]"
      },
      "appearsIn": []
    },
    "hasChildren": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 252,
          "column": 4,
          "index": 6276
        },
        "end": {
          "line": 254,
          "column": 5,
          "index": 6364
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.tree.core.AbstractItem",
      "appearsIn": [
        "qx.ui.tree.core.AbstractItem"
      ]
    },
    "getItems": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns all children of the folder.",
          "     *",
          "     * @param recursive {Boolean ? true} whether children of subfolder should be",
          "     *     included",
          "     * @param invisible {Boolean ? true} whether invisible children should be",
          "     *     included",
          "     * @param ignoreFirst {Boolean ? true} Whether the current treeItem should",
          "     *     be excluded from the list.",
          "     * @return {qx.ui.tree.core.AbstractTreeItem[]} list of children",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns all children of the folder.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "recursive {Boolean ? true} whether children of subfolder should be\n     included",
            "paramName": "recursive",
            "description": " whether children of subfolder should be\n     included",
            "optional": true,
            "defaultValue": "true",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "invisible {Boolean ? true} whether invisible children should be\n     included",
            "paramName": "invisible",
            "description": " whether invisible children should be\n     included",
            "optional": true,
            "defaultValue": "true",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "ignoreFirst {Boolean ? true} Whether the current treeItem should\n     be excluded from the list.",
            "paramName": "ignoreFirst",
            "description": " Whether the current treeItem should\n     be excluded from the list.",
            "optional": true,
            "defaultValue": "true",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.tree.core.AbstractTreeItem[]} list of children",
            "type": "qx.ui.tree.core.AbstractTreeItem[]",
            "description": "list of children"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 267,
          "column": 4,
          "index": 6822
        },
        "end": {
          "line": 290,
          "column": 5,
          "index": 7469
        }
      },
      "type": "function",
      "params": [
        {
          "name": "recursive",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "true"
        },
        {
          "name": "invisible",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "true"
        },
        {
          "name": "ignoreFirst",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "true"
        }
      ],
      "returnType": {
        "type": "qx.ui.tree.core.AbstractTreeItem[]"
      },
      "appearsIn": []
    },
    "recursiveAddToWidgetQueue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds this item and recursively all sub items to the widget queue to",
          "     * update the indentation.",
          "     *",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds this item and recursively all sub items to the widget queue to\n update the indentation.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 298,
          "column": 4,
          "index": 7622
        },
        "end": {
          "line": 303,
          "column": 5,
          "index": 7827
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__addChildrenToParent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds the item's children container to the parent's children container.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the item's children container to the parent's children container.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 308,
          "column": 4,
          "index": 7928
        },
        "end": {
          "line": 315,
          "column": 5,
          "index": 8132
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "add": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds the passed tree items to the end of this item's children list.",
          "     *",
          "     * @param varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to add",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the passed tree items to the end of this item's children list.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to add",
            "paramName": "varargs",
            "description": " variable number of tree items to add",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 322,
          "column": 4,
          "index": 8331
        },
        "end": {
          "line": 356,
          "column": 5,
          "index": 9228
        }
      },
      "type": "function",
      "params": [
        {
          "name": "varargs",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        }
      ],
      "appearsIn": []
    },
    "addAt": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds the tree item to the current item, at the given index.",
          "     *",
          "     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} new tree item to insert",
          "     * @param index {Integer} position to insert into",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the tree item to the current item, at the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "treeItem {qx.ui.tree.core.AbstractTreeItem} new tree item to insert",
            "paramName": "treeItem",
            "description": " new tree item to insert",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          },
          {
            "name": "@param",
            "body": "index {Integer} position to insert into",
            "paramName": "index",
            "description": " position to insert into",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 364,
          "column": 4,
          "index": 9461
        },
        "end": {
          "line": 403,
          "column": 5,
          "index": 10490
        }
      },
      "type": "function",
      "params": [
        {
          "name": "treeItem",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        },
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "addBefore": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Add a tree item to this item before the existing child <code>before</code>.",
          "     *",
          "     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add",
          "     * @param before {qx.ui.tree.core.AbstractTreeItem} existing child to add the item before",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a tree item to this item before the existing child <code>before</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add",
            "paramName": "treeItem",
            "description": " tree item to add",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          },
          {
            "name": "@param",
            "body": "before {qx.ui.tree.core.AbstractTreeItem} existing child to add the item before",
            "paramName": "before",
            "description": " existing child to add the item before",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 411,
          "column": 4,
          "index": 10772
        },
        "end": {
          "line": 424,
          "column": 5,
          "index": 11223
        }
      },
      "type": "function",
      "params": [
        {
          "name": "treeItem",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        },
        {
          "name": "before",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        }
      ],
      "appearsIn": []
    },
    "addAfter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Add a tree item to this item after the existing child <code>before</code>.",
          "     *",
          "     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add",
          "     * @param after {qx.ui.tree.core.AbstractTreeItem} existing child to add the item after",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a tree item to this item after the existing child <code>before</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add",
            "paramName": "treeItem",
            "description": " tree item to add",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          },
          {
            "name": "@param",
            "body": "after {qx.ui.tree.core.AbstractTreeItem} existing child to add the item after",
            "paramName": "after",
            "description": " existing child to add the item after",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 432,
          "column": 4,
          "index": 11502
        },
        "end": {
          "line": 445,
          "column": 5,
          "index": 11953
        }
      },
      "type": "function",
      "params": [
        {
          "name": "treeItem",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        },
        {
          "name": "after",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        }
      ],
      "appearsIn": []
    },
    "addAtBegin": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Add a tree item as the first child of this item.",
          "     *",
          "     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a tree item as the first child of this item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add",
            "paramName": "treeItem",
            "description": " tree item to add",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 452,
          "column": 4,
          "index": 12114
        },
        "end": {
          "line": 454,
          "column": 5,
          "index": 12173
        }
      },
      "type": "function",
      "params": [
        {
          "name": "treeItem",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        }
      ],
      "appearsIn": []
    },
    "remove": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the passed tree items from this item.",
          "     *",
          "     * @param varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to remove",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the passed tree items from this item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to remove",
            "paramName": "varargs",
            "description": " variable number of tree items to remove",
            "type": "qx.ui.tree.core.AbstractTreeItem"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 461,
          "column": 4,
          "index": 12353
        },
        "end": {
          "line": 495,
          "column": 5,
          "index": 13402
        }
      },
      "type": "function",
      "params": [
        {
          "name": "varargs",
          "type": "qx.ui.tree.core.AbstractTreeItem"
        }
      ],
      "appearsIn": []
    },
    "removeAt": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Remove the child with the given child index.",
          "     *",
          "     * @param index {Integer} Index of the child to remove",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove the child with the given child index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} Index of the child to remove",
            "paramName": "index",
            "description": " Index of the child to remove",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 502,
          "column": 4,
          "index": 13543
        },
        "end": {
          "line": 507,
          "column": 5,
          "index": 13660
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "removeAll": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Remove all child items from this item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove all child items from this item.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 512,
          "column": 4,
          "index": 13729
        },
        "end": {
          "line": 519,
          "column": 5,
          "index": 13966
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 522,
        "column": 2,
        "index": 13975
      },
      "end": {
        "line": 525,
        "column": 3,
        "index": 14078
      }
    }
  },
  "statics": {}
}