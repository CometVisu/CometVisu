{
  "version": 0.3,
  "lastModified": 1735341602339,
  "lastModifiedIso": "2024-12-27T23:20:02.339Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/splitpane/Pane.js",
  "type": "class",
  "location": {
    "start": {
      "line": 27,
      "column": 0,
      "index": 831
    },
    "end": {
      "line": 587,
      "column": 3,
      "index": 16885
    }
  },
  "className": "qx.ui.splitpane.Pane",
  "jsdoc": {
    "raw": [
      "*",
      " * A split panes divides an area into two panes. The ratio between the two",
      " * panes is configurable by the user using the splitter.",
      " *",
      " * @childControl slider {qx.ui.splitpane.Slider} shown during resizing the splitpane",
      " * @childControl splitter {qx.ui.splitpane.Splitter} splitter to resize the splitpane",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A split panes divides an area into two panes. The ratio between the two\n panes is configurable by the user using the splitter.</p>"
      }
    ],
    "@childControl": [
      {
        "name": "@childControl",
        "body": "slider {qx.ui.splitpane.Slider} shown during resizing the splitpane"
      },
      {
        "name": "@childControl",
        "body": "splitter {qx.ui.splitpane.Splitter} splitter to resize the splitpane"
      }
    ]
  },
  "superClass": "qx.ui.core.Widget",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "orientation"
      }
    ],
    "location": {
      "start": {
        "line": 43,
        "column": 2,
        "index": 1378
      },
      "end": {
        "line": 61,
        "column": 3,
        "index": 1999
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 2227
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2290
        }
      },
      "json": {
        "refine": true,
        "init": "splitpane"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "offset": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2416
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2498
        }
      },
      "json": {
        "check": "Integer",
        "init": 6,
        "apply": "_applyOffset"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Distance between pointer and splitter when the cursor should change",
          "     * and enable resizing.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Distance between pointer and splitter when the cursor should change\n and enable resizing.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "orientation": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2570
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2690
        }
      },
      "json": {
        "init": "horizontal",
        "check": [
          "horizontal",
          "vertical"
        ],
        "apply": "_applyOrientation"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The orientation of the splitpane control.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The orientation of the splitpane control.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__splitterOffset": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2898
        },
        "end": {
          "line": 103,
          "column": 26,
          "index": 2920
        }
      },
      "appearsIn": []
    },
    "__activeDragSession": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2926
        },
        "end": {
          "line": 104,
          "column": 30,
          "index": 2952
        }
      },
      "appearsIn": []
    },
    "__lastPointerX": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2958
        },
        "end": {
          "line": 105,
          "column": 24,
          "index": 2978
        }
      },
      "appearsIn": []
    },
    "__lastPointerY": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2984
        },
        "end": {
          "line": 106,
          "column": 24,
          "index": 3004
        }
      },
      "appearsIn": []
    },
    "__isHorizontal": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 3010
        },
        "end": {
          "line": 107,
          "column": 24,
          "index": 3030
        }
      },
      "appearsIn": []
    },
    "__beginSize": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 3036
        },
        "end": {
          "line": 108,
          "column": 21,
          "index": 3053
        }
      },
      "appearsIn": []
    },
    "__endSize": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 3059
        },
        "end": {
          "line": 109,
          "column": 19,
          "index": 3074
        }
      },
      "appearsIn": []
    },
    "__children": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 3080
        },
        "end": {
          "line": 110,
          "column": 20,
          "index": 3096
        }
      },
      "appearsIn": []
    },
    "__blocker": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3102
        },
        "end": {
          "line": 111,
          "column": 19,
          "index": 3117
        }
      },
      "appearsIn": []
    },
    "_createChildControlImpl": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3142
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3729
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        },
        {
          "name": "hash"
        }
      ],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "__onSplitterMove": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Move handler for the splitter which takes care of the external",
          "     * triggered resize of children.",
          "     *",
          "     * @param e {qx.event.type.Data} The data even of move.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Move handler for the splitter which takes care of the external\n triggered resize of children.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} The data even of move.",
            "paramName": "e",
            "description": " The data even of move.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 3926
        },
        "end": {
          "line": 144,
          "column": 5,
          "index": 3999
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "__createBlocker": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates a blocker for the splitter which takes all bouse events and",
          "     * also handles the offset and cursor.",
          "     *",
          "     * @param orientation {String} The orientation of the pane.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a blocker for the splitter which takes all bouse events and\n also handles the offset and cursor.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "orientation {String} The orientation of the pane.",
            "paramName": "orientation",
            "description": " The orientation of the pane.",
            "type": "string"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 4211
        },
        "end": {
          "line": 177,
          "column": 5,
          "index": 5015
        }
      },
      "type": "function",
      "params": [
        {
          "name": "orientation",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "getBlocker": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the blocker used over the splitter. this could be used for",
          "     * adding event listeners like tap or dbltap.",
          "     *",
          "     * @return {qx.ui.splitpane.Blocker} The used blocker element.",
          "     *",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the blocker used over the splitter. this could be used for\n adding event listeners like tap or dbltap.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.splitpane.Blocker} The used blocker element.",
            "type": "qx.ui.splitpane.Blocker",
            "description": "The used blocker element."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 5260
        },
        "end": {
          "line": 189,
          "column": 5,
          "index": 5309
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.splitpane.Blocker"
      },
      "appearsIn": []
    },
    "_applyOrientation": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply routine for the orientation property.",
          "     *",
          "     * Sets the pane's layout to vertical or horizontal split layout.",
          "     *",
          "     * @param value {String} The new value of the orientation property",
          "     * @param old {String} The old value of the orientation property",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply routine for the orientation property.\n Sets the pane's layout to vertical or horizontal split layout.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} The new value of the orientation property",
            "paramName": "value",
            "description": " The new value of the orientation property",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "old {String} The old value of the orientation property",
            "paramName": "old",
            "description": " The old value of the orientation property",
            "type": "string"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5811
        },
        "end": {
          "line": 246,
          "column": 5,
          "index": 7065
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "old",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_applyOffset": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 249,
          "column": 4,
          "index": 7094
        },
        "end": {
          "line": 251,
          "column": 5,
          "index": 7161
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__setBlockerPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper for setting the blocker to the right position, which depends on",
          "     * the offset, orientation and the current position of the splitter.",
          "     *",
          "     * @param bounds {Map?null} If the bounds of the splitter are known,",
          "     *   they can be added.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper for setting the blocker to the right position, which depends on\n the offset, orientation and the current position of the splitter.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "bounds {Map?null} If the bounds of the splitter are known,\n   they can be added.",
            "paramName": "bounds",
            "description": " If the bounds of the splitter are known,\n   they can be added.",
            "optional": true,
            "defaultValue": "null",
            "type": "Map"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 7443
        },
        "end": {
          "line": 309,
          "column": 5,
          "index": 9102
        }
      },
      "type": "function",
      "params": [
        {
          "name": "bounds",
          "type": "Map",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "appearsIn": []
    },
    "add": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a widget to the pane.",
          "     *",
          "     * Sets the pane's layout to vertical or horizontal split layout. Depending on the",
          "     * pane's layout the first widget will be the left or top widget, the second one",
          "     * the bottom or right widget. Adding more than two widgets will overwrite the",
          "     * existing ones.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to be inserted into pane.",
          "     * @param flex {Number} The (optional) layout property for the widget's flex value.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a widget to the pane.\n Sets the pane's layout to vertical or horizontal split layout. Depending on the\n pane's layout the first widget will be the left or top widget, the second one\n the bottom or right widget. Adding more than two widgets will overwrite the\n existing ones.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to be inserted into pane.",
            "paramName": "widget",
            "description": " The widget to be inserted into pane.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "flex {Number} The (optional) layout property for the widget's flex value.",
            "paramName": "flex",
            "description": " The (optional) layout property for the widget's flex value.",
            "type": "number"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 328,
          "column": 4,
          "index": 9812
        },
        "end": {
          "line": 335,
          "column": 5,
          "index": 9998
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        },
        {
          "name": "flex",
          "type": "number"
        }
      ],
      "appearsIn": []
    },
    "remove": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the given widget from the pane.",
          "     *",
          "     * @param widget {qx.ui.core.Widget} The widget to be removed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the given widget from the pane.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The widget to be removed.",
            "paramName": "widget",
            "description": " The widget to be removed.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 342,
          "column": 4,
          "index": 10142
        },
        "end": {
          "line": 345,
          "column": 5,
          "index": 10245
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.core.Widget"
        }
      ],
      "appearsIn": []
    },
    "getChildren": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an array containing the pane's content.",
          "     *",
          "     * @return {qx.ui.core.Widget[]} The pane's child widgets",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array containing the pane's content.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget[]} The pane's child widgets",
            "type": "qx.ui.core.Widget[]",
            "description": "The pane's child widgets"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 352,
          "column": 4,
          "index": 10392
        },
        "end": {
          "line": 354,
          "column": 5,
          "index": 10443
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.core.Widget[]"
      },
      "appearsIn": []
    },
    "_onPointerDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for pointerdown event.",
          "     *",
          "     * Shows slider widget and starts drag session if pointer is near/on splitter widget.",
          "     *",
          "     * @param e {qx.event.type.Pointer} pointerdown event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for pointerdown event.\n Shows slider widget and starts drag session if pointer is near/on splitter widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerdown event",
            "paramName": "e",
            "description": " pointerdown event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 10865
        },
        "end": {
          "line": 402,
          "column": 5,
          "index": 11970
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onPointerMove": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for pointermove event.",
          "     *",
          "     * @param e {qx.event.type.Pointer} pointermove event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for pointermove event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointermove event",
            "paramName": "e",
            "description": " pointermove event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 409,
          "column": 4,
          "index": 12096
        },
        "end": {
          "line": 431,
          "column": 5,
          "index": 12784
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onPointerOut": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for pointerout event",
          "     *",
          "     * @param e {qx.event.type.Pointer} pointerout event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for pointerout event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerout event",
            "paramName": "e",
            "description": " pointerout event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 438,
          "column": 4,
          "index": 12907
        },
        "end": {
          "line": 440,
          "column": 5,
          "index": 13008
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onPointerUp": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for pointerup event",
          "     *",
          "     * Sets widget sizes if dragging session has been active.",
          "     *",
          "     * @param e {qx.event.type.Pointer} pointerup event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for pointerup event\n Sets widget sizes if dragging session has been active.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerup event",
            "paramName": "e",
            "description": " pointerup event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 449,
          "column": 4,
          "index": 13198
        },
        "end": {
          "line": 466,
          "column": 5,
          "index": 13554
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_finalizeSizes": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates widgets' sizes based on the slider position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates widgets' sizes based on the slider position.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 477,
          "column": 4,
          "index": 13836
        },
        "end": {
          "line": 510,
          "column": 5,
          "index": 14833
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__computeSizes": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Computes widgets' sizes based on the pointer coordinate.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes widgets' sizes based on the pointer coordinate.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 515,
          "column": 4,
          "index": 14920
        },
        "end": {
          "line": 561,
          "column": 5,
          "index": 16319
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_isActiveDragSession": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Determines whether this is an active drag session",
          "     *",
          "     * @return {Boolean} True if active drag session, otherwise false.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Determines whether this is an active drag session</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True if active drag session, otherwise false.",
            "type": "boolean",
            "description": "True if active drag session, otherwise false."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 568,
          "column": 4,
          "index": 16477
        },
        "end": {
          "line": 570,
          "column": 5,
          "index": 16546
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_setLastPointerPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the last pointer position.",
          "     *",
          "     * @param x {Integer} the x position of the pointer.",
          "     * @param y {Integer} the y position of the pointer.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the last pointer position.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Integer} the x position of the pointer.",
            "paramName": "x",
            "description": " the x position of the pointer.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "y {Integer} the y position of the pointer.",
            "paramName": "y",
            "description": " the y position of the pointer.",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 578,
          "column": 4,
          "index": 16729
        },
        "end": {
          "line": 581,
          "column": 5,
          "index": 16828
        }
      },
      "type": "function",
      "params": [
        {
          "name": "x",
          "type": "Integer"
        },
        {
          "name": "y",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 584,
        "column": 2,
        "index": 16837
      },
      "end": {
        "line": 586,
        "column": 3,
        "index": 16881
      }
    }
  },
  "statics": {}
}