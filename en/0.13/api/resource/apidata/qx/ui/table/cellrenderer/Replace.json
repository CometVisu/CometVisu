{
  "version": 0.3,
  "lastModified": 1717235172106,
  "lastModifiedIso": "2024-06-01T09:46:12.106Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Replace.js",
  "type": "class",
  "location": {
    "start": {
      "line": 60,
      "column": 0,
      "index": 2023
    },
    "end": {
      "line": 130,
      "column": 3,
      "index": 3804
    }
  },
  "className": "qx.ui.table.cellrenderer.Replace",
  "jsdoc": {
    "raw": [
      "*",
      " * The cell will use, if given, the",
      " * replaceMap property and/or the replaceFunction to look up labels for a",
      " * specific cell value. if the replaceMap, which does not need to be used but",
      " * takes precedence if given, has no entry for a specific value, you can implement",
      " * a fallback lookup in the replacementFunction, or use the replacementFunction exclusively.",
      " *",
      " * In editable cells, you need to make sure that the method returning the data",
      " * to the data storage (for example, a database backend) translates the replaced",
      " * cell value (the label) back into the corresponding value. Thus, both map and",
      " * function MUST also take care of the reverse translation of labels into",
      " * values. Example: if you have a field that should display \"Active\" on a \"1\"",
      " * value and \"Inactive\" on a \"0\" value, you must use the following map:",
      " *",
      " * <pre class='javascript'>",
      " * {",
      " *   0 : \"Inactive\",",
      " *   1 : \"Active\",",
      " *   \"Inactive\" : 0,",
      " *   \"Active\" : 1",
      " * }",
      " * </pre>",
      " *",
      " * You can use the addReversedReplaceMap() method to do this for you:",
      " * <pre class='javascript'>",
      " * var propertyCellRenderer = new qx.ui.table.cellrenderer.Replace;",
      " * propertyCellRenderer.setReplaceMap({",
      " *    1 : \"Active\",",
      " *   0 : \"Inactive\",",
      " *   2  : \"Waiting\",",
      " *   'admin' : \"System Administrator\",",
      " *   'manager' : \"User Manager\",",
      " *   'user' : \"Website User\"",
      " * });",
      " * propertyCellRenderer.addReversedReplaceMap();",
      " * </pre>",
      " *",
      " * @param cellInfo {Map} The information about the cell.",
      " *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
      " * @return {String}",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The cell will use, if given, the\n replaceMap property and/or the replaceFunction to look up labels for a\n specific cell value. if the replaceMap, which does not need to be used but\n takes precedence if given, has no entry for a specific value, you can implement\n a fallback lookup in the replacementFunction, or use the replacementFunction exclusively.\n In editable cells, you need to make sure that the method returning the data\n to the data storage (for example, a database backend) translates the replaced\n cell value (the label) back into the corresponding value. Thus, both map and\n function MUST also take care of the reverse translation of labels into\n values. Example: if you have a field that should display \"Active\" on a \"1\"\n value and \"Inactive\" on a \"0\" value, you must use the following map:\n </p>\n<pre class='javascript'>\n {\n   0 : \"Inactive\",\n   1 : \"Active\",\n   \"Inactive\" : 0,\n   \"Active\" : 1\n }\n </pre>\n<p>You can use the addReversedReplaceMap() method to do this for you:\n </p>\n<pre class='javascript'>\n var propertyCellRenderer = new qx.ui.table.cellrenderer.Replace;\n propertyCellRenderer.setReplaceMap({\n    1 : \"Active\",\n   0 : \"Inactive\",\n   2  : \"Waiting\",\n   'admin' : \"System Administrator\",\n   'manager' : \"User Manager\",\n   'user' : \"Website User\"\n });\n propertyCellRenderer.addReversedReplaceMap();\n </pre>"
      }
    ],
    "@param": [
      {
        "name": "@param",
        "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}."
      }
    ],
    "@return": [
      {
        "name": "@return",
        "body": "{String}"
      }
    ]
  },
  "superClass": "qx.ui.table.cellrenderer.Default",
  "properties": {
    "replaceMap": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 2392
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 2473
        }
      },
      "json": {
        "check": "Object",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "* a hashmap which is used to replace values by labels "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>a hashmap which is used to replace values by labels</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "replaceFunction": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2558
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2646
        }
      },
      "json": {
        "check": "Function",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * function that provides the label for a specific value",
          "     *"
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>function that provides the label for a specific value</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "_getContentHtml": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2872
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3457
        }
      },
      "type": "function",
      "params": [
        {
          "name": "cellInfo"
        }
      ],
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Default",
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "addReversedReplaceMap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * adds a reversed replaceMap to itself to translate labels back to the original values",
          "     * @return {Boolean} <code>true</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>adds a reversed replaceMap to itself to translate labels back to the original values</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>",
            "type": "boolean",
            "description": "<code>true</code>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3615
        },
        "end": {
          "line": 128,
          "column": 5,
          "index": 3796
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "statics": {}
}