{
  "version": 0.3,
  "lastModified": 1735222258986,
  "lastModifiedIso": "2024-12-26T14:10:58.986Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/table/IRowRenderer.js",
  "type": "interface",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 506
    },
    "end": {
      "line": 68,
      "column": 3,
      "index": 2200
    }
  },
  "className": "qx.ui.table.IRowRenderer",
  "jsdoc": {
    "raw": [
      "*",
      " * Interface for a row renderer.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Interface for a row renderer.</p>"
      }
    ]
  },
  "members": {
    "updateDataRowElement": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates a data row.",
          "     *",
          "     * The rowInfo map contains the following properties:",
          "     * <ul>",
          "     * <li>rowData (var): contains the row data for the row.",
          "     *   The kind of this object depends on the table model, see",
          "     *   {@link ITableModel#getRowData()}</li>",
          "     * <li>row (int): the model index of the row.</li>",
          "     * <li>selected (boolean): whether a cell in this row is selected.</li>",
          "     * <li>focusedRow (boolean): whether the focused cell is in this row.</li>",
          "     * <li>table (qx.ui.table.Table): the table the row belongs to.</li>",
          "     * </ul>",
          "     *",
          "     * @abstract",
          "     * @param rowInfo {Map} A map containing the information about the row to",
          "     *      update.",
          "     * @param rowElement {Element} the DOM element that renders the data row.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates a data row.\n The rowInfo map contains the following properties:\n </p>\n<ul>\n <li>rowData (var): contains the row data for the row.\n   The kind of this object depends on the table model, see\n   {@link ITableModel#getRowData()}</li>\n <li>row (int): the model index of the row.</li>\n <li>selected (boolean): whether a cell in this row is selected.</li>\n <li>focusedRow (boolean): whether the focused cell is in this row.</li>\n <li>table (qx.ui.table.Table): the table the row belongs to.</li>\n </ul>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowInfo {Map} A map containing the information about the row to\n      update.",
            "paramName": "rowInfo",
            "description": " A map containing the information about the row to\n      update.",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "rowElement {Element} the DOM element that renders the data row.",
            "paramName": "rowElement",
            "description": " the DOM element that renders the data row.",
            "type": "Element"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1362
        },
        "end": {
          "line": 43,
          "column": 48,
          "index": 1406
        }
      },
      "type": "function",
      "params": [
        {
          "name": "rowInfo",
          "type": "Map<any, any>"
        },
        {
          "name": "rowElement",
          "type": "Element"
        }
      ],
      "appearsIn": []
    },
    "getRowHeightStyle": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the row's height CSS style taking the box model into account",
          "     *",
          "     * @param height {Integer} The row's (border-box) height in pixel",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the row's height CSS style taking the box model into account</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "height {Integer} The row's (border-box) height in pixel",
            "paramName": "height",
            "description": " The row's (border-box) height in pixel",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1578
        },
        "end": {
          "line": 50,
          "column": 32,
          "index": 1606
        }
      },
      "type": "function",
      "params": [
        {
          "name": "height",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "createRowStyle": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Create a style string, which will be set as the style property of the row.",
          "     *",
          "     * @param rowInfo {Map} A map containing the information about the row to",
          "     *      update. See {@link #updateDataRowElement} for more information.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create a style string, which will be set as the style property of the row.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowInfo {Map} A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "paramName": "rowInfo",
            "description": " A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 1872
        },
        "end": {
          "line": 58,
          "column": 30,
          "index": 1898
        }
      },
      "type": "function",
      "params": [
        {
          "name": "rowInfo",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": []
    },
    "getRowClass": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Create a HTML class string, which will be set as the class property of the row.",
          "     *",
          "     * @param rowInfo {Map} A map containing the information about the row to",
          "     *      update. See {@link #updateDataRowElement} for more information.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create a HTML class string, which will be set as the class property of the row.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowInfo {Map} A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "paramName": "rowInfo",
            "description": " A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 2169
        },
        "end": {
          "line": 66,
          "column": 27,
          "index": 2192
        }
      },
      "type": "function",
      "params": [
        {
          "name": "rowInfo",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}