{
  "className": "qx.ui.table.selection.Manager",
  "packageName": "qx.ui.table.selection",
  "name": "Manager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0,
        "index": 825
      },
      "end": {
        "line": 173,
        "column": 3,
        "index": 5281
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>A selection manager. This is a helper class that handles all selection\n related events and updates a SelectionModel.\n <p>\n Widgets that support selection should use this manager. This way the only\n thing the widget has to do is mapping pointer or key events to indexes and\n call the corresponding handler method.</p>"
        }
      ],
      "@see": [
        {
          "name": "@see",
          "body": "SelectionModel"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 2,
        "index": 1093
      },
      "end": {
        "line": 40,
        "column": 3,
        "index": 1123
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "selectionModel": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1412
        },
        "end": {
          "line": 54,
          "column": 5,
          "index": 1478
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The selection model where to set the selection changes.</p>"
          }
        ]
      },
      "name": "selectionModel",
      "propertyType": "new",
      "check": "qx.ui.table.selection.Model"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__lastPointerDownHandled": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1686
        },
        "end": {
          "line": 64,
          "column": 34,
          "index": 1716
        }
      },
      "type": "variable",
      "access": "private"
    },
    "handleTap": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1901
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 2916
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the tap event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index the pointer is pointing at.",
            "paramName": "index",
            "description": " the index the pointer is pointing at.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "evt {qx.event.type.Tap} the pointer event.",
            "paramName": "evt",
            "description": " the pointer event.",
            "type": "qx.event.type.Tap"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleSelectKeyDown": {
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 3156
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 3238
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the key down event that is used as replacement for pointer taps\n (Normally space).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index that is currently focused.",
            "paramName": "index",
            "description": " the index that is currently focused.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "evt {Map} the key event.",
            "paramName": "evt",
            "description": " the key event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleMoveKeyDown": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3460
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 4005
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles a key down event that moved the focus (E.g. up, down, home, end, â€¦).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index that is currently focused.",
            "paramName": "index",
            "description": " the index that is currently focused.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "evt {Map} the key event.",
            "paramName": "evt",
            "description": " the key event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_handleSelectEvent": {
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 4175
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 5273
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles a select event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index the event is pointing at.",
            "paramName": "index",
            "description": " the index the event is pointing at.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "evt {Map} the pointer event.",
            "paramName": "evt",
            "description": " the pointer event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getSelectionModel": {
      "type": "function",
      "name": "getSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>selectionModel</code>.\n\nFor further details take a look at the property definition: {@link #selectionModel}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.table.selection.Model",
            "desc": "Returns the value for selectionModel"
          }
        ]
      }
    },
    "setSelectionModel": {
      "type": "function",
      "name": "setSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>selectionModel</code>.\n\nFor further details take a look at the property definition: {@link #selectionModel}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.table.selection.Model",
            "paramName": "value",
            "desc": "Value for selectionModel"
          }
        ]
      }
    },
    "resetSelectionModel": {
      "type": "function",
      "name": "resetSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>selectionModel</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #selectionModel}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.ui.treevirtual.SelectionManager"
  ]
}