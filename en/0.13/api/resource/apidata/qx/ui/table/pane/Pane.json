{
  "version": 0.3,
  "lastModified": 1726088852641,
  "lastModifiedIso": "2024-09-11T21:07:32.641Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/table/pane/Pane.js",
  "type": "class",
  "location": {
    "start": {
      "line": 25,
      "column": 0,
      "index": 679
    },
    "end": {
      "line": 740,
      "column": 3,
      "index": 22101
    }
  },
  "className": "qx.ui.table.pane.Pane",
  "jsdoc": {
    "raw": [
      "*",
      " * The table pane that shows a certain section from a table. This class handles",
      " * the display of the data part of a table and is therefore the base for virtual",
      " * scrolling.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The table pane that shows a certain section from a table. This class handles\n the display of the data part of a table and is therefore the base for virtual\n scrolling.</p>"
      }
    ]
  },
  "superClass": "qx.ui.core.Widget",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "paneScroller"
      }
    ],
    "location": {
      "start": {
        "line": 37,
        "column": 2,
        "index": 1052
      },
      "end": {
        "line": 46,
        "column": 3,
        "index": 1221
      }
    }
  },
  "events": {
    "paneReloadsData": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the current view port of the pane has not loaded data.",
          "     * The data object of the event indicates if the table pane has to reload",
          "     * data or not. Can be used to give the user feedback of the loading state",
          "     * of the rows.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the current view port of the pane has not loaded data.\n The data object of the event indicates if the table pane has to reload\n data or not. Can be used to give the user feedback of the loading state\n of the rows.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1686
        },
        "end": {
          "line": 61,
          "column": 41,
          "index": 1723
        }
      }
    },
    "paneUpdated": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "*",
          "     * Whenever the content of the table pane has been updated (rendered)",
          "     * trigger a paneUpdated event. This allows the canvas cellrenderer to act",
          "     * once the new cells have been integrated in the dom.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whenever the content of the table pane has been updated (rendered)\n trigger a paneUpdated event. This allows the canvas cellrenderer to act\n once the new cells have been integrated in the dom.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1958
        },
        "end": {
          "line": 68,
          "column": 38,
          "index": 1992
        }
      }
    }
  },
  "properties": {
    "firstVisibleRow": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2253
        },
        "end": {
          "line": 83,
          "column": 5,
          "index": 2352
        }
      },
      "json": {
        "check": "Number",
        "init": 0,
        "apply": "_applyFirstVisibleRow"
      },
      "jsdoc": {
        "raw": [
          "* The index of the first row to show. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The index of the first row to show.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "visibleRowCount": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2398
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2497
        }
      },
      "json": {
        "check": "Number",
        "init": 0,
        "apply": "_applyVisibleRowCount"
      },
      "jsdoc": {
        "raw": [
          "* The number of rows to show. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The number of rows to show.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "maxCacheLines": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2625
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2723
        }
      },
      "json": {
        "check": "Number",
        "init": 1000,
        "apply": "_applyMaxCacheLines"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Maximum number of cached rows. If the value is <code>-1</code> the cache",
          "     * size is unlimited",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maximum number of cached rows. If the value is <code>-1</code> the cache\n size is unlimited</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "allowShrinkX": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2748
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 2807
        }
      },
      "json": {
        "refine": true,
        "init": false
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.LayoutItem"
      ]
    }
  },
  "members": {
    "__lastRowCount": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3015
        },
        "end": {
          "line": 116,
          "column": 24,
          "index": 3035
        }
      },
      "appearsIn": []
    },
    "__lastColCount": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 3041
        },
        "end": {
          "line": 117,
          "column": 24,
          "index": 3061
        }
      },
      "appearsIn": []
    },
    "__paneScroller": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3068
        },
        "end": {
          "line": 119,
          "column": 24,
          "index": 3088
        }
      },
      "appearsIn": []
    },
    "__tableContainer": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3094
        },
        "end": {
          "line": 120,
          "column": 26,
          "index": 3116
        }
      },
      "appearsIn": []
    },
    "__focusedRow": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3123
        },
        "end": {
          "line": 122,
          "column": 22,
          "index": 3141
        }
      },
      "appearsIn": []
    },
    "__focusedCol": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3147
        },
        "end": {
          "line": 123,
          "column": 22,
          "index": 3165
        }
      },
      "appearsIn": []
    },
    "__rowCache": {
      "jsdoc": {
        "raw": [
          " sparse array to cache rendered rows"
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3215
        },
        "end": {
          "line": 126,
          "column": 20,
          "index": 3231
        }
      },
      "appearsIn": []
    },
    "__rowCacheCount": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3237
        },
        "end": {
          "line": 127,
          "column": 22,
          "index": 3255
        }
      },
      "appearsIn": []
    },
    "_applyFirstVisibleRow": {
      "jsdoc": {
        "raw": [
          " property modifier"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 3287
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3374
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyVisibleRowCount": {
      "jsdoc": {
        "raw": [
          " property modifier"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 3406
        },
        "end": {
          "line": 137,
          "column": 5,
          "index": 3479
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_getContentHint": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 3504
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 3772
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "getPaneScroller": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the TablePaneScroller this pane belongs to.",
          "     *",
          "     * @return {qx.ui.table.pane.Scroller} the TablePaneScroller.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the TablePaneScroller this pane belongs to.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.table.pane.Scroller} the TablePaneScroller.",
            "type": "qx.ui.table.pane.Scroller",
            "description": "the TablePaneScroller."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 154,
          "column": 4,
          "index": 3927
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 3986
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.table.pane.Scroller"
      },
      "appearsIn": []
    },
    "getTable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the table this pane belongs to.",
          "     *",
          "     * @return {qx.ui.table.Table} the table.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the table this pane belongs to.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.table.Table} the table.",
            "type": "qx.ui.table.Table",
            "description": "the table."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4109
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 4172
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.table.Table"
      },
      "appearsIn": []
    },
    "setFocusedCell": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the currently focused cell.",
          "     *",
          "     * @param col {Integer?null} the model index of the focused cell's column.",
          "     * @param row {Integer?null} the model index of the focused cell's row.",
          "     * @param massUpdate {Boolean ? false} Whether other updates are planned as well.",
          "     *          If true, no repaint will be done.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the currently focused cell.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "col {Integer?null} the model index of the focused cell's column.",
            "paramName": "col",
            "description": " the model index of the focused cell's column.",
            "optional": true,
            "defaultValue": "null",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "row {Integer?null} the model index of the focused cell's row.",
            "paramName": "row",
            "description": " the model index of the focused cell's row.",
            "optional": true,
            "defaultValue": "null",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "massUpdate {Boolean ? false} Whether other updates are planned as well.\n          If true, no repaint will be done.",
            "paramName": "massUpdate",
            "description": " Whether other updates are planned as well.\n          If true, no repaint will be done.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 175,
          "column": 4,
          "index": 4533
        },
        "end": {
          "line": 191,
          "column": 5,
          "index": 5059
        }
      },
      "type": "function",
      "params": [
        {
          "name": "col",
          "type": "Integer",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "row",
          "type": "Integer",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "massUpdate",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "false"
        }
      ],
      "appearsIn": []
    },
    "onSelectionChanged": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the selection has changed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the selection has changed.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 196,
          "column": 4,
          "index": 5143
        },
        "end": {
          "line": 198,
          "column": 5,
          "index": 5222
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "onFocusChanged": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the table gets or looses the focus.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the table gets or looses the focus.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 203,
          "column": 4,
          "index": 5315
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5390
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "setColumnWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the column width.",
          "     *",
          "     * @param col {Integer} the column to change the width for.",
          "     * @param width {Integer} the new width.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the column width.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "col {Integer} the column to change the width for.",
            "paramName": "col",
            "description": " the column to change the width for.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "width {Integer} the new width.",
            "paramName": "width",
            "description": " the new width.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 5559
        },
        "end": {
          "line": 215,
          "column": 5,
          "index": 5625
        }
      },
      "type": "function",
      "params": [
        {
          "name": "col",
          "type": "Integer"
        },
        {
          "name": "width",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "onColOrderChanged": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called the column order has changed.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called the column order has changed.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5714
        },
        "end": {
          "line": 223,
          "column": 5,
          "index": 5773
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "onPaneModelChanged": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the pane model has changed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the pane model has changed.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 228,
          "column": 4,
          "index": 5858
        },
        "end": {
          "line": 230,
          "column": 5,
          "index": 5918
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "onTableModelDataChanged": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the table model data has changed.",
          "     *",
          "     * @param firstRow {Integer} The index of the first row that has changed.",
          "     * @param lastRow {Integer} The index of the last row that has changed.",
          "     * @param firstColumn {Integer} The model index of the first column that has changed.",
          "     * @param lastColumn {Integer} The model index of the last column that has changed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the table model data has changed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "firstRow {Integer} The index of the first row that has changed.",
            "paramName": "firstRow",
            "description": " The index of the first row that has changed.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "lastRow {Integer} The index of the last row that has changed.",
            "paramName": "lastRow",
            "description": " The index of the last row that has changed.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "firstColumn {Integer} The model index of the first column that has changed.",
            "paramName": "firstColumn",
            "description": " The model index of the first column that has changed.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "lastColumn {Integer} The model index of the last column that has changed.",
            "paramName": "lastColumn",
            "description": " The model index of the last column that has changed.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 6348
        },
        "end": {
          "line": 260,
          "column": 5,
          "index": 7009
        }
      },
      "type": "function",
      "params": [
        {
          "name": "firstRow",
          "type": "Integer"
        },
        {
          "name": "lastRow",
          "type": "Integer"
        },
        {
          "name": "firstColumn",
          "type": "Integer"
        },
        {
          "name": "lastColumn",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "onTableModelMetaDataChanged": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the table model meta data has changed.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the table model meta data has changed.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 266,
          "column": 4,
          "index": 7112
        },
        "end": {
          "line": 268,
          "column": 5,
          "index": 7181
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyMaxCacheLines": {
      "jsdoc": {
        "raw": [
          " property apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 271,
          "column": 4,
          "index": 7217
        },
        "end": {
          "line": 275,
          "column": 5,
          "index": 7355
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__rowCacheClear": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Clear the row cache",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clear the row cache</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 280,
          "column": 4,
          "index": 7405
        },
        "end": {
          "line": 283,
          "column": 5,
          "index": 7490
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__rowCacheGet": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get a line from the row cache.",
          "     *",
          "     * @param row {Integer} Row index to get",
          "     * @param selected {Boolean} Whether the row is currently selected",
          "     * @param focused {Boolean} Whether the row is currently focused",
          "     * @return {String|null} The cached row or null if a row with the given",
          "     *     index is not cached.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a line from the row cache.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} Row index to get",
            "paramName": "row",
            "description": " Row index to get",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "selected {Boolean} Whether the row is currently selected",
            "paramName": "selected",
            "description": " Whether the row is currently selected",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "focused {Boolean} Whether the row is currently focused",
            "paramName": "focused",
            "description": " Whether the row is currently focused",
            "type": "boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} The cached row or null if a row with the given\n     index is not cached.",
            "type": "String|null",
            "description": "The cached row or null if a row with the given\n     index is not cached."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 294,
          "column": 4,
          "index": 7851
        },
        "end": {
          "line": 300,
          "column": 5,
          "index": 8036
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row",
          "type": "Integer"
        },
        {
          "name": "selected",
          "type": "boolean"
        },
        {
          "name": "focused",
          "type": "boolean"
        }
      ],
      "returnType": {
        "type": "String|null"
      },
      "appearsIn": []
    },
    "__rowCacheSet": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Add a line to the row cache.",
          "     *",
          "     * @param row {Integer} Row index to set",
          "     * @param rowString {String} computed row string to cache",
          "     * @param selected {Boolean} Whether the row is currently selected",
          "     * @param focused {Boolean} Whether the row is currently focused",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a line to the row cache.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} Row index to set",
            "paramName": "row",
            "description": " Row index to set",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "rowString {String} computed row string to cache",
            "paramName": "rowString",
            "description": " computed row string to cache",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "selected {Boolean} Whether the row is currently selected",
            "paramName": "selected",
            "description": " Whether the row is currently selected",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "focused {Boolean} Whether the row is currently focused",
            "paramName": "focused",
            "description": " Whether the row is currently focused",
            "type": "boolean"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 310,
          "column": 4,
          "index": 8349
        },
        "end": {
          "line": 317,
          "column": 5,
          "index": 8671
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row",
          "type": "Integer"
        },
        {
          "name": "rowString",
          "type": "string"
        },
        {
          "name": "selected",
          "type": "boolean"
        },
        {
          "name": "focused",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "updateContent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates the content of the pane.",
          "     *",
          "     * @param completeUpdate {Boolean ? false} if true a complete update is performed.",
          "     *      On a complete update all cell widgets are recreated.",
          "     * @param scrollOffset {Integer ? null} If set specifies how many rows to scroll.",
          "     * @param onlyRow {Integer ? null} if set only the specified row will be updated.",
          "     * @param onlySelectionOrFocusChanged {Boolean ? false} if true, cell values won't",
          "     *          be updated. Only the row background will.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the content of the pane.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "completeUpdate {Boolean ? false} if true a complete update is performed.\n      On a complete update all cell widgets are recreated.",
            "paramName": "completeUpdate",
            "description": " if true a complete update is performed.\n      On a complete update all cell widgets are recreated.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "scrollOffset {Integer ? null} If set specifies how many rows to scroll.",
            "paramName": "scrollOffset",
            "description": " If set specifies how many rows to scroll.",
            "optional": true,
            "defaultValue": "null",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "onlyRow {Integer ? null} if set only the specified row will be updated.",
            "paramName": "onlyRow",
            "description": " if set only the specified row will be updated.",
            "optional": true,
            "defaultValue": "null",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "onlySelectionOrFocusChanged {Boolean ? false} if true, cell values won't\n          be updated. Only the row background will.",
            "paramName": "onlySelectionOrFocusChanged",
            "description": " if true, cell values won't\n          be updated. Only the row background will.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 329,
          "column": 4,
          "index": 9210
        },
        "end": {
          "line": 354,
          "column": 5,
          "index": 9872
        }
      },
      "type": "function",
      "params": [
        {
          "name": "completeUpdate",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "false"
        },
        {
          "name": "scrollOffset",
          "type": "Integer",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "onlyRow",
          "type": "Integer",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "onlySelectionOrFocusChanged",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "false"
        }
      ],
      "appearsIn": []
    },
    "_updateRowStyles": {
      "jsdoc": {
        "raw": [
          "*",
          "     * If only focus or selection changes it is sufficient to only update the",
          "     * row styles. This method updates the row styles of all visible rows or",
          "     * of just one row.",
          "     *",
          "     * @param onlyRow {Integer|null ? null} If this parameter is set only the row",
          "     *     with this index is updated.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>If only focus or selection changes it is sufficient to only update the\n row styles. This method updates the row styles of all visible rows or\n of just one row.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "onlyRow {Integer|null ? null} If this parameter is set only the row\n     with this index is updated.",
            "paramName": "onlyRow",
            "description": " If this parameter is set only the row\n     with this index is updated.",
            "optional": true,
            "defaultValue": "null",
            "type": [
              "Integer",
              "null"
            ]
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 364,
          "column": 4,
          "index": 10202
        },
        "end": {
          "line": 409,
          "column": 5,
          "index": 11698
        }
      },
      "type": "function",
      "params": [
        {
          "name": "onlyRow",
          "type": [
            "Integer",
            "null"
          ],
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "appearsIn": []
    },
    "_getRowsHtml": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the HTML table fragment for the given row range.",
          "     *",
          "     * @param firstRow {Integer} Index of the first row",
          "     * @param rowCount {Integer} Number of rows",
          "     * @return {String} The HTML table fragment for the given row range.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the HTML table fragment for the given row range.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "firstRow {Integer} Index of the first row",
            "paramName": "firstRow",
            "description": " Index of the first row",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "rowCount {Integer} Number of rows",
            "paramName": "rowCount",
            "description": " Number of rows",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The HTML table fragment for the given row range.",
            "type": "string",
            "description": "The HTML table fragment for the given row range."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 418,
          "column": 4,
          "index": 11965
        },
        "end": {
          "line": 535,
          "column": 5,
          "index": 15920
        }
      },
      "type": "function",
      "params": [
        {
          "name": "firstRow",
          "type": "Integer"
        },
        {
          "name": "rowCount",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "_scrollContent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the pane's contents by the given offset.",
          "     *",
          "     * @param rowOffset {Integer} Number of lines to scroll. Scrolling up is",
          "     *     represented by a negative offset.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the pane's contents by the given offset.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowOffset {Integer} Number of lines to scroll. Scrolling up is\n     represented by a negative offset.",
            "paramName": "rowOffset",
            "description": " Number of lines to scroll. Scrolling up is\n     represented by a negative offset.",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 543,
          "column": 4,
          "index": 16128
        },
        "end": {
          "line": 612,
          "column": 5,
          "index": 18253
        }
      },
      "type": "function",
      "params": [
        {
          "name": "rowOffset",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_updateSingleRow": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 614,
          "column": 4,
          "index": 18260
        },
        "end": {
          "line": 656,
          "column": 5,
          "index": 19632
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row"
        }
      ],
      "appearsIn": []
    },
    "_updateAllRows": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates the content of the pane (implemented using array joins).",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the content of the pane (implemented using array joins).</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 661,
          "column": 4,
          "index": 19727
        },
        "end": {
          "line": 713,
          "column": 5,
          "index": 21302
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getRenderedRowHeight": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 715,
          "column": 4,
          "index": 21309
        },
        "end": {
          "line": 727,
          "column": 5,
          "index": 21756
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 736,
        "column": 2,
        "index": 21952
      },
      "end": {
        "line": 739,
        "column": 3,
        "index": 22097
      }
    }
  },
  "statics": {}
}