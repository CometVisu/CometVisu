{
  "version": 0.3,
  "lastModified": 1731947914135,
  "lastModifiedIso": "2024-11-18T16:38:34.135Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Abstract.js",
  "type": "class",
  "location": {
    "start": {
      "line": 26,
      "column": 0,
      "index": 635
    },
    "end": {
      "line": 253,
      "column": 3,
      "index": 7025
    }
  },
  "className": "qx.ui.table.cellrenderer.Abstract",
  "jsdoc": {
    "raw": [
      "*",
      " * An abstract data cell renderer that does the basic coloring",
      " * (borders, selected look, ...).",
      " *",
      " * @require(qx.bom.Stylesheet)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>An abstract data cell renderer that does the basic coloring\n (borders, selected look, â€¦).</p>"
      }
    ],
    "@require": [
      {
        "name": "@require",
        "body": "qx.bom.Stylesheet"
      }
    ]
  },
  "isSingleton": false,
  "abstract": true,
  "interfaces": [
    "qx.ui.table.ICellRenderer"
  ],
  "superClass": "qx.core.Object",
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 31,
        "column": 2,
        "index": 779
      },
      "end": {
        "line": 48,
        "column": 3,
        "index": 1196
      }
    }
  },
  "properties": {
    "defaultCellStyle": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1357
        },
        "end": {
          "line": 59,
          "column": 5,
          "index": 1444
        }
      },
      "json": {
        "check": "String",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The default cell style. The value of this property will be provided",
          "     * to the cell renderer as cellInfo.style.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The default cell style. The value of this property will be provided\n to the cell renderer as cellInfo.style.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "_onChangeTheme": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for the theme change.",
          "     * @signature function()",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the theme change.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1550
        },
        "end": {
          "line": 76,
          "column": 6,
          "index": 1809
        }
      },
      "appearsIn": []
    },
    "_insetX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * the sum of the horizontal insets. This is needed to compute the box model",
          "     * independent size",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>the sum of the horizontal insets. This is needed to compute the box model\n independent size</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 1937
        },
        "end": {
          "line": 82,
          "column": 22,
          "index": 1955
        }
      },
      "appearsIn": []
    },
    "_insetY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * the sum of the vertical insets. This is needed to compute the box model",
          "     * independent size",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>the sum of the vertical insets. This is needed to compute the box model\n independent size</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2125
        },
        "end": {
          "line": 88,
          "column": 14,
          "index": 2135
        }
      },
      "appearsIn": []
    },
    "_createStyleSheet": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates the style sheet used for the table cells.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the style sheet used for the table cells.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2215
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3232
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getCellClass": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get a string of the cell element's HTML classes.",
          "     *",
          "     * This method may be overridden by sub classes.",
          "     *",
          "     * @param cellInfo {Map} cellInfo of the cell",
          "     * @return {String} The table cell HTML classes as string.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a string of the cell element's HTML classes.\n This method may be overridden by sub classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} cellInfo of the cell",
            "paramName": "cellInfo",
            "description": " cellInfo of the cell",
            "type": "Map<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The table cell HTML classes as string.",
            "type": "string",
            "description": "The table cell HTML classes as string."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 3491
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3557
        }
      },
      "type": "function",
      "params": [
        {
          "name": "cellInfo",
          "type": "Map<any, any>"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "_getCellStyle": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the CSS styles that should be applied to the main div of this",
          "     * cell.",
          "     *",
          "     * This method may be overridden by sub classes.",
          "     *",
          "     * @param cellInfo {Map} The information about the cell.",
          "     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
          "     * @return {var} the CSS styles of the main div.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the CSS styles that should be applied to the main div of this\n cell.\n This method may be overridden by sub classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the CSS styles of the main div.",
            "type": "var",
            "description": "the CSS styles of the main div."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 146,
          "column": 4,
          "index": 3933
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 3999
        }
      },
      "type": "function",
      "params": [
        {
          "name": "cellInfo",
          "type": "Map<any, any>"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": []
    },
    "_getCellAttributes": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Retrieve any extra attributes the cell renderer wants applied to this",
          "     * cell.",
          "     *",
          "     * @param cellInfo {Map} The information about the cell.",
          "     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
          "     *",
          "     * @return {String}",
          "     *   The extra attributes to be applied to this cell.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieve any extra attributes the cell renderer wants applied to this\n cell.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   The extra attributes to be applied to this cell.",
            "type": "string",
            "description": "   The extra attributes to be applied to this cell."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 4351
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 4767
        }
      },
      "type": "function",
      "params": [
        {
          "name": "cellInfo",
          "type": "Map<any, any>"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "_getContentHtml": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the HTML that should be used inside the main div of this cell.",
          "     *",
          "     * This method may be overridden by sub classes.",
          "     *",
          "     * @param cellInfo {Map} The information about the cell.",
          "     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
          "     * @return {String} the inner HTML of the cell.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the HTML that should be used inside the main div of this cell.\n This method may be overridden by sub classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the inner HTML of the cell.",
            "type": "string",
            "description": "the inner HTML of the cell."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 184,
          "column": 4,
          "index": 5130
        },
        "end": {
          "line": 186,
          "column": 5,
          "index": 5198
        }
      },
      "type": "function",
      "params": [
        {
          "name": "cellInfo",
          "type": "Map<any, any>"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "_getCellSizeStyle": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the cell size taking the box model into account",
          "     *",
          "     * @param width {Integer} The cell's (border-box) width in pixel",
          "     * @param height {Integer} The cell's (border-box) height in pixel",
          "     * @param insetX {Integer} The cell's horizontal insets, i.e. the sum of",
          "     *    horizontal paddings and borders",
          "     * @param insetY {Integer} The cell's vertical insets, i.e. the sum of",
          "     *    vertical paddings and borders",
          "     * @return {String} The CSS style string for the cell size",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the cell size taking the box model into account</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} The cell's (border-box) width in pixel",
            "paramName": "width",
            "description": " The cell's (border-box) width in pixel",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "height {Integer} The cell's (border-box) height in pixel",
            "paramName": "height",
            "description": " The cell's (border-box) height in pixel",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "insetX {Integer} The cell's horizontal insets, i.e. the sum of\n    horizontal paddings and borders",
            "paramName": "insetX",
            "description": " The cell's horizontal insets, i.e. the sum of\n    horizontal paddings and borders",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "insetY {Integer} The cell's vertical insets, i.e. the sum of\n    vertical paddings and borders",
            "paramName": "insetY",
            "description": " The cell's vertical insets, i.e. the sum of\n    vertical paddings and borders",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The CSS style string for the cell size",
            "type": "string",
            "description": "The CSS style string for the cell size"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 5724
        },
        "end": {
          "line": 210,
          "column": 5,
          "index": 6059
        }
      },
      "type": "function",
      "params": [
        {
          "name": "width",
          "type": "Integer"
        },
        {
          "name": "height",
          "type": "Integer"
        },
        {
          "name": "insetX",
          "type": "Integer"
        },
        {
          "name": "insetY",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "createDataCellHtml": {
      "jsdoc": {
        "raw": [
          " interface implementation"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 6098
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 6771
        }
      },
      "type": "function",
      "params": [
        {
          "name": "cellInfo"
        },
        {
          "name": "htmlArr"
        }
      ],
      "appearsIn": [
        "qx.ui.table.ICellRenderer"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 243,
        "column": 2,
        "index": 6780
      },
      "end": {
        "line": 252,
        "column": 3,
        "index": 7021
      }
    }
  },
  "statics": {}
}