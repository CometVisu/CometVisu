{
  "className": "qx.ui.table.cellrenderer.Abstract",
  "packageName": "qx.ui.table.cellrenderer",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.table.ICellRenderer"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 635
      },
      "end": {
        "line": 253,
        "column": 3,
        "index": 7025
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>An abstract data cell renderer that does the basic coloring\n (borders, selected look, â€¦).</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.bom.Stylesheet"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 31,
        "column": 2,
        "index": 779
      },
      "end": {
        "line": 48,
        "column": 3,
        "index": 1196
      }
    }
  },
  "properties": {
    "defaultCellStyle": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1357
        },
        "end": {
          "line": 59,
          "column": 5,
          "index": 1444
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The default cell style. The value of this property will be provided\n to the cell renderer as cellInfo.style.</p>"
          }
        ]
      },
      "name": "defaultCellStyle",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "_onChangeTheme": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1550
        },
        "end": {
          "line": 76,
          "column": 6,
          "index": 1809
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the theme change.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_insetX": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 1937
        },
        "end": {
          "line": 82,
          "column": 22,
          "index": 1955
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>the sum of the horizontal insets. This is needed to compute the box model\n independent size</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_insetY": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2125
        },
        "end": {
          "line": 88,
          "column": 14,
          "index": 2135
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>the sum of the vertical insets. This is needed to compute the box model\n independent size</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_createStyleSheet": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2215
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3232
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the style sheet used for the table cells.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellClass": {
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 3491
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3557
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a string of the cell element's HTML classes.\n This method may be overridden by sub classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} cellInfo of the cell",
            "paramName": "cellInfo",
            "description": " cellInfo of the cell",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The table cell HTML classes as string.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " The table cell HTML classes as string."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellStyle": {
      "location": {
        "start": {
          "line": 146,
          "column": 4,
          "index": 3933
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 3999
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the CSS styles that should be applied to the main div of this\n cell.\n This method may be overridden by sub classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the CSS styles of the main div.",
            "type": "var",
            "description": " the CSS styles of the main div."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellAttributes": {
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 4351
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 4767
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieve any extra attributes the cell renderer wants applied to this\n cell.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   The extra attributes to be applied to this cell.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": "\n   The extra attributes to be applied to this cell."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getContentHtml": {
      "location": {
        "start": {
          "line": 184,
          "column": 4,
          "index": 5130
        },
        "end": {
          "line": 186,
          "column": 5,
          "index": 5198
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the HTML that should be used inside the main div of this cell.\n This method may be overridden by sub classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the inner HTML of the cell.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " the inner HTML of the cell."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellSizeStyle": {
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 5724
        },
        "end": {
          "line": 210,
          "column": 5,
          "index": 6059
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the cell size taking the box model into account</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} The cell's (border-box) width in pixel",
            "paramName": "width",
            "description": " The cell's (border-box) width in pixel",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "height {Integer} The cell's (border-box) height in pixel",
            "paramName": "height",
            "description": " The cell's (border-box) height in pixel",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "insetX {Integer} The cell's horizontal insets, i.e. the sum of\n    horizontal paddings and borders",
            "paramName": "insetX",
            "description": " The cell's horizontal insets, i.e. the sum of\n    horizontal paddings and borders",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "insetY {Integer} The cell's vertical insets, i.e. the sum of\n    vertical paddings and borders",
            "paramName": "insetY",
            "description": " The cell's vertical insets, i.e. the sum of\n    vertical paddings and borders",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The CSS style string for the cell size",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " The CSS style string for the cell size"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "createDataCellHtml": {
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 6098
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 6771
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.ICellRenderer",
      "appearsIn": [
        "qx.ui.table.ICellRenderer"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getDefaultCellStyle": {
      "type": "function",
      "name": "getDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultCellStyle"
          }
        ]
      }
    },
    "setDefaultCellStyle": {
      "type": "function",
      "name": "setDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultCellStyle"
          }
        ]
      }
    },
    "resetDefaultCellStyle": {
      "type": "function",
      "name": "resetDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultCellStyle</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 243,
        "column": 2,
        "index": 6780
      },
      "end": {
        "line": 252,
        "column": 3,
        "index": 7021
      }
    }
  },
  "descendants": [
    "qx.ui.table.cellrenderer.AbstractImage",
    "qx.ui.table.cellrenderer.Debug",
    "qx.ui.table.cellrenderer.Default",
    "qx.ui.treevirtual.SimpleTreeDataCellRenderer"
  ]
}