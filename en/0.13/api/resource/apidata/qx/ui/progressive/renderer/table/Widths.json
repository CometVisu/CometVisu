{
  "version": 0.3,
  "lastModified": 1722153602003,
  "lastModifiedIso": "2024-07-28T08:00:02.003Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/renderer/table/Widths.js",
  "type": "class",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 504
    },
    "end": {
      "line": 157,
      "column": 3,
      "index": 4050
    }
  },
  "className": "qx.ui.progressive.renderer.table.Widths",
  "jsdoc": {
    "raw": [
      "*",
      " * Column width array for a whole set of columns",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Column width array for a whole set of columns</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "numColumns"
      }
    ],
    "location": {
      "start": {
        "line": 29,
        "column": 2,
        "index": 680
      },
      "end": {
        "line": 38,
        "column": 3,
        "index": 955
      }
    }
  },
  "members": {
    "__columnData": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 975
        },
        "end": {
          "line": 41,
          "column": 22,
          "index": 993
        }
      },
      "appearsIn": []
    },
    "getData": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the array of column data.",
          "     *",
          "     * @return {Array}",
          "     *   Array of column data",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the array of column data.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array}\n   Array of column data",
            "type": "Array<any>",
            "description": "   Array of column data"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1120
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1169
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Array<any>"
      },
      "appearsIn": []
    },
    "set": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the width, minimum width and/or maximum width of a column at one",
          "     * time.",
          "     *",
          "     * @param column {Integer}",
          "     *   The column number whose attributes are being set.",
          "     *",
          "     * @param map {Map}",
          "     *   An object with any or all of the three members, \"width\", \"minWidth\",",
          "     *   \"maxWidth\".  The property values are as described for {@link",
          "     *   #setWidth}, {@link #setMinWidth} and {@link #setMaxWidth}",
          "     *   respectively.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the width, minimum width and/or maximum width of a column at one\n time.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "column {Integer}\n   The column number whose attributes are being set.",
            "paramName": "column",
            "description": "\n   The column number whose attributes are being set.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "map {Map}\n   An object with any or all of the three members, \"width\", \"minWidth\",\n   \"maxWidth\".  The property values are as described for {@link\n   #setWidth}, {@link #setMinWidth} and {@link #setMaxWidth}\n   respectively.",
            "paramName": "map",
            "description": "\n   An object with any or all of the three members, \"width\", \"minWidth\",\n   \"maxWidth\".  The property values are as described for {@link\n   #setWidth}, {@link #setMinWidth} and {@link #setMaxWidth}\n   respectively.",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1654
        },
        "end": {
          "line": 87,
          "column": 5,
          "index": 2103
        }
      },
      "type": "function",
      "params": [
        {
          "name": "column",
          "type": "Integer"
        },
        {
          "name": "map",
          "type": "Map<any, any>"
        }
      ],
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MProperty"
      ]
    },
    "setWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the width of a column.",
          "     *",
          "     *",
          "     * @param column {Integer} The column whose width is to be set",
          "     *",
          "     * @param width {Integer|String}",
          "     *   The width of the specified column.  The width may be specified as",
          "     *   integer number of pixels (e.g. 100), a string representing percentage",
          "     *   of the inner width of the Table (e.g. \"25%\"), or a string",
          "     *   representing a flex width (e.g. \"1*\").",
          "     *",
          "     *",
          "     * @throws {Error}",
          "     *   Error is thrown if the provided column number is out of the range.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the width of a column.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "column {Integer} The column whose width is to be set",
            "paramName": "column",
            "description": " The column whose width is to be set",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "width {Integer|String}\n   The width of the specified column.  The width may be specified as\n   integer number of pixels (e.g. 100), a string representing percentage\n   of the inner width of the Table (e.g. \"25%\"), or a string\n   representing a flex width (e.g. \"1*\").",
            "paramName": "width",
            "description": "\n   The width of the specified column.  The width may be specified as\n   integer number of pixels (e.g. 100), a string representing percentage\n   of the inner width of the Table (e.g. \"25%\"), or a string\n   representing a flex width (e.g. \"1*\").",
            "type": [
              "Integer",
              "String"
            ]
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error}\n   Error is thrown if the provided column number is out of the range.",
            "type": "Error",
            "description": "\n   Error is thrown if the provided column number is out of the range."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2667
        },
        "end": {
          "line": 111,
          "column": 5,
          "index": 2882
        }
      },
      "type": "function",
      "params": [
        {
          "name": "column",
          "type": "Integer"
        },
        {
          "name": "width",
          "type": [
            "Integer",
            "String"
          ]
        }
      ],
      "appearsIn": []
    },
    "setMinWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the minimum width of a column.",
          "     *",
          "     *",
          "     * @param column {Integer}",
          "     *   The column whose minimum width is to be set",
          "     *",
          "     * @param width {Integer}",
          "     *   The minimum width of the specified column.",
          "     *",
          "     *",
          "     * @throws {Error}",
          "     *   Error is thrown if the provided column number is out of the range.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the minimum width of a column.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "column {Integer}\n   The column whose minimum width is to be set",
            "paramName": "column",
            "description": "\n   The column whose minimum width is to be set",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "width {Integer}\n   The minimum width of the specified column.",
            "paramName": "width",
            "description": "\n   The minimum width of the specified column.",
            "type": "Integer"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error}\n   Error is thrown if the provided column number is out of the range.",
            "type": "Error",
            "description": "\n   Error is thrown if the provided column number is out of the range."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3247
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3462
        }
      },
      "type": "function",
      "params": [
        {
          "name": "column",
          "type": "Integer"
        },
        {
          "name": "width",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "setMaxWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the maximum width of a column.",
          "     *",
          "     *",
          "     * @param column {Integer}",
          "     *   The column whose maximum width is to be set",
          "     *",
          "     * @param width {Integer}",
          "     *   The maximum width of the specified column.",
          "     *",
          "     *",
          "     * @throws {Error}",
          "     *   Error is thrown if the provided column number is out of the range.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the maximum width of a column.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "column {Integer}\n   The column whose maximum width is to be set",
            "paramName": "column",
            "description": "\n   The column whose maximum width is to be set",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "width {Integer}\n   The maximum width of the specified column.",
            "paramName": "width",
            "description": "\n   The maximum width of the specified column.",
            "type": "Integer"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error}\n   Error is thrown if the provided column number is out of the range.",
            "type": "Error",
            "description": "\n   Error is thrown if the provided column number is out of the range."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 3827
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4042
        }
      },
      "type": "function",
      "params": [
        {
          "name": "column",
          "type": "Integer"
        },
        {
          "name": "width",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}