{
  "version": 0.3,
  "lastModified": 1735383688053,
  "lastModifiedIso": "2024-12-28T11:01:28.053Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/decoration/MBorderImage.js",
  "type": "mixin",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 585
    },
    "end": {
      "line": 280,
      "column": 3,
      "index": 8231
    }
  },
  "className": "qx.ui.decoration.MBorderImage",
  "jsdoc": {
    "raw": [
      "*",
      " * Decorator which uses the CSS3 border image properties.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Decorator which uses the CSS3 border image properties.</p>"
      }
    ]
  },
  "properties": {
    "borderImage": {
      "location": {
        "start": {
          "line": 28,
          "column": 4,
          "index": 695
        },
        "end": {
          "line": 32,
          "column": 5,
          "index": 793
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Base image URL.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Base image URL.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "sliceTop": {
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 985
        },
        "end": {
          "line": 44,
          "column": 5,
          "index": 1099
        }
      },
      "json": {
        "check": "Integer",
        "nullable": true,
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The top slice line of the base image. The slice properties divide the",
          "     * image into nine regions, which define the corner, edge and the center",
          "     * images.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The top slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "sliceRight": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1293
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1409
        }
      },
      "json": {
        "check": "Integer",
        "nullable": true,
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The right slice line of the base image. The slice properties divide the",
          "     * image into nine regions, which define the corner, edge and the center",
          "     * images.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The right slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "sliceBottom": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1604
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 1721
        }
      },
      "json": {
        "check": "Integer",
        "nullable": true,
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The bottom slice line of the base image. The slice properties divide the",
          "     * image into nine regions, which define the corner, edge and the center",
          "     * images.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The bottom slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "sliceLeft": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 1914
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 2029
        }
      },
      "json": {
        "check": "Integer",
        "nullable": true,
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The left slice line of the base image. The slice properties divide the",
          "     * image into nine regions, which define the corner, edge and the center",
          "     * images.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The left slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "slice": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2176
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2283
        }
      },
      "json": {
        "group": [
          "sliceTop",
          "sliceRight",
          "sliceBottom",
          "sliceLeft"
        ],
        "mode": "shorthand"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The slice properties divide the image into nine regions, which define the",
          "     * corner, edge and the center images.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The slice properties divide the image into nine regions, which define the\n corner, edge and the center images.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "repeatX": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2907
        },
        "end": {
          "line": 108,
          "column": 5,
          "index": 3024
        }
      },
      "json": {
        "check": [
          "stretch",
          "repeat",
          "round"
        ],
        "init": "stretch",
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * This property specifies how the images for the sides and the middle part",
          "     * of the border image are scaled and tiled horizontally.",
          "     *",
          "     * Values have the following meanings:",
          "     * <ul>",
          "     *   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>",
          "     *   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>",
          "     *   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not",
          "     *    fill the area with a whole number of tiles, the image is rescaled so",
          "     *    that it does.</li>",
          "     * </ul>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This property specifies how the images for the sides and the middle part\n of the border image are scaled and tiled horizontally.\n Values have the following meanings:\n </p>\n<ul>\n   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n    fill the area with a whole number of tiles, the image is rescaled so\n    that it does.</li>\n </ul>"
          }
        ]
      },
      "appearsIn": []
    },
    "repeatY": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3646
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 3763
        }
      },
      "json": {
        "check": [
          "stretch",
          "repeat",
          "round"
        ],
        "init": "stretch",
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * This property specifies how the images for the sides and the middle part",
          "     * of the border image are scaled and tiled vertically.",
          "     *",
          "     * Values have the following meanings:",
          "     * <ul>",
          "     *   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>",
          "     *   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>",
          "     *   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not",
          "     *    fill the area with a whole number of tiles, the image is rescaled so",
          "     *    that it does.</li>",
          "     * </ul>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This property specifies how the images for the sides and the middle part\n of the border image are scaled and tiled vertically.\n Values have the following meanings:\n </p>\n<ul>\n   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n    fill the area with a whole number of tiles, the image is rescaled so\n    that it does.</li>\n </ul>"
          }
        ]
      },
      "appearsIn": []
    },
    "repeat": {
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 3915
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 3991
        }
      },
      "json": {
        "group": [
          "repeatX",
          "repeatY"
        ],
        "mode": "shorthand"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * This property specifies how the images for the sides and the middle part",
          "     * of the border image are scaled and tiled.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This property specifies how the images for the sides and the middle part\n of the border image are scaled and tiled.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "fill": {
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 4126
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 4214
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "apply": "_applyBorderImage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * If set to <code>false</code>, the center image will be omitted and only",
          "     * the border will be drawn.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>If set to <code>false</code>, the center image will be omitted and only\n the border will be drawn.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "borderImageMode": {
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 4489
        },
        "end": {
          "line": 159,
          "column": 5,
          "index": 4581
        }
      },
      "json": {
        "check": [
          "horizontal",
          "vertical",
          "grid"
        ],
        "init": "grid"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Configures the border image mode. Supported values:",
          "     * <ul>",
          "     *   <li>horizontal: left and right border images</li>",
          "     *   <li>vertical: top and bottom border images</li>",
          "     *   <li>grid: border images for all edges</li>",
          "     * </ul>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Configures the border image mode. Supported values:\n </p>\n<ul>\n   <li>horizontal: left and right border images</li>\n   <li>vertical: top and bottom border images</li>\n   <li>grid: border images for all edges</li>\n </ul>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "_styleBorderImage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds the border-image styles to the given map",
          "     * @param styles {Map} CSS style map",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the border-image styles to the given map</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} CSS style map",
            "paramName": "styles",
            "description": " CSS style map",
            "type": "Map<any, any>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 167,
          "column": 4,
          "index": 4715
        },
        "end": {
          "line": 206,
          "column": 5,
          "index": 6026
        }
      },
      "type": "function",
      "params": [
        {
          "name": "styles",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": []
    },
    "_getDefaultInsetsForBorderImage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Computes the inset values based on the border image slices (defined in the",
          "     * decoration theme or computed from the fallback image sizes).",
          "     *",
          "     * @return {Map} Map with the top, right, bottom and left insets",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the inset values based on the border image slices (defined in the\n decoration theme or computed from the fallback image sizes).</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the top, right, bottom and left insets",
            "type": "Map<any, any>",
            "description": "Map with the top, right, bottom and left insets"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 214,
          "column": 4,
          "index": 6275
        },
        "end": {
          "line": 236,
          "column": 5,
          "index": 6888
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "_applyBorderImage": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 238,
          "column": 4,
          "index": 6895
        },
        "end": {
          "line": 246,
          "column": 5,
          "index": 7152
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__getSlices": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Gets the slice sizes from the fallback border images.",
          "     *",
          "     * @param baseImage {String} Resource Id of the base border image",
          "     * @return {Integer[]} Array with the top, right, bottom and left slice widths",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the slice sizes from the fallback border images.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "baseImage {String} Resource Id of the base border image",
            "paramName": "baseImage",
            "description": " Resource Id of the base border image",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} Array with the top, right, bottom and left slice widths",
            "type": "Integer[]",
            "description": "Array with the top, right, bottom and left slice widths"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 254,
          "column": 4,
          "index": 7396
        },
        "end": {
          "line": 278,
          "column": 5,
          "index": 8223
        }
      },
      "type": "function",
      "params": [
        {
          "name": "baseImage",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Integer[]"
      },
      "appearsIn": []
    }
  },
  "statics": {}
}