{
  "version": 0.3,
  "lastModified": 1717235171418,
  "lastModifiedIso": "2024-06-01T09:46:11.418Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/root/Inline.js",
  "type": "class",
  "location": {
    "start": {
      "line": 40,
      "column": 0,
      "index": 1374
    },
    "end": {
      "line": 295,
      "column": 3,
      "index": 8080
    }
  },
  "className": "qx.ui.root.Inline",
  "jsdoc": {
    "raw": [
      "*",
      " * This classes could be used to insert qooxdoo islands into existing",
      " * web pages. You can use the isles to place any qooxdoo powered widgets",
      " * inside a layout made using traditional HTML markup and CSS.",
      " *",
      " * The size of the widget in each dimension can either be determined by the",
      " * size hint of the inline's children or by the size of the root DOM element. If",
      " * <code>dynamicX</code>/<code>dynamicY</code> is true the width/height of the DOM",
      " * element is used.",
      " *",
      " * This class uses {@link qx.ui.layout.Basic} as default layout. The layout",
      " * can be changed using the {@link #setLayout} method.",
      " *",
      " * To position popups and tooltips please have a look at {@link qx.ui.root.Page}.",
      " *",
      " * @use(qx.event.handler.ElementResize)",
      " * @ignore(qx.ui.popup, qx.ui.popup.Manager.*)",
      " * @ignore(qx.ui.menu, qx.ui.menu.Manager.*)",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This classes could be used to insert qooxdoo islands into existing\n web pages. You can use the isles to place any qooxdoo powered widgets\n inside a layout made using traditional HTML markup and CSS.\n The size of the widget in each dimension can either be determined by the\n size hint of the inline's children or by the size of the root DOM element. If\n <code>dynamicX</code>/<code>dynamicY</code> is true the width/height of the DOM\n element is used.\n This class uses {@link qx.ui.layout.Basic} as default layout. The layout\n can be changed using the {@link #setLayout} method.\n To position popups and tooltips please have a look at {@link qx.ui.root.Page}.</p>"
      }
    ],
    "@use": [
      {
        "name": "@use",
        "body": "qx.event.handler.ElementResize"
      }
    ],
    "@ignore": [
      {
        "name": "@ignore",
        "body": "qx.ui.popup, qx.ui.popup.Manager.*"
      },
      {
        "name": "@ignore",
        "body": "qx.ui.menu, qx.ui.menu.Manager.*"
      }
    ]
  },
  "superClass": "qx.ui.root.Abstract",
  "mixins": [
    "qx.ui.core.MLayoutHandling"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "el"
      },
      {
        "name": "dynamicX"
      },
      {
        "name": "dynamicY"
      }
    ],
    "location": {
      "start": {
        "line": 60,
        "column": 2,
        "index": 2191
      },
      "end": {
        "line": 110,
        "column": 3,
        "index": 3546
      }
    }
  },
  "members": {
    "__dynX": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3750
        },
        "end": {
          "line": 119,
          "column": 17,
          "index": 3763
        }
      },
      "appearsIn": []
    },
    "__dynY": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3769
        },
        "end": {
          "line": 120,
          "column": 17,
          "index": 3782
        }
      },
      "appearsIn": []
    },
    "__elem": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3788
        },
        "end": {
          "line": 121,
          "column": 16,
          "index": 3800
        }
      },
      "appearsIn": []
    },
    "__initDynamicMode": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Performs several checks for dynamic mode and adds the \"resize\" listener",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Performs several checks for dynamic mode and adds the \"resize\" listener</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3902
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 5296
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_createContentElement": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 5321
        },
        "end": {
          "line": 206,
          "column": 5,
          "index": 6078
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_onResize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener for the element's resize event",
          "     *",
          "     * @param e {qx.event.type.Event} Event object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener for the element's resize event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Event object",
            "paramName": "e",
            "description": " Event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 6206
        },
        "end": {
          "line": 221,
          "column": 5,
          "index": 6441
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Event"
        }
      ],
      "appearsIn": []
    },
    "_onWindowResize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listener for the window's resize event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener for the window's resize event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 226,
          "column": 4,
          "index": 6511
        },
        "end": {
          "line": 236,
          "column": 5,
          "index": 6803
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_computeSizeHint": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 6828
        },
        "end": {
          "line": 266,
          "column": 5,
          "index": 7461
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget",
        "qx.ui.core.LayoutItem"
      ]
    },
    "setLayout": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set a layout manager for the widget. A a layout manager can only be connected",
          "     * with one widget. Reset the connection with a previous widget first, if you",
          "     * like to use it in another widget instead.",
          "     *",
          "     * @param layout {qx.ui.layout.Abstract} The new layout or",
          "     *     <code>null</code> to reset the layout.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set a layout manager for the widget. A a layout manager can only be connected\n with one widget. Reset the connection with a previous widget first, if you\n like to use it in another widget instead.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "layout {qx.ui.layout.Abstract} The new layout or\n     <code>null</code> to reset the layout.",
            "paramName": "layout",
            "description": " The new layout or\n     <code>null</code> to reset the layout.",
            "type": "qx.ui.layout.Abstract"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1490
        },
        "end": {
          "line": 46,
          "column": 5,
          "index": 1546
        }
      },
      "type": "function",
      "params": [
        {
          "name": "layout",
          "type": "qx.ui.layout.Abstract"
        }
      ],
      "appearsIn": [
        "qx.ui.core.MLayoutHandling"
      ],
      "mixin": "qx.ui.core.MLayoutHandling"
    },
    "getLayout": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the widget's layout manager.",
          "     *",
          "     * @return {qx.ui.layout.Abstract} The widget's layout manager",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the widget's layout manager.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.layout.Abstract} The widget's layout manager",
            "type": "qx.ui.layout.Abstract",
            "description": "The widget's layout manager"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1683
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1734
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.layout.Abstract"
      },
      "appearsIn": [
        "qx.ui.core.MLayoutHandling",
        "qx.ui.root.Abstract"
      ],
      "mixin": "qx.ui.core.MLayoutHandling"
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 285,
        "column": 2,
        "index": 7918
      },
      "end": {
        "line": 294,
        "column": 3,
        "index": 8076
      }
    }
  },
  "statics": {
    "remap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Mapping of protected methods to public.",
          "     * This omits an additional function call when using these methods. Call",
          "     * this methods in the defer block of the including class.",
          "     *",
          "     * @param members {Map} The including classes members map",
          "     * @deprecated {7.0} this is not necessary in modern compilers and leads to unexpected behaviour",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Mapping of protected methods to public.\n This omits an additional function call when using these methods. Call\n this methods in the defer block of the including class.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "members {Map} The including classes members map",
            "paramName": "members",
            "description": " The including classes members map",
            "type": "Map<any, any>"
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{7.0} this is not necessary in modern compilers and leads to unexpected behaviour"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 2315
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2593
        }
      },
      "type": "function",
      "params": [
        {
          "name": "members",
          "type": "Map<any, any>"
        }
      ],
      "appearsIn": [
        "qx.ui.core.MLayoutHandling",
        "qx.ui.root.Abstract",
        "qx.ui.core.MChildrenHandling"
      ],
      "mixin": "qx.ui.core.MLayoutHandling"
    }
  },
  "properties": {}
}