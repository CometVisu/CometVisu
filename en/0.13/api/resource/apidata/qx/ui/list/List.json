{
  "version": 0.3,
  "lastModified": 1729101022416,
  "lastModifiedIso": "2024-10-16T17:50:22.416Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/list/List.js",
  "type": "class",
  "location": {
    "start": {
      "line": 64,
      "column": 0,
      "index": 1979
    },
    "end": {
      "line": 855,
      "column": 3,
      "index": 22242
    }
  },
  "className": "qx.ui.list.List",
  "jsdoc": {
    "raw": [
      "*",
      " * The <code>qx.ui.list.List</code> is based on the virtual infrastructure and",
      " * supports filtering, sorting, grouping, single selection, multi selection,",
      " * data binding and custom rendering.",
      " *",
      " * Using the virtual infrastructure has considerable advantages when there is a",
      " * huge amount of model items to render because the virtual infrastructure only",
      " * creates widgets for visible items and reuses them. This saves both creation",
      " * time and memory.",
      " *",
      " * With the {@link qx.ui.list.core.IListDelegate} interface it is possible",
      " * to configure the list's behavior (item and group renderer configuration,",
      " * filtering, sorting, grouping, etc.).",
      " *",
      " * Here's an example of how to use the widget:",
      " * <pre class=\"javascript\">",
      " * //create the model data",
      " * var rawData = [];",
      " * for (var i = 0; i < 2500; i++) {",
      " *  rawData[i] = \"Item No \" + i;",
      " * }",
      " * var model = qx.data.marshal.Json.createModel(rawData);",
      " *",
      " * //create the list",
      " * var list = new qx.ui.list.List(model);",
      " *",
      " * //configure the lists's behavior",
      " * var delegate = {",
      " *   sorter : function(a, b) {",
      " *     return a > b ? 1 : a < b ? -1 : 0;",
      " *   }",
      " * };",
      " * list.setDelegate(delegate);",
      " *",
      " * //Pre-Select \"Item No 20\"",
      " * list.getSelection().push(model.getItem(20));",
      " *",
      " * //log selection changes",
      " * list.getSelection().addListener(\"change\", function(e) {",
      " *   this.debug(\"Selection: \" + list.getSelection().getItem(0));",
      " * }, this);",
      " * </pre>",
      " *",
      " * @childControl row-layer {qx.ui.virtual.layer.Row} layer for all rows",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The <code>qx.ui.list.List</code> is based on the virtual infrastructure and\n supports filtering, sorting, grouping, single selection, multi selection,\n data binding and custom rendering.\n Using the virtual infrastructure has considerable advantages when there is a\n huge amount of model items to render because the virtual infrastructure only\n creates widgets for visible items and reuses them. This saves both creation\n time and memory.\n With the {@link qx.ui.list.core.IListDelegate} interface it is possible\n to configure the list's behavior (item and group renderer configuration,\n filtering, sorting, grouping, etc.).\n Here's an example of how to use the widget:\n </p>\n<pre class=\"javascript\">\n\n var rawData = [];\n for (var i = 0; i < 2500; i++) {\n  rawData[i] = \"Item No \" + i;\n }\n var model = qx.data.marshal.Json.createModel(rawData);\n\n var list = new qx.ui.list.List(model);\n\n var delegate = {\n   sorter : function(a, b) {\n     return a > b ? 1 : a < b ? -1 : 0;\n   }\n };\n list.setDelegate(delegate);\n\n list.getSelection().push(model.getItem(20));\n\n list.getSelection().addListener(\"change\", function(e) {\n   this.debug(\"Selection: \" + list.getSelection().getItem(0));\n }, this);\n </pre>"
      }
    ],
    "@childControl": [
      {
        "name": "@childControl",
        "body": "row-layer {qx.ui.virtual.layer.Row} layer for all rows"
      }
    ]
  },
  "superClass": "qx.ui.virtual.core.Scroller",
  "mixins": [
    "qx.ui.virtual.selection.MModel"
  ],
  "interfaces": [
    "qx.data.controller.ISelection"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "model"
      }
    ],
    "location": {
      "start": {
        "line": 74,
        "column": 2,
        "index": 2297
      },
      "end": {
        "line": 87,
        "column": 3,
        "index": 2545
      }
    }
  },
  "events": {
    "changeModelLength": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when the length of {@link #model} changes.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the length of {@link #model} changes.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2636
        },
        "end": {
          "line": 93,
          "column": 43,
          "index": 2675
        }
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2720
        },
        "end": {
          "line": 101,
          "column": 5,
          "index": 2786
        }
      },
      "json": {
        "refine": true,
        "init": "virtual-list"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.scroll.AbstractScrollArea",
        "qx.ui.core.Widget"
      ]
    },
    "focusable": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2811
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 2866
        }
      },
      "json": {
        "refine": true,
        "init": true
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "width": {
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 2891
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2941
        }
      },
      "json": {
        "refine": true,
        "init": 100
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.scroll.AbstractScrollArea",
        "qx.ui.core.LayoutItem"
      ]
    },
    "height": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 2966
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3017
        }
      },
      "json": {
        "refine": true,
        "init": 200
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.core.scroll.AbstractScrollArea",
        "qx.ui.core.LayoutItem"
      ]
    },
    "model": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3101
        },
        "end": {
          "line": 128,
          "column": 5,
          "index": 3252
        }
      },
      "json": {
        "check": "qx.data.IListData",
        "apply": "_applyModel",
        "event": "changeModel",
        "nullable": true,
        "deferredInit": true
      },
      "jsdoc": {
        "raw": [
          "* Data array containing the data which should be shown in the list. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Data array containing the data which should be shown in the list.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "itemHeight": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3290
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 3403
        }
      },
      "json": {
        "check": "Integer",
        "init": 25,
        "apply": "_applyRowHeight",
        "themeable": true
      },
      "jsdoc": {
        "raw": [
          "* Default item height "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Default item height</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "groupItemHeight": {
      "location": {
        "start": {
          "line": 139,
          "column": 4,
          "index": 3439
        },
        "end": {
          "line": 145,
          "column": 5,
          "index": 3586
        }
      },
      "json": {
        "check": "Integer",
        "nullable": true,
        "apply": "_applyGroupRowHeight",
        "themeable": true
      },
      "jsdoc": {
        "raw": [
          "* Group item height "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Group item height</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "labelPath": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 3776
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 3870
        }
      },
      "json": {
        "check": "String",
        "apply": "_applyLabelPath",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The path to the property which holds the information that should be",
          "     * displayed as a label. This is only needed if objects are stored in the",
          "     * model.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The path to the property which holds the information that should be\n displayed as a label. This is only needed if objects are stored in the\n model.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "iconPath": {
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4090
        },
        "end": {
          "line": 167,
          "column": 5,
          "index": 4182
        }
      },
      "json": {
        "check": "String",
        "apply": "_applyIconPath",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The path to the property which holds the information that should be",
          "     * displayed as an icon. This is only needed if objects are stored in the",
          "     * model and icons should be displayed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The path to the property which holds the information that should be\n displayed as an icon. This is only needed if objects are stored in the\n model and icons should be displayed.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "groupLabelPath": {
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 4378
        },
        "end": {
          "line": 178,
          "column": 5,
          "index": 4482
        }
      },
      "json": {
        "check": "String",
        "apply": "_applyGroupLabelPath",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The path to the property which holds the information that should be",
          "     * displayed as a group label. This is only needed if objects are stored in the",
          "     * model.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The path to the property which holds the information that should be\n displayed as a group label. This is only needed if objects are stored in the\n model.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "labelOptions": {
      "location": {
        "start": {
          "line": 184,
          "column": 4,
          "index": 4659
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 4736
        }
      },
      "json": {
        "apply": "_applyLabelOptions",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * A map containing the options for the label binding. The possible keys",
          "     * can be found in the {@link qx.data.SingleValueBinding} documentation.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>A map containing the options for the label binding. The possible keys\n can be found in the {@link qx.data.SingleValueBinding} documentation.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "iconOptions": {
      "location": {
        "start": {
          "line": 193,
          "column": 4,
          "index": 4912
        },
        "end": {
          "line": 196,
          "column": 5,
          "index": 4987
        }
      },
      "json": {
        "apply": "_applyIconOptions",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * A map containing the options for the icon binding. The possible keys",
          "     * can be found in the {@link qx.data.SingleValueBinding} documentation.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>A map containing the options for the icon binding. The possible keys\n can be found in the {@link qx.data.SingleValueBinding} documentation.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "groupLabelOptions": {
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 5170
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5257
        }
      },
      "json": {
        "apply": "_applyGroupLabelOptions",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * A map containing the options for the group label binding. The possible keys",
          "     * can be found in the {@link qx.data.SingleValueBinding} documentation.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>A map containing the options for the group label binding. The possible keys\n can be found in the {@link qx.data.SingleValueBinding} documentation.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "delegate": {
      "location": {
        "start": {
          "line": 211,
          "column": 4,
          "index": 5413
        },
        "end": {
          "line": 216,
          "column": 5,
          "index": 5531
        }
      },
      "json": {
        "apply": "_applyDelegate",
        "event": "changeDelegate",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Delegation object which can have one or more functions defined by the",
          "     * {@link qx.ui.list.core.IListDelegate} interface.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delegation object which can have one or more functions defined by the\n {@link qx.ui.list.core.IListDelegate} interface.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "autoGrouping": {
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5632
        },
        "end": {
          "line": 224,
          "column": 5,
          "index": 5694
        }
      },
      "json": {
        "check": "Boolean",
        "init": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Indicates that the list is managing the {@link #groups} automatically.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Indicates that the list is managing the {@link #groups} automatically.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "groups": {
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 5863
        },
        "end": {
          "line": 235,
          "column": 5,
          "index": 5985
        }
      },
      "json": {
        "check": "qx.data.Array",
        "event": "changeGroups",
        "nullable": false,
        "deferredInit": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Contains all groups for data binding, but do only manipulate the array",
          "     * when the {@link #autoGrouping} is set to <code>false</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Contains all groups for data binding, but do only manipulate the array\n when the {@link #autoGrouping} is set to <code>false</code>.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "variableItemHeight": {
      "location": {
        "start": {
          "line": 241,
          "column": 4,
          "index": 6104
        },
        "end": {
          "line": 246,
          "column": 5,
          "index": 6236
        }
      },
      "json": {
        "check": "Boolean",
        "apply": "_applyVariableItemHeight",
        "nullable": false,
        "init": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Render list items with variable height,",
          "     * calculated from the individual item size.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Render list items with variable height,\n calculated from the individual item size.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "selectionMode": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1886
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 2018
        }
      },
      "json": {
        "check": [
          "single",
          "multi",
          "additive",
          "one"
        ],
        "init": "single",
        "apply": "_applySelectionMode"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The selection mode to use.",
          "     *",
          "     * For further details please have a look at:",
          "     * {@link qx.ui.core.selection.Abstract#mode}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The selection mode to use.\n For further details please have a look at:\n {@link qx.ui.core.selection.Abstract#mode}</p>"
          }
        ]
      },
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "dragSelection": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2249
        },
        "end": {
          "line": 87,
          "column": 5,
          "index": 2349
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyDragSelection"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Enable drag selection (multi selection of items through",
          "     * dragging the pointer in pressed states).",
          "     *",
          "     * Only possible for the selection modes <code>multi</code> and <code>additive</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable drag selection (multi selection of items through\n dragging the pointer in pressed states).\n Only possible for the selection modes <code>multi</code> and <code>additive</code></p>"
          }
        ]
      },
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "quickSelection": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2540
        },
        "end": {
          "line": 98,
          "column": 5,
          "index": 2642
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyQuickSelection"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Enable quick selection mode, where no tap is needed to change the selection.",
          "     *",
          "     * Only possible for the modes <code>single</code> and <code>one</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable quick selection mode, where no tap is needed to change the selection.\n Only possible for the modes <code>single</code> and <code>one</code>.</p>"
          }
        ]
      },
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    }
  },
  "members": {
    "_background": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.virtual.layer.Row} background renderer "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.layer.Row} background renderer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 251,
          "column": 4,
          "index": 6323
        },
        "end": {
          "line": 251,
          "column": 21,
          "index": 6340
        }
      },
      "appearsIn": []
    },
    "_provider": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.list.provider.IListProvider} provider for cell rendering "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.list.provider.IListProvider} provider for cell rendering"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 254,
          "column": 4,
          "index": 6428
        },
        "end": {
          "line": 254,
          "column": 19,
          "index": 6443
        }
      },
      "appearsIn": []
    },
    "_layer": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.virtual.layer.Abstract} layer which contains the items. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.layer.Abstract} layer which contains the items."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 257,
          "column": 4,
          "index": 6530
        },
        "end": {
          "line": 257,
          "column": 16,
          "index": 6542
        }
      },
      "appearsIn": []
    },
    "__lookupTable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Array} lookup table to get the model index from a row. To get the",
          "     *   correct value after applying filter, sorter, group.",
          "     *",
          "     * Note the value <code>-1</code> indicates that the value is a group item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array} lookup table to get the model index from a row. To get the\n   correct value after applying filter, sorter, group.\n Note the value <code>-1</code> indicates that the value is a group item."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 265,
          "column": 4,
          "index": 6793
        },
        "end": {
          "line": 265,
          "column": 23,
          "index": 6812
        }
      },
      "appearsIn": []
    },
    "__lookupTableForGroup": {
      "jsdoc": {
        "raw": [
          "* @type {Array} lookup table for getting the group index from the row "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array} lookup table for getting the group index from the row"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 268,
          "column": 4,
          "index": 6898
        },
        "end": {
          "line": 268,
          "column": 31,
          "index": 6925
        }
      },
      "appearsIn": []
    },
    "__groupHashMap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Map} contains all groups with the items as children. The key is",
          "     *   the group name and the value is an <code>Array</code> containing each",
          "     *   item's model index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} contains all groups with the items as children. The key is\n   the group name and the value is an <code>Array</code> containing each\n   item's model index."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 275,
          "column": 4,
          "index": 7134
        },
        "end": {
          "line": 275,
          "column": 24,
          "index": 7154
        }
      },
      "appearsIn": []
    },
    "__groupStringsUsed": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Boolean} indicates when one or more <code>String</code> are used for grouping.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} indicates when one or more <code>String</code> are used for grouping."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 280,
          "column": 4,
          "index": 7270
        },
        "end": {
          "line": 280,
          "column": 29,
          "index": 7295
        }
      },
      "appearsIn": []
    },
    "__groupObjectsUsed": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Boolean} indicates when one or more <code>Object</code> are used for grouping.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} indicates when one or more <code>Object</code> are used for grouping."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 285,
          "column": 4,
          "index": 7411
        },
        "end": {
          "line": 285,
          "column": 29,
          "index": 7436
        }
      },
      "appearsIn": []
    },
    "__defaultGroupUsed": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @type {Boolean} indicates when a default group is used for grouping.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} indicates when a default group is used for grouping."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 290,
          "column": 4,
          "index": 7535
        },
        "end": {
          "line": 290,
          "column": 29,
          "index": 7560
        }
      },
      "appearsIn": []
    },
    "__defaultGroups": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 292,
          "column": 4,
          "index": 7567
        },
        "end": {
          "line": 292,
          "column": 25,
          "index": 7588
        }
      },
      "appearsIn": []
    },
    "__deferredLayerUpdate": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 294,
          "column": 4,
          "index": 7595
        },
        "end": {
          "line": 294,
          "column": 31,
          "index": 7622
        }
      },
      "appearsIn": []
    },
    "refresh": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Trigger a rebuild from the internal data structure.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Trigger a rebuild from the internal data structure.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 299,
          "column": 4,
          "index": 7704
        },
        "end": {
          "line": 301,
          "column": 5,
          "index": 7756
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_createChildControlImpl": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 304,
          "column": 4,
          "index": 7781
        },
        "end": {
          "line": 314,
          "column": 5,
          "index": 8034
        }
      },
      "type": "function",
      "params": [
        {
          "name": "id"
        },
        {
          "name": "hash"
        }
      ],
      "overriddenFrom": "qx.ui.virtual.core.Scroller",
      "appearsIn": [
        "qx.ui.virtual.core.Scroller",
        "qx.ui.core.scroll.AbstractScrollArea",
        "qx.ui.core.Widget"
      ]
    },
    "_initWidgetProvider": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initialize the virtual list provider.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialize the virtual list provider.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 319,
          "column": 4,
          "index": 8102
        },
        "end": {
          "line": 321,
          "column": 5,
          "index": 8200
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_init": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initializes the virtual list.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the virtual list.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 326,
          "column": 4,
          "index": 8260
        },
        "end": {
          "line": 340,
          "column": 5,
          "index": 8652
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initBackground": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initializes the background renderer.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the background renderer.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 345,
          "column": 4,
          "index": 8719
        },
        "end": {
          "line": 348,
          "column": 5,
          "index": 8853
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initLayer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initializes the layer for rendering.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the layer for rendering.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 353,
          "column": 4,
          "index": 8920
        },
        "end": {
          "line": 357,
          "column": 5,
          "index": 9104
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getDataFromRow": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the model data for the given row.",
          "     *",
          "     * @param row {Integer} row to get data for.",
          "     * @return {var|null} the row's model data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the model data for the given row.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to get data for.",
            "paramName": "row",
            "description": " row to get data for.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var|null} the row's model data.",
            "type": "var|null",
            "description": "the row's model data."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 371,
          "column": 4,
          "index": 9474
        },
        "end": {
          "line": 390,
          "column": 5,
          "index": 9879
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "var|null"
      },
      "appearsIn": []
    },
    "_getLookupTable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Return the internal lookup table. But do not manipulate the",
          "     * lookup table!",
          "     *",
          "     * @return {Array} The internal lookup table.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the internal lookup table. But do not manipulate the\n lookup table!</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The internal lookup table.",
            "type": "Array<any>",
            "description": "The internal lookup table."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 398,
          "column": 4,
          "index": 10047
        },
        "end": {
          "line": 400,
          "column": 5,
          "index": 10105
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Array<any>"
      },
      "appearsIn": []
    },
    "_lookup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Performs a lookup from row to model index.",
          "     *",
          "     * @param row {Number} The row to look at.",
          "     * @return {Number} The model index or",
          "     *   <code>-1</code> if the row is a group item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Performs a lookup from row to model index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Number} The row to look at.",
            "paramName": "row",
            "description": " The row to look at.",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The model index or\n   <code>-1</code> if the row is a group item.",
            "type": "number",
            "description": "The model index or\n   <code>-1</code> if the row is a group item."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 409,
          "column": 4,
          "index": 10328
        },
        "end": {
          "line": 411,
          "column": 5,
          "index": 10386
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_lookupGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Performs a lookup from row to group index.",
          "     *",
          "     * @param row {Number} The row to look at.",
          "     * @return {Number} The group index or",
          "     *   <code>-1</code> if the row is a not a group item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Performs a lookup from row to group index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Number} The row to look at.",
            "paramName": "row",
            "description": " The row to look at.",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The group index or\n   <code>-1</code> if the row is a not a group item.",
            "type": "number",
            "description": "The group index or\n   <code>-1</code> if the row is a not a group item."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 420,
          "column": 4,
          "index": 10615
        },
        "end": {
          "line": 422,
          "column": 5,
          "index": 10694
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_reverseLookup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Performs a lookup from model index to row.",
          "     *",
          "     * @param index {Number} The index to look at.",
          "     * @return {Number} The row or <code>-1</code>",
          "     *  if the index is not a model index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Performs a lookup from model index to row.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index to look at.",
            "paramName": "index",
            "description": " The index to look at.",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The row or <code>-1</code>\n  if the index is not a model index.",
            "type": "number",
            "description": "The row or <code>-1</code>\n  if the index is not a model index."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 431,
          "column": 4,
          "index": 10919
        },
        "end": {
          "line": 436,
          "column": 5,
          "index": 11046
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_isGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the passed row is a group or an item.",
          "     *",
          "     * @param row {Integer} row to check.",
          "     * @return {Boolean} <code>true</code> if the row is a group element,",
          "     *  <code>false</code> if the row is an item element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the passed row is a group or an item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to check.",
            "paramName": "row",
            "description": " row to check.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the row is a group element,\n  <code>false</code> if the row is an item element.",
            "type": "boolean",
            "description": "<code>true</code> if the row is a group element,\n  <code>false</code> if the row is an item element."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 445,
          "column": 4,
          "index": 11305
        },
        "end": {
          "line": 447,
          "column": 5,
          "index": 11364
        }
      },
      "type": "function",
      "params": [
        {
          "name": "row",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_getSelectables": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the selectable model items.",
          "     *",
          "     * @return {qx.data.Array|null} The selectable items.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the selectable model items.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array|null} The selectable items.",
            "type": "qx.data.Array|null",
            "description": "The selectable items."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 454,
          "column": 4,
          "index": 11495
        },
        "end": {
          "line": 456,
          "column": 5,
          "index": 11550
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.data.Array|null"
      },
      "appearsIn": []
    },
    "_applyModel": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 465,
          "column": 4,
          "index": 11773
        },
        "end": {
          "line": 475,
          "column": 5,
          "index": 12044
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyRowHeight": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 478,
          "column": 4,
          "index": 12071
        },
        "end": {
          "line": 480,
          "column": 5,
          "index": 12169
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyGroupRowHeight": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 483,
          "column": 4,
          "index": 12196
        },
        "end": {
          "line": 485,
          "column": 5,
          "index": 12273
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyLabelPath": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 488,
          "column": 4,
          "index": 12300
        },
        "end": {
          "line": 490,
          "column": 5,
          "index": 12377
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyIconPath": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 493,
          "column": 4,
          "index": 12404
        },
        "end": {
          "line": 495,
          "column": 5,
          "index": 12479
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyGroupLabelPath": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 498,
          "column": 4,
          "index": 12506
        },
        "end": {
          "line": 500,
          "column": 5,
          "index": 12593
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyLabelOptions": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 503,
          "column": 4,
          "index": 12620
        },
        "end": {
          "line": 505,
          "column": 5,
          "index": 12703
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyIconOptions": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 508,
          "column": 4,
          "index": 12730
        },
        "end": {
          "line": 510,
          "column": 5,
          "index": 12811
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyGroupLabelOptions": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 513,
          "column": 4,
          "index": 12838
        },
        "end": {
          "line": 515,
          "column": 5,
          "index": 12931
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyDelegate": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 518,
          "column": 4,
          "index": 12958
        },
        "end": {
          "line": 521,
          "column": 5,
          "index": 13068
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyVariableItemHeight": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 524,
          "column": 4,
          "index": 13097
        },
        "end": {
          "line": 531,
          "column": 5,
          "index": 13308
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_onResize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the resize event.",
          "     *",
          "     * @param e {qx.event.type.Data} resize event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the resize event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} resize event.",
            "paramName": "e",
            "description": " resize event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 544,
          "column": 4,
          "index": 13628
        },
        "end": {
          "line": 546,
          "column": 5,
          "index": 13722
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onModelChange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the model change event.",
          "     *",
          "     * @param e {qx.event.type.Data} model change event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the model change event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} model change event.",
            "paramName": "e",
            "description": " model change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 553,
          "column": 4,
          "index": 13858
        },
        "end": {
          "line": 564,
          "column": 5,
          "index": 14324
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onLayerUpdated": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the updated event of the",
          "     * qx.ui.virtual.layer.WidgetCell layer.",
          "     *",
          "     * Recalculates the item sizes in a deffered call,",
          "     * which only happens if we have variable item heights",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the updated event of the\n qx.ui.virtual.layer.WidgetCell layer.\n Recalculates the item sizes in a deffered call,\n which only happens if we have variable item heights</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 573,
          "column": 4,
          "index": 14563
        },
        "end": {
          "line": 585,
          "column": 5,
          "index": 14895
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__updateRowCount": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper method to update the row count.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to update the row count.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 596,
          "column": 4,
          "index": 15161
        },
        "end": {
          "line": 599,
          "column": 5,
          "index": 15299
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__updateGroupRowHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper method to update group row heights.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to update group row heights.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 604,
          "column": 4,
          "index": 15372
        },
        "end": {
          "line": 629,
          "column": 5,
          "index": 16250
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__buildUpLookupTable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal method for building the lookup table.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal method for building the lookup table.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 634,
          "column": 4,
          "index": 16327
        },
        "end": {
          "line": 654,
          "column": 5,
          "index": 16832
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_runDelegateFilter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Invokes filtering using the filter given in the delegate.",
          "     *",
          "     * @param model {qx.data.IListData} The model.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Invokes filtering using the filter given in the delegate.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "model {qx.data.IListData} The model.",
            "paramName": "model",
            "description": " The model.",
            "type": "qx.data.IListData"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 661,
          "column": 4,
          "index": 16978
        },
        "end": {
          "line": 669,
          "column": 5,
          "index": 17257
        }
      },
      "type": "function",
      "params": [
        {
          "name": "model",
          "type": "qx.data.IListData"
        }
      ],
      "appearsIn": []
    },
    "_runDelegateSorter": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Invokes sorting using the sorter given in the delegate.",
          "     *",
          "     * @param model {qx.data.IListData} The model.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Invokes sorting using the sorter given in the delegate.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "model {qx.data.IListData} The model.",
            "paramName": "model",
            "description": " The model.",
            "type": "qx.data.IListData"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 676,
          "column": 4,
          "index": 17401
        },
        "end": {
          "line": 688,
          "column": 5,
          "index": 17740
        }
      },
      "type": "function",
      "params": [
        {
          "name": "model",
          "type": "qx.data.IListData"
        }
      ],
      "appearsIn": []
    },
    "_runDelegateGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Invokes grouping using the group result given in the delegate.",
          "     *",
          "     * @param model {qx.data.IListData} The model.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Invokes grouping using the group result given in the delegate.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "model {qx.data.IListData} The model.",
            "paramName": "model",
            "description": " The model.",
            "type": "qx.data.IListData"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 695,
          "column": 4,
          "index": 17891
        },
        "end": {
          "line": 708,
          "column": 5,
          "index": 18367
        }
      },
      "type": "function",
      "params": [
        {
          "name": "model",
          "type": "qx.data.IListData"
        }
      ],
      "appearsIn": []
    },
    "__addGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a model index the the group.",
          "     *",
          "     * @param group {String|Object|null} the group.",
          "     * @param index {Integer} model index to add.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a model index the the group.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "group {String|Object|null} the group.",
            "paramName": "group",
            "description": " the group.",
            "type": [
              "String",
              "Object",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "index {Integer} model index to add.",
            "paramName": "index",
            "description": " model index to add.",
            "type": "Integer"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 716,
          "column": 4,
          "index": 18540
        },
        "end": {
          "line": 731,
          "column": 5,
          "index": 18996
        }
      },
      "type": "function",
      "params": [
        {
          "name": "group",
          "type": [
            "String",
            "Object",
            "null"
          ]
        },
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "__createLookupFromGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates a lookup table form the internal group hash map.",
          "     *",
          "     * @return {Array} the lookup table based on the internal group hash map.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a lookup table form the internal group hash map.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} the lookup table based on the internal group hash map.",
            "type": "Array<any>",
            "description": "the lookup table based on the internal group hash map."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 738,
          "column": 4,
          "index": 19168
        },
        "end": {
          "line": 762,
          "column": 5,
          "index": 19854
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Array<any>"
      },
      "appearsIn": []
    },
    "__getUniqueGroupName": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns an unique group name for the passed group.",
          "     *",
          "     * @param group {String|Object} Group to find unique group name.",
          "     * @return {String} Unique group name.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an unique group name for the passed group.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "group {String|Object} Group to find unique group name.",
            "paramName": "group",
            "description": " Group to find unique group name.",
            "type": [
              "String",
              "Object"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Unique group name.",
            "type": "string",
            "description": "Unique group name."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 770,
          "column": 4,
          "index": 20054
        },
        "end": {
          "line": 787,
          "column": 5,
          "index": 20508
        }
      },
      "type": "function",
      "params": [
        {
          "name": "group",
          "type": [
            "String",
            "Object"
          ]
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "__checkGroupStructure": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks that <code>Object</code> and <code>String</code> are not mixed",
          "     * as group identifier, otherwise an exception occurs.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks that <code>Object</code> and <code>String</code> are not mixed\n as group identifier, otherwise an exception occurs.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 793,
          "column": 4,
          "index": 20667
        },
        "end": {
          "line": 803,
          "column": 5,
          "index": 20995
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_setRowItemSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the height of each visible item and set it as the",
          "     * row size",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the height of each visible item and set it as the\n row size</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 809,
          "column": 4,
          "index": 21095
        },
        "end": {
          "line": 824,
          "column": 5,
          "index": 21568
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_manager": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.virtual.selection.Row} selection manager "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.selection.Row} selection manager"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3412
        },
        "end": {
          "line": 118,
          "column": 18,
          "index": 3426
        }
      },
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "__ignoreChangeSelection": {
      "jsdoc": {
        "raw": [
          "* @type {Boolean} flag to ignore the selection change from {@link #selection} "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} flag to ignore the selection change from {@link #selection}"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3520
        },
        "end": {
          "line": 121,
          "column": 34,
          "index": 3550
        }
      },
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "__ignoreManagerChangeSelection": {
      "jsdoc": {
        "raw": [
          "* @type {Boolean} flag to ignore the selection change from <code>_manager</code> "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} flag to ignore the selection change from <code>_manager</code>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3647
        },
        "end": {
          "line": 124,
          "column": 41,
          "index": 3684
        }
      },
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "__selection": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3691
        },
        "end": {
          "line": 126,
          "column": 21,
          "index": 3708
        }
      },
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * setValue implements part of the {@link qx.ui.form.IField} interface.",
          "     *",
          "     * @param selection {qx.data.IListData|null} List data to select as value.",
          "     * @return {null} The status of this operation.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>setValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "selection {qx.data.IListData|null} List data to select as value."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null} The status of this operation."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 134,
          "column": 4,
          "index": 3945
        },
        "end": {
          "line": 142,
          "column": 5,
          "index": 4116
        }
      },
      "type": "function",
      "params": [
        {
          "name": "selection"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * getValue implements part of the {@link qx.ui.form.IField} interface.",
          "     *",
          "     * @return {qx.data.IListData} The current selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>getValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.IListData} The current selection."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 4280
        },
        "end": {
          "line": 151,
          "column": 5,
          "index": 4332
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "resetValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * resetValue implements part of the {@link qx.ui.form.IField} interface.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>resetValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 4433
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 4482
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_initSelectionManager": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initialize the selection manager with his delegate.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialize the selection manager with his delegate.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4564
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 5377
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "setAutoScrollIntoView": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Determines, if automatically scrolling of selected item is active.",
          "     * Set <code>false</code> to suspend auto scrolling.",
          "     *",
          "     * @param value {Boolean} Set <code>false</code> to suspend auto scrolling.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Determines, if automatically scrolling of selected item is active.\n Set <code>false</code> to suspend auto scrolling.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Boolean} Set <code>false</code> to suspend auto scrolling."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 203,
          "column": 4,
          "index": 5618
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5703
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "getAutoScrollIntoView": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns true, if automatically scrolling of selected item is active.",
          "     *",
          "     * @return {Boolean} Returns <code>false</code> if auto scrolling is suspended.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns true, if automatically scrolling of selected item is active.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Returns <code>false</code> if auto scrolling is suspended."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 212,
          "column": 4,
          "index": 5893
        },
        "end": {
          "line": 214,
          "column": 5,
          "index": 5972
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_updateSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Method to update the selection, this method can be used when the model has",
          "     * changes.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method to update the selection, this method can be used when the model has\n changes.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 220,
          "column": 4,
          "index": 6093
        },
        "end": {
          "line": 226,
          "column": 5,
          "index": 6212
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "setSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Setter for selection property; takes the selection on, and does not change the",
          "     * array instance in `this.selection`",
          "     *",
          "     * @param value {qx.data.Array} the new selection",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setter for selection property; takes the selection on, and does not change the\n array instance in <code>this.selection</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.data.Array} the new selection"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 6620
        },
        "end": {
          "line": 246,
          "column": 5,
          "index": 6768
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel",
        "qx.data.controller.ISelection"
      ]
    },
    "getSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Getter for selection property",
          "     *",
          "     * @return {qx.data.Array}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for selection property</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array}"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 253,
          "column": 4,
          "index": 6866
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 6919
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel",
        "qx.data.controller.ISelection"
      ]
    },
    "resetSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Reset for selection property",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset for selection property</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 6978
        },
        "end": {
          "line": 262,
          "column": 5,
          "index": 7038
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel",
        "qx.data.controller.ISelection"
      ]
    },
    "initSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Init for selection property; takes the selection on, and does not change the",
          "     * array instance in `this.selection`",
          "     *",
          "     * @param value {qx.data.Array} the new selection",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Init for selection property; takes the selection on, and does not change the\n array instance in <code>this.selection</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.data.Array} the new selection"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 270,
          "column": 4,
          "index": 7248
        },
        "end": {
          "line": 278,
          "column": 5,
          "index": 7486
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_applySelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply method for selection property",
          "     *",
          "     * @param value {qx.data.Array} new value",
          "     * @param old {qx.data.Array} old value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply method for selection property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.data.Array} new value"
          },
          {
            "name": "@param",
            "body": "old {qx.data.Array} old value"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 286,
          "column": 4,
          "index": 7649
        },
        "end": {
          "line": 288,
          "column": 5,
          "index": 7717
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_applySelectionMode": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 291,
          "column": 4,
          "index": 7744
        },
        "end": {
          "line": 293,
          "column": 5,
          "index": 7819
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_applyDragSelection": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 296,
          "column": 4,
          "index": 7846
        },
        "end": {
          "line": 298,
          "column": 5,
          "index": 7921
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_applyQuickSelection": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 301,
          "column": 4,
          "index": 7948
        },
        "end": {
          "line": 303,
          "column": 5,
          "index": 8025
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_onChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the internal selection change {@link #selection}.",
          "     *",
          "     * @param e {qx.event.type.Data} the change event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the internal selection change {@link #selection}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} the change event."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 316,
          "column": 4,
          "index": 8385
        },
        "end": {
          "line": 365,
          "column": 5,
          "index": 9699
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_onManagerChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the selection change from the <code>_manager</code>.",
          "     *",
          "     * @param e {qx.event.type.Data} the change event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the selection change from the <code>_manager</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} the change event."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 372,
          "column": 4,
          "index": 9862
        },
        "end": {
          "line": 384,
          "column": 5,
          "index": 10184
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "__synchronizeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Synchronized the selection form the manager with the local one.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Synchronized the selection form the manager with the local one.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 389,
          "column": 4,
          "index": 10278
        },
        "end": {
          "line": 406,
          "column": 5,
          "index": 10712
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "__replaceSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Replace the current selection with the passed selection Array.",
          "     *",
          "     * @param newSelection {qx.data.Array} The new selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replace the current selection with the passed selection Array.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "newSelection {qx.data.Array} The new selection."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 413,
          "column": 4,
          "index": 10874
        },
        "end": {
          "line": 424,
          "column": 5,
          "index": 11291
        }
      },
      "type": "function",
      "params": [
        {
          "name": "newSelection"
        }
      ],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "__isSelectionEquals": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether the local and the manager selection are equal.",
          "     *",
          "     * @return {Boolean} <code>true</code> if the selections are equal,",
          "     *   <code>false</code> otherwise.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether the local and the manager selection are equal.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the selections are equal,\n   <code>false</code> otherwise."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 432,
          "column": 4,
          "index": 11501
        },
        "end": {
          "line": 455,
          "column": 5,
          "index": 12140
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    },
    "_applyDefaultSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper Method to select default item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper Method to select default item.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 460,
          "column": 4,
          "index": 12208
        },
        "end": {
          "line": 464,
          "column": 5,
          "index": 12331
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.virtual.selection.MModel",
      "appearsIn": [
        "qx.ui.virtual.selection.MModel"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 827,
        "column": 2,
        "index": 21577
      },
      "end": {
        "line": 854,
        "column": 3,
        "index": 22238
      }
    }
  },
  "statics": {}
}