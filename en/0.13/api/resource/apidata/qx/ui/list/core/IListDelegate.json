{
  "className": "qx.ui.list.core.IListDelegate",
  "packageName": "qx.ui.list.core",
  "name": "IListDelegate",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 32,
        "column": 0,
        "index": 1076
      },
      "end": {
        "line": 144,
        "column": 3,
        "index": 5072
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Objects which are used as delegates for the <code>qx.ui.list.List</code> may\n implement any of the methods described in this interface. The delegate does\n not need to implement all the methods of this interface. If a method is not\n implemented the <code>qx.ui.list.List</code> provides a default\n implementation.\n Note: This interface is meant to document the delegate but should not be\n listed in the <code>implement</code> key of a class unless all methods are\n actually implemented.</p>"
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "configureItem": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1363
        },
        "end": {
          "line": 40,
          "column": 26,
          "index": 1385
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gives the user the opportunity to set individual styles and properties\n on the item widget cells created by the controller.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to modify.",
            "paramName": "item",
            "description": " Item to modify.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "configureGroupItem": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1609
        },
        "end": {
          "line": 48,
          "column": 31,
          "index": 1636
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gives the user the opportunity to set individual styles and properties\n on the group widget cells created by the controller.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Group to modify.",
            "paramName": "item",
            "description": " Group to modify.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createItem": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1898
        },
        "end": {
          "line": 57,
          "column": 19,
          "index": 1913
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an item cell which will be used for rendering. Be sure to\n implement the {@link #bindItem} function as well to get the needed\n properties bound.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} A new created item cell.",
            "type": "qx.ui.core.Widget",
            "description": " A new created item cell."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createGroupItem": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 2180
        },
        "end": {
          "line": 66,
          "column": 24,
          "index": 2200
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a group cell which will be used for rendering. Be sure to\n implement the {@link #bindGroupItem} function as well to get the needed\n properties bound.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} A new created item cell.",
            "type": "qx.ui.core.Widget",
            "description": " A new created item cell."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "bindItem": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2718
        },
        "end": {
          "line": 81,
          "column": 37,
          "index": 2751
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets up the binding for the given item and index.\n For every property you want to bind, use\n {@link MWidgetController#bindProperty} like this:\n <code>\n controller.bindProperty(\"path.in.the.model\", \"label\", options, item, id);\n </code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "controller {qx.ui.list.core.MWidgetController} The currently used controller.",
            "paramName": "controller",
            "description": " The currently used controller.",
            "type": "qx.ui.list.core.MWidgetController"
          },
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The created and used item.",
            "paramName": "item",
            "description": " The created and used item.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "id {Integer} The id for the binding.",
            "paramName": "id",
            "description": " The id for the binding.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "bindGroupItem": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 3266
        },
        "end": {
          "line": 96,
          "column": 42,
          "index": 3304
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets up the binding for the given group item and index.\n For every property you want to bind, use\n {@link MWidgetController#bindProperty} like this:\n <code>\n controller.bindProperty(null, \"value\", options, item, id);\n </code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "controller {qx.ui.list.core.MWidgetController} The currently used controller.",
            "paramName": "controller",
            "description": " The currently used controller.",
            "type": "qx.ui.list.core.MWidgetController"
          },
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The created and used group item.",
            "paramName": "item",
            "description": " The created and used group item.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "id {Integer} The id for the binding.",
            "paramName": "id",
            "description": " The id for the binding.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "filter": {
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 3713
        },
        "end": {
          "line": 107,
          "column": 19,
          "index": 3728
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gives the user the opportunity to filter the model. The filter\n method has to return <code>true</code> if the given data should be\n shown and <code>false</code> if the given data should be ignored.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {var} The data to be checked.",
            "paramName": "data",
            "description": " The data to be checked.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the data passes the filter,\n   <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> if the data passes the filter,\n   <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "sorter": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 4134
        },
        "end": {
          "line": 119,
          "column": 19,
          "index": 4149
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gives the user the opportunity to sort the model. The sorting method\n should return a negative value if a < b, zero if a = b, or a positive\n value if a > b.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "a {var} value to compare.",
            "paramName": "a",
            "description": " value to compare.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "b {var} value to compare.",
            "paramName": "b",
            "description": " value to compare.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} should return a negative value if a < b, zero\n   if a = b, or a positive value if a > b.",
            "type": "Integer",
            "description": " should return a negative value if a < b, zero\n   if a = b, or a positive value if a > b."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "group": {
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 4881
        },
        "end": {
          "line": 135,
          "column": 18,
          "index": 4895
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gives the user the opportunity to group the model. The group method\n should return unique identifier for the passed data.\n Note: When you returning <code>null</code> the passed data will added\n to the default group, which is <code>???</code> from the type\n <code>String</code>. But keep in mind that you can only use the default\n group feature when each other group identifier is also a <code>String</code>.\n Otherwise an exception occurs, because you can't mix <code>Object</code>\n and <code>String</code> group identifiers.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {var} The data to be checked.",
            "paramName": "data",
            "description": " The data to be checked.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|Object|null} The group identifier for the data.",
            "type": "String|Object|null",
            "description": " The group identifier for the data."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "onPool": {
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 5049
        },
        "end": {
          "line": 142,
          "column": 19,
          "index": 5064
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gives the user the opportunity to reset properties or states.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to modify.",
            "paramName": "item",
            "description": " Item to modify.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}