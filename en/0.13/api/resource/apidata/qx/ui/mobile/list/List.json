{
  "version": 0.3,
  "lastModified": 1729101022416,
  "lastModifiedIso": "2024-10-16T17:50:22.416Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/list/List.js",
  "type": "class",
  "location": {
    "start": {
      "line": 70,
      "column": 0,
      "index": 1838
    },
    "end": {
      "line": 626,
      "column": 3,
      "index": 16825
    }
  },
  "className": "qx.ui.mobile.list.List",
  "jsdoc": {
    "raw": [
      "*",
      " * The list widget displays the data of a model in a list.",
      " *",
      " * *Example*",
      " *",
      " * Here is a little example of how to use the widget.",
      " *",
      " * <pre class='javascript'>",
      " *",
      " *    // Data for the list",
      " *    var data = [",
      " *       {title : \"Row1\", subtitle : \"Sub1\"},",
      " *       {title : \"Row2\", subtitle : \"Sub2\"},",
      " *       {title : \"Row3\", subtitle : \"Sub3\"}",
      " *   ];",
      " *",
      " *   // Create the list with a delegate that",
      " *   var list = new qx.ui.mobile.list.List({",
      " *     configureItem: function(item, data, row)",
      " *     {",
      " *       item.setImage(\"path/to/image.png\");",
      " *       item.setTitle(data.title);",
      " *       item.setSubtitle(data.subtitle);",
      " *     },",
      " *",
      " *     configureGroupItem: function(item, data) {",
      " *       item.setTitle(data.title);",
      " *     },",
      " *",
      " *     group: function(data, row) {",
      " *      return {",
      " *       title: row < 2 ? \"Selectable\" : \"Unselectable\"",
      " *     };",
      " *    }",
      " *   });",
      " *",
      " *   // Set the model of the list",
      " *   list.setModel(new qx.data.Array(data));",
      " *",
      " *   // Add an changeSelection event",
      " *   list.addListener(\"changeSelection\", function(evt) {",
      " *     alert(\"Index: \" + evt.getData())",
      " *   }, this);",
      " *",
      " *   this.getRoot().add(list);",
      " * </pre>",
      " *",
      " * This example creates a list with a delegate that configures the list item with",
      " * the given data. A listener for the event {@link #changeSelection} is added.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The list widget displays the data of a model in a list.\n<em>Example</em>\n Here is a little example of how to use the widget.\n </p>\n<pre class='javascript'>\n\n    var data = [\n       {title : \"Row1\", subtitle : \"Sub1\"},\n       {title : \"Row2\", subtitle : \"Sub2\"},\n       {title : \"Row3\", subtitle : \"Sub3\"}\n   ];\n\n   var list = new qx.ui.mobile.list.List({\n     configureItem: function(item, data, row)\n     {\n       item.setImage(\"path/to/image.png\");\n       item.setTitle(data.title);\n       item.setSubtitle(data.subtitle);\n     },\n     configureGroupItem: function(item, data) {\n       item.setTitle(data.title);\n     },\n     group: function(data, row) {\n      return {\n       title: row < 2 ? \"Selectable\" : \"Unselectable\"\n     };\n    }\n   });\n\n   list.setModel(new qx.data.Array(data));\n\n   list.addListener(\"changeSelection\", function(evt) {\n     alert(\"Index: \" + evt.getData())\n   }, this);\n   this.getRoot().add(list);\n </pre>\n<p>This example creates a list with a delegate that configures the list item with\n the given data. A listener for the event {@link #changeSelection} is added.</p>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.core.Widget",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "delegate"
      }
    ],
    "location": {
      "start": {
        "line": 76,
        "column": 2,
        "index": 2022
      },
      "end": {
        "line": 98,
        "column": 3,
        "index": 2639
      }
    }
  },
  "events": {
    "changeSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when the selection is changed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the selection is changed.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2718
        },
        "end": {
          "line": 104,
          "column": 41,
          "index": 2755
        }
      }
    },
    "changeGroupSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when the group selection is changed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the group selection is changed.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 2828
        },
        "end": {
          "line": 109,
          "column": 46,
          "index": 2870
        }
      }
    },
    "removeItem": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when an item should be removed from list.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an item should be removed from list.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 2948
        },
        "end": {
          "line": 114,
          "column": 36,
          "index": 2980
        }
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 3025
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3088
        }
      },
      "json": {
        "refine": true,
        "init": "list"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "delegate": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3246
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3364
        }
      },
      "json": {
        "apply": "_applyDelegate",
        "event": "changeDelegate",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Delegation object which can have one or more functions defined by the",
          "     * {@link qx.ui.mobile.list.IListDelegate} interface.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delegation object which can have one or more functions defined by the\n {@link qx.ui.mobile.list.IListDelegate} interface.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "model": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3431
        },
        "end": {
          "line": 144,
          "column": 5,
          "index": 3570
        }
      },
      "json": {
        "check": "qx.data.Array",
        "apply": "_applyModel",
        "event": "changeModel",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The model to use to render the list.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The model to use to render the list.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "itemCount": {
      "location": {
        "start": {
          "line": 150,
          "column": 4,
          "index": 3714
        },
        "end": {
          "line": 153,
          "column": 5,
          "index": 3770
        }
      },
      "json": {
        "check": "Integer",
        "init": 0
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Number of items to display. Auto set by model.",
          "     * Reset to limit the amount of data that should be displayed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Number of items to display. Auto set by model.\n Reset to limit the amount of data that should be displayed.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "itemHeight": {
      "location": {
        "start": {
          "line": 158,
          "column": 4,
          "index": 3827
        },
        "end": {
          "line": 162,
          "column": 5,
          "index": 3908
        }
      },
      "json": {
        "check": "Number",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The height of a list item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The height of a list item.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__provider": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 172,
          "column": 4,
          "index": 4120
        },
        "end": {
          "line": 172,
          "column": 20,
          "index": 4136
        }
      },
      "appearsIn": []
    },
    "__minDeleteDistance": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 173,
          "column": 4,
          "index": 4142
        },
        "end": {
          "line": 173,
          "column": 29,
          "index": 4167
        }
      },
      "appearsIn": []
    },
    "__isScrollingBlocked": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 4173
        },
        "end": {
          "line": 174,
          "column": 30,
          "index": 4199
        }
      },
      "appearsIn": []
    },
    "__trackElement": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 175,
          "column": 4,
          "index": 4205
        },
        "end": {
          "line": 175,
          "column": 24,
          "index": 4225
        }
      },
      "appearsIn": []
    },
    "_getTagName": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 178,
          "column": 4,
          "index": 4250
        },
        "end": {
          "line": 180,
          "column": 5,
          "index": 4290
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "configureItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Default list delegate. Expects a map which contains an image, a subtitle, and a title:",
          "     * <code>{title : \"Row1\", subtitle : \"Sub1\", image : \"path/to/image.png\"}</code>",
          "     *",
          "     * @param item {qx.ui.mobile.list.renderer.Abstract} Instance of list item renderer to modify",
          "     * @param data {var} The data of the row. Can be used to configure the given item.",
          "     * @param row {Integer} The row index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Default list delegate. Expects a map which contains an image, a subtitle, and a title:\n <code>{title : \"Row1\", subtitle : \"Sub1\", image : \"path/to/image.png\"}</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.mobile.list.renderer.Abstract} Instance of list item renderer to modify",
            "paramName": "item",
            "description": " Instance of list item renderer to modify",
            "type": "qx.ui.mobile.list.renderer.Abstract"
          },
          {
            "name": "@param",
            "body": "data {var} The data of the row. Can be used to configure the given item.",
            "paramName": "data",
            "description": " The data of the row. Can be used to configure the given item.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "row {Integer} The row index.",
            "paramName": "row",
            "description": " The row index.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 190,
          "column": 4,
          "index": 4727
        },
        "end": {
          "line": 218,
          "column": 5,
          "index": 5639
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "qx.ui.mobile.list.renderer.Abstract"
        },
        {
          "name": "data",
          "type": "var"
        },
        {
          "name": "row",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_onTap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the \"tap\" event.",
          "     *",
          "     * @param evt {qx.event.type.Tap} The tap event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the \"tap\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Tap} The tap event",
            "paramName": "evt",
            "description": " The tap event",
            "type": "qx.event.type.Tap"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 5763
        },
        "end": {
          "line": 250,
          "column": 5,
          "index": 6559
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Tap"
        }
      ],
      "appearsIn": []
    },
    "_onTrackStart": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>trackstart</code> event.",
          "     * @param evt {qx.event.type.Track} the <code>trackstart</code> event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>trackstart</code> event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Track} the <code>trackstart</code> event",
            "paramName": "evt",
            "description": " the <code>trackstart</code> event",
            "type": "qx.event.type.Track"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 256,
          "column": 4,
          "index": 6712
        },
        "end": {
          "line": 272,
          "column": 5,
          "index": 7202
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Track"
        }
      ],
      "appearsIn": []
    },
    "_onTrack": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>track</code> event.",
          "     * @param evt {qx.event.type.Track} the <code>track</code> event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>track</code> event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Track} the <code>track</code> event",
            "paramName": "evt",
            "description": " the <code>track</code> event",
            "type": "qx.event.type.Track"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 278,
          "column": 4,
          "index": 7345
        },
        "end": {
          "line": 307,
          "column": 5,
          "index": 8063
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Track"
        }
      ],
      "appearsIn": []
    },
    "_onTrackEnd": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>trackend</code> event.",
          "     * @param evt {qx.event.type.Track} the <code>trackend</code> event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>trackend</code> event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Track} the <code>trackend</code> event",
            "paramName": "evt",
            "description": " the <code>trackend</code> event",
            "type": "qx.event.type.Track"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 313,
          "column": 4,
          "index": 8212
        },
        "end": {
          "line": 336,
          "column": 5,
          "index": 8897
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Track"
        }
      ],
      "appearsIn": []
    },
    "_getElement": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the target list item.",
          "     * @param evt {Event} the input event",
          "     * @return {Element} the target list item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the target list item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {Event} the input event",
            "paramName": "evt",
            "description": " the input event",
            "type": "Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} the target list item.",
            "type": "Element",
            "description": "the target list item."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 343,
          "column": 4,
          "index": 9046
        },
        "end": {
          "line": 356,
          "column": 5,
          "index": 9330
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "Event"
        }
      ],
      "returnType": {
        "type": "Element"
      },
      "appearsIn": []
    },
    "_applyModel": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 359,
          "column": 4,
          "index": 9359
        },
        "end": {
          "line": 382,
          "column": 5,
          "index": 10061
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyDelegate": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 385,
          "column": 4,
          "index": 10090
        },
        "end": {
          "line": 387,
          "column": 5,
          "index": 10166
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__onModelChangeLength": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Listen on model 'changeLength' event.",
          "     * @param evt {qx.event.type.Data} data event which contains model change data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listen on model 'changeLength' event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} data event which contains model change data.",
            "paramName": "evt",
            "description": " data event which contains model change data.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 393,
          "column": 4,
          "index": 10318
        },
        "end": {
          "line": 395,
          "column": 5,
          "index": 10375
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onChangeLocale": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Locale change event handler",
          "     *",
          "     * @signature function(e)",
          "     * @param e {Event} the change event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Locale change event handler</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(e)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} the change event",
            "paramName": "e",
            "description": " the change event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 403,
          "column": 4,
          "index": 10511
        },
        "end": {
          "line": 409,
          "column": 6,
          "index": 10648
        }
      },
      "appearsIn": []
    },
    "__onModelChange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Reacts on model 'change' event.",
          "     * @param evt {qx.event.type.Data} data event which contains model change data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reacts on model 'change' event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} data event which contains model change data.",
            "paramName": "evt",
            "description": " data event which contains model change data.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 415,
          "column": 4,
          "index": 10794
        },
        "end": {
          "line": 419,
          "column": 5,
          "index": 10922
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "__onModelChangeBubble": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Reacts on model 'changeBubble' event.",
          "     * @param evt {qx.event.type.Data} data event which contains model changeBubble data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reacts on model 'changeBubble' event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} data event which contains model changeBubble data.",
            "paramName": "evt",
            "description": " data event which contains model changeBubble data.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 425,
          "column": 4,
          "index": 11080
        },
        "end": {
          "line": 438,
          "column": 5,
          "index": 11521
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_extractRowsToRender": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Extracts all rows, which should be rendered from \"changeBubble\" event's",
          "     * data.name.",
          "     * @param name {String} The 'data.name' String of the \"changeBubble\" event,",
          "     *    which contains the rows that should be rendered.",
          "     * @return {Integer[]} An array with integer values, representing the rows which should",
          "     *  be rendered.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Extracts all rows, which should be rendered from \"changeBubble\" event's\n data.name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} The 'data.name' String of the \"changeBubble\" event,\n    which contains the rows that should be rendered.",
            "paramName": "name",
            "description": " The 'data.name' String of the \"changeBubble\" event,\n    which contains the rows that should be rendered.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} An array with integer values, representing the rows which should\n  be rendered.",
            "type": "Integer[]",
            "description": "An array with integer values, representing the rows which should\n  be rendered."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 448,
          "column": 4,
          "index": 11893
        },
        "end": {
          "line": 490,
          "column": 5,
          "index": 13035
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Integer[]"
      },
      "appearsIn": []
    },
    "__renderRow": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Renders a specific row identified by its index.",
          "     * @param index {Integer} index of the row which should be rendered.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Renders a specific row identified by its index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} index of the row which should be rendered.",
            "paramName": "index",
            "description": " index of the row which should be rendered.",
            "type": "Integer"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 496,
          "column": 4,
          "index": 13186
        },
        "end": {
          "line": 511,
          "column": 5,
          "index": 13574
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "getListItemHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @internal",
          "     * Returns the height of one single list item.",
          "     * @return {Integer} the height of a list item in px.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": "Returns the height of one single list item."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the height of a list item in px.",
            "type": "Integer",
            "description": "the height of a list item in px."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 518,
          "column": 4,
          "index": 13723
        },
        "end": {
          "line": 529,
          "column": 5,
          "index": 14074
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "__render": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Renders the list.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Renders the list.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 534,
          "column": 4,
          "index": 14122
        },
        "end": {
          "line": 565,
          "column": 5,
          "index": 15107
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "render": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Triggers a re-rendering of this list.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Triggers a re-rendering of this list.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 570,
          "column": 4,
          "index": 15175
        },
        "end": {
          "line": 572,
          "column": 5,
          "index": 15214
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_renderGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Renders a group header.",
          "     *",
          "     * @param itemIndex {Integer} the current list item index.",
          "     * @param groupIndex {Integer} the group index.",
          "     * @return {Element} the group element or <code>null</code> if no group was needed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Renders a group header.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "itemIndex {Integer} the current list item index.",
            "paramName": "itemIndex",
            "description": " the current list item index.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "groupIndex {Integer} the group index.",
            "paramName": "groupIndex",
            "description": " the group index.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} the group element or <code>null</code> if no group was needed.",
            "type": "Element",
            "description": "the group element or <code>null</code> if no group was needed."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 581,
          "column": 4,
          "index": 15478
        },
        "end": {
          "line": 593,
          "column": 5,
          "index": 15887
        }
      },
      "type": "function",
      "params": [
        {
          "name": "itemIndex",
          "type": "Integer"
        },
        {
          "name": "groupIndex",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Element"
      },
      "appearsIn": []
    },
    "__hasGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether the delegate support group rendering.",
          "     * @return {Boolean} true if the delegate object supports grouping function.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether the delegate support group rendering.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the delegate object supports grouping function.",
            "type": "boolean",
            "description": "true if the delegate object supports grouping function."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 599,
          "column": 4,
          "index": 16051
        },
        "end": {
          "line": 601,
          "column": 5,
          "index": 16150
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "__getGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the group for this item, identified by its index",
          "     * @param index {Integer} the item index.",
          "     * @return {Object} the group object, to which the item belongs to.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the group for this item, identified by its index</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the item index.",
            "paramName": "index",
            "description": " the item index.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} the group object, to which the item belongs to.",
            "type": "Record<any, any>",
            "description": "the group object, to which the item belongs to."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 608,
          "column": 4,
          "index": 16355
        },
        "end": {
          "line": 612,
          "column": 5,
          "index": 16537
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 615,
        "column": 2,
        "index": 16546
      },
      "end": {
        "line": 625,
        "column": 3,
        "index": 16821
      }
    }
  },
  "statics": {}
}