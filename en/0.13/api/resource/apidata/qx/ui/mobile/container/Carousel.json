{
  "version": 0.3,
  "lastModified": 1735341600843,
  "lastModifiedIso": "2024-12-27T23:20:00.843Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/container/Carousel.js",
  "type": "class",
  "location": {
    "start": {
      "line": 46,
      "column": 0,
      "index": 1461
    },
    "end": {
      "line": 826,
      "column": 3,
      "index": 22963
    }
  },
  "className": "qx.ui.mobile.container.Carousel",
  "jsdoc": {
    "raw": [
      "*",
      " * Creates a Carousel widget.",
      " * A carousel is a widget which can switch between several sub pages {@link  qx.ui.mobile.container.Composite}.",
      " * A page switch is triggered by a swipe to left, for next page, or a swipe to right for",
      " * previous page.",
      " *",
      " * A carousel shows by default a pagination indicator at the bottom of the carousel.",
      " * This pagination indicator can be hidden by property <code>showPagination</code>.",
      " *",
      " * *Example*",
      " *",
      " * Here is a little example of how to use the widget.",
      " *",
      " * <pre class='javascript'>",
      " *",
      " *  var carousel = new qx.ui.mobile.container.Carousel();",
      " *  var carouselPage1 = new qx.ui.mobile.container.Composite();",
      " *  var carouselPage2 = new qx.ui.mobile.container.Composite();",
      " *",
      " *  carouselPage1.add(new qx.ui.mobile.basic.Label(\"This is a carousel. Please swipe left.\"));",
      " *  carouselPage2.add(new qx.ui.mobile.basic.Label(\"Now swipe right.\"));",
      " *",
      " *  carousel.add(carouselPage1);",
      " *  carousel.add(carouselPage2);",
      " * </pre>",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Creates a Carousel widget.\n A carousel is a widget which can switch between several sub pages {@link  qx.ui.mobile.container.Composite}.\n A page switch is triggered by a swipe to left, for next page, or a swipe to right for\n previous page.\n A carousel shows by default a pagination indicator at the bottom of the carousel.\n This pagination indicator can be hidden by property <code>showPagination</code>.\n<em>Example</em>\n Here is a little example of how to use the widget.\n </p>\n<pre class='javascript'>\n  var carousel = new qx.ui.mobile.container.Carousel();\n  var carouselPage1 = new qx.ui.mobile.container.Composite();\n  var carouselPage2 = new qx.ui.mobile.container.Composite();\n  carouselPage1.add(new qx.ui.mobile.basic.Label(\"This is a carousel. Please swipe left.\"));\n  carouselPage2.add(new qx.ui.mobile.basic.Label(\"Now swipe right.\"));\n  carousel.add(carouselPage1);\n  carousel.add(carouselPage2);\n </pre>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.container.Composite",
  "mixins": [
    "qx.ui.mobile.core.MResize"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "transitionDuration"
      }
    ],
    "location": {
      "start": {
        "line": 59,
        "column": 2,
        "index": 1901
      },
      "end": {
        "line": 129,
        "column": 3,
        "index": 3818
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 4045
        },
        "end": {
          "line": 141,
          "column": 5,
          "index": 4112
        }
      },
      "json": {
        "refine": true,
        "init": "carousel"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "showPagination": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 4186
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 4287
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "apply": "_applyShowPagination"
      },
      "jsdoc": {
        "raw": [
          "* Property for setting visibility of pagination indicator "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Property for setting visibility of pagination indicator</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "scrollLoop": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 4431
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4491
        }
      },
      "json": {
        "check": "Boolean",
        "init": true
      },
      "jsdoc": {
        "raw": [
          "* Defines whether the carousel should scroll back to first or last page",
          "     * when the start/end of carousel pages is reached  "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Defines whether the carousel should scroll back to first or last page\n when the start/end of carousel pages is reached</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "height": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4643
        },
        "end": {
          "line": 166,
          "column": 5,
          "index": 4757
        }
      },
      "json": {
        "check": "Number",
        "init": 200,
        "nullable": true,
        "apply": "_updateCarouselLayout"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Defines the height of the carousel. If value is equal to <code>null</code>",
          "     * the height is set to <code>100%</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Defines the height of the carousel. If value is equal to <code>null</code>\n the height is set to <code>100%</code>.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "currentIndex": {
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4819
        },
        "end": {
          "line": 176,
          "column": 5,
          "index": 4942
        }
      },
      "json": {
        "check": "Number",
        "init": 0,
        "apply": "_scrollToPage",
        "event": "changeCurrentIndex"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The current visible page index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The current visible page index.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "transitionDuration": {
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 5014
        },
        "end": {
          "line": 184,
          "column": 5,
          "index": 5080
        }
      },
      "json": {
        "check": "Number",
        "init": 0.5
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Duration of the carousel page transition.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Duration of the carousel page transition.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "fireDomUpdatedOnResize": {
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1183
        },
        "end": {
          "line": 41,
          "column": 5,
          "index": 1256
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "* Whether the resize should fire the \"domupdated\" event. Set this to \"true\"",
          "     *  whenever other elements should react on this size change (e.g. when the size",
          "     *  change does not infect the size of the application, but other widgets should",
          "     *  react).",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the resize should fire the \"domupdated\" event. Set this to \"true\"\n  whenever other elements should react on this size change (e.g. when the size\n  change does not infect the size of the application, but other widgets should\n  react).</p>"
          }
        ]
      },
      "mixin": "qx.ui.mobile.core.MResize",
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ]
    }
  },
  "members": {
    "__carouselScroller": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 193,
          "column": 4,
          "index": 5287
        },
        "end": {
          "line": 193,
          "column": 28,
          "index": 5311
        }
      },
      "appearsIn": []
    },
    "__carouselScrollerWidth": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 194,
          "column": 4,
          "index": 5317
        },
        "end": {
          "line": 194,
          "column": 33,
          "index": 5346
        }
      },
      "appearsIn": []
    },
    "__carouselWidth": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 5352
        },
        "end": {
          "line": 195,
          "column": 25,
          "index": 5373
        }
      },
      "appearsIn": []
    },
    "__paginationLabels": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 196,
          "column": 4,
          "index": 5379
        },
        "end": {
          "line": 196,
          "column": 28,
          "index": 5403
        }
      },
      "appearsIn": []
    },
    "__pagination": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 197,
          "column": 4,
          "index": 5409
        },
        "end": {
          "line": 197,
          "column": 22,
          "index": 5427
        }
      },
      "appearsIn": []
    },
    "__snapPointsX": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 198,
          "column": 4,
          "index": 5433
        },
        "end": {
          "line": 198,
          "column": 23,
          "index": 5452
        }
      },
      "appearsIn": []
    },
    "__onMoveOffset": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 5458
        },
        "end": {
          "line": 199,
          "column": 24,
          "index": 5478
        }
      },
      "appearsIn": []
    },
    "__lastOffset": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 200,
          "column": 4,
          "index": 5484
        },
        "end": {
          "line": 200,
          "column": 22,
          "index": 5502
        }
      },
      "appearsIn": []
    },
    "__boundsX": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 201,
          "column": 4,
          "index": 5508
        },
        "end": {
          "line": 201,
          "column": 19,
          "index": 5523
        }
      },
      "appearsIn": []
    },
    "__pages": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 5529
        },
        "end": {
          "line": 202,
          "column": 17,
          "index": 5542
        }
      },
      "appearsIn": []
    },
    "__showTransition": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 203,
          "column": 4,
          "index": 5548
        },
        "end": {
          "line": 203,
          "column": 26,
          "index": 5570
        }
      },
      "appearsIn": []
    },
    "__isPageScrollTarget": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 5576
        },
        "end": {
          "line": 204,
          "column": 30,
          "index": 5602
        }
      },
      "appearsIn": []
    },
    "__deltaX": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5608
        },
        "end": {
          "line": 205,
          "column": 18,
          "index": 5622
        }
      },
      "appearsIn": []
    },
    "__deltaY": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 206,
          "column": 4,
          "index": 5628
        },
        "end": {
          "line": 206,
          "column": 18,
          "index": 5642
        }
      },
      "appearsIn": []
    },
    "add": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a page to the end of the carousel.",
          "     * @param page {qx.ui.mobile.container.Composite} The composite which should be added as a page to the end of carousel.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a page to the end of the carousel.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "page {qx.ui.mobile.container.Composite} The composite which should be added as a page to the end of carousel.",
            "paramName": "page",
            "description": " The composite which should be added as a page to the end of carousel.",
            "type": "qx.ui.mobile.container.Composite"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 5854
        },
        "end": {
          "line": 235,
          "column": 5,
          "index": 6502
        }
      },
      "type": "function",
      "params": [
        {
          "name": "page",
          "type": "qx.ui.mobile.container.Composite"
        }
      ],
      "mixin": "qx.ui.mobile.core.MChildrenHandling",
      "appearsIn": [
        "qx.ui.mobile.core.MChildrenHandling"
      ]
    },
    "removePageByIndex": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes a carousel page from carousel identified by its index.",
          "     * @param pageIndex {Integer} The page index which should be removed from carousel.",
          "     * @return {qx.ui.mobile.container.Composite} the page which was removed from carousel.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes a carousel page from carousel identified by its index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "pageIndex {Integer} The page index which should be removed from carousel.",
            "paramName": "pageIndex",
            "description": " The page index which should be removed from carousel.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} the page which was removed from carousel.",
            "type": "qx.ui.mobile.container.Composite",
            "description": "the page which was removed from carousel."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 242,
          "column": 4,
          "index": 6775
        },
        "end": {
          "line": 271,
          "column": 5,
          "index": 7658
        }
      },
      "type": "function",
      "params": [
        {
          "name": "pageIndex",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "qx.ui.mobile.container.Composite"
      },
      "appearsIn": []
    },
    "removeAll": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 274,
          "column": 4,
          "index": 7683
        },
        "end": {
          "line": 283,
          "column": 5,
          "index": 7920
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.mobile.core.MChildrenHandling",
      "appearsIn": [
        "qx.ui.mobile.core.MChildrenHandling"
      ]
    },
    "nextPage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the carousel to next page.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the carousel to next page.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 288,
          "column": 4,
          "index": 7985
        },
        "end": {
          "line": 296,
          "column": 5,
          "index": 8251
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "previousPage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the carousel to previous page.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the carousel to previous page.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 301,
          "column": 4,
          "index": 8320
        },
        "end": {
          "line": 309,
          "column": 5,
          "index": 8569
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getPageCount": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the current page count of this carousel.",
          "     * @return {Integer} the current page count",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current page count of this carousel.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the current page count",
            "type": "Integer",
            "description": "the current page count"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 315,
          "column": 4,
          "index": 8696
        },
        "end": {
          "line": 321,
          "column": 5,
          "index": 8805
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "_scrollToPage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the carousel to the page with the given pageIndex.",
          "     * @param pageIndex {Integer} the target page index, which should be visible",
          "     * @param showTransition {Boolean ? true} flag if a transition should be shown or not",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the carousel to the page with the given pageIndex.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "pageIndex {Integer} the target page index, which should be visible",
            "paramName": "pageIndex",
            "description": " the target page index, which should be visible",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "showTransition {Boolean ? true} flag if a transition should be shown or not",
            "paramName": "showTransition",
            "description": " flag if a transition should be shown or not",
            "optional": true,
            "defaultValue": "true",
            "type": "Boolean"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 328,
          "column": 4,
          "index": 9065
        },
        "end": {
          "line": 340,
          "column": 5,
          "index": 9447
        }
      },
      "type": "function",
      "params": [
        {
          "name": "pageIndex",
          "type": "Integer"
        },
        {
          "name": "showTransition",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "true"
        }
      ],
      "appearsIn": []
    },
    "_doScrollLoop": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Manages the the scroll loop. First fades out carousel scroller >>",
          "     * waits till fading is done >> scrolls to pageIndex >> waits till scrolling is done",
          "     * >> fades scroller in.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Manages the the scroll loop. First fades out carousel scroller &gt;&gt;\n waits till fading is done &gt;&gt; scrolls to pageIndex &gt;&gt; waits till scrolling is done</p>\n<blockquote>\n  <blockquote>\n    <p>fades scroller in.</p>\n  </blockquote>\n</blockquote>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 347,
          "column": 4,
          "index": 9661
        },
        "end": {
          "line": 355,
          "column": 5,
          "index": 9870
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onScrollerTransitionEnd": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>transitionEnd</code> event on carouselScroller.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>transitionEnd</code> event on carouselScroller.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 360,
          "column": 4,
          "index": 9972
        },
        "end": {
          "line": 386,
          "column": 5,
          "index": 10688
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_createPaginationLabel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Factory method for a paginationLabel.",
          "     * @return {qx.ui.mobile.container.Composite} the created pagination label.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Factory method for a paginationLabel.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} the created pagination label.",
            "type": "qx.ui.mobile.container.Composite",
            "description": "the created pagination label."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 392,
          "column": 4,
          "index": 10836
        },
        "end": {
          "line": 408,
          "column": 5,
          "index": 11372
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.mobile.container.Composite"
      },
      "appearsIn": []
    },
    "_setScrollersOpacity": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Changes the opacity of the carouselScroller element.",
          "     * @param opacity {Integer} the target value of the opacity.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Changes the opacity of the carouselScroller element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "opacity {Integer} the target value of the opacity.",
            "paramName": "opacity",
            "description": " the target value of the opacity.",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 414,
          "column": 4,
          "index": 11520
        },
        "end": {
          "line": 422,
          "column": 5,
          "index": 11743
        }
      },
      "type": "function",
      "params": [
        {
          "name": "opacity",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_applyShowPagination": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Called when showPagination property is changed.",
          "     * Manages <code>show()</code> and <code>hide()</code> of pagination container.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called when showPagination property is changed.\n Manages <code>show()</code> and <code>hide()</code> of pagination container.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 428,
          "column": 4,
          "index": 11905
        },
        "end": {
          "line": 436,
          "column": 5,
          "index": 12106
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_onPaginationLabelTap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles a tap on paginationLabel.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles a tap on paginationLabel.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 441,
          "column": 4,
          "index": 12170
        },
        "end": {
          "line": 443,
          "column": 5,
          "index": 12252
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_updateCarouselLayout": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates the layout of the carousel the carousel scroller and its pages.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the layout of the carousel the carousel scroller and its pages.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 448,
          "column": 4,
          "index": 12354
        },
        "end": {
          "line": 494,
          "column": 5,
          "index": 13561
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_refreshScrollerPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Synchronizes the positions of the scroller to the current shown page index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Synchronizes the positions of the scroller to the current shown page index.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 499,
          "column": 4,
          "index": 13667
        },
        "end": {
          "line": 505,
          "column": 5,
          "index": 13885
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onContainerUpdate": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles window resize, device orientatonChange or page appear events.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles window resize, device orientatonChange or page appear events.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 510,
          "column": 4,
          "index": 13985
        },
        "end": {
          "line": 514,
          "column": 5,
          "index": 14126
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_getScrollerOffset": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the current horizontal position of the carousel scrolling container.",
          "     * @return {Number} the horizontal position",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current horizontal position of the carousel scrolling container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the horizontal position",
            "type": "number",
            "description": "the horizontal position"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 520,
          "column": 4,
          "index": 14281
        },
        "end": {
          "line": 537,
          "column": 5,
          "index": 14807
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_onPointerDown": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>pointerdown</code> events.",
          "     * @param evt {qx.event.type.Pointer} The pointer event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>pointerdown</code> events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Pointer} The pointer event.",
            "paramName": "evt",
            "description": " The pointer event.",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 543,
          "column": 4,
          "index": 14949
        },
        "end": {
          "line": 554,
          "column": 5,
          "index": 15267
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onTrack": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for <code>track</code> events.",
          "     * @param evt {qx.event.type.Track} The track event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>track</code> events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Track} The track event.",
            "paramName": "evt",
            "description": " The track event.",
            "type": "qx.event.type.Track"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 560,
          "column": 4,
          "index": 15399
        },
        "end": {
          "line": 590,
          "column": 5,
          "index": 16208
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Track"
        }
      ],
      "appearsIn": []
    },
    "_onPointerUp": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>pointerup</code> event on carousel scroller.",
          "     * @param evt {qx.event.type.Pointer} the pointerup event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>pointerup</code> event on carousel scroller.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Pointer} the pointerup event.",
            "paramName": "evt",
            "description": " the pointerup event.",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 596,
          "column": 4,
          "index": 16364
        },
        "end": {
          "line": 603,
          "column": 5,
          "index": 16548
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onSwipe": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for swipe event on carousel scroller.",
          "     * @param evt {qx.event.type.Swipe} The swipe event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for swipe event on carousel scroller.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Swipe} The swipe event.",
            "paramName": "evt",
            "description": " The swipe event.",
            "type": "qx.event.type.Swipe"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 609,
          "column": 4,
          "index": 16681
        },
        "end": {
          "line": 631,
          "column": 5,
          "index": 17291
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Swipe"
        }
      ],
      "appearsIn": []
    },
    "_calculateTransitionDuration": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Calculates the duration the transition will need till the next carousel",
          "     * snap point is reached.",
          "     * @param deltaX {Integer} the distance on axis between pointerdown and pointerup.",
          "     * @param duration {Number} the swipe duration.",
          "     * @return {Number} the transition duration.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the duration the transition will need till the next carousel\n snap point is reached.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "deltaX {Integer} the distance on axis between pointerdown and pointerup.",
            "paramName": "deltaX",
            "description": " the distance on axis between pointerdown and pointerup.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number} the swipe duration.",
            "paramName": "duration",
            "description": " the swipe duration.",
            "type": "number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the transition duration.",
            "type": "number",
            "description": "the transition duration."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 640,
          "column": 4,
          "index": 17611
        },
        "end": {
          "line": 644,
          "column": 5,
          "index": 17842
        }
      },
      "type": "function",
      "params": [
        {
          "name": "deltaX",
          "type": "Integer"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_onNativeScroll": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles the native scroll event on the carousel container.",
          "     * This is needed for preventing \"scrollIntoView\" method.",
          "     *",
          "     * @param evt {qx.event.type.Native} the native scroll event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the native scroll event on the carousel container.\n This is needed for preventing \"scrollIntoView\" method.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Native} the native scroll event.",
            "paramName": "evt",
            "description": " the native scroll event.",
            "type": "qx.event.type.Native"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 652,
          "column": 4,
          "index": 18066
        },
        "end": {
          "line": 656,
          "column": 5,
          "index": 18229
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Native"
        }
      ],
      "appearsIn": []
    },
    "_setTransitionDuration": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Applies the CSS property \"transitionDuration\" to the carouselScroller.",
          "     * @param value {Number} the target value of the transitionDuration.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Applies the CSS property \"transitionDuration\" to the carouselScroller.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} the target value of the transitionDuration.",
            "paramName": "value",
            "description": " the target value of the transitionDuration.",
            "type": "number"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 662,
          "column": 4,
          "index": 18403
        },
        "end": {
          "line": 668,
          "column": 5,
          "index": 18584
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ],
      "appearsIn": []
    },
    "_snapCarouselPage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Snaps carouselScroller offset to a carouselPage.",
          "     * It determines which carouselPage is the nearest and moves",
          "     * carouselScrollers offset till nearest carouselPage's left border is aligned to carousel's left border.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Snaps carouselScroller offset to a carouselPage.\n It determines which carouselPage is the nearest and moves\n carouselScrollers offset till nearest carouselPage's left border is aligned to carousel's left border.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 675,
          "column": 4,
          "index": 18838
        },
        "end": {
          "line": 696,
          "column": 5,
          "index": 19514
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_updatePagination": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Updates the pagination indicator of this carousel.",
          "     * Removes the active state from from paginationLabel with oldActiveIndex,",
          "     * Adds actives state to paginationLabel new ActiveIndex.",
          "     * @param newActiveIndex {Integer} Index of paginationLabel which should have active state",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the pagination indicator of this carousel.\n Removes the active state from from paginationLabel with oldActiveIndex,\n Adds actives state to paginationLabel new ActiveIndex.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "newActiveIndex {Integer} Index of paginationLabel which should have active state",
            "paramName": "newActiveIndex",
            "description": " Index of paginationLabel which should have active state",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 704,
          "column": 4,
          "index": 19831
        },
        "end": {
          "line": 747,
          "column": 5,
          "index": 21113
        }
      },
      "type": "function",
      "params": [
        {
          "name": "newActiveIndex",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_updateScrollerPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Assign new position of carousel scrolling container.",
          "     * @param x {Integer} scroller's x position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Assign new position of carousel scrolling container.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Integer} scroller's x position.",
            "paramName": "x",
            "description": " scroller's x position.",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 753,
          "column": 4,
          "index": 21245
        },
        "end": {
          "line": 758,
          "column": 5,
          "index": 21429
        }
      },
      "type": "function",
      "params": [
        {
          "name": "x",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_removeListeners": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Remove all listeners.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove all listeners.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 763,
          "column": 4,
          "index": 21481
        },
        "end": {
          "line": 806,
          "column": 5,
          "index": 22520
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__lastHeight": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1464
        },
        "end": {
          "line": 51,
          "column": 22,
          "index": 1482
        }
      },
      "mixin": "qx.ui.mobile.core.MResize",
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ]
    },
    "__lastWidth": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1488
        },
        "end": {
          "line": 52,
          "column": 21,
          "index": 1505
        }
      },
      "mixin": "qx.ui.mobile.core.MResize",
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ]
    },
    "releaseFixedSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes fixed size from container.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes fixed size from container.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1570
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1871
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.mobile.core.MResize",
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ]
    },
    "fixSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Resizes the container element to the height of the parent element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resizes the container element to the height of the parent element.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1968
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2719
        }
      },
      "type": "function",
      "params": [],
      "mixin": "qx.ui.mobile.core.MResize",
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ]
    },
    "_setHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the height of the container element.",
          "     *",
          "     * @param height {Integer} The height to set",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the height of the container element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "height {Integer} The height to set"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2847
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 3146
        }
      },
      "type": "function",
      "params": [
        {
          "name": "height"
        }
      ],
      "mixin": "qx.ui.mobile.core.MResize",
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ]
    },
    "_setWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the width of the container element.",
          "     *",
          "     * @param width {Integer} The width to set",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the width of the container element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} The width to set"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3271
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 3564
        }
      },
      "type": "function",
      "params": [
        {
          "name": "width"
        }
      ],
      "mixin": "qx.ui.mobile.core.MResize",
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 809,
        "column": 2,
        "index": 22529
      },
      "end": {
        "line": 825,
        "column": 3,
        "index": 22959
      }
    }
  },
  "statics": {}
}