{
  "version": 0.3,
  "lastModified": 1729101022812,
  "lastModifiedIso": "2024-10-16T17:50:22.812Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/control/Picker.js",
  "type": "class",
  "location": {
    "start": {
      "line": 44,
      "column": 0,
      "index": 1479
    },
    "end": {
      "line": 348,
      "column": 3,
      "index": 9824
    }
  },
  "className": "qx.ui.mobile.control.Picker",
  "jsdoc": {
    "raw": [
      "*",
      " *",
      " * The picker widget gives the user the possibility to select a value out of an array",
      " * of values. The picker widget can be added to a {@link qx.ui.mobile.dialog.Popup} or to any other container.",
      " *",
      " * The picker widget is able to display multiple picker slots, for letting the user choose",
      " * several values at one time, in one single control.",
      " *",
      " * You can add an array with objects which contain the keys <code>title</code>, a <code>subtitle</code> or an <code>image</code> (all optional).",
      " *",
      " * <pre>",
      " * var picker = new qx.ui.mobile.control.Picker();",
      " * picker.setHeight(200);",
      " * picker.addListener(\"changeSelection\", function(evt) {",
      " *   var data = evt.getData();",
      " * },this);",
      " *",
      " * var slotData1 = [{title:\"Windows Phone\"}, {title:\"iOS\",subtitle:\"Version 7.1\"}, {title:\"Android\"}];",
      " * var slotData2 = [{title:\"Tablet\"}, {title:\"Smartphone\"}, {title:\"Phablet\"}];",
      " *",
      " * picker.addSlot(new qx.data.Array(slotData1));",
      " * picker.addSlot(new qx.data.Array(slotData2));",
      " * </pre>",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The picker widget gives the user the possibility to select a value out of an array\n of values. The picker widget can be added to a {@link qx.ui.mobile.dialog.Popup} or to any other container.\n The picker widget is able to display multiple picker slots, for letting the user choose\n several values at one time, in one single control.\n You can add an array with objects which contain the keys <code>title</code>, a <code>subtitle</code> or an <code>image</code> (all optional).\n </p>\n<pre>\n var picker = new qx.ui.mobile.control.Picker();\n picker.setHeight(200);\n picker.addListener(\"changeSelection\", function(evt) {\n   var data = evt.getData();\n },this);\n var slotData1 = [{title:\"Windows Phone\"}, {title:\"iOS\",subtitle:\"Version 7.1\"}, {title:\"Android\"}];\n var slotData2 = [{title:\"Tablet\"}, {title:\"Smartphone\"}, {title:\"Phablet\"}];\n picker.addSlot(new qx.data.Array(slotData1));\n picker.addSlot(new qx.data.Array(slotData2));\n </pre>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.container.Composite",
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 47,
        "column": 2,
        "index": 1575
      },
      "end": {
        "line": 55,
        "column": 3,
        "index": 1774
      }
    }
  },
  "events": {
    "changeSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when the selection of a slot has changed.",
          "     * Example:",
          "     * <code> {",
          "     *   index: 0,",
          "     *   item: [Object],",
          "     *   slot: 0",
          "     * }</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the selection of a slot has changed.\n Example:\n <code> {\n   index: 0,\n   item: [Object],\n   slot: 0\n }</code></p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1973
        },
        "end": {
          "line": 67,
          "column": 41,
          "index": 2010
        }
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2055
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 2120
        }
      },
      "json": {
        "refine": true,
        "init": "picker"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "visibleItems": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2211
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2308
        }
      },
      "json": {
        "init": 5,
        "check": [
          3,
          5,
          7,
          9
        ],
        "apply": "_applyVisibleItems"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Controls how much visible items are shown inside the picker.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Controls how much visible items are shown inside the picker.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "height": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2366
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2420
        }
      },
      "json": {
        "init": 200,
        "check": "Number"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Controls the picker height.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Controls the picker height.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "_slots": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2444
        },
        "end": {
          "line": 96,
          "column": 16,
          "index": 2456
        }
      },
      "appearsIn": []
    },
    "_pickerModel": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2462
        },
        "end": {
          "line": 97,
          "column": 22,
          "index": 2480
        }
      },
      "appearsIn": []
    },
    "_onAppear": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>appear</code> event of this widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>appear</code> event of this widget.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2564
        },
        "end": {
          "line": 109,
          "column": 5,
          "index": 2832
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyVisibleItems": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 112,
          "column": 4,
          "index": 2861
        },
        "end": {
          "line": 114,
          "column": 5,
          "index": 2941
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        }
      ],
      "appearsIn": []
    },
    "getModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the internal used picker model which contains one or more picker slot models.",
          "     * @return {qx.data.Array} the picker model.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the internal used picker model which contains one or more picker slot models.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array} the picker model.",
            "type": "qx.data.Array",
            "description": "the picker model."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3106
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3156
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.data.Array"
      },
      "appearsIn": []
    },
    "_createPickerSlot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates a picker slot.",
          "     * @param slotModel {qx.data.Array} the picker slot model.",
          "     * @param slotIndex {Number} the index of this slot.",
          "     * @param delegate {qx.ui.mobile.list.IListDelegate?null} the list delegate object for this slot list.",
          "     * @return {qx.ui.mobile.container.Scroll} the picker slot as a scroll container.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a picker slot.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "slotModel {qx.data.Array} the picker slot model.",
            "paramName": "slotModel",
            "description": " the picker slot model.",
            "type": "qx.data.Array"
          },
          {
            "name": "@param",
            "body": "slotIndex {Number} the index of this slot.",
            "paramName": "slotIndex",
            "description": " the index of this slot.",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "delegate {qx.ui.mobile.list.IListDelegate?null} the list delegate object for this slot list.",
            "paramName": "delegate",
            "description": " the list delegate object for this slot list.",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.ui.mobile.list.IListDelegate"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Scroll} the picker slot as a scroll container.",
            "type": "qx.ui.mobile.container.Scroll",
            "description": "the picker slot as a scroll container."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3522
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 5183
        }
      },
      "type": "function",
      "params": [
        {
          "name": "slotModel",
          "type": "qx.data.Array"
        },
        {
          "name": "slotIndex",
          "type": "number"
        },
        {
          "name": "delegate",
          "type": "qx.ui.mobile.list.IListDelegate",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "returnType": {
        "type": "qx.ui.mobile.container.Scroll"
      },
      "appearsIn": []
    },
    "_createPlaceholderItem": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates a placeholder list item, for making sure the selected item is vertically centered.",
          "     * @return {qx.ui.mobile.container.Composite} the placeholder list item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a placeholder list item, for making sure the selected item is vertically centered.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} the placeholder list item.",
            "type": "qx.ui.mobile.container.Composite",
            "description": "the placeholder list item."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 193,
          "column": 4,
          "index": 5381
        },
        "end": {
          "line": 204,
          "column": 5,
          "index": 5760
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.mobile.container.Composite"
      },
      "appearsIn": []
    },
    "_calcItemHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Calculates the item height of a picker item.",
          "     * @return {Number} height of the picker item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the item height of a picker item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} height of the picker item.",
            "type": "number",
            "description": "height of the picker item."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 210,
          "column": 4,
          "index": 5886
        },
        "end": {
          "line": 212,
          "column": 5,
          "index": 5967
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_onChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>changeSelection</code> event on picker list.",
          "     * @param evt {qx.event.type.Data} the events data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>changeSelection</code> event on picker list.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} the events data.",
            "paramName": "evt",
            "description": " the events data.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 218,
          "column": 4,
          "index": 6116
        },
        "end": {
          "line": 225,
          "column": 5,
          "index": 6289
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onWaypoint": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>waypoint</code> event on scroll container.",
          "     * @param evt {qx.event.type.Data} the waypoint data.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>waypoint</code> event on scroll container.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} the waypoint data.",
            "paramName": "evt",
            "description": " the waypoint data.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 231,
          "column": 4,
          "index": 6438
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 6728
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "getSelectedIndex": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Getter for the selectedIndex of a picker slot, identified by its index.",
          "     * @param slotIndex {Integer} the index of the target picker slot.",
          "     * @return {Integer} the index of the target picker slot, or null if slotIndex is unknown.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for the selectedIndex of a picker slot, identified by its index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "slotIndex {Integer} the index of the target picker slot.",
            "paramName": "slotIndex",
            "description": " the index of the target picker slot.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the index of the target picker slot, or null if slotIndex is unknown.",
            "type": "Integer",
            "description": "the index of the target picker slot, or null if slotIndex is unknown."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 6996
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 7090
        }
      },
      "type": "function",
      "params": [
        {
          "name": "slotIndex",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "setSelectedIndex": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Setter for the selectedIndex of a picker slot, identified by its index.",
          "     * @param slotIndex {Integer} the index of the target picker slot.",
          "     * @param selectedIndex {Integer} the selectedIndex of the slot.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setter for the selectedIndex of a picker slot, identified by its index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "slotIndex {Integer} the index of the target picker slot.",
            "paramName": "slotIndex",
            "description": " the index of the target picker slot.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "selectedIndex {Integer} the selectedIndex of the slot.",
            "paramName": "selectedIndex",
            "description": " the selectedIndex of the slot.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 256,
          "column": 4,
          "index": 7332
        },
        "end": {
          "line": 262,
          "column": 5,
          "index": 7587
        }
      },
      "type": "function",
      "params": [
        {
          "name": "slotIndex",
          "type": "Integer"
        },
        {
          "name": "selectedIndex",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "getSlotCount": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the picker slot count, added to this picker.",
          "     * @return {Integer} count of picker slots.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the picker slot count, added to this picker.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} count of picker slots.",
            "type": "Integer",
            "description": "count of picker slots."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 268,
          "column": 4,
          "index": 7718
        },
        "end": {
          "line": 270,
          "column": 5,
          "index": 7784
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "addSlot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds an picker slot to the end of the array.",
          "     * @param slotModel {qx.data.Array} the picker slot model to display.",
          "     * @param delegate {qx.ui.mobile.list.IListDelegate?null} the list delegate object for this slot.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds an picker slot to the end of the array.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "slotModel {qx.data.Array} the picker slot model to display.",
            "paramName": "slotModel",
            "description": " the picker slot model to display.",
            "type": "qx.data.Array"
          },
          {
            "name": "@param",
            "body": "delegate {qx.ui.mobile.list.IListDelegate?null} the list delegate object for this slot.",
            "paramName": "delegate",
            "description": " the list delegate object for this slot.",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.ui.mobile.list.IListDelegate"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 277,
          "column": 4,
          "index": 8035
        },
        "end": {
          "line": 300,
          "column": 5,
          "index": 8625
        }
      },
      "type": "function",
      "params": [
        {
          "name": "slotModel",
          "type": "qx.data.Array"
        },
        {
          "name": "delegate",
          "type": "qx.ui.mobile.list.IListDelegate",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "appearsIn": []
    },
    "removeSlot": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the picker slot at the given slotIndex.",
          "     * @param slotIndex {Integer} the index of the target picker slot.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the picker slot at the given slotIndex.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "slotIndex {Integer} the index of the target picker slot.",
            "paramName": "slotIndex",
            "description": " the index of the target picker slot.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 306,
          "column": 4,
          "index": 8774
        },
        "end": {
          "line": 328,
          "column": 5,
          "index": 9424
        }
      },
      "type": "function",
      "params": [
        {
          "name": "slotIndex",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_onSlotDataChange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handles the <code>changeBubble</code> and <codechange></code> event on a picker slot model.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the <code>changeBubble</code> and <codechange></code> event on a picker slot model.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 333,
          "column": 4,
          "index": 9546
        },
        "end": {
          "line": 340,
          "column": 5,
          "index": 9687
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 343,
        "column": 2,
        "index": 9696
      },
      "end": {
        "line": 347,
        "column": 3,
        "index": 9820
      }
    }
  },
  "statics": {}
}