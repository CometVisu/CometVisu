{
  "version": 0.3,
  "lastModified": 1735383688249,
  "lastModifiedIso": "2024-12-28T11:01:28.249Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/RadioButton.js",
  "type": "class",
  "location": {
    "start": {
      "line": 43,
      "column": 0,
      "index": 1088
    },
    "end": {
      "line": 165,
      "column": 3,
      "index": 4128
    }
  },
  "className": "qx.ui.mobile.form.RadioButton",
  "jsdoc": {
    "raw": [
      "*",
      " * The Radio button for mobile.",
      " *",
      " * *Example*",
      " *",
      " * <pre class='javascript'>",
      " *    var form = new qx.ui.mobile.form.Form();",
      " *",
      " *    var radio1 = new qx.ui.mobile.form.RadioButton();",
      " *    var radio2 = new qx.ui.mobile.form.RadioButton();",
      " *    var radio3 = new qx.ui.mobile.form.RadioButton();",
      " *",
      " *    var group = new qx.ui.mobile.form.RadioGroup(radio1, radio2, radio3);",
      "",
      " *    form.add(radio1, \"Germany\");",
      " *    form.add(radio2, \"UK\");",
      " *    form.add(radio3, \"USA\");",
      " *",
      " *    this.getRoot.add(new qx.ui.mobile.form.renderer.Single(form));",
      " * </pre>",
      " *",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The Radio button for mobile.\n<em>Example</em>\n </p>\n<pre class='javascript'>\n    var form = new qx.ui.mobile.form.Form();\n    var radio1 = new qx.ui.mobile.form.RadioButton();\n    var radio2 = new qx.ui.mobile.form.RadioButton();\n    var radio3 = new qx.ui.mobile.form.RadioButton();\n    var group = new qx.ui.mobile.form.RadioGroup(radio1, radio2, radio3);\n    form.add(radio1, \"Germany\");\n    form.add(radio2, \"UK\");\n    form.add(radio3, \"USA\");\n    this.getRoot.add(new qx.ui.mobile.form.renderer.Single(form));\n </pre>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.form.Input",
  "mixins": [
    "qx.ui.mobile.form.MValue"
  ],
  "interfaces": [
    "qx.ui.form.IField"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "value"
      }
    ],
    "location": {
      "start": {
        "line": 57,
        "column": 2,
        "index": 1510
      },
      "end": {
        "line": 60,
        "column": 3,
        "index": 1593
      }
    }
  },
  "events": {
    "changeValue": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when the selection value is changed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the selection value is changed.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1860
        },
        "end": {
          "line": 71,
          "column": 37,
          "index": 1893
        }
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2124
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2188
        }
      },
      "json": {
        "refine": true,
        "init": "radio"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "group": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2296
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2404
        }
      },
      "json": {
        "check": "qx.ui.mobile.form.RadioGroup",
        "nullable": true,
        "apply": "_applyGroup"
      },
      "jsdoc": {
        "raw": [
          "* The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "liveUpdate": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2809
        },
        "end": {
          "line": 104,
          "column": 5,
          "index": 2870
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the {@link #changeValue} event should be fired on every key",
          "     * input. If set to true, the changeValue event is equal to the",
          "     * {@link #input} event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the {@link #changeValue} event should be fired on every key\n input. If set to true, the changeValue event is equal to the\n {@link #input} event.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    }
  },
  "members": {
    "_state": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2428
        },
        "end": {
          "line": 95,
          "column": 16,
          "index": 2440
        }
      },
      "appearsIn": []
    },
    "_getTagName": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2465
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2507
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.form.Input",
      "appearsIn": [
        "qx.ui.mobile.form.Input",
        "qx.ui.mobile.core.Widget"
      ]
    },
    "_getType": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2532
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2569
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.form.Input",
      "appearsIn": [
        "qx.ui.mobile.form.Input"
      ]
    },
    "_onTap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Reacts on tap on radio button.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reacts on tap on radio button.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 2630
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 2742
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyGroup": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons",
          "     * @param value {qx.ui.form.RadioGroup} the new radio group to which this radio button belongs.",
          "     * @param old {qx.ui.form.RadioGroup} the old radio group of this radio button.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.ui.form.RadioGroup} the new radio group to which this radio button belongs.",
            "paramName": "value",
            "description": " the new radio group to which this radio button belongs.",
            "type": "qx.ui.form.RadioGroup"
          },
          {
            "name": "@param",
            "body": "old {qx.ui.form.RadioGroup} the old radio group of this radio button.",
            "paramName": "old",
            "description": " the old radio group of this radio button.",
            "type": "qx.ui.form.RadioGroup"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3054
        },
        "end": {
          "line": 130,
          "column": 5,
          "index": 3189
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "qx.ui.form.RadioGroup"
        },
        {
          "name": "old",
          "type": "qx.ui.form.RadioGroup"
        }
      ],
      "appearsIn": []
    },
    "_setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the value [true/false] of this radio button.",
          "     * It is called by setValue method of qx.ui.mobile.form.MValue mixin",
          "     * @param value {Boolean} the new value of the radio button",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the value [true/false] of this radio button.\n It is called by setValue method of qx.ui.mobile.form.MValue mixin</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Boolean} the new value of the radio button",
            "paramName": "value",
            "description": " the new value of the radio button",
            "type": "boolean"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3406
        },
        "end": {
          "line": 145,
          "column": 5,
          "index": 3585
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "_getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Gets the value [true/false] of this radio button.",
          "     * It is called by getValue method of qx.ui.mobile.form.MValue mixin",
          "     * @return {Boolean} the value of the radio button",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the value [true/false] of this radio button.\n It is called by getValue method of qx.ui.mobile.form.MValue mixin</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} the value of the radio button",
            "type": "boolean",
            "description": "the value of the radio button"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 3793
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 3838
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "__oldValue": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3078
        },
        "end": {
          "line": 114,
          "column": 20,
          "index": 3094
        }
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "__inputTimeoutHandle": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3100
        },
        "end": {
          "line": 115,
          "column": 30,
          "index": 3126
        }
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "__hasFocus": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3132
        },
        "end": {
          "line": 116,
          "column": 20,
          "index": 3148
        }
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_convertValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Converts the incoming value.",
          "     *",
          "     * @param value {var} The value to convert",
          "     * @return {var} The converted value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts the incoming value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The value to convert",
            "paramName": "value",
            "description": " The value to convert",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The converted value",
            "type": "var",
            "description": "The converted value"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3302
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3511
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "var"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onFocus": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>focus</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>focus</code> event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3579
        },
        "end": {
          "line": 139,
          "column": 5,
          "index": 3627
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onBlur": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>blur</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>blur</code> event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3694
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 3742
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "hasFocus": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns whether this widget has focus or not.",
          "     * @return {Boolean} <code>true</code> or <code>false</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether this widget has focus or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> or <code>false</code>",
            "type": "boolean",
            "description": "<code>true</code> or <code>false</code>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 3883
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 3931
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the value.",
          "     *",
          "     * @param value {var} The value to set",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The value to set",
            "paramName": "value",
            "description": " The value to set",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4027
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4312
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue",
        "qx.ui.form.IField"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the set value.",
          "     *",
          "     * @return {var} The set value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the set value.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The set value",
            "type": "var",
            "description": "The set value"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 178,
          "column": 4,
          "index": 4407
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 4539
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "var"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue",
        "qx.ui.form.IField"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "resetValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Resets the value.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets the value.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 4587
        },
        "end": {
          "line": 189,
          "column": 5,
          "index": 4634
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MValue",
        "qx.ui.form.IField"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onChangeContent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the {@link #changeValue} event occurs.",
          "     *",
          "     * @param evt {qx.event.type.Data} The event, containing the changed content.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the {@link #changeValue} event occurs.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} The event, containing the changed content.",
            "paramName": "evt",
            "description": " The event, containing the changed content.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 196,
          "column": 4,
          "index": 4819
        },
        "end": {
          "line": 198,
          "column": 5,
          "index": 4913
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onInput": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the {@link #input} event occurs.",
          "     *",
          "     * @param evt {qx.event.type.Data} The event, containing the changed content.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the {@link #input} event occurs.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} The event, containing the changed content.",
            "paramName": "evt",
            "description": " The event, containing the changed content.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5092
        },
        "end": {
          "line": 215,
          "column": 5,
          "index": 5383
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_getCaretPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the caret position of this widget.",
          "     * @return {Integer} the caret position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the caret position of this widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the caret position.",
            "type": "Integer",
            "description": "the caret position."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5501
        },
        "end": {
          "line": 228,
          "column": 5,
          "index": 5763
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_setCaretPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the caret position on this widget.",
          "     * @param position {Integer} the caret position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the caret position on this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} the caret position.",
            "paramName": "position",
            "description": " the caret position.",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 234,
          "column": 4,
          "index": 5886
        },
        "end": {
          "line": 243,
          "column": 5,
          "index": 6193
        }
      },
      "type": "function",
      "params": [
        {
          "name": "position",
          "type": "Integer"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "__fireChangeValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fires the {@link #changeValue} event.",
          "     *",
          "     * @param value {var} The current value to fire.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires the {@link #changeValue} event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The current value to fire.",
            "paramName": "value",
            "description": " The current value to fire.",
            "type": "var"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 250,
          "column": 4,
          "index": 6321
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 6482
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 162,
        "column": 2,
        "index": 4034
      },
      "end": {
        "line": 164,
        "column": 3,
        "index": 4124
      }
    }
  },
  "statics": {}
}