{
  "version": 0.3,
  "lastModified": 1722151624395,
  "lastModifiedIso": "2024-07-28T07:27:04.395Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/embed/Canvas.js",
  "type": "class",
  "location": {
    "start": {
      "line": 47,
      "column": 0,
      "index": 1137
    },
    "end": {
      "line": 132,
      "column": 3,
      "index": 3360
    }
  },
  "className": "qx.ui.mobile.embed.Canvas",
  "jsdoc": {
    "raw": [
      "*",
      " * Creates a HTML canvas widget in your mobile application.",
      " *",
      " * *Example*",
      " *",
      " * Here is an example of how to use the canvas widget.",
      " *",
      " * <pre class='javascript'>",
      " * var canvas = new qx.ui.mobile.embed.Canvas();",
      " *",
      " * canvas.setWidth(150);",
      " * canvas.setHeight(150);",
      " * this.getContent().add(canvas);",
      " *",
      " * var ctx = canvas.getContext2d();",
      " * ctx.strokeStyle = '#3D72C9';",
      " * ctx.beginPath();",
      " * ctx.arc(75,85,50,0,Math.PI*2,true);",
      " * ctx.moveTo(110,85);",
      " * ctx.arc(75,85,35,0,Math.PI,false);",
      " * ctx.moveTo(65,75);",
      " * ctx.arc(60,75,5,0,Math.PI*2,true);",
      " * ctx.moveTo(95,75);",
      " * ctx.arc(90,75,5,0,Math.PI*2,true);",
      " * ctx.stroke();",
      " * </pre>",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Creates a HTML canvas widget in your mobile application.\n<em>Example</em>\n Here is an example of how to use the canvas widget.\n </p>\n<pre class='javascript'>\n var canvas = new qx.ui.mobile.embed.Canvas();\n canvas.setWidth(150);\n canvas.setHeight(150);\n this.getContent().add(canvas);\n var ctx = canvas.getContext2d();\n ctx.strokeStyle = '#3D72C9';\n ctx.beginPath();\n ctx.arc(75,85,50,0,Math.PI*2,true);\n ctx.moveTo(110,85);\n ctx.arc(75,85,35,0,Math.PI,false);\n ctx.moveTo(65,75);\n ctx.arc(60,75,5,0,Math.PI*2,true);\n ctx.moveTo(95,75);\n ctx.arc(90,75,5,0,Math.PI*2,true);\n ctx.stroke();\n </pre>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.core.Widget",
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 58,
        "column": 2,
        "index": 1423
      },
      "end": {
        "line": 60,
        "column": 3,
        "index": 1453
      }
    }
  },
  "members": {
    "_getTagName": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1675
        },
        "end": {
          "line": 72,
          "column": 5,
          "index": 1719
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "getCanvas": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the canvas element [<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvas\">W3C-HMTL5</a>]",
          "     *",
          "     * @return {Element} The canvas DOM element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the canvas element [<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvas\">W3C-HMTL5</a>]</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} The canvas DOM element.",
            "type": "Element",
            "description": "The canvas DOM element."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 1945
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 2005
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Element"
      },
      "appearsIn": []
    },
    "setWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the width attribute of the canvas element. This property controls the",
          "     * size of the canvas coordinate space.",
          "     *",
          "     * @param width {Integer} canvas width",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the width attribute of the canvas element. This property controls the\n size of the canvas coordinate space.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} canvas width",
            "paramName": "width",
            "description": " canvas width",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2203
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2274
        }
      },
      "type": "function",
      "params": [
        {
          "name": "width",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "getWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the width attribute of the canvas element",
          "     *",
          "     * @return {Integer} canvas width",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the width attribute of the canvas element</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} canvas width",
            "type": "Integer",
            "description": "canvas width"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2395
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2460
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "setHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the height attribute of the canvas element. This property controls the",
          "     * size of the canvas coordinate space.",
          "     *",
          "     * @param height {Integer} canvas height",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the height attribute of the canvas element. This property controls the\n size of the canvas coordinate space.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "height {Integer} canvas height",
            "paramName": "height",
            "description": " canvas height",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2661
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2736
        }
      },
      "type": "function",
      "params": [
        {
          "name": "height",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "getHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the height attribute of the canvas element",
          "     *",
          "     * @return {Integer} canvas height",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the height attribute of the canvas element</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} canvas height",
            "type": "Integer",
            "description": "canvas height"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 2859
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 2926
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getContext2d": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the canvas' 2D rendering context",
          "     * [<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasrenderingcontext2d\">W3C-HTML5</a>].",
          "     * All drawing operations are performed on this context.",
          "     *",
          "     * @return {CanvasRenderingContext2D} The 2D rendering context.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the canvas' 2D rendering context\n [<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasrenderingcontext2d\">W3C-HTML5</a>].\n All drawing operations are performed on this context.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{CanvasRenderingContext2D} The 2D rendering context.",
            "type": "CanvasRenderingContext2D",
            "description": "The 2D rendering context."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3272
        },
        "end": {
          "line": 130,
          "column": 5,
          "index": 3352
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "CanvasRenderingContext2D"
      },
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}