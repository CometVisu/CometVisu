{
  "version": 0.3,
  "lastModified": 1731947916627,
  "lastModifiedIso": "2024-11-18T16:38:36.627Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/page/Page.js",
  "type": "class",
  "location": {
    "start": {
      "line": 56,
      "column": 0,
      "index": 2519
    },
    "end": {
      "line": 415,
      "column": 3,
      "index": 12704
    }
  },
  "className": "qx.ui.mobile.page.Page",
  "jsdoc": {
    "raw": [
      "*",
      " * A page is a widget which provides a screen with which users",
      " * can interact in order to do something. Most times a page provides a single task",
      " * or a group of related tasks.",
      " *",
      " * A qooxdoo mobile application is usually composed of one or more loosely bound",
      " * pages. Typically there is one page that presents the \"main\" view.",
      " *",
      " * Pages can have one or more child widgets from the {@link qx.ui.mobile}",
      " * namespace. Normally a page provides a {@link qx.ui.mobile.navigationbar.NavigationBar}",
      " * for the navigation between pages.",
      " *",
      " * To navigate between two pages, just call the {@link #show} method of the page",
      " * that should be shown. Depending on the used page manager a page transition will be animated.",
      " * There are several animations available. Have",
      " * a look at the {@link qx.ui.mobile.page.Manager} manager or {@link qx.ui.mobile.layout.Card} card layout for more information.",
      " *",
      " * A page has predefined lifecycle methods that get called by the used page manager",
      " * when a page gets shown. Each time another page is requested to be shown the currently shown page",
      " * is stopped. The other page, will be, if shown for the first time, initialized and started",
      " * afterwards. For all called lifecycle methods an event is fired.",
      " *",
      " * Call of the {@link #show} method triggers the following lifecycle methods:",
      " *",
      " * * <strong>initialize</strong>: Initializes the page to show",
      " * * <strong>start</strong>: Gets called when the page to show is started",
      " * * <strong>stop</strong>:  Stops the current page",
      " *",
      " * IMPORTANT: Define all child widgets of a page when the {@link #initialize} lifecycle",
      " * method is called, either by listening to the {@link #initialize} event or overriding",
      " * the {@link #_initialize} method. This is because a page can be instanced during",
      " * application startup and would then decrease performance when the widgets would be",
      " * added during constructor call. The <code>initialize</code> event and the",
      " * {@link #_initialize} lifecycle method are only called when the page is shown",
      " * for the first time.",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A page is a widget which provides a screen with which users\n can interact in order to do something. Most times a page provides a single task\n or a group of related tasks.\n A qooxdoo mobile application is usually composed of one or more loosely bound\n pages. Typically there is one page that presents the \"main\" view.\n Pages can have one or more child widgets from the {@link qx.ui.mobile}\n namespace. Normally a page provides a {@link qx.ui.mobile.navigationbar.NavigationBar}\n for the navigation between pages.\n To navigate between two pages, just call the {@link #show} method of the page\n that should be shown. Depending on the used page manager a page transition will be animated.\n There are several animations available. Have\n a look at the {@link qx.ui.mobile.page.Manager} manager or {@link qx.ui.mobile.layout.Card} card layout for more information.\n A page has predefined lifecycle methods that get called by the used page manager\n when a page gets shown. Each time another page is requested to be shown the currently shown page\n is stopped. The other page, will be, if shown for the first time, initialized and started\n afterwards. For all called lifecycle methods an event is fired.\n Call of the {@link #show} method triggers the following lifecycle methods:</p>\n<ul>\n<li><strong>initialize</strong>: Initializes the page to show</li>\n<li><strong>start</strong>: Gets called when the page to show is started</li>\n<li><strong>stop</strong>:  Stops the current page\nIMPORTANT: Define all child widgets of a page when the {@link #initialize} lifecycle\nmethod is called, either by listening to the {@link #initialize} event or overriding\nthe {@link #<em>initialize} method. This is because a page can be instanced during\napplication startup and would then decrease performance when the widgets would be\nadded during constructor call. The <code>initialize</code> event and the\n{@link #</em>initialize} lifecycle method are only called when the page is shown\nfor the first time.</li>\n</ul>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.container.Composite",
  "mixins": [
    "qx.ui.mobile.core.MResize"
  ],
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "layout"
      }
    ],
    "location": {
      "start": {
        "line": 66,
        "column": 2,
        "index": 2840
      },
      "end": {
        "line": 68,
        "column": 3,
        "index": 2916
      }
    }
  },
  "statics": {
    "_currentPage": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 3124
        },
        "end": {
          "line": 77,
          "column": 22,
          "index": 3142
        }
      },
      "appearsIn": []
    },
    "_onDeviceReady": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the device is ready.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the device is ready.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 3220
        },
        "end": {
          "line": 94,
          "column": 5,
          "index": 3509
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onBackButton": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the back button of the device was pressed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the back button of the device was pressed.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 3609
        },
        "end": {
          "line": 112,
          "column": 5,
          "index": 3980
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onMenuButton": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the menu button of the device was pressed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the menu button of the device was pressed.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 117,
          "column": 4,
          "index": 4080
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 4350
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "events": {
    "initialize": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the lifecycle method {@link #initialize} is called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the lifecycle method {@link #initialize} is called</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 4446
        },
        "end": {
          "line": 131,
          "column": 37,
          "index": 4479
        }
      }
    },
    "start": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the lifecycle method {@link #start} is called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the lifecycle method {@link #start} is called</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 134,
          "column": 4,
          "index": 4554
        },
        "end": {
          "line": 134,
          "column": 32,
          "index": 4582
        }
      }
    },
    "stop": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the lifecycle method {@link #stop} is called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the lifecycle method {@link #stop} is called</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 4656
        },
        "end": {
          "line": 137,
          "column": 31,
          "index": 4683
        }
      }
    },
    "pause": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the lifecycle method {@link #pause} is called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the lifecycle method {@link #pause} is called</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 4758
        },
        "end": {
          "line": 140,
          "column": 32,
          "index": 4786
        }
      }
    },
    "resume": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the lifecycle method {@link #resume} is called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the lifecycle method {@link #resume} is called</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 143,
          "column": 4,
          "index": 4862
        },
        "end": {
          "line": 143,
          "column": 33,
          "index": 4891
        }
      }
    },
    "back": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when the method {@link #back} is called and not prevented by",
          "     * {@link qx.application.Mobile#back}. Data indicating whether",
          "     * the action was triggered by a key event or not.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the method {@link #back} is called and not prevented by\n {@link qx.application.Mobile#back}. Data indicating whether\n the action was triggered by a key event or not.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 150,
          "column": 4,
          "index": 5110
        },
        "end": {
          "line": 150,
          "column": 30,
          "index": 5136
        }
      }
    },
    "menu": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the method {@link #menu} is called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the method {@link #menu} is called</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 5200
        },
        "end": {
          "line": 153,
          "column": 31,
          "index": 5227
        }
      }
    },
    "wait": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the method {@link #wait} is called "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the method {@link #wait} is called</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 5291
        },
        "end": {
          "line": 156,
          "column": 31,
          "index": 5318
        }
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 5363
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 5426
        }
      },
      "json": {
        "refine": true,
        "init": "page"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "lifeCycleState": {
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 5506
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 5656
        }
      },
      "json": {
        "check": [
          "initialize",
          "start",
          "stop",
          "resume",
          "wait",
          "pause"
        ],
        "apply": "_applyLifeCycleState"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The current active life cycle state of this page.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The current active life cycle state of this page.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "fireDomUpdatedOnResize": {
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1183
        },
        "end": {
          "line": 41,
          "column": 5,
          "index": 1256
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "* Whether the resize should fire the \"domupdated\" event. Set this to \"true\"",
          "     *  whenever other elements should react on this size change (e.g. when the size",
          "     *  change does not infect the size of the application, but other widgets should",
          "     *  react).",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the resize should fire the \"domupdated\" event. Set this to \"true\"\n  whenever other elements should react on this size change (e.g. when the size\n  change does not infect the size of the application, but other widgets should\n  react).</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ],
      "mixin": "qx.ui.mobile.core.MResize"
    }
  },
  "members": {
    "__initialized": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 183,
          "column": 4,
          "index": 5868
        },
        "end": {
          "line": 183,
          "column": 24,
          "index": 5888
        }
      },
      "appearsIn": []
    },
    "show": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 186,
          "column": 4,
          "index": 5913
        },
        "end": {
          "line": 194,
          "column": 5,
          "index": 6171
        }
      },
      "type": "function",
      "params": [
        {
          "name": "properties"
        }
      ],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "exclude": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 197,
          "column": 4,
          "index": 6196
        },
        "end": {
          "line": 200,
          "column": 5,
          "index": 6275
        }
      },
      "type": "function",
      "params": [
        {
          "name": "properties"
        }
      ],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "back": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fires the <code>back</code> event. Call this method if you want to request",
          "     * a back action. For Android PhoneGap applications this method gets called",
          "     * by the used page manager when the back button was pressed. Return <code>true</code>",
          "     * to exit the application.",
          "     *",
          "     * The back request can prevented by calling the {@link qx.event.type.Event#preventDefault} on",
          "     * the {@link qx.application.Mobile#back} event.",
          "     *",
          "     * @param triggeredByKeyEvent {Boolean} Whether the back action was triggered by a key event.",
          "     * @return {Boolean} Whether the exit should be exit or not. Return <code>true</code",
          "     *     to exit the application. Only needed for Android PhoneGap applications.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires the <code>back</code> event. Call this method if you want to request\n a back action. For Android PhoneGap applications this method gets called\n by the used page manager when the back button was pressed. Return <code>true</code>\n to exit the application.\n The back request can prevented by calling the {@link qx.event.type.Event#preventDefault} on\n the {@link qx.application.Mobile#back} event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "triggeredByKeyEvent {Boolean} Whether the back action was triggered by a key event.",
            "paramName": "triggeredByKeyEvent",
            "description": " Whether the back action was triggered by a key event.",
            "type": "boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the exit should be exit or not. Return <code>true</code\n     to exit the application. Only needed for Android PhoneGap applications.",
            "type": "boolean",
            "description": "Whether the exit should be exit or not. Return <code>true</code\n     to exit the application. Only needed for Android PhoneGap applications."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 215,
          "column": 4,
          "index": 7019
        },
        "end": {
          "line": 230,
          "column": 5,
          "index": 7402
        }
      },
      "type": "function",
      "params": [
        {
          "name": "triggeredByKeyEvent",
          "type": "boolean"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_back": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Override this method if you want to perform a certain action when back",
          "     * is called.",
          "     *",
          "     * @param triggeredByKeyEvent {Boolean} Whether the back action was triggered by a key event.",
          "     * @return {Boolean} Whether the exit should be exit or not. Return <code>true</code",
          "     *     to exit the application. Only needed for Android PhoneGap applications.",
          "     * @see #back",
          "     * @abstract",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Override this method if you want to perform a certain action when back\n is called.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "triggeredByKeyEvent {Boolean} Whether the back action was triggered by a key event.",
            "paramName": "triggeredByKeyEvent",
            "description": " Whether the back action was triggered by a key event.",
            "type": "boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the exit should be exit or not. Return <code>true</code\n     to exit the application. Only needed for Android PhoneGap applications.",
            "type": "boolean",
            "description": "Whether the exit should be exit or not. Return <code>true</code\n     to exit the application. Only needed for Android PhoneGap applications."
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#back"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 242,
          "column": 4,
          "index": 7833
        },
        "end": {
          "line": 242,
          "column": 33,
          "index": 7862
        }
      },
      "type": "function",
      "params": [
        {
          "name": "triggeredByKeyEvent",
          "type": "boolean"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "menu": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Only used by Android PhoneGap applications. Called by the used page manager",
          "     * when the menu button was pressed. Fires the <code>menu</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Only used by Android PhoneGap applications. Called by the used page manager\n when the menu button was pressed. Fires the <code>menu</code> event.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 248,
          "column": 4,
          "index": 8044
        },
        "end": {
          "line": 250,
          "column": 5,
          "index": 8088
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "initialize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Lifecycle method. Called by the page manager when the page is shown.",
          "     * Fires the <code>initialize</code> event. You should create and add all your",
          "     * child widgets of the view,  either by listening to the {@link #initialize} event or overriding",
          "     * the {@link #_initialize} method. This is because a page can be instanced during",
          "     * application startup and would then decrease performance when the widgets would be",
          "     * added during constructor call. The {@link #_initialize} lifecycle method and the",
          "     * <code>initialize</code> are only called once when the page is shown for the first time.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Lifecycle method. Called by the page manager when the page is shown.\n Fires the <code>initialize</code> event. You should create and add all your\n child widgets of the view,  either by listening to the {@link #initialize} event or overriding\n the {@link #<em>initialize} method. This is because a page can be instanced during\n application startup and would then decrease performance when the widgets would be\n added during constructor call. The {@link #</em>initialize} lifecycle method and the\n <code>initialize</code> are only called once when the page is shown for the first time.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 267,
          "column": 4,
          "index": 8930
        },
        "end": {
          "line": 273,
          "column": 5,
          "index": 9102
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initialize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Override this method if you would like to perform a certain action when initialize",
          "     * is called.",
          "     *",
          "     * @see #initialize",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Override this method if you would like to perform a certain action when initialize\n is called.</p>"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#initialize"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 281,
          "column": 4,
          "index": 9264
        },
        "end": {
          "line": 281,
          "column": 20,
          "index": 9280
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "isInitialized": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the status of the initialization of the page.",
          "     *",
          "     * @return {Boolean} Whether the page is already initialized or not",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the status of the initialization of the page.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the page is already initialized or not",
            "type": "boolean",
            "description": "Whether the page is already initialized or not"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 288,
          "column": 4,
          "index": 9443
        },
        "end": {
          "line": 290,
          "column": 5,
          "index": 9499
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "start": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Lifecycle method. Called by the page manager after the {@link #initialize}",
          "     * method when the page is shown. Fires the <code>start</code> event. You should",
          "     * register all your event listener when this event occurs, so that no page",
          "     * updates are done when page is not shown.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Lifecycle method. Called by the page manager after the {@link #initialize}\n method when the page is shown. Fires the <code>start</code> event. You should\n register all your event listener when this event occurs, so that no page\n updates are done when page is not shown.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 298,
          "column": 4,
          "index": 9817
        },
        "end": {
          "line": 301,
          "column": 5,
          "index": 9892
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_start": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Override this method if you would like to perform a certain action when start",
          "     * is called.",
          "     *",
          "     * @see #start",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Override this method if you would like to perform a certain action when start\n is called.</p>"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#start"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 309,
          "column": 4,
          "index": 10044
        },
        "end": {
          "line": 309,
          "column": 15,
          "index": 10055
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "stop": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Lifecycle method. Called by the page manager when another page is shown.",
          "     * Fires the <code>stop</code> event. You should unregister all your event",
          "     * listener when this event occurs, so that no page updates are down when page is not shown.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Lifecycle method. Called by the page manager when another page is shown.\n Fires the <code>stop</code> event. You should unregister all your event\n listener when this event occurs, so that no page updates are down when page is not shown.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 316,
          "column": 4,
          "index": 10334
        },
        "end": {
          "line": 322,
          "column": 5,
          "index": 10465
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_stop": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Override this method if you would like to perform a certain action when stop",
          "     * is called.",
          "     *",
          "     * @see #stop",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Override this method if you would like to perform a certain action when stop\n is called.</p>"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#stop"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 330,
          "column": 4,
          "index": 10615
        },
        "end": {
          "line": 330,
          "column": 14,
          "index": 10625
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "pause": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Lifecycle method. Not used right now. Should be called when the current page",
          "     * is interrupted, e.g. by a dialog, so that page view updates can be interrupted.",
          "     * Fires the <code>pause</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Lifecycle method. Not used right now. Should be called when the current page\n is interrupted, e.g. by a dialog, so that page view updates can be interrupted.\n Fires the <code>pause</code> event.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 337,
          "column": 4,
          "index": 10862
        },
        "end": {
          "line": 340,
          "column": 5,
          "index": 10937
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_pause": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Override this method if you would like to perform a certain action when pause",
          "     * is called.",
          "     *",
          "     * @see #pause",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Override this method if you would like to perform a certain action when pause\n is called.</p>"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#pause"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 348,
          "column": 4,
          "index": 11089
        },
        "end": {
          "line": 348,
          "column": 15,
          "index": 11100
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "resume": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Lifecycle method. Not used right now. Should be called when the current page",
          "     * is resuming from a interruption, e.g. when a dialog is closed, so that page",
          "     * can resume updating the view.",
          "     * Fires the <code>resume</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Lifecycle method. Not used right now. Should be called when the current page\n is resuming from a interruption, e.g. when a dialog is closed, so that page\n can resume updating the view.\n Fires the <code>resume</code> event.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 356,
          "column": 4,
          "index": 11371
        },
        "end": {
          "line": 359,
          "column": 5,
          "index": 11449
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_resume": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Override this method if you would like to perform a certain action when resume",
          "     * is called.",
          "     *",
          "     * @see #resume",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Override this method if you would like to perform a certain action when resume\n is called.</p>"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#resume"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 367,
          "column": 4,
          "index": 11603
        },
        "end": {
          "line": 367,
          "column": 16,
          "index": 11615
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "wait": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Lifecycle method. Not used right now. Should be called when the current page",
          "     * waits for data request etc.",
          "     * Fires the <code>wait</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Lifecycle method. Not used right now. Should be called when the current page\n waits for data request etc.\n Fires the <code>wait</code> event.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 374,
          "column": 4,
          "index": 11799
        },
        "end": {
          "line": 377,
          "column": 5,
          "index": 11871
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_wait": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Override this method if you would like to perform a certain action when wait",
          "     * is called.",
          "     *",
          "     * @see #wait",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Override this method if you would like to perform a certain action when wait\n is called.</p>"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#wait"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 385,
          "column": 4,
          "index": 12021
        },
        "end": {
          "line": 385,
          "column": 14,
          "index": 12031
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyLifeCycleState": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 388,
          "column": 4,
          "index": 12060
        },
        "end": {
          "line": 394,
          "column": 5,
          "index": 12243
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__lastHeight": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1464
        },
        "end": {
          "line": 51,
          "column": 22,
          "index": 1482
        }
      },
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ],
      "mixin": "qx.ui.mobile.core.MResize"
    },
    "__lastWidth": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1488
        },
        "end": {
          "line": 52,
          "column": 21,
          "index": 1505
        }
      },
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ],
      "mixin": "qx.ui.mobile.core.MResize"
    },
    "releaseFixedSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes fixed size from container.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes fixed size from container.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1570
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1871
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ],
      "mixin": "qx.ui.mobile.core.MResize"
    },
    "fixSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Resizes the container element to the height of the parent element.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resizes the container element to the height of the parent element.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1968
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2719
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ],
      "mixin": "qx.ui.mobile.core.MResize"
    },
    "_setHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the height of the container element.",
          "     *",
          "     * @param height {Integer} The height to set",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the height of the container element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "height {Integer} The height to set",
            "paramName": "height",
            "description": " The height to set",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2847
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 3146
        }
      },
      "type": "function",
      "params": [
        {
          "name": "height",
          "type": "Integer"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ],
      "mixin": "qx.ui.mobile.core.MResize"
    },
    "_setWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the width of the container element.",
          "     *",
          "     * @param width {Integer} The width to set",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the width of the container element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} The width to set",
            "paramName": "width",
            "description": " The width to set",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3271
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 3564
        }
      },
      "type": "function",
      "params": [
        {
          "name": "width",
          "type": "Integer"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.core.MResize"
      ],
      "mixin": "qx.ui.mobile.core.MResize"
    }
  }
}