{
  "version": 0.3,
  "lastModified": 1722153601483,
  "lastModifiedIso": "2024-07-28T08:00:01.483Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/SelectBox.js",
  "type": "class",
  "location": {
    "start": {
      "line": 55,
      "column": 0,
      "index": 1448
    },
    "end": {
      "line": 362,
      "column": 3,
      "index": 9380
    }
  },
  "className": "qx.ui.mobile.form.SelectBox",
  "jsdoc": {
    "raw": [
      "*",
      " * The SelectBox",
      " *",
      " * an example, how to use the SelectBox:",
      " * *Example*",
      " *",
      " * <pre class='javascript'>",
      " *    var page1 = new qx.ui.mobile.page.Page();",
      " *    page1.addListener(\"initialize\", function()",
      " *    {",
      " *      var sel = new qx.ui.mobile.form.SelectBox();",
      " *      page1.add(sel);",
      " *      var model = new qx.data.Array([\"item1\",\"item2\"]);",
      " *      sel.setModel(model);",
      " *      model.push(\"item3\");",
      " *",
      " *      var but = new qx.ui.mobile.form.Button(\"setSelection\");",
      " *      page1.add(but);",
      " *      but.addListener(\"tap\", function(){",
      " *        sel.setSelection(\"item3\");",
      " *      }, this);",
      " *",
      " *      sel.addListener(\"changeSelection\", function(evt) {",
      " *        console.log(evt.getData());",
      " *      }, this);",
      " *",
      " *      var title = new qx.ui.mobile.form.Title(\"item2\");",
      " *      title.bind(\"value\",sel,\"value\");",
      " *      sel.bind(\"value\",title,\"value\");",
      " *      page1.add(title);",
      " *   },this);",
      " *",
      " *   page1.show();",
      " *  </pre>",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The SelectBox\n an example, how to use the SelectBox:\n<em>Example</em>\n </p>\n<pre class='javascript'>\n    var page1 = new qx.ui.mobile.page.Page();\n    page1.addListener(\"initialize\", function()\n    {\n      var sel = new qx.ui.mobile.form.SelectBox();\n      page1.add(sel);\n      var model = new qx.data.Array([\"item1\",\"item2\"]);\n      sel.setModel(model);\n      model.push(\"item3\");\n      var but = new qx.ui.mobile.form.Button(\"setSelection\");\n      page1.add(but);\n      but.addListener(\"tap\", function(){\n        sel.setSelection(\"item3\");\n      }, this);\n      sel.addListener(\"changeSelection\", function(evt) {\n        console.log(evt.getData());\n      }, this);\n      var title = new qx.ui.mobile.form.Title(\"item2\");\n      title.bind(\"value\",sel,\"value\");\n      sel.bind(\"value\",title,\"value\");\n      page1.add(title);\n   },this);\n   page1.show();\n  </pre>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.core.Widget",
  "mixins": [
    "qx.ui.mobile.form.MValue",
    "qx.ui.form.MForm",
    "qx.ui.mobile.form.MText",
    "qx.ui.mobile.form.MState"
  ],
  "interfaces": [
    "qx.ui.form.IForm",
    "qx.ui.form.IField",
    "qx.ui.form.IModel"
  ],
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 71,
        "column": 2,
        "index": 1923
      },
      "end": {
        "line": 93,
        "column": 3,
        "index": 2552
      }
    }
  },
  "events": {
    "changeSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when user selects an item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when user selects an item.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2809
        },
        "end": {
          "line": 104,
          "column": 41,
          "index": 2846
        }
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3078
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 3146
        }
      },
      "json": {
        "refine": true,
        "init": "selectbox"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "activatable": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3171
        },
        "end": {
          "line": 124,
          "column": 5,
          "index": 3228
        }
      },
      "json": {
        "refine": true,
        "init": true
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "nullable": {
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3330
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3419
        }
      },
      "json": {
        "init": true,
        "check": "Boolean",
        "apply": "_applyNullable"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Defines if the SelectBox has a clearButton, which resets the selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Defines if the SelectBox has a clearButton, which resets the selection.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "model": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3486
        },
        "end": {
          "line": 144,
          "column": 5,
          "index": 3625
        }
      },
      "json": {
        "check": "qx.data.Array",
        "apply": "_applyModel",
        "event": "changeModel",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The model to use to render the list.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The model to use to render the list.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "selection": {
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 3693
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 3820
        }
      },
      "json": {
        "validate": "_validateSelection",
        "apply": "_applySelection",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The selected index of this SelectBox.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The selected index of this SelectBox.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "liveUpdate": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2809
        },
        "end": {
          "line": 104,
          "column": 5,
          "index": 2870
        }
      },
      "json": {
        "check": "Boolean",
        "init": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the {@link #changeValue} event should be fired on every key",
          "     * input. If set to true, the changeValue event is equal to the",
          "     * {@link #input} event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the {@link #changeValue} event should be fired on every key\n input. If set to true, the changeValue event is equal to the\n {@link #input} event.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "valid": {
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 956
        },
        "end": {
          "line": 43,
          "column": 5,
          "index": 1067
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "apply": "_applyValid",
        "event": "changeValid"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Flag signaling if a widget is valid. If a widget is invalid, an invalid",
          "     * state will be set.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Flag signaling if a widget is valid. If a widget is invalid, an invalid\n state will be set.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.form.MForm"
      ],
      "mixin": "qx.ui.form.MForm"
    },
    "required": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1137
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1227
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "event": "changeRequired"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Flag signaling if a widget is required.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Flag signaling if a widget is required.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.form.MForm"
      ],
      "mixin": "qx.ui.form.MForm"
    },
    "invalidMessage": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1325
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1447
        }
      },
      "json": {
        "nullable": true,
        "check": "String",
        "event": "changeInvalidMessage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Message which will be shown in an tooltip if the widget is invalid.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Message which will be shown in an tooltip if the widget is invalid.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.form.MForm"
      ],
      "mixin": "qx.ui.form.MForm"
    },
    "requiredInvalidMessage": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1575
        },
        "end": {
          "line": 72,
          "column": 5,
          "index": 1695
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "event": "changeRequiredInvalidMessage"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Message which will be shown in an invalid tooltip if the {@link #required} is",
          "     * set to true.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Message which will be shown in an invalid tooltip if the {@link #required} is\n set to true.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.form.MForm"
      ],
      "mixin": "qx.ui.form.MForm"
    },
    "maxLength": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1310
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1431
        }
      },
      "json": {
        "check": "PositiveInteger",
        "nullable": true,
        "apply": "_applyMaxLength"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Maximal number of characters that can be entered in the input field.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maximal number of characters that can be entered in the input field.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.form.MText"
      ],
      "mixin": "qx.ui.mobile.form.MText"
    },
    "placeholder": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1629
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 1745
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "apply": "_applyPlaceholder"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * String value which will be shown as a hint if the field is all of:",
          "     * unset, unfocused and enabled. Set to <code>null</code> to not show a placeholder",
          "     * text.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>String value which will be shown as a hint if the field is all of:\n unset, unfocused and enabled. Set to <code>null</code> to not show a placeholder\n text.</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.form.MText"
      ],
      "mixin": "qx.ui.mobile.form.MText"
    },
    "readOnly": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1794
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 1906
        }
      },
      "json": {
        "check": "Boolean",
        "nullable": true,
        "apply": "_applyAttribute"
      },
      "jsdoc": {
        "raw": [
          "* Whether the field is read only "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the field is read only</p>"
          }
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.form.MText"
      ],
      "mixin": "qx.ui.mobile.form.MText"
    }
  },
  "members": {
    "__selectionDialog": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 158,
          "column": 4,
          "index": 3844
        },
        "end": {
          "line": 158,
          "column": 27,
          "index": 3867
        }
      },
      "appearsIn": []
    },
    "_getTagName": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 3892
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 3974
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "_createSelectionDialog": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates the menu dialog. Override this to customize the widget.",
          "     *",
          "     * @return {qx.ui.mobile.dialog.Menu} A dialog, containing a selection list.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the menu dialog. Override this to customize the widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.dialog.Menu} A dialog, containing a selection list.",
            "type": "qx.ui.mobile.dialog.Menu",
            "description": "A dialog, containing a selection list."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4156
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 4514
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.mobile.dialog.Menu"
      },
      "appearsIn": []
    },
    "getSelectionDialog": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the SelectionDialog.",
          "     * @return {qx.ui.mobile.dialog.Menu} the SelectionDialog.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the SelectionDialog.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.dialog.Menu} the SelectionDialog.",
            "type": "qx.ui.mobile.dialog.Menu",
            "description": "the SelectionDialog."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 4636
        },
        "end": {
          "line": 190,
          "column": 5,
          "index": 4701
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.ui.mobile.dialog.Menu"
      },
      "appearsIn": []
    },
    "setDialogTitle": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the dialog title on the selection dialog.",
          "     * @param title {String} the title to set on selection dialog.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the dialog title on the selection dialog.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "title {String} the title to set on selection dialog.",
            "paramName": "title",
            "description": " the title to set on selection dialog.",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 196,
          "column": 4,
          "index": 4845
        },
        "end": {
          "line": 198,
          "column": 5,
          "index": 4920
        }
      },
      "type": "function",
      "params": [
        {
          "name": "title",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "setClearButtonLabel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the ClearButton label of the selection dialog.",
          "     * @param value {String} the value to set on the ClearButton at selection dialog.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the ClearButton label of the selection dialog.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} the value to set on the ClearButton at selection dialog.",
            "paramName": "value",
            "description": " the value to set on the ClearButton at selection dialog.",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 5087
        },
        "end": {
          "line": 206,
          "column": 5,
          "index": 5178
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the selected text value of this SelectBox.",
          "     * @param value {String} the text value which should be selected.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the selected text value of this SelectBox.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} the text value which should be selected.",
            "paramName": "value",
            "description": " the text value which should be selected.",
            "type": "string"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 212,
          "column": 4,
          "index": 5326
        },
        "end": {
          "line": 228,
          "column": 5,
          "index": 5713
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the text value of this",
          "     * It is called by setValue method of qx.ui.mobile.form.MValue mixin.",
          "     * @return {Number} the new selected index of the SelectBox.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the text value of this\n It is called by setValue method of qx.ui.mobile.form.MValue mixin.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the new selected index of the SelectBox.",
            "type": "number",
            "description": "the new selected index of the SelectBox."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 235,
          "column": 4,
          "index": 5909
        },
        "end": {
          "line": 237,
          "column": 5,
          "index": 5970
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_render": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Renders this SelectBox. Override this if you would like to display the",
          "     * values of the SelectBox in a different way than the default.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Renders this SelectBox. Override this if you would like to display the\n values of the SelectBox in a different way than the default.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 243,
          "column": 4,
          "index": 6139
        },
        "end": {
          "line": 250,
          "column": 5,
          "index": 6382
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_applyModel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the model property to the new value",
          "     * @param value {qx.data.Array}, the new model",
          "     * @param old {qx.data.Array?}, the old model",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the model property to the new value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.data.Array}, the new model",
            "paramName": "value",
            "description": ", the new model",
            "type": "qx.data.Array"
          },
          {
            "name": "@param",
            "body": "old {qx.data.Array?}, the old model",
            "paramName": "old",
            "description": ", the old model",
            "optional": true,
            "type": "qx.data.Array"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 257,
          "column": 4,
          "index": 6554
        },
        "end": {
          "line": 264,
          "column": 5,
          "index": 6754
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "qx.data.Array"
        },
        {
          "name": "old",
          "type": "qx.data.Array",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "__showSelectionDialog": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Refreshs selection dialogs model, and shows it.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Refreshs selection dialogs model, and shows it.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 269,
          "column": 4,
          "index": 6832
        },
        "end": {
          "line": 276,
          "column": 5,
          "index": 7150
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_onChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Gets the selectedIndex out of change selection event and renders view.",
          "     * @param evt {qx.event.type.Data} data event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the selectedIndex out of change selection event and renders view.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} data event.",
            "paramName": "evt",
            "description": " data event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 282,
          "column": 4,
          "index": 7302
        },
        "end": {
          "line": 285,
          "column": 5,
          "index": 7401
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onTap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>tap</code> event on this widget.",
          "     * @param evt {qx.event.type.Tap} the handling tap event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>tap</code> event on this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Tap} the handling tap event.",
            "paramName": "evt",
            "description": " the handling tap event.",
            "type": "qx.event.type.Tap"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 291,
          "column": 4,
          "index": 7544
        },
        "end": {
          "line": 297,
          "column": 5,
          "index": 7751
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Tap"
        }
      ],
      "appearsIn": []
    },
    "_validateSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Validates the selection value.",
          "     * @param value {Integer} the selection value to validate.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Validates the selection value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Integer} the selection value to validate.",
            "paramName": "value",
            "description": " the selection value to validate.",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 303,
          "column": 4,
          "index": 7875
        },
        "end": {
          "line": 330,
          "column": 5,
          "index": 8665
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "_applySelection": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 333,
          "column": 4,
          "index": 8694
        },
        "end": {
          "line": 341,
          "column": 5,
          "index": 8914
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyNullable": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 344,
          "column": 4,
          "index": 8943
        },
        "end": {
          "line": 347,
          "column": 5,
          "index": 9063
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "__oldValue": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3078
        },
        "end": {
          "line": 114,
          "column": 20,
          "index": 3094
        }
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "__inputTimeoutHandle": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3100
        },
        "end": {
          "line": 115,
          "column": 30,
          "index": 3126
        }
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "__hasFocus": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3132
        },
        "end": {
          "line": 116,
          "column": 20,
          "index": 3148
        }
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_convertValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Converts the incoming value.",
          "     *",
          "     * @param value {var} The value to convert",
          "     * @return {var} The converted value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts the incoming value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The value to convert",
            "paramName": "value",
            "description": " The value to convert",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The converted value",
            "type": "var",
            "description": "The converted value"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3302
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3511
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "var"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onFocus": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>focus</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>focus</code> event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3579
        },
        "end": {
          "line": 139,
          "column": 5,
          "index": 3627
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onBlur": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>blur</code> event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>blur</code> event.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3694
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 3742
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "hasFocus": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns whether this widget has focus or not.",
          "     * @return {Boolean} <code>true</code> or <code>false</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether this widget has focus or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> or <code>false</code>",
            "type": "boolean",
            "description": "<code>true</code> or <code>false</code>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 3883
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 3931
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the value.",
          "     *",
          "     * @param value {var} The value to set",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The value to set",
            "paramName": "value",
            "description": " The value to set",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4027
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4312
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue",
        "qx.ui.form.IField"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the set value.",
          "     *",
          "     * @return {var} The set value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the set value.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The set value",
            "type": "var",
            "description": "The set value"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 178,
          "column": 4,
          "index": 4407
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 4539
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "var"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue",
        "qx.ui.form.IField"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "resetValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Resets the value.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets the value.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 4587
        },
        "end": {
          "line": 189,
          "column": 5,
          "index": 4634
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MValue",
        "qx.ui.form.IField"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onChangeContent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the {@link #changeValue} event occurs.",
          "     *",
          "     * @param evt {qx.event.type.Data} The event, containing the changed content.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the {@link #changeValue} event occurs.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} The event, containing the changed content.",
            "paramName": "evt",
            "description": " The event, containing the changed content.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 196,
          "column": 4,
          "index": 4819
        },
        "end": {
          "line": 198,
          "column": 5,
          "index": 4913
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_onInput": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler. Called when the {@link #input} event occurs.",
          "     *",
          "     * @param evt {qx.event.type.Data} The event, containing the changed content.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the {@link #input} event occurs.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} The event, containing the changed content.",
            "paramName": "evt",
            "description": " The event, containing the changed content.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5092
        },
        "end": {
          "line": 215,
          "column": 5,
          "index": 5383
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_getCaretPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the caret position of this widget.",
          "     * @return {Integer} the caret position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the caret position of this widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the caret position.",
            "type": "Integer",
            "description": "the caret position."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5501
        },
        "end": {
          "line": 228,
          "column": 5,
          "index": 5763
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_setCaretPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the caret position on this widget.",
          "     * @param position {Integer} the caret position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the caret position on this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} the caret position.",
            "paramName": "position",
            "description": " the caret position.",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 234,
          "column": 4,
          "index": 5886
        },
        "end": {
          "line": 243,
          "column": 5,
          "index": 6193
        }
      },
      "type": "function",
      "params": [
        {
          "name": "position",
          "type": "Integer"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "__fireChangeValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fires the {@link #changeValue} event.",
          "     *",
          "     * @param value {var} The current value to fire.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires the {@link #changeValue} event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The current value to fire.",
            "paramName": "value",
            "description": " The current value to fire.",
            "type": "var"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 250,
          "column": 4,
          "index": 6321
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 6482
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MValue"
      ],
      "mixin": "qx.ui.mobile.form.MValue"
    },
    "_applyValid": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 1739
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 1840
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": [
        "qx.ui.form.MForm"
      ],
      "mixin": "qx.ui.form.MForm"
    },
    "__onChangeLocale": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Locale change event handler",
          "     *",
          "     * @signature function(e)",
          "     * @param e {Event} the change event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Locale change event handler</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(e)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} the change event",
            "paramName": "e",
            "description": " the change event",
            "type": "Event"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 1976
        },
        "end": {
          "line": 102,
          "column": 6,
          "index": 2570
        }
      },
      "appearsIn": [
        "qx.ui.form.MForm"
      ],
      "mixin": "qx.ui.form.MForm"
    },
    "_applyMaxLength": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2136
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2217
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MText"
      ],
      "mixin": "qx.ui.mobile.form.MText"
    },
    "_applyPlaceholder": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2246
        },
        "end": {
          "line": 99,
          "column": 5,
          "index": 2562
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MText"
      ],
      "mixin": "qx.ui.mobile.form.MText"
    },
    "focus": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Points the focus of the form to this widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Points the focus of the form to this widget.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2637
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2872
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MText"
      ],
      "mixin": "qx.ui.mobile.form.MText"
    },
    "blur": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes the focus from this widget.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the focus from this widget.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 2938
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3085
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": [
        "qx.ui.mobile.form.MText"
      ],
      "mixin": "qx.ui.mobile.form.MText"
    },
    "__states": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The states of the element",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The states of the element</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 17,
          "column": 4,
          "index": 446
        },
        "end": {
          "line": 17,
          "column": 18,
          "index": 460
        }
      },
      "appearsIn": [
        "qx.ui.mobile.form.MState"
      ],
      "mixin": "qx.ui.mobile.form.MState"
    },
    "addState": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a state to the element",
          "     * @param state {String} the state to be added",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a state to the element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "state {String} the state to be added",
            "paramName": "state",
            "description": " the state to be added",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 24,
          "column": 4,
          "index": 576
        },
        "end": {
          "line": 30,
          "column": 5,
          "index": 737
        }
      },
      "type": "function",
      "params": [
        {
          "name": "state",
          "type": "string"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MState"
      ],
      "mixin": "qx.ui.mobile.form.MState"
    },
    "hasState": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether the element has the state passed as argument",
          "     * @param state {String} the state to be checked",
          "     * @return {Boolean} true if the element has the state, false if it doesn't.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether the element has the state passed as argument</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "state {String} the state to be checked",
            "paramName": "state",
            "description": " the state to be checked",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the element has the state, false if it doesn't.",
            "type": "boolean",
            "description": "true if the element has the state, false if it doesn't."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 968
        },
        "end": {
          "line": 40,
          "column": 5,
          "index": 1052
        }
      },
      "type": "function",
      "params": [
        {
          "name": "state",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": [
        "qx.ui.mobile.form.MState"
      ],
      "mixin": "qx.ui.mobile.form.MState"
    },
    "removeState": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Removes a state from the element",
          "     * @param state {String} the state to be removed",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes a state from the element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "state {String} the state to be removed",
            "paramName": "state",
            "description": " the state to be removed",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1175
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1316
        }
      },
      "type": "function",
      "params": [
        {
          "name": "state",
          "type": "string"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MState"
      ],
      "mixin": "qx.ui.mobile.form.MState"
    },
    "replaceState": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Replaces a state of the element with a new state.",
          "     * If the element doesn't have the state to be removed, then th new state will",
          "     * just be added.",
          "     * @param oldState {String} the state to be replaced",
          "     * @param newState {String} the state to get injected in the oldState's place",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replaces a state of the element with a new state.\n If the element doesn't have the state to be removed, then th new state will\n just be added.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "oldState {String} the state to be replaced",
            "paramName": "oldState",
            "description": " the state to be replaced",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "newState {String} the state to get injected in the oldState's place",
            "paramName": "newState",
            "description": " the state to get injected in the oldState's place",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1647
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 1935
        }
      },
      "type": "function",
      "params": [
        {
          "name": "oldState",
          "type": "string"
        },
        {
          "name": "newState",
          "type": "string"
        }
      ],
      "appearsIn": [
        "qx.ui.mobile.form.MState"
      ],
      "mixin": "qx.ui.mobile.form.MState"
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 350,
        "column": 2,
        "index": 9072
      },
      "end": {
        "line": 361,
        "column": 3,
        "index": 9376
      }
    }
  },
  "statics": {}
}