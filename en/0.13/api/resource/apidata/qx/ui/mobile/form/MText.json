{
  "className": "qx.ui.mobile.form.MText",
  "packageName": "qx.ui.mobile.form",
  "name": "MText",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 630
      },
      "end": {
        "line": 125,
        "column": 3,
        "index": 3217
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The mixin contains all functionality to provide common properties for\n text fields.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.event.handler.Input"
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 35,
        "column": 2,
        "index": 941
      },
      "end": {
        "line": 39,
        "column": 3,
        "index": 1046
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "value {var?null} The value of the widget.",
          "paramName": "value",
          "description": " The value of the widget.",
          "optional": true,
          "defaultValue": "null",
          "type": "var"
        }
      ]
    }
  },
  "properties": {
    "maxLength": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1360
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1486
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maximal number of characters that can be entered in the input field.</p>"
          }
        ]
      },
      "name": "maxLength",
      "propertyType": "new",
      "apply": "_applyMaxLength",
      "nullable": true,
      "allowNull": true,
      "check": "PositiveInteger"
    },
    "placeholder": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1691
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 1812
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>String value which will be shown as a hint if the field is all of:\n unset, unfocused and enabled. Set to <code>null</code> to not show a placeholder\n text.</p>"
          }
        ]
      },
      "name": "placeholder",
      "propertyType": "new",
      "apply": "_applyPlaceholder",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "readOnly": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1864
        },
        "end": {
          "line": 76,
          "column": 5,
          "index": 1981
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the field is read only</p>"
          }
        ]
      },
      "name": "readOnly",
      "propertyType": "new",
      "apply": "_applyAttribute",
      "nullable": true,
      "allowNull": true,
      "check": "Boolean"
    }
  },
  "members": {
    "_applyMaxLength": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2222
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2305
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "maxLength"
      ]
    },
    "_applyPlaceholder": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2337
        },
        "end": {
          "line": 99,
          "column": 5,
          "index": 2660
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "placeholder"
      ]
    },
    "focus": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2740
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2984
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Points the focus of the form to this widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "blur": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3055
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3207
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the focus from this widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMaxLength": {
      "type": "function",
      "name": "getMaxLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxLength</code>.\n\nFor further details take a look at the property definition: {@link #maxLength}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "PositiveInteger",
            "desc": "Returns the value for maxLength"
          }
        ]
      }
    },
    "setMaxLength": {
      "type": "function",
      "name": "setMaxLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxLength</code>.\n\nFor further details take a look at the property definition: {@link #maxLength}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "PositiveInteger",
            "paramName": "value",
            "desc": "Value for maxLength"
          }
        ]
      }
    },
    "resetMaxLength": {
      "type": "function",
      "name": "resetMaxLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxLength</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxLength}."
          }
        ]
      }
    },
    "getPlaceholder": {
      "type": "function",
      "name": "getPlaceholder",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>placeholder</code>.\n\nFor further details take a look at the property definition: {@link #placeholder}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for placeholder"
          }
        ]
      }
    },
    "setPlaceholder": {
      "type": "function",
      "name": "setPlaceholder",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>placeholder</code>.\n\nFor further details take a look at the property definition: {@link #placeholder}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for placeholder"
          }
        ]
      }
    },
    "resetPlaceholder": {
      "type": "function",
      "name": "resetPlaceholder",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>placeholder</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #placeholder}."
          }
        ]
      }
    },
    "getReadOnly": {
      "type": "function",
      "name": "getReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "isReadOnly": {
      "type": "function",
      "name": "isReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "setReadOnly": {
      "type": "function",
      "name": "setReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for readOnly"
          }
        ]
      }
    },
    "resetReadOnly": {
      "type": "function",
      "name": "resetReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>readOnly</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ]
      }
    }
  },
  "descendants": []
}