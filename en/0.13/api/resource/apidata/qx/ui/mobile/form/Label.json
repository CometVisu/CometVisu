{
  "version": 0.3,
  "lastModified": 1731947916319,
  "lastModifiedIso": "2024-11-18T16:38:36.319Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/Label.js",
  "type": "class",
  "location": {
    "start": {
      "line": 45,
      "column": 0,
      "index": 1197
    },
    "end": {
      "line": 253,
      "column": 3,
      "index": 5941
    }
  },
  "className": "qx.ui.mobile.form.Label",
  "jsdoc": {
    "raw": [
      "*",
      " * The label widget displays a text or HTML content in form context.",
      " *",
      " * It uses the html tag <label>, for making it possible to set the",
      " * \"for\" attribute.",
      " *",
      " * The \"for\" attribute specifies which form element a label is bound to.",
      " * A tap on the label is forwarded to the bound element.",
      " *",
      " * *Example*",
      " *",
      " * Here is a little example of how to use the widget.",
      " *",
      " * <pre class='javascript'>",
      " *   var checkBox = new qx.ui.mobile.form.CheckBox();",
      " *   var label = new qx.ui.mobile.form.Label(\"Label for CheckBox\");",
      " *",
      " *   label.setLabelFor(checkBox.getId());",
      " *",
      " *   this.getRoot().add(label);",
      " *   this.getRoot().add(checkBox);",
      " * </pre>",
      " *",
      " * This example create a widget to display the label.",
      " *",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The label widget displays a text or HTML content in form context.\n It uses the html tag <label>, for making it possible to set the\n \"for\" attribute.\n The \"for\" attribute specifies which form element a label is bound to.\n A tap on the label is forwarded to the bound element.\n<em>Example</em>\n Here is a little example of how to use the widget.\n </p>\n<pre class='javascript'>\n   var checkBox = new qx.ui.mobile.form.CheckBox();\n   var label = new qx.ui.mobile.form.Label(\"Label for CheckBox\");\n   label.setLabelFor(checkBox.getId());\n   this.getRoot().add(label);\n   this.getRoot().add(checkBox);\n </pre>\n<p>This example create a widget to display the label.</p>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.core.Widget",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "value"
      }
    ],
    "location": {
      "start": {
        "line": 57,
        "column": 2,
        "index": 1545
      },
      "end": {
        "line": 82,
        "column": 3,
        "index": 2046
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2274
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2338
        }
      },
      "json": {
        "refine": true,
        "init": "label"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "value": {
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2400
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2509
        }
      },
      "json": {
        "nullable": true,
        "apply": "_applyValue",
        "event": "changeValue"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Text or HTML content to display",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Text or HTML content to display</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "anonymous": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2534
        },
        "end": {
          "line": 111,
          "column": 5,
          "index": 2590
        }
      },
      "json": {
        "refine": true,
        "init": false
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "wrap": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 2668
        },
        "end": {
          "line": 120,
          "column": 5,
          "index": 2749
        }
      },
      "json": {
        "check": "Boolean",
        "init": true,
        "apply": "_applyWrap"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Controls whether text wrap is activated or not.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Controls whether text wrap is activated or not.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__forWidget": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 2957
        },
        "end": {
          "line": 130,
          "column": 21,
          "index": 2974
        }
      },
      "appearsIn": []
    },
    "_getTagName": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 2999
        },
        "end": {
          "line": 135,
          "column": 5,
          "index": 3042
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "_applyValue": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3071
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 3359
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyWrap": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 3388
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 3537
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_changeEnabled": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the <code>changeEnabled</code> event on the target.",
          "     * @param evt {qx.event.type.Data} the changeEnabled event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the <code>changeEnabled</code> event on the target.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} the changeEnabled event.",
            "paramName": "evt",
            "description": " the changeEnabled event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 3701
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 3793
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "setLabelFor": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Setter for the \"for\" attribute of this label.",
          "     * The \"for\" attribute specifies which form element a label is bound to.",
          "     *",
          "     * @param elementId {String} The id of the element the label is bound to.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setter for the \"for\" attribute of this label.\n The \"for\" attribute specifies which form element a label is bound to.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "elementId {String} The id of the element the label is bound to.",
            "paramName": "elementId",
            "description": " The id of the element the label is bound to.",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 4038
        },
        "end": {
          "line": 196,
          "column": 5,
          "index": 4571
        }
      },
      "type": "function",
      "params": [
        {
          "name": "elementId",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_onTap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler for <code>tap</code> event on the Label. This event will be delegated to target widget.",
          "     * @param evt {qx.event.type.Pointer} The tap event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>tap</code> event on the Label. This event will be delegated to target widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Pointer} The tap event.",
            "paramName": "evt",
            "description": " The tap event.",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 4754
        },
        "end": {
          "line": 213,
          "column": 5,
          "index": 5105
        }
      },
      "type": "function",
      "params": [
        {
          "name": "evt",
          "type": "qx.event.type.Pointer"
        }
      ],
      "appearsIn": []
    },
    "_onChangeLocale": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Locale change event handler",
          "     *",
          "     * @signature function(e)",
          "     * @param e {Event} the change event",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Locale change event handler</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(e)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} the change event",
            "paramName": "e",
            "description": " the change event",
            "type": "Event"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5241
        },
        "end": {
          "line": 230,
          "column": 6,
          "index": 5492
        }
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 233,
        "column": 2,
        "index": 5501
      },
      "end": {
        "line": 252,
        "column": 3,
        "index": 5937
      }
    }
  },
  "statics": {}
}