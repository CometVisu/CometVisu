{
  "version": 0.3,
  "lastModified": 1735383688305,
  "lastModifiedIso": "2024-12-28T11:01:28.305Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/container/Scroll.js",
  "type": "class",
  "location": {
    "start": {
      "line": 42,
      "column": 0,
      "index": 1168
    },
    "end": {
      "line": 537,
      "column": 3,
      "index": 14987
    }
  },
  "className": "qx.ui.mobile.container.Scroll",
  "jsdoc": {
    "raw": [
      "*",
      " * Container, which allows, depending on the set variant <code>qx.mobile.nativescroll</code>,",
      " * vertical and horizontal scrolling if the contents is larger than the container.",
      " *",
      " * Note that this class can only have one child widget. This container has a",
      " * fixed layout, which cannot be changed.",
      " *",
      " * *Example*",
      " *",
      " * Here is a little example of how to use the widget.",
      " *",
      " * <pre class='javascript'>",
      " *   // create the scroll widget",
      " *   var scroll = new qx.ui.mobile.container.Scroll();",
      " *",
      " *   // add a children",
      " *   scroll.add(new qx.ui.mobile.basic.Label(\"Name: \"));",
      " *",
      " *   this.getRoot().add(scroll);",
      " * </pre>",
      " *",
      " * This example creates a scroll container and adds a label to it.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Container, which allows, depending on the set variant <code>qx.mobile.nativescroll</code>,\n vertical and horizontal scrolling if the contents is larger than the container.\n Note that this class can only have one child widget. This container has a\n fixed layout, which cannot be changed.\n<em>Example</em>\n Here is a little example of how to use the widget.\n </p>\n<pre class='javascript'>\n\n   var scroll = new qx.ui.mobile.container.Scroll();\n\n   scroll.add(new qx.ui.mobile.basic.Label(\"Name: \"));\n   this.getRoot().add(scroll);\n </pre>\n<p>This example creates a scroll container and adds a label to it.</p>"
      }
    ]
  },
  "superClass": "qx.ui.mobile.container.Composite",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "scrollProperties"
      }
    ],
    "location": {
      "start": {
        "line": 48,
        "column": 2,
        "index": 1423
      },
      "end": {
        "line": 62,
        "column": 3,
        "index": 1719
      }
    }
  },
  "events": {
    "scrollEnd": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the scroll container reaches its end position (including momentum/inertia). "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the scroll container reaches its end position (including momentum/inertia).</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1836
        },
        "end": {
          "line": 66,
          "column": 36,
          "index": 1868
        }
      }
    },
    "pageEnd": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Fired when the user scrolls to the end of scroll area. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the user scrolls to the end of scroll area.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 1941
        },
        "end": {
          "line": 69,
          "column": 34,
          "index": 1971
        }
      }
    },
    "waypoint": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "* Fired when a vertical or horizontal waypoint is triggered. Data:",
          "     * <code> {\"offset\": 0,",
          "     *        \"input\": \"10%\",",
          "     *        \"index\": 0,",
          "     *        \"element\" : 0}</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a vertical or horizontal waypoint is triggered. Data:\n <code> {\"offset\": 0,\n        \"input\": \"10%\",\n        \"index\": 0,\n        \"element\" : 0}</code></p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2179
        },
        "end": {
          "line": 77,
          "column": 34,
          "index": 2209
        }
      }
    },
    "momentumStart": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when a momentum starts on an iOS device.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a momentum starts on an iOS device.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2286
        },
        "end": {
          "line": 82,
          "column": 40,
          "index": 2322
        }
      }
    },
    "momentumEnd": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Fired when a momentum ends on an iOS device.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a momentum ends on an iOS device.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2397
        },
        "end": {
          "line": 87,
          "column": 37,
          "index": 2430
        }
      }
    }
  },
  "properties": {
    "defaultCssClass": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2661
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2726
        }
      },
      "json": {
        "refine": true,
        "init": "scroll"
      },
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "delegate": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2915
        },
        "end": {
          "line": 111,
          "column": 5,
          "index": 2971
        }
      },
      "json": {
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Delegation object which can have one or more functions defined by the",
          "     * {@link qx.ui.mobile.container.IScrollDelegate} interface.",
          "     *",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delegation object which can have one or more functions defined by the\n {@link qx.ui.mobile.container.IScrollDelegate} interface.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "_scrollProperties": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3179
        },
        "end": {
          "line": 121,
          "column": 27,
          "index": 3202
        }
      },
      "appearsIn": []
    },
    "_activeWaypointX": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3208
        },
        "end": {
          "line": 122,
          "column": 26,
          "index": 3230
        }
      },
      "appearsIn": []
    },
    "_activeWaypointY": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3236
        },
        "end": {
          "line": 123,
          "column": 26,
          "index": 3258
        }
      },
      "appearsIn": []
    },
    "_waypointsX": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3264
        },
        "end": {
          "line": 124,
          "column": 21,
          "index": 3281
        }
      },
      "appearsIn": []
    },
    "_waypointsY": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 125,
          "column": 4,
          "index": 3287
        },
        "end": {
          "line": 125,
          "column": 21,
          "index": 3304
        }
      },
      "appearsIn": []
    },
    "_calculatedWaypointsX": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3310
        },
        "end": {
          "line": 126,
          "column": 31,
          "index": 3337
        }
      },
      "appearsIn": []
    },
    "_calculatedWaypointsY": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3343
        },
        "end": {
          "line": 127,
          "column": 31,
          "index": 3370
        }
      },
      "appearsIn": []
    },
    "_currentX": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3376
        },
        "end": {
          "line": 128,
          "column": 19,
          "index": 3391
        }
      },
      "appearsIn": []
    },
    "_currentY": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3397
        },
        "end": {
          "line": 129,
          "column": 19,
          "index": 3412
        }
      },
      "appearsIn": []
    },
    "_setCurrentX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the current x position.",
          "     * @param value {Number} the current horizontal position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the current x position.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} the current horizontal position.",
            "paramName": "value",
            "description": " the current horizontal position.",
            "type": "number"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 3533
        },
        "end": {
          "line": 139,
          "column": 5,
          "index": 3665
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ],
      "appearsIn": []
    },
    "_setCurrentY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the current y position.",
          "     * @param value {Number} the current vertical position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the current y position.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} the current vertical position.",
            "paramName": "value",
            "description": " the current vertical position.",
            "type": "number"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 145,
          "column": 4,
          "index": 3784
        },
        "end": {
          "line": 149,
          "column": 5,
          "index": 3916
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ],
      "appearsIn": []
    },
    "setWaypointsX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the horizontal trigger points, where a <code>waypoint</code> event will be fired.",
          "     * @param waypoints {Array} description",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the horizontal trigger points, where a <code>waypoint</code> event will be fired.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "waypoints {Array} description",
            "paramName": "waypoints",
            "description": " description",
            "type": "Array<any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 155,
          "column": 4,
          "index": 4077
        },
        "end": {
          "line": 157,
          "column": 5,
          "index": 4145
        }
      },
      "type": "function",
      "params": [
        {
          "name": "waypoints",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "setWaypointsY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the vertical trigger points, where a <code>waypoint</code> event will be fired.",
          "     * @param waypoints {Array} an array with waypoint descriptions. Allowed are percentage description as string, or pixel trigger points defined as numbers. <code>[\"20%\",200]</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the vertical trigger points, where a <code>waypoint</code> event will be fired.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "waypoints {Array} an array with waypoint descriptions. Allowed are percentage description as string, or pixel trigger points defined as numbers. <code>[\"20%\",200]</code>",
            "paramName": "waypoints",
            "description": " an array with waypoint descriptions. Allowed are percentage description as string, or pixel trigger points defined as numbers. <code>[\"20%\",200]</code>",
            "type": "Array<any>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4444
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 4512
        }
      },
      "type": "function",
      "params": [
        {
          "name": "waypoints",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "getScrollHeight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the scroll height.",
          "     * @return {Number} the scroll height.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the scroll height.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the scroll height.",
            "type": "number",
            "description": "the scroll height."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 171,
          "column": 4,
          "index": 4612
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 4675
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "getScrollWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the scroll width.",
          "     * @return {Number} the scroll width.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the scroll width.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the scroll width.",
            "type": "number",
            "description": "the scroll width."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 179,
          "column": 4,
          "index": 4773
        },
        "end": {
          "line": 181,
          "column": 5,
          "index": 4834
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "_updateWaypoints": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Re-calculates the internal waypoint offsets.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Re-calculates the internal waypoint offsets.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 186,
          "column": 4,
          "index": 4909
        },
        "end": {
          "line": 201,
          "column": 5,
          "index": 5284
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_calcWaypoints": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Validates and checks the waypoint offsets.",
          "     * @param waypoints {Array} an array with waypoint descriptions.",
          "     * @param results {Array} the array where calculated waypoints will be added.",
          "     * @param scrollSize {Number} the vertical or horizontal scroll size.",
          "     * @param axis {String?} \"x\" or \"y\".",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Validates and checks the waypoint offsets.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "waypoints {Array} an array with waypoint descriptions.",
            "paramName": "waypoints",
            "description": " an array with waypoint descriptions.",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "results {Array} the array where calculated waypoints will be added.",
            "paramName": "results",
            "description": " the array where calculated waypoints will be added.",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "scrollSize {Number} the vertical or horizontal scroll size.",
            "paramName": "scrollSize",
            "description": " the vertical or horizontal scroll size.",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "axis {String?} \"x\" or \"y\".",
            "paramName": "axis",
            "description": " \"x\" or \"y\".",
            "optional": true,
            "type": "String"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 210,
          "column": 4,
          "index": 5623
        },
        "end": {
          "line": 264,
          "column": 5,
          "index": 7394
        }
      },
      "type": "function",
      "params": [
        {
          "name": "waypoints",
          "type": "Array<any>"
        },
        {
          "name": "results",
          "type": "Array<any>"
        },
        {
          "name": "scrollSize",
          "type": "number"
        },
        {
          "name": "axis",
          "type": "String",
          "optional": true
        }
      ],
      "appearsIn": []
    },
    "_fireWaypoint": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fires a waypoints event when scroll position changes.",
          "     * @param value {Number} old scroll position.",
          "     * @param old {Number} old scroll position.",
          "     * @param axis {String} \"x\" or \"y\".",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires a waypoints event when scroll position changes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} old scroll position.",
            "paramName": "value",
            "description": " old scroll position.",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "old {Number} old scroll position.",
            "paramName": "old",
            "description": " old scroll position.",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "axis {String} \"x\" or \"y\".",
            "paramName": "axis",
            "description": " \"x\" or \"y\".",
            "type": "string"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 272,
          "column": 4,
          "index": 7616
        },
        "end": {
          "line": 341,
          "column": 5,
          "index": 9399
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "old",
          "type": "number"
        },
        {
          "name": "axis",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_createContainerElement": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 344,
          "column": 4,
          "index": 9424
        },
        "end": {
          "line": 352,
          "column": 5,
          "index": 9653
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "_getContentElement": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 355,
          "column": 4,
          "index": 9678
        },
        "end": {
          "line": 361,
          "column": 5,
          "index": 9882
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.mobile.core.Widget",
      "appearsIn": [
        "qx.ui.mobile.core.Widget"
      ]
    },
    "refresh": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Calls the refresh function the used scrolling method. Needed to recalculate the",
          "     * scrolling container.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calls the refresh function the used scrolling method. Needed to recalculate the\n scrolling container.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 367,
          "column": 4,
          "index": 10020
        },
        "end": {
          "line": 370,
          "column": 5,
          "index": 10091
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "scrollTo": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the wrapper contents to the x/y coordinates in a given time.",
          "     *",
          "     * @param x {Integer} X coordinate to scroll to.",
          "     * @param y {Integer} Y coordinate to scroll to.",
          "     * @param time {Integer} Time slice in which scrolling should",
          "     *              be done.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the wrapper contents to the x/y coordinates in a given time.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Integer} X coordinate to scroll to.",
            "paramName": "x",
            "description": " X coordinate to scroll to.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "y {Integer} Y coordinate to scroll to.",
            "paramName": "y",
            "description": " Y coordinate to scroll to.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "time {Integer} Time slice in which scrolling should\n              be done.",
            "paramName": "time",
            "description": " Time slice in which scrolling should\n              be done.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 380,
          "column": 4,
          "index": 10398
        },
        "end": {
          "line": 382,
          "column": 5,
          "index": 10460
        }
      },
      "type": "function",
      "params": [
        {
          "name": "x",
          "type": "Integer"
        },
        {
          "name": "y",
          "type": "Integer"
        },
        {
          "name": "time",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "getPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the current scroll position",
          "     * @return {Array} an array with <code>[scrollLeft,scrollTop]</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current scroll position</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with <code>[scrollLeft,scrollTop]</code>.",
            "type": "Array<any>",
            "description": "an array with <code>[scrollLeft,scrollTop]</code>."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 388,
          "column": 4,
          "index": 10600
        },
        "end": {
          "line": 390,
          "column": 5,
          "index": 10655
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Array<any>"
      },
      "appearsIn": []
    },
    "isScrollable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detects whether this scroll container is scrollable or not.",
          "     * @return {Boolean} <code>true</code> or <code>false</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether this scroll container is scrollable or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> or <code>false</code>",
            "type": "boolean",
            "description": "<code>true</code> or <code>false</code>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 396,
          "column": 4,
          "index": 10810
        },
        "end": {
          "line": 398,
          "column": 5,
          "index": 10867
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_isScrollable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detects whether this scroll container is scrollable or not.",
          "     * @return {Boolean} <code>true</code> or <code>false</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether this scroll container is scrollable or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> or <code>false</code>",
            "type": "boolean",
            "description": "<code>true</code> or <code>false</code>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 404,
          "column": 4,
          "index": 11022
        },
        "end": {
          "line": 406,
          "column": 5,
          "index": 11106
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_isScrollableX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detects whether this scroll container is scrollable on x axis or not.",
          "     * @return {Boolean} <code>true</code> or <code>false</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether this scroll container is scrollable on x axis or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> or <code>false</code>",
            "type": "boolean",
            "description": "<code>true</code> or <code>false</code>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 412,
          "column": 4,
          "index": 11271
        },
        "end": {
          "line": 426,
          "column": 5,
          "index": 11729
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_isScrollableY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detects whether this scroll container is scrollable on y axis or not.",
          "     * @return {Boolean} <code>true</code> or <code>false</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether this scroll container is scrollable on y axis or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> or <code>false</code>",
            "type": "boolean",
            "description": "<code>true</code> or <code>false</code>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 432,
          "column": 4,
          "index": 11894
        },
        "end": {
          "line": 447,
          "column": 5,
          "index": 12370
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "scrollToElement": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the wrapper contents to the widgets coordinates in a given",
          "     * period.",
          "     *",
          "     * @param target {Element} the element to which the scroll container should scroll to.",
          "     * @param time {Integer?0} Time slice in which scrolling should",
          "     *              be done (in seconds).",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the wrapper contents to the widgets coordinates in a given\n period.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {Element} the element to which the scroll container should scroll to.",
            "paramName": "target",
            "description": " the element to which the scroll container should scroll to.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "time {Integer?0} Time slice in which scrolling should\n              be done (in seconds).",
            "paramName": "time",
            "description": " Time slice in which scrolling should\n              be done (in seconds).",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 458,
          "column": 4,
          "index": 12697
        },
        "end": {
          "line": 460,
          "column": 5,
          "index": 12777
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target",
          "type": "Element"
        },
        {
          "name": "time",
          "type": "Integer",
          "optional": true,
          "defaultValue": "0"
        }
      ],
      "appearsIn": []
    },
    "_scrollToElement": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the wrapper contents to the widgets coordinates in a given",
          "     * period.",
          "     *",
          "     * @param element {String} the element to which the scroll container should scroll to.",
          "     * @param time {Integer?0} Time slice in which scrolling should be done (in seconds).",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the wrapper contents to the widgets coordinates in a given\n period.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {String} the element to which the scroll container should scroll to.",
            "paramName": "element",
            "description": " the element to which the scroll container should scroll to.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "time {Integer?0} Time slice in which scrolling should be done (in seconds).",
            "paramName": "time",
            "description": " Time slice in which scrolling should be done (in seconds).",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 470,
          "column": 4,
          "index": 13084
        },
        "end": {
          "line": 491,
          "column": 5,
          "index": 13607
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "string"
        },
        {
          "name": "time",
          "type": "Integer",
          "optional": true,
          "defaultValue": "0"
        }
      ],
      "appearsIn": []
    },
    "_getScrollOffset": {
      "jsdoc": {
        "raw": [
          "*",
          "     *",
          "     * Determines the scroll offset for the <code>_scrollToElement</code> method.",
          "     * If a delegate is available, the method calls",
          "     * <code>qx.ui.mobile.container.IScrollDelegate.getScrollOffset()</code> for offset calculation.",
          "     *",
          "     * @return {Array} an array with x,y offset.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Determines the scroll offset for the <code>_scrollToElement</code> method.\n If a delegate is available, the method calls\n <code>qx.ui.mobile.container.IScrollDelegate.getScrollOffset()</code> for offset calculation.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with x,y offset.",
            "type": "Array<any>",
            "description": "an array with x,y offset."
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 501,
          "column": 4,
          "index": 13928
        },
        "end": {
          "line": 508,
          "column": 5,
          "index": 14153
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Array<any>"
      },
      "appearsIn": []
    },
    "scrollToWidget": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Scrolls the wrapper contents to the widgets coordinates in a given",
          "     * period.",
          "     *",
          "     * @param widget {qx.ui.mobile.core.Widget} the widget, the scroll container should scroll to.",
          "     * @param time {Integer} Time slice in which scrolling should",
          "     *              be done.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls the wrapper contents to the widgets coordinates in a given\n period.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} the widget, the scroll container should scroll to.",
            "paramName": "widget",
            "description": " the widget, the scroll container should scroll to.",
            "type": "qx.ui.mobile.core.Widget"
          },
          {
            "name": "@param",
            "body": "time {Integer} Time slice in which scrolling should\n              be done.",
            "paramName": "time",
            "description": " Time slice in which scrolling should\n              be done.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 518,
          "column": 4,
          "index": 14466
        },
        "end": {
          "line": 522,
          "column": 5,
          "index": 14595
        }
      },
      "type": "function",
      "params": [
        {
          "name": "widget",
          "type": "qx.ui.mobile.core.Widget"
        },
        {
          "name": "time",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 533,
        "column": 2,
        "index": 14855
      },
      "end": {
        "line": 536,
        "column": 3,
        "index": 14983
      }
    }
  },
  "statics": {}
}