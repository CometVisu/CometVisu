{
  "version": 0.3,
  "lastModified": 1726088850073,
  "lastModifiedIso": "2024-09-11T21:07:30.073Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/core/Axis.js",
  "type": "class",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 657
    },
    "end": {
      "line": 399,
      "column": 3,
      "index": 10858
    }
  },
  "className": "qx.ui.virtual.core.Axis",
  "jsdoc": {
    "raw": [
      "*",
      " * The axis maps virtual screen coordinates to item indexes. By default all",
      " * items have the same size but it is also possible to give specific items",
      " * a different size.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>The axis maps virtual screen coordinates to item indexes. By default all\n items have the same size but it is also possible to give specific items\n a different size.</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "defaultItemSize"
      },
      {
        "name": "itemCount"
      }
    ],
    "location": {
      "start": {
        "line": 31,
        "column": 2,
        "index": 876
      },
      "end": {
        "line": 39,
        "column": 3,
        "index": 1057
      }
    }
  },
  "events": {
    "change": {
      "type": "qx.event.type.Event",
      "jsdoc": {
        "raw": [
          "* Every change to the axis configuration triggers this event. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Every change to the axis configuration triggers this event.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1147
        },
        "end": {
          "line": 43,
          "column": 33,
          "index": 1176
        }
      }
    }
  },
  "members": {
    "__ranges": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1200
        },
        "end": {
          "line": 47,
          "column": 18,
          "index": 1214
        }
      },
      "appearsIn": []
    },
    "getDefaultItemSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the default size of the items.",
          "     *",
          "     * @return {Integer} The default item size.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the default size of the items.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The default item size.",
            "type": "Integer",
            "description": "The default item size."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 1334
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1397
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "setDefaultItemSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the default size the items.",
          "     *",
          "     * @param defaultItemSize {Integer} The default size of the items.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the default size the items.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "defaultItemSize {Integer} The default size of the items.",
            "paramName": "defaultItemSize",
            "description": " The default size of the items.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1537
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 1765
        }
      },
      "type": "function",
      "params": [
        {
          "name": "defaultItemSize",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "getItemCount": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the number of items in the axis.",
          "     *",
          "     * @return {Integer} The number of items.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the number of items in the axis.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The number of items.",
            "type": "Integer",
            "description": "The number of items."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 1885
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 1936
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "setItemCount": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Set the number of items in the axis.",
          "     *",
          "     * @param itemCount {Integer} The new item count.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the number of items in the axis.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "itemCount {Integer} The new item count.",
            "paramName": "itemCount",
            "description": " The new item count.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2064
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2256
        }
      },
      "type": "function",
      "params": [
        {
          "name": "itemCount",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "setItemSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the size of a specific item. This allow item, which have a size",
          "     * different from the default size.",
          "     *",
          "     * @param index {Integer} Index of the item to change.",
          "     * @param size {Integer} New size of the item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the size of a specific item. This allow item, which have a size\n different from the default size.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} Index of the item to change.",
            "paramName": "index",
            "description": " Index of the item to change.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "size {Integer} New size of the item.",
            "paramName": "size",
            "description": " New size of the item.",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2512
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3057
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        },
        {
          "name": "size",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "getItemSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the size of the item at the given index.",
          "     *",
          "     * @param index {Integer} Index of the item to get the size for.",
          "     * @return {Integer} Size of the item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the size of the item at the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} Index of the item to get the size for.",
            "paramName": "index",
            "description": " Index of the item to get the size for.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Size of the item.",
            "type": "Integer",
            "description": "Size of the item."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3251
        },
        "end": {
          "line": 130,
          "column": 5,
          "index": 3380
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "resetItemSizes": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Reset all custom sizes set with {@link #setItemSize}.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset all custom sizes set with {@link #setItemSize}.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 3464
        },
        "end": {
          "line": 139,
          "column": 5,
          "index": 3588
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__getRanges": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Split the position range into disjunct intervals. Each interval starts",
          "     * with a custom sized cell. Each position is contained in exactly one range.",
          "     * The ranges are sorted according to their start position.",
          "     *",
          "     * Complexity: O(n log n) (n = number of custom sized cells)",
          "     *",
          "     * @return {Map[]} The sorted list of ranges.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Split the position range into disjunct intervals. Each interval starts\n with a custom sized cell. Each position is contained in exactly one range.\n The ranges are sorted according to their start position.\n Complexity: O(n log n) (n = number of custom sized cells)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} The sorted list of ranges.",
            "type": "Map[]",
            "description": "The sorted list of ranges."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 150,
          "column": 4,
          "index": 3964
        },
        "end": {
          "line": 231,
          "column": 5,
          "index": 6020
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Map[]"
      },
      "appearsIn": []
    },
    "__findRangeByPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the range, which contains the position",
          "     *",
          "     * Complexity: O(log n) (n = number of custom sized cells)",
          "     *",
          "     * @param position {Integer} The position.",
          "     * @return {Map} The range, which contains the given position.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the range, which contains the position\n Complexity: O(log n) (n = number of custom sized cells)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} The position.",
            "paramName": "position",
            "description": " The position.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The range, which contains the given position.",
            "type": "Map<any, any>",
            "description": "The range, which contains the given position."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 241,
          "column": 4,
          "index": 6288
        },
        "end": {
          "line": 260,
          "column": 5,
          "index": 6803
        }
      },
      "type": "function",
      "params": [
        {
          "name": "position",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getItemAtPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the item and the offset into the item at the given position.",
          "     *",
          "     * @param position {Integer|null} The position to get the item for.",
          "     * @return {Map} A map with the keys <code>index</code> and",
          "     *    <code>offset</code>. The index is the index of the item containing the",
          "     *    position and offsets specifies offset into this item. If the position",
          "     *    is outside of the range, <code>null</code> is returned.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the item and the offset into the item at the given position.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer|null} The position to get the item for.",
            "paramName": "position",
            "description": " The position to get the item for.",
            "type": [
              "Integer",
              "null"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map with the keys <code>index</code> and\n    <code>offset</code>. The index is the index of the item containing the\n    position and offsets specifies offset into this item. If the position\n    is outside of the range, <code>null</code> is returned.",
            "type": "Map<any, any>",
            "description": "A map with the keys <code>index</code> and\n    <code>offset</code>. The index is the index of the item containing the\n    position and offsets specifies offset into this item. If the position\n    is outside of the range, <code>null</code> is returned."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 271,
          "column": 4,
          "index": 7268
        },
        "end": {
          "line": 297,
          "column": 5,
          "index": 8012
        }
      },
      "type": "function",
      "params": [
        {
          "name": "position",
          "type": [
            "Integer",
            "null"
          ]
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "__findRangeByIndex": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the range, which contains the position.",
          "     *",
          "     * Complexity: O(log n) (n = number of custom sized cells)",
          "     *",
          "     * @param index {Integer} The index of the item to get the range for.",
          "     * @return {Map} The range for the index.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the range, which contains the position.\n Complexity: O(log n) (n = number of custom sized cells)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The index of the item to get the range for.",
            "paramName": "index",
            "description": " The index of the item to get the range for.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The range for the index.",
            "type": "Map<any, any>",
            "description": "The range for the index."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 307,
          "column": 4,
          "index": 8287
        },
        "end": {
          "line": 326,
          "column": 5,
          "index": 8790
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getItemPosition": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the start position of the item with the given index.",
          "     *",
          "     * @param index {Integer} The item's index.",
          "     * @return {Integer|null} The start position of the item. If the index is outside",
          "     *    of the axis range <code>null</code> is returned.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the start position of the item with the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The item's index.",
            "paramName": "index",
            "description": " The item's index.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer|null} The start position of the item. If the index is outside\n    of the axis range <code>null</code> is returned.",
            "type": "Integer|null",
            "description": "The start position of the item. If the index is outside\n    of the axis range <code>null</code> is returned."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 335,
          "column": 4,
          "index": 9077
        },
        "end": {
          "line": 350,
          "column": 5,
          "index": 9485
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Integer|null"
      },
      "appearsIn": []
    },
    "getTotalSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the sum of all cell sizes.",
          "     *",
          "     * @return {Integer} The sum of all item sizes.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the sum of all cell sizes.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The sum of all item sizes.",
            "type": "Integer",
            "description": "The sum of all item sizes."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 357,
          "column": 4,
          "index": 9609
        },
        "end": {
          "line": 360,
          "column": 5,
          "index": 9740
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "Integer"
      },
      "appearsIn": []
    },
    "getItemSizes": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get an array of item sizes starting with the item at \"startIndex\". The",
          "     * sum of all sizes in the returned array is at least \"minSizeSum\".",
          "     *",
          "     * @param startIndex {Integer} The index of the first item.",
          "     * @param minSizeSum {Integer} The minimum sum of the item sizes.",
          "     * @return {Integer[]} List of item sizes starting with the size of the item",
          "     *    at index <code>startIndex</code>. The sum of the item sizes is at least",
          "     *    <code>minSizeSum</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get an array of item sizes starting with the item at \"startIndex\". The\n sum of all sizes in the returned array is at least \"minSizeSum\".</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startIndex {Integer} The index of the first item.",
            "paramName": "startIndex",
            "description": " The index of the first item.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "minSizeSum {Integer} The minimum sum of the item sizes.",
            "paramName": "minSizeSum",
            "description": " The minimum sum of the item sizes.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} List of item sizes starting with the size of the item\n    at index <code>startIndex</code>. The sum of the item sizes is at least\n    <code>minSizeSum</code>.",
            "type": "Integer[]",
            "description": "List of item sizes starting with the size of the item\n    at index <code>startIndex</code>. The sum of the item sizes is at least\n    <code>minSizeSum</code>."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 372,
          "column": 4,
          "index": 10252
        },
        "end": {
          "line": 393,
          "column": 5,
          "index": 10784
        }
      },
      "type": "function",
      "params": [
        {
          "name": "startIndex",
          "type": "Integer"
        },
        {
          "name": "minSizeSum",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "Integer[]"
      },
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 396,
        "column": 2,
        "index": 10793
      },
      "end": {
        "line": 398,
        "column": 3,
        "index": 10854
      }
    }
  },
  "statics": {},
  "properties": {}
}