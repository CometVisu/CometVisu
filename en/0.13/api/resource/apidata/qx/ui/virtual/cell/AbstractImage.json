{
  "version": 0.3,
  "lastModified": 1731947914183,
  "lastModifiedIso": "2024-11-18T16:38:34.183Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/AbstractImage.js",
  "type": "class",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 598
    },
    "end": {
      "line": 179,
      "column": 3,
      "index": 5017
    }
  },
  "className": "qx.ui.virtual.cell.AbstractImage",
  "jsdoc": {
    "raw": [
      "*",
      " * Abstract base class for image cell renderer.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Abstract base class for image cell renderer.</p>"
      }
    ]
  },
  "superClass": "qx.ui.virtual.cell.Cell",
  "isSingleton": false,
  "abstract": true,
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 898
      },
      "end": {
        "line": 37,
        "column": 3,
        "index": 989
      }
    }
  },
  "members": {
    "__defaultWidth": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1193
        },
        "end": {
          "line": 46,
          "column": 22,
          "index": 1211
        }
      },
      "appearsIn": []
    },
    "__defaultHeight": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1217
        },
        "end": {
          "line": 47,
          "column": 23,
          "index": 1236
        }
      },
      "appearsIn": []
    },
    "_aliasManager": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1242
        },
        "end": {
          "line": 48,
          "column": 23,
          "index": 1261
        }
      },
      "appearsIn": []
    },
    "__getImageSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Compute the size of the given image",
          "     *",
          "     * @param source {String} the image URL",
          "     * @return {Map} A map containing the image's <code>width</code> and",
          "     *    <code>height</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compute the size of the given image</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "source {String} the image URL",
            "paramName": "source",
            "description": " the image URL",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map containing the image's <code>width</code> and\n    <code>height</code>",
            "type": "Map<any, any>",
            "description": "A map containing the image's <code>width</code> and\n    <code>height</code>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1481
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 2145
        }
      },
      "type": "function",
      "params": [
        {
          "name": "source",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "__createImage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Compute image meta data",
          "     *",
          "     * @param imageData {Object|String} Either a string containing the image URL",
          "     *   or a map, which describes the image. Map keys:",
          "     *   <ul>",
          "     *     <li>url (required)</li>",
          "     *     <li>width</li>",
          "     *     <li>height</li>",
          "     *     <li>tooltip</li>",
          "     *   </ul>",
          "     * @return {Object} A map describing the image. Map keys:",
          "     *   <ul>",
          "     *     <li>url</li>",
          "     *     <li>width</li>",
          "     *     <li>height</li>",
          "     *     <li>tooltip (optional)</li>",
          "     *   </ul>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compute image meta data</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "imageData {Object|String} Either a string containing the image URL\n   or a map, which describes the image. Map keys:\n   <ul>\n     <li>url (required)</li>\n     <li>width</li>\n     <li>height</li>\n     <li>tooltip</li>\n   </ul>",
            "paramName": "imageData",
            "description": " Either a string containing the image URL\n   or a map, which describes the image. Map keys:\n   <ul>\n     <li>url (required)</li>\n     <li>width</li>\n     <li>height</li>\n     <li>tooltip</li>\n   </ul>",
            "type": [
              "Object",
              "String"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} A map describing the image. Map keys:\n   <ul>\n     <li>url</li>\n     <li>width</li>\n     <li>height</li>\n     <li>tooltip (optional)</li>\n   </ul>",
            "type": "Record<any, any>",
            "description": "A map describing the image. Map keys:\n   <ul>\n     <li>url</li>\n     <li>width</li>\n     <li>height</li>\n     <li>tooltip (optional)</li>\n   </ul>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2695
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 3223
        }
      },
      "type": "function",
      "params": [
        {
          "name": "imageData",
          "type": [
            "Object",
            "String"
          ]
        }
      ],
      "returnType": {
        "type": "Record<any, any>"
      },
      "appearsIn": []
    },
    "_identifyImage": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Identifies the Image to show. This is a template method, which must be",
          "     * implements by sub classes.",
          "     *",
          "     * @abstract",
          "     * @param value {var} The cell's data value",
          "     * @return {Map} A map having the following attributes:",
          "     *           <ul>",
          "     *           <li>\"url\": (type string) must be the URL of the image to show.</li>",
          "     *           <li>\"width\": (type int) the width of the image in pixels.</li>",
          "     *           <li>\"height\": (type int) the height of the image in pixels.</li>",
          "     *           <li>\"tooltip\": (type string) must be the image tooltip text.</li>",
          "     *           </ul>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Identifies the Image to show. This is a template method, which must be\n implements by sub classes.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map having the following attributes:\n           <ul>\n           <li>\"url\": (type string) must be the URL of the image to show.</li>\n           <li>\"width\": (type int) the width of the image in pixels.</li>\n           <li>\"height\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>",
            "type": "Map<any, any>",
            "description": "A map having the following attributes:\n           <ul>\n           <li>\"url\": (type string) must be the URL of the image to show.</li>\n           <li>\"width\": (type int) the width of the image in pixels.</li>\n           <li>\"height\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 3865
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3947
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "var"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getContent": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3972
        },
        "end": {
          "line": 177,
          "column": 5,
          "index": 5009
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "states"
        }
      ],
      "overriddenFrom": "qx.ui.virtual.cell.Cell",
      "appearsIn": [
        "qx.ui.virtual.cell.Cell",
        "qx.ui.virtual.cell.Abstract"
      ]
    }
  },
  "statics": {},
  "properties": {}
}