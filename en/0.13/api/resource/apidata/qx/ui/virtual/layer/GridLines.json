{
  "version": 0.3,
  "lastModified": 1722153600387,
  "lastModifiedIso": "2024-07-28T08:00:00.387Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/layer/GridLines.js",
  "type": "class",
  "location": {
    "start": {
      "line": 23,
      "column": 0,
      "index": 566
    },
    "end": {
      "line": 271,
      "column": 3,
      "index": 7618
    }
  },
  "className": "qx.ui.virtual.layer.GridLines",
  "jsdoc": {
    "raw": [
      "*",
      " * Represents horizontal or vertical lines.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Represents horizontal or vertical lines.</p>"
      }
    ]
  },
  "superClass": "qx.ui.virtual.layer.Abstract",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "orientation"
      },
      {
        "name": "lineColor"
      },
      {
        "name": "lineSize"
      }
    ],
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 906
      },
      "end": {
        "line": 48,
        "column": 3,
        "index": 1274
      }
    }
  },
  "properties": {
    "defaultLineColor": {
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 1528
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1617
        }
      },
      "json": {
        "init": "gray",
        "check": "Color",
        "themeable": true
      },
      "jsdoc": {
        "raw": [
          "* The default color for grid lines."
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The default color for grid lines.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "defaultLineSize": {
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1675
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 1768
        }
      },
      "json": {
        "init": 1,
        "check": "PositiveInteger",
        "themeable": true
      },
      "jsdoc": {
        "raw": [
          "* The default width/height for grid lines."
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The default width/height for grid lines.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__lineColors": {
      "jsdoc": {
        "raw": [
          "* Stores the colors for deviant grid lines. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stores the colors for deviant grid lines.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2029
        },
        "end": {
          "line": 80,
          "column": 22,
          "index": 2047
        }
      },
      "appearsIn": []
    },
    "__lineSizes": {
      "jsdoc": {
        "raw": [
          "* Stores the width/height for deviant grid lines. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stores the width/height for deviant grid lines.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2113
        },
        "end": {
          "line": 83,
          "column": 21,
          "index": 2130
        }
      },
      "appearsIn": []
    },
    "isHorizontal": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether horizontal lines are rendered",
          "     *",
          "     * @return {Boolean} Whether horizontal lines are rendered",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether horizontal lines are rendered</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether horizontal lines are rendered",
            "type": "boolean",
            "description": "Whether horizontal lines are rendered"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2268
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2323
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "setLineColor": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the color for the grid line with the given index.",
          "     *",
          "     * @param index {PositiveNumber} The index of the line.",
          "     * @param color {Color} The color.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the color for the grid line with the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {PositiveNumber} The index of the line.",
            "paramName": "index",
            "description": " The index of the line.",
            "type": "PositiveNumber"
          },
          {
            "name": "@param",
            "body": "color {Color} The color.",
            "paramName": "color",
            "description": " The color.",
            "type": "Color"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2514
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2824
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "PositiveNumber"
        },
        {
          "name": "color",
          "type": "Color"
        }
      ],
      "appearsIn": []
    },
    "setLineSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the width/height for the grid line with the given index.",
          "     *",
          "     * @param index {PositiveNumber} The index of the line.",
          "     * @param size {PositiveInteger} The size.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the width/height for the grid line with the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {PositiveNumber} The index of the line.",
            "paramName": "index",
            "description": " The index of the line.",
            "type": "PositiveNumber"
          },
          {
            "name": "@param",
            "body": "size {PositiveInteger} The size.",
            "paramName": "size",
            "description": " The size.",
            "type": "PositiveInteger"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3030
        },
        "end": {
          "line": 128,
          "column": 5,
          "index": 3345
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "PositiveNumber"
        },
        {
          "name": "size",
          "type": "PositiveInteger"
        }
      ],
      "appearsIn": []
    },
    "__isLineRendered": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the line with the given index is currently rendered (i.e. in the",
          "     * layer's view port).",
          "     *",
          "     * @param index {Integer} The line's index",
          "     * @return {Boolean} Whether the line is rendered",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the line with the given index is currently rendered (i.e. in the\n layer's view port).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The line's index",
            "paramName": "index",
            "description": " The line's index",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the line is rendered",
            "type": "boolean",
            "description": "Whether the line is rendered"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3583
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 4012
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "Integer"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getLineSize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the size of the grid line with the given index.",
          "     *",
          "     * @param index {PositiveNumber} The index of the line.",
          "     * @return {PositiveInteger} The size.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the size of the grid line with the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {PositiveNumber} The index of the line.",
            "paramName": "index",
            "description": " The index of the line.",
            "type": "PositiveNumber"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{PositiveInteger} The size.",
            "type": "PositiveInteger",
            "description": "The size."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 155,
          "column": 4,
          "index": 4208
        },
        "end": {
          "line": 157,
          "column": 5,
          "index": 4301
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "PositiveNumber"
        }
      ],
      "returnType": {
        "type": "PositiveInteger"
      },
      "appearsIn": []
    },
    "getLineColor": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the color of the grid line with the given index.",
          "     *",
          "     * @param index {PositiveNumber} The index of the line.",
          "     * @return {String} The color.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the color of the grid line with the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {PositiveNumber} The index of the line.",
            "paramName": "index",
            "description": " The index of the line.",
            "type": "PositiveNumber"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The color.",
            "type": "string",
            "description": "The color."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 165,
          "column": 4,
          "index": 4490
        },
        "end": {
          "line": 167,
          "column": 5,
          "index": 4586
        }
      },
      "type": "function",
      "params": [
        {
          "name": "index",
          "type": "PositiveNumber"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "__renderHorizontalLines": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper function to render horizontal lines.",
          "     *",
          "     * @param htmlArr {Array} An array to store the generated HTML in.",
          "     * @param firstRow {Integer} The first visible row",
          "     * @param rowSizes {Array} An array containing the row sizes.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper function to render horizontal lines.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "htmlArr {Array} An array to store the generated HTML in.",
            "paramName": "htmlArr",
            "description": " An array to store the generated HTML in.",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "firstRow {Integer} The first visible row",
            "paramName": "firstRow",
            "description": " The first visible row",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "rowSizes {Array} An array containing the row sizes.",
            "paramName": "rowSizes",
            "description": " An array containing the row sizes.",
            "type": "Array<any>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 4859
        },
        "end": {
          "line": 198,
          "column": 5,
          "index": 5486
        }
      },
      "type": "function",
      "params": [
        {
          "name": "htmlArr",
          "type": "Array<any>"
        },
        {
          "name": "firstRow",
          "type": "Integer"
        },
        {
          "name": "rowSizes",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "__renderVerticalLines": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper function to render vertical lines.",
          "     *",
          "     * @param htmlArr {Array} The array to store the generated HTML in.",
          "     * @param firstColumn {Integer} The first visible column",
          "     * @param columnSizes {Array} An array containing the column sizes.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper function to render vertical lines.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "htmlArr {Array} The array to store the generated HTML in.",
            "paramName": "htmlArr",
            "description": " The array to store the generated HTML in.",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "firstColumn {Integer} The first visible column",
            "paramName": "firstColumn",
            "description": " The first visible column",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "columnSizes {Array} An array containing the column sizes.",
            "paramName": "columnSizes",
            "description": " An array containing the column sizes.",
            "type": "Array<any>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 5770
        },
        "end": {
          "line": 230,
          "column": 5,
          "index": 6435
        }
      },
      "type": "function",
      "params": [
        {
          "name": "htmlArr",
          "type": "Array<any>"
        },
        {
          "name": "firstColumn",
          "type": "Integer"
        },
        {
          "name": "columnSizes",
          "type": "Array<any>"
        }
      ],
      "appearsIn": []
    },
    "_fullUpdate": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 233,
          "column": 4,
          "index": 6460
        },
        "end": {
          "line": 241,
          "column": 5,
          "index": 6801
        }
      },
      "type": "function",
      "params": [
        {
          "name": "firstRow"
        },
        {
          "name": "firstColumn"
        },
        {
          "name": "rowSizes"
        },
        {
          "name": "columnSizes"
        }
      ],
      "overriddenFrom": "qx.ui.virtual.layer.Abstract",
      "appearsIn": [
        "qx.ui.virtual.layer.Abstract"
      ]
    },
    "_updateLayerWindow": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 244,
          "column": 4,
          "index": 6826
        },
        "end": {
          "line": 259,
          "column": 5,
          "index": 7351
        }
      },
      "type": "function",
      "params": [
        {
          "name": "firstRow"
        },
        {
          "name": "firstColumn"
        },
        {
          "name": "rowSizes"
        },
        {
          "name": "columnSizes"
        }
      ],
      "overriddenFrom": "qx.ui.virtual.layer.Abstract",
      "appearsIn": [
        "qx.ui.virtual.layer.Abstract"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 268,
        "column": 2,
        "index": 7549
      },
      "end": {
        "line": 270,
        "column": 3,
        "index": 7614
      }
    }
  },
  "statics": {}
}