{
  "version": 0.3,
  "lastModified": 1735222258994,
  "lastModifiedIso": "2024-12-26T14:10:58.994Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/ISelectionDelegate.js",
  "type": "interface",
  "location": {
    "start": {
      "line": 29,
      "column": 0,
      "index": 971
    },
    "end": {
      "line": 55,
      "column": 3,
      "index": 2064
    }
  },
  "className": "qx.ui.virtual.selection.ISelectionDelegate",
  "jsdoc": {
    "raw": [
      "*",
      " * Objects, which are used as delegates for a virtual selection manager may",
      " * implement any of the methods described in this interface. The delegate does",
      " * not need implement all of the methods of this interface. If a method is not",
      " * implemented the selection manager provides a default implementation.",
      " *",
      " * Note: This interface is meant to document the delegate but should not be",
      " * listed in the <code>implement</code> key of a class unless all methods are",
      " * really implemented.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Objects, which are used as delegates for a virtual selection manager may\n implement any of the methods described in this interface. The delegate does\n not need implement all of the methods of this interface. If a method is not\n implemented the selection manager provides a default implementation.\n Note: This interface is meant to document the delegate but should not be\n listed in the <code>implement</code> key of a class unless all methods are\n really implemented.</p>"
      }
    ]
  },
  "members": {
    "isItemSelectable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns whether the given item is selectable. The type of the item",
          "     * depends on the concrete selection manager implementation. The",
          "     * {@link Row} and {@link Column} selection manager use row/column indexes",
          "     * as items. The {@link qx.ui.virtual.cell.Cell} uses cells as items. Cells are represented by",
          "     * a map containing <code>row</code> and <code>column</code> keys.",
          "     *",
          "     * If this method is not implemented by the delegate all items are selectable.",
          "     *",
          "     * @param item {var} The item to be checked",
          "     * @return {Boolean} Whether the given item is selectable",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether the given item is selectable. The type of the item\n depends on the concrete selection manager implementation. The\n {@link Row} and {@link Column} selection manager use row/column indexes\n as items. The {@link qx.ui.virtual.cell.Cell} uses cells as items. Cells are represented by\n a map containing <code>row</code> and <code>column</code> keys.\n If this method is not implemented by the delegate all items are selectable.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} The item to be checked",
            "paramName": "item",
            "description": " The item to be checked",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the given item is selectable",
            "type": "boolean",
            "description": "Whether the given item is selectable"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1671
        },
        "end": {
          "line": 43,
          "column": 29,
          "index": 1696
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "var"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "styleSelectable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Update the style (appearance) of the given item.",
          "     *",
          "     * @param item {var} Item to modify",
          "     * @param type {String} Any of <code>selected</code>, <code>anchor</code>",
          "     *    or <code>lead</code>",
          "     * @param wasAdded {Boolean} Whether the given style should be added or removed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Update the style (appearance) of the given item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Item to modify",
            "paramName": "item",
            "description": " Item to modify",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "type {String} Any of <code>selected</code>, <code>anchor</code>\n    or <code>lead</code>",
            "paramName": "type",
            "description": " Any of <code>selected</code>, <code>anchor</code>\n    or <code>lead</code>",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "wasAdded {Boolean} Whether the given style should be added or removed.",
            "paramName": "wasAdded",
            "description": " Whether the given style should be added or removed.",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 2016
        },
        "end": {
          "line": 53,
          "column": 44,
          "index": 2056
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item",
          "type": "var"
        },
        {
          "name": "type",
          "type": "string"
        },
        {
          "name": "wasAdded",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    }
  },
  "statics": {},
  "properties": {}
}