{
  "version": 0.3,
  "lastModified": 1735383688093,
  "lastModifiedIso": "2024-12-28T11:01:28.093Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/MModel.js",
  "type": "mixin",
  "location": {
    "start": {
      "line": 44,
      "column": 0,
      "index": 1154
    },
    "end": {
      "line": 474,
      "column": 3,
      "index": 12483
    }
  },
  "className": "qx.ui.virtual.selection.MModel",
  "jsdoc": {
    "raw": [
      "*",
      " * Implements the different selection modes single, multi, additive and one",
      " * selection with there drag and quick selection.",
      " *",
      " * Example how to use selection:",
      " * <pre class=\"javascript\">",
      " * var rawData = [];",
      " * for (var i = 0; i < 2500; i++) {",
      " *  rawData[i] = \"Item No \" + i;",
      " * }",
      " *",
      " * var model = qx.data.marshal.Json.createModel(rawData);",
      " * var list = new qx.ui.list.List(model);",
      " *",
      " * // Pre-Select \"Item No 20\"",
      " * list.getSelection().push(model.getItem(20));",
      " *",
      " * // log change selection",
      " * list.getSelection().addListener(\"change\", function(e) {",
      " *   this.debug(\"Selection: \" + list.getSelection().getItem(0));",
      " * }, this);",
      " * </pre>",
      " *",
      " * @internal",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Implements the different selection modes single, multi, additive and one\n selection with there drag and quick selection.\n Example how to use selection:\n </p>\n<pre class=\"javascript\">\n var rawData = [];\n for (var i = 0; i < 2500; i++) {\n  rawData[i] = \"Item No \" + i;\n }\n var model = qx.data.marshal.Json.createModel(rawData);\n var list = new qx.ui.list.List(model);\n\n list.getSelection().push(model.getItem(20));\n\n list.getSelection().addListener(\"change\", function(e) {\n   this.debug(\"Selection: \" + list.getSelection().getItem(0));\n }, this);\n </pre>"
      }
    ],
    "@internal": [
      {
        "name": "@internal",
        "body": ""
      }
    ]
  },
  "construct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 45,
        "column": 2,
        "index": 1208
      },
      "end": {
        "line": 50,
        "column": 3,
        "index": 1428
      }
    }
  },
  "properties": {
    "selectionMode": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1886
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 2018
        }
      },
      "json": {
        "check": [
          "single",
          "multi",
          "additive",
          "one"
        ],
        "init": "single",
        "apply": "_applySelectionMode"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The selection mode to use.",
          "     *",
          "     * For further details please have a look at:",
          "     * {@link qx.ui.core.selection.Abstract#mode}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The selection mode to use.\n For further details please have a look at:\n {@link qx.ui.core.selection.Abstract#mode}</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "dragSelection": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2249
        },
        "end": {
          "line": 87,
          "column": 5,
          "index": 2349
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyDragSelection"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Enable drag selection (multi selection of items through",
          "     * dragging the pointer in pressed states).",
          "     *",
          "     * Only possible for the selection modes <code>multi</code> and <code>additive</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable drag selection (multi selection of items through\n dragging the pointer in pressed states).\n Only possible for the selection modes <code>multi</code> and <code>additive</code></p>"
          }
        ]
      },
      "appearsIn": []
    },
    "quickSelection": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2540
        },
        "end": {
          "line": 98,
          "column": 5,
          "index": 2642
        }
      },
      "json": {
        "check": "Boolean",
        "init": false,
        "apply": "_applyQuickSelection"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Enable quick selection mode, where no tap is needed to change the selection.",
          "     *",
          "     * Only possible for the modes <code>single</code> and <code>one</code>.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enable quick selection mode, where no tap is needed to change the selection.\n Only possible for the modes <code>single</code> and <code>one</code>.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "events": {
    "changeSelection": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * This event is fired as soon as the content of the selection property changes, but",
          "     * this is not equal to the change of the selection of the widget. If the selection",
          "     * of the widget changes, the content of the array stored in the selection property",
          "     * changes. This means you have to listen to the change event of the selection array",
          "     * to get an event as soon as the user changes the selected item.",
          "     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>This event is fired as soon as the content of the selection property changes, but\n this is not equal to the change of the selection of the widget. If the selection\n of the widget changes, the content of the array stored in the selection property\n changes. This means you have to listen to the change event of the selection array\n to get an event as soon as the user changes the selected item.\n </p>\n<pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 3200
        },
        "end": {
          "line": 110,
          "column": 41,
          "index": 3237
        }
      }
    },
    "changeValue": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "* Fires after the value was modified "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after the value was modified</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 3290
        },
        "end": {
          "line": 113,
          "column": 37,
          "index": 3323
        }
      }
    }
  },
  "members": {
    "_manager": {
      "jsdoc": {
        "raw": [
          "* @type {qx.ui.virtual.selection.Row} selection manager "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.selection.Row} selection manager"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3412
        },
        "end": {
          "line": 118,
          "column": 18,
          "index": 3426
        }
      },
      "appearsIn": []
    },
    "__ignoreChangeSelection": {
      "jsdoc": {
        "raw": [
          "* @type {Boolean} flag to ignore the selection change from {@link #selection} "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} flag to ignore the selection change from {@link #selection}"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3520
        },
        "end": {
          "line": 121,
          "column": 34,
          "index": 3550
        }
      },
      "appearsIn": []
    },
    "__ignoreManagerChangeSelection": {
      "jsdoc": {
        "raw": [
          "* @type {Boolean} flag to ignore the selection change from <code>_manager</code> "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} flag to ignore the selection change from <code>_manager</code>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3647
        },
        "end": {
          "line": 124,
          "column": 41,
          "index": 3684
        }
      },
      "appearsIn": []
    },
    "__selection": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 126,
          "column": 4,
          "index": 3691
        },
        "end": {
          "line": 126,
          "column": 21,
          "index": 3708
        }
      },
      "appearsIn": []
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * setValue implements part of the {@link qx.ui.form.IField} interface.",
          "     *",
          "     * @param selection {qx.data.IListData|null} List data to select as value.",
          "     * @return {null} The status of this operation.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>setValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "selection {qx.data.IListData|null} List data to select as value.",
            "paramName": "selection",
            "description": " List data to select as value.",
            "type": [
              "qx.data.IListData",
              "null"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null} The status of this operation.",
            "type": "null",
            "description": "The status of this operation."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 134,
          "column": 4,
          "index": 3945
        },
        "end": {
          "line": 142,
          "column": 5,
          "index": 4116
        }
      },
      "type": "function",
      "params": [
        {
          "name": "selection",
          "type": [
            "qx.data.IListData",
            "null"
          ]
        }
      ],
      "returnType": {
        "type": "null"
      },
      "appearsIn": []
    },
    "getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * getValue implements part of the {@link qx.ui.form.IField} interface.",
          "     *",
          "     * @return {qx.data.IListData} The current selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>getValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.IListData} The current selection.",
            "type": "qx.data.IListData",
            "description": "The current selection."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 4280
        },
        "end": {
          "line": 151,
          "column": 5,
          "index": 4332
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.data.IListData"
      },
      "appearsIn": []
    },
    "resetValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * resetValue implements part of the {@link qx.ui.form.IField} interface.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>resetValue implements part of the {@link qx.ui.form.IField} interface.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 4433
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 4482
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_initSelectionManager": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Initialize the selection manager with his delegate.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialize the selection manager with his delegate.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4564
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 5377
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "setAutoScrollIntoView": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Determines, if automatically scrolling of selected item is active.",
          "     * Set <code>false</code> to suspend auto scrolling.",
          "     *",
          "     * @param value {Boolean} Set <code>false</code> to suspend auto scrolling.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Determines, if automatically scrolling of selected item is active.\n Set <code>false</code> to suspend auto scrolling.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Boolean} Set <code>false</code> to suspend auto scrolling.",
            "paramName": "value",
            "description": " Set <code>false</code> to suspend auto scrolling.",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 203,
          "column": 4,
          "index": 5618
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 5703
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "appearsIn": []
    },
    "getAutoScrollIntoView": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns true, if automatically scrolling of selected item is active.",
          "     *",
          "     * @return {Boolean} Returns <code>false</code> if auto scrolling is suspended.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns true, if automatically scrolling of selected item is active.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Returns <code>false</code> if auto scrolling is suspended.",
            "type": "boolean",
            "description": "Returns <code>false</code> if auto scrolling is suspended."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 212,
          "column": 4,
          "index": 5893
        },
        "end": {
          "line": 214,
          "column": 5,
          "index": 5972
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_updateSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Method to update the selection, this method can be used when the model has",
          "     * changes.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Method to update the selection, this method can be used when the model has\n changes.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 220,
          "column": 4,
          "index": 6093
        },
        "end": {
          "line": 226,
          "column": 5,
          "index": 6212
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "setSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Setter for selection property; takes the selection on, and does not change the",
          "     * array instance in `this.selection`",
          "     *",
          "     * @param value {qx.data.Array} the new selection",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setter for selection property; takes the selection on, and does not change the\n array instance in <code>this.selection</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.data.Array} the new selection",
            "paramName": "value",
            "description": " the new selection",
            "type": "qx.data.Array"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 6620
        },
        "end": {
          "line": 246,
          "column": 5,
          "index": 6768
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "qx.data.Array"
        }
      ],
      "appearsIn": []
    },
    "getSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Getter for selection property",
          "     *",
          "     * @return {qx.data.Array}",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for selection property</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array}",
            "type": "qx.data.Array",
            "description": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 253,
          "column": 4,
          "index": 6866
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 6919
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.data.Array"
      },
      "appearsIn": []
    },
    "resetSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Reset for selection property",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset for selection property</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 6978
        },
        "end": {
          "line": 262,
          "column": 5,
          "index": 7038
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "initSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Init for selection property; takes the selection on, and does not change the",
          "     * array instance in `this.selection`",
          "     *",
          "     * @param value {qx.data.Array} the new selection",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Init for selection property; takes the selection on, and does not change the\n array instance in <code>this.selection</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.data.Array} the new selection",
            "paramName": "value",
            "description": " the new selection",
            "type": "qx.data.Array"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 270,
          "column": 4,
          "index": 7248
        },
        "end": {
          "line": 278,
          "column": 5,
          "index": 7486
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "qx.data.Array"
        }
      ],
      "appearsIn": []
    },
    "_applySelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply method for selection property",
          "     *",
          "     * @param value {qx.data.Array} new value",
          "     * @param old {qx.data.Array} old value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply method for selection property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.data.Array} new value",
            "paramName": "value",
            "description": " new value",
            "type": "qx.data.Array"
          },
          {
            "name": "@param",
            "body": "old {qx.data.Array} old value",
            "paramName": "old",
            "description": " old value",
            "type": "qx.data.Array"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 286,
          "column": 4,
          "index": 7649
        },
        "end": {
          "line": 288,
          "column": 5,
          "index": 7717
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "qx.data.Array"
        },
        {
          "name": "old",
          "type": "qx.data.Array"
        }
      ],
      "appearsIn": []
    },
    "_applySelectionMode": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 291,
          "column": 4,
          "index": 7744
        },
        "end": {
          "line": 293,
          "column": 5,
          "index": 7819
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyDragSelection": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 296,
          "column": 4,
          "index": 7846
        },
        "end": {
          "line": 298,
          "column": 5,
          "index": 7921
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_applyQuickSelection": {
      "jsdoc": {
        "raw": [
          " apply method"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 301,
          "column": 4,
          "index": 7948
        },
        "end": {
          "line": 303,
          "column": 5,
          "index": 8025
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_onChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the internal selection change {@link #selection}.",
          "     *",
          "     * @param e {qx.event.type.Data} the change event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the internal selection change {@link #selection}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} the change event.",
            "paramName": "e",
            "description": " the change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 316,
          "column": 4,
          "index": 8385
        },
        "end": {
          "line": 365,
          "column": 5,
          "index": 9699
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "_onManagerChangeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Event handler for the selection change from the <code>_manager</code>.",
          "     *",
          "     * @param e {qx.event.type.Data} the change event.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the selection change from the <code>_manager</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} the change event.",
            "paramName": "e",
            "description": " the change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 372,
          "column": 4,
          "index": 9862
        },
        "end": {
          "line": 384,
          "column": 5,
          "index": 10184
        }
      },
      "type": "function",
      "params": [
        {
          "name": "e",
          "type": "qx.event.type.Data"
        }
      ],
      "appearsIn": []
    },
    "__synchronizeSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Synchronized the selection form the manager with the local one.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Synchronized the selection form the manager with the local one.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 389,
          "column": 4,
          "index": 10278
        },
        "end": {
          "line": 406,
          "column": 5,
          "index": 10712
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__replaceSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Replace the current selection with the passed selection Array.",
          "     *",
          "     * @param newSelection {qx.data.Array} The new selection.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replace the current selection with the passed selection Array.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "newSelection {qx.data.Array} The new selection.",
            "paramName": "newSelection",
            "description": " The new selection.",
            "type": "qx.data.Array"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 413,
          "column": 4,
          "index": 10874
        },
        "end": {
          "line": 424,
          "column": 5,
          "index": 11291
        }
      },
      "type": "function",
      "params": [
        {
          "name": "newSelection",
          "type": "qx.data.Array"
        }
      ],
      "appearsIn": []
    },
    "__isSelectionEquals": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether the local and the manager selection are equal.",
          "     *",
          "     * @return {Boolean} <code>true</code> if the selections are equal,",
          "     *   <code>false</code> otherwise.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether the local and the manager selection are equal.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the selections are equal,\n   <code>false</code> otherwise.",
            "type": "boolean",
            "description": "<code>true</code> if the selections are equal,\n   <code>false</code> otherwise."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 432,
          "column": 4,
          "index": 11501
        },
        "end": {
          "line": 455,
          "column": 5,
          "index": 12140
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "_applyDefaultSelection": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Helper Method to select default item.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper Method to select default item.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 460,
          "column": 4,
          "index": 12208
        },
        "end": {
          "line": 464,
          "column": 5,
          "index": 12331
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 467,
        "column": 2,
        "index": 12340
      },
      "end": {
        "line": 473,
        "column": 3,
        "index": 12479
      }
    }
  },
  "statics": {}
}