{
  "className": "qx.ui.virtual.layer.CellSpanManager",
  "packageName": "qx.ui.virtual.layer",
  "name": "CellSpanManager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 692
      },
      "end": {
        "line": 425,
        "column": 3,
        "index": 12256
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The CellSpanManager manages cells, which span several rows or columns.\n It provides functionality to compute, which spanning cells are visible\n in a given view port and how they have to be placed.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 1048
      },
      "end": {
        "line": 51,
        "column": 3,
        "index": 1593
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "rowConfig {qx.ui.virtual.core.Axis} The row configuration of the pane\n    in which the cells will be rendered",
          "paramName": "rowConfig",
          "description": " The row configuration of the pane\n    in which the cells will be rendered",
          "type": "qx.ui.virtual.core.Axis"
        },
        {
          "name": "@param",
          "body": "columnConfig {qx.ui.virtual.core.Axis} The column configuration of the pane\n    in which the cells will be rendered",
          "paramName": "columnConfig",
          "description": " The column configuration of the pane\n    in which the cells will be rendered",
          "type": "qx.ui.virtual.core.Axis"
        }
      ]
    }
  },
  "members": {
    "addCell": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2257
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 2529
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a spanning cell to the manager.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} Unique id for the cell definition. This id is required\n    for removing the cell from the manager",
            "paramName": "id",
            "description": " Unique id for the cell definition. This id is required\n    for removing the cell from the manager",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "row {PositiveInteger} The cell's row",
            "paramName": "row",
            "description": " The cell's row",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "column {PositiveInteger} The cell's column",
            "paramName": "column",
            "description": " The cell's column",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "rowSpan {PositiveInteger} The number of rows the cells spans",
            "paramName": "rowSpan",
            "description": " The number of rows the cells spans",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "columnSpan {PositiveInteger} The number of columns the cells spans",
            "paramName": "columnSpan",
            "description": " The number of columns the cells spans",
            "type": "PositiveInteger"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeCell": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2652
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2739
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove a cell from the manager</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the cell to remove",
            "paramName": "id",
            "description": " The id of the cell to remove",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_invalidateSortCache": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2795
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2850
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Invalidate the sort cache</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getSortedCells": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 3155
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3433
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the cell array sorted by the given key (ascending)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The sort key. One of <code>firstRow</code>,\n     <code>lastRow</code>, <code>firstColumn</code> or <code>lastColumn</code>",
            "paramName": "key",
            "description": " The sort key. One of <code>firstRow</code>,\n     <code>lastRow</code>, <code>firstColumn</code> or <code>lastColumn</code>",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} sorted array of cell descriptions",
            "type": "Map[]",
            "description": " sorted array of cell descriptions"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_findCellsInRange": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3770
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 4680
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Finds all cells with a sort key within the given range.\n Complexity: O(log n)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The key to search for",
            "paramName": "key",
            "description": " The key to search for",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "min {Integer} minimum value",
            "paramName": "min",
            "description": " minimum value",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "max {Integer} maximum value (inclusive)",
            "paramName": "max",
            "description": " maximum value (inclusive)",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map, which will contain the search results",
            "type": "Map",
            "description": " Map, which will contain the search results"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "findCellsInWindow": {
      "location": {
        "start": {
          "line": 177,
          "column": 4,
          "index": 5262
        },
        "end": {
          "line": 209,
          "column": 5,
          "index": 6228
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Find all cells, which are visible in the given grid window.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "firstRow {PositiveInteger} first visible row",
            "paramName": "firstRow",
            "description": " first visible row",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "firstColumn {PositiveInteger} first visible column",
            "paramName": "firstColumn",
            "description": " first visible column",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "rowCount {PositiveInteger} number of rows in the window",
            "paramName": "rowCount",
            "description": " number of rows in the window",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "columnCount {PositiveInteger} number of columns in the window",
            "paramName": "columnCount",
            "description": " number of columns in the window",
            "type": "PositiveInteger"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} The array of found cell descriptions. A cell description\n    contains the keys <code>firstRow</code>, <code>lastRow</code>,\n    <code>firstColumn</code> or <code>lastColumn</code>",
            "type": "Map[]",
            "description": " The array of found cell descriptions. A cell description\n    contains the keys <code>firstRow</code>, <code>lastRow</code>,\n    <code>firstColumn</code> or <code>lastColumn</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__intersectionAsArray": {
      "location": {
        "start": {
          "line": 219,
          "column": 4,
          "index": 6515
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 6725
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the intersection of two maps as an array. The objects intersect if\n they have the same keys.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "setA {Object} The first map",
            "paramName": "setA",
            "description": " The first map",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "setB {Object} The second map",
            "paramName": "setB",
            "description": " The second map",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} An array keys found in both maps",
            "type": "String[]",
            "description": " An array keys found in both maps"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onRowConfigChange": {
      "location": {
        "start": {
          "line": 234,
          "column": 4,
          "index": 6861
        },
        "end": {
          "line": 236,
          "column": 5,
          "index": 6915
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for row configuration changes</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} the event object",
            "paramName": "e",
            "description": " the event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onColumnConfigChange": {
      "location": {
        "start": {
          "line": 243,
          "column": 4,
          "index": 7054
        },
        "end": {
          "line": 245,
          "column": 5,
          "index": 7114
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for column configuration changes</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} the event object",
            "paramName": "e",
            "description": " the event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_invalidatePositionCache": {
      "location": {
        "start": {
          "line": 250,
          "column": 4,
          "index": 7186
        },
        "end": {
          "line": 253,
          "column": 5,
          "index": 7273
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Invalidates the row/column position cache</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getRowPosition": {
      "location": {
        "start": {
          "line": 261,
          "column": 4,
          "index": 7465
        },
        "end": {
          "line": 269,
          "column": 5,
          "index": 7676
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the pixel start position of the given row</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} The row index",
            "paramName": "row",
            "description": " The row index",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The pixel start position of the given row",
            "type": "Integer",
            "description": " The pixel start position of the given row"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getColumnPosition": {
      "location": {
        "start": {
          "line": 277,
          "column": 4,
          "index": 7880
        },
        "end": {
          "line": 286,
          "column": 5,
          "index": 8123
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the pixel start position of the given column</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "column {Integer} The column index",
            "paramName": "column",
            "description": " The column index",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The pixel start position of the given column",
            "type": "Integer",
            "description": " The pixel start position of the given column"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getSingleCellBounds": {
      "location": {
        "start": {
          "line": 298,
          "column": 4,
          "index": 8585
        },
        "end": {
          "line": 325,
          "column": 5,
          "index": 9363
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the bounds of a single cell</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cell {Map} the cell description as returned by\n    {@link #findCellsInWindow} to get the bounds for",
            "paramName": "cell",
            "description": " the cell description as returned by\n    {@link #findCellsInWindow} to get the bounds for",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "firstVisibleRow {Map} The pane's first visible row",
            "paramName": "firstVisibleRow",
            "description": " The pane's first visible row",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "firstVisibleColumn {Map} The pane's first visible column",
            "paramName": "firstVisibleColumn",
            "description": " The pane's first visible column",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Boundaries map with the keys <code>left</code>,\n <code>top</code>, <code>width</code> and <code>height</code>",
            "type": "Map",
            "description": " Boundaries map with the keys <code>left</code>,\n <code>top</code>, <code>width</code> and <code>height</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getCellBounds": {
      "location": {
        "start": {
          "line": 335,
          "column": 4,
          "index": 9740
        },
        "end": {
          "line": 347,
          "column": 5,
          "index": 10074
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the bounds of a list of cells as returned by {@link #findCellsInWindow}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cells {Map[]} Array of cell descriptions",
            "paramName": "cells",
            "description": " Array of cell descriptions",
            "type": "Map[]"
          },
          {
            "name": "@param",
            "body": "firstVisibleRow {Map} The pane's first visible row",
            "paramName": "firstVisibleRow",
            "description": " The pane's first visible row",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "firstVisibleColumn {Map} The pane's first visible column",
            "paramName": "firstVisibleColumn",
            "description": " The pane's first visible column",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} Array, which contains a bounds map for each cell.",
            "type": "Map[]",
            "description": " Array, which contains a bounds map for each cell."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "computeCellSpanMap": {
      "location": {
        "start": {
          "line": 362,
          "column": 4,
          "index": 10747
        },
        "end": {
          "line": 406,
          "column": 5,
          "index": 11893
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compute a bitmap, which marks for each visible cell, whether the cell\n is covered by a spanning cell.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cells {Map[]} Array of cell descriptions as returned by\n     {@link #findCellsInWindow}.",
            "paramName": "cells",
            "description": " Array of cell descriptions as returned by\n     {@link #findCellsInWindow}.",
            "type": "Map[]"
          },
          {
            "name": "@param",
            "body": "firstRow {PositiveInteger} first visible row",
            "paramName": "firstRow",
            "description": " first visible row",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "firstColumn {PositiveInteger} first visible column",
            "paramName": "firstColumn",
            "description": " first visible column",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "rowCount {PositiveInteger} number of rows in the window",
            "paramName": "rowCount",
            "description": " number of rows in the window",
            "type": "PositiveInteger"
          },
          {
            "name": "@param",
            "body": "columnCount {PositiveInteger} number of columns in the window",
            "paramName": "columnCount",
            "description": " number of columns in the window",
            "type": "PositiveInteger"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[][]} Two dimensional array, which contains a <code>1</code>\n    for each visible cell, which is covered by a spanned cell.",
            "type": "Map[][]",
            "description": " Two dimensional array, which contains a <code>1</code>\n    for each visible cell, which is covered by a spanned cell."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 409,
        "column": 2,
        "index": 11902
      },
      "end": {
        "line": 424,
        "column": 3,
        "index": 12252
      }
    }
  },
  "descendants": []
}