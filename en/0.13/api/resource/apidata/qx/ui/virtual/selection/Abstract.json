{
  "version": 0.3,
  "lastModified": 1735222256966,
  "lastModifiedIso": "2024-12-26T14:10:56.966Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/Abstract.js",
  "type": "class",
  "location": {
    "start": {
      "line": 24,
      "column": 0,
      "index": 656
    },
    "end": {
      "line": 218,
      "column": 3,
      "index": 6639
    }
  },
  "className": "qx.ui.virtual.selection.Abstract",
  "jsdoc": {
    "raw": [
      "*",
      " * Abstract base class for selection manager, which manage selectable items",
      " * rendered in a virtual {@link qx.ui.virtual.core.Pane}.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Abstract base class for selection manager, which manage selectable items\n rendered in a virtual {@link qx.ui.virtual.core.Pane}.</p>"
      }
    ]
  },
  "superClass": "qx.ui.core.selection.Abstract",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "pane"
      },
      {
        "name": "selectionDelegate"
      }
    ],
    "location": {
      "start": {
        "line": 40,
        "column": 2,
        "index": 1280
      },
      "end": {
        "line": 49,
        "column": 3,
        "index": 1515
      }
    }
  },
  "members": {
    "_autoScrollIntoView": {
      "jsdoc": {
        "raw": [
          " Determines if automatically scrolling of selected item into view is active."
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1802
        },
        "end": {
          "line": 59,
          "column": 29,
          "index": 1827
        }
      },
      "appearsIn": []
    },
    "_isSelectable": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 2050
        },
        "end": {
          "line": 72,
          "column": 5,
          "index": 2186
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item"
        }
      ],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_styleSelectable": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2211
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2369
        }
      },
      "type": "function",
      "params": [
        {
          "name": "item"
        },
        {
          "name": "type"
        },
        {
          "name": "enabled"
        }
      ],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "attachPointerEvents": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Attach pointer events to the managed pane.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attach pointer events to the managed pane.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2630
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 3079
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "detatchPointerEvents": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detach pointer events from the managed pane.",
          "     *",
          "     * @deprecated {6.0} misspelled, please use detachPointerEvents instead!",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detach pointer events from the managed pane.</p>"
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{6.0} misspelled, please use detachPointerEvents instead!"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 3238
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 3302
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "detachPointerEvents": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detach pointer events from the managed pane.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detach pointer events from the managed pane.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3377
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 3841
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "attachKeyEvents": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Attach key events to manipulate the selection using the keyboard. The",
          "     * event target doesn't need to be the pane itself. It can be an widget,",
          "     * which received key events. Usually the key event target is the",
          "     * {@link qx.ui.virtual.core.Scroller}.",
          "     *",
          "     * @param target {qx.core.Object} the key event target.",
          "     *",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attach key events to manipulate the selection using the keyboard. The\n event target doesn't need to be the pane itself. It can be an widget,\n which received key events. Usually the key event target is the\n {@link qx.ui.virtual.core.Scroller}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {qx.core.Object} the key event target.",
            "paramName": "target",
            "description": " the key event target.",
            "type": "qx.core.Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 4206
        },
        "end": {
          "line": 131,
          "column": 5,
          "index": 4302
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target",
          "type": "qx.core.Object"
        }
      ],
      "appearsIn": []
    },
    "detachKeyEvents": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detach key events.",
          "     *",
          "     * @param target {qx.core.Object} the key event target.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detach key events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {qx.core.Object} the key event target.",
            "paramName": "target",
            "description": " the key event target.",
            "type": "qx.core.Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 4418
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 4517
        }
      },
      "type": "function",
      "params": [
        {
          "name": "target",
          "type": "qx.core.Object"
        }
      ],
      "appearsIn": []
    },
    "attachListEvents": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Attach list events. The selection mode <code>one</code> need to know,",
          "     * when selectable items are added or removed. If this mode is used the",
          "     * <code>list</code> parameter must fire <code>addItem</code> and",
          "     * <code>removeItem</code> events.",
          "     *",
          "     * @param list {qx.core.Object} the event target for <code>addItem</code> and",
          "     *    <code>removeItem</code> events",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attach list events. The selection mode <code>one</code> need to know,\n when selectable items are added or removed. If this mode is used the\n <code>list</code> parameter must fire <code>addItem</code> and\n <code>removeItem</code> events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "list {qx.core.Object} the event target for <code>addItem</code> and\n    <code>removeItem</code> events",
            "paramName": "list",
            "description": " the event target for <code>addItem</code> and\n    <code>removeItem</code> events",
            "type": "qx.core.Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 4932
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 5090
        }
      },
      "type": "function",
      "params": [
        {
          "name": "list",
          "type": "qx.core.Object"
        }
      ],
      "appearsIn": []
    },
    "detachListEvents": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detach list events.",
          "     *",
          "     * @param list {qx.core.Object} the event target for <code>addItem</code> and",
          "     *    <code>removeItem</code> events",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detach list events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "list {qx.core.Object} the event target for <code>addItem</code> and\n    <code>removeItem</code> events",
            "paramName": "list",
            "description": " the event target for <code>addItem</code> and\n    <code>removeItem</code> events",
            "type": "qx.core.Object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 162,
          "column": 4,
          "index": 5270
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 5434
        }
      },
      "type": "function",
      "params": [
        {
          "name": "list",
          "type": "qx.core.Object"
        }
      ],
      "appearsIn": []
    },
    "_capture": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 174,
          "column": 4,
          "index": 5667
        },
        "end": {
          "line": 176,
          "column": 5,
          "index": 5713
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_releaseCapture": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 179,
          "column": 4,
          "index": 5738
        },
        "end": {
          "line": 181,
          "column": 5,
          "index": 5798
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_getScroll": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 184,
          "column": 4,
          "index": 5823
        },
        "end": {
          "line": 189,
          "column": 5,
          "index": 5943
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_scrollBy": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 192,
          "column": 4,
          "index": 5968
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 6119
        }
      },
      "type": "function",
      "params": [
        {
          "name": "xoff"
        },
        {
          "name": "yoff"
        }
      ],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_getLocation": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 198,
          "column": 4,
          "index": 6144
        },
        "end": {
          "line": 201,
          "column": 5,
          "index": 6293
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_getDimension": {
      "jsdoc": {
        "raw": [
          " overridden"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 6318
        },
        "end": {
          "line": 206,
          "column": 5,
          "index": 6381
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    }
  },
  "destruct": {
    "type": "function",
    "params": [],
    "location": {
      "start": {
        "line": 215,
        "column": 2,
        "index": 6579
      },
      "end": {
        "line": 217,
        "column": 3,
        "index": 6635
      }
    }
  },
  "statics": {},
  "properties": {}
}