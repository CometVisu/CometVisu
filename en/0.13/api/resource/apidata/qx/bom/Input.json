{
  "version": 0.3,
  "lastModified": 1722151626143,
  "lastModifiedIso": "2024-07-28T07:27:06.143Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/Input.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 37,
      "column": 0,
      "index": 882
    },
    "end": {
      "line": 281,
      "column": 3,
      "index": 8009
    }
  },
  "className": "qx.bom.Input",
  "jsdoc": {
    "raw": [
      "*",
      " * Cross browser abstractions to work with input elements.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Cross browser abstractions to work with input elements.</p>"
      }
    ]
  },
  "statics": {
    "__types": {
      "jsdoc": {
        "raw": [
          "* @type {Map} Internal data structures with all supported input types "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Internal data structures with all supported input types"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1200
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 1688
        }
      },
      "appearsIn": []
    },
    "create": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates an DOM input/textarea/select element.",
          "     *",
          "     * Attributes may be given directly with this call. This is critical",
          "     * for some attributes e.g. name, type, ... in many clients.",
          "     *",
          "     * Note: <code>select</code> and <code>textarea</code> elements are created",
          "     * using the identically named <code>type</code>.",
          "     *",
          "     * @param type {String} Any valid type for HTML, <code>select</code>",
          "     *   and <code>textarea</code>",
          "     * @param attributes {Map} Map of attributes to apply",
          "     * @param win {Window} Window to create the element for",
          "     * @return {Element} The created input node",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an DOM input/textarea/select element.\n Attributes may be given directly with this call. This is critical\n for some attributes e.g. name, type, â€¦ in many clients.\n Note: <code>select</code> and <code>textarea</code> elements are created\n using the identically named <code>type</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String} Any valid type for HTML, <code>select</code>\n   and <code>textarea</code>",
            "paramName": "type",
            "description": " Any valid type for HTML, <code>select</code>\n   and <code>textarea</code>",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "attributes {Map} Map of attributes to apply",
            "paramName": "attributes",
            "description": " Map of attributes to apply",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "win {Window} Window to create the element for",
            "paramName": "win",
            "description": " Window to create the element for",
            "type": "qx.bom.Window"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} The created input node",
            "type": "qx.bom.Element",
            "description": "The created input node"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2331
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2914
        }
      },
      "type": "function",
      "params": [
        {
          "name": "type",
          "type": "string"
        },
        {
          "name": "attributes",
          "type": "Map<any, any>"
        },
        {
          "name": "win",
          "type": "qx.bom.Window"
        }
      ],
      "returnType": {
        "type": "qx.bom.Element"
      },
      "appearsIn": []
    },
    "setValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Applies the given value to the element.",
          "     *",
          "     * Normally the value is given as a string/number value and applied",
          "     * to the field content (textfield, textarea) or used to",
          "     * detect whether the field is checked (checkbox, radiobutton).",
          "     *",
          "     * Supports array values for selectboxes (multiple-selection)",
          "     * and checkboxes or radiobuttons (for convenience).",
          "     *",
          "     * Please note: To modify the value attribute of a checkbox or",
          "     * radiobutton use {@link qx.bom.element.Attribute#set} instead.",
          "     *",
          "     * @param element {Element} element to update",
          "     * @param value {String|Number|Array} the value to apply",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Applies the given value to the element.\n Normally the value is given as a string/number value and applied\n to the field content (textfield, textarea) or used to\n detect whether the field is checked (checkbox, radiobutton).\n Supports array values for selectboxes (multiple-selection)\n and checkboxes or radiobuttons (for convenience).\n Please note: To modify the value attribute of a checkbox or\n radiobutton use {@link qx.bom.element.Attribute#set} instead.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} element to update",
            "paramName": "element",
            "description": " element to update",
            "type": "qx.bom.Element"
          },
          {
            "name": "@param",
            "body": "value {String|Number|Array} the value to apply",
            "paramName": "value",
            "description": " the value to apply",
            "type": [
              "String",
              "Number",
              "Array"
            ]
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3583
        },
        "end": {
          "line": 174,
          "column": 5,
          "index": 5049
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "qx.bom.Element"
        },
        {
          "name": "value",
          "type": [
            "String",
            "Number",
            "Array"
          ]
        }
      ],
      "appearsIn": []
    },
    "getValue": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the currently configured value.",
          "     *",
          "     * Works with simple input fields as well as with",
          "     * select boxes or option elements.",
          "     *",
          "     * Returns an array in cases of multi-selection in",
          "     * select boxes but in all other cases a string.",
          "     *",
          "     * @param element {Element} DOM element to query",
          "     * @return {String|Array} The value of the given element",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the currently configured value.\n Works with simple input fields as well as with\n select boxes or option elements.\n Returns an array in cases of multi-selection in\n select boxes but in all other cases a string.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element to query",
            "paramName": "element",
            "description": " DOM element to query",
            "type": "qx.bom.Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|Array} The value of the given element",
            "type": "String|Array",
            "description": "The value of the given element"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 5456
        },
        "end": {
          "line": 237,
          "column": 5,
          "index": 6683
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "qx.bom.Element"
        }
      ],
      "returnType": {
        "type": "String|Array"
      },
      "appearsIn": []
    },
    "setWrap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets the text wrap behaviour of a text area element.",
          "     * This property uses the attribute \"wrap\" respectively",
          "     * the style property \"whiteSpace\"",
          "     *",
          "     * @signature function(element, wrap)",
          "     * @param element {Element} DOM element to modify",
          "     * @param wrap {Boolean} Whether to turn text wrap on or off.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the text wrap behaviour of a text area element.\n This property uses the attribute \"wrap\" respectively\n the style property \"whiteSpace\"</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(element, wrap)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element to modify",
            "paramName": "element",
            "description": " DOM element to modify",
            "type": "qx.bom.Element"
          },
          {
            "name": "@param",
            "body": "wrap {Boolean} Whether to turn text wrap on or off.",
            "paramName": "wrap",
            "description": " Whether to turn text wrap on or off.",
            "type": "boolean"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 248,
          "column": 4,
          "index": 7034
        },
        "end": {
          "line": 279,
          "column": 6,
          "index": 8001
        }
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}