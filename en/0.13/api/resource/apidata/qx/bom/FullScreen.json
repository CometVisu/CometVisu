{
  "version": 0.3,
  "lastModified": 1735222258746,
  "lastModifiedIso": "2024-12-26T14:10:58.746Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/FullScreen.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 51,
      "column": 0,
      "index": 1257
    },
    "end": {
      "line": 175,
      "column": 3,
      "index": 5054
    }
  },
  "className": "qx.bom.FullScreen",
  "jsdoc": {
    "raw": [
      "*",
      " *",
      " * This class offers a constant API over the Fullscreen Spec:",
      " * http://www.w3.org/TR/fullscreen/",
      " *",
      " * It forwards all the browsers support if supported.",
      " *",
      " * *Example*",
      " *",
      " * <pre class=\"javascript\">",
      " * var fs = qx.bom.FullScreen.getInstance();",
      " *",
      " * var button = new qx.ui.form.Button(\"Toggle fullscreen\");",
      " * button.addListener(\"execute\", function() {",
      " *   if (fs.isFullScreen()) {",
      " *     fs.cancel();",
      " *   } else {",
      " *     fs.request();",
      " *   }",
      " * });",
      " *",
      " * // Enable button if toggling is supported",
      " * button.setEnabled(qx.core.Environment.get(\"html.fullscreen\"));",
      " *",
      " * </pre>",
      " *",
      " * *Note*",
      " *",
      " * A fullscreen request will only be handled from within an interactive",
      " * event handler. So there is most likely a mouse or key event involved",
      " * to trigger it properly.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This class offers a constant API over the Fullscreen Spec:\n http://www.w3.org/TR/fullscreen/\n It forwards all the browsers support if supported.\n<em>Example</em>\n </p>\n<pre class=\"javascript\">\n var fs = qx.bom.FullScreen.getInstance();\n var button = new qx.ui.form.Button(\"Toggle fullscreen\");\n button.addListener(\"execute\", function() {\n   if (fs.isFullScreen()) {\n     fs.cancel();\n   } else {\n     fs.request();\n   }\n });\n\n button.setEnabled(qx.core.Environment.get(\"html.fullscreen\"));\n </pre>\n<p><em>Note</em>\n A fullscreen request will only be handled from within an interactive\n event handler. So there is most likely a mouse or key event involved\n to trigger it properly.</p>"
      }
    ]
  },
  "superClass": "qx.event.Emitter",
  "statics": {
    "getInstance": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get an instance of the FullScreen object using the default document.",
          "     * @return {qx.bom.FullScreen} An instance of this class.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get an instance of the FullScreen object using the default document.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.FullScreen} An instance of this class.",
            "type": "qx.bom.FullScreen",
            "description": "An instance of this class."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1500
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1640
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.bom.FullScreen"
      },
      "appearsIn": []
    }
  },
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "element"
      }
    ],
    "location": {
      "start": {
        "line": 70,
        "column": 2,
        "index": 1729
      },
      "end": {
        "line": 80,
        "column": 3,
        "index": 1998
      }
    }
  },
  "events": {
    "change": {
      "type": "Event",
      "jsdoc": {
        "raw": [
          "*",
          "     * The change event for the fullscreen mode.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The change event for the fullscreen mode.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2082
        },
        "end": {
          "line": 86,
          "column": 19,
          "index": 2097
        }
      }
    }
  },
  "members": {
    "__doc": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2121
        },
        "end": {
          "line": 90,
          "column": 15,
          "index": 2132
        }
      },
      "appearsIn": []
    },
    "__fullscreenElementAttr": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2138
        },
        "end": {
          "line": 91,
          "column": 48,
          "index": 2182
        }
      },
      "appearsIn": []
    },
    "__requestMethodName": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2188
        },
        "end": {
          "line": 92,
          "column": 44,
          "index": 2228
        }
      },
      "appearsIn": []
    },
    "__cancelMethodName": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2234
        },
        "end": {
          "line": 93,
          "column": 42,
          "index": 2272
        }
      },
      "appearsIn": []
    },
    "__eventName": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2278
        },
        "end": {
          "line": 94,
          "column": 35,
          "index": 2309
        }
      },
      "appearsIn": []
    },
    "__checkAttributeNames": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal helper to feature check the attribute names and the event name.",
          "     * As the event can not be detected using the on<name> attribute, we need",
          "     * to guess the event name by checking for the hidden attribute.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper to feature check the attribute names and the event name.\n As the event can not be detected using the on<name> attribute, we need\n to guess the event name by checking for the hidden attribute.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2559
        },
        "end": {
          "line": 138,
          "column": 5,
          "index": 3995
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "isFullScreen": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns whether the page is shown in fullscreen mode or not. If we",
          "     * can not detect it, <code>false</code> will always be returned.",
          "     *",
          "     * @return {Boolean} <code>true</code>, if the page is shown fullscreen",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether the page is shown in fullscreen mode or not. If we\n can not detect it, <code>false</code> will always be returned.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if the page is shown fullscreen",
            "type": "boolean",
            "description": "<code>true</code>, if the page is shown fullscreen"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 146,
          "column": 4,
          "index": 4245
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 4405
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "request": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Request the page to be shown in fullscreen mode. Note that this",
          "     * is only possible when called from within an interactive event",
          "     * handler.",
          "     *",
          "     * It's also worth a note that the user may deny fullscreen mode,",
          "     * so there is no guarantee that it really worked.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Request the page to be shown in fullscreen mode. Note that this\n is only possible when called from within an interactive event\n handler.\n It's also worth a note that the user may deny fullscreen mode,\n so there is no guarantee that it really worked.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 4716
        },
        "end": {
          "line": 164,
          "column": 5,
          "index": 4871
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "cancel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * End the fullscreen mode.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>End the fullscreen mode.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4926
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 5046
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "properties": {}
}