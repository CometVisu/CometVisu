{
  "version": 0.3,
  "lastModified": 1722151627515,
  "lastModifiedIso": "2024-07-28T07:27:07.515Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/webfonts/WebFontLoader.js",
  "type": "class",
  "location": {
    "start": {
      "line": 19,
      "column": 0,
      "index": 460
    },
    "end": {
      "line": 491,
      "column": 3,
      "index": 14650
    }
  },
  "className": "qx.bom.webfonts.WebFontLoader",
  "jsdoc": {
    "raw": [
      "*",
      " * Loads web fonts",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Loads web fonts</p>"
      }
    ]
  },
  "superClass": "qx.core.Object",
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "fontFamily"
      }
    ],
    "location": {
      "start": {
        "line": 22,
        "column": 2,
        "index": 540
      },
      "end": {
        "line": 26,
        "column": 3,
        "index": 644
      }
    }
  },
  "properties": {
    "fontFamily": {
      "location": {
        "start": {
          "line": 30,
          "column": 4,
          "index": 719
        },
        "end": {
          "line": 32,
          "column": 5,
          "index": 760
        }
      },
      "json": {
        "check": "String"
      },
      "jsdoc": {
        "raw": [
          "* The font name that this font is known by "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The font name that this font is known by</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "fontFaces": {
      "location": {
        "start": {
          "line": 35,
          "column": 4,
          "index": 817
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 888
        }
      },
      "json": {
        "nullable": true,
        "apply": "_applyFontFaces"
      },
      "jsdoc": {
        "raw": [
          "* The fontFaces which need to be defined "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The fontFaces which need to be defined</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "css": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 948
        },
        "end": {
          "line": 44,
          "column": 5,
          "index": 1003
        }
      },
      "json": {
        "nullable": true,
        "check": "Array"
      },
      "jsdoc": {
        "raw": [
          "* CSS urls or paths which need to be loaded "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>CSS urls or paths which need to be loaded</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "comparisonString": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1277
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1364
        }
      },
      "json": {
        "check": "String",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Characters that are used to test if the font has loaded properly. These",
          "     * default to \"WEei\" in `qx.bom.webfont.Validator` and can be overridden",
          "     * for certain cases like icon fonts that do not provide the predefined",
          "     * characters.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Characters that are used to test if the font has loaded properly. These\n default to \"WEei\" in <code>qx.bom.webfont.Validator</code> and can be overridden\n for certain cases like icon fonts that do not provide the predefined\n characters.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "version": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 1923
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 2136
        }
      },
      "json": {
        "check": "[[ ObjectMethod Function ]]",
        "nullable": true
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Version identifier that is appended to the URL to be loaded. Fonts",
          "     * that are defined thru themes may be managed by the resource manager.",
          "     * In this case updated fonts persist due to aggressive fontface caching",
          "     * of some browsers. To get around this, set the `version` property to",
          "     * the version of your font. It will be appended to the CSS URL and forces",
          "     * the browser to re-validate.",
          "     *",
          "     * The version needs to be URL friendly, so only characters, numbers,",
          "     * dash and dots are allowed here.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Version identifier that is appended to the URL to be loaded. Fonts\n that are defined thru themes may be managed by the resource manager.\n In this case updated fonts persist due to aggressive fontface caching\n of some browsers. To get around this, set the <code>version</code> property to\n the version of your font. It will be appended to the CSS URL and forces\n the browser to re-validate.\n The version needs to be URL friendly, so only characters, numbers,\n dash and dots are allowed here.</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "members": {
    "__fontFacesQueue": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2344
        },
        "end": {
          "line": 88,
          "column": 26,
          "index": 2366
        }
      },
      "appearsIn": []
    },
    "__fontFacesCreatedPromise": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2372
        },
        "end": {
          "line": 89,
          "column": 35,
          "index": 2403
        }
      },
      "appearsIn": []
    },
    "_validators": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2410
        },
        "end": {
          "line": 91,
          "column": 21,
          "index": 2427
        }
      },
      "appearsIn": []
    },
    "getValidator": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2434
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 3011
        }
      },
      "type": "function",
      "params": [
        {
          "name": "fontWeight"
        },
        {
          "name": "fontStyle"
        }
      ],
      "appearsIn": []
    },
    "load": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Called to load the font details into the browser",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called to load the font details into the browser</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3090
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 4189
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "promiseLoaded": {
      "jsdoc": null,
      "access": "public",
      "location": {
        "start": {
          "line": 148,
          "column": 4,
          "index": 4196
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 4276
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__dequeueFontFaces": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds the font faces in __fontFacesQueue",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the font faces in __fontFacesQueue</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 155,
          "column": 4,
          "index": 4346
        },
        "end": {
          "line": 178,
          "column": 5,
          "index": 5074
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "__addFontFace": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a font face definition to the browser",
          "     *",
          "     * @param {*} fontFace - POJO of from the array in Manifest.json",
          "     * @returns",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a font face definition to the browser</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{*} fontFace - POJO of from the array in Manifest.json",
            "paramName": "fontFace",
            "description": "- POJO of from the array in Manifest.json",
            "type": "*"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": ""
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 186,
          "column": 4,
          "index": 5239
        },
        "end": {
          "line": 297,
          "column": 5,
          "index": 8634
        }
      },
      "type": "function",
      "params": [
        {
          "name": "fontFace",
          "type": "*"
        }
      ],
      "returnType": {},
      "appearsIn": []
    },
    "_applyFontFaces": {
      "jsdoc": {
        "raw": [
          " property apply"
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 300,
          "column": 4,
          "index": 8663
        },
        "end": {
          "line": 313,
          "column": 5,
          "index": 9036
        }
      },
      "type": "function",
      "params": [
        {
          "name": "fontFaces"
        },
        {
          "name": "old"
        }
      ],
      "appearsIn": []
    },
    "_quoteFontFamily": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Makes sure font-family names containing spaces are properly quoted",
          "     *",
          "     * @param familyName {String} A font-family CSS value",
          "     * @return {String} The quoted family name",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Makes sure font-family names containing spaces are properly quoted</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "familyName {String} A font-family CSS value",
            "paramName": "familyName",
            "description": " A font-family CSS value",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The quoted family name",
            "type": "string",
            "description": "The quoted family name"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 321,
          "column": 4,
          "index": 9245
        },
        "end": {
          "line": 323,
          "column": 5,
          "index": 9327
        }
      },
      "type": "function",
      "params": [
        {
          "name": "familyName",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    }
  },
  "statics": {
    "FONT_FORMATS": {
      "jsdoc": {
        "raw": [
          "*",
          "     * List of known font definition formats (i.e. file extensions). Used to",
          "     * identify the type of each font file configured for a web font.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of known font definition formats (i.e. file extensions). Used to\n identify the type of each font file configured for a web font.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 331,
          "column": 4,
          "index": 9514
        },
        "end": {
          "line": 331,
          "column": 56,
          "index": 9566
        }
      },
      "appearsIn": []
    },
    "VALIDATION_TIMEOUT": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Timeout (in ms) to wait before deciding that a web font was not loaded.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Timeout (in ms) to wait before deciding that a web font was not loaded.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 336,
          "column": 4,
          "index": 9668
        },
        "end": {
          "line": 336,
          "column": 28,
          "index": 9692
        }
      },
      "appearsIn": []
    },
    "__preferredFormats": {
      "jsdoc": {
        "raw": [
          "* @type{String[]} array of supported font formats, most preferred first "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String[]} array of supported font formats, most preferred first"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 339,
          "column": 4,
          "index": 9780
        },
        "end": {
          "line": 339,
          "column": 28,
          "index": 9804
        }
      },
      "appearsIn": []
    },
    "__loadedStylesheets": {
      "jsdoc": {
        "raw": [
          "* "
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 342,
          "column": 4,
          "index": 9822
        },
        "end": {
          "line": 342,
          "column": 27,
          "index": 9845
        }
      },
      "appearsIn": []
    },
    "__addedFontFaces": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 343,
          "column": 4,
          "index": 9851
        },
        "end": {
          "line": 343,
          "column": 24,
          "index": 9871
        }
      },
      "appearsIn": []
    },
    "__loaders": {
      "jsdoc": {
        "raw": [
          "* Loader instances indexed by font family name "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loader instances indexed by font family name</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 346,
          "column": 4,
          "index": 9934
        },
        "end": {
          "line": 346,
          "column": 17,
          "index": 9947
        }
      },
      "appearsIn": []
    },
    "getLoader": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Gets/creates a loader",
          "     *",
          "     * @param {String} name font family name",
          "     * @param {Boolean?} create whether to create one if one does not exist (default to false)",
          "     * @returns",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets/creates a loader</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{String} name font family name",
            "paramName": "name",
            "description": "font family name",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{Boolean?} create whether to create one if one does not exist (default to false)",
            "paramName": "create",
            "description": "whether to create one if one does not exist (default to false)",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 355,
          "column": 4,
          "index": 10162
        },
        "end": {
          "line": 362,
          "column": 5,
          "index": 10435
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "create",
          "type": "Boolean",
          "optional": true
        }
      ],
      "returnType": {},
      "appearsIn": []
    },
    "__loadStylesheet": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Adds a stylesheet, once per url",
          "     *",
          "     * @param {String} url",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a stylesheet, once per url</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{String} url",
            "paramName": "url",
            "description": "",
            "type": "string"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 10531
        },
        "end": {
          "line": 376,
          "column": 5,
          "index": 10764
        }
      },
      "type": "function",
      "params": [
        {
          "name": "url",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "createFontLookupKey": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Creates a lookup key to index the created fonts.",
          "     * @param familyName {String} font-family name",
          "     * @param fontWeight {String} the font-weight.",
          "     * @param fontStyle {String} the font-style.",
          "     * @return {string} the font lookup key",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a lookup key to index the created fonts.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "familyName {String} font-family name",
            "paramName": "familyName",
            "description": " font-family name",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "fontWeight {String} the font-weight.",
            "paramName": "fontWeight",
            "description": " the font-weight.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "fontStyle {String} the font-style.",
            "paramName": "fontStyle",
            "description": " the font-style.",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string} the font lookup key",
            "type": "string",
            "description": "the font lookup key"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 385,
          "column": 4,
          "index": 11038
        },
        "end": {
          "line": 393,
          "column": 5,
          "index": 11286
        }
      },
      "type": "function",
      "params": [
        {
          "name": "familyName",
          "type": "string"
        },
        {
          "name": "fontWeight",
          "type": "string"
        },
        {
          "name": "fontStyle",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "__getSourcesMap": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Uses a naive regExp match to determine the format of each defined source",
          "     * file for a webFont. Returns a map with the format names as keys and the",
          "     * corresponding source URLs as values.",
          "     *",
          "     * @param sources {String[]} Array of source URLs",
          "     * @return {Map} Map of formats and URLs",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Uses a naive regExp match to determine the format of each defined source\n file for a webFont. Returns a map with the format names as keys and the\n corresponding source URLs as values.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "sources {String[]} Array of source URLs",
            "paramName": "sources",
            "description": " Array of source URLs",
            "type": "String[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map of formats and URLs",
            "type": "Map<any, any>",
            "description": "Map of formats and URLs"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 403,
          "column": 4,
          "index": 11618
        },
        "end": {
          "line": 415,
          "column": 5,
          "index": 12035
        }
      },
      "type": "function",
      "params": [
        {
          "name": "sources",
          "type": "String[]"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getPreferredFormats": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the preferred font format(s) for the currently used browser. Some",
          "     * browsers support multiple formats, e.g. WOFF and TTF or WOFF and EOT. In",
          "     * those cases, WOFF is considered the preferred format.",
          "     *",
          "     * @return {String[]} List of supported font formats ordered by preference",
          "     * or empty Array if none could be determined",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the preferred font format(s) for the currently used browser. Some\n browsers support multiple formats, e.g. WOFF and TTF or WOFF and EOT. In\n those cases, WOFF is considered the preferred format.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} List of supported font formats ordered by preference\n or empty Array if none could be determined",
            "type": "String[]",
            "description": "List of supported font formats ordered by preference\n or empty Array if none could be determined"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 425,
          "column": 4,
          "index": 12416
        },
        "end": {
          "line": 475,
          "column": 5,
          "index": 14163
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "String[]"
      },
      "appearsIn": []
    },
    "__fixCssText": {
      "jsdoc": {
        "raw": [
          "*",
          "     * IE 6 and 7 omit the trailing quote after the format name when",
          "     * querying cssText. This needs to be fixed before cssText is replaced",
          "     * or all rules will be invalid and no web fonts will work any more.",
          "     *",
          "     * @param cssText {String} CSS text",
          "     * @return {String} Fixed CSS text",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>IE 6 and 7 omit the trailing quote after the format name when\n querying cssText. This needs to be fixed before cssText is replaced\n or all rules will be invalid and no web fonts will work any more.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cssText {String} CSS text",
            "paramName": "cssText",
            "description": " CSS text",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Fixed CSS text",
            "type": "string",
            "description": "Fixed CSS text"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 485,
          "column": 4,
          "index": 14489
        },
        "end": {
          "line": 489,
          "column": 5,
          "index": 14642
        }
      },
      "type": "function",
      "params": [
        {
          "name": "cssText",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    }
  }
}