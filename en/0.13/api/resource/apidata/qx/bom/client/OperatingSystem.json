{
  "className": "qx.bom.client.OperatingSystem",
  "packageName": "qx.bom.client",
  "name": "OperatingSystem",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 815
      },
      "end": {
        "line": 250,
        "column": 3,
        "index": 7371
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class is responsible for checking the operating systems name.\n This class is used by {@link qx.core.Environment} and should not be used\n directly. Please check its class comment for details how to use it.</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "process.*"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "getName": {
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1072
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2926
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks for the name of the operating system.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The name of the operating system.",
            "type": "String",
            "description": " The name of the operating system."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "process.*"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__ids": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2983
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 4481
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maps user agent names to system IDs</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "getVersion": {
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4726
        },
        "end": {
          "line": 179,
          "column": 5,
          "index": 5123
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks for the version of the operating system using the internal map.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The version as strin or an empty string if the version\n   could not be detected.",
            "type": "String",
            "description": " The version as strin or an empty string if the version\n   could not be detected."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__getVersionForDesktopOs": {
      "location": {
        "start": {
          "line": 186,
          "column": 4,
          "index": 5332
        },
        "end": {
          "line": 200,
          "column": 5,
          "index": 5743
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detect OS version for desktop devices</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "userAgent {String} userAgent parameter, needed for detection.",
            "paramName": "userAgent",
            "description": " userAgent parameter, needed for detection.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} version number as string or null.",
            "type": "String",
            "description": " version number as string or null."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getVersionForMobileOs": {
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 5951
        },
        "end": {
          "line": 243,
          "column": 5,
          "index": 7211
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detect OS version for mobile devices</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "userAgent {String} userAgent parameter, needed for detection.",
            "paramName": "userAgent",
            "description": " userAgent parameter, needed for detection.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} version number as string or null.",
            "type": "String",
            "description": " version number as string or null."
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 246,
        "column": 2,
        "index": 7223
      },
      "end": {
        "line": 249,
        "column": 3,
        "index": 7366
      }
    }
  },
  "descendants": []
}