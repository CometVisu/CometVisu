{
  "className": "qx.bom.client.Pdfjs",
  "packageName": "qx.bom.client",
  "name": "Pdfjs",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 56,
        "column": 0,
        "index": 1643
      },
      "end": {
        "line": 100,
        "column": 3,
        "index": 3091
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Exposes PluginDetect<em>PDFjs to qooxdoo.\n Contains detection for PDF.js which is a Portable Document Format (PDF)\n viewer that is built with HTML5. PDF.js is built into Firefox 19+ and\n used as default viewer there. You can enable/disable it via \"about:config\"\n and \"pdfjs.disabled\" (true/false).\n As soon as there is an official way to detect this, which seems to be\n worked on [1][2], we should switch.\n [1] https://bugzilla.mozilla.org/show</em>bug.cgi?id=840439\n [2] https://bugzilla.mozilla.org/show_bug.cgi?id=558184\n This class is used by {@link qx.core.Environment} and should not be used\n directly. Please check its class comment for details how to use it.</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ],
      "@asset": [
        {
          "name": "@asset",
          "body": "qx/static/empty.pdf"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "$.browser"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "getPdfjs": {
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1940
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 2035
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if PDF.js is available.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} The callback function which should be called.",
            "paramName": "callback",
            "description": " The callback function which should be called.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} The context object for the callback function.",
            "paramName": "context",
            "description": " The context object for the callback function.",
            "type": "Object"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__isAvailable": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2286
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2767
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for checking the availability of PDF.js.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} The callback function which should be called.",
            "paramName": "callback",
            "description": " The callback function which should be called.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} The context object for the callback function.",
            "paramName": "context",
            "description": " The context object for the callback function.",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getPluginDetect": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2908
        },
        "end": {
          "line": 91,
          "column": 27,
          "index": 2931
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the original (third-party) PluginDetect object.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The PluginDetect object",
            "type": "Object",
            "description": " The PluginDetect object"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 97,
        "column": 2,
        "index": 2999
      },
      "end": {
        "line": 99,
        "column": 3,
        "index": 3087
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Register PDF.js detection asynchronously.</p>"
        }
      ]
    }
  },
  "descendants": []
}