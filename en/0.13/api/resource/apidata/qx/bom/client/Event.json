{
  "version": 0.3,
  "lastModified": 1735383687273,
  "lastModifiedIso": "2024-12-28T11:01:27.273Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/client/Event.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 28,
      "column": 0,
      "index": 746
    },
    "end": {
      "line": 270,
      "column": 3,
      "index": 7425
    }
  },
  "className": "qx.bom.client.Event",
  "jsdoc": {
    "raw": [
      "*",
      " * Internal class which contains the checks used by {@link qx.core.Environment}.",
      " * All checks in here are marked as internal which means you should never use",
      " * them directly.",
      " *",
      " * This class should contain all checks about events.",
      " *",
      " * @internal",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Internal class which contains the checks used by {@link qx.core.Environment}.\n All checks in here are marked as internal which means you should never use\n them directly.\n This class should contain all checks about events.</p>"
      }
    ],
    "@internal": [
      {
        "name": "@internal",
        "body": ""
      }
    ]
  },
  "statics": {
    "getTouch": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if touch events are supported.",
          "     *",
          "     * @internal",
          "     * @return {Boolean} <code>true</code> if touch events are supported.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if touch events are supported.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if touch events are supported.",
            "type": "boolean",
            "description": "<code>true</code> if touch events are supported."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 967
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1024
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getMsPointer": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if MSPointer events are available.",
          "     *",
          "     * @internal",
          "     * @return {Boolean} <code>true</code> if pointer events are supported.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if MSPointer events are available.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if pointer events are supported.",
            "type": "boolean",
            "description": "<code>true</code> if pointer events are supported."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1196
        },
        "end": {
          "line": 60,
          "column": 5,
          "index": 1658
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getHelp": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the proprietary <code>help</code> event is available.",
          "     *",
          "     * @internal",
          "     * @return {Boolean} <code>true</code> if the \"help\" event is supported.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the proprietary <code>help</code> event is available.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the \"help\" event is supported.",
            "type": "boolean",
            "description": "<code>true</code> if the \"help\" event is supported."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1853
        },
        "end": {
          "line": 70,
          "column": 5,
          "index": 1905
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getHashChange": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the <code>hashchange</code> event is available",
          "     *",
          "     * @internal",
          "     * @return {Boolean} <code>true</code> if the \"hashchange\" event is supported.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the <code>hashchange</code> event is available</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the \"hashchange\" event is supported.",
            "type": "boolean",
            "description": "<code>true</code> if the \"hashchange\" event is supported."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2099
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2464
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getDispatchEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the DOM2 dispatchEvent method is available",
          "     * @return {Boolean} <code>true</code> if dispatchEvent is supported.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the DOM2 dispatchEvent method is available</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if dispatchEvent is supported.",
            "type": "boolean",
            "description": "<code>true</code> if dispatchEvent is supported."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2621
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2705
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getCustomEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the CustomEvent constructor is available and supports",
          "     * custom event types.",
          "     *",
          "     * @return {Boolean} <code>true</code> if Custom Events are available",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the CustomEvent constructor is available and supports\n custom event types.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if Custom Events are available",
            "type": "boolean",
            "description": "<code>true</code> if Custom Events are available"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2907
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3117
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getMouseEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the MouseEvent constructor is available and supports",
          "     * custom event types.",
          "     *",
          "     * @return {Boolean} <code>true</code> if Mouse Events are available",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the MouseEvent constructor is available and supports\n custom event types.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if Mouse Events are available",
            "type": "boolean",
            "description": "<code>true</code> if Mouse Events are available"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3317
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3524
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getMouseCreateEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the event type used in pointer layer to create mouse events.",
          "     *",
          "     * @return {String} Either <code>MouseEvents</code> or <code>UIEvents</code>",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the event type used in pointer layer to create mouse events.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Either <code>MouseEvents</code> or <code>UIEvents</code>",
            "type": "string",
            "description": "Either <code>MouseEvents</code> or <code>UIEvents</code>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 140,
          "column": 4,
          "index": 3711
        },
        "end": {
          "line": 173,
          "column": 5,
          "index": 4477
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getMouseWheel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the MouseWheel event is available and on which target.",
          "     *",
          "     * @param win {Window ? null} An optional window instance to check.",
          "     * @return {Map} A map containing two values: type and target.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the MouseWheel event is available and on which target.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {Window ? null} An optional window instance to check.",
            "paramName": "win",
            "description": " An optional window instance to check.",
            "optional": true,
            "defaultValue": "null",
            "type": "Window"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map containing two values: type and target.",
            "type": "Map<any, any>",
            "description": "A map containing two values: type and target."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 4718
        },
        "end": {
          "line": 207,
          "column": 5,
          "index": 5447
        }
      },
      "type": "function",
      "params": [
        {
          "name": "win",
          "type": "Window",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "returnType": {
        "type": "Map<any, any>"
      },
      "appearsIn": []
    },
    "getAuxclickEvent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Detects if the engine/browser supports auxclick events",
          "     *",
          "     * See https://github.com/qooxdoo/qooxdoo/issues/9268",
          "     *",
          "     * @return {Boolean} <code>true</code> if auxclick events are supported.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects if the engine/browser supports auxclick events\n See https://github.com/qooxdoo/qooxdoo/issues/9268</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if auxclick events are supported.",
            "type": "boolean",
            "description": "<code>true</code> if auxclick events are supported."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 216,
          "column": 4,
          "index": 5681
        },
        "end": {
          "line": 223,
          "column": 5,
          "index": 5878
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getPassive": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks whether the browser supports passive event handlers.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether the browser supports passive event handlers.</p>"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 228,
          "column": 4,
          "index": 5968
        },
        "end": {
          "line": 250,
          "column": 5,
          "index": 6590
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}