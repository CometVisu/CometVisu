{
  "version": 0.3,
  "lastModified": 1726088852689,
  "lastModifiedIso": "2024-09-11T21:07:32.689Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/client/Plugin.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 28,
      "column": 0,
      "index": 830
    },
    "end": {
      "line": 439,
      "column": 3,
      "index": 12849
    }
  },
  "className": "qx.bom.client.Plugin",
  "jsdoc": {
    "raw": [
      "*",
      " * Contains detection for QuickTime, Windows Media, DivX, Silverlight and gears.",
      " * If no version could be detected the version is set to an empty string as",
      " * default.",
      " *",
      " * This class is used by {@link qx.core.Environment} and should not be used",
      " * directly. Please check its class comment for details how to use it.",
      " *",
      " * @internal",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Contains detection for QuickTime, Windows Media, DivX, Silverlight and gears.\n If no version could be detected the version is set to an empty string as\n default.\n This class is used by {@link qx.core.Environment} and should not be used\n directly. Please check its class comment for details how to use it.</p>"
      }
    ],
    "@internal": [
      {
        "name": "@internal",
        "body": ""
      }
    ]
  },
  "statics": {
    "getGears": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks for the availability of google gears plugin.",
          "     *",
          "     * @internal",
          "     * @return {Boolean} <code>true</code> if gears is available",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks for the availability of google gears plugin.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if gears is available",
            "type": "boolean",
            "description": "<code>true</code> if gears is available"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 1057
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1130
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getActiveX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks for ActiveX availability.",
          "     *",
          "     * @internal",
          "     * @return {Boolean} <code>true</code> if ActiveX is available",
          "     *",
          "     * @ignore(window.ActiveXObject)",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks for ActiveX availability.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if ActiveX is available",
            "type": "boolean",
            "description": "<code>true</code> if ActiveX is available"
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "window.ActiveXObject"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1328
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1851
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getSkype": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks for Skypes 'Click to call' availability.",
          "     *",
          "     * @internal",
          "     * @return {Boolean} <code>true</code> if the plugin is available.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks for Skypes 'Click to call' availability.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the plugin is available.",
            "type": "boolean",
            "description": "<code>true</code> if the plugin is available."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2024
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2655
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "__db": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Database of supported features.",
          "     * Filled with additional data at initialization",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Database of supported features.\n Filled with additional data at initialization</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2770
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3709
        }
      },
      "appearsIn": []
    },
    "getQuicktimeVersion": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fetches the version of the quicktime plugin.",
          "     * @return {String} The version of the plugin, if available,",
          "     *   an empty string otherwise",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fetches the version of the quicktime plugin.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The version of the plugin, if available,\n   an empty string otherwise",
            "type": "string",
            "description": "The version of the plugin, if available,\n   an empty string otherwise"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 3901
        },
        "end": {
          "line": 145,
          "column": 5,
          "index": 4065
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getWindowsMediaVersion": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fetches the version of the windows media plugin.",
          "     * @return {String} The version of the plugin, if available,",
          "     *   an empty string otherwise",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fetches the version of the windows media plugin.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The version of the plugin, if available,\n   an empty string otherwise",
            "type": "string",
            "description": "The version of the plugin, if available,\n   an empty string otherwise"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4261
        },
        "end": {
          "line": 160,
          "column": 5,
          "index": 4460
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getDivXVersion": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fetches the version of the divx plugin.",
          "     * @return {String} The version of the plugin, if available,",
          "     *   an empty string otherwise",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fetches the version of the divx plugin.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The version of the plugin, if available,\n   an empty string otherwise",
            "type": "string",
            "description": "The version of the plugin, if available,\n   an empty string otherwise"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4647
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4801
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getSilverlightVersion": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fetches the version of the silverlight plugin.",
          "     * @return {String} The version of the plugin, if available,",
          "     *   an empty string otherwise",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fetches the version of the silverlight plugin.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The version of the plugin, if available,\n   an empty string otherwise",
            "type": "string",
            "description": "The version of the plugin, if available,\n   an empty string otherwise"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 179,
          "column": 4,
          "index": 4995
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 5163
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getPdfVersion": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Fetches the version of the pdf plugin.",
          "     *",
          "     * There are two built-in PDF viewer shipped with browsers:",
          "     *",
          "     * <ul>",
          "     *  <li>Chrome PDF Viewer</li>",
          "     *  <li>PDF.js (Firefox)</li>",
          "     * </ul>",
          "     *",
          "     * While the Chrome PDF Viewer is implemented as plugin and therefore",
          "     * detected by this method PDF.js is <strong>not</strong>.",
          "     *",
          "     * See the dedicated environment key (<em>plugin.pdfjs</em>) instead,",
          "     * which you might check additionally.",
          "     *",
          "     * @return {String} The version of the plugin, if available,",
          "     *  an empty string otherwise",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fetches the version of the pdf plugin.\n There are two built-in PDF viewer shipped with browsers:\n </p>\n<ul>\n  <li>Chrome PDF Viewer</li>\n  <li>PDF.js (Firefox)</li>\n </ul>\n<p>While the Chrome PDF Viewer is implemented as plugin and therefore\n detected by this method PDF.js is <strong>not</strong>.\n See the dedicated environment key (<em>plugin.pdfjs</em>) instead,\n which you might check additionally.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The version of the plugin, if available,\n  an empty string otherwise",
            "type": "string",
            "description": "The version of the plugin, if available,\n  an empty string otherwise"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 5795
        },
        "end": {
          "line": 207,
          "column": 5,
          "index": 5947
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "getQuicktime": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the quicktime plugin is available.",
          "     * @return {Boolean} <code>true</code> if the plugin is available",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the quicktime plugin is available.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the plugin is available",
            "type": "boolean",
            "description": "<code>true</code> if the plugin is available"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 214,
          "column": 4,
          "index": 6109
        },
        "end": {
          "line": 217,
          "column": 5,
          "index": 6267
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getWindowsMedia": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the windows media plugin is available.",
          "     * @return {Boolean} <code>true</code> if the plugin is available",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the windows media plugin is available.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the plugin is available",
            "type": "boolean",
            "description": "<code>true</code> if the plugin is available"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 224,
          "column": 4,
          "index": 6433
        },
        "end": {
          "line": 231,
          "column": 5,
          "index": 6626
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getDivX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the divx plugin is available.",
          "     * @return {Boolean} <code>true</code> if the plugin is available",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the divx plugin is available.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the plugin is available",
            "type": "boolean",
            "description": "<code>true</code> if the plugin is available"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 238,
          "column": 4,
          "index": 6783
        },
        "end": {
          "line": 241,
          "column": 5,
          "index": 6931
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getSilverlight": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the silverlight plugin is available.",
          "     * @return {Boolean} <code>true</code> if the plugin is available",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the silverlight plugin is available.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the plugin is available",
            "type": "boolean",
            "description": "<code>true</code> if the plugin is available"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 248,
          "column": 4,
          "index": 7095
        },
        "end": {
          "line": 251,
          "column": 5,
          "index": 7257
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getPdf": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the pdf plugin is available.",
          "     *",
          "     * There are two built-in PDF viewer shipped with browsers:",
          "     *",
          "     * <ul>",
          "     *  <li>Chrome PDF Viewer</li>",
          "     *  <li>PDF.js (Firefox)</li>",
          "     * </ul>",
          "     *",
          "     * While the Chrome PDF Viewer is implemented as plugin and therefore",
          "     * detected by this method PDF.js is <strong>not</strong>.",
          "     *",
          "     * See the dedicated environment key (<em>plugin.pdfjs</em>) instead,",
          "     * which you might check additionally.",
          "     *",
          "     * @return {Boolean} <code>true</code> if the plugin is available",
          "     * @internal",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the pdf plugin is available.\n There are two built-in PDF viewer shipped with browsers:\n </p>\n<ul>\n  <li>Chrome PDF Viewer</li>\n  <li>PDF.js (Firefox)</li>\n </ul>\n<p>While the Chrome PDF Viewer is implemented as plugin and therefore\n detected by this method PDF.js is <strong>not</strong>.\n See the dedicated environment key (<em>plugin.pdfjs</em>) instead,\n which you might check additionally.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the plugin is available",
            "type": "boolean",
            "description": "<code>true</code> if the plugin is available"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 272,
          "column": 4,
          "index": 7860
        },
        "end": {
          "line": 275,
          "column": 5,
          "index": 8006
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "__getVersion": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal helper for getting the version of a given plugin.",
          "     *",
          "     * @param activeXName {String} The name which should be used to generate",
          "     *   the test ActiveX Object.",
          "     * @param pluginNames {Array} The names with which the plugins are listed in",
          "     *   the navigator.plugins list.",
          "     * @param forceActiveX {Boolean?false} Force detection using ActiveX",
          "     *   for IE11 plugins that aren't listed in navigator.plugins",
          "     * @return {String} The version of the plugin as string.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for getting the version of a given plugin.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "activeXName {String} The name which should be used to generate\n   the test ActiveX Object.",
            "paramName": "activeXName",
            "description": " The name which should be used to generate\n   the test ActiveX Object.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "pluginNames {Array} The names with which the plugins are listed in\n   the navigator.plugins list.",
            "paramName": "pluginNames",
            "description": " The names with which the plugins are listed in\n   the navigator.plugins list.",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "forceActiveX {Boolean?false} Force detection using ActiveX\n   for IE11 plugins that aren't listed in navigator.plugins",
            "paramName": "forceActiveX",
            "description": " Force detection using ActiveX\n   for IE11 plugins that aren't listed in navigator.plugins",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The version of the plugin as string.",
            "type": "string",
            "description": "The version of the plugin as string."
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 288,
          "column": 4,
          "index": 8531
        },
        "end": {
          "line": 359,
          "column": 5,
          "index": 10385
        }
      },
      "type": "function",
      "params": [
        {
          "name": "activeXName",
          "type": "string"
        },
        {
          "name": "pluginNames",
          "type": "Array<any>"
        },
        {
          "name": "forceActiveX",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "false"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "__isAvailable": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal helper for getting the availability of a given plugin.",
          "     *",
          "     * @param activeXName {String} The name which should be used to generate",
          "     *   the test ActiveX Object.",
          "     * @param pluginNames {Array} The names with which the plugins are listed in",
          "     *   the navigator.plugins list.",
          "     * @param forceActiveX {Boolean?false} Force detection using ActiveX",
          "     *   for IE11 plugins that aren't listed in navigator.plugins",
          "     * @return {Boolean} <code>true</code>, if the plugin available",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for getting the availability of a given plugin.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "activeXName {String} The name which should be used to generate\n   the test ActiveX Object.",
            "paramName": "activeXName",
            "description": " The name which should be used to generate\n   the test ActiveX Object.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "pluginNames {Array} The names with which the plugins are listed in\n   the navigator.plugins list.",
            "paramName": "pluginNames",
            "description": " The names with which the plugins are listed in\n   the navigator.plugins list.",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "forceActiveX {Boolean?false} Force detection using ActiveX\n   for IE11 plugins that aren't listed in navigator.plugins",
            "paramName": "forceActiveX",
            "description": " Force detection using ActiveX\n   for IE11 plugins that aren't listed in navigator.plugins",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if the plugin available",
            "type": "boolean",
            "description": "<code>true</code>, if the plugin available"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 372,
          "column": 4,
          "index": 10922
        },
        "end": {
          "line": 409,
          "column": 5,
          "index": 11805
        }
      },
      "type": "function",
      "params": [
        {
          "name": "activeXName",
          "type": "string"
        },
        {
          "name": "pluginNames",
          "type": "Array<any>"
        },
        {
          "name": "forceActiveX",
          "type": "Boolean",
          "optional": true,
          "defaultValue": "false"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}