{
  "version": 0.3,
  "lastModified": 1717235171950,
  "lastModifiedIso": "2024-06-01T09:46:11.950Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/PageVisibility.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 25,
      "column": 0,
      "index": 715
    },
    "end": {
      "line": 127,
      "column": 3,
      "index": 3580
    }
  },
  "className": "qx.bom.PageVisibility",
  "jsdoc": {
    "raw": [
      "*",
      " * This class offers a constant API over the Page Visibility Spec:",
      " * http://www.w3.org/TR/page-visibility/",
      " *",
      " * It forwards all the browsers support and provides always a fallback which is",
      " * of course visible all the time.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>This class offers a constant API over the Page Visibility Spec:\n http://www.w3.org/TR/page-visibility/\n It forwards all the browsers support and provides always a fallback which is\n of course visible all the time.</p>"
      }
    ]
  },
  "superClass": "qx.event.Emitter",
  "statics": {
    "getInstance": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get an instance of the PageVisibility object using the default document.",
          "     * @return {qx.bom.PageVisibility} An instance of this class.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get an instance of the PageVisibility object using the default document.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.PageVisibility} An instance of this class.",
            "type": "qx.bom.PageVisibility",
            "description": "An instance of this class."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 970
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1114
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.bom.PageVisibility"
      },
      "appearsIn": []
    }
  },
  "construct": {
    "type": "function",
    "params": [
      {
        "name": "document"
      }
    ],
    "location": {
      "start": {
        "line": 44,
        "column": 2,
        "index": 1195
      },
      "end": {
        "line": 54,
        "column": 3,
        "index": 1466
      }
    }
  },
  "events": {
    "change": {
      "type": "Event",
      "jsdoc": {
        "raw": [
          "*",
          "     * The change event for the page visibility.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The change event for the page visibility.</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1550
        },
        "end": {
          "line": 60,
          "column": 19,
          "index": 1565
        }
      }
    }
  },
  "members": {
    "__doc": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1589
        },
        "end": {
          "line": 64,
          "column": 15,
          "index": 1600
        }
      },
      "appearsIn": []
    },
    "__hiddenAttr": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1606
        },
        "end": {
          "line": 65,
          "column": 22,
          "index": 1624
        }
      },
      "appearsIn": []
    },
    "__visibilityAttr": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1630
        },
        "end": {
          "line": 66,
          "column": 26,
          "index": 1652
        }
      },
      "appearsIn": []
    },
    "__eventName": {
      "jsdoc": null,
      "access": "private",
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1658
        },
        "end": {
          "line": 67,
          "column": 21,
          "index": 1675
        }
      },
      "appearsIn": []
    },
    "__checkAttributeNames": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Internal helper to feature check the attribute names and the event name.",
          "     * As the event can not be detected using the on<name> attribute, we need",
          "     * to guess the event name by checking for the hidden attribute.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper to feature check the attribute names and the event name.\n As the event can not be detected using the on<name> attribute, we need\n to guess the event name by checking for the hidden attribute.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 1925
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2980
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "isHidden": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns weather the page is hidden or not. If we can not detect it,",
          "     * <code>false</code> will always be returned.",
          "     *",
          "     * @return {Boolean} <code>true</code>, if the page is hidden",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns weather the page is hidden or not. If we can not detect it,\n <code>false</code> will always be returned.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if the page is hidden",
            "type": "boolean",
            "description": "<code>true</code>, if the page is hidden"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 3202
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3266
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "getVisibilityState": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the visibility state of the page. If we can not detect it,",
          "     * <code>\"visible\"</code> will always be returned.",
          "     *",
          "     * @return {String} The state of the page visibility.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the visibility state of the page. If we can not detect it,\n <code>\"visible\"</code> will always be returned.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The state of the page visibility.",
            "type": "string",
            "description": "The state of the page visibility."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3483
        },
        "end": {
          "line": 125,
          "column": 5,
          "index": 3572
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    }
  },
  "properties": {}
}