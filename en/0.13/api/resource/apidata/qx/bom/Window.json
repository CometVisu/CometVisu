{
  "version": 0.3,
  "lastModified": 1726088853633,
  "lastModifiedIso": "2024-09-11T21:07:33.633Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/Window.js",
  "type": "class",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 545
    },
    "end": {
      "line": 376,
      "column": 3,
      "index": 10517
    }
  },
  "className": "qx.bom.Window",
  "jsdoc": {
    "raw": [
      "*",
      " * Includes library functions to work with browser windows",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Includes library functions to work with browser windows</p>"
      }
    ]
  },
  "statics": {
    "__blocker": {
      "jsdoc": {
        "raw": [
          "* Internal blocker instance for all browsers which need an additional",
          "     * blocker for modal windows because they do not support it natively.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal blocker instance for all browsers which need an additional\n blocker for modal windows because they do not support it natively.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 27,
          "column": 4,
          "index": 755
        },
        "end": {
          "line": 27,
          "column": 19,
          "index": 770
        }
      },
      "appearsIn": []
    },
    "__blockerWindow": {
      "jsdoc": {
        "raw": [
          "* Window handle which is currently blocked. "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Window handle which is currently blocked.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 30,
          "column": 4,
          "index": 830
        },
        "end": {
          "line": 30,
          "column": 25,
          "index": 851
        }
      },
      "appearsIn": []
    },
    "__timer": {
      "jsdoc": {
        "raw": [
          "* Timer instance to poll for unblocking if the modal window was closed "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Timer instance to poll for unblocking if the modal window was closed</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 938
        },
        "end": {
          "line": 33,
          "column": 17,
          "index": 951
        }
      },
      "appearsIn": []
    },
    "__modalOptions": {
      "jsdoc": {
        "raw": [
          "* Supported options and their mapping to window options "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Supported options and their mapping to window options</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 1023
        },
        "end": {
          "line": 43,
          "column": 5,
          "index": 1211
        }
      },
      "appearsIn": []
    },
    "__modelessOptions": {
      "jsdoc": {
        "raw": [
          "* Supported options for modeless windows "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Supported options for modeless windows</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1268
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1488
        }
      },
      "appearsIn": []
    },
    "__isCapableToOpenModalWindows": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether the browser can open native modal window.",
          "     *",
          "     * @return {Boolean} Capability of open modal windows",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the browser can open native modal window.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Capability of open modal windows",
            "type": "boolean",
            "description": "Capability of open modal windows"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1633
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 1717
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "open": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Opens a native window with the given options.",
          "     *",
          "     * Modal windows can have the following options:",
          "     *",
          "     *   * top",
          "     *",
          "     *   * left",
          "     *",
          "     *   * width",
          "     *",
          "     *   * height",
          "     *",
          "     *   * scrollbars",
          "     *",
          "     *   * resizable",
          "     *",
          "     * Modeless windows have the following options:",
          "     *",
          "     *   * top",
          "     *",
          "     *   * left",
          "     *",
          "     *   * width",
          "     *",
          "     *   * height",
          "     *",
          "     *   * dependent",
          "     *",
          "     *   * resizable",
          "     *",
          "     *   * status",
          "     *",
          "     *   * location",
          "     *",
          "     *   * menubar",
          "     *",
          "     *   * scrollbars",
          "     *",
          "     *   * toolbar",
          "     *",
          "     * Except of dimension and location options all other options are boolean",
          "     * values.",
          "     *",
          "     * *Important infos for native modal windows*",
          "     *",
          "     * If you want to reference the opened window from within the native modal",
          "     * window you need to use",
          "     *",
          "     * <pre class='javascript'>",
          "     * var opener = window.dialogArguments[0];",
          "     * </pre>",
          "     *",
          "     * since a reference to the opener is passed automatically to the modal window.",
          "     *",
          "     * *Passing window arguments*",
          "     *",
          "     * This is only working if the page of the modal window is from the same origin.",
          "     * This is at least true for Firefox browsers.",
          "     *",
          "     * @param url {String} URL of the window",
          "     * @param name {String} Name of the window",
          "     * @param options {Map} Window options",
          "     * @param modal {Boolean} Whether the window should be opened modal",
          "     * @param useNativeModalDialog {Boolean} controls if modal windows are opened",
          "     *                                       using the native method or a blocker",
          "     *                                       should be used to fake modality.",
          "     *                                       Default is <b>true</b>",
          "     * @param listener {Function ?} listener function for onload event on the new window",
          "     * @param self {Object ?} Reference to the 'this' variable inside",
          "     *         the event listener. When not given, 'this' variable will be the new window",
          "     * @return {Window} native window object",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Opens a native window with the given options.\n Modal windows can have the following options:</p>\n<ul>\n<li>top</li>\n<li>left</li>\n<li>width</li>\n<li>height</li>\n<li>scrollbars</li>\n<li>resizable\nModeless windows have the following options:</li>\n<li>top</li>\n<li>left</li>\n<li>width</li>\n<li>height</li>\n<li>dependent</li>\n<li>resizable</li>\n<li>status</li>\n<li>location</li>\n<li>menubar</li>\n<li>scrollbars</li>\n<li><p>toolbar\nExcept of dimension and location options all other options are boolean\nvalues.\n<em>Important infos for native modal windows</em>\nIf you want to reference the opened window from within the native modal\nwindow you need to use</p></li>\n</ul>\n<pre class='javascript'>\n var opener = window.dialogArguments[0];\n </pre>\n<p>since a reference to the opener is passed automatically to the modal window.\n<em>Passing window arguments</em>\n This is only working if the page of the modal window is from the same origin.\n This is at least true for Firefox browsers.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "url {String} URL of the window",
            "paramName": "url",
            "description": " URL of the window",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "name {String} Name of the window",
            "paramName": "name",
            "description": " Name of the window",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "options {Map} Window options",
            "paramName": "options",
            "description": " Window options",
            "type": "Map<any, any>"
          },
          {
            "name": "@param",
            "body": "modal {Boolean} Whether the window should be opened modal",
            "paramName": "modal",
            "description": " Whether the window should be opened modal",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "useNativeModalDialog {Boolean} controls if modal windows are opened\n                                       using the native method or a blocker\n                                       should be used to fake modality.\n                                       Default is <b>true</b>",
            "paramName": "useNativeModalDialog",
            "description": " controls if modal windows are opened\n                                       using the native method or a blocker\n                                       should be used to fake modality.\n                                       Default is <b>true</b>",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "listener {Function ?} listener function for onload event on the new window",
            "paramName": "listener",
            "description": " listener function for onload event on the new window",
            "optional": true,
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "self {Object ?} Reference to the 'this' variable inside\n         the event listener. When not given, 'this' variable will be the new window",
            "paramName": "self",
            "description": " Reference to the 'this' variable inside\n         the event listener. When not given, 'this' variable will be the new window",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Window} native window object",
            "type": "qx.bom.Window",
            "description": "native window object"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 3812
        },
        "end": {
          "line": 200,
          "column": 5,
          "index": 5571
        }
      },
      "type": "function",
      "params": [
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "options",
          "type": "Map<any, any>"
        },
        {
          "name": "modal",
          "type": "boolean"
        },
        {
          "name": "useNativeModalDialog",
          "type": "boolean"
        },
        {
          "name": "listener",
          "type": "Function",
          "optional": true
        },
        {
          "name": "self",
          "type": "Object",
          "optional": true
        }
      ],
      "returnType": {
        "type": "qx.bom.Window"
      },
      "appearsIn": []
    },
    "__generateConfigurationString": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the given config as string for direct use for the \"window.open\" method",
          "     *",
          "     * @param options {Array} Array with all configuration options",
          "     * @param modality {Boolean} whether the config should be for a modal window",
          "     *",
          "     * @return {String} configuration as string representation",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the given config as string for direct use for the \"window.open\" method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "options {Array} Array with all configuration options",
            "paramName": "options",
            "description": " Array with all configuration options",
            "type": "Array<any>"
          },
          {
            "name": "@param",
            "body": "modality {Boolean} whether the config should be for a modal window",
            "paramName": "modality",
            "description": " whether the config should be for a modal window",
            "type": "boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} configuration as string representation",
            "type": "string",
            "description": "configuration as string representation"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 210,
          "column": 4,
          "index": 5905
        },
        "end": {
          "line": 254,
          "column": 5,
          "index": 7285
        }
      },
      "type": "function",
      "params": [
        {
          "name": "options",
          "type": "Array<any>"
        },
        {
          "name": "modality",
          "type": "boolean"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "__checkForUnblocking": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Interval method which checks if the native window was closed to also",
          "     * stop the associated timer.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Interval method which checks if the native window was closed to also\n stop the associated timer.</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 7418
        },
        "end": {
          "line": 265,
          "column": 5,
          "index": 7571
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "getBlocker": {
      "jsdoc": {
        "raw": [
          "*",
          "     * If a modal window is opened with the option",
          "     *",
          "     * <pre class='javascript'>",
          "     * useNativeModalWindow = false;",
          "     * </pre>",
          "     *",
          "     * an instance of <b>qx.bom.Blocker</b> is used to fake modality. This method",
          "     * can be used to get a reference to the blocker to style it.",
          "     *",
          "     * @return {qx.bom.Blocker?null} Blocker instance or null if no blocker is used",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>If a modal window is opened with the option\n </p>\n<pre class='javascript'>\n useNativeModalWindow = false;\n </pre>\n<p>an instance of <b>qx.bom.Blocker</b> is used to fake modality. This method\n can be used to get a reference to the blocker to style it.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.Blocker?null} Blocker instance or null if no blocker is used",
            "type": "qx.bom.Blocker?null",
            "description": "Blocker instance or null if no blocker is used"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 279,
          "column": 4,
          "index": 7981
        },
        "end": {
          "line": 285,
          "column": 5,
          "index": 8122
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "qx.bom.Blocker?null"
      },
      "appearsIn": []
    },
    "close": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Closes the given window",
          "     *",
          "     * @param win {Window} Native window object",
          "     * @return {var} The return value (if any) of the window's native",
          "     * <code>close</code> method",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Closes the given window</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {Window} Native window object",
            "paramName": "win",
            "description": " Native window object",
            "type": "qx.bom.Window"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The return value (if any) of the window's native\n <code>close</code> method",
            "type": "var",
            "description": "The return value (if any) of the window's native\n <code>close</code> method"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 294,
          "column": 4,
          "index": 8334
        },
        "end": {
          "line": 298,
          "column": 5,
          "index": 8405
        }
      },
      "type": "function",
      "params": [
        {
          "name": "win",
          "type": "qx.bom.Window"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": []
    },
    "isClosed": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Checks if the window is closed",
          "     *",
          "     * @param win {Window} Native window object",
          "     * @return {Boolean} Closed state",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the window is closed</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {Window} Native window object",
            "paramName": "win",
            "description": " Native window object",
            "type": "qx.bom.Window"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Closed state",
            "type": "boolean",
            "description": "Closed state"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 306,
          "column": 4,
          "index": 8559
        },
        "end": {
          "line": 316,
          "column": 5,
          "index": 8722
        }
      },
      "type": "function",
      "params": [
        {
          "name": "win",
          "type": "qx.bom.Window"
        }
      ],
      "returnType": {
        "type": "boolean"
      },
      "appearsIn": []
    },
    "moveTo": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Moving an opened window is not allowed in the most browsers anymore.",
          "     *",
          "     * @param win {Window} Native window object",
          "     * @param top {Integer} Y-coordinate",
          "     * @param left {Integer} X-coordinate",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Moving an opened window is not allowed in the most browsers anymore.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {Window} Native window object",
            "paramName": "win",
            "description": " Native window object",
            "type": "qx.bom.Window"
          },
          {
            "name": "@param",
            "body": "top {Integer} Y-coordinate",
            "paramName": "top",
            "description": " Y-coordinate",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "left {Integer} X-coordinate",
            "paramName": "left",
            "description": " X-coordinate",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 325,
          "column": 4,
          "index": 8959
        },
        "end": {
          "line": 345,
          "column": 5,
          "index": 9608
        }
      },
      "type": "function",
      "params": [
        {
          "name": "win",
          "type": "qx.bom.Window"
        },
        {
          "name": "top",
          "type": "Integer"
        },
        {
          "name": "left",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    },
    "resizeTo": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Resizing an opened window is not allowed in the most browsers anymore.",
          "     *",
          "     * @param win {Window} Native window object",
          "     * @param width {Integer} New width",
          "     * @param height {Integer} New height",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resizing an opened window is not allowed in the most browsers anymore.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {Window} Native window object",
            "paramName": "win",
            "description": " Native window object",
            "type": "qx.bom.Window"
          },
          {
            "name": "@param",
            "body": "width {Integer} New width",
            "paramName": "width",
            "description": " New width",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "height {Integer} New height",
            "paramName": "height",
            "description": " New height",
            "type": "Integer"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 354,
          "column": 4,
          "index": 9846
        },
        "end": {
          "line": 374,
          "column": 5,
          "index": 10509
        }
      },
      "type": "function",
      "params": [
        {
          "name": "win",
          "type": "qx.bom.Window"
        },
        {
          "name": "width",
          "type": "Integer"
        },
        {
          "name": "height",
          "type": "Integer"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}