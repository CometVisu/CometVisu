{
  "className": "qx.bom.element.AnimationJs",
  "packageName": "qx.bom.element",
  "name": "AnimationJs",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0,
        "index": 966
      },
      "end": {
        "line": 581,
        "column": 3,
        "index": 18715
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class offers the same API as the CSS3 animation layer in\n {@link qx.bom.element.AnimationCss} but uses JavaScript to fake the behavior.\n {@link qx.bom.element.Animation} is the class, which takes care of the\n feature detection for CSS animations and decides which implementation\n (CSS or JavaScript) should be used. Most likely, this implementation should\n be the one to use.</p>"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.bom.element.Style.*"
        }
      ],
      "@use": [
        {
          "name": "@use",
          "body": "qx.bom.element.AnimationJs#play"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "__maxStepTime": {
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 1096
        },
        "end": {
          "line": 36,
          "column": 21,
          "index": 1113
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The maximal time a frame should take.</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__units": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1168
        },
        "end": {
          "line": 41,
          "column": 66,
          "index": 1230
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The supported CSS units.</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__transitionKeys": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1278
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1382
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The used keys for transforms.</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "animate": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1870
        },
        "end": {
          "line": 63,
          "column": 5,
          "index": 1960
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This is the main function to start the animation. For further details,\n take a look at the documentation of the wrapper\n {@link qx.bom.element.Animation}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\n   override the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\n   override the duration given in the description.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "animateReverse": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2465
        },
        "end": {
          "line": 77,
          "column": 5,
          "index": 2561
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This is the main function to start the animation in reversed mode.\n For further details, take a look at the documentation of the wrapper\n {@link qx.bom.element.Animation}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\n   override the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\n   override the duration given in the description.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_animate": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 3050
        },
        "end": {
          "line": 145,
          "column": 5,
          "index": 4417
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to start the animation, either in reversed order or not.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\n   override the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\n   override the duration given in the description.",
            "optional": true,
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "reverse {Boolean} <code>true</code>, if the animation should be\n   reversed.",
            "paramName": "reverse",
            "description": " <code>true</code>, if the animation should be\n   reversed.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__normalizeKeyFrames": {
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4640
        },
        "end": {
          "line": 199,
          "column": 5,
          "index": 6313
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Try to normalize the keyFrames by adding the default / set values of the\n element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyFrames {Map} The map of key frames.",
            "paramName": "keyFrames",
            "description": " The map of key frames.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__normalizeKeyFrameTransforms": {
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 6562
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 7179
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks for transform keys and returns a cloned frame\n with the right transform style set.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "frame {Map} A single key frame of the description.",
            "paramName": "frame",
            "description": " A single key frame of the description.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A modified clone of the given frame.",
            "type": "Map",
            "description": " A modified clone of the given frame."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__calculateDelta": {
      "location": {
        "start": {
          "line": 243,
          "column": 4,
          "index": 7935
        },
        "end": {
          "line": 345,
          "column": 5,
          "index": 11513
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Precalculation of the delta which will be applied during the animation.\n The whole deltas will be calculated prior to the animation and stored\n in a single array. This method takes care of that calculation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "steps {Integer} The amount of steps to take to the end of the\n   animation.",
            "paramName": "steps",
            "description": " The amount of steps to take to the end of the\n   animation.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "stepTime {Integer} The amount of milliseconds each step takes.",
            "paramName": "stepTime",
            "description": " The amount of milliseconds each step takes.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "keys {Array} Ordered list of keys in the key frames map.",
            "paramName": "keys",
            "description": " Ordered list of keys in the key frames map.",
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "keyFrames {Map} The map of key frames.",
            "paramName": "keyFrames",
            "description": " The map of key frames.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer} Time in milliseconds the animation should take.",
            "paramName": "duration",
            "description": " Time in milliseconds the animation should take.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "timing {String} The given timing function.",
            "paramName": "timing",
            "description": " The given timing function.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} An array containing the animation deltas.",
            "type": "Array",
            "description": " An array containing the animation deltas."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getUnit": {
      "location": {
        "start": {
          "line": 353,
          "column": 4,
          "index": 11710
        },
        "end": {
          "line": 355,
          "column": 5,
          "index": 11807
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Ties to parse out the unit of the given value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {String} A CSS value including its unit.",
            "paramName": "item",
            "description": " A CSS value including its unit.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The unit of the given value.",
            "type": "String",
            "description": " The unit of the given value."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getNextValue": {
      "location": {
        "start": {
          "line": 366,
          "column": 4,
          "index": 12230
        },
        "end": {
          "line": 373,
          "column": 5,
          "index": 12501
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the next value based on the given arguments.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nextItem {String} The CSS value of the next frame",
            "paramName": "nextItem",
            "description": " The CSS value of the next frame",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "lastItem {String} The CSS value of the last frame",
            "paramName": "lastItem",
            "description": " The CSS value of the last frame",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "timing {String} The timing used for the calculation",
            "paramName": "timing",
            "description": " The timing used for the calculation",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "x {Number} The x position of the animation on the time axis",
            "paramName": "x",
            "description": " The x position of the animation on the time axis",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The calculated value including its unit.",
            "type": "String",
            "description": " The calculated value including its unit."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "play": {
      "location": {
        "start": {
          "line": 383,
          "column": 4,
          "index": 12818
        },
        "end": {
          "line": 428,
          "column": 5,
          "index": 14287
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for the {@link qx.bom.element.AnimationHandle} to play\n the animation.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "handle {qx.bom.element.AnimationHandle} The hand which\n   represents the animation.",
            "paramName": "handle",
            "description": " The hand which\n   represents the animation.",
            "type": "qx.bom.element.AnimationHandle"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle for chaining.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "pause": {
      "location": {
        "start": {
          "line": 439,
          "column": 4,
          "index": 14606
        },
        "end": {
          "line": 445,
          "column": 5,
          "index": 14757
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for the {@link qx.bom.element.AnimationHandle} to pause\n the animation.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "handle {qx.bom.element.AnimationHandle} The hand which\n   represents the animation.",
            "paramName": "handle",
            "description": " The hand which\n   represents the animation.",
            "type": "qx.bom.element.AnimationHandle"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle for chaining.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stop": {
      "location": {
        "start": {
          "line": 455,
          "column": 4,
          "index": 15074
        },
        "end": {
          "line": 498,
          "column": 5,
          "index": 16161
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal helper for the {@link qx.bom.element.AnimationHandle} to stop\n the animation.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "handle {qx.bom.element.AnimationHandle} The hand which\n   represents the animation.",
            "paramName": "handle",
            "description": " The hand which\n   represents the animation.",
            "type": "qx.bom.element.AnimationHandle"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle for chaining.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__applyRepeat": {
      "location": {
        "start": {
          "line": 507,
          "column": 4,
          "index": 16513
        },
        "end": {
          "line": 515,
          "column": 5,
          "index": 16716
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Takes care of the repeat key of the description.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "steps {Integer} The number of steps one iteration would take.",
            "paramName": "steps",
            "description": " The number of steps one iteration would take.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "repeat {Integer|String} It can be either a number how often the\n animation should be repeated or the string 'infinite'.",
            "paramName": "repeat",
            "description": " It can be either a number how often the\n animation should be repeated or the string 'infinite'.",
            "type": [
              "Integer",
              "String"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The number of steps to animate.",
            "type": "Integer",
            "description": " The number of steps to animate."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__applyStyles": {
      "location": {
        "start": {
          "line": 522,
          "column": 4,
          "index": 16932
        },
        "end": {
          "line": 543,
          "column": 5,
          "index": 17586
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Central method to apply css styles and element properties.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The DOM element to apply the styles.",
            "paramName": "el",
            "description": " The DOM element to apply the styles.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "styles {Map} A map containing styles and values.",
            "paramName": "styles",
            "description": " A map containing styles and values.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getStepTime": {
      "location": {
        "start": {
          "line": 551,
          "column": 4,
          "index": 17880
        },
        "end": {
          "line": 563,
          "column": 5,
          "index": 18260
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Dynamic calculation of the steps time considering a max step time.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "duration {Number} The duration of the animation.",
            "paramName": "duration",
            "description": " The duration of the animation.",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "keys {Array} An array containing the ordered set of key frame keys.",
            "paramName": "keys",
            "description": " An array containing the ordered set of key frame keys.",
            "type": "Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The best suited step time.",
            "type": "Integer",
            "description": " The best suited step time."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getOrderedKeys": {
      "location": {
        "start": {
          "line": 570,
          "column": 4,
          "index": 18451
        },
        "end": {
          "line": 579,
          "column": 5,
          "index": 18707
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper which returns the ordered keys of the key frame map.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyFrames {Map} The map of key frames.",
            "paramName": "keyFrames",
            "description": " The map of key frames.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} An ordered list of keys.",
            "type": "Array",
            "description": " An ordered list of keys."
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "descendants": []
}