{
  "version": 0.3,
  "lastModified": 1722153598991,
  "lastModifiedIso": "2024-07-28T07:59:58.991Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/element/Attribute.js",
  "type": "bootstrap",
  "location": {
    "start": {
      "line": 69,
      "column": 0,
      "index": 2419
    },
    "end": {
      "line": 377,
      "column": 3,
      "index": 10605
    }
  },
  "className": "qx.bom.element.Attribute",
  "jsdoc": {
    "raw": [
      "*",
      " * Attribute/Property handling for DOM HTML elements.",
      " *",
      " * Also includes support for HTML properties like <code>checked</code>",
      " * or <code>value</code>. This feature set is supported cross-browser",
      " * through one common interface and is independent of the differences between",
      " * the multiple implementations.",
      " *",
      " * Supports applying text and HTML content using the attribute names",
      " * <code>text</code> and <code>html</code>.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Attribute/Property handling for DOM HTML elements.\n Also includes support for HTML properties like <code>checked</code>\n or <code>value</code>. This feature set is supported cross-browser\n through one common interface and is independent of the differences between\n the multiple implementations.\n Supports applying text and HTML content using the attribute names\n <code>text</code> and <code>html</code>.</p>"
      }
    ]
  },
  "statics": {
    "__hints": {
      "jsdoc": {
        "raw": [
          "* Internal map of attribute conversions "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal map of attribute conversions</p>"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2719
        },
        "end": {
          "line": 184,
          "column": 5,
          "index": 5265
        }
      },
      "appearsIn": []
    },
    "compile": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Compiles an incoming attribute map to a string which",
          "     * could be used when building HTML blocks using innerHTML.",
          "     *",
          "     * This method silently ignores runtime attributes like",
          "     * <code>html</code> or <code>text</code>.",
          "     *",
          "     * @param map {Map} Map of attributes. The key is the name of the attribute.",
          "     * @return {String} Returns a compiled string ready for usage.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compiles an incoming attribute map to a string which\n could be used when building HTML blocks using innerHTML.\n This method silently ignores runtime attributes like\n <code>html</code> or <code>text</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "map {Map} Map of attributes. The key is the name of the attribute.",
            "paramName": "map",
            "description": " Map of attributes. The key is the name of the attribute.",
            "type": "Map<any, any>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Returns a compiled string ready for usage.",
            "type": "string",
            "description": "Returns a compiled string ready for usage."
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 196,
          "column": 4,
          "index": 5681
        },
        "end": {
          "line": 207,
          "column": 5,
          "index": 5917
        }
      },
      "type": "function",
      "params": [
        {
          "name": "map",
          "type": "Map<any, any>"
        }
      ],
      "returnType": {
        "type": "string"
      },
      "appearsIn": []
    },
    "get": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Returns the value of the given HTML attribute",
          "     *",
          "     * @param element {Element} The DOM element to query",
          "     * @param name {String} Name of the attribute",
          "     * @return {var} The value of the attribute",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the value of the given HTML attribute</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} The DOM element to query",
            "paramName": "element",
            "description": " The DOM element to query",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "name {String} Name of the attribute",
            "paramName": "name",
            "description": " Name of the attribute",
            "type": "string"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The value of the attribute",
            "type": "var",
            "description": "The value of the attribute"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 216,
          "column": 4,
          "index": 6155
        },
        "end": {
          "line": 259,
          "column": 5,
          "index": 7344
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returnType": {
        "type": "var"
      },
      "appearsIn": []
    },
    "set": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Sets an HTML attribute on the given DOM element",
          "     *",
          "     * @param element {Element} The DOM element to modify",
          "     * @param name {String} Name of the attribute",
          "     * @param value {var} New value of the attribute",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets an HTML attribute on the given DOM element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} The DOM element to modify",
            "paramName": "element",
            "description": " The DOM element to modify",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "name {String} Name of the attribute",
            "paramName": "name",
            "description": " Name of the attribute",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "value {var} New value of the attribute",
            "paramName": "value",
            "description": " New value of the attribute",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 268,
          "column": 4,
          "index": 7590
        },
        "end": {
          "line": 318,
          "column": 5,
          "index": 9118
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": []
    },
    "serialize": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Serializes an HTML attribute into a writer; the `writer` function accepts",
          "     *  an varargs, which can be joined with an empty string or streamed.",
          "     *",
          "     * @param name {String} Name of the attribute",
          "     * @param value {var} New value of the attribute",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Serializes an HTML attribute into a writer; the <code>writer</code> function accepts\n  an varargs, which can be joined with an empty string or streamed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the attribute",
            "paramName": "name",
            "description": " Name of the attribute",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "value {var} New value of the attribute",
            "paramName": "value",
            "description": " New value of the attribute",
            "type": "var"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 327,
          "column": 4,
          "index": 9406
        },
        "end": {
          "line": 361,
          "column": 5,
          "index": 10232
        }
      },
      "type": "function",
      "params": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "value",
          "type": "var"
        }
      ],
      "appearsIn": []
    },
    "reset": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Resets an HTML attribute on the given DOM element",
          "     *",
          "     * @param element {Element} The DOM element to modify",
          "     * @param name {String} Name of the attribute",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets an HTML attribute on the given DOM element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} The DOM element to modify",
            "paramName": "element",
            "description": " The DOM element to modify",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "name {String} Name of the attribute",
            "paramName": "name",
            "description": " Name of the attribute",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 10427
        },
        "end": {
          "line": 375,
          "column": 5,
          "index": 10597
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}