{
  "version": 0.3,
  "lastModified": 1735383688301,
  "lastModifiedIso": "2024-12-28T11:01:28.301Z",
  "classFilename": "../../node_modules/@qooxdoo/framework/source/class/qx/bom/element/Scroll.js",
  "type": "class",
  "location": {
    "start": {
      "line": 22,
      "column": 0,
      "index": 561
    },
    "end": {
      "line": 382,
      "column": 3,
      "index": 13511
    }
  },
  "className": "qx.bom.element.Scroll",
  "jsdoc": {
    "raw": [
      "*",
      " * Contains methods to control and query the element's scroll properties",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>Contains methods to control and query the element's scroll properties</p>"
      }
    ]
  },
  "statics": {
    "__scrollbarSize": {
      "jsdoc": {
        "raw": [
          "* @type {Integer} The typical native scrollbar size in the environment "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} The typical native scrollbar size in the environment"
          }
        ]
      },
      "access": "private",
      "location": {
        "start": {
          "line": 31,
          "column": 4,
          "index": 885
        },
        "end": {
          "line": 31,
          "column": 25,
          "index": 906
        }
      },
      "appearsIn": []
    },
    "getScrollbarWidth": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Get the typical native scrollbar size in the environment",
          "     *",
          "     * @return {Number} The native scrollbar size",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the typical native scrollbar size in the environment</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The native scrollbar size",
            "type": "number",
            "description": "The native scrollbar size"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1050
        },
        "end": {
          "line": 104,
          "column": 5,
          "index": 2976
        }
      },
      "type": "function",
      "params": [],
      "returnType": {
        "type": "number"
      },
      "appearsIn": []
    },
    "intoViewX": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The method scrolls the element into view (x-axis only).",
          "     *",
          "     * @param element {Element} DOM element to scroll into view",
          "     * @param stop {Element?null} Any parent element which functions as",
          "     *   outermost element to scroll. Default is the HTML document.",
          "     * @param align {String?null} Alignment of the element. Allowed values:",
          "     *   <code>left</code> or <code>right</code>. Could also be null.",
          "     *   Without a given alignment the method tries to scroll the widget",
          "     *   with the minimum effort needed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The method scrolls the element into view (x-axis only).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element to scroll into view",
            "paramName": "element",
            "description": " DOM element to scroll into view",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "stop {Element?null} Any parent element which functions as\n   outermost element to scroll. Default is the HTML document.",
            "paramName": "stop",
            "description": " Any parent element which functions as\n   outermost element to scroll. Default is the HTML document.",
            "optional": true,
            "defaultValue": "null",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "align {String?null} Alignment of the element. Allowed values:\n   <code>left</code> or <code>right</code>. Could also be null.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "paramName": "align",
            "description": " Alignment of the element. Allowed values:\n   <code>left</code> or <code>right</code>. Could also be null.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3731
        },
        "end": {
          "line": 232,
          "column": 5,
          "index": 7683
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        },
        {
          "name": "stop",
          "type": "Element",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "align",
          "type": "String",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "appearsIn": []
    },
    "intoViewY": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The method scrolls the element into view (y-axis only).",
          "     *",
          "     * @param element {Element} DOM element to scroll into view",
          "     * @param stop {Element?null} Any parent element which functions as",
          "     *   outermost element to scroll. Default is the HTML document.",
          "     * @param align {String?null} Alignment of the element. Allowed values:",
          "     *   <code>top</code> or <code>bottom</code>. Could also be null.",
          "     *   Without a given alignment the method tries to scroll the widget",
          "     *   with the minimum effort needed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The method scrolls the element into view (y-axis only).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element to scroll into view",
            "paramName": "element",
            "description": " DOM element to scroll into view",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "stop {Element?null} Any parent element which functions as\n   outermost element to scroll. Default is the HTML document.",
            "paramName": "stop",
            "description": " Any parent element which functions as\n   outermost element to scroll. Default is the HTML document.",
            "optional": true,
            "defaultValue": "null",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "align {String?null} Alignment of the element. Allowed values:\n   <code>top</code> or <code>bottom</code>. Could also be null.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "paramName": "align",
            "description": " Alignment of the element. Allowed values:\n   <code>top</code> or <code>bottom</code>. Could also be null.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "optional": true,
            "defaultValue": "null",
            "type": "String"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 245,
          "column": 4,
          "index": 8240
        },
        "end": {
          "line": 360,
          "column": 5,
          "index": 12561
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        },
        {
          "name": "stop",
          "type": "Element",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "align",
          "type": "String",
          "optional": true,
          "defaultValue": "null"
        }
      ],
      "appearsIn": []
    },
    "intoView": {
      "jsdoc": {
        "raw": [
          "*",
          "     * The method scrolls the element into view.",
          "     *",
          "     * @param element {Element} DOM element to scroll into view",
          "     * @param stop {Element?null} Any parent element which functions as",
          "     *   outermost element to scroll. Default is the HTML document.",
          "     * @param alignX {String} Alignment of the element. Allowed values:",
          "     *   <code>left</code> or <code>right</code>. Could also be undefined.",
          "     *   Without a given alignment the method tries to scroll the widget",
          "     *   with the minimum effort needed.",
          "     * @param alignY {String} Alignment of the element. Allowed values:",
          "     *   <code>top</code> or <code>bottom</code>. Could also be undefined.",
          "     *   Without a given alignment the method tries to scroll the widget",
          "     *   with the minimum effort needed.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The method scrolls the element into view.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element to scroll into view",
            "paramName": "element",
            "description": " DOM element to scroll into view",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "stop {Element?null} Any parent element which functions as\n   outermost element to scroll. Default is the HTML document.",
            "paramName": "stop",
            "description": " Any parent element which functions as\n   outermost element to scroll. Default is the HTML document.",
            "optional": true,
            "defaultValue": "null",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "alignX {String} Alignment of the element. Allowed values:\n   <code>left</code> or <code>right</code>. Could also be undefined.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "paramName": "alignX",
            "description": " Alignment of the element. Allowed values:\n   <code>left</code> or <code>right</code>. Could also be undefined.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "alignY {String} Alignment of the element. Allowed values:\n   <code>top</code> or <code>bottom</code>. Could also be undefined.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "paramName": "alignY",
            "description": " Alignment of the element. Allowed values:\n   <code>top</code> or <code>bottom</code>. Could also be undefined.\n   Without a given alignment the method tries to scroll the widget\n   with the minimum effort needed.",
            "type": "string"
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 377,
          "column": 4,
          "index": 13366
        },
        "end": {
          "line": 380,
          "column": 5,
          "index": 13503
        }
      },
      "type": "function",
      "params": [
        {
          "name": "element",
          "type": "Element"
        },
        {
          "name": "stop",
          "type": "Element",
          "optional": true,
          "defaultValue": "null"
        },
        {
          "name": "alignX",
          "type": "string"
        },
        {
          "name": "alignY",
          "type": "string"
        }
      ],
      "appearsIn": []
    }
  },
  "members": {},
  "properties": {}
}