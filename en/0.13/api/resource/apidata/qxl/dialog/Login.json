{
  "version": 0.3,
  "lastModified": 1645588062000,
  "lastModifiedIso": "2022-02-23T03:47:42.000Z",
  "classFilename": "../../qx_packages/qooxdoo_qxl_dialog_v5_0_0/source/class/qxl/dialog/Login.js",
  "type": "class",
  "location": {
    "start": {
      "line": 27,
      "column": 0,
      "index": 1041
    },
    "end": {
      "line": 356,
      "column": 3,
      "index": 9884
    }
  },
  "className": "qxl.dialog.Login",
  "jsdoc": {
    "raw": [
      "*",
      " * A dialog for authentication and login.",
      " *",
      " * The \"callback\" property containing a function is used as an (optional) final",
      " * callback after authentication has take place. This final callback will be",
      " * called with an truthy value as first argument (the error message/object) if",
      " * authentication has FAILED or with a falsy value (null/undefined) as first",
      " * argument, plus with a second optional argument (that can contain user",
      " * information) if it was SUCCESSFUL. The authenticating function must now be",
      " * stored in the checkCredentials property.",
      " "
    ],
    "@description": [
      {
        "name": "@description",
        "body": "<p>A dialog for authentication and login.\n The \"callback\" property containing a function is used as an (optional) final\n callback after authentication has take place. This final callback will be\n called with an truthy value as first argument (the error message/object) if\n authentication has FAILED or with a falsy value (null/undefined) as first\n argument, plus with a second optional argument (that can contain user\n information) if it was SUCCESSFUL. The authenticating function must now be\n stored in the checkCredentials property.</p>"
      }
    ]
  },
  "superClass": "qxl.dialog.Dialog",
  "properties": {
    "text": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 1237
        },
        "end": {
          "line": 38,
          "column": 5,
          "index": 1322
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "apply": "_applyText"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * A html text that is displayed below the image (if present) and above the",
          "     * login",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>A html text that is displayed below the image (if present) and above the\n login</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "textFont": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1428
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1541
        }
      },
      "json": {
        "check": "String",
        "nullable": true,
        "init": "bold",
        "apply": "_applyTextFont"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The name of the font in the theme that should be applied to",
          "     * the text",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The name of the font in the theme that should be applied to\n the text</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "checkCredentials": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 2021
        },
        "end": {
          "line": 63,
          "column": 5,
          "index": 2094
        }
      },
      "json": {
        "check": "Function",
        "nullable": false
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * An asyncronous function to check the given credentials.",
          "     * The function signature is (username, password, callback). In case the",
          "     * login fails, the callback must be called with a string that can be",
          "     * alerted to the user or the error object if the problem is not due to",
          "     * authentication itself. If the login succeeds, the argument must be",
          "     * undefined or null. You can pass a second argument containing user",
          "     * information.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>An asyncronous function to check the given credentials.\n The function signature is (username, password, callback). In case the\n login fails, the callback must be called with a string that can be\n alerted to the user or the error object if the problem is not due to\n authentication itself. If the login succeeds, the argument must be\n undefined or null. You can pass a second argument containing user\n information.</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "showForgotPassword": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 2173
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 2307
        }
      },
      "json": {
        "check": "Boolean",
        "nullable": false,
        "init": false,
        "event": "changeShowForgotPassword"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * Whether to show a button with \"Forgot Password?\"",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to show a button with \"Forgot Password?\"</p>"
          }
        ]
      },
      "appearsIn": []
    },
    "forgotPasswordHandler": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2426
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 2481
        }
      },
      "json": {
        "check": "Function"
      },
      "jsdoc": {
        "raw": [
          "*",
          "     * The function that is called when the user clicks on the \"Forgot Password?\"",
          "     * button",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>The function that is called when the user clicks on the \"Forgot Password?\"\n button</p>"
          }
        ]
      },
      "appearsIn": []
    }
  },
  "events": {
    "loginSuccess": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Event dispatched when login was successful",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event dispatched when login was successful</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2571
        },
        "end": {
          "line": 88,
          "column": 38,
          "index": 2605
        }
      }
    },
    "loginFailure": {
      "type": "qx.event.type.Data",
      "jsdoc": {
        "raw": [
          "*",
          "     * Data event dispatched when login failed, event data",
          "     * contains a reponse message",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Data event dispatched when login failed, event data\n contains a reponse message</p>"
          }
        ]
      },
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2721
        },
        "end": {
          "line": 94,
          "column": 38,
          "index": 2755
        }
      }
    }
  },
  "members": {
    "_text": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2780
        },
        "end": {
          "line": 98,
          "column": 15,
          "index": 2791
        }
      },
      "appearsIn": []
    },
    "_username": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2797
        },
        "end": {
          "line": 99,
          "column": 19,
          "index": 2812
        }
      },
      "appearsIn": []
    },
    "_password": {
      "jsdoc": null,
      "access": "protected",
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2818
        },
        "end": {
          "line": 100,
          "column": 19,
          "index": 2833
        }
      },
      "appearsIn": []
    },
    "_applyText": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply function used by proterty {@link #text}",
          "     * @param value {String} New value",
          "     * @param old {String} Old value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply function used by proterty {@link #text}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} New value",
            "paramName": "value",
            "description": " New value",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "old {String} Old value",
            "paramName": "old",
            "description": " Old value",
            "type": "string"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2985
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 3113
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "old",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_applyTextFont": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Apply function used by proterty {@link #textFont}",
          "     * @param value {String} New value",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply function used by proterty {@link #textFont}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} New value",
            "paramName": "value",
            "description": " New value",
            "type": "string"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3232
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 3294
        }
      },
      "type": "function",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ],
      "appearsIn": []
    },
    "_createWidgetContent": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Create the main content of the widget",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create the main content of the widget</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3362
        },
        "end": {
          "line": 272,
          "column": 5,
          "index": 7597
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qxl.dialog.Dialog",
      "appearsIn": [
        "qxl.dialog.Dialog",
        "qxl.dialog.MDialog"
      ]
    },
    "_callCheckCredentials": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Calls the checkCredentials callback function with username, password and",
          "     * the final callback, bound to the context object.",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calls the checkCredentials callback function with username, password and\n the final callback, bound to the context object.</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 278,
          "column": 4,
          "index": 7756
        },
        "end": {
          "line": 286,
          "column": 5,
          "index": 8076
        }
      },
      "type": "function",
      "params": [],
      "appearsIn": []
    },
    "_handleCancel": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handle click on cancel button",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle click on cancel button</p>"
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 291,
          "column": 4,
          "index": 8136
        },
        "end": {
          "line": 293,
          "column": 5,
          "index": 8178
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qxl.dialog.Dialog",
      "appearsIn": [
        "qxl.dialog.Dialog",
        "qxl.dialog.MDialog"
      ]
    },
    "_handleCheckCredentials": {
      "jsdoc": {
        "raw": [
          "*",
          "     * Handler function called from the function that checks the credentials",
          "     * with the result of the authentication process.",
          "     * @param err {String|Error|null} If null, the authentication was successful",
          "     * and the \"loginSuccess\" event is dispatched. If String or Error, the",
          "     * \"loginFailure\" event is dispatched with the error message/object.",
          "     * Finally, the callback function in the callback property is called with",
          "     * null (success) or the error value.",
          "     * @param data {unknown|undefined} Optional second argument wich can contain",
          "     * user information",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler function called from the function that checks the credentials\n with the result of the authentication process.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "err {String|Error|null} If null, the authentication was successful\n and the \"loginSuccess\" event is dispatched. If String or Error, the\n \"loginFailure\" event is dispatched with the error message/object.\n Finally, the callback function in the callback property is called with\n null (success) or the error value.",
            "paramName": "err",
            "description": " If null, the authentication was successful\n and the \"loginSuccess\" event is dispatched. If String or Error, the\n \"loginFailure\" event is dispatched with the error message/object.\n Finally, the callback function in the callback property is called with\n null (success) or the error value.",
            "type": [
              "String",
              "Error",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "data {unknown|undefined} Optional second argument wich can contain\n user information",
            "paramName": "data",
            "description": " Optional second argument wich can contain\n user information",
            "type": [
              "unknown",
              "undefined"
            ]
          }
        ]
      },
      "access": "protected",
      "location": {
        "start": {
          "line": 306,
          "column": 4,
          "index": 8786
        },
        "end": {
          "line": 345,
          "column": 5,
          "index": 9736
        }
      },
      "type": "function",
      "params": [
        {
          "name": "err",
          "type": [
            "String",
            "Error",
            "null"
          ]
        },
        {
          "name": "data",
          "type": [
            "unknown",
            "undefined"
          ]
        }
      ],
      "appearsIn": []
    },
    "hide": {
      "jsdoc": {
        "raw": [
          "*",
          "     * @override",
          "     "
        ],
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@override": [
          {
            "name": "@override",
            "body": ""
          }
        ]
      },
      "access": "public",
      "location": {
        "start": {
          "line": 350,
          "column": 4,
          "index": 9776
        },
        "end": {
          "line": 354,
          "column": 5,
          "index": 9874
        }
      },
      "type": "function",
      "params": [],
      "overriddenFrom": "qxl.dialog.Dialog",
      "appearsIn": [
        "qxl.dialog.Dialog",
        "qx.ui.core.Widget"
      ]
    }
  },
  "statics": {}
}