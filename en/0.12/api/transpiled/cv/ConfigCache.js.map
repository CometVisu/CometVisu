{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ConfigCache.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "_cacheKey",
    "_parseCacheData",
    "_valid",
    "replayCache",
    "__initPromise",
    "failed",
    "DB",
    "init",
    "Promise",
    "resolve",
    "reject",
    "cv",
    "ConfigCache",
    "request",
    "indexedDB",
    "open",
    "onerror",
    "log",
    "Logger",
    "error",
    "onsuccess",
    "ev",
    "debug",
    "result",
    "event",
    "Error",
    "onupgradeneeded",
    "db",
    "target",
    "objectStore",
    "createObjectStore",
    "keyPath",
    "createIndex",
    "unique",
    "dump",
    "xml",
    "hash",
    "model",
    "data",
    "Model",
    "getInstance",
    "save",
    "toHash",
    "VERSION",
    "Version",
    "REV",
    "JSON",
    "stringify",
    "getWidgetDataModel",
    "addresses",
    "getAddressList",
    "configSettings",
    "Config",
    "config",
    "configSuffix",
    "body",
    "document",
    "querySelector",
    "innerHTML",
    "restore",
    "getData",
    "then",
    "cache",
    "iconsFromConfig",
    "forEach",
    "icon",
    "IconHandler",
    "insert",
    "name",
    "uri",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "source",
    "mappings",
    "Object",
    "keys",
    "mapping",
    "formulaSource",
    "formula",
    "Function",
    "key",
    "range",
    "rangeMin",
    "valueElement",
    "i",
    "iconDefinition",
    "definition",
    "getIconElement",
    "Array",
    "isArray",
    "contents",
    "length",
    "setWidgetDataModel",
    "setAddressList",
    "widgetsToInitialize",
    "filter",
    "widgetId",
    "$$initOnCacheLoad",
    "TemplateEngine",
    "addListenerOnce",
    "widgetData",
    "ui",
    "structure",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "transaction",
    "put",
    "dataRequest",
    "get",
    "parse",
    "bind",
    "isCached",
    "cacheVersion",
    "isValid",
    "cachedHash",
    "hashCode",
    "XMLSerializer",
    "serializeToString",
    "clear",
    "string",
    "prototype",
    "reduce",
    "split",
    "a",
    "b",
    "charCodeAt",
    "l",
    "character"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ConfigCache.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Handles caches for cometvisu configs\n *\n * @author Tobias Bräutigam\n * @since 0.10.0\n */\nqx.Class.define('cv.ConfigCache', {\n  type: 'static',\n  \n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    _cacheKey : 'data',\n    _parseCacheData : null,\n    _valid : null,\n    replayCache: null,\n    __initPromise: null,\n    failed: null,\n    DB: null,\n\n    init: function () {\n      if (!this.__initPromise) {\n        this.__initPromise = new Promise((resolve, reject) => {\n          if (!cv.ConfigCache.DB && !cv.ConfigCache.failed) {\n            const request = indexedDB.open('cvCache', 1);\n            request.onerror = function() {\n              cv.ConfigCache.failed = true;\n              qx.log.Logger.error(cv.ConfigCache, 'error opening cache database');\n              cv.ConfigCache.DB = null;\n              resolve(cv.ConfigCache.DB);\n            };\n            request.onsuccess = function (ev) {\n              qx.log.Logger.debug(cv.ConfigCache, 'Success creating/accessing IndexedDB database');\n              cv.ConfigCache.DB = request.result;\n\n              cv.ConfigCache.DB.onerror = function (event) {\n                reject(new Error('Error creating/accessing IndexedDB database'));\n              };\n              resolve(cv.ConfigCache.DB);\n            };\n            request.onupgradeneeded = function (event) {\n              const db = event.target.result;\n\n              db.onerror = function (event) {\n                qx.log.Logger.error(cv.ConfigCache, 'Error loading database.');\n              };\n              const objectStore = db.createObjectStore('data', {keyPath: 'config'});\n              objectStore.createIndex('config', 'config', {unique: true});\n            };\n          } else {\n            resolve(cv.ConfigCache.DB);\n          }\n        });\n      }\n      return this.__initPromise;\n    },\n    \n    dump: function(xml, hash) {\n      const model = cv.data.Model.getInstance();\n      this.save({\n        hash: hash || this.toHash(xml),\n        VERSION: cv.Version.VERSION,\n        REV: cv.Version.REV,\n        data: JSON.stringify(model.getWidgetDataModel()),\n        addresses: model.getAddressList(),\n        configSettings: JSON.stringify(cv.Config.configSettings),\n        config: cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix,\n        body: document.querySelector('body').innerHTML\n      });\n    },\n\n    restore: function() {\n      const body = document.querySelector('body');\n      const model = cv.data.Model.getInstance();\n      this.getData().then(cache => {\n        cv.Config.configSettings = cache.configSettings;\n\n        // restore icons\n        cv.Config.configSettings.iconsFromConfig.forEach(function(icon) {\n          cv.IconHandler.getInstance().insert(icon.name, icon.uri, icon.type, icon.flavour, icon.color, icon.styling, icon.dynamic, icon.source);\n        }, this);\n\n        // restore mappings\n        if (cv.Config.configSettings.mappings) {\n          Object.keys(cv.Config.configSettings.mappings).forEach(function (name) {\n            const mapping = cv.Config.configSettings.mappings[name];\n            if (mapping && mapping.formulaSource) {\n              mapping.formula = new Function('x', 'var y;' + mapping.formulaSource + '; return y;'); // jshint ignore:line\n            } else {\n              Object.keys(mapping).forEach(key => {\n                if (key === 'range') {\n                  Object.keys(mapping.range).forEach(rangeMin => {\n                    mapping.range[rangeMin][1].forEach((valueElement, i) => {\n                      const iconDefinition = valueElement.definition;\n                      if (iconDefinition) {\n                        let icon = cv.IconHandler.getInstance().getIconElement(iconDefinition.name, iconDefinition.type, iconDefinition.flavour, iconDefinition.color, iconDefinition.styling, iconDefinition['class']);\n                        icon.definition = iconDefinition;\n                        mapping.range[rangeMin][1][i] = icon;\n                      }\n                    });\n                  });\n                } else if (Array.isArray(mapping[key])) {\n                  const contents = mapping[key];\n                  for (let i = 0; i < contents.length; i++) {\n                    const iconDefinition = contents[i].definition;\n                    if (iconDefinition) {\n                      let icon = cv.IconHandler.getInstance().getIconElement(iconDefinition.name, iconDefinition.type, iconDefinition.flavour, iconDefinition.color, iconDefinition.styling, iconDefinition['class']);\n                      icon.definition = iconDefinition;\n                      contents[i] = icon;\n                    }\n                  }\n                } else {\n                  const iconDefinition = mapping[key].definition;\n                  if (iconDefinition) {\n                    let icon = cv.IconHandler.getInstance().getIconElement(iconDefinition.name, iconDefinition.type, iconDefinition.flavour, iconDefinition.color, iconDefinition.styling, iconDefinition['class']);\n                    icon.definition = iconDefinition;\n                    mapping[key] = icon;\n                  }\n                }\n              });\n            }\n          }, this);\n        }\n        model.setWidgetDataModel(cache.data);\n        model.setAddressList(cache.addresses);\n        const widgetsToInitialize = Object.keys(cache.data).filter(function (widgetId) {\n          return cache.data[widgetId].$$initOnCacheLoad === true;\n        });\n        if (widgetsToInitialize.length > 0) {\n          cv.TemplateEngine.getInstance().addListenerOnce('changeReady', function () {\n            widgetsToInitialize.forEach(function (widgetId) {\n              const widgetData = cache.data[widgetId];\n              cv.ui.structure.WidgetFactory.createInstance(widgetData.$$type, widgetData);\n            });\n          }, this);\n        }\n        body.innerHTML = cache.body;\n        qx.log.Logger.debug(this, 'content restored from cache');\n      });\n    },\n    \n    save: function(data) {\n      if (cv.ConfigCache.DB) {\n        const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readwrite').objectStore('data');\n        objectStore.put(data);\n      }\n    },\n    \n    getData: async function(key) {\n      return new Promise((resolve, reject) => {\n        if (!cv.ConfigCache.DB) {\n          resolve(null);\n          return;\n        }\n        if (!this._parseCacheData) {\n          const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readonly').objectStore('data');\n          const dataRequest = objectStore.get(cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix);\n          dataRequest.onsuccess = function(event) {\n            if (!dataRequest.result) {\n              resolve(null);\n            } else {\n              this._parseCacheData = dataRequest.result;\n              // parse stringified data\n              this._parseCacheData.data = JSON.parse(this._parseCacheData.data);\n              this._parseCacheData.configSettings = JSON.parse(this._parseCacheData.configSettings);\n              if (key) {\n                resolve(this._parseCacheData[key]);\n              } else {\n                resolve(this._parseCacheData);\n              }\n            }\n          }.bind(this);\n        } else if (key) {\n          resolve(this._parseCacheData[key]);\n        } else {\n          resolve(this._parseCacheData);\n        }\n      });\n    },\n    \n    /**\n     * Returns true if there is an existing cache for the current config file\n     */\n    isCached: async function() {\n      await cv.ConfigCache.init();\n      const data = await this.getData();\n      if (!data) {\n        return false;\n      }\n      // compare versions\n      const cacheVersion = data.VERSION + '|' + data.REV;\n      qx.log.Logger.debug(this, 'Cached version: '+cacheVersion+', CV-Version: '+cv.Version.VERSION + '|' + cv.Version.REV);\n      return (cacheVersion === cv.Version.VERSION + '|' + cv.Version.REV);\n    },\n    \n    isValid: async function(xml, hash) {\n      // cache the result, as the config stays the same until next reload\n      if (this._valid === null) {\n        const cachedHash = await this.getData('hash');\n        if (!cachedHash) {\n          this._valid = false;\n        } else {\n          if (!hash) {\n            hash = this.toHash(xml);\n          }\n          qx.log.Logger.debug(this, 'Current hash: \\'' + hash + '\\', cached hash: \\'' + cachedHash + '\\'');\n          this._valid = hash === cachedHash;\n        }\n      }\n      return this._valid;\n    },\n    \n    toHash: function(xml) {\n      return this.hashCode((new XMLSerializer()).serializeToString(xml));\n    },\n    \n    clear: function(configSuffix) {\n      if (cv.ConfigCache.DB) {\n        configSuffix = configSuffix || (cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix);\n        const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readwrite').objectStore('data');\n        const dataRequest = objectStore.delete(configSuffix);\n        dataRequest.onsuccess = function () {\n          qx.log.Logger.debug('cache for ' + configSuffix + 'cleared');\n        };\n      }\n    },\n    \n    /**\n     * @param string\n     * @see http://stackoverflow.com/q/7616461/940217\n     * @return {number}\n     */\n    hashCode: function(string) {\n      if (Array.prototype.reduce) {\n        return string.split('').reduce(function(a, b) {\n         a=((a<<5)-a)+b.charCodeAt(0);\n         return a&a;\n        }, 0);\n      }\n      let hash = 0;\n      if (string.length === 0) {\n        return hash;\n      }\n      for (let i = 0, l = string.length; i < l; i++) {\n        let character = string.charCodeAt(i);\n        hash = ((hash<<5)-hash)+character;\n        hash &= hash; // Convert to 32bit integer\n      }\n      return hash;\n    }\n  }\n});\n"
  ]
}