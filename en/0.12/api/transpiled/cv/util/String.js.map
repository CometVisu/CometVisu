{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/util/String.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "__elem",
    "decodeHtmlEntities",
    "str",
    "document",
    "createElement",
    "innerHTML",
    "innerText",
    "htmlStringToDomElement",
    "div",
    "childNodes",
    "sprintf",
    "args",
    "Array",
    "prototype",
    "slice",
    "call",
    "arguments",
    "string",
    "apply",
    "err",
    "console",
    "warn",
    "cv",
    "util",
    "String"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAoBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gBAAhB,EAAkC;AAChCC,IAAAA,IAAI,EAAE,QAD0B;;AAGhC;;;;;AAKAC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,IADD;;AAGP;;;;;AAKAC,MAAAA,kBAAkB,EAAE,4BAAUC,GAAV,EAAe;AACjC,YAAI,CAAC,KAAKF,MAAV,EAAkB;AAChB,eAAKA,MAAL,GAAcG,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACD;;AACD,aAAKJ,MAAL,CAAYK,SAAZ,GAAwBH,GAAxB;AACA,eAAO,KAAKF,MAAL,CAAYM,SAAnB;AACD,OAdM;;AAgBP;;;;;AAKAC,MAAAA,sBAAsB,EAAE,gCAAUL,GAAV,EAAe;AACrC;AACA;AACA,YAAIM,GAAG,GAAGL,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAI,QAAAA,GAAG,CAACH,SAAJ,GAAgBH,GAAhB;AACA,eAAOM,GAAG,CAACC,UAAJ,CAAe,CAAf,CAAP;AACD,OA3BM;;AA6BP;;;;;;;AAOAC,MAAAA,OAAO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAAE,YAAW;AAClB,YAAIC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,YAAIC,MAAM,GAAG,GAAb;;AACA,YAAI;AACFA,UAAAA,MAAM,GAAGP,OAAO,CAACQ,KAAR,CAAc,IAAd,EAAoBP,IAApB,CAAT;AACD,SAFD,CAGA,OAAQQ,GAAR,EAAc;AACZC,UAAAA,OAAO,CAACC,IAAR,CAAcF,GAAd,EAAmBR,IAAnB;AACD;;AACD,eAAOM,MAAP;AACD,OAVM;AApCA;AARuB,GAAlC;AApBAK,EAAAA,EAAE,CAACC,IAAH,CAAQC,MAAR,CAAe7B,aAAf,GAA+BA,aAA/B",
  "sourcesContent": [
    "/* String.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\nqx.Class.define('cv.util.String', {\n  type: \"static\",\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    __elem: null,\n\n    /**\n     * Decode HTML entities like &amp; to &\n     * @param str {String} string to decode\n     * @return {String}\n     */\n    decodeHtmlEntities: function (str) {\n      if (!this.__elem) {\n        this.__elem = document.createElement(\"span\");\n      }\n      this.__elem.innerHTML = str;\n      return this.__elem.innerText;\n    },\n\n    /**\n     * Clean the string that contains HTML code and convert it to a DOM element\n     * @param str {String} string to decode\n     * @return {String}\n     */\n    htmlStringToDomElement: function (str) {\n      //var widget = qx.bom.Html.clean([res[1]])[0];\n      //var widget = (function(){var div=document.createElement('div');div.innerHTML=res[1];return div.childNodes[0];})();\n      var div = document.createElement('div');\n      div.innerHTML = str;\n      return div.childNodes[0];\n    },\n\n    /**\n     * Insert in string values as the well known sprint() function of other\n     * programming languages does.\n     * When a malformation happens a generic string is returned and a warning\n     * is shown on the console.\n     * @return {String}\n     */\n    sprintf: function() {\n      var args = Array.prototype.slice.call(arguments);\n      var string = '-';\n      try {\n        string = sprintf.apply(this, args);\n      }\n      catch ( err ) {\n        console.warn( err, args );\n      }\n      return string;\n    }\n  }\n\n});"
  ]
}