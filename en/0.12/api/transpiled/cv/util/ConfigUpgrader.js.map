{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/util/ConfigUpgrader.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "members",
    "__indentation",
    "__log",
    "upgrade",
    "source",
    "xml",
    "Document",
    "fromString",
    "pagesNode",
    "querySelector",
    "version",
    "parseInt",
    "getAttribute",
    "cv",
    "Version",
    "LIBRARY_VERSION",
    "method",
    "call",
    "locale",
    "Manager",
    "tr",
    "info",
    "join",
    "from7to8",
    "c",
    "querySelectorAll",
    "forEach",
    "node",
    "parent",
    "parentNode",
    "indentNode",
    "previousSibling",
    "removeChild",
    "nodeType",
    "__setVersion",
    "push",
    "from8to9",
    "singleIndent",
    "padEnd",
    "level",
    "__getLevel",
    "indent",
    "buttonConf",
    "attributesToDelete",
    "nameRegex",
    "i",
    "l",
    "attributes",
    "length",
    "match",
    "exec",
    "name",
    "hasOwnProperty",
    "value",
    "attr",
    "removeAttributeNode",
    "buttonIds",
    "keys",
    "sort",
    "buttons",
    "createElement",
    "bid",
    "button",
    "textContent",
    "label",
    "setAttribute",
    "ind",
    "createTextNode",
    "appendChild",
    "nodeName",
    "getAttributeNode",
    "util",
    "ConfigUpgrader"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ConfigUpgrader.js\n *\n * copyright (c) 2010-2020, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Upgrade config file to the current library version\n * @since 0.12.0\n * @author Tobias Br√§utigam\n */\nqx.Class.define('cv.util.ConfigUpgrader', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __indentation: 2,\n    __log: null,\n\n    /**\n     * Upgrade config source\n     * @param source {String|Document} content of a config file\n     */\n    upgrade (source) {\n      this.__log = [];\n      if (typeof source === 'string') {\n        source = qx.xml.Document.fromString(source);\n      }\n      // read version from config\n      const pagesNode = source.querySelector('pages');\n      let version = parseInt(pagesNode.getAttribute('lib_version'));\n      if (version === cv.Version.LIBRARY_VERSION) {\n        // nothing to do\n        return [null, source, this.__log];\n      } else {\n        while (version < cv.Version.LIBRARY_VERSION) {\n          // upgrade step by step\n          const method = this['from' + version + 'to' + (version + 1)];\n          if (method) {\n            version = method.call(this, source);\n          } else {\n            return [qx.locale.Manager.tr('Upgrader from version %1 not implemented', version), source, this.__log]\n          }\n        }\n        this.info('  - ' + this.__log.join('\\n  - '));\n        return [null, source, this.__log];\n      }\n    },\n\n    from7to8 (source) {\n      let c = 0;\n      source.querySelectorAll('plugins > plugin[name=\\'gweather\\']').forEach(node => {\n        const parent = node.parentNode;\n        const indentNode = node.previousSibling;\n        parent.removeChild(node);\n        if (indentNode.nodeType === 3) {\n          parent.removeChild(indentNode);\n        }\n        c++;\n      });\n      this.__setVersion(source, 8);\n      if (c > 0) {\n        this.__log.push('removed ' + c + ' \\'plugin\\'-nodes with obsolete plugin (gweather)');\n      }\n      return 8;\n    },\n\n    from8to9 (source) {\n      let c = 0;\n      const singleIndent = ''.padEnd(this.__indentation, ' ');\n      source.querySelectorAll('multitrigger').forEach(node => {\n        let level = this.__getLevel(node);\n        level++;\n        const indent = ''.padEnd(this.__indentation * level, ' ');\n        const buttonConf = {};\n        const attributesToDelete = [];\n        const nameRegex = /^button([\\d]+)(label|value)$/\n        for (let i = 0, l = node.attributes.length; i < l; i++) {\n          const match = nameRegex.exec(node.attributes[i].name);\n          if (match) {\n            if (!buttonConf.hasOwnProperty(match[1])) {\n              buttonConf[match[1]] = {};\n            }\n            buttonConf[match[1]][match[2]] = node.attributes[i].value;\n            attributesToDelete.push(node.attributes[i]);\n          }\n        }\n        attributesToDelete.forEach(attr => node.removeAttributeNode(attr));\n        const buttonIds = Object.keys(buttonConf).sort();\n        if (buttonIds.length > 0) {\n          const buttons = source.createElement('buttons');\n          buttonIds.forEach(bid => {\n            const button = source.createElement('button');\n            button.textContent = buttonConf[bid].value;\n            if (buttonConf[bid].label) {\n              button.setAttribute('label', buttonConf[bid].label);\n            }\n            const ind = source.createTextNode(\"\\n\" + indent + singleIndent);\n            buttons.appendChild(ind);\n            buttons.appendChild(button);\n          });\n          buttons.appendChild(source.createTextNode(\"\\n\" + indent));\n          node.appendChild(source.createTextNode(singleIndent));\n          node.appendChild(buttons);\n          node.appendChild(source.createTextNode(\"\\n\" + ''.padEnd(this.__indentation * (level - 1), ' ')));\n          c++;\n        }\n      });\n      this.__setVersion(source, 9);\n      if (c > 0) {\n        this.__log.push('converted ' + c + ' \\'multitrigger\\'-nodes to new button configuration');\n      }\n      return 9;\n    },\n\n    __getLevel (node) {\n      let level = 1;\n      let parent = node.parentNode;\n      while (parent && parent.nodeName !== 'pages') {\n        parent = parent.parentNode;\n        level++;\n      }\n      return level;\n    },\n\n    __setVersion (xml, version) {\n      xml.querySelector('pages').getAttributeNode('lib_version').value = version;\n    }\n  }\n});\n"
  ]
}