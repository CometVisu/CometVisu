{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/Mockup.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "IClient",
    "construct",
    "Client",
    "CLIENTS",
    "push",
    "window",
    "_receive",
    "receive",
    "bind",
    "model",
    "data",
    "Model",
    "getInstance",
    "_widgetDataGet",
    "getWidgetData",
    "_getWidgetDataModel",
    "getWidgetDataModel",
    "writeHistory",
    "testMode",
    "__loadTestData",
    "addresses",
    "properties",
    "dataReceived",
    "check",
    "init",
    "server",
    "connected",
    "event",
    "members",
    "backendName",
    "__xhr",
    "__sequence",
    "__sequenceIndex",
    "__simulations",
    "r",
    "request",
    "Xhr",
    "addListener",
    "e",
    "Config",
    "initialDemoData",
    "getTarget",
    "getResponse",
    "__applyTestData",
    "send",
    "xhr",
    "that",
    "sinon",
    "FakeXMLHttpRequest",
    "prototype",
    "open",
    "method",
    "url",
    "async",
    "username",
    "password",
    "responseText",
    "responseXML",
    "requestHeaders",
    "sendFlag",
    "useFilters",
    "xhrArgs",
    "arguments",
    "defake",
    "filters",
    "some",
    "filter",
    "call",
    "apply",
    "setRequestHeader",
    "readyStateChange",
    "OPENED",
    "dev",
    "FakeServer",
    "addFilter",
    "args",
    "startsWith",
    "indexOf",
    "test",
    "path",
    "split",
    "pop",
    "suffix",
    "location",
    "pathname",
    "getFakeServer",
    "respondWith",
    "parsed",
    "util",
    "Uri",
    "parseUri",
    "host",
    "report",
    "Record",
    "normalizeUrl",
    "substr",
    "length",
    "log",
    "Logger",
    "error",
    "debug",
    "response",
    "shift",
    "readyState",
    "status",
    "respond",
    "headers",
    "JSON",
    "stringify",
    "body",
    "fakeXhr",
    "workingXHR",
    "forEach",
    "copyAttrs",
    "attr",
    "navigator",
    "userAgent",
    "stateChange",
    "HEADERS_RECEIVED",
    "LOADING",
    "DONE",
    "onreadystatechange",
    "target",
    "addEventListener",
    "eventListeners",
    "hasOwnProperty",
    "handler",
    "json",
    "client",
    "update",
    "d",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "_registerSimulations",
    "simulations",
    "keys",
    "mainAddress",
    "simulation",
    "additionalAddresses",
    "addr",
    "_startSequence",
    "Timer",
    "once",
    "i",
    "Date",
    "getTime",
    "delay",
    "_processSimulation",
    "address",
    "value",
    "start",
    "stop",
    "startValues",
    "stopValues",
    "type",
    "direction",
    "initValue",
    "getState",
    "targetAddress",
    "undefined",
    "timer",
    "interval",
    "stepSize",
    "newValue",
    "subscribe",
    "write",
    "REPLAYING",
    "ts",
    "answer",
    "restart",
    "getResourcePath",
    "name",
    "getLastError",
    "getBackend",
    "authorize",
    "req",
    "terminate",
    "record",
    "showError",
    "message",
    "setInitialAddresses",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "Mockup"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Mockup.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Mockup simulating a backend + client for the Cometvisu protocol\n *\n * @author Tobias Bräutigam\n * @since 2016\n */\n/* istanbul ignore next */\nqx.Class.define('cv.io.Mockup', {\n  extend: qx.core.Object,\n  implement: cv.io.IClient,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function() {\n    this.base(arguments);\n    cv.io.Client.CLIENTS.push(this);\n    // make some functions accessible for the protactor runner\n    window._receive = this.receive.bind(this);\n    const model = cv.data.Model.getInstance();\n    window._widgetDataGet = model.getWidgetData.bind(model);\n    window._getWidgetDataModel = model.getWidgetDataModel.bind(model);\n    window.writeHistory = [];\n\n    const testMode = qx.core.Environment.get('cv.testMode');\n    if (typeof testMode === 'string' && testMode !== 'true') {\n      this.__loadTestData();\n    }\n    this.addresses = [];\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    dataReceived : {\n      check: 'Boolean',\n      init: true\n    },\n    server: {\n      check: 'String',\n      init: 'Mockup'\n    },\n    connected: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeConnected'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    backendName: 'mockup',\n    addresses: null,\n    __xhr: null,\n    __sequence: null,\n    __sequenceIndex: 0,\n    __simulations: null,\n\n    __loadTestData: function () {\n      // load the demo data to fill the visu with some values\n      const r = new qx.io.request.Xhr(qx.core.Environment.get('cv.testMode'));\n      r.addListener('success', function (e) {\n        cv.Config.initialDemoData = e.getTarget().getResponse();\n        this.__applyTestData();\n      }, this);\n      r.send();\n    },\n\n    __applyTestData: function () {\n      this.__xhr = cv.Config.initialDemoData.xhr;\n\n      const that = this;\n\n      // override sinons filter handling to be able to manipulate the target URL from the filter\n      // eslint-disable-next-line consistent-return\n      sinon.FakeXMLHttpRequest.prototype.open = function open(method, url, async, username, password) {\n        this.method = method;\n        this.url = url;\n        this.async = typeof async == 'boolean' ? async : true;\n        this.username = username;\n        this.password = password;\n        this.responseText = null;\n        this.responseXML = null;\n        this.requestHeaders = {};\n        this.sendFlag = false;\n        if (sinon.FakeXMLHttpRequest.useFilters === true) {\n          let xhrArgs = arguments;\n          let defake = sinon.FakeXMLHttpRequest.filters.some(function(filter) {\n            return filter.call(this, xhrArgs);\n          });\n          if (defake) {\n            const xhr = that.defake(this, xhrArgs);\n            xhr.open.apply(xhr, xhrArgs);\n            xhr.setRequestHeader('Accept', 'text/*, image/*');\n            return;\n          }\n        }\n        this.readyStateChange(sinon.FakeXMLHttpRequest.OPENED);\n      };\n\n      // configure server\n      qx.dev.FakeServer.getInstance().addFilter(function (args) {\n        const method = args[0];\n        const url = args[1];\n        if (url.startsWith('https://sentry.io')) {\n          return true;\n        } else if (method === 'GET' && (\n          url.indexOf('resource/visu_config') >= 0 ||\n          url.indexOf('resource/demo/visu_config') >= 0 ||\n          url.indexOf('resource/hidden-schema.json') >= 0 ||\n          url.indexOf('resource/manager/') >= 0\n        )) {\n          return true;\n        } else if (method === 'GET' && /rest\\/manager\\/index.php\\/fs\\?path=.+\\.[\\w]+$/.test(url)) {\n          // change url to avoid API access and do a real request\n          const path = url.split('=').pop();\n          const suffix = path.startsWith('demo/') ? '' : 'config/';\n          args[1] = window.location.pathname + 'resource/' + suffix + path;\n          return true;\n        }\n        return false;\n      }, this);\n      const server = qx.dev.FakeServer.getInstance().getFakeServer();\n      server.respondWith(function (request) {\n        const parsed = qx.util.Uri.parseUri(request.url);\n        let url = request.url;\n        if (!parsed.host || parsed.host === window.location.host) {\n          url = cv.report.Record.normalizeUrl(request.url);\n          if (url.startsWith(window.location.pathname)) {\n            url = url.substr(window.location.pathname.length-1);\n          }\n        }\n        if (!this.__xhr[url] || this.__xhr[url].length === 0) {\n          qx.log.Logger.error(this, '404: no logged responses for URI ' + url + ' found');\n        } else {\n          qx.log.Logger.debug(this, 'faking response for ' + url);\n          let response = '';\n          if (this.__xhr[url].length === 1) {\n            response = this.__xhr[url][0];\n          } else {\n            // multiple responses recorded use them as LIFO stack\n            response = this.__xhr[url].shift();\n          }\n\n          if (request.readyState === 4 && request.status === 404) {\n            // This is a hack, sometimes the request has a 404 status and send readystate\n            // the respond would fail if we do not override it here\n            request.readyState = 1;\n          }\n          request.respond(response.status, response.headers, JSON.stringify(response.body));\n        }\n      }.bind(this));\n    },\n\n    defake: function(fakeXhr, xhrArgs) {\n      // eslint-disable-next-line new-cap\n      const xhr = new sinon.xhr.workingXHR();\n      ['open', 'setRequestHeader', 'send', 'abort', 'getResponseHeader',\n          'getAllResponseHeaders', 'addEventListener', 'overrideMimeType', 'removeEventListener'].forEach(function(method) {\n          fakeXhr[method] = function() {\n            return xhr[method].apply(xhr, arguments);\n          };\n        });\n\n      const copyAttrs = function(args) {\n        args.forEach(function(attr) {\n          try {\n            fakeXhr[attr] = xhr[attr];\n          } catch (e) {\n            if (!/MSIE 6/.test(navigator.userAgent)) {\n             throw e;\n            }\n          }\n        });\n      };\n\n      const stateChange = function() {\n        fakeXhr.readyState = xhr.readyState;\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.HEADERS_RECEIVED) {\n          copyAttrs(['status', 'statusText']);\n        }\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.LOADING) {\n          copyAttrs(['responseText']);\n        }\n        if (xhr.readyState === sinon.FakeXMLHttpRequest.DONE) {\n          copyAttrs(['responseXML']);\n        }\n        if (fakeXhr.onreadystatechange) {\n          fakeXhr.onreadystatechange({ target: fakeXhr });\n        }\n      };\n      if (xhr.addEventListener) {\n        for (let event in fakeXhr.eventListeners) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (fakeXhr.eventListeners.hasOwnProperty(event)) {\n            fakeXhr.eventListeners[event].forEach(function(handler) {\n              xhr.addEventListener(event, handler);\n            });\n          }\n        }\n        xhr.addEventListener('readystatechange', stateChange);\n      } else {\n        xhr.onreadystatechange = stateChange;\n      }\n      return xhr;\n    },\n\n    /**\n     * This function gets called once the communication is established and session information is available\n     * @param json\n     */\n    receive: function (json) {\n      if (json) {\n        cv.io.Client.CLIENTS.forEach(function (client) {\n          client.update(json.d);\n        });\n      }\n    },\n\n    login: function (loginOnly, credentials, callback, context) {\n      if (callback) {\n        callback.call(context);\n        if (qx.core.Environment.get('cv.testMode')) {\n          if (cv.Config.initialDemoData) {\n            this.receive({\n              i: new Date().getTime(),\n              d: cv.Config.initialDemoData.states\n            });\n\n            if (cv.Config.initialDemoData.sequence) {\n              this.__sequence = cv.Config.initialDemoData.sequence;\n              this._startSequence();\n            }\n            if (cv.Config.initialDemoData.simulations) {\n              this._registerSimulations(cv.Config.initialDemoData.simulations);\n            }\n            cv.Config.initialDemoData = null;\n          }\n        }\n      }\n    },\n\n    _registerSimulations: function (simulations) {\n      this.__simulations = {};\n      Object.keys(simulations).forEach(function (mainAddress) {\n        const simulation = simulations[mainAddress];\n        this.__simulations[mainAddress] = simulation;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'additionalAddresses')) {\n          simulation.additionalAddresses.forEach(function (addr) {\n            this.__simulations[addr] = simulation;\n          }, this);\n        }\n      }, this);\n    },\n\n    _startSequence: function () {\n      if (this.__sequence.length <= this.__sequenceIndex) {\n        // start again\n        this.__sequenceIndex = 0;\n      }\n      qx.event.Timer.once(function () {\n        this.receive({\n          i: new Date().getTime(),\n          d: this.__sequence[this.__sequenceIndex].data\n        });\n        this.__sequenceIndex++;\n        this._startSequence();\n      }, this, this.__sequence[this.__sequenceIndex].delay);\n    },\n\n    _processSimulation: function (address, value) {\n      const simulation = this.__simulations[address];\n      if (!simulation) {\n        return;\n      }\n      let start = false;\n      let stop = false;\n      if (Object.prototype.hasOwnProperty.call(simulation, 'startValues')) {\n        // try the more specific matches with address included\n        start = simulation.startValues.indexOf(address + '|' + value) >= 0;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'stopValues')) {\n          stop = simulation.stopValues.indexOf(address + '|' + value) >= 0;\n        }\n        if (!stop) {\n          // the the more general ones\n          start = simulation.startValues.indexOf(value) >= 0;\n          stop = simulation.startValues.indexOf(value) >= 0;\n        }\n      }\n      if (start) {\n        // start simulation\n        if (simulation.type === 'shutter') {\n          simulation.direction = value === '0' ? 'up' : 'down';\n          let initValue = cv.data.Model.getInstance().getState(simulation.targetAddress);\n          if (initValue === undefined) {\n            initValue = 0;\n          }\n          simulation.value = initValue;\n\n          if (simulation.timer) {\n            simulation.timer.stop();\n          } else {\n            simulation.timer = new qx.event.Timer(simulation.interval || 100);\n            const stepSize = simulation.stepSize || 10;\n            simulation.timer.addListener('interval', function () {\n              let newValue = simulation.value;\n              if (simulation.direction === 'up') {\n                // drive up\n                newValue = simulation.value + stepSize;\n                if (newValue > 100) {\n                  simulation.timer.stop();\n                  return;\n                }\n              } else {\n                // drive down\n                newValue = simulation.value - stepSize;\n                if (newValue < 0) {\n                  simulation.timer.stop();\n                  return;\n                }\n              }\n              const update = {\n                i: new Date().getTime(),\n                d: {}\n              };\n              update.d[simulation.targetAddress] = newValue;\n              this.receive(update);\n              if (simulation.value !== newValue) {\n                simulation.value = newValue;\n              }\n            }, this);\n          }\n          simulation.timer.start();\n        }\n      } else if (stop) {\n        // stop simulation\n        if (simulation.timer) {\n          simulation.timer.stop();\n        }\n      }\n    },\n\n    /**\n     * Subscribe to the addresses in the parameter\n     * @param addresses\n     */\n    subscribe: function (addresses) {\n      this.addresses = addresses ? addresses : [];\n    },\n\n    /**\n     * This function sends a value\n     * @param address\n     * @param value\n     */\n    write: function (address, value) {\n      if (cv.report.Record.REPLAYING === true) {\n        // do nothing in replay mode\n        return;\n      }\n      const ts = new Date().getTime();\n      // store in window, to make it accessible for protractor\n      window.writeHistory.push({\n        address: address,\n        value: value,\n        ts: ts\n      });\n\n      if (this.__simulations && Object.prototype.hasOwnProperty.call(this.__simulations, address)) {\n        this._processSimulation(address, value);\n      } else {\n        // send update\n        const answer = {\n          i: ts,\n          d: {}\n        };\n        answer.d[address] = value;\n        this.debug('sending value: ' + value + ' to address: ' + address);\n        this.receive(answer);\n      }\n    },\n\n    restart: function() {},\n\n    stop: function () {},\n\n    getResourcePath: function (name) {\n      return name;\n    },\n\n    getLastError: function () {\n      return null;\n    },\n\n    getBackend: function () {\n      return {};\n    },\n\n    authorize: function (req) {\n    },\n\n    terminate: function () {},\n\n    update: function(json) {},\n    record: function(type, data) {},\n    showError: function(type, message, args) {},\n\n    // not used / needed in this client\n    setInitialAddresses: function(addresses) {\n    },\n\n    hasCustomChartsDataProcessor : function () {\n      return false;\n    },\n    processChartsData : function (data) {\n      return data;\n    },\n    hasProvider: function (name) {\n      return false;\n    },\n    getProviderUrl: function (name) {\n      return null;\n    },\n    getProviderConvertFunction : function (name, format) {\n      return null;\n    }\n  }\n});\n"
  ]
}