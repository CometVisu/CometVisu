{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/openhab/Rest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "IClient",
    "construct",
    "backendName",
    "backendUrl",
    "initialAddresses",
    "_backendName",
    "_backendUrl",
    "__groups",
    "__memberLookup",
    "properties",
    "connected",
    "check",
    "init",
    "event",
    "server",
    "nullable",
    "members",
    "__lastError",
    "__token",
    "getBackend",
    "setInitialAddresses",
    "addresses",
    "getResourcePath",
    "name",
    "map",
    "src",
    "parts",
    "split",
    "item",
    "pop",
    "url",
    "params",
    "length",
    "push",
    "start",
    "endTime",
    "end",
    "__convertTimes",
    "Date",
    "startTime",
    "match",
    "exec",
    "amount",
    "parseInt",
    "interval",
    "setTime",
    "getTime",
    "test",
    "toISOString",
    "join",
    "time",
    "d",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "response",
    "data",
    "newRrd",
    "Array",
    "j",
    "l",
    "parseFloat",
    "state",
    "error",
    "authorize",
    "req",
    "setRequestHeader",
    "createAuthorizedRequest",
    "method",
    "request",
    "Xhr",
    "__isActive",
    "type",
    "subscribe",
    "filters",
    "addListener",
    "e",
    "getTarget",
    "res",
    "getResponse",
    "update",
    "forEach",
    "entry",
    "isArray",
    "active",
    "obj",
    "prototype",
    "hasOwnProperty",
    "call",
    "send",
    "running",
    "report",
    "Record",
    "REPLAYING",
    "eventSource",
    "EventSource",
    "addEventListener",
    "handleMessage",
    "bind",
    "handleError",
    "onerror",
    "setConnected",
    "onopen",
    "debug",
    "terminate",
    "close",
    "payload",
    "record",
    "JSON",
    "parse",
    "topic",
    "change",
    "value",
    "groupNames",
    "groupName",
    "group",
    "keys",
    "memberName",
    "member",
    "write",
    "address",
    "setRequestData",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "username",
    "btoa",
    "password",
    "setServer",
    "getResponseHeader",
    "getLastError",
    "restart",
    "full",
    "json",
    "showError",
    "message",
    "args",
    "hasProvider",
    "includes",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "result",
    "label",
    "insertText",
    "detail",
    "kind",
    "window",
    "monaco",
    "languages",
    "CompletionItemKind",
    "Value",
    "element",
    "hints",
    "transform",
    "toLowerCase",
    "EnumMember",
    "openhab",
    "Rest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Rest.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * openHAB Rest client, that uses the native openHAB REST-API directly and does not\n * need the openHAB-cometvisu binding to be installed\n */\nqx.Class.define('cv.io.openhab.Rest', {\n  extend: qx.core.Object,\n  implement: cv.io.IClient,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (backendName, backendUrl) {\n    this.base(arguments);\n    this.initialAddresses = [];\n    this._backendName = backendName;\n    this._backendUrl = backendUrl || '/rest/';\n    this.__groups = {};\n    this.__memberLookup = {};\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n\n    connected: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeConnected'\n    },\n\n    server: {\n      check: 'String',\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __lastError: null,\n    _backendName: null,\n    _backendUrl: null,\n    __token: null,\n    __groups: null,\n    __memberLookup: null,\n\n    getBackend: function () {\n      return {};\n    },\n\n    // not used / needed in this client\n    setInitialAddresses: function(addresses) {\n    },\n\n    getResourcePath : function (name, map) {\n      if (name === 'charts' && map && map.src) {\n        const parts = map.src.split(':');\n        const item = parts.pop();\n        let url = this._backendUrl + 'persistence/items/' + item;\n        const params = [];\n        if (parts.length > 0) {\n          params.push('serviceId=' + parts[0]);\n        }\n        if (map.start) {\n          let endTime = map.end ? this.__convertTimes(map.end) : new Date();\n          let startTime = new Date();\n          const match = /^end-([\\d]*)([\\w]+)$/.exec(map.start);\n          if (match) {\n            const amount = parseInt(match[1]) || 1;\n            let interval = 0;\n            switch (match[2]) {\n              case 'second':\n                interval = 1000;\n                break;\n              case 'minute':\n                interval = 60000;\n                break;\n              case 'hour':\n                interval = 60 * 60000;\n                break;\n              case 'day':\n                interval = 24 * 60 * 60000;\n                break;\n              case 'month':\n                interval = 30 * 24 * 60 * 60000;\n                break;\n              case 'year':\n                interval = 365 * 24 * 60 * 60000;\n                break;\n            }\n            startTime.setTime(endTime.getTime() - (amount * interval));\n          } else if (/^[\\d]+$/.test(map.start)) {\n            startTime.setTime(parseInt(map.start) * 1000);\n          }\n\n          params.push('starttime=' + startTime.toISOString());\n          params.push('endtime=' + endTime.toISOString());\n        }\n\n        url += '?' + params.join('&');\n        return url;\n      }\n      return null;\n    },\n\n    __convertTimes: function (time) {\n      if (time === 'now') {\n        return new Date();\n      } else if (/^[\\d]+$/.test(time)) {\n        let d = new Date();\n        d.setTime(parseInt(time) * 1000);\n        return d;\n      }\n      return null;\n    },\n\n    hasCustomChartsDataProcessor : function () {\n      return true;\n    },\n\n    processChartsData : function (response) {\n      if (response && response.data) {\n        const data = response.data;\n        const newRrd = new Array(data.length);\n        for (let j = 0, l = data.length; j < l; j++) {\n          newRrd[j] = [data[j].time, parseFloat(data[j].state)];\n        }\n        return newRrd;\n      }\n      this.error('invalid chart data response');\n      return [];\n    },\n\n    /**\n     * Auth basic authentication header to request\n     * @param req {qx.io.request.Xhr}\n     * @private\n     */\n    authorize: function (req) {\n      if (this.__token) {\n        req.setRequestHeader('Authorization', this.__token);\n      }\n    },\n\n    /**\n     * Creates an authorized request to the backend with a relative path\n     * @param url {String?} appended to the backends base path\n     * @param method {String?} HTTP method type (GET is the default)\n     * @return A XHR request {qx.io.request.Xhr}\n     */\n    createAuthorizedRequest: function (url, method) {\n      const req = new qx.io.request.Xhr(this._backendUrl + (url || ''), method);\n      this.authorize(req);\n      return req;\n    },\n\n    __isActive: function (type, state) {\n      switch (type) {\n        case 'Decimal':\n        case 'Percent':\n        case 'Number':\n        case 'Dimmer':\n          return parseInt(state) > 0;\n\n        case 'Rollershutter':\n          return state === '0';\n\n        case 'Contact':\n          return state === 'OPENED';\n\n        case 'OnOff':\n        case 'Switch':\n          return state === 'ON';\n\n        default:\n          return null;\n      }\n    },\n\n    subscribe : function (addresses, filters) {\n      // send first request to get all states once\n      const req = this.createAuthorizedRequest('items?fields=name,state,members,type&recursive=true');\n      req.addListener('success', function(e) {\n        const req = e.getTarget();\n\n        const res = req.getResponse();\n        const update = {};\n        res.forEach(function(entry) {\n          if (entry.members && Array.isArray(entry.members)) {\n            // this is a group\n            let active = 0;\n            const map = {};\n            entry.members.forEach(obj => {\n              map[obj.name] = {type: obj.type, state: obj.state};\n              if (this.__isActive(obj.type, obj.state)) {\n                active++;\n              }\n              if (!Object.prototype.hasOwnProperty.call(this.__memberLookup, obj.name)) {\n                this.__memberLookup[obj.name] = [entry.name];\n              } else {\n                this.__memberLookup[obj.name].push(entry.name);\n              }\n              return map;\n            });\n            this.__groups[entry.name] = {\n              members: map,\n              active: active\n            };\n            update['number:' + entry.name] = active;\n          }\n          update[entry.name] = entry.state;\n        }, this);\n        this.update(update);\n      }, this);\n      // Send request\n      req.send();\n\n      // create sse session\n      this.running = true;\n      if (!cv.report.Record.REPLAYING) {\n        this.eventSource = new EventSource(this._backendUrl + 'events?topics=openhab/items/*/statechanged');\n\n        // add default listeners\n        this.eventSource.addEventListener('message', this.handleMessage.bind(this), false);\n        this.eventSource.addEventListener('error', this.handleError.bind(this), false);\n        // add additional listeners\n        //Object.getOwnPropertyNames(this.__additionalTopics).forEach(this.__addRecordedEventListener, this);\n        this.eventSource.onerror = function () {\n          this.error('connection lost');\n          this.setConnected(false);\n        }.bind(this);\n        this.eventSource.onopen = function () {\n          this.debug('connection established');\n          this.setConnected(true);\n        }.bind(this);\n      }\n    },\n\n    terminate: function () {\n      this.debug('terminating connection');\n      if (this.eventSource) {\n        this.eventSource.close();\n      }\n    },\n\n    handleMessage: function(payload) {\n      if (payload.type === 'message') {\n        this.record('read', {type: payload.type, data: payload.data});\n        const data = JSON.parse(payload.data);\n        if (data.type === 'ItemStateChangedEvent' || data.type === 'GroupItemStateChangedEvent') {\n          //extract item name from topic\n          const update = {};\n          const item = data.topic.split('/')[2];\n          const change = JSON.parse(data.payload);\n          update[item] = change.value;\n          // check if this Item is part of any group\n          if (Object.prototype.hasOwnProperty.call(this.__memberLookup, item)) {\n            const groupNames = this.__memberLookup[item];\n            groupNames.forEach(groupName => {\n              const group = this.__groups[groupName];\n              let active = 0;\n              group.members[item].value = change.value;\n              Object.keys(group.members).forEach(memberName => {\n                const member = group.members[memberName];\n                if (this.__isActive(member.type, member.value)) {\n                  active++;\n                }\n              });\n              group.active = active;\n              update['number:' + groupName] = active;\n            });\n          }\n          this.update(update);\n        }\n      }\n    },\n\n    write: function (address, value) {\n      const req = this.createAuthorizedRequest('items/' + address, 'POST');\n      req.setRequestHeader('Content-Type', 'text/plain');\n      req.setRequestData('' + value);\n      req.send();\n    },\n\n    handleError: function (error) {\n      this.error(error);\n    },\n\n    login : function (loginOnly, credentials, callback, context) {\n      if (credentials && credentials.username) {\n        // just saving the credentials for later use as we are using basic authentication\n        this.__token = 'Basic ' + btoa(credentials.username + ':' + (credentials.password || ''));\n      }\n      // no login needed we just do a request to the if the backend is reachable\n      const req = this.createAuthorizedRequest();\n      req.addListener('success', function(e) {\n        const req = e.getTarget();\n        this.setServer(req.getResponseHeader('Server'));\n        if (callback) {\n          callback.call(context);\n        }\n      }, this);\n      // Send request\n      req.send();\n    },\n\n    getLastError: function() {\n      return this.__lastError;\n    },\n    restart: function(full) {\n      this.error('Not implemented');\n    },\n\n    update: function(json) {}, // jshint ignore:line\n    record: function(type, data) {},\n    showError: function(type, message, args) {},\n\n    hasProvider: function (name) {\n      return ['addresses', 'rrd'].includes(name);\n    },\n    getProviderUrl: function (name) {\n      switch (name) {\n        case 'addresses':\n          return this._backendUrl + 'items?fields=name,type,label';\n        case 'rrd':\n          return this._backendUrl + 'persistence/items';\n        default:\n          return null;\n      }\n    },\n    getProviderConvertFunction : function (name, format) {\n      switch (name) {\n        case 'addresses':\n          return function (result) {\n            let data;\n            if (format === 'monaco') {\n              return result.map(entry => ({\n                label: entry.name,\n                insertText: entry.name,\n                detail: entry.type,\n                kind: window.monaco.languages.CompletionItemKind.Value\n              }));\n            }\n            data = {};\n            result.forEach(element => {\n              const type = element.type ? element.type.split(':')[0] : '';\n              if (!Object.prototype.hasOwnProperty.call(data, type)) {\n                data[type] = [];\n              }\n              const entry = {\n                value: element.name,\n                label: element.label || ''\n              };\n              if (type) {\n                entry.hints = {\n                  transform: 'OH:' + type.toLowerCase()\n                };\n              }\n              data[type].push(entry);\n            });\n            return data;\n          };\n        case 'rrd':\n          return function (result) {\n            if (format === 'monaco') {\n              return result.map(element => ({insertText: element, label: element, kind: window.monaco.languages.CompletionItemKind.EnumMember}));\n            } \n              return result.map(element => ({value: element, label: element}));\n          };\n        default:\n          return null;\n      }\n    }\n  }\n});\n"
  ]
}