{
  "className": "cv.TemplateEngine",
  "packageName": "cv",
  "name": "TemplateEngine",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 830,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 28,
        "column": 13
      },
      "end": {
        "line": 48,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "partsLoaded": {
      "location": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the loading state of the parts</p>"
          }
        ]
      },
      "name": "partsLoaded",
      "propertyType": "new",
      "event": "changePartsLoaded",
      "apply": "_applyLoaded",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "scriptsLoaded": {
      "location": {
        "start": {
          "line": 65,
          "column": 4
        },
        "end": {
          "line": 69,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the loading state of the scripts</p>"
          }
        ]
      },
      "name": "scriptsLoaded",
      "propertyType": "new",
      "apply": "_applyLoaded",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "ready": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the initialization state of the TemplateEngine. It gets until when all\n external stuff (pars, scripts, etc.) has been loaded.</p>"
          }
        ]
      },
      "name": "ready",
      "propertyType": "new",
      "event": "changeReady",
      "apply": "_applyReady",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "currentPage": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 5
        }
      },
      "name": "currentPage",
      "propertyType": "new",
      "event": "changeCurrentPage",
      "nullable": true,
      "allowNull": true,
      "check": "cv.ui.structure.IPage"
    },
    "domFinished": {
      "location": {
        "start": {
          "line": 88,
          "column": 4
        },
        "end": {
          "line": 93,
          "column": 5
        }
      },
      "name": "domFinished",
      "propertyType": "new",
      "event": "changeDomFinished",
      "apply": "_applyDomFinished",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "commands": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 5
        }
      },
      "name": "commands",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "qx.ui.command.Group"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "pagePartsHandler": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 26
        }
      },
      "type": "variable",
      "access": "public"
    },
    "bindClickToWidget": {
      "location": {
        "start": {
          "line": 110,
          "column": 4
        },
        "end": {
          "line": 110,
          "column": 29
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>if true the whole widget reacts on click events</p>"
          },
          {
            "name": "@description",
            "body": "<p>if false only the actor in the widget reacts on click events</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "defaults": {
      "location": {
        "start": {
          "line": 119,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 19
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Structure where a design can set a default value that a widget or plugin\n can use.\n This is especially important for design relevant information like colors\n that can not be set though CSS.\n Usage: this.defaults.plugin.foo = {bar: 'baz'};</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "main_scroll": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 121,
          "column": 22
        }
      },
      "type": "variable",
      "access": "public"
    },
    "old_scroll": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 122,
          "column": 19
        }
      },
      "type": "variable",
      "access": "public"
    },
    "visu": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 15
        }
      },
      "type": "variable",
      "access": "public"
    },
    "pluginsToLoadCount": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 26
        }
      },
      "type": "variable",
      "access": "public"
    },
    "xml": {
      "location": {
        "start": {
          "line": 126,
          "column": 4
        },
        "end": {
          "line": 126,
          "column": 14
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__partQueue": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_domFinishedQueue": {
      "location": {
        "start": {
          "line": 129,
          "column": 4
        },
        "end": {
          "line": 129,
          "column": 27
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "lazyPlugins": {
      "location": {
        "start": {
          "line": 132,
          "column": 4
        },
        "end": {
          "line": 132,
          "column": 35
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>plugins that do not need to be loaded to proceed with the initial setup</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "loadParts": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 174,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Load parts (e.g. plugins, structure)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parts {String[]|String} parts to load",
            "paramName": "parts",
            "description": " parts to load",
            "type": [
              {
                "type": "String",
                "dimensions": 2
              },
              "String"
            ]
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyReady": {
      "location": {
        "start": {
          "line": 177,
          "column": 4
        },
        "end": {
          "line": 181,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "ready"
      ]
    },
    "_applyLoaded": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 189,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "partsLoaded",
        "scriptsLoaded"
      ]
    },
    "_applyDomFinished": {
      "location": {
        "start": {
          "line": 192,
          "column": 4
        },
        "end": {
          "line": 203,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "domFinished"
      ]
    },
    "executeWhenDomFinished": {
      "location": {
        "start": {
          "line": 210,
          "column": 4
        },
        "end": {
          "line": 217,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a callback to a queue which is executed after DOM has been rendered</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function}"
          },
          {
            "name": "@param",
            "body": "context {Object}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addAddress": {
      "location": {
        "start": {
          "line": 223,
          "column": 4
        },
        "end": {
          "line": 226,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Please use {cv.data.Model.getInstance().addAddress()} instead</p>"
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{0.11.0} Please use {cv.data.Model.getInstance().addAddress()} instead"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAddresses": {
      "location": {
        "start": {
          "line": 232,
          "column": 4
        },
        "end": {
          "line": 235,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Please use {cv.data.Model.getInstance().getAddresses()} instead</p>"
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{0.11.0} Please use {cv.data.Model.getInstance().getAddresses()} instead"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "initBackendClient": {
      "location": {
        "start": {
          "line": 240,
          "column": 4
        },
        "end": {
          "line": 280,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialize the {@link cv.io.Client} for backend communication</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_handleClientError": {
      "location": {
        "start": {
          "line": 282,
          "column": 4
        },
        "end": {
          "line": 320,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected"
    },
    "resetPageValues": {
      "location": {
        "start": {
          "line": 325,
          "column": 4
        },
        "end": {
          "line": 330,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset some values related to the current page</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "parseXML": {
      "location": {
        "start": {
          "line": 337,
          "column": 4
        },
        "end": {
          "line": 432,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Read basic settings and meta-section from config document</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "loaded_xml {Document} XML-configuration document",
            "paramName": "loaded_xml",
            "description": " XML-configuration document",
            "type": "Document"
          },
          {
            "name": "@param",
            "body": "done {Function} callback that is called when the parsing has finished",
            "paramName": "done",
            "description": " callback that is called when the parsing has finished",
            "type": "Function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setupPage": {
      "location": {
        "start": {
          "line": 437,
          "column": 4
        },
        "end": {
          "line": 505,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Main setup to get everything running and show the initial page.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "startScreensaver": {
      "location": {
        "start": {
          "line": 510,
          "column": 4
        },
        "end": {
          "line": 519,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Start the screensaver if a screensave time is set</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "startInitialRequest": {
      "location": {
        "start": {
          "line": 524,
          "column": 4
        },
        "end": {
          "line": 546,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Start retrieving data from backend</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createPages": {
      "location": {
        "start": {
          "line": 555,
          "column": 4
        },
        "end": {
          "line": 568,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Start the parsing process</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "page {Element} XML-configuration element",
            "paramName": "page",
            "description": " XML-configuration element",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "path {String} internal poth",
            "paramName": "path",
            "description": " internal poth",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "flavour {String} inherited flavour",
            "paramName": "flavour",
            "description": " inherited flavour",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "type {String} page type (text, 2d, 3d)",
            "paramName": "type",
            "description": " page type (text, 2d, 3d)",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPageIdByPath": {
      "location": {
        "start": {
          "line": 576,
          "column": 4
        },
        "end": {
          "line": 594,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the id of the page the given path is associated to</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "page_name {String}"
          },
          {
            "name": "@param",
            "body": "path {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "traversePath": {
      "location": {
        "start": {
          "line": 596,
          "column": 4
        },
        "end": {
          "line": 622,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getPageIdByName": {
      "location": {
        "start": {
          "line": 624,
          "column": 4
        },
        "end": {
          "line": 694,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "scrollToPage": {
      "location": {
        "start": {
          "line": 696,
          "column": 4
        },
        "end": {
          "line": 744,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "selectDesign": {
      "location": {
        "start": {
          "line": 746,
          "column": 4
        },
        "end": {
          "line": 828,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getPartsLoaded": {
      "type": "function",
      "name": "getPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>partsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for partsLoaded"
          }
        ]
      }
    },
    "isPartsLoaded": {
      "type": "function",
      "name": "isPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>partsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for partsLoaded"
          }
        ]
      }
    },
    "setPartsLoaded": {
      "type": "function",
      "name": "setPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>partsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for partsLoaded"
          }
        ]
      }
    },
    "resetPartsLoaded": {
      "type": "function",
      "name": "resetPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>partsLoaded</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ]
      }
    },
    "getScriptsLoaded": {
      "type": "function",
      "name": "getScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>scriptsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for scriptsLoaded"
          }
        ]
      }
    },
    "isScriptsLoaded": {
      "type": "function",
      "name": "isScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>scriptsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for scriptsLoaded"
          }
        ]
      }
    },
    "setScriptsLoaded": {
      "type": "function",
      "name": "setScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>scriptsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for scriptsLoaded"
          }
        ]
      }
    },
    "resetScriptsLoaded": {
      "type": "function",
      "name": "resetScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>scriptsLoaded</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ]
      }
    },
    "getReady": {
      "type": "function",
      "name": "getReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>ready</code>.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for ready"
          }
        ]
      }
    },
    "isReady": {
      "type": "function",
      "name": "isReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>ready</code>.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for ready"
          }
        ]
      }
    },
    "setReady": {
      "type": "function",
      "name": "setReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>ready</code>.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for ready"
          }
        ]
      }
    },
    "resetReady": {
      "type": "function",
      "name": "resetReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>ready</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ]
      }
    },
    "getCurrentPage": {
      "type": "function",
      "name": "getCurrentPage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>currentPage</code>.\n\nFor further details take a look at the property definition: {@link #currentPage}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "cv.ui.structure.IPage",
            "desc": "Returns the value for currentPage"
          }
        ]
      }
    },
    "setCurrentPage": {
      "type": "function",
      "name": "setCurrentPage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>currentPage</code>.\n\nFor further details take a look at the property definition: {@link #currentPage}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "cv.ui.structure.IPage",
            "paramName": "value",
            "desc": "Value for currentPage"
          }
        ]
      }
    },
    "resetCurrentPage": {
      "type": "function",
      "name": "resetCurrentPage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>currentPage</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #currentPage}."
          }
        ]
      }
    },
    "getDomFinished": {
      "type": "function",
      "name": "getDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>domFinished</code>.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for domFinished"
          }
        ]
      }
    },
    "isDomFinished": {
      "type": "function",
      "name": "isDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>domFinished</code>.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for domFinished"
          }
        ]
      }
    },
    "setDomFinished": {
      "type": "function",
      "name": "setDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>domFinished</code>.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for domFinished"
          }
        ]
      }
    },
    "resetDomFinished": {
      "type": "function",
      "name": "resetDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>domFinished</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ]
      }
    },
    "getCommands": {
      "type": "function",
      "name": "getCommands",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>commands</code>.\n\nFor further details take a look at the property definition: {@link #commands}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.command.Group",
            "desc": "Returns the value for commands"
          }
        ]
      }
    },
    "setCommands": {
      "type": "function",
      "name": "setCommands",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>commands</code>.\n\nFor further details take a look at the property definition: {@link #commands}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.command.Group",
            "paramName": "value",
            "desc": "Value for commands"
          }
        ]
      }
    },
    "resetCommands": {
      "type": "function",
      "name": "resetCommands",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>commands</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #commands}."
          }
        ]
      }
    }
  },
  "descendants": []
}