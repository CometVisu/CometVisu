{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/data/Model.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__states",
    "__stateListeners",
    "__addressList",
    "__widgetData",
    "statics",
    "READ",
    "WRITE",
    "isReadAddress",
    "address",
    "mode",
    "cv",
    "data",
    "Model",
    "isWriteAddress",
    "members",
    "getStateListener",
    "onUpdate",
    "state",
    "initial",
    "prototype",
    "hasOwnProperty",
    "call",
    "changed",
    "forEach",
    "listener",
    "update",
    "addressList",
    "getOwnPropertyNames",
    "getState",
    "addUpdateListener",
    "callback",
    "context",
    "push",
    "removeUpdateListener",
    "removeIndex",
    "some",
    "entry",
    "i",
    "splice",
    "length",
    "addAddress",
    "id",
    "list",
    "getAddresses",
    "keys",
    "setAddressList",
    "value",
    "getAddressList",
    "resetAddressList",
    "getWidgetData",
    "path",
    "getWidgetDataByElement",
    "element",
    "parent",
    "parentNode",
    "getAttribute",
    "undefined",
    "setWidgetData",
    "obj",
    "attrname",
    "setWidgetDataModel",
    "getWidgetDataModel",
    "resetWidgetDataModel",
    "clear"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Model.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Internal Model which holds all relevant data like addresses and widgetData\n * and the states. Widget can add themselves as listeners to updates of certain addresses.\n *\n * @author Tobias Br√§utigam\n * @since 0.11.0 (2017)\n */\nqx.Class.define('cv.data.Model', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function() {\n    this.__states = {};\n    this.__stateListeners = {};\n    this.__addressList = {};\n    this.__widgetData = {};\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    READ: 1,\n    WRITE: 2,\n\n    isReadAddress: function(address) {\n      return !!(address.mode & cv.data.Model.READ);\n    },\n\n    isWriteAddress: function(address) {\n      return !!(address.mode & cv.data.Model.WRITE);\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __states : null,\n    __stateListeners: null,\n    __addressList : null,\n    __widgetData: null,\n\n    getStateListener: function () {\n      return this.__stateListeners;\n    },\n\n    /**\n     * Updates the state of a single address\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param state {var} new state\n     */\n    onUpdate: function(address, state) {\n      const initial = !Object.prototype.hasOwnProperty.call(this.__states, address);\n      const changed = initial || this.__states[address] !== state;\n      this.__states[address] = state;\n      // notify listeners\n      if (this.__stateListeners[address]) {\n        this.__stateListeners[address].forEach(function(listener) {\n          listener[0].call(listener[1], address, state, initial, changed);\n        }, this);\n      }\n    },\n\n    /**\n     * Handle incoming data from backend\n     * @param data {Map} Key/value map of address/state\n     */\n    update: function(data) {\n      if (!data) {\n return; \n}\n      const addressList = this.__addressList;\n      Object.getOwnPropertyNames(data).forEach(function(address) {\n        if (Object.prototype.hasOwnProperty.call(addressList, address)) {\n          this.onUpdate(address, data[address]);\n        }\n      }, this);\n    },\n\n    /**\n     * Get the current state of an address.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @return {var}\n     */\n    getState: function(address) {\n      return this.__states[address];\n    },\n\n    /**\n     * Add a listener to an address, that gets called when an update for that address has been received.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     */\n    addUpdateListener: function(address, callback, context) {\n      if (!this.__stateListeners[address]) {\n        this.__stateListeners[address] = [];\n      }\n      this.__stateListeners[address].push([callback, context]);\n    },\n\n    /**\n     * Remove an address listener\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     */\n    removeUpdateListener: function(address, callback, context) {\n      if (this.__stateListeners[address]) {\n        let removeIndex = -1;\n        this.__stateListeners[address].some(function(entry, i) {\n          if (entry[0] === callback && entry[1] === context) {\n            removeIndex = i;\n            return true;\n          }\n          return false;\n        });\n        if (removeIndex >= 0) {\n          this.__stateListeners[address].splice(removeIndex, 1);\n          if (this.__stateListeners[address].length === 0) {\n            delete this.__stateListeners[address];\n          }\n        }\n      }\n    },\n\n    /**\n     * Add an Address -> Path mapping to the addressList\n     * @param address {String} KNX-GA or openHAB item name\n     * @param id {String} path to the widget\n     */\n    addAddress: function (address, id) {\n      const list = this.__addressList;\n      if (address in list) {\n        list[address].push(id);\n      } else {\n        list[address] = [id];\n      }\n    },\n\n    /**\n     * Get the addresses as Array.\n     * @return {Map} Address -> path mapping\n     */\n    getAddresses: function () {\n      return Object.keys(this.__addressList);\n    },\n\n    /**\n     * Setter for address list.\n     * @param value {Map} Address -> path mapping\n     */\n    setAddressList: function(value) {\n      this.__addressList = value;\n    },\n\n    /**\n     * Getter for the address list.\n     * @return {Map} Address -> path mapping\n     */\n    getAddressList: function() {\n      return this.__addressList;\n    },\n\n    /**\n     * Clears the current address list.\n     * @internal\n     */\n    resetAddressList: function() {\n      this.__addressList = {};\n    },\n\n    /**\n     * Return (reference to) widgetData object by path.\n     * @param path {String} widget path\n     * @return {Map} widget data map\n     */\n    getWidgetData: function (path) {\n      return this.__widgetData[path] || (this.__widgetData[path] = {});\n    },\n\n\n    /**\n     * Return (reference to) widget data by element\n     * @param element {Element} DOM-Element to retrieve the widgetData for\n     * @return {Map} widget data Map\n     */\n    getWidgetDataByElement: function (element) {\n      const parent = element.parentNode;\n      let path = parent.getAttribute('id');\n\n      if (path === undefined) {\n        path = parent.parentNode.getAttribute('id');\n      }\n      return this.getWidgetData(path);\n    },\n\n    /**\n     * Merge obj in the widgetData.\n     *\n     * @param path {String} widget path to store the data\n     * @param obj {Map} data to store\n     * @return {Map} updated widget data map\n     */\n    setWidgetData: function (path, obj) {\n      const data = this.getWidgetData(path);\n\n      Object.getOwnPropertyNames(obj).forEach(function(attrname) {\n        data[attrname] = obj[attrname];\n      }, this);\n      return data;\n    },\n\n    /**\n     * Setter for widget data model\n     * @param value {Map} path -> widget data map\n     */\n    setWidgetDataModel: function(value) {\n      this.__widgetData = value;\n    },\n\n    /**\n     * Getter for widget data model\n     * @return {Map} path -> widget data map\n     */\n    getWidgetDataModel: function() {\n      return this.__widgetData;\n    },\n\n    /**\n     * Clear the widget data model.\n     * @internal\n     */\n    resetWidgetDataModel: function() {\n      this.__widgetData = {};\n    },\n\n    /**\n     * Clear the model, internal method for testing purposes\n     * @internal\n     */\n    clear: function() {\n      this.__addressList = {};\n      this.__widgetData = {};\n      this.__states = {};\n      this.__stateListeners = {};\n    }\n  }\n\n});\n"
  ]
}