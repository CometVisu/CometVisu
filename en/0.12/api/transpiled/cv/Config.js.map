{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/Config.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "Maturity",
    "release",
    "development",
    "treePath",
    "currentPageId",
    "libraryVersion",
    "libraryCheck",
    "maxMobileScreenWidth",
    "maxScreenWidthColspanS",
    "maxScreenWidthColspanM",
    "scrollSpeed",
    "defaultColumns",
    "minColumnWidth",
    "enableAddressQueue",
    "backend",
    "backendUrl",
    "configSuffix",
    "clientDesign",
    "use_maturity",
    "configSettings",
    "mappings",
    "stylings",
    "usedRowspans",
    "pluginsToLoad",
    "iconsFromConfig",
    "rememberLastPage",
    "lazyLoading",
    "designStructureMap",
    "reporting",
    "enableLogging",
    "configServer",
    "initialDemoData",
    "getStructure",
    "design",
    "getDesign",
    "structure",
    "hasOwnProperty",
    "indexOf",
    "guessIfProxied",
    "cv",
    "TemplateEngine",
    "getInstance",
    "visu",
    "getServer",
    "Error",
    "addMapping",
    "name",
    "mapping",
    "getMapping",
    "hasMapping",
    "clearMappings",
    "addStyling",
    "styling",
    "getStyling",
    "hasStyling",
    "defer",
    "req",
    "util",
    "Uri",
    "parseUri",
    "window",
    "location",
    "href",
    "queryKey",
    "enableQueue",
    "Config",
    "startpage",
    "request",
    "testMode",
    "io",
    "Client",
    "TEST_MODE",
    "config",
    "forceReload",
    "core",
    "Environment",
    "get",
    "enableCache",
    "console",
    "warn",
    "ConfigCache",
    "clear",
    "log",
    "uagent",
    "navigator",
    "userAgent",
    "toLowerCase",
    "mobileDevice",
    "test",
    "forceDevice",
    "maturity",
    "url_maturity",
    "isNaN"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Config.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Main settings that an be accessed from anywhere inside the Application\n */\nqx.Class.define('cv.Config', {\n  type:\"static\",\n\n  statics: {\n    /**\n     * Define ENUM of maturity levels for features, so that e.g. the editor can\n     * ignore some widgets when they are not supported yet\n     */\n    Maturity : {\n      release: 0,\n      development: 1\n    },\n\n    /**\n     * The current path tree\n     * @type {String}\n     */\n    treePath: \"\",\n\n    /**\n     * Path to the current page\n     * @type {String}\n     */\n    currentPageId: null,\n\n    /**\n     * Config file version\n     * @type {Number}\n     */\n    libraryVersion: 8,\n    /**\n     * @type {Boolean}\n     */\n    libraryCheck: true,\n    /**\n     * Threshold where the mobile.css is loaded\n     * @type {Number}\n     */\n    maxMobileScreenWidth: 480,\n    /**\n     * Threshold where colspan-s is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanS: 599,\n    /**\n     * threshold where colspan-m is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanM: 839,\n    /**\n     * Default scrolling speed for page changes (in ms)\n     * @type {Number}\n     */\n    scrollSpeed : 400,\n\n    /**\n     * Default number of colums the layout should use\n     * @type {Number}\n     */\n    defaultColumns : 12,\n    /**\n     * Minimum column width\n     * @type {Number}\n     */\n    minColumnWidth : 120,\n\n    /**\n     * If true, the client only loads the states for the widgets that are part of the start page at first\n     * read request (should increase the performance when huge config files are used)\n     * @type {Boolean}\n     */\n    enableAddressQueue : false,\n\n    /**\n     * Type of the used backend (*default*, *openhab* or *openhab2*)\n     * @type {String}\n     */\n    backend : 'default',\n    /**\n     * Initial URL to the backend\n     * @type {String}\n     */\n    backendUrl : null,\n    /**\n     * @type {String}\n     */\n    configSuffix : null,\n    /**\n     * The design currently used\n     * @type {String}\n     */\n    clientDesign : \"\",\n    /**\n     * Maturity level\n     * @type {var}\n     */\n    use_maturity : false,\n\n    /**\n     * All configuration and settings from the current configuration\n     * (Note: all settings that need to be cached must be put in here)\n     */\n    configSettings: {\n      mappings: {},\n      stylings: {},\n      /**\n       * Stores the rowspans used by the current confid\n       * @type {Map} of rowspan-value as key and true as value\n       */\n      usedRowspans: {},\n      pluginsToLoad: [],\n\n      /**\n       * Array with alls icons defined in the current config file\n       * @type {Array}\n       */\n      iconsFromConfig: []\n    },\n\n    /**\n     * Store last visited page in LocalStorage\n     */\n    rememberLastPage: false,\n\n    /**\n     * If enabled the widget instances are created on demand. Note: this must only be used when\n     * cache is valid!\n     * @type {Boolean}\n     */\n    lazyLoading: false,\n\n    /**\n     * Defines which structure is supported by which designs\n     */\n    designStructureMap: {\n      \"pure\": [\"alaska\", \"alaska_slim\", \"discreet\", \"discreet_sand\", \"discreet_slim\", \"metal\", \"pitchblack\", \"planet\", \"pure\"]\n    },\n\n    /**\n     * If enabled the user interaction gets logged\n     */\n    reporting: false,\n\n    /**\n     * Set console logging\n     */\n    enableLogging: true,\n\n    /**\n     * The server that responded to the config request\n     */\n    configServer: null,\n\n    /**\n     * In testMode the visu can be filled with some demo data\n     */\n    initialDemoData: null,\n\n    /**\n     * Get the structure that is related to this design\n     * @param design {String?} name of the design\n     * @return {String} name of the structure\n     */\n    getStructure: function(design) {\n      if (!design) {\n        design = this.getDesign();\n      }\n      for (var structure in this.designStructureMap) {\n        if (this.designStructureMap.hasOwnProperty(structure)) {\n          if (this.designStructureMap[structure].indexOf(design) >= 0) {\n            return \"structure-\"+structure;\n          }\n        }\n      }\n      // fallback to pure\n      return \"structure-pure\";\n    },\n\n    /**\n     * This method tries to guess if the CometVisu is running on a proxied webserver.\n     * (by comparing if the visu_config.xml-File has been delivered from another server than the\n     * loging response). As this is just an assumption, you should not treat this result as reliable.\n     */\n    guessIfProxied: function() {\n      if (this.configServer === null || cv.TemplateEngine.getInstance().visu.getServer() === null) {\n        throw new Error(\"not ready yet\");\n      }\n      return this.configServer !== cv.TemplateEngine.getInstance().visu.getServer();\n    },\n\n    addMapping: function (name, mapping) {\n      this.configSettings.mappings[name] = mapping;\n    },\n\n    getMapping: function (name) {\n      return this.configSettings.mappings[name];\n    },\n\n    hasMapping: function(name) {\n      return this.configSettings.mappings.hasOwnProperty(name);\n    },\n\n    clearMappings: function() {\n      this.configSettings.mappings = {};\n    },\n\n    addStyling: function (name, styling) {\n      this.configSettings.stylings[name] = styling;\n    },\n\n    getStyling: function (name) {\n      return this.configSettings.stylings[name];\n    },\n\n    hasStyling: function(name) {\n      return this.configSettings.stylings.hasOwnProperty(name);\n    },\n\n    getDesign: function() {\n      return this.clientDesign || this.configSettings.clientDesign;\n    }\n  },\n\n  defer: function(statics) {\n    var req = qx.util.Uri.parseUri(window.location.href);\n\n    if (req.queryKey.enableQueue) {\n      cv.Config.enableAddressQueue = true;\n    }\n\n    if (req.queryKey.libraryCheck) {\n      cv.Config.libraryCheck = req.queryKey.libraryCheck !== 'false'; // true unless set to false\n    }\n    if (req.queryKey.backend) {\n      cv.Config.backend = req.queryKey.backend;\n    }\n\n    if (req.queryKey.design) {\n      cv.Config.clientDesign = req.queryKey.design;\n    }\n\n    if (req.queryKey.startpage) {\n      cv.Config.startpage = req.queryKey.startpage;\n    }\n\n    // store for later usage\n    cv.Config.request = req;\n\n    if (qx.core.Environment.get('cv.testMode') !== false) {\n      cv.Config.testMode = true;\n      if (qx.core.Environment.get('cv.testMode') !== \"true\") {\n        // load the demo data to fill the visu with some values\n        var r = new qx.io.request.Xhr(qx.core.Environment.get('cv.testMode'));\n        r.addListener('success', function (e) {\n          var data = e.getTarget().getResponse();\n          cv.Config.initialDemoData = data;\n        });\n        r.send();\n      }\n    } else if (req.queryKey.testMode) {\n      cv.Config.testMode = req.queryKey.testMode === \"true\" || req.queryKey.testMode === \"1\";\n    }\n\n    // propagate to the client\n    cv.io.Client.TEST_MODE = cv.Config.testMode;\n\n    if (req.queryKey.config) {\n      cv.Config.configSuffix = req.queryKey.config;\n    }\n\n    if (req.queryKey.forceReload) {\n      cv.Config.forceReload = req.queryKey.forceReload !== 'false'; // true unless set to false\n    }\n\n    if (req.queryKey.reporting) {\n      cv.Config.reporting = req.queryKey.reporting === 'true';\n    }\n\n    // caching is only possible when localStorage is available\n    if (qx.core.Environment.get(\"html.storage.local\") === false) {\n      cv.Config.enableCache = false;\n      console.warn('localStorage is not available in your browser. Some advanced features, like caching will not work!');\n    } else {\n      if (req.queryKey.enableCache === \"invalid\") {\n        cv.ConfigCache.clear(cv.Config.configSuffix);\n        cv.Config.enableCache = true;\n      } else {\n        cv.Config.enableCache = req.queryKey.enableCache ? req.queryKey.enableCache === \"true\" : !qx.core.Environment.get(\"qx.debug\");\n      }\n    }\n\n    cv.Config.enableLogging = qx.core.Environment.get(\"html.console\");\n    if (req.queryKey.log === \"false\") {\n      cv.Config.enableLogging = false;\n    } else if (req.queryKey.log === \"true\") {\n      cv.Config.enableLogging = true;\n    }\n\n    // \"Bug\"-Fix for ID: 3204682 \"Caching on web server\"\n    // Config isn't a real fix for the problem as that's part of the web browser,\n    // but\n    // it helps to avoid the problems on the client, e.g. when the config file\n    // has changed but the browser doesn't even ask the server about it...\n    cv.Config.forceReload = true;\n\n    var uagent = navigator.userAgent.toLowerCase();\n    cv.Config.mobileDevice = (/(android|blackberry|iphone|ipod|series60|symbian|windows ce|palm)/i.test(uagent));\n    if (/(nexus 7|tablet)/i.test(uagent)) {\n      cv.Config.mobileDevice = false;  // Nexus 7 and Android Tablets have a \"big\" screen, so prevent Navbar from scrolling\n    }\n    if (req.queryKey.forceDevice) { // overwrite detection when set by URL\n      switch( req.queryKey.forceDevice )\n      {\n        case 'mobile':\n          cv.Config.mobileDevice = true;\n          break;\n\n        case 'nonmobile':\n          cv.Config.mobileDevice = false;\n          break;\n      }\n    }\n\n\n    // Disable features that aren't ready yet\n    // Config can be overwritten in the URL with the parameter \"maturity\"\n\n    if (req.queryKey.maturity) {\n      cv.Config.url_maturity = req.queryKey.maturity;\n      if (!isNaN(cv.Config.url_maturity - 0)) {\n        cv.Config.use_maturity = cv.Config.url_maturity - 0; // given directly as number\n      } else {\n        cv.Config.use_maturity = statics.Maturity[cv.Config.url_maturity]; // or as the ENUM name\n      }\n    }\n\n    if (isNaN(cv.Config.use_maturity)) {\n      cv.Config.use_maturity = statics.Maturity.release; // default to release\n    }\n  }\n});"
  ]
}