{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/form/ElementForm.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "dialog",
    "Form",
    "properties",
    "labelColumnWidth",
    "refine",
    "init",
    "useBlocker",
    "blockerOpacity",
    "blockerColor",
    "members",
    "__mappedKeys",
    "__hints",
    "_rootListenerId",
    "_applyFormData",
    "formData",
    "old",
    "map",
    "inverse",
    "firstWidget",
    "_formController",
    "getModel",
    "removeAllBindings",
    "dispose",
    "e",
    "_form",
    "getValidationManager",
    "_formContainer",
    "removeAll",
    "modelData",
    "Object",
    "getOwnPropertyNames",
    "key",
    "i",
    "mappedKey",
    "replaceAll",
    "match",
    "p1",
    "toUpperCase",
    "hasOwnProperty",
    "substr",
    "length",
    "value",
    "undefined",
    "model",
    "data",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "ui",
    "form",
    "core",
    "Environment",
    "get",
    "setQxObjectId",
    "addOwnedQxObject",
    "controller",
    "_onFormReady",
    "loadingStatus",
    "atom",
    "fieldData",
    "formElement",
    "type",
    "toLowerCase",
    "addGroupHeader",
    "TextArea",
    "setMinimalLineHeight",
    "lines",
    "autoSize",
    "setAutoSize",
    "setMinHeight",
    "setHeight",
    "setLiveUpdate",
    "TextField",
    "maxLength",
    "setMaxLength",
    "cv",
    "manager",
    "SourceCodeField",
    "language",
    "DateField",
    "dateFormat",
    "setDateFormat",
    "PasswordField",
    "getContentElement",
    "setAttribute",
    "ComboBox",
    "parseComboOptions",
    "options",
    "Array",
    "isArray",
    "forEach",
    "item",
    "listItem",
    "ListItem",
    "label",
    "icon",
    "add",
    "keys",
    "groupName",
    "groupItem",
    "set",
    "anonymous",
    "appearance",
    "Promise",
    "setPlaceholder",
    "tr",
    "then",
    "placeholder",
    "err",
    "error",
    "VirtualComboBox",
    "iconPath",
    "labelPath",
    "validation",
    "getChildControl",
    "selection",
    "getSelection",
    "addListener",
    "ev",
    "selected",
    "getItem",
    "Option",
    "getHints",
    "parseVComboOptions",
    "push",
    "hints",
    "groupModel",
    "setType",
    "setDelegate",
    "createItem",
    "bindItem",
    "index",
    "bindProperty",
    "converter",
    "SelectBox",
    "setLabel",
    "addState",
    "resetLabel",
    "removeState",
    "List",
    "VirtualSelectBox",
    "bindDefaultProperties",
    "iconOptions",
    "trim",
    "RadioGroup",
    "orientation",
    "setUserData",
    "radioButton",
    "RadioButton",
    "CheckBox",
    "setTriState",
    "Spinner",
    "min",
    "setMinimum",
    "max",
    "setMaximum",
    "step",
    "setSingleStep",
    "fractionsDigits",
    "fd",
    "nf",
    "util",
    "format",
    "NumberFormat",
    "setMinimumFractionDigits",
    "setMaximumFractionDigits",
    "setNumberFormat",
    "addTarget",
    "validate",
    "bind",
    "option",
    "some",
    "getValue",
    "lang",
    "Function",
    "selectables",
    "getSelectables",
    "selectable",
    "sValue",
    "getUserData",
    "validator",
    "required",
    "setRequired",
    "Validate",
    "charAt",
    "regExp",
    "RegExp",
    "errorMessage",
    "AsyncValidator",
    "Type",
    "isString",
    "proxy",
    "method",
    "replace",
    "eval",
    "warn",
    "message",
    "invalidMessage",
    "_this",
    "validationFunc",
    "validatorObj",
    "__asyncInProgress",
    "valid",
    "setValid",
    "width",
    "setWidth",
    "enabled",
    "setEnabled",
    "help",
    "isObject",
    "events",
    "func",
    "isFunction",
    "Error",
    "view",
    "ElementFormRenderer",
    "getLayout",
    "setColumnFlex",
    "setColumnMaxWidth",
    "getLabelColumnWidth",
    "spacingX",
    "setAllowGrowX",
    "scroll",
    "container",
    "Scroll",
    "setMaxHeight",
    "bom",
    "Document",
    "getHeight",
    "Init",
    "getApplication",
    "getRoot",
    "event",
    "Timer",
    "once",
    "focus",
    "_handleOk",
    "hide",
    "getCallback",
    "Serializer",
    "toNativeObject",
    "mappedNames",
    "name",
    "call",
    "getContext",
    "resetCallback",
    "destruct",
    "removeListenerById",
    "ElementForm"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n *\n */\nqx.Class.define('cv.ui.manager.form.ElementForm', {\n  extend: qxl.dialog.Form,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    labelColumnWidth: {\n      refine: true,\n      init: 300\n    },\n\n    useBlocker: {\n      refine: true,\n      init: true\n    },\n\n    blockerOpacity: {\n      refine: true,\n      init: 0.9\n    },\n\n    blockerColor: {\n      refine: true,\n      init: '#585858'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __mappedKeys: null,\n    __hints: null,\n    _rootListenerId: null,\n\n    _applyFormData: function (formData, old) {\n      this.__mappedKeys = {\n        map: {},\n        inverse: {}\n      };\n      let firstWidget;\n      if (this._formController) {\n        try {\n          this.getModel().removeAllBindings();\n          this._formController.dispose();\n        } catch (e) {\n        }\n      }\n      if (this._form) {\n        try {\n          this._form.getValidationManager().removeAllBindings();\n          this._form.dispose();\n        } catch (e) {\n        }\n      }\n      this._formContainer.removeAll();\n      if (!formData) {\n        return;\n      }\n      if (this.getModel()) {\n        this.getModel().removeAllBindings();\n        this.getModel().dispose();\n      }\n      let modelData = {};\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        let i = 0;\n        let mappedKey = key.replaceAll(/[-_\\.#]+([a-z])/g, (match, p1) => { return p1.toUpperCase() }) + i++;\n        while (modelData.hasOwnProperty(mappedKey)) {\n          mappedKey = mappedKey.substr(0, mappedKey.length - 1) + i++;\n        }\n        if (mappedKey !== key) {\n          this.__mappedKeys.map[mappedKey] = key;\n          this.__mappedKeys.inverse[key] = mappedKey;\n        }\n        modelData[mappedKey] = formData[key].value !== undefined\n          ? formData[key].value\n          : null;\n      }\n      let model = qx.data.marshal.Json.createModel(modelData);\n      this.setModel(model);\n      // form\n      this._form = new qx.ui.form.Form();\n      if (qx.core.Environment.get(\"module.objectid\") === true) {\n        this._form.setQxObjectId(\"form\");\n        this.addOwnedQxObject(this._form);\n      }\n      this._formController = new qx.data.controller.Object(this.getModel());\n      this._onFormReady(this._form);\n      let i = 0;\n      let loadingStatus, atom;\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        const mappedKey = this.__mappedKeys.inverse[key]\n        let fieldData = formData[key];\n        let formElement = null;\n        switch (fieldData.type.toLowerCase()) {\n          case \"groupheader\":\n            this._form.addGroupHeader(fieldData.value);\n            break;\n          case \"textarea\":\n            formElement = new qx.ui.form.TextArea();\n            formElement.setMinimalLineHeight(fieldData.lines);\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            formElement.setLiveUpdate(true);\n            break;\n          case \"textfield\":\n            formElement = new qx.ui.form.TextField();\n            if (fieldData.maxLength)\n              formElement.setMaxLength(fieldData.maxLength);\n            formElement.setLiveUpdate(true);\n            break;\n          case \"sourceeditor\":\n            formElement = new cv.ui.manager.form.SourceCodeField(\"\", fieldData.language);\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            break;\n          case \"datefield\":\n          case \"date\":\n            formElement = new qx.ui.form.DateField();\n            if (fieldData.dateFormat) {\n              formElement.setDateFormat(fieldData.dateFormat);\n            }\n            break;\n          case \"passwordfield\":\n          case \"password\":\n            formElement = new qx.ui.form.PasswordField();\n            formElement.getContentElement().setAttribute(\"autocomplete\", \"password\");\n            break;\n          case \"combobox\":\n            formElement = new qx.ui.form.ComboBox();\n            const parseComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(function (item) {\n                  let listItem = new qx.ui.form.ListItem(item.label, item.icon);\n                  formElement.add(listItem);\n                });\n              } else if (typeof options === 'object') {\n                // grouped options\n                Object.keys(options).forEach(groupName => {\n                  let groupItem = new qx.ui.form.ListItem(groupName);\n                  groupItem.set({\n                    anonymous: true,\n                    appearance: 'optiongroup'\n                  });\n                  formElement.add(groupItem);\n                  options[groupName].forEach(function (item) {\n                    let listItem = new qx.ui.form.ListItem(item.label, item.icon, item.value);\n                    formElement.add(listItem);\n                  });\n                })\n              }\n            }\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr(\"Loading...\"));\n              fieldData.options.then(options => {\n                formElement.setPlaceholder(fieldData.placeholder);\n                parseComboOptions(options);\n              }, this).catch(err => {\n                this.error(err);\n                formElement.setPlaceholder(this.tr(\"Possible values could no be retrieved, please check browser console for error details\"));\n              }, this);\n            } else {\n              parseComboOptions(fieldData.options);\n            }\n            break;\n          case \"virtualcombobox\":\n            formElement = new qx.ui.form.VirtualComboBox();\n            formElement.set({\n              iconPath: \"icon\",\n              labelPath: \"value\"\n            });\n            if (fieldData.validation) {\n              formElement.getChildControl('textfield').setLiveUpdate(true);\n            }\n            const selection = formElement.getChildControl(\"dropdown\").getSelection();\n            selection.addListener('change', function(ev) {\n              const selected = selection.getItem(0);\n              if (selected && selected instanceof cv.ui.manager.form.Option) {\n                this.__hints = selected.getHints();\n              } else {\n                this.__hints = null;\n              }\n            }, this);\n            model = new qx.data.Array();\n            const parseVComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(item => {\n                  model.push(new cv.ui.manager.form.Option(item.label + (item.value ? ` (${item.value})` : ''), item.icon, item.value, item.hints));\n                });\n              } else if (typeof options === 'object') {\n                Object.keys(options).forEach(groupName => {\n                  const groupModel = new cv.ui.manager.form.Option(groupName);\n                  groupModel.setType(\"group\");\n                  model.push(groupModel);\n                  options[groupName].forEach(function (item) {\n                    model.push(new cv.ui.manager.form.Option(item.label + (item.value ? ` (${item.value})` : ''), item.icon, item.value, item.hints))\n                  });\n                })\n              }\n            }\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr(\"Loading...\"));\n              fieldData.options.then(options => {\n                formElement.setPlaceholder(fieldData.placeholder);\n                parseVComboOptions(options);\n              }, this).catch(err => {\n                this.error(err);\n                formElement.setPlaceholder(this.tr(\"Possible values could no be retrieved, please check browser console for error details\"));\n              }, this);\n            } else {\n              parseVComboOptions(fieldData.options);\n            }\n\n            formElement.setDelegate({\n              createItem: function() {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem:  function (controller, item, index) {\n                controller.bindProperty('icon', 'icon', null, item, index);\n                controller.bindProperty('label', 'label', null, item, index);\n                controller.bindProperty('type', 'appearance', {\n                  converter: function (value) {\n                    switch (value) {\n                      case \"state\":\n                        return \"state-option\";\n                      case \"error\":\n                        return \"error-option\";\n                      case \"group\":\n                        return \"optiongroup\";\n                      default:\n                        return \"listitem\";\n                    }\n                  }\n                }, item, index);\n                controller.bindProperty('type', 'anonymous', {\n                  converter: function (value) {\n                    return value === \"group\";\n                  }\n                }, item, index);\n              }\n            });\n            formElement.setModel(model);\n            break;\n          case \"selectbox\":\n            formElement = new qx.ui.form.SelectBox();\n            if (fieldData.options instanceof Promise) {\n              atom = formElement.getChildControl('atom');\n              atom.setLabel(this.tr(\"Loading...\"));\n              atom.addState('loading');\n              fieldData.options.then(options => {\n                const atom = formElement.getChildControl('atom');\n                atom.resetLabel();\n                atom.removeState('loading');\n                model = qx.data.marshal.Json.createModel(options);\n                new qx.data.controller.List(model, formElement, \"label\");\n              }, this).catch(err => {\n                this.error(err);\n                const atom = formElement.getChildControl('atom');\n                atom.setLabel(this.tr(\"Possible values could no be retrieved, please check browser console for error details\"));\n                atom.removeState('loading');\n                atom.addState('error');\n              }, this);\n            } else {\n              model = qx.data.marshal.Json.createModel(fieldData.options);\n              new qx.data.controller.List(model, formElement, \"label\");\n            }\n            break;\n          case \"virtualselectbox\":\n            formElement = new cv.ui.manager.form.VirtualSelectBox();\n            model = new qx.data.Array();\n            if (fieldData.options) {\n              if (fieldData.options instanceof Promise) {\n                atom = formElement.getChildControl('atom');\n                atom.setLabel(this.tr(\"Loading...\"));\n                atom.addState('loading');\n                fieldData.options.then(options => {\n                  const atom = formElement.getChildControl('atom');\n                  atom.resetLabel();\n                  atom.removeState('loading');\n                  options.forEach(item => {\n                    model.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                  });\n                }).catch(err => {\n                  this.error(err);\n                  const atom = formElement.getChildControl('atom');\n                  atom.setLabel(this.tr(\"Possible values could no be retrieved, please check browser console for error details\"));\n                  atom.removeState('loading');\n                  atom.addState('error');\n                }, this);\n              } else {\n                fieldData.options.forEach(item => {\n                  model.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                });\n              }\n            }\n            formElement.setDelegate({\n              createItem: function() {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem:  function (controller, item, index) {\n                controller.bindDefaultProperties(item, index);\n                controller.bindProperty('value', 'model', null, item, index);\n              }\n            });\n            formElement.set({\n              labelPath: \"label\",\n              iconPath: \"icon\",\n              iconOptions: {\n                converter: function (value) {\n                  if (typeof value === \"function\") {\n                    return value().trim();\n                  }\n                  return value;\n                }\n              },\n              model: model\n            });\n            break;\n          case \"radiogroup\":\n            formElement = new qx.ui.form.RadioGroup();\n            if (fieldData.orientation) {\n              formElement.setUserData(\"orientation\", fieldData.orientation);\n            }\n            fieldData.options.forEach(function (item) {\n              let radioButton = new qx.ui.form.RadioButton(item.label);\n              radioButton.setUserData(\n                \"value\",\n                item.value !== undefined ? item.value : item.label\n              );\n              formElement.add(radioButton);\n            }, this);\n            break;\n          case \"label\":\n            formElement = new qx.ui.form.TextField(); // dummy\n            formElement.setUserData(\"excluded\", true);\n            break;\n          case \"checkbox\":\n            formElement = new cv.ui.manager.form.CheckBox();\n            formElement.setTriState(true);\n            break;\n          case \"spinner\":\n            formElement = new qx.ui.form.Spinner();\n            if (fieldData.min) {\n              formElement.setMinimum(fieldData.min);\n            }\n            if (fieldData.max) {\n              formElement.setMaximum(fieldData.max);\n            }\n            if (fieldData.step) {\n              formElement.setSingleStep(fieldData.step);\n            }\n            if(fieldData.fractionsDigits) {\n              let fd = fieldData.fractionsDigits;\n              let nf = new qx.util.format.NumberFormat();\n              if(fd.min) {\n                nf.setMinimumFractionDigits(fd.min);\n              }\n              if(fd.max) {\n                nf.setMaximumFractionDigits(fd.max);\n              }\n              formElement.setNumberFormat(nf);\n            }\n            break;\n          default:\n            this.error(\"Invalid form field type:\" + fieldData.type);\n        }\n        formElement.setUserData(\"key\", key);\n        formElement.setUserData(\"mappedKey\", mappedKey);\n        if (i === 0) {\n          firstWidget = formElement;\n        }\n        i++;\n        if (typeof fieldData.type == \"string\") {\n          switch (fieldData.type.toLowerCase()) {\n            case \"textarea\":\n            case \"textfield\":\n            case \"passwordfield\":\n            case \"combobox\":\n            case \"virtualcombobox\":\n            case \"datefield\":\n            case \"spinner\":\n            case \"sourceeditor\":\n              this._formController.addTarget(formElement, \"value\", mappedKey, true, null, {\n                converter: function (value) {\n                  this.getValidationManager().validate();\n                  return value;\n                }.bind(this._form)\n              });\n              break;\n            case \"virtualselectbox\":\n              this._formController.addTarget(formElement, \"value\", mappedKey, true, {\n                converter: function (value) {\n                  if (typeof value === \"string\") {\n                    let option;\n                    this.getModel().some(item => {\n                      if (item.getValue() === value) {\n                        option = item;\n                        return true;\n                      }\n                    });\n                    return option;\n                  }\n                  return value;\n                }.bind(formElement)\n              }, {\n                converter: function (option) {\n                  this.getValidationManager().validate();\n                  return option ? option.getValue() : null;\n                }.bind(this._form)\n              });\n              break;\n            case \"checkbox\":\n              this._formController.addTarget(formElement, \"value\", mappedKey, true, null);\n              break;\n            case \"selectbox\":\n              this._formController.addTarget(formElement, \"selection\", mappedKey, true, {\n                converter: qx.lang.Function.bind(function (value) {\n                  let selected = null;\n                  let selectables = this.getSelectables();\n                  selectables.forEach(function (selectable) {\n                    if (selectable.getModel().getValue() === value) {\n                      selected = selectable;\n                    }\n                  }, this);\n                  if (!selected) {\n                    return [selectables[0]];\n                  }\n                  return [selected];\n                }, formElement)\n              }, {\n                converter: qx.lang.Function.bind(function (selection) {\n                  let value = selection[0].getModel().getValue();\n                  return value;\n                }, formElement)\n              });\n              break;\n            case \"radiogroup\":\n              this._formController.addTarget(formElement, \"selection\", mappedKey, true, {\n                converter: qx.lang.Function.bind(function (value) {\n                  let selectables = this.getSelectables();\n                  let selection = [];\n                  if (value) {\n                    selectables.forEach(function (selectable) {\n                      let sValue = selectable.getUserData(\"value\");\n                      if (sValue === value) {\n                        selection = [selectable];\n                      }\n                    }, this);\n                  }\n                  return selection;\n                }, formElement)\n              }, {\n                converter: function (selection) {\n                  let value = selection[0].getUserData(\"value\");\n                  return value;\n                }\n              });\n              break;\n          }\n        }\n        /**\n         * Validation\n         */\n        let validator = null;\n        if (formElement && fieldData.validation) {\n          // required field\n          if (fieldData.validation.required) {\n            formElement.setRequired(true);\n          }\n          // sync validation\n          if (fieldData.validation.validator) {\n            validator = fieldData.validation.validator;\n            if (typeof validator == \"string\") {\n              if (qx.util.Validate[validator]) {\n                validator = qx.util.Validate[validator]();\n              } else if (validator.charAt(0) === \"/\") {\n                validator = qx.util.Validate.regExp(\n                  new RegExp(validator.substr(1, validator.length - 2)),\n                  fieldData.validation.errorMessage\n                );\n              } else {\n                this.error(\"Invalid string validator.\");\n              }\n            } else if (!(validator instanceof qx.ui.form.validation.AsyncValidator) && typeof validator !== \"function\") {\n              this.error(\"Invalid validator.\");\n            }\n          }\n          // async validation\n          if (qx.lang.Type.isString(fieldData.validation.proxy) &&\n            qx.lang.Type.isString(fieldData.validation.method)\n          ) {\n            /**\n             * fieldData.validation.proxy\n             * the name of a global variable (or path) to a function that acts as the proxy of\n             * the 'send' or 'execute' function of a preconfigured JsonRpc client. The function\n             * receives the following parameters: service method (string), parameters (array)\n             * and callback (function). It proxies the parameters to the given JsonRpc method and\n             * calls the callback with the result (true if valid, false if not) received from the\n             * server. The JsonRpc service name is preconfigured by the server and cannot be\n             * changed by the client.\n             */\n              // clean\n            let proxy = fieldData.validation.proxy.replace(/;\\n/g, \"\");\n            try {\n              eval('proxy = ' + proxy + ';');\n            } catch (e) {\n              this.warn(\"Invalid proxy name\");\n            }\n            if (typeof proxy == \"function\") {\n              let method = fieldData.validation.method;\n              let message = fieldData.validation.invalidMessage;\n              let _this = this;\n              let validationFunc = function (validatorObj, value) {\n                if (!validatorObj.__asyncInProgress) {\n                  validatorObj.__asyncInProgress = true;\n                  proxy(method, [value], function (valid) {\n                    validatorObj.setValid(valid, message || this.tr('Value is invalid'));\n                    validatorObj.__asyncInProgress = false;\n                  });\n                }\n              };\n              validator = new qx.ui.form.validation.AsyncValidator(validationFunc);\n            }\n          }\n        }\n\n        /**\n         * other widget properties @todo: allow to set all properties\n         */\n        if (fieldData.width !== undefined) {\n          formElement.setWidth(fieldData.width);\n        }\n        if (fieldData.placeholder !== undefined) {\n          formElement.setPlaceholder(fieldData.placeholder);\n        }\n        if (fieldData.enabled !== undefined) {\n          formElement.setEnabled(fieldData.enabled);\n        }\n        if (fieldData.help !== undefined) {\n          formElement.setUserData(\"help\", fieldData.help);\n        }\n\n        /**\n         * Events\n         */\n        if (qx.lang.Type.isObject(fieldData.events)) {\n          for (let type in fieldData.events) {\n            try {\n              let func = eval(\"(\" + fieldData.events[type] + \")\"); // eval is evil, I know.\n              if (!qx.lang.Type.isFunction(func)) {\n                throw new Error();\n              }\n              formElement.addListener(type, func, formElement);\n            } catch (e) {\n              this.warn(\"Invalid '\" + type + \"' event handler for form element '\" + key + \"'.\");\n            }\n          }\n        }\n\n        // Putting it all together\n        let label = fieldData.label;\n        this._form.add(formElement, label, validator);\n        // Add the form elements as objects owned by the form widget\n        if (qx.core.Environment.get(\"module.objectid\") === true) {\n          formElement.setQxObjectId(key);\n          this._form.addOwnedQxObject(formElement);\n        }\n      }\n\n\n      let view = new cv.ui.manager.form.ElementFormRenderer(this._form);\n      view.getLayout().setColumnFlex(0, 0);\n      view.getLayout().setColumnMaxWidth(0, this.getLabelColumnWidth());\n      view.getLayout().setColumnFlex(1, 1);\n      view.getLayout().set({\n        spacingX: 8\n      })\n      view.setAllowGrowX(true);\n      const scroll = new qx.ui.container.Scroll(view);\n      scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n      this._rootListenerId = qx.core.Init.getApplication().getRoot().addListener('resize', function () {\n        scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n      })\n\n      view.bind('width', scroll, 'width');\n      view.bind('height', scroll, 'height');\n      this._formContainer.add(scroll);\n      this._form.getValidationManager().validate();\n      if (firstWidget) {\n        qx.event.Timer.once(() => {\n          firstWidget.focus();\n        }, this, 200);\n      }\n    },\n\n    _handleOk: function () {\n      this.hide();\n      if (this.getCallback()) {\n        const data = qx.util.Serializer.toNativeObject(this.getModel());\n        const mappedNames = Object.keys(this.__mappedKeys.map);\n        mappedNames.forEach(mappedKey => {\n          if (data.hasOwnProperty(mappedKey)) {\n            data[this.__mappedKeys.map[mappedKey]] = data[mappedKey];\n            delete data[mappedKey];\n          }\n        });\n        if (this.__hints) {\n          Object.keys(this.__hints).forEach(name => data[name] = this.__hints[name]);\n        }\n        this.getCallback().call(\n          this.getContext(),\n          data\n        );\n      }\n      this.resetCallback();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    if (this._rootListenerId) {\n      qx.core.Init.getApplication().getRoot().removeListenerById(this._rootListenerId);\n      this._rootListenerId = null;\n    }\n  }\n});\n"
  ]
}