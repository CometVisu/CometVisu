{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/Schema.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "filename",
    "match",
    "Error",
    "__filename",
    "__allowedRootElements",
    "__referencedNodeCache",
    "__typeNodeCache",
    "_cacheXSD",
    "statics",
    "__CACHE",
    "getInstance",
    "schemaFile",
    "prototype",
    "hasOwnProperty",
    "call",
    "cv",
    "ui",
    "manager",
    "model",
    "Schema",
    "util",
    "ResourceManager",
    "toUri",
    "properties",
    "loaded",
    "check",
    "init",
    "event",
    "members",
    "__xsd",
    "__textNodeSchemaElement",
    "__commentNodeSchemaElement",
    "_widgetNames",
    "onLoaded",
    "callback",
    "context",
    "isLoaded",
    "addListenerOnce",
    "ajaxRequest",
    "io",
    "request",
    "Xhr",
    "set",
    "accept",
    "e",
    "req",
    "getTarget",
    "xml",
    "getResponse",
    "Document",
    "fromString",
    "_parseXSD",
    "send",
    "querySelectorAll",
    "forEach",
    "element",
    "name",
    "getAttribute",
    "schema",
    "Element",
    "setLoaded",
    "getElementNode",
    "getReferencedNode",
    "type",
    "refName",
    "selector",
    "ref",
    "querySelector",
    "hasAttribute",
    "getTypeNode",
    "typeNode",
    "getTextNodeSchemaElement",
    "tmpXML",
    "createElement",
    "setAttribute",
    "getCommentNodeSchemaElement",
    "getSchemaDOM",
    "getWidgetNames",
    "pages",
    "page",
    "getSchemaElementForElementName",
    "keys",
    "getAllowedElements",
    "filter",
    "startsWith",
    "destruct",
    "_disposeObjects",
    "_disposeMap"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n *\n */\nqx.Class.define('cv.ui.manager.model.Schema', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (filename) {\n    this.base(arguments);\n    if (!filename || !filename.match(/\\.xsd$/)) {\n      throw new Error('no, empty or invalid filename given, can not instantiate without one');\n    }\n    this.__filename = filename;\n    this.__allowedRootElements = {};\n    this.__referencedNodeCache = {};\n    this.__typeNodeCache = {};\n    this._cacheXSD();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    __CACHE: {},\n\n    getInstance: function (schemaFile) {\n      if (!Object.prototype.hasOwnProperty.call(this.__CACHE, schemaFile)) {\n        this.__CACHE[schemaFile] = new cv.ui.manager.model.Schema(qx.util.ResourceManager.getInstance().toUri(schemaFile));\n      }\n      return this.__CACHE[schemaFile];\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    loaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeLoaded'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __filename: null,\n    /**\n     * object of the schema/xsd\n     * @var object\n     */\n    __xsd: null,\n\n    /**\n     * object of allowed root-level elements\n     * @var object\n     */\n    __allowedRootElements: null,\n\n    /**\n     * cache for referenced nods\n     * @var object\n     */\n    __referencedNodeCache: null,\n\n    /**\n     * cache for getTypeNode\n     * @var object\n     */\n    __typeNodeCache: null,\n\n    /**\n     * cache for #text-SchemaElement\n     * @var object\n     */\n    __textNodeSchemaElement: null,\n\n    /**\n     * cache for #comment-SchemaElement\n     * @var object\n     */\n    __commentNodeSchemaElement: null,\n\n    /**\n     * @var {Array<String>}\n     */\n    _widgetNames: null,\n\n    onLoaded: function (callback, context) {\n      if (this.isLoaded()) {\n        callback.call(context);\n      } else {\n        this.addListenerOnce('changeLoaded', callback, context);\n      }\n    },\n\n    /**\n     * load and cache the xsd from the server\n     */\n    _cacheXSD: function () {\n      const ajaxRequest = new qx.io.request.Xhr(this.__filename);\n      ajaxRequest.set({\n        accept: 'application/xml'\n      });\n      ajaxRequest.addListenerOnce('success', function (e) {\n        const req = e.getTarget();\n        // Response parsed according to the server's response content type\n        let xml = req.getResponse();\n        if (xml && (typeof xml === 'string')) {\n          xml = qx.xml.Document.fromString(xml);\n        }\n        this.__xsd = xml;\n\n        // parse the data, to have at least a list of root-level-elements\n        this._parseXSD();\n      }, this);\n      ajaxRequest.send();\n    },\n\n    /**\n     * parse the schema once\n     */\n    _parseXSD: function () {\n      // make a list of root-level elements\n      this.__xsd.querySelectorAll('schema > element').forEach(element => {\n        const name = element.getAttribute('name');\n        this.__allowedRootElements[name] = new cv.ui.manager.model.schema.Element(element, this);\n      });\n      this.setLoaded(true);\n    },\n\n    getElementNode: function (name) {\n      if (Object.prototype.hasOwnProperty.call(this.__allowedRootElements, name)) {\n        return this.__allowedRootElements[name];\n      }\n      throw new Error('schema/xsd appears to be invalid, element ' + name + ' not allowed on root level');\n    },\n\n    /**\n     * dive into the schema and find the element that is being pulled in by a ref.\n     * Do so recursively.\n     * referenced nodes can be top-level-nodes only!\n     *\n     * @param   type    string  Type of the node (e.g. element, attributeGroup, ...)\n     * @param   refName string  Name as per the ref-attribute\n     * @return  object          jQuery-object of the ref'ed element\n     */\n    getReferencedNode: function (type, refName) {\n      if (Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, type) && Object.prototype.hasOwnProperty.call(this.__referencedNodeCache[type], refName)) {\n        return this.__referencedNodeCache[type][refName];\n      }\n\n      const selector = 'schema > ' + type + '[name=\"' + refName + '\"]';\n      let ref = this.__xsd.querySelector(selector);\n      if (!ref) {\n        throw new Error('schema/xsd appears to be invalid, reference ' + type + '\"' + refName + '\" can not be found');\n      }\n\n      if (ref.hasAttribute('ref')) {\n        // do it recursively, if necessary\n        ref = this.getReferencedNode(type, ref.getAttribute('ref'));\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, type)) {\n        this.__referencedNodeCache[type] = {};\n      }\n\n      // fill the cache\n      this.__referencedNodeCache[type][refName] = ref;\n\n      return ref;\n    },\n\n\n    /**\n     * get the definition of a type, be it complex or simple\n     *\n     * @param   type    string  Type of type to find (either simple or complex)\n     * @param   name    string  Name of the type to find\n     */\n    getTypeNode: function (type, name) {\n      if (Object.prototype.hasOwnProperty.call(this.__typeNodeCache, type) && Object.prototype.hasOwnProperty.call(this.__typeNodeCache[type], name)) {\n        return this.__typeNodeCache[type][name];\n      }\n      let typeNode = this.__xsd.querySelector(type + 'Type[name=\"' + name + '\"]');\n\n      if (!typeNode) {\n        throw new Error('schema/xsd appears to be invalid, ' + type + 'Type \"' + name + '\" can not be found');\n      }\n\n      if (typeof this.__typeNodeCache[type] == 'undefined') {\n        this.__typeNodeCache[type] = {};\n      }\n\n      // fill the cache\n      this.__typeNodeCache[type][name] = typeNode;\n\n      return typeNode;\n    },\n\n    /**\n     * get a SchemaElement for a #text-node\n     *\n     * @return  object  SchemaElement for #text-node\n     */\n    getTextNodeSchemaElement: function () {\n      if (this.__textNodeSchemaElement === null) {\n        // text-content is always a simple string\n        const tmpXML = this.__xsd.createElement('element');\n        tmpXML.setAttribute('name', '#text');\n        tmpXML.setAttribute('type', 'xsd:string');\n        this.__textNodeSchemaElement = new cv.ui.manager.model.schema.Element(tmpXML, this);\n      }\n\n      return this.__textNodeSchemaElement;\n    },\n\n    /**\n     * get a SchemaElement for a #comment-node\n     *\n     * @return  object  SchemaElement for #comment-node\n     */\n    getCommentNodeSchemaElement: function () {\n      if (this.__commentNodeSchemaElement === null) {\n        // text-content is always a simple string\n        const tmpXML = this.__xsd.createElement('element');\n        tmpXML.setAttribute('name', '#comment');\n        tmpXML.setAttribute('type', 'xsd:string');\n        tmpXML.setAttribute('minOccurs', '0');\n        tmpXML.setAttribute('maxOccurs', 'unbounded');\n        this.__commentNodeSchemaElement = new cv.ui.manager.model.schema.Element(tmpXML, this);\n      }\n\n      return this.__commentNodeSchemaElement;\n    },\n\n    /**\n     * get the DOM for this Schema\n     *\n     * @return  object  DOM\n     */\n    getSchemaDOM: function () {\n      return this.__xsd;\n    },\n\n    /**\n     * A CometVisu-Schema specific helper function that returns an array of all widget names.\n     * @returns {Array<String>}\n     */\n    getWidgetNames: function () {\n      if (!this._widgetNames) {\n        const pages = this.getElementNode('pages');\n        const page = pages.getSchemaElementForElementName('page');\n        this._widgetNames = Object.keys(page.getAllowedElements()).filter(name => !name.startsWith('#') && name !== 'layout');\n      }\n      return this._widgetNames;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__xsd = null;\n    this._disposeObjects('__commentNodeSchemaElement', '__textNodeSchemaElement');\n    this._disposeMap('__allowedRootElements');\n    this.__referencedNodeCache = null;\n    this.__typeNodeCache = null;\n    this._widgetNames = null;\n  }\n});\n\n"
  ]
}