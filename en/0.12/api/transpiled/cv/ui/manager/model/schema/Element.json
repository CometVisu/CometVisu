{
  "className": "cv.ui.manager.model.schema.Element",
  "packageName": "cv.ui.manager.model.schema",
  "name": "Element",
  "superClass": "cv.ui.manager.model.schema.Base",
  "interfaces": [],
  "mixins": [
    "cv.ui.manager.model.schema.MAnnotation"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 671,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>a single element from the schema</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 13
      },
      "end": {
        "line": 36,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "statics": {
    "getElementName": {
      "location": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 69,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the name of a schema-element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e object  element to find the name of"
          },
          {
            "name": "@param",
            "body": "schema",
            "paramName": "schema",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "string          name of the element"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "if the name can not be found"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTypeNode": {
      "location": {
        "start": {
          "line": 77,
          "column": 4
        },
        "end": {
          "line": 99,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>find the type-node for this element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node",
            "paramName": "node",
            "type": ""
          },
          {
            "name": "@param",
            "body": "schema",
            "paramName": "schema",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object  object of the type-Node"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "sortChildNodes": {
      "location": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 148,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    }
  },
  "properties": {
    "type": {
      "location": {
        "start": {
          "line": 157,
          "column": 4
        },
        "end": {
          "line": 160,
          "column": 5
        }
      },
      "name": "type",
      "propertyType": "new",
      "refine": true,
      "init": "element",
      "defaultValue": "element",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": {
        "cv.ui.manager.model.schema.Base": "class"
      }
    },
    "name": {
      "location": {
        "start": {
          "line": 162,
          "column": 4
        },
        "end": {
          "line": 165,
          "column": 5
        }
      },
      "name": "name",
      "propertyType": "new",
      "init": "",
      "check": "String",
      "defaultValue": ""
    },
    "defaultValue": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 170,
          "column": 5
        }
      },
      "name": "defaultValue",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "sortable": {
      "location": {
        "start": {
          "line": 172,
          "column": 4
        },
        "end": {
          "line": 176,
          "column": 5
        }
      },
      "name": "sortable",
      "propertyType": "new",
      "event": "changeSortable",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "mixed": {
      "location": {
        "start": {
          "line": 178,
          "column": 4
        },
        "end": {
          "line": 181,
          "column": 5
        }
      },
      "name": "mixed",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    }
  },
  "members": {
    "__allowedContentLoaded": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 190,
          "column": 33
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__allowedContent": {
      "location": {
        "start": {
          "line": 191,
          "column": 4
        },
        "end": {
          "line": 191,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__allowedAttributes": {
      "location": {
        "start": {
          "line": 192,
          "column": 4
        },
        "end": {
          "line": 192,
          "column": 29
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__textNodeSchemaElement": {
      "location": {
        "start": {
          "line": 193,
          "column": 4
        },
        "end": {
          "line": 193,
          "column": 33
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_type": {
      "location": {
        "start": {
          "line": 199,
          "column": 4
        },
        "end": {
          "line": 199,
          "column": 15
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get and set the type-node for the element</p>"
          }
        ],
        "@var": [
          {
            "name": "@var",
            "body": "object  Type-Node (most certainly a complexType)"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "parse": {
      "location": {
        "start": {
          "line": 201,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getAllowedContent": {
      "location": {
        "start": {
          "line": 219,
          "column": 4
        },
        "end": {
          "line": 284,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get a list of allowed elements for this element</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object  object of SchemaElement-elements, key is the name"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAllowedAttributes": {
      "location": {
        "start": {
          "line": 290,
          "column": 4
        },
        "end": {
          "line": 326,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get and set the list of allowed attributes</p>"
          }
        ],
        "@var": [
          {
            "name": "@var",
            "body": "array   List of SchemaAttribute-objects"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "areChildrenSortable": {
      "location": {
        "start": {
          "line": 333,
          "column": 4
        },
        "end": {
          "line": 342,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>are this elements children sortable? this is not the case if a sequence is used, e.g.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean     are children sortable?"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRequiredElements": {
      "location": {
        "start": {
          "line": 350,
          "column": 4
        },
        "end": {
          "line": 360,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get a list of required elements.\n if an element is required multiple times, it is listed multiple times</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "array   list of required elements"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getAllowedElements": {
      "location": {
        "start": {
          "line": 367,
          "column": 4
        },
        "end": {
          "line": 391,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get a list of all allowed elements for this element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "excludeComment",
            "paramName": "excludeComment",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object  list of SchemaElement-elements, key is the name"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getAllowedElementsSorting": {
      "location": {
        "start": {
          "line": 398,
          "column": 4
        },
        "end": {
          "line": 406,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the sorting of the allowed elements.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object              list of allowed elements, with their sort-number as value"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getFirstLevelElementSorting": {
      "location": {
        "start": {
          "line": 408,
          "column": 4
        },
        "end": {
          "line": 421,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getChildBounds": {
      "location": {
        "start": {
          "line": 428,
          "column": 4
        },
        "end": {
          "line": 442,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the bounds for this elements children (as defined by a choice)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object  bounds ({min: x, max: y})"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getBoundsForElementName": {
      "location": {
        "start": {
          "line": 451,
          "column": 4
        },
        "end": {
          "line": 455,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the bounds for a specific element-name\n will go through all of the groupings-tree to find out, just how many elements of this may appear</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "childName   string  name of the child-to-be"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object              {min: x, max: y}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "isTextContentAllowed": {
      "location": {
        "start": {
          "line": 462,
          "column": 4
        },
        "end": {
          "line": 478,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>check if a text-only-node is allowed …</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isTextContentRequired": {
      "location": {
        "start": {
          "line": 480,
          "column": 4
        },
        "end": {
          "line": 485,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "isChildElementAllowed": {
      "location": {
        "start": {
          "line": 494,
          "column": 4
        },
        "end": {
          "line": 511,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>check if an element (specified by its name) is allowed as one of our immediate children\n Goes recursive if we have choices.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "child   string  name of the element we want to check"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean         is this element allowed?"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSchemaElementForElementName": {
      "location": {
        "start": {
          "line": 521,
          "column": 4
        },
        "end": {
          "line": 561,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the SchemaElement-object for a certain element-name.\n May return undefined if no element is found, so you might be interested in checking isElementAllowed beforehand.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "elementName string  name of the element to find the SchemaElement for"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object              SchemaElement-object, or undefined if none is found"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getSchemaDOM": {
      "location": {
        "start": {
          "line": 568,
          "column": 4
        },
        "end": {
          "line": 570,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>return the DOM this Schema is based on</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "object  DOM of $xsd"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isValueValid": {
      "location": {
        "start": {
          "line": 578,
          "column": 4
        },
        "end": {
          "line": 592,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>check if a given value is valid for this element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value   string  value to check"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean         is it valid?"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRegex": {
      "location": {
        "start": {
          "line": 601,
          "column": 4
        },
        "end": {
          "line": 636,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>create and retrieve the part of a regular expression which describes this very element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "separator   string  the string used to separate different elements, e.g. ';'"
          },
          {
            "name": "@param",
            "body": "nocapture   bool    when set to true non capturing groups are used"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "string"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "getChildrenRegex": {
      "location": {
        "start": {
          "line": 644,
          "column": 4
        },
        "end": {
          "line": 658,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>create a full-blown regular expression that describes this elements immediate children</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "separator   string  the string used to separate different elements, e.g. ';'"
          },
          {
            "name": "@param",
            "body": "nocapture",
            "paramName": "nocapture",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "string              the regular expression"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__getTextNodesByXPath": {
      "type": "function",
      "name": "__getTextNodesByXPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "cv.ui.manager.model.schema.MAnnotation"
    },
    "getAppinfo": {
      "type": "function",
      "name": "getAppinfo",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.MAnnotation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the appinfo information from the element, if any</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "array   list of texts, or empty list if none"
          }
        ]
      }
    },
    "getDocumentation": {
      "type": "function",
      "name": "getDocumentation",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.MAnnotation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the documentation information from the element, if any</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "array   list of texts, or empty list if none"
          }
        ]
      }
    },
    "createDocumentationWebLinks": {
      "type": "function",
      "name": "createDocumentationWebLinks",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.MAnnotation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transform documentation text to link to the online documentation when it\n contains a reference.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "text",
            "paramName": "text",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "string The transformed input string."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getType": {
      "type": "function",
      "name": "getType",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for type"
          }
        ]
      }
    },
    "setType": {
      "type": "function",
      "name": "setType",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for type"
          }
        ]
      }
    },
    "resetType": {
      "type": "function",
      "name": "resetType",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>type</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ]
      }
    },
    "getElementsHaveOrder": {
      "type": "function",
      "name": "getElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>elementsHaveOrder</code>.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for elementsHaveOrder"
          }
        ]
      }
    },
    "isElementsHaveOrder": {
      "type": "function",
      "name": "isElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>elementsHaveOrder</code>.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for elementsHaveOrder"
          }
        ]
      }
    },
    "setElementsHaveOrder": {
      "type": "function",
      "name": "setElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>elementsHaveOrder</code>.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for elementsHaveOrder"
          }
        ]
      }
    },
    "resetElementsHaveOrder": {
      "type": "function",
      "name": "resetElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>elementsHaveOrder</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ]
      }
    },
    "getSchema": {
      "type": "function",
      "name": "getSchema",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>schema</code>.\n\nFor further details take a look at the property definition: {@link #schema}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "cv.ui.manager.model.Schema",
            "desc": "Returns the value for schema"
          }
        ]
      }
    },
    "setSchema": {
      "type": "function",
      "name": "setSchema",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>schema</code>.\n\nFor further details take a look at the property definition: {@link #schema}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "cv.ui.manager.model.Schema",
            "paramName": "value",
            "desc": "Value for schema"
          }
        ]
      }
    },
    "resetSchema": {
      "type": "function",
      "name": "resetSchema",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>schema</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #schema}."
          }
        ]
      }
    },
    "getNode": {
      "type": "function",
      "name": "getNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>node</code>.\n\nFor further details take a look at the property definition: {@link #node}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Node",
            "desc": "Returns the value for node"
          }
        ]
      }
    },
    "setNode": {
      "type": "function",
      "name": "setNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>node</code>.\n\nFor further details take a look at the property definition: {@link #node}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Node",
            "paramName": "value",
            "desc": "Value for node"
          }
        ]
      }
    },
    "resetNode": {
      "type": "function",
      "name": "resetNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>node</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #node}."
          }
        ]
      }
    },
    "getSubGroupings": {
      "type": "function",
      "name": "getSubGroupings",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>subGroupings</code>.\n\nFor further details take a look at the property definition: {@link #subGroupings}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for subGroupings"
          }
        ]
      }
    },
    "setSubGroupings": {
      "type": "function",
      "name": "setSubGroupings",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>subGroupings</code>.\n\nFor further details take a look at the property definition: {@link #subGroupings}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for subGroupings"
          }
        ]
      }
    },
    "resetSubGroupings": {
      "type": "function",
      "name": "resetSubGroupings",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>subGroupings</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #subGroupings}."
          }
        ]
      }
    },
    "getName": {
      "type": "function",
      "name": "getName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for name"
          }
        ]
      }
    },
    "setName": {
      "type": "function",
      "name": "setName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for name"
          }
        ]
      }
    },
    "resetName": {
      "type": "function",
      "name": "resetName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>name</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ]
      }
    },
    "getDefaultValue": {
      "type": "function",
      "name": "getDefaultValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultValue</code>.\n\nFor further details take a look at the property definition: {@link #defaultValue}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultValue"
          }
        ]
      }
    },
    "setDefaultValue": {
      "type": "function",
      "name": "setDefaultValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultValue</code>.\n\nFor further details take a look at the property definition: {@link #defaultValue}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultValue"
          }
        ]
      }
    },
    "resetDefaultValue": {
      "type": "function",
      "name": "resetDefaultValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultValue</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultValue}."
          }
        ]
      }
    },
    "getSortable": {
      "type": "function",
      "name": "getSortable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sortable</code>.\n\nFor further details take a look at the property definition: {@link #sortable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for sortable"
          }
        ]
      }
    },
    "isSortable": {
      "type": "function",
      "name": "isSortable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sortable</code>.\n\nFor further details take a look at the property definition: {@link #sortable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for sortable"
          }
        ]
      }
    },
    "setSortable": {
      "type": "function",
      "name": "setSortable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sortable</code>.\n\nFor further details take a look at the property definition: {@link #sortable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for sortable"
          }
        ]
      }
    },
    "resetSortable": {
      "type": "function",
      "name": "resetSortable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sortable</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sortable}."
          }
        ]
      }
    },
    "getMixed": {
      "type": "function",
      "name": "getMixed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>mixed</code>.\n\nFor further details take a look at the property definition: {@link #mixed}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for mixed"
          }
        ]
      }
    },
    "isMixed": {
      "type": "function",
      "name": "isMixed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>mixed</code>.\n\nFor further details take a look at the property definition: {@link #mixed}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for mixed"
          }
        ]
      }
    },
    "setMixed": {
      "type": "function",
      "name": "setMixed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>mixed</code>.\n\nFor further details take a look at the property definition: {@link #mixed}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for mixed"
          }
        ]
      }
    },
    "resetMixed": {
      "type": "function",
      "name": "resetMixed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>mixed</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #mixed}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 666,
        "column": 12
      },
      "end": {
        "line": 670,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}