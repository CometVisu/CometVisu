{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/config/Section.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "name",
    "setName",
    "initOptions",
    "data",
    "Array",
    "properties",
    "check",
    "event",
    "init",
    "options",
    "deferredInit",
    "members",
    "addOption",
    "key",
    "value",
    "getOptions",
    "found",
    "some",
    "option",
    "getKey",
    "setValue",
    "push",
    "cv",
    "ui",
    "manager",
    "model",
    "config",
    "Option",
    "Section"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oCAAhB,EAAsD;AACpDC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADoC;;AAGpD;AACF;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,mBAAUC,IAAV,EAAgB;AACzB;AACA,WAAKC,OAAL,CAAaD,IAAb;AACA,WAAKE,WAAL,CAAiB,IAAIZ,EAAE,CAACa,IAAH,CAAQC,KAAZ,EAAjB;AACD,KAZmD;;AAcpD;AACF;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACVL,MAAAA,IAAI,EAAE;AACJM,QAAAA,KAAK,EAAE,QADH;AAEJC,QAAAA,KAAK,EAAE,YAFH;AAGJC,QAAAA,IAAI,EAAE;AAHF,OADI;AAOVC,MAAAA,OAAO,EAAE;AACPH,QAAAA,KAAK,EAAE,eADA;AAEPI,QAAAA,YAAY,EAAE,IAFP;AAGPH,QAAAA,KAAK,EAAE;AAHA;AAPC,KAnBwC;;AAiCpD;AACF;AACA;AACA;AACA;AACEI,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE,mBAASC,GAAT,EAAcC,KAAd,EAAqB;AAC9B,YAAML,OAAO,GAAG,KAAKM,UAAL,EAAhB;AACA,YAAMC,KAAK,GAAGP,OAAO,CAACQ,IAAR,CAAa,UAAUC,MAAV,EAAkB;AAC3C,cAAIA,MAAM,CAACC,MAAP,OAAoBN,GAAxB,EAA6B;AAC3BK,YAAAA,MAAM,CAACE,QAAP,CAAgBN,KAAhB;AACA,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SANa,EAMX,IANW,CAAd;;AAOA,YAAI,CAACE,KAAL,EAAY;AACVP,UAAAA,OAAO,CAACY,IAAR,CAAa,IAAIC,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,MAApB,CAA2BC,MAA/B,CAAsCd,GAAtC,EAA2CC,KAA3C,CAAb;AACD;AACF;AAbM;AAtC2C,GAAtD;AAvBAQ,EAAAA,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,MAApB,CAA2BE,OAA3B,CAAmCnC,aAAnC,GAAmDA,aAAnD",
  "sourcesContent": [
    "/* Section.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n *\n */\nqx.Class.define('cv.ui.manager.model.config.Section', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (name) {\n    this.base(arguments);\n    this.setName(name);\n    this.initOptions(new qx.data.Array());\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    name: {\n      check: 'String',\n      event: 'changeName',\n      init: ''\n    },\n\n    options: {\n      check: 'qx.data.Array',\n      deferredInit: true,\n      event: 'changeOptions'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    addOption: function(key, value) {\n      const options = this.getOptions();\n      const found = options.some(function (option) {\n        if (option.getKey() === key) {\n          option.setValue(value);\n          return true;\n        }\n        return false;\n      }, this);\n      if (!found) {\n        options.push(new cv.ui.manager.model.config.Option(key, value));\n      }\n    }\n  }\n});\n"
  ]
}