{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/IActionHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "canHandleAction",
    "actionName",
    "handleAction",
    "data",
    "configureButton",
    "actionId",
    "button",
    "unConfigureButton",
    "cv",
    "ui",
    "manager",
    "IActionHandler"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,SAAH,CAAaC,MAAb,CAAoB,8BAApB,EAAoD;AAClD;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACIC,MAAAA,eAAe,EAAE,yBAASC,UAAT,EAAqB,CAAE,CALjC;;AAOP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,YAAY,EAAE,sBAAUD,UAAV,EAAsBE,IAAtB,EAA4B,CAAE,CAZrC;;AAcP;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,eAAe,EAAE,yBAAUC,QAAV,EAAoBC,MAApB,EAA4B,CAAE,CApBxC;;AAsBP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,iBAAiB,EAAE,2BAAUF,QAAV,EAAoBC,MAApB,EAA4B,CAAE;AA3B1C;AANyC,GAApD;AAvBAE,EAAAA,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,cAAd,CAA6Bf,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* IActionHandler.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * All Widgets that need to handle actions from the managers action event, need to implement this interface.\n */\nqx.Interface.define('cv.ui.manager.IActionHandler', {\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * Checks if the action handle can process the action.\n     * @param actionName {String} action name\n     */\n    canHandleAction: function(actionName) {},\n\n    /**\n     * Executes the action handling.\n     * @param actionName {String} action name\n     * @param data {var} action payload\n     */\n    handleAction: function (actionName, data) {},\n\n    /**\n     * The ActionHandler can configure the menubutton itself, e.g. disable it, when that action is currently not possible\n     * or change the button text / tooltip text etc.\n     * @param actionId {String} ID of the action that button triggers\n     * @param button {Widget} the button that should be configured\n     */\n    configureButton: function (actionId, button) {},\n\n    /**\n     * Undo all changes that have been applied to the button in configureButton\n     * @param actionId {String} ID of the action that button triggers\n     * @param button {Widget}\n     */\n    unConfigureButton: function (actionId, button) {}\n  }\n});\n"
  ]
}