{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/viewer/Image.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "viewer",
    "AbstractViewer",
    "properties",
    "appearance",
    "refine",
    "init",
    "statics",
    "SUPPORTED_FILES",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "getImageData",
    "source",
    "data",
    "util",
    "ResourceManager",
    "getInstance",
    "getData",
    "width",
    "height",
    "aspectRatio",
    "io",
    "ImageLoader",
    "getSize",
    "Object",
    "assign",
    "members",
    "_applyFile",
    "file",
    "control",
    "getChildControl",
    "setIcon",
    "getServerPath",
    "setLabel",
    "getFullPath",
    "Image",
    "addListenerOnce",
    "_scaleImage",
    "addListener",
    "resetIcon",
    "resetLabel",
    "removeListener",
    "bounds",
    "getBounds",
    "getFile",
    "icon",
    "paddingX",
    "paddingY",
    "availableHeight",
    "Math",
    "round",
    "set",
    "scale"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Image.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n// noinspection JSClosureCompilerSyntax\n/**\n * Show images.\n */\nqx.Class.define('cv.ui.manager.viewer.Image', {\n  extend: cv.ui.manager.viewer.AbstractViewer,\n\n  /*\n    ***********************************************\n      PROPERTIES\n    ***********************************************\n    */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'image-viewer'\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: ['jpg', 'jpeg', 'png', 'gif', 'svg'],\n    TITLE: qx.locale.Manager.tr('Show image'),\n    ICON: cv.theme.dark.Images.getIcon('image', 18),\n\n    /**\n     * Returns size information for images\n     * @param source {String} path to image\n     * @returns {{width: *, aspectRatio: number, height: *}}\n     */\n    getImageData: function (source) {\n      let data = qx.util.ResourceManager.getInstance().getData(source);\n      if (data) {\n        return {\n          width: data[0],\n          height: data[1],\n          aspectRatio: data[0] / data[1]\n        };\n      } \n        data = qx.io.ImageLoader.getSize(source);\n        if (data && data.width && data.height) {\n          return Object.assign({\n            aspectRatio: data.width / data.height\n          }, data);\n        }\n      \n      return null;\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyFile: function (file) {\n      const control = this.getChildControl('image');\n      if (file) {\n        control.setIcon(file.getServerPath());\n        control.setLabel(file.getFullPath());\n        if (!cv.ui.manager.viewer.Image.getImageData(file.getServerPath())) {\n          control.getChildControl('icon').addListenerOnce('loaded', this._scaleImage, this);\n        } else {\n          this._scaleImage();\n        }\n        this.addListener('resize', this._scaleImage, this);\n      } else {\n        control.resetIcon();\n        control.resetLabel();\n        this.removeListener('resize', this._scaleImage, this);\n      }\n    },\n\n    _scaleImage: function () {\n      const bounds = this.getBounds();\n      if (!bounds) {\n        this.addListenerOnce('appear', this._scaleImage, this);\n        return;\n      }\n      const file = this.getFile();\n      if (!file) {\n        return;\n      }\n      const icon = this.getChildControl('image').getChildControl('icon');\n      const data = cv.ui.manager.viewer.Image.getImageData(file.getServerPath());\n      const paddingX = 10;\n      const paddingY = 20;\n      const availableHeight = bounds.height - paddingY * 2;\n      let width = bounds.width - paddingX * 2;\n      let height = Math.round(1 / data.aspectRatio * width);\n      if (height > availableHeight) {\n        height = availableHeight;\n        width = Math.round(data.aspectRatio * availableHeight);\n      }\n      icon.set({\n        width: width,\n        height: height,\n        scale: true\n      });\n    }\n  }\n});\n"
  ]
}