{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/viewer/Icons.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "viewer",
    "Folder",
    "construct",
    "_disableFileEvents",
    "statics",
    "SUPPORTED_FILES",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "members",
    "_getDelegate",
    "createItem",
    "core",
    "IconAtom",
    "bindItem",
    "controller",
    "item",
    "index",
    "bindProperty",
    "_onFilter",
    "filterString",
    "getChildControl",
    "getValue",
    "filtered",
    "getModel",
    "filter",
    "name",
    "includes",
    "_controller",
    "setModel",
    "_applyFile",
    "file",
    "old",
    "container",
    "data",
    "List",
    "setDelegate",
    "model",
    "Object",
    "keys",
    "IconConfig",
    "DB",
    "entry",
    "lang",
    "Type",
    "isFunction",
    "forEach",
    "push",
    "getPermanentFilter",
    "resetModel",
    "Icons"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Icons.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Shows the available icons.\n */\nqx.Class.define('cv.ui.manager.viewer.Icons', {\n  extend: cv.ui.manager.viewer.Folder,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this._disableFileEvents = true;\n    this.base(arguments, true);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: /^CometVisu-Icons$/i,\n    TITLE: qx.locale.Manager.tr('Show icons'),\n    ICON: cv.theme.dark.Images.getIcon('icons', 18)\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _getDelegate: function () {\n      return {\n        createItem: function () {\n          return new cv.ui.manager.core.IconAtom();\n        },\n\n        bindItem: function (controller, item, index) {\n          controller.bindProperty('', 'label', null, item, index);\n        }\n      };\n    },\n\n    _onFilter: function () {\n      const filterString = this.getChildControl('filter').getValue();\n      const filtered = this.getModel().filter(function (name) {\n        return name.includes(filterString);\n      });\n      this._controller.setModel(filtered);\n    },\n\n    _applyFile: function(file, old) {\n      if (file) {\n        const container = this.getChildControl('list');\n        if (!this._controller) {\n          this._controller = new qx.data.controller.List(null, container);\n          this._controller.setDelegate(this._getDelegate());\n        }\n        const model = this.getModel();\n        // as the file is just a fake file, we do not really care about it\n        Object.keys(cv.IconConfig.DB).filter(function (name) {\n          const entry = cv.IconConfig.DB[name];\n          return entry['*'] && entry['*']['*'] && qx.lang.Type.isFunction(entry['*']['*']['*']);\n        }).forEach(function (name) {\n          model.push(name);\n        }, this);\n        if (this.getChildControl('filter').getValue() || this.getPermanentFilter()) {\n          this._onFilter();\n        } else {\n          this._controller.setModel(model);\n        }\n      } else if (this._controller) {\n          this._controller.resetModel();\n        }\n    }\n  }\n});\n"
  ]
}