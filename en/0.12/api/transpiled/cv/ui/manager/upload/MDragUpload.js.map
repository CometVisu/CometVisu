{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/upload/MDragUpload.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "setDroppable",
    "getBounds",
    "_applyStartDragListeners",
    "addListenerOnce",
    "layout",
    "_getLayout",
    "ui",
    "Grow",
    "Canvas",
    "addListener",
    "__syncBounds",
    "properties",
    "uploadMode",
    "check",
    "init",
    "apply",
    "uploadHint",
    "statics",
    "onHtml5Drop",
    "ev",
    "preventDefault",
    "getFiles",
    "forEach",
    "uploadFile",
    "file",
    "replaceFile",
    "isConfig",
    "cv",
    "manager",
    "model",
    "FileItem",
    "isConfigFile",
    "name",
    "folder",
    "tree",
    "FileSystem",
    "isAccepted",
    "type",
    "set",
    "upload",
    "UploadMgr",
    "setFolder",
    "hasDroppableFile",
    "length",
    "files",
    "i",
    "l",
    "dataTransfer",
    "items",
    "item",
    "kind",
    "getAsFile",
    "push",
    "members",
    "__hasEmptyInfo",
    "_boundOnStop",
    "bounds",
    "getChildControl",
    "setUserBounds",
    "left",
    "top",
    "width",
    "height",
    "_createMDragUploadChildControlImpl",
    "id",
    "control",
    "container",
    "Composite",
    "setZIndex",
    "exclude",
    "_add",
    "edge",
    "bind",
    "setBackgroundColor",
    "dropBox",
    "basic",
    "Atom",
    "getUploadHint",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "iconPosition",
    "rich",
    "center",
    "setWrap",
    "setAnonymous",
    "add",
    "_onStopDragging",
    "setUploadMode",
    "document",
    "removeEventListener",
    "getContentElement",
    "getDomElement",
    "addEventListener",
    "_isDroppable",
    "MDragUpload",
    "_applyDragListeners",
    "element",
    "lid",
    "getData",
    "removeListenerById",
    "uploadable",
    "_onDrop",
    "__applyUploadMode",
    "value",
    "show",
    "hasChildControl",
    "isVisible"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* MDragUpload.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Add upload via drag&drop feature to this widget. The including widget must have a\n * \"upload-dropbox\" childcontrol or add\n *  <pre class=\"javascript\">\n *   if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n *   </pre>\n *   to their own _createChildControlImpl method\n */\nqx.Mixin.define('cv.ui.manager.upload.MDragUpload', {\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct : function() {\n    this.setDroppable(true);\n    if (this.getBounds()) {\n      this._applyStartDragListeners();\n    } else {\n      this.addListenerOnce('appear', function() {\n        this._applyStartDragListeners();\n      }, this);\n    }\n    const layout = this._getLayout();\n    if (!(layout instanceof qx.ui.layout.Grow) && !(layout instanceof qx.ui.layout.Canvas)) {\n      this.addListener('resize', this.__syncBounds, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties : {\n    uploadMode: {\n      check: 'Boolean',\n      init: false,\n      apply: '__applyUploadMode'\n    },\n\n    uploadHint: {\n      check: 'String',\n      init: ''\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    /**\n     * Handles HTML5 drop events (dropping external files on dom element)\n     * @param ev {Event}\n     */\n    onHtml5Drop : function (ev) {\n      ev.preventDefault();\n      this.getFiles(ev).forEach(this.uploadFile, this);\n    },\n\n    /**\n     * Uploads the dropped file to the correct folder:\n     * - config files to the resources/config folder\n     * - accepted media files to the resources/config/media folder\n     * @param file {File}\n     * @param replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones\n     */\n    uploadFile: function (file, replaceFile) {\n      const isConfig = cv.ui.manager.model.FileItem.isConfigFile(file.name);\n\n      let folder;\n      if (isConfig) {\n        // upload to root folder\n        folder = new cv.ui.manager.model.FileItem('.');\n      } else if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n        // upload to media folder\n        folder = new cv.ui.manager.model.FileItem('media');\n      }\n      if (folder) {\n        folder.set({\n          type: 'dir'\n        });\n        const manager = new cv.ui.manager.upload.UploadMgr();\n        if (replaceFile) {\n          manager.replaceFile(file, replaceFile);\n        } else {\n          manager.setFolder(folder);\n          manager.uploadFile(file);\n        }\n      }\n    },\n\n    hasDroppableFile: function (ev) {\n      return this.getFiles(ev).length > 0;\n    },\n\n    /**\n     * Extracts acceptable files from event\n     * @param ev {Event}\n     * @private\n     */\n    getFiles: function (ev) {\n      const files = [];\n      let i;\n      let l;\n      let file;\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (i = 0, l = ev.dataTransfer.items.length; i < l; i++) {\n          // If dropped items aren't files, reject them\n          const item = ev.dataTransfer.items[i];\n          if (item.kind === 'file' && cv.ui.manager.tree.FileSystem.isAccepted(item.type)) {\n            file = item.getAsFile();\n            files.push(file);\n          }\n        }\n      } else {\n        for (i = 0, l = ev.dataTransfer.files.length; i < l; i++) {\n          file = ev.dataTransfer.files[i];\n          if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      return files;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members : {\n    __hasEmptyInfo: null,\n    _boundOnStop: null,\n\n    __syncBounds: function () {\n      const bounds = this.getBounds();\n      this.getChildControl('upload-overlay').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n      this.getChildControl('upload-dropbox').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n    },\n\n    // overridden\n    _createMDragUploadChildControlImpl: function(id) {\n      let control;\n      const bounds = this.getBounds();\n      const layout = this._getLayout();\n\n      switch (id) {\n        case 'upload-overlay':\n          control = new qx.ui.container.Composite();\n          control.setZIndex(1000000);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, {edge: 0});\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          this.getChildControl('upload-dropbox').bind('visibility', control, 'visibility');\n          break;\n\n        case 'upload-dropbox': {\n          control = new qx.ui.container.Composite(new qx.ui.layout.Grow());\n          control.setBackgroundColor('rgba(32, 32, 32, 0.9)');\n          control.setZIndex(1000);\n          const dropBox = new qx.ui.basic.Atom(this.getUploadHint(), cv.theme.dark.Images.getIcon('upload', 32));\n          dropBox.set({\n            iconPosition: 'top',\n            rich: true,\n            center: true\n          });\n          // control.bind('width', dropBox, 'maxWidth');\n          dropBox.getChildControl('label').setWrap(true);\n          control.setAnonymous(true);\n          control.add(dropBox);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, {edge: 0});\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          break;\n        }\n      }\n      return control;\n    },\n\n    _onStopDragging: function(ev) {\n      ev.preventDefault();\n      this.setUploadMode(false);\n      document.removeEventListener('dragend', this._boundOnStop, false);\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyStartDragListeners: function() {\n      // add the start listener to this widget\n      this.getContentElement().getDomElement().addEventListener('dragenter', function(ev) {\n        // ev.preventDefault();\n        if (this._isDroppable) {\n          if (this._isDroppable(ev.dataTransfer.items)) {\n            // we have something to drop\n            this.setUploadMode(true);\n          }\n        } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n          // we have something to drop\n          this.setUploadMode(true);\n        }\n      }.bind(this), false);\n      if (this.getChildControl('upload-overlay').getBounds()) {\n        this._applyDragListeners();\n      } else {\n        this.getChildControl('upload-overlay').addListenerOnce('appear', function() {\n          this._applyDragListeners();\n        }, this);\n      }\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyDragListeners: function() {\n      const element = this.getChildControl('upload-overlay').getContentElement().getDomElement();\n      if (!element) {\n        const lid = this.getChildControl('upload-overlay').addListener('visibility', function (ev) {\n          if (ev.getData() === 'visible') {\n            this._applyDragListeners();\n            this.getChildControl('upload-overlay').removeListenerById(lid);\n          }\n        }, this);\n        return;\n      }\n      element.addEventListener('dragexit', function() {\n        this.setUploadMode(false);\n      }.bind(this), false);\n\n      element.addEventListener('dragover', function (ev) {\n        ev.preventDefault();\n        let uploadable = false;\n        if (this._isDroppable) {\n          uploadable = this._isDroppable(ev.dataTransfer.items);\n        } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n          uploadable = true;\n        }\n        this.setUploadMode(uploadable);\n      }.bind(this), false);\n\n      this._boundOnStop = this._onStopDragging.bind(this);\n\n      element.addEventListener('dragleave', this._boundOnStop, false);\n      element.addEventListener('dragend', function() {\n        this.setUploadMode(false);\n      }.bind(this), false);\n\n      document.addEventListener('dragend', this._boundOnStop, false);\n\n      if (this._onDrop) {\n        element.addEventListener('drop', this._onDrop.bind(this), false);\n      } else {\n        element.addEventListener('drop', function (ev) {\n          cv.ui.manager.upload.MDragUpload.onHtml5Drop(ev);\n          this._onStopDragging(ev);\n        }.bind(this), false);\n      }\n    },\n\n    // property apply\n    __applyUploadMode: function(value) {\n      if (value === true) {\n        this.getChildControl('upload-dropbox').show();\n        if (this.hasChildControl('empty-info') && this.getChildControl('empty-info').isVisible()) {\n          this.getChildControl('empty-info').exclude();\n          this.__hasEmptyInfo = true;\n        } else {\n          this.__hasEmptyInfo = false;\n        }\n      } else {\n        this.getChildControl('upload-dropbox').exclude();\n        if (this.__hasEmptyInfo === true) {\n          this.getChildControl('empty-info').show();\n        }\n      }\n    }\n  }\n});\n"
  ]
}