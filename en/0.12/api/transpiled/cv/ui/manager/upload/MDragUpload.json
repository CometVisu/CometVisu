{
  "className": "cv.ui.manager.upload.MDragUpload",
  "packageName": "cv.ui.manager.upload",
  "name": "MDragUpload",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 11,
        "column": 0
      },
      "end": {
        "line": 293,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Add upload via drag&amp;drop feature to this widget. The including widget must have a\n \"upload-dropbox\" childcontrol or add\n  </p>\n<pre class=\"javascript\">\n   if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n   </pre>\n<p>to their own _createChildControlImpl method</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 18,
        "column": 14
      },
      "end": {
        "line": 31,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "properties": {
    "uploadMode": {
      "type": "property",
      "name": "uploadMode",
      "abstract": false,
      "mixin": true,
      "access": "public"
    },
    "uploadHint": {
      "type": "property",
      "name": "uploadHint",
      "abstract": false,
      "mixin": true,
      "access": "public"
    }
  },
  "statics": {
    "onHtml5Drop": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles HTML5 drop events (dropping external files on dom element)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "uploadFile": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 96,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Uploads the dropped file to the correct folder:</p>\n<ul>\n<li>config files to the resources/config folder</li>\n<li>accepted media files to the resources/config/media folder</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file {File}"
          },
          {
            "name": "@param",
            "body": "replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones",
            "paramName": "replaceFile",
            "description": " optional, if set this files content gets replaced with the uploaded ones",
            "optional": true,
            "type": "cv.ui.manager.model.FileItem"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hasDroppableFile": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getFiles": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 130,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Extracts acceptable files from event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "members": {
    "__hasEmptyInfo": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 139,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_boundOnStop": {
      "location": {
        "start": {
          "line": 140,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 22
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__syncBounds": {
      "location": {
        "start": {
          "line": 142,
          "column": 4
        },
        "end": {
          "line": 146,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "_createMDragUploadChildControlImpl": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 192,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onStopDragging": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 198,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_applyStartDragListeners": {
      "location": {
        "start": {
          "line": 203,
          "column": 4
        },
        "end": {
          "line": 225,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&amp;Drop</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyDragListeners": {
      "location": {
        "start": {
          "line": 230,
          "column": 4
        },
        "end": {
          "line": 273,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&amp;Drop</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__applyUploadMode": {
      "location": {
        "start": {
          "line": 276,
          "column": 4
        },
        "end": {
          "line": 291,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "private",
      "applyFor": [
        "uploadMode"
      ]
    },
    "getUploadMode": {
      "type": "function",
      "name": "getUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>uploadMode</code>.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for uploadMode"
          }
        ]
      }
    },
    "isUploadMode": {
      "type": "function",
      "name": "isUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>uploadMode</code>.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for uploadMode"
          }
        ]
      }
    },
    "setUploadMode": {
      "type": "function",
      "name": "setUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>uploadMode</code>.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for uploadMode"
          }
        ]
      }
    },
    "resetUploadMode": {
      "type": "function",
      "name": "resetUploadMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>uploadMode</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #uploadMode}."
          }
        ]
      }
    },
    "getUploadHint": {
      "type": "function",
      "name": "getUploadHint",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>uploadHint</code>.\n\nFor further details take a look at the property definition: {@link #uploadHint}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for uploadHint"
          }
        ]
      }
    },
    "setUploadHint": {
      "type": "function",
      "name": "setUploadHint",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>uploadHint</code>.\n\nFor further details take a look at the property definition: {@link #uploadHint}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for uploadHint"
          }
        ]
      }
    },
    "resetUploadHint": {
      "type": "function",
      "name": "resetUploadHint",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>uploadHint</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #uploadHint}."
          }
        ]
      }
    }
  },
  "descendants": []
}