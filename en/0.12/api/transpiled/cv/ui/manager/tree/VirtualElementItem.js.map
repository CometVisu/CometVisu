{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/tree/VirtualElementItem.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "VirtualTreeItem",
    "construct",
    "label",
    "core",
    "Environment",
    "get",
    "addState",
    "properties",
    "appearance",
    "refine",
    "init",
    "name",
    "check",
    "event",
    "apply",
    "temporary",
    "status",
    "nullable",
    "editable",
    "sortable",
    "droppable",
    "dragging",
    "events",
    "edit",
    "action",
    "members",
    "_forwardStates",
    "selected",
    "touch",
    "__labelAdded",
    "_applyName",
    "value",
    "getContentElement",
    "setAttribute",
    "_applyDragging",
    "removeState",
    "_applyModel",
    "menuButton",
    "getChildControl",
    "show",
    "menu",
    "getMenu",
    "setEditor",
    "getEditor",
    "setElement",
    "hide",
    "hasChildControl",
    "exclude",
    "_applyTemporary",
    "_applySortable",
    "_applyStatus",
    "old",
    "icon",
    "_addWidgets",
    "open",
    "addClass",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "cv",
    "manager",
    "basic",
    "Image",
    "set",
    "forceScale",
    "alignY",
    "anonymous",
    "source",
    "getIcon",
    "maxWidth",
    "maxHeight",
    "container",
    "Composite",
    "layout",
    "HBox",
    "setAnonymous",
    "Atom",
    "theme",
    "dark",
    "Images",
    "setToolTipText",
    "tr",
    "setShow",
    "addAt",
    "form",
    "MenuButton",
    "contextmenu",
    "ConfigElement",
    "addListener",
    "ev",
    "fireDataEvent",
    "getData",
    "addLabel",
    "text",
    "_remove",
    "setLabel",
    "setValue",
    "getLabel",
    "_add",
    "Spacer",
    "flex",
    "buttons",
    "VirtualElementItem"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* VirtualElementItem.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Widget for node items in XML-File\n */\nqx.Class.define('cv.ui.manager.tree.VirtualElementItem', {\n  extend: qx.ui.tree.VirtualTreeItem,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (label) {\n    this.base(arguments, label);\n    if (qx.core.Environment.get('device.touch')) {\n      this.addState('touch');\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'element-tree-item'\n    },\n\n    name: {\n      check: 'String',\n      init: '',\n      event: 'changeName',\n      apply: '_applyName'\n    },\n\n    temporary: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyTemporary'\n    },\n\n    status: {\n      check: ['valid', 'error', 'comment'],\n      nullable: true,\n      apply: '_applyStatus'\n    },\n\n    editable: {\n      check: 'Boolean',\n      init: false\n    },\n\n    sortable: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applySortable'\n    },\n\n    droppable: {\n      refine: true,\n      init: true\n    },\n\n    dragging: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyDragging'\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    edit: 'qx.event.type.Data',\n    action: 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: { // eslint-disable-line @qooxdoo/qx/no-refs-in-members\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      selected : true,\n      touch: true\n    },\n    __labelAdded: false,\n\n    _applyName: function(value) {\n      this.getContentElement().setAttribute('data-nodename', value);\n    },\n\n    // this has to be set by model binding, because the qx way by adding a state does not survive a widget re-binding\n    _applyDragging: function (value) {\n      if (value) {\n        this.addState('drag');\n      } else {\n        this.removeState('drag');\n      }\n    },\n\n    _applyModel: function (value) {\n      if (qx.core.Environment.get('device.touch')) {\n        if (value) {\n          const menuButton = this.getChildControl('menu-button');\n          menuButton.show();\n          let menu = menuButton.getMenu();\n          menu.setEditor(value.getEditor());\n          menu.setElement(value);\n        } else {\n          this.getChildControl('menu-button').hide();\n        }\n      } else if (this.hasChildControl('menu-button')) {\n        this.getChildControl('menu-button').exclude();\n      }\n    },\n\n    _applyTemporary: function (value) {\n      if (value) {\n        this.addState('temporary');\n      } else {\n        this.removeState('temporary');\n      }\n    },\n\n    _applySortable: function (value) {\n      if (value) {\n        this.getChildControl('move-button').show();\n      } else {\n        this.getChildControl('move-button').hide();\n      }\n    },\n\n    _applyStatus: function (value, old) {\n      const icon = this.getChildControl('icon');\n      const label = this.getChildControl('label');\n      if (old) {\n        icon.removeState(old);\n        label.removeState(old);\n      }\n      if (value) {\n        icon.addState(value);\n        label.addState(value);\n      }\n    },\n\n    _addWidgets: function() {\n      this.base(arguments);\n      const open = this.getChildControl('open', true);\n      if (open && qx.core.Environment.get('device.touch')) {\n        open.getContentElement().addClass('touch-tree-open-icon');\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash) {\n      let control;\n\n      switch (id) {\n         case 'icon':\n           control = new cv.ui.manager.basic.Image().set({\n             forceScale: true,\n             alignY: 'middle',\n             anonymous: true,\n             source: this.getIcon(),\n             maxWidth: 22,\n             maxHeight: 22\n           });\n           break;\n\n         case 'buttons':\n           control = new qx.ui.container.Composite(new qx.ui.layout.HBox(8));\n           control.setAnonymous(true);\n           break;\n\n         case 'move-button':\n           control = new qx.ui.basic.Atom('', cv.theme.dark.Images.getIcon('drag-handle', qx.core.Environment.get('device.touch') ? 36 : 18));\n           control.setToolTipText(this.tr('Drag to move'));\n           control.setAnonymous(true);\n           control.setShow('icon');\n           this.getChildControl('buttons').addAt(control, 0);\n           break;\n\n         case 'menu-button':\n           control = new qx.ui.form.MenuButton('', cv.theme.dark.Images.getIcon('menu', qx.core.Environment.get('device.touch') ? 24 : 14), new cv.ui.manager.contextmenu.ConfigElement());\n           control.getMenu().addListener('action', ev => {\n             this.fireDataEvent('action', ev.getData());\n           });\n           this.getChildControl('buttons').addAt(control, 1);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    },\n\n    // overridden\n    addLabel : function(text) {\n      const label = this.getChildControl('label');\n\n      if (this.__labelAdded) {\n        this._remove(label);\n      }\n\n      if (text) {\n        this.setLabel(text);\n      } else {\n        label.setValue(this.getLabel());\n      }\n\n      this._add(label);\n      this._add(new qx.ui.core.Spacer(), {flex: 1});\n      const buttons = this.getChildControl('buttons');\n      this._add(buttons);\n      this.__labelAdded = true;\n    }\n  }\n});\n"
  ]
}