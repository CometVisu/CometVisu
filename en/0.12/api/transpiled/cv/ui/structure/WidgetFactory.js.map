{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/WidgetFactory.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "c",
    "__typeMapping",
    "registry",
    "registerClass",
    "clazz",
    "createInstance",
    "data",
    "path",
    "cv",
    "ui",
    "structure",
    "pure",
    "charAt",
    "toUpperCase",
    "substr",
    "log",
    "Logger",
    "error",
    "getInstanceById",
    "id",
    "skipCreation",
    "widget",
    "Config",
    "lazyLoading",
    "Model",
    "getInstance",
    "getWidgetData",
    "$$type",
    "getInstanceByElement",
    "element",
    "instance",
    "getAttribute",
    "_onDomReady",
    "$$domReady",
    "clear",
    "WidgetFactory"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* WidgetFactory.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\nqx.Class.define('cv.ui.structure.WidgetFactory', {\n  type: \"static\",\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    c : 0,\n    /**\n     * Map $$type to Classname\n     */\n    __typeMapping: {},\n    registry: {},\n\n    registerClass: function(type, clazz) {\n      this.__typeMapping[type] = clazz;\n    },\n\n    createInstance: function (type, data) {\n      if (!this.registry[data.path]) {\n        if (!cv.ui.structure.pure[type.charAt(0).toUpperCase() + type.substr(1)]) {\n          var clazz = this.__typeMapping[type];\n          if (clazz) {\n            this.registry[data.path] = new clazz(data); // jshint ignore:line\n          } else {\n            qx.log.Logger.error(this, \"No handler found for type '\"+type+\"'\");\n            return null;\n          }\n        } else {\n          // console.log(data.path+\" cv.ui.structure.pure.\"+type.charAt(0).toUpperCase() + type.substr(1));\n          this.registry[data.path] = new cv.ui.structure.pure[type.charAt(0).toUpperCase() + type.substr(1)](data);\n        }\n        this.c++;\n      }\n      return this.registry[data.path];\n    },\n\n    getInstanceById: function (id, skipCreation) {\n      var widget = this.registry[id];\n      if (!widget && !skipCreation && cv.Config.lazyLoading === true) {\n        var data = cv.data.Model.getInstance().getWidgetData(id);\n        widget = this.createInstance(data.$$type, data);\n      }\n      return widget;\n    },\n\n    getInstanceByElement: function(element) {\n      var instance = this.getInstanceById(element.getAttribute('id'));\n      if (instance && cv.Config.lazyLoading === true && instance._onDomReady && !instance.$$domReady) {\n        // apply listeners and update initial value\n        instance._onDomReady();\n        // make sure that this is not triggered twice\n        instance.$$domReady = true;\n      }\n      return instance;\n    },\n\n    clear: function () {\n      this.registry = {};\n    }\n  }\n});"
  ]
}