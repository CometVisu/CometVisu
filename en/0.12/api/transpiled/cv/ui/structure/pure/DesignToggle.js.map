{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/ui/structure/pure/DesignToggle.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Operate",
    "HasAnimatedButton",
    "construct",
    "props",
    "store",
    "data",
    "Json",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "addListener",
    "ev",
    "setAvailableDesigns",
    "getData",
    "properties",
    "availableDesigns",
    "check",
    "init",
    "members",
    "_getInnerDomString",
    "Config",
    "getDesign",
    "_action",
    "path",
    "actor",
    "isCanceled",
    "designs",
    "getAvailableDesigns",
    "oldDesign",
    "getDomElement",
    "querySelector",
    "textContent",
    "newDesign",
    "getItem",
    "indexOf",
    "length",
    "URL",
    "Location",
    "getHref",
    "regexp",
    "RegExp",
    "search",
    "setHref",
    "replace",
    "parts",
    "split",
    "req",
    "Uri",
    "appendParamsToUrl",
    "design",
    "defer",
    "statics",
    "WidgetFactory",
    "registerClass",
    "pure",
    "DesignToggle"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* DesignToggle.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Adds a button to toggle through the available designs\n * @widgetexample\n * <designtoggle>\n *   <layout colspan=\"6\"/>\n *   <label>Change Design</label>\n * </designtoggle>\n *\n *\n *\n * @author Christian Mayer\n * @since 0.5.3 (2010)\n */\nqx.Class.define('cv.ui.structure.pure.DesignToggle', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Operate, cv.ui.common.HasAnimatedButton],\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function(props) {\n    this.base(arguments, props);\n    var store = new qx.data.store.Json(qx.util.ResourceManager.getInstance().toUri(\"designs/get_designs.php\"));\n    store.addListener(\"loaded\", function (ev) {\n      this.setAvailableDesigns(ev.getData());\n    }, this);\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    availableDesigns: { check: \"Array\", init: [] }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    // overridden\n    _getInnerDomString: function () {\n      return '<div class=\"actor switchUnpressed\"><div class=\"value\">' + cv.Config.getDesign() + '</div></div>';\n    },\n    /**\n     * Action performed when the widget got clicked\n     *\n     *\n     * @param path {String} - Internal path of the widget\n     * @param actor {Element} - DOMElement\n     * @param isCanceled {Boolean} - If true the action does nothing\n     */\n    _action: function( path, actor, isCanceled ) {\n      if( isCanceled ) { return; }\n\n      var designs = this.getAvailableDesigns();\n\n      var oldDesign = this.getDomElement().querySelector('.value').textContent;\n      var newDesign = designs.getItem((designs.indexOf(oldDesign) + 1) % designs.length);\n\n      var URL = cv.util.Location.getHref();\n      var regexp = new RegExp(\"design=\"+oldDesign);\n      if (URL.search(regexp) !== -1) { // has URL-parameter design\n        cv.util.Location.setHref(URL.replace(regexp, \"design=\"+newDesign));\n      }\n      else {\n        var parts = cv.util.Location.getHref().split(\"#\");\n        var req = qx.util.Uri.appendParamsToUrl(parts[0], {design: newDesign});\n        if (parts.length > 1) {\n          req += \"#\"+parts[1];\n        }\n        cv.util.Location.setHref(req);\n      }\n    }\n  },\n\n  defer: function(statics) {\n    cv.ui.structure.WidgetFactory.registerClass(\"designtoggle\", statics);\n  }\n});\n"
  ]
}