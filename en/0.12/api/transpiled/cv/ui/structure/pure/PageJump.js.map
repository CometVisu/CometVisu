{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/PageJump.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "HasChildren",
    "HasAnimatedButton",
    "construct",
    "props",
    "name",
    "bindClickToWidget",
    "properties",
    "target",
    "check",
    "init",
    "activeScope",
    "nullable",
    "targetPath",
    "statics",
    "_onScrollToPage",
    "ev",
    "page_id",
    "getData",
    "page",
    "WidgetFactory",
    "getInstanceById",
    "model",
    "data",
    "Model",
    "getInstance",
    "getName",
    "document",
    "querySelectorAll",
    "forEach",
    "elem",
    "classList",
    "remove",
    "getWidgetDataByElement",
    "add",
    "parentPage",
    "util",
    "Tree",
    "getParentWidget",
    "pageJumps",
    "markPageJumps",
    "parentName",
    "path",
    "match",
    "members",
    "_getInnerDomString",
    "actor",
    "getAlign",
    "getChildrenDomString",
    "action",
    "getTarget",
    "getTargetPath",
    "TemplateEngine",
    "getPageIdByPath",
    "scrollToPage",
    "defer",
    "registerClass",
    "event",
    "message",
    "Bus",
    "subscribe",
    "pure",
    "PageJump"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* PageJump.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * The pagejump widget can be used to link the visu pages.\n * The function is similar to hyperlinks.\n *\n * @author Christian Mayer\n * @since 2012\n */\nqx.Class.define('cv.ui.structure.pure.PageJump', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [\n    cv.ui.common.HasChildren,\n    cv.ui.common.HasAnimatedButton\n  ],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (props) {\n    if (!props.name) {\n      // when there is no name the widget has no actor as clickable subelement, so we need\n      // to bind the click events to the whole widget\n      props.bindClickToWidget = true;\n    }\n    this.base(arguments, props);\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    target : {\n      check: 'String',\n      init: '0'\n    },\n    activeScope : {\n      check: ['target', 'path'],\n      init: 'target'\n    },\n    name : {\n      check: 'String',\n      nullable: true\n    },\n    targetPath : {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Handle page change events and update the active state of this PageJump\n     *\n     * @param ev {Event}\n     * @protected\n     */\n    _onScrollToPage: function(ev) {\n      const page_id = ev.getData();\n      const page = cv.ui.structure.WidgetFactory.getInstanceById(page_id);\n      const model = cv.data.Model.getInstance();\n      const name = page.getName();\n\n      // remove old active classes\n      document.querySelectorAll('.pagejump.active').forEach(function(elem) {\n        elem.classList.remove('active');\n      }, this);\n      document.querySelectorAll('.pagejump.active_ancestor').forEach(function(elem) {\n        elem.classList.remove('active_ancestor');\n      }, this);\n\n      // and set the new active ones\n      document.querySelectorAll('.pagejump').forEach(function(elem) {\n        const data = model.getWidgetDataByElement(elem);\n        if (name === data.target) {\n          elem.classList.add('active');\n        }\n      }, this);\n\n      // now set the active ancestors\n      let parentPage = cv.util.Tree.getParentWidget(page, 'page');\n      // set for all parent pages apart from the root page\n\n      const pageJumps = document.querySelectorAll('.pagejump');\n      const markPageJumps = function (parentName, elem) {\n        const data = model.getWidgetDataByElement(elem);\n        if (parentName === data.target || (data.activeScope === 'path' && (\n            (typeof data.path === 'string') && data.path.match(parentName + '$') ||\n            (typeof data.targetPath === 'string') && data.targetPath.match(parentName + '$'))\n        )) {\n          elem.classList.add('active_ancestor');\n        }\n      };\n\n      while (parentPage && cv.util.Tree.getParentWidget(parentPage, 'page')) {\n        pageJumps.forEach(function(elem) {\n markPageJumps(parentPage.getName(), elem); \n});\n        // recursively find pagejumps for parent pages\n        parentPage = cv.util.Tree.getParentWidget(parentPage, 'page');\n      }\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n\n    // overridden\n    _getInnerDomString: function() {\n      let actor = '<div class=\"actor switchUnpressed';\n      if (this.getAlign()) {\n        actor += ' ' + this.getAlign();\n      }\n      actor += '\">';\n      if (this.getName()) {\n        actor += '<div class=\"value\">' + this.getName() + '</div>';\n      }\n      actor += '</div>';\n      return actor + this.getChildrenDomString();\n    },\n\n    // overridden\n    action: function() {\n      let target = this.getTarget();\n      if (this.getTargetPath() !== null) {\n        target = cv.TemplateEngine.getInstance().getPageIdByPath(target, this.getTargetPath());\n      }\n      cv.TemplateEngine.getInstance().scrollToPage(target);\n    }\n  },\n\n  defer: function(statics) {\n    cv.ui.structure.WidgetFactory.registerClass('pagejump', statics);\n    qx.event.message.Bus.subscribe('path.pageChanged', statics._onScrollToPage, statics);\n  }\n});\n"
  ]
}