{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/Image.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Refresh",
    "properties",
    "width",
    "check",
    "init",
    "height",
    "nullable",
    "src",
    "widthFit",
    "members",
    "__src",
    "_getInnerDomString",
    "imgStyle",
    "getWidth",
    "getWidthFit",
    "getHeight",
    "__getSrc",
    "getSrc",
    "parsedUri",
    "util",
    "Uri",
    "parseUri",
    "protocol",
    "startsWith",
    "ResourceManager",
    "getInstance",
    "toUri",
    "getValueElement",
    "getDomElement",
    "querySelector",
    "_applyVisible",
    "value",
    "valueElem",
    "getRefresh",
    "setAttribute",
    "defer",
    "statics",
    "WidgetFactory",
    "registerClass",
    "pure",
    "Image"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Image.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Adds an image to your visualization. Using the auto-refresh setting this widget can be used e.g. to show\n * a camera picture.\n *\n * @widgetexample\n * <image src=\"resource/icons/CometVisu_orange.png\" width=\"45px\" height=\"32px\">\n *   <layout colspan=\"2\" />\n * </image>\n *\n * @author Christian Mayer\n * @since 0.8.0 (2012)\n */\nqx.Class.define('cv.ui.structure.pure.Image', {\n  extend: cv.ui.structure.AbstractWidget,\n\n  include: cv.ui.common.Refresh,\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    width   : { check: \"String\", init: \"100%\" },\n    height  : { check: \"String\", nullable: true },\n    src     : { check: \"String\", init: \"\" },\n    widthFit: { check: \"Boolean\", init: false }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __src: null,\n\n    // overridden\n    _getInnerDomString: function () {\n      // create the actor\n      var imgStyle = '';\n      if (this.getWidth()) {\n        imgStyle += 'width:' + this.getWidth() + ';';\n      }\n      if (this.getWidthFit() === true) {\n        imgStyle += 'max-width:100%;';\n      }\n      if (this.getHeight()) {\n        imgStyle += 'height:' + this.getHeight() + ';';\n      }\n      return '<div class=\"actor\"><img src=\"' + this.__getSrc() + '\" style=\"' + imgStyle + '\" /></div>';\n    },\n\n    /**\n     * Return the real src value\n     */\n    __getSrc: function() {\n      if (!this.__src) {\n        var src = this.getSrc();\n        var parsedUri = qx.util.Uri.parseUri(this.getSrc());\n        if (!parsedUri.protocol && !this.getSrc().startsWith(\"/\")) {\n          // is relative URI, use the ResourceManager\n          src = qx.util.ResourceManager.getInstance().toUri(this.getSrc());\n        }\n        this.__src = src;\n      }\n      return this.__src;\n    },\n\n    // overridden\n    getValueElement: function() {\n      return this.getDomElement().querySelector(\"img\");\n    },\n\n    // overridden\n    _applyVisible: function(value) {\n      var valueElem = this.getValueElement();\n      if (!valueElem || this.getRefresh() > 0) {\n        return;\n      }\n      if (value === true) {\n        valueElem.setAttribute(\"src\", this.__getSrc());\n      } else {\n        valueElem.setAttribute(\"src\", \"\");\n      }\n    }\n  },\n\n  defer: function(statics) {\n    cv.ui.structure.WidgetFactory.registerClass(\"image\", statics);\n  }\n});\n"
  ]
}