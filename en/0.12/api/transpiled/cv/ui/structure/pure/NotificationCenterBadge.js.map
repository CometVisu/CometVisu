{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/ui/structure/pure/NotificationCenterBadge.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "construct",
    "props",
    "classes",
    "trim",
    "split",
    "i_right",
    "indexOf",
    "setContainerClass",
    "splice",
    "join",
    "properties",
    "counter",
    "check",
    "init",
    "apply",
    "hideWhenEmpty",
    "members",
    "__badgeElement",
    "_onDomReady",
    "center",
    "NotificationCenter",
    "getInstance",
    "getMessages",
    "addListener",
    "_onChangeCounter",
    "_onChangeGlobalSeverity",
    "_applyVisible",
    "value",
    "disableBadge",
    "action",
    "ev",
    "_skipNextEvent",
    "getType",
    "toggleVisibility",
    "__getBadgeElement",
    "getDomElement",
    "querySelector",
    "classList",
    "remove",
    "getSeverities",
    "getData",
    "add",
    "messages",
    "length",
    "innerHTML",
    "isHideWhenEmpty",
    "style",
    "display",
    "_getInnerDomString",
    "getCounter",
    "destruct",
    "removeListener",
    "defer",
    "statics",
    "WidgetFactory",
    "registerClass",
    "pure",
    "NotificationCenterBadge"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* NotificationCenterBadge.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Shows the current number of messages in {@link cv.ui.NotificationCenter} and opens it on click.\n *\n *\n * @widgetexample <settings>\n *   <caption>Configuration example of a centered text widget</caption>\n *   <screenshot name=\"text_example\" />\n * </settings>\n * <notificationcenterbadge>\n *  <layout colspan=\"0\" />\n * </notificationcenterbadge>\n *\n * @author Tobias Br√§utigam\n * @since 0.11.0\n */\nqx.Class.define('cv.ui.structure.pure.NotificationCenterBadge', {\n  extend: cv.ui.structure.AbstractWidget,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    var classes = props.classes.trim().split(\" \"),\n        i_right = classes.indexOf(\"right\");\n\n    if (i_right !== -1) {\n      // do not align, but float the container instead\n      this.setContainerClass(\"float-right\");\n      classes.splice(i_right, 1);\n      props.classes = classes.join(\" \");\n    }\n    this.base(arguments, props);\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    counter: {\n      check: \"Number\",\n      init: 0,\n      apply: \"_applyCounter\"\n    },\n    hideWhenEmpty: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    __badgeElement: null,\n\n    _onDomReady: function() {\n      this.base(arguments);\n      var center = cv.ui.NotificationCenter.getInstance();\n      center.getMessages().addListener(\"changeLength\", this._onChangeCounter, this);\n      this._onChangeCounter();\n      center.addListener(\"changedGlobalSeverity\", this._onChangeGlobalSeverity, this);\n    },\n\n    // property apply\n    _applyVisible: function(value) {\n      // hide NotificationCenters own badge while we are visible\n      cv.ui.NotificationCenter.getInstance().disableBadge(value);\n    },\n\n    action: function(ev) {\n      if (this._skipNextEvent === ev.getType()) {\n        this._skipNextEvent = null;\n        return;\n      }\n      cv.ui.NotificationCenter.getInstance().toggleVisibility();\n    },\n\n    __getBadgeElement: function() {\n      if (!this.__badgeElement) {\n        this.__badgeElement = this.getDomElement().querySelector(\".badge\");\n      }\n      return this.__badgeElement;\n    },\n\n    _onChangeGlobalSeverity: function(ev) {\n      var classList = this.__getBadgeElement().classList;\n      classList.remove.apply( classList, cv.ui.NotificationCenter.getInstance().getSeverities() );\n      if (ev.getData()) {\n        classList.add(ev.getData());\n      }\n    },\n\n    _onChangeCounter: function() {\n      var messages = cv.ui.NotificationCenter.getInstance().getMessages().length;\n      this.__getBadgeElement().innerHTML = \"\"+messages;\n      if (this.isHideWhenEmpty()) {\n        this.__getBadgeElement().style.display = messages === 0 ? \"none\" : \"block\";\n      }\n    },\n\n    // overridden\n    _getInnerDomString: function () {\n      var style = \"\";\n      if (this.isHideWhenEmpty() && this.getCounter() === 0) {\n        style = ' style=\"display: none;\"';\n      }\n      return '<div class=\"actor badge\"'+style+'>'+this.getCounter()+'</div>';\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    var center = cv.ui.NotificationCenter.getInstance();\n    center.getMessages().removeListener(\"changeLength\", this._onChangeCounter, this);\n    center.removeListener(\"changedGlobalSeverity\", this._onChangeGlobalSeverity, this);\n  },\n\n  defer: function(statics) {\n    cv.ui.structure.WidgetFactory.registerClass(\"notificationcenterbadge\", statics);\n  }\n});"
  ]
}