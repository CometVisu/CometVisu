{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/PushButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Operate",
    "Update",
    "properties",
    "check",
    "init",
    "members",
    "_getInnerDomString",
    "initListeners",
    "addElementListener",
    "_onPointerDown",
    "_onPointerUp",
    "handleUpdate",
    "value",
    "actor",
    "getActor",
    "getBasicValue",
    "off",
    "getUpValue",
    "classList",
    "remove",
    "add",
    "getActionValue",
    "event",
    "type",
    "getDownValue",
    "sendValue",
    "sendToBackend",
    "address",
    "variantInfo",
    "defer",
    "statics",
    "WidgetFactory",
    "registerClass",
    "pure",
    "PushButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* PushButton.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Adds a button to the visu that sends a defined value to the BUS when you press and release.\n * E.g. pushing a 1 and releasing a 0. This makes it possible, for example,\n * to simulate a push button to open and close a garage door, blinds or blinds.\n *\n * @since 2013\n */\nqx.Class.define('cv.ui.structure.pure.PushButton', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Operate, cv.ui.common.Update],\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    'downValue': {check: 'String', init: '1'},\n    'upValue': {check: 'String', init: '0'}\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    // overridden\n    _getInnerDomString: function () {\n      return '<div class=\"actor switchUnpressed\"><div class=\"value\">-</div></div>';\n    },\n\n    // overridden\n    initListeners: function() {\n      this.addElementListener('pointerdown', this._onPointerDown, this);\n      this.addElementListener('pointerup', this._onPointerUp, this);\n    },\n\n    /**\n     * Handles the incoming data from the backend for this widget\n     *\n     *\n     * @param value {any} incoming data (already transformed + mapped)\n     */\n    handleUpdate: function (value) {\n      const actor = this.getActor();\n      // compare against the unmapped value\n      value = '' + this.getBasicValue();\n      const off = this.getUpValue();\n      actor.classList.remove(value === off ? 'switchPressed' : 'switchUnpressed');\n      actor.classList.add(value === off ? 'switchUnpressed' : 'switchPressed');\n    },\n\n    /**\n     * Get the value that should be send to backend after the action has been triggered\n     * @param event\n     */\n    getActionValue: function (event) {\n      if (event.type === 'pointerup') {\n        return this.getUpValue();\n      } \n        return this.getDownValue();\n    },\n\n    _onPointerUp: function () {\n      const sendValue = this.getUpValue();\n      this.sendToBackend(sendValue, function (address) {\n        return (!address.variantInfo || address.variantInfo === 'up');\n      });\n    },\n\n    _onPointerDown: function () {\n      const sendValue = this.getDownValue();\n      this.sendToBackend(sendValue, function (address) {\n        return (!address.variantInfo || address.variantInfo === 'down');\n      });\n    }\n  },\n\n  defer: function(statics) {\n    cv.ui.structure.WidgetFactory.registerClass('pushbutton', statics);\n  }\n});\n"
  ]
}