{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/common/BasicUpdate.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "include",
    "cv",
    "ui",
    "common",
    "HasAddress",
    "properties",
    "value",
    "nullable",
    "init",
    "event",
    "basicValue",
    "format",
    "check",
    "statics",
    "applyMapping",
    "mappingName",
    "Config",
    "hasMapping",
    "mapping",
    "getMapping",
    "ret",
    "formula",
    "mapValue",
    "v",
    "NULL",
    "range",
    "valueFloat",
    "parseFloat",
    "min",
    "defaultValue",
    "undefined",
    "members",
    "formatValueCache",
    "applyTransform",
    "address",
    "data",
    "transform",
    "getAddress",
    "Transform",
    "decode",
    "BasicUpdate",
    "getNextMappedValue",
    "this_map",
    "keys",
    "Object",
    "indexOf",
    "length",
    "applyFormat",
    "getFormat",
    "argListPos",
    "formatPos",
    "util",
    "String",
    "sprintf",
    "apply",
    "defaultValueHandling",
    "setBasicValue",
    "setValue",
    "constructor",
    "Date",
    "toLocaleTimeString",
    "toLocaleDateString",
    "applyStyling",
    "getBasicValue",
    "defaultValue2DOM",
    "modifyFn",
    "element",
    "Uint8Array",
    "Map",
    "error",
    "Array",
    "isArray",
    "cloneNode",
    "getContext",
    "IconTools",
    "fillRecoloredIcon",
    "i",
    "thisValue",
    "defaultUpdate",
    "ga",
    "passedElement",
    "getDomElement",
    "getAlign",
    "classList",
    "add",
    "valueElement",
    "getValueElement",
    "querySelector",
    "innerHTML",
    "self",
    "e",
    "_applyValueToDom",
    "appendChild",
    "document",
    "createTextNode",
    "innerText"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* BasicUpdate.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This role provides the basic update methods\n *\n */\nqx.Mixin.define(\"cv.ui.common.BasicUpdate\", {\n  include: cv.ui.common.HasAddress,\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    /**\n     * @type {var} the incoming value after transformation, mapping and formatting\n     */\n    value: {\n      nullable: true,\n      init: null,\n      event: \"changeValue\"\n    },\n\n    /**\n     * @type {var} the incoming value after transformation\n     */\n    basicValue: {\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * Format to apply to incoming values\n     */\n    format: {\n      check: \"String\",\n      init: \"\",\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Apply the given mapping to the value\n     *\n     * @param value {var} value to be mapped\n     * @param mappingName {String} mapping name, if not set the <code>mapping</code> property value is used\n     * @return {var} the mapped value\n     */\n    applyMapping: function (value, mappingName) {\n      if (mappingName && cv.Config.hasMapping(mappingName)) {\n        var mapping = cv.Config.getMapping(mappingName);\n\n        var ret = value;\n        if (mapping.formula) {\n          ret = mapping.formula(ret);\n        }\n\n        var mapValue = function (v) {\n          if (v === null && mapping.NULL) {\n            return mapping.NULL;\n          } else if (mapping[v]) {\n            return mapping[v];\n          } else if (mapping.range) {\n            var valueFloat = parseFloat(v);\n            var range = mapping.range;\n            for (var min in range) {\n              if (min > valueFloat) { continue; }\n              if (range[min][0] < valueFloat) { continue; } // check max\n              return range[min][1];\n            }\n          } else if (mapping[\"*\"]) {\n            // catchall mapping\n            return mapping[\"*\"];\n          }\n          return v; // pass through when nothing was found\n        };\n        ret = mapValue(ret);\n        if (!ret && mapping.defaultValue) {\n          ret = mapValue(mapping.defaultValue);\n        }\n        if (ret !== undefined) {\n          return ret;\n        }\n      }\n      return value;\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    formatValueCache : null,\n    /**\n     * Decode the given data with the addresses transform\n     *\n     * @param address {String} KNX-GA or openHAB-item name\n     * @param data {var} value to be decoded\n     * @return {var}\n     */\n    applyTransform: function (address, data) {\n      if (address) {\n        let transform = this.getAddress()[address].transform;\n        // transform the raw value to a JavaScript type\n        return cv.Transform.decode(transform, data);\n      }\n      return data;\n    },\n\n    /**\n     * Apply the given mapping to the value\n     *\n     * @param value {var} value to be mapped\n     * @param mappingName {String?} mapping name, if not set the <code>mapping</code> property value is used\n     * @return {var} the mapped value\n     */\n    applyMapping: function (value, mappingName) {\n      if (!mappingName) {\n        mappingName = this.getMapping();\n      }\n      return cv.ui.common.BasicUpdate.applyMapping(value, mappingName);\n    },\n\n    /**\n     * Look up the entry for <code>value</code> in the mapping <code>this_map</code> and\n     * return the next value in the list (including wrap around).\n     *\n     * @param value {var} value to look up\n     * @param this_map {String} mapping name\n     * @return {var} the next mapped value\n     */\n    getNextMappedValue: function (value, this_map) {\n      if (this_map && cv.Config.hasMapping(this_map)) {\n        var keys = Object.keys(cv.Config.getMapping(this_map));\n        return keys[(keys.indexOf(\"\" + value) + 1) % keys.length];\n      }\n      return value;\n    },\n\n    /**\n     * Format the given value according to the defined format.\n     * If no format is defined the value will not be changed.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param value {var} value to be formatted\n     * @return {var} the formatted value\n     */\n    applyFormat: function (address, value) {\n      if (this.getFormat()) {\n        if (!this.formatValueCache) {\n          this.formatValueCache = [this.getFormat()];\n        }\n\n        var argListPos = (this.getAddress() && this.getAddress()[address]) ? this.getAddress()[address].formatPos : 1;\n\n        this.formatValueCache[argListPos] = value;\n\n        return cv.util.String.sprintf.apply(this, this.formatValueCache);\n      }\n      return value;\n    },\n\n    /**\n     * The default value handling for most of the widgets.\n     * This method applies the transform, mapping, format and styling to the value.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param data {var} value to be processes\n     * @return {var} the processed value\n     */\n    defaultValueHandling: function (address, data) {\n\n      // #1: transform the raw value to a JavaScript type\n      var value = this.applyTransform(address, data);\n\n      // store it to be able to suppress sending of unchanged data\n      if (value !== undefined) {\n        this.setBasicValue(value);\n      }\n\n      // #2: map it to a value the user wants to see\n      value = this.applyMapping(value);\n\n      // #3: format it in a way the user understands the value\n      if (value !== undefined) {\n        value = this.applyFormat(address, value);\n        this.setValue(value);\n      }\n\n      if (value && value.constructor === Date) {\n        switch (this.getAddress()[address].transform) // special case for KNX\n        {\n          case 'DPT:10.001':\n            value = value.toLocaleTimeString();\n            break;\n          case 'DPT:11.001':\n            value = value.toLocaleDateString();\n            break;\n          case 'OH:datetime':\n            value = value.toLocaleDateString();\n            break;\n          case 'OH:time':\n            value = value.toLocaleTimeString();\n            break;\n        }\n      }\n\n      this.applyStyling(this.getBasicValue());\n      // #4 will happen outside: style the value to be pretty\n      return value;\n    },\n\n    /**\n     * Method to handle all special cases for the value. The might come from\n     * the mapping where it can be quite complex as it can contain icons.\n     * value: the value that will be inserted\n     * modifyFn: callback function that modifies the DOM\n     *\n     * @param value {var}\n     * @param modifyFn {Function}\n     */\n    defaultValue2DOM: function (value, modifyFn) {\n      var element;\n      if (\n        ('string' === typeof value) ||\n        ('number' === typeof value) ||\n        (value instanceof Uint8Array) ||\n        (value instanceof Map)\n      ) {\n        modifyFn(value);\n      }\n      else if ('function' === typeof value) {\n        // thisValue(valueElement);\n        this.error('typeof value === function - special case not handled anymore!');\n      }\n      else if (!Array.isArray(value)) {\n        element = value.cloneNode();\n        if (value.getContext) {\n          cv.util.IconTools.fillRecoloredIcon(element);\n        }\n        modifyFn(element);\n      } else {\n        for (var i = 0; i < value.length; i++) {\n          var thisValue = value[i];\n          if (!thisValue) { continue; }\n\n          if (('string' === typeof thisValue) || ('number' === typeof thisValue)) {\n            modifyFn(thisValue);\n          }\n          else if ('function' === typeof thisValue) {\n            // thisValue(valueElement);\n            this.error('typeof value === function - special case not handled anymore!');\n          }\n          else {\n            element = thisValue.cloneNode();\n            if (thisValue.getContext) {\n              cv.util.IconTools.fillRecoloredIcon(element);\n            }\n            modifyFn(element);\n          }\n        }\n      }\n    },\n\n    /**\n     * Default update function, processes the incoming value and applies it to the Dom value element.\n     *\n     * @param ga {String} KNX-GA or openHAB item name\n     * @param data {var} the raw value from the bus\n     * @param passedElement {Element?} the element to update, if not given {@link getDomElement()} is used\n     * @return {var} value\n     */\n    defaultUpdate: function (ga, data, passedElement) {\n      var element = passedElement || this.getDomElement();\n      var value = this.defaultValueHandling(ga, data);\n\n      // TODO: check if this is the right place for this\n      // might be if the styling removes the align class\n      if (this.getAlign()) {\n        element.classList.add(this.getAlign());\n      }\n      var valueElement = this.getValueElement ? this.getValueElement() : element.querySelector('.value');\n      valueElement.innerHTML = '';\n      if (undefined !== value) {\n        var self = this;\n        this.defaultValue2DOM(value, function(e){self._applyValueToDom(valueElement, e);});\n      }\n      else {\n        valueElement.appendChild(document.createTextNode('-'));\n      }\n      return value;\n    },\n\n    /**\n     * Internal function which updates the DOM element with the given value\n     * @param valueElement {Element} element to update\n     * @param e {var} value to add to the element\n     */\n    _applyValueToDom: function(valueElement, e) {\n      if (typeof e === 'number') {\n        valueElement.innerText = e;\n      } else {\n        valueElement.innerHTML += e;\n      }\n    }\n  }\n});"
  ]
}