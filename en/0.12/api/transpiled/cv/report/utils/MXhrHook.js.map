{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/report/utils/MXhrHook.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "addListener",
    "_onPhaseChange",
    "statics",
    "PENDING",
    "members",
    "__sendTime",
    "getRequestHash",
    "cv",
    "ConfigCache",
    "hashCode",
    "report",
    "Record",
    "normalizeUrl",
    "_getConfiguredUrl",
    "getMethod",
    "JSON",
    "stringify",
    "getRequestData",
    "ev",
    "hash",
    "delay",
    "url",
    "getData",
    "Date",
    "now",
    "record",
    "XHR",
    "method",
    "headers",
    "_getAllRequestHeaders",
    "requestData",
    "utils",
    "MXhrHook",
    "push",
    "error",
    "getAllResponseHeaders",
    "trim",
    "split",
    "forEach",
    "entry",
    "parts",
    "getStatus",
    "status",
    "body",
    "getTransport",
    "responseText",
    "phase",
    "shift",
    "length"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* MXhrHook.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This mixin patches {qx.io.request.Xhr} to get noticed about every XHR request to record its response.\n */\nqx.Mixin.define('cv.report.utils.MXhrHook', {\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function() {\n    this.addListener('changePhase', this._onPhaseChange, this);\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    PENDING: {}\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __sendTime: null,\n\n    /**\n     * Calculate Hash code for current request\n     */\n    getRequestHash: function() {\n      return cv.ConfigCache.hashCode(cv.report.Record.normalizeUrl(this._getConfiguredUrl()) +\n        this.getMethod()+JSON.stringify(this.getRequestData()));\n    },\n\n    _onPhaseChange: function(ev) {\n      const hash = this.getRequestHash();\n      let delay;\n      const url = cv.report.Record.normalizeUrl(this._getConfiguredUrl());\n\n      if (ev.getData() === 'opened') {\n        this.__sendTime = Date.now();\n        // calculate Hash value for request\n        cv.report.Record.record(cv.report.Record.XHR, 'request', {\n          url: url,\n          method: this.getMethod(),\n          headers: this._getAllRequestHeaders(),\n          requestData: this.getRequestData(),\n          hash: hash\n        });\n        if (!cv.report.utils.MXhrHook.PENDING[hash]) {\n          cv.report.utils.MXhrHook.PENDING[hash] = [];\n        }\n        cv.report.utils.MXhrHook.PENDING[hash].push(url);\n      } else if (ev.getData() === 'load') {\n        if (!this.__sendTime) {\n          this.error('response received without sendTime set. Not possible to calculate correct delay');\n        }\n        // response has been received (successful or not) -> log it\n        const headers = {};\n        this.getAllResponseHeaders().trim().split('\\r\\n').forEach(function(entry) {\n          const parts = entry.split(': ');\n          headers[parts[0]] = parts[1];\n        });\n        delay = Date.now() - this.__sendTime;\n\n        // log the trigger that triggers the server responses\n\n        // do not log 404 answers as the fake server sends them automatically\n        // end the logged ones break the replay for some reason\n        if (this.getStatus() !== 404) {\n          cv.report.Record.record(cv.report.Record.XHR, 'response', {\n            url: url,\n            method: this.getMethod(),\n            status: this.getStatus(),\n            delay: delay,\n            headers: headers,\n            body: this.getTransport().responseText,\n            hash: hash,\n            phase: 'load'\n          });\n        }\n        this.__sendTime = null;\n\n        // delete pending request\n        cv.report.utils.MXhrHook.PENDING[hash].shift();\n        if (cv.report.utils.MXhrHook.PENDING[hash].length === 0) {\n          delete cv.report.utils.MXhrHook.PENDING[hash];\n        }\n      } else if (ev.getData() === 'abort') {\n        delay = Date.now() - this.__sendTime;\n\n        // request aborted, maybe by watchdog\n        cv.report.Record.record(cv.report.Record.XHR, 'response', {\n          url: url,\n          delay: delay,\n          hash: hash,\n          phase: 'abort'\n        });\n\n        // delete pending request\n        cv.report.utils.MXhrHook.PENDING[hash].shift();\n        if (cv.report.utils.MXhrHook.PENDING[hash].length === 0) {\n          delete cv.report.utils.MXhrHook.PENDING[hash];\n        }\n      }\n    }\n  }\n});\n"
  ]
}