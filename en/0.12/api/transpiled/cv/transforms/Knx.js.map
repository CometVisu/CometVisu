{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/transforms/Knx.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "name",
    "encode",
    "phy",
    "bus",
    "raw",
    "decode",
    "hex",
    "parseInt",
    "link",
    "parseFloat",
    "up",
    "stepCode",
    "Math",
    "floor",
    "log2",
    "abs",
    "val",
    "toString",
    "toUpperCase",
    "charCodeAt",
    "padStart",
    "String",
    "fromCharCode",
    "unit",
    "range",
    "min",
    "max",
    "clip",
    "undefined",
    "isNaN",
    "sign",
    "mant",
    "round",
    "exp",
    "NaN",
    "bin1",
    "substr",
    "bin2",
    "getDay",
    "getHours",
    "getMinutes",
    "getSeconds",
    "date",
    "Date",
    "setHours",
    "setMinutes",
    "setSeconds",
    "day",
    "dayShift",
    "setDate",
    "getDate",
    "year",
    "pow",
    "lname",
    "i",
    "c",
    "chars",
    "length",
    "period",
    "get",
    "percent",
    "join",
    "Map",
    "r",
    "g",
    "b",
    "cValid",
    "has",
    "bValid",
    "x",
    "y",
    "valid",
    "rValid",
    "gValid",
    "wValid",
    "w",
    "transforms",
    "Knx"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Knx.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.transforms.Knx', {\n  type: \"static\",\n\n  defer: function () {\n\n    cv.Transform.addTransform('DPT', {\n      /**\n       * This class defines the default transforms:\n       *   encode: transform JavaScript to bus value\n       *   decode: transform bus to JavaScript value\n       */\n      '1.001': {\n        name: 'DPT_Switch',\n        encode: function (phy) {\n          phy = +phy; // cast to number\n          return {\n            bus: phy ? '81' : '80',\n            raw: phy ? '01' : '00'\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '1': {\n        link: '1.001'\n      },\n      '1.002': {\n        link: '1.001'\n      },\n      '1.003': {\n        link: '1.001'\n      },\n      '1.008': {\n        link: '1.001'\n      },\n      '1.009': {\n        link: '1.001'\n      },\n\n      '2': {\n        link: '1.001'\n      },\n\n      '3.007': {\n        name: 'DPT_Control_Dimming',\n        encode: function (phy) {\n          phy = parseFloat(phy);\n          if( phy < -100 || (phy > -1 && phy <= 0) ) {\n            return { bus: '80', raw: '00' }; // down: stop\n          }\n\n          if( phy > 100 || (phy > 0 && phy < 1) ) {\n            return { bus: '88', raw: '08' }; // up: stop\n          }\n\n          let\n            up = phy > 0,\n            stepCode = 7-Math.floor(Math.log2(Math.abs(phy))),\n            val = (stepCode | (up * 0b1000)).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          let\n            val = parseInt(hex, 16),\n            up = (val & 0b1000) > 0;\n          return (up*2-1) * 100/(2**((val& 0b111)-1));\n        }\n      },\n      '3.008': {\n        name: 'DPT_Control_Blinds',\n        link: '3.007'\n      },\n      '3': {\n        link: '3.007'\n      },\n\n      '4.001': {\n        name: 'DPT_Char_ASCII',\n        encode: function (phy) {\n          var val = phy.charCodeAt(0).toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        }\n      },\n      '4': {\n        link: '4.001'\n      },\n\n      '5.001': {\n        name: 'DPT_Scaling',\n        unit: '%',\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n        encode: function (phy) {\n          var val = parseInt(phy * 255 / 100).toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) * 100 / 255.0;\n        }\n      },\n      '5.003': {\n        name: 'DPT_Angle',\n        unit: '°',\n        range: {\n          min: 0.0,\n          max: 360.0\n        },\n        encode: function (phy) {\n          var val = parseInt(phy * 255 / 360).toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) * 360 / 255.0;\n        }\n      },\n      '5.004': {\n        name: 'DPT_Percent_U8',\n        unit: '%',\n        range: {\n          min: 0.0,\n          max: 255.0\n        },\n        encode: function (phy) {\n          var val = parseInt(cv.Transform.clip(0, phy, 255)).toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '5.010': {\n        link: '5.004',\n        name: 'DPT_Value_1_Ucount',\n        unit: '-'\n      },\n      '5': {\n        link: '5.004',\n        name: '8-Bit Unsigned Value'\n      },\n\n      '6.001': {\n        name: 'DPT_Percent_V8',\n        encode: function (phy) {\n          phy = parseInt(cv.Transform.clip(-128, phy, 127));\n          var val = phy < 0 ? phy + 256 : phy;\n          val = val.toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          var val = parseInt(hex, 16);\n          return val > 127 ? (val - 256) : val;\n        }\n      },\n      '6': {\n        link: '6.001'\n      },\n\n      '7.001': {\n        name: 'DPT_Value_2_Ucount',\n        encode: function (phy) {\n          var val = parseInt(phy).toString(16).padStart(4,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '7.600': {\n        name: 'DPT_Absolute_Colour_Temperature',\n        unit: 'K',\n        link: '7.001'\n      },\n      '7': {\n        link: '7.001'\n      },\n\n      '8.001': {\n        name: 'DPT_Value_2_Count',\n        encode: function (phy) {\n          var val = parseInt(phy);\n          val = val < 0 ? val + 65536 : val;\n          val = val.toString(16).padStart(4,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          var val = parseInt(hex, 16);\n          return val > 32767 ? (val - 65536) : val;\n        }\n      },\n      '8': {\n        link: '8.001'\n      },\n\n      '9.001': {\n        name: 'DPT_Value_Temp',\n        encode: function (phy) {\n          if (undefined === phy || isNaN(phy)) { return '7fff'; }\n          var sign = phy < 0 ? 0x8000 : 0;\n          var mant = Math.round(phy * 100.0);\n          var exp = 0;\n          while (Math.abs(mant) > 2047) {\n            mant >>= 1;\n            exp++;\n          }\n          var val = ( sign | (exp << 11) | (mant & 0x07ff) ).toString(16).padStart(4,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          if (0x7fff === parseInt(hex, 16)) { return NaN; }\n          var bin1 = parseInt(hex.substr(0, 2), 16);\n          var bin2 = parseInt(hex.substr(2, 2), 16);\n          var sign = parseInt(bin1 & 0x80);\n          var exp = parseInt(bin1 & 0x78) >> 3;\n          var mant = parseInt(((bin1 & 0x7) << 8) | bin2);\n          if (sign !== 0) {\n            mant = -(~(mant - 1) & 0x7ff);\n          }\n          return (1 << exp) * 0.01 * mant;\n        }\n      },\n      '9.004': {\n        link: '9.001'\n      },\n      '9.007': {\n        link: '9.001'\n      },\n      '9.008': {\n        link: '9.001'\n      },\n      '9.020': {\n        link: '9.001'\n      },\n      '9.021': {\n        link: '9.001'\n      },\n      '9': {\n        link: '9.001'\n      },\n\n      '10.001': {\n        name: 'DPT_TimeOfDay',\n        encode: function (phy) {\n          var val = ((phy.getDay() << 5) + phy.getHours()).toString(16).padStart(2,'0');\n          val += phy.getMinutes().toString(16).padStart(2,'0');\n          val += phy.getSeconds().toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          var date = new Date(); // assume today\n          date.setHours(parseInt(hex.substr(0, 2), 16) & 0x1F);\n          date.setMinutes(parseInt(hex.substr(2, 2), 16));\n          date.setSeconds(parseInt(hex.substr(4, 2), 16));\n          // as KNX thinks the day of the week belongs to the time, but JavaScript\n          // doesn't, tweak the date till it fits...\n          var day = (parseInt(hex.substr(0, 2), 16) & 0xE0) >> 5;\n          if (day > 0) {\n            var dayShift = (day - date.getDay()) % 7;\n            date.setDate(date.getDate() + dayShift);\n          }\n          return date;\n        }\n      },\n\n      '11.001': {\n        name: 'DPT_Date',\n        encode: function () {\n          // FIXME\n        },\n        decode: function (hex) {\n          var year = parseInt(hex.substr(4, 2), 16) & 0x7F;\n          return new Date(year < 90 ? year + 2000 : year + 1900, //1990 - 2089\n            (parseInt(hex.substr(2, 2), 16) & 0x0F) - 1,\n            parseInt(hex.substr(0, 2), 16) & 0x1F);\n        }\n      },\n\n      '12.001': {\n        name: 'DPT_Value_4_Ucount',\n        encode: function (phy) {\n          var val = parseInt(phy).toString(16).padStart(8,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '12': {\n        link: '12.001'\n      },\n\n      '13.001': {\n        name: 'DPT_Value_4_Count',\n        encode: function (phy) {\n          var val = parseInt(phy);\n          val = val < 0 ? val + 4294967296 : val;\n          val = val.toString(16).padStart(8,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          var val = parseInt(hex, 16);\n          return val > 2147483647 ? (val - 4294967296) : val;\n        }\n      },\n      '13': {\n        link: '13.001'\n      },\n\n      '14.001': {\n        name: 'DPT_Value_Acceleration_Angular',\n        encode: function () {\n          //FIXME: unimplemented (jspack?)\n        },\n        decode: function (hex) {\n          var val = parseInt(hex, 16);\n          var sign = (val & 0x80000000) ? -1 : 1;\n          var exp = ((val & 0x7F800000) >> 23) - 127;\n          var mant = (val & 0x007FFFFF | 0x00800000);\n          return sign * Math.pow(2, exp) * ( mant / (1 << 23));\n        }\n      },\n      '14': {\n        link: '14.001',\n        name: '4 byte float',\n        lname: {\n          'de': '4 Byte Gleitkommazahl'\n        },\n        unit: '-'\n      },\n      '16.001': {\n        name: 'DPT_String_8859_1',\n        lname: {\n          'de': '14 Byte Text ISO-8859-1'\n        },\n        encode: function (phy) {\n          var val = '';\n          phy += ''; // force datatype String\n          for (var i = 0; i < 14; i++) {\n            var c = phy.charCodeAt(i);\n            val += c ? ( (c < 16 ? '0' : '') + c.toString(16) ) : '00';\n          }\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          var val = \"\";\n          var chars;\n          for (var i = 0; i < 28; i = i + 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n      '16.000': {\n        link: '16.001',\n        name: 'DPT_String_ASCII',\n        lname: {\n          'de': '14 Byte Text ASCII'\n        },\n        unit: '-'\n      },\n      '16': {\n        link: '16.001',\n        name: 'DPT_String_ASCII',\n        lname: {\n          'de': '14 Byte Text ASCII'\n        },\n        unit: '-'\n      },\n      '17.001': {\n        link: '5.004',\n        name: 'DPT_SceneNumber',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n      '17': {\n        link: '5.004',\n        name: 'DPT_SceneNumber',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n      '18.001': {\n        name: 'DPT_SceneControl',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-',\n        range: {\n          min: 1.0,\n          max: 64.0+128\n        },\n        encode: function (phy) {\n          var val = parseInt(cv.Transform.clip(0, phy - 1, 63+128)).toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n      '18': {\n        link: '18.001',\n        name: 'DPT_SceneControl',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n      '26.001': {\n        name: 'DPT_SceneInfo',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-',\n        range: {\n          min: 1.0,\n          max: 64.0+64\n        },\n        encode: function (phy) {\n          var val = parseInt(cv.Transform.clip(0, phy - 1, 63+64)).toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n      '26': {\n        link: '26.001',\n        name: 'DPT_SceneInfo',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n       '20.102': {\n        name: 'DPT_HVACMode',\n        lname: {\n          'de': 'KONNEX Betriebsart'\n        },\n        unit: '-',\n        range: {\n          'enum': ['auto', 'comfort', 'standby', 'economy', 'building_protection']\n        },\n        encode: function (phy) {\n          var val;\n          switch (phy) {\n            case 1:\n            case 'comfort':\n              val = 1;\n              break;\n            case 2:\n            case 'standby':\n              val = 2;\n              break;\n            case 3:\n            case 'economy':\n              val = 3;\n              break;\n            case 4:\n            case 'building_protection':\n              val = 4;\n              break;\n            default: // actually \"case 0:\" / \"auto\"\n              val = 0;\n          }\n          val = val.toString(16).padStart(2,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          switch (parseInt(hex, 16)) {\n            case 1:\n              return 'comfort';\n            case 2:\n              return 'standby';\n            case 3:\n              return 'economy';\n            case 4:\n              return 'building_protection';\n            default: // actually \"case 0:\"\n              return 'auto';\n          }\n        }\n      },\n      /* DPT24.001 is probably not fully correct as it can also hold\n       multiple strings sep. by \\x00 as array according to 3.7.2 DPT v1.07\n       but there is no other reference, even not in ETS4\n       so this gives basic support for now, there is also missing a max-length\n       check in encode.\n       In wiregate DPT24.001 has the same basic support with PL38\n       */\n      '24.001': {\n        name: 'DPT_VarString_8859_1',\n        lname: {\n          'de': 'variable String ISO-8859-1'\n        },\n        encode: function (phy) {\n          var val = '';\n          for (var i = 0; i < phy.length; i++) {\n            var c = phy.charCodeAt(i);\n            val += c ? ( (c < 16 ? '0' : '') + c.toString(16) ) : '00';\n          }\n          /* terminating \\x00 */\n          val += '00';\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          var val = \"\";\n          var chars;\n          for (var i = 0; i < hex.length; i = i + 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n      '225.001' : {\n        name  : 'DPT_ScalingSpeed',\n        encode: function( phy ){\n          let\n            period = phy.get('period') || 0,\n            percent = phy.get('percent') || 0,\n            val = [\n              parseInt(period).toString(16).padStart(4, '0'),\n              parseInt(percent * 255 / 100).toString(16).padStart(2, '0')\n            ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function( hex ){\n          return new Map([\n            ['period', parseInt(hex.substr(0, 4), 16)],\n            ['percent', parseInt(hex.substr(4, 2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n      '225' : {\n        name: 'DPT_U24',\n        unit: '-',\n        range: {\n          min: 0x0,\n          max: 0xfff\n        },\n        encode: function (phy) {\n          var val = parseInt(cv.Transform.clip(0, phy, 0xffffff)).toString(16).padStart(6,'0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '232.600' : {\n        name  : 'DPT_Colour_RGB',\n        encode: function( phy ){\n          if( !(phy instanceof Map) ) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          let\n            r = phy.get('r') || 0,\n            g = phy.get('g') || 0,\n            b = phy.get('b') || 0,\n            val = [\n            parseInt(r * 255 / 100).toString(16).padStart(2, '0'),\n            parseInt(g * 255 / 100).toString(16).padStart(2, '0'),\n            parseInt(b * 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function( hex ){\n          return new Map([\n            ['r', parseInt(hex.substr(0,2), 16) * 100 / 255.0],\n            ['g', parseInt(hex.substr(2,2), 16) * 100 / 255.0],\n            ['b', parseInt(hex.substr(4,2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n      '232' : {\n        name  : 'DPT_3U8',\n        encode: function( phy ){\n          let val = [\n            parseInt(phy[0] * 255 / 100).toString(16).padStart(2, '0'),\n            parseInt(phy[1] * 255 / 100).toString(16).padStart(2, '0'),\n            parseInt(phy[2] * 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function( hex ){\n          return [\n            parseInt(hex.substr(0,2), 16) * 100 / 255.0,\n            parseInt(hex.substr(2,2), 16) * 100 / 255.0,\n            parseInt(hex.substr(4,2), 16) * 100 / 255.0\n          ];\n        }\n      },\n      '242.600' : {\n        name  : 'DPT_Colour_xyY',\n        encode: function( phy ){\n          if( !(phy instanceof Map) ) {\n            return { bus: '80000000000000', raw: '000000000000' };\n          }\n\n          let\n            cValid = phy.has('x') && phy.has('y') && (phy.get('cValid') || false),\n            bValid = phy.has('b') && (phy.get('bValid') || false),\n            x = phy.get('x') || 0,\n            y = phy.get('y') || 0,\n            b = phy.get('b') || 0,\n            val = [\n              parseInt(x * 65535).toString(16).padStart(4, '0'),\n              parseInt(y * 65535).toString(16).padStart(4, '0'),\n              parseInt(b * 255 / 100).toString(16).padStart(2, '0'),\n              (cValid*2 + bValid*1).toString(16).padStart(2, '0')\n            ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function( hex ){\n          let valid = parseInt( hex[11], 16 );\n          return new Map([\n            ['x', parseInt(hex.substr(0, 4), 16) / 65535.0],\n            ['y', parseInt(hex.substr(4, 4), 16) / 65535.0],\n            ['b', parseInt(hex.substr(8, 2), 16) * 100 / 255.0],\n            ['cValid', (valid & 2) > 0],\n            ['bValid', (valid & 1) > 0]\n          ]);\n        }\n      },\n      '251.600' : {\n        name  : 'DPT_Colour_RGBW',\n        encode: function( phy ){\n          if( !(phy instanceof Map) ) {\n            return { bus: '80000000000000', raw: '000000000000' };\n          }\n\n          let\n            rValid = phy.has('r') && (phy.get('rValid') || false),\n            gValid = phy.has('g') && (phy.get('gValid') || false),\n            bValid = phy.has('b') && (phy.get('bValid') || false),\n            wValid = phy.has('w') && (phy.get('wValid') || false),\n            r = phy.get('r') || 0,\n            g = phy.get('g') || 0,\n            b = phy.get('b') || 0,\n            w = phy.get('w') || 0,\n            val = [\n              parseInt(r * 255 / 100).toString(16).padStart(2, '0'),\n              parseInt(g * 255 / 100).toString(16).padStart(2, '0'),\n              parseInt(b * 255 / 100).toString(16).padStart(2, '0'),\n              parseInt(w * 255 / 100).toString(16).padStart(2, '0'),\n              '00',\n              (rValid*8 + gValid*4 + bValid*2 + wValid*1).toString(16).padStart(2, '0')\n            ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function( hex ) {\n          let valid = parseInt( hex[11], 16);\n          return new Map([\n            ['r', parseInt(hex.substr(0, 2), 16) * 100 / 255.0],\n            ['g', parseInt(hex.substr(2, 2), 16) * 100 / 255.0],\n            ['b', parseInt(hex.substr(4, 2), 16) * 100 / 255.0],\n            ['w', parseInt(hex.substr(6, 2), 16) * 100 / 255.0],\n            ['rValid', (valid & 8) > 0],\n            ['gValid', (valid & 4) > 0],\n            ['bValid', (valid & 2) > 0],\n            ['wValid', (valid & 1) > 0]\n          ]);\n        }\n      },\n      /* 9 Zeilen:\n      },\n      '.001' : {\n      name  : '',\n      encode: function( phy ){\n      return phy;\n      },\n      decode: function( hex ){\n      return hex;\n      }\n      }\n      /*/ /////////////////////////////////////////////////\n      /* 3 Zeilen:\n      }\n      '': {\n      link  : '.001'\n      },\n      */\n      'temp dummy': {link: '1.001'}\n    });\n  }\n});"
  ]
}