{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/transforms/Knx.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "name",
    "encode",
    "phy",
    "bus",
    "raw",
    "decode",
    "hex",
    "parseInt",
    "link",
    "up",
    "stepCode",
    "Math",
    "floor",
    "log2",
    "abs",
    "val",
    "toString",
    "toUpperCase",
    "charCodeAt",
    "padStart",
    "String",
    "fromCharCode",
    "unit",
    "range",
    "min",
    "max",
    "clipInt",
    "undefined",
    "isNaN",
    "sign",
    "mant",
    "round",
    "exp",
    "NaN",
    "bin1",
    "substr",
    "bin2",
    "getDay",
    "getHours",
    "getMinutes",
    "getSeconds",
    "date",
    "Date",
    "setHours",
    "setMinutes",
    "setSeconds",
    "day",
    "dayShift",
    "setDate",
    "getDate",
    "year",
    "pow",
    "lname",
    "i",
    "c",
    "chars",
    "length",
    "period",
    "get",
    "percent",
    "join",
    "Map",
    "r",
    "g",
    "b",
    "h",
    "s",
    "v",
    "isFinite",
    "cValid",
    "has",
    "Number",
    "YValid",
    "x",
    "y",
    "Y",
    "valid",
    "rValid",
    "gValid",
    "bValid",
    "wValid",
    "w",
    "transforms",
    "Knx"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Knx.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.transforms.Knx', {\n  type: 'static',\n\n  defer: function () {\n    cv.Transform.addTransform('DPT', {\n      /**\n       * This class defines the default transforms:\n       *   encode: transform JavaScript to bus value\n       *   decode: transform bus to JavaScript value\n       */\n      '1.001': {\n        name: 'DPT_Switch',\n        encode: function (phy) {\n          phy = +phy; // cast to number\n          return {\n            bus: phy ? '81' : '80',\n            raw: phy ? '01' : '00'\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '1': {\n        link: '1.001'\n      },\n      '1.002': {\n        link: '1.001'\n      },\n      '1.003': {\n        link: '1.001'\n      },\n      '1.008': {\n        link: '1.001'\n      },\n      '1.009': {\n        link: '1.001'\n      },\n\n      '2': {\n        link: '1.001'\n      },\n\n      '3.007': {\n        name: 'DPT_Control_Dimming',\n        encode: function (phy) {\n          phy = +phy; // enforce number\n          if (phy < -100 || (phy > -1 && phy <= 0)) {\n            return { bus: '80', raw: '00' }; // down: stop\n          }\n\n          if (phy > 100 || (phy > 0 && phy < 1)) {\n            return { bus: '88', raw: '08' }; // up: stop\n          }\n\n          let\n            up = phy > 0;\n            let stepCode = 7-Math.floor(Math.log2(Math.abs(phy)));\n            let val = (stepCode | (up * 0b1000)).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          let\n            val = parseInt(hex, 16);\n            let up = (val & 0b1000) > 0;\n          return (up*2-1) * 100/(2**((val& 0b111)-1));\n        }\n      },\n      '3.008': {\n        name: 'DPT_Control_Blinds',\n        link: '3.007'\n      },\n      '3': {\n        link: '3.007'\n      },\n\n      '4.001': {\n        name: 'DPT_Char_ASCII',\n        encode: function (phy) {\n          const val = (''+phy).charCodeAt(0).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        }\n      },\n      '4': {\n        link: '4.001'\n      },\n\n      '5.001': {\n        name: 'DPT_Scaling',\n        unit: '%',\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 100, 255 / 100).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) * 100 / 255.0;\n        }\n      },\n      '5.003': {\n        name: 'DPT_Angle',\n        unit: '°',\n        range: {\n          min: 0.0,\n          max: 360.0\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 360, 255 / 360).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) * 360 / 255.0;\n        }\n      },\n      '5.004': {\n        name: 'DPT_Percent_U8',\n        unit: '%',\n        range: {\n          min: 0.0,\n          max: 255.0\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 255).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '5.010': {\n        link: '5.004',\n        name: 'DPT_Value_1_Ucount',\n        unit: '-'\n      },\n      '5': {\n        link: '5.004',\n        name: '8-Bit Unsigned Value'\n      },\n\n      '6.001': {\n        name: 'DPT_Percent_V8',\n        encode: function (phy) {\n          phy = cv.Transform.clipInt(-128, phy, 127);\n          let val = phy < 0 ? phy + 256 : phy;\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          return val > 127 ? (val - 256) : val;\n        }\n      },\n      '6': {\n        link: '6.001'\n      },\n\n      '7.001': {\n        name: 'DPT_Value_2_Ucount',\n        range: {\n          min: 0,\n          max: 0xffff\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffff).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '7.600': {\n        name: 'DPT_Absolute_Colour_Temperature',\n        unit: 'K',\n        link: '7.001'\n      },\n      '7': {\n        link: '7.001'\n      },\n\n      '8.001': {\n        name: 'DPT_Value_2_Count',\n        range: {\n          min: -0x8000,\n          max: 0x7fff\n        },\n        encode: function (phy) {\n          let val = cv.Transform.clipInt(-0x8000, phy, 0x7fff);\n          val = val < 0 ? val + 65536 : val;\n          val = val.toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          return val > 32767 ? (val - 65536) : val;\n        }\n      },\n      '8': {\n        link: '8.001'\n      },\n\n      '9.001': {\n        name: 'DPT_Value_Temp',\n        encode: function (phy) {\n          if (undefined === phy || isNaN(phy)) {\n            return '7fff';\n          }\n          const sign = (+phy) < 0 ? 0x8000 : 0;\n          let mant = Math.round((+phy) * 100.0);\n          let exp = 0;\n          while (Math.abs(mant) > 2047) {\n            mant >>= 1;\n            exp++;\n          }\n          const val = (sign | (exp << 11) | (mant & 0x07ff)).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          if (parseInt(hex, 16) === 0x7fff) {\n            return NaN;\n          }\n          const bin1 = parseInt(hex.substr(0, 2), 16);\n          const bin2 = parseInt(hex.substr(2, 2), 16);\n          const sign = parseInt(bin1 & 0x80);\n          const exp = parseInt(bin1 & 0x78) >> 3;\n          let mant = parseInt(((bin1 & 0x7) << 8) | bin2);\n          if (sign !== 0) {\n            mant = -(~(mant - 1) & 0x7ff);\n          }\n          return (1 << exp) * 0.01 * mant;\n        }\n      },\n      '9.004': {\n        link: '9.001'\n      },\n      '9.007': {\n        link: '9.001'\n      },\n      '9.008': {\n        link: '9.001'\n      },\n      '9.020': {\n        link: '9.001'\n      },\n      '9.021': {\n        link: '9.001'\n      },\n      '9': {\n        link: '9.001'\n      },\n\n      '10.001': {\n        name: 'DPT_TimeOfDay',\n        encode: function (phy) {\n          let val = ((phy.getDay() << 5) + phy.getHours()).toString(16).padStart(2, '0');\n          val += phy.getMinutes().toString(16).padStart(2, '0');\n          val += phy.getSeconds().toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const date = new Date(); // assume today\n          date.setHours(parseInt(hex.substr(0, 2), 16) & 0x1F);\n          date.setMinutes(parseInt(hex.substr(2, 2), 16));\n          date.setSeconds(parseInt(hex.substr(4, 2), 16));\n          // as KNX thinks the day of the week belongs to the time, but JavaScript\n          // doesn't, tweak the date till it fits...\n          const day = (parseInt(hex.substr(0, 2), 16) & 0xE0) >> 5;\n          if (day > 0) {\n            const dayShift = (day - date.getDay()) % 7;\n            date.setDate(date.getDate() + dayShift);\n          }\n          return date;\n        }\n      },\n\n      '11.001': {\n        name: 'DPT_Date',\n        encode: function () {\n          // FIXME\n        },\n        decode: function (hex) {\n          const year = parseInt(hex.substr(4, 2), 16) & 0x7F;\n          return new Date(year < 90 ? year + 2000 : year + 1900, //1990 - 2089\n            (parseInt(hex.substr(2, 2), 16) & 0x0F) - 1,\n            parseInt(hex.substr(0, 2), 16) & 0x1F);\n        }\n      },\n\n      '12.001': {\n        name: 'DPT_Value_4_Ucount',\n        range: {\n          min: 0,\n          max: 0xffffffff\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffffff).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '12': {\n        link: '12.001'\n      },\n\n      '13.001': {\n        name: 'DPT_Value_4_Count',\n        range: {\n          min: -0x80000000,\n          max: 0x7fffffff\n        },\n        encode: function (phy) {\n          let val = cv.Transform.clipInt(-0x80000000, phy, 0x7fffffff);\n          val = val < 0 ? val + 4294967296 : val;\n          val = Math.round(val).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          return val > 2147483647 ? (val - 4294967296) : val;\n        }\n      },\n      '13': {\n        link: '13.001'\n      },\n\n      '14.001': {\n        name: 'DPT_Value_Acceleration_Angular',\n        encode: function () {\n          //FIXME: unimplemented (jspack?)\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          const sign = (val & 0x80000000) ? -1 : 1;\n          const exp = ((val & 0x7F800000) >> 23) - 127;\n          const mant = (val & 0x007FFFFF | 0x00800000);\n          return sign * Math.pow(2, exp) * (mant / (1 << 23));\n        }\n      },\n      '14': {\n        link: '14.001',\n        name: '4 byte float',\n        lname: {\n          'de': '4 Byte Gleitkommazahl'\n        },\n        unit: '-'\n      },\n      '16.001': {\n        name: 'DPT_String_8859_1',\n        lname: {\n          'de': '14 Byte Text ISO-8859-1'\n        },\n        encode: function (phy) {\n          let val = '';\n          phy += ''; // force datatype String\n          for (let i = 0; i < 14; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? ((c < 16 ? '0' : '') + c.toString(16)) : '00';\n          }\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < 28; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n      '16.000': {\n        link: '16.001',\n        name: 'DPT_String_ASCII',\n        lname: {\n          'de': '14 Byte Text ASCII'\n        },\n        unit: '-'\n      },\n      '16': {\n        link: '16.001',\n        name: 'DPT_String_ASCII',\n        lname: {\n          'de': '14 Byte Text ASCII'\n        },\n        unit: '-'\n      },\n      '17.001': {\n        link: '5.004',\n        name: 'DPT_SceneNumber',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n      '17': {\n        link: '5.004',\n        name: 'DPT_SceneNumber',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n      '18.001': {\n        name: 'DPT_SceneControl',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-',\n        range: {\n          min: 1.0,\n          max: 64.0+128\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 128).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n      '18': {\n        link: '18.001',\n        name: 'DPT_SceneControl',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n      '26.001': {\n        name: 'DPT_SceneInfo',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-',\n        range: {\n          min: 1.0,\n          max: 64.0+64\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 64).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n      '26': {\n        link: '26.001',\n        name: 'DPT_SceneInfo',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        unit: '-'\n      },\n       '20.102': {\n        name: 'DPT_HVACMode',\n        lname: {\n          'de': 'KONNEX Betriebsart'\n        },\n        unit: '-',\n        range: {\n          'enum': ['auto', 'comfort', 'standby', 'economy', 'building_protection']\n        },\n        encode: function (phy) {\n          let val;\n          switch (phy) {\n            case 1:\n            case 'comfort':\n              val = 1;\n              break;\n            case 2:\n            case 'standby':\n              val = 2;\n              break;\n            case 3:\n            case 'economy':\n              val = 3;\n              break;\n            case 4:\n            case 'building_protection':\n              val = 4;\n              break;\n            default: // actually \"case 0:\" / \"auto\"\n              val = 0;\n          }\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          switch (parseInt(hex, 16)) {\n            case 1:\n              return 'comfort';\n            case 2:\n              return 'standby';\n            case 3:\n              return 'economy';\n            case 4:\n              return 'building_protection';\n            default: // actually \"case 0:\"\n              return 'auto';\n          }\n        }\n      },\n      /* DPT24.001 is probably not fully correct as it can also hold\n       multiple strings sep. by \\x00 as array according to 3.7.2 DPT v1.07\n       but there is no other reference, even not in ETS4\n       so this gives basic support for now, there is also missing a max-length\n       check in encode.\n       In wiregate DPT24.001 has the same basic support with PL38\n       */\n      '24.001': {\n        name: 'DPT_VarString_8859_1',\n        lname: {\n          'de': 'variable String ISO-8859-1'\n        },\n        encode: function (phy) {\n          let val = '';\n          for (let i = 0; i < phy.length; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? ((c < 16 ? '0' : '') + c.toString(16)) : '00';\n          }\n          /* terminating \\x00 */\n          val += '00';\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < hex.length; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n      '225.001' : {\n        name  : 'DPT_ScalingSpeed',\n        encode: function(phy) {\n          const period = phy.get('period') || 0;\n          const percent = phy.get('percent') || 0;\n          const val = [\n            cv.Transform.clipInt(0, period, 0xffff).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, percent, 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return new Map([\n            ['period', parseInt(hex.substr(0, 4), 16)],\n            ['percent', parseInt(hex.substr(4, 2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n      '225' : {\n        name: 'DPT_U24',\n        unit: '-',\n        range: {\n          min: 0x0,\n          max: 0xffffff\n        },\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffff).toString(16).padStart(6, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '232.600' : {\n        name  : 'DPT_Colour_RGB',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return new Map([\n            ['r', parseInt(hex.substr(0, 2), 16) * 100 / 255.0],\n            ['g', parseInt(hex.substr(2, 2), 16) * 100 / 255.0],\n            ['b', parseInt(hex.substr(4, 2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n      '232.600HSV' : {\n        name  : 'DPT_Colour_HSV_inofficial',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const h = phy.get('h') || 0;\n          const s = phy.get('s') || 0;\n          const v = phy.get('v') || 0;\n          const val = [\n            cv.Transform.clipInt(0, h, 360, 255 / 360).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, s, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, v, 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return new Map([\n            ['h', parseInt(hex.substr(0, 2), 16) * 360 / 255.0],\n            ['s', parseInt(hex.substr(2, 2), 16) * 100 / 255.0],\n            ['v', parseInt(hex.substr(4, 2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n      '232' : {\n        name  : 'DPT_3U8',\n        encode: function(phy) {\n          let val = [\n            cv.Transform.clipInt(0, phy[0], 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[1], 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[2], 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return [\n            parseInt(hex.substr(0, 2), 16) * 100 / 255.0,\n            parseInt(hex.substr(2, 2), 16) * 100 / 255.0,\n            parseInt(hex.substr(4, 2), 16) * 100 / 255.0\n          ];\n        }\n      },\n      '242.600' : {\n        name  : 'DPT_Colour_xyY',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            if (!isFinite(phy)) {\n              return {bus: '80000000000000', raw: '000000000000'};\n            }\n            phy = new Map([['Y', +phy]]);\n          }\n\n          const cValid = phy.has('x') && phy.has('y') && (phy.has('cValid') ? phy.get('cValid') : (Number.isFinite(phy.get('x')) && Number.isFinite(phy.get('y'))));\n          const YValid = phy.has('Y') && (phy.has('YValid') ? phy.get('YValid') : Number.isFinite(phy.get('Y')));\n          const x = phy.get('x') || 0;\n          const y = phy.get('y') || 0;\n          const Y = phy.get('Y') || 0;\n          const val = [\n            cv.Transform.clipInt(0, x, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, y, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, Y, 100, 255 / 100).toString(16).padStart(2, '0'),\n            (cValid*2 + YValid*1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['x', parseInt(hex.substr(0, 4), 16) / 65535.0],\n            ['y', parseInt(hex.substr(4, 4), 16) / 65535.0],\n            ['Y', parseInt(hex.substr(8, 2), 16) * 100 / 255.0],\n            ['cValid', (valid & 2) > 0],\n            ['YValid', (valid & 1) > 0]\n          ]);\n        }\n      },\n      '251.600' : {\n        name  : 'DPT_Colour_RGBW',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000000000', raw: '000000000000' };\n          }\n\n          const rValid = phy.has('r') && Number.isFinite(phy.get('r')) && (phy.has('rValid') ? phy.get('rValid') : true);\n          const gValid = phy.has('g') && Number.isFinite(phy.get('g')) && (phy.has('gValid') ? phy.get('gValid') : true);\n          const bValid = phy.has('b') && Number.isFinite(phy.get('b')) && (phy.has('bValid') ? phy.get('bValid') : true);\n          const wValid = phy.has('w') && Number.isFinite(phy.get('w')) && (phy.has('wValid') ? phy.get('wValid') : true);\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const w = phy.get('w') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, w, 100, 255 / 100).toString(16).padStart(2, '0'),\n            '00',\n            (rValid*8 + gValid*4 + bValid*2 + wValid*1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['r', parseInt(hex.substr(0, 2), 16) * 100 / 255.0],\n            ['g', parseInt(hex.substr(2, 2), 16) * 100 / 255.0],\n            ['b', parseInt(hex.substr(4, 2), 16) * 100 / 255.0],\n            ['w', parseInt(hex.substr(6, 2), 16) * 100 / 255.0],\n            ['rValid', (valid & 8) > 0],\n            ['gValid', (valid & 4) > 0],\n            ['bValid', (valid & 2) > 0],\n            ['wValid', (valid & 1) > 0]\n          ]);\n        }\n      },\n      /* 9 Zeilen:\n      },\n      '.001' : {\n      name  : '',\n      encode: function( phy ){\n      return phy;\n      },\n      decode: function( hex ){\n      return hex;\n      }\n      }\n      /*/ /////////////////////////////////////////////////\n      /* 3 Zeilen:\n      }\n      '': {\n      link  : '.001'\n      },\n      */\n      'temp dummy': {link: '1.001'}\n    });\n  }\n});\n"
  ]
}