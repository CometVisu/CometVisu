{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/transforms/Knx.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "name",
    "lname",
    "range",
    "min",
    "max",
    "unit",
    "encode",
    "phy",
    "bus",
    "raw",
    "decode",
    "hex",
    "parseInt",
    "link",
    "val",
    "clipInt",
    "toString",
    "toUpperCase",
    "up",
    "stepCode",
    "Math",
    "floor",
    "log2",
    "abs",
    "charCodeAt",
    "padStart",
    "String",
    "fromCharCode",
    "undefined",
    "isNaN",
    "sign",
    "mant",
    "round",
    "exp",
    "NaN",
    "bin1",
    "substr",
    "bin2",
    "getDay",
    "getHours",
    "getMinutes",
    "getSeconds",
    "date",
    "Date",
    "setHours",
    "setMinutes",
    "setSeconds",
    "day",
    "dayShift",
    "setDate",
    "getDate",
    "year",
    "pow",
    "i",
    "c",
    "chars",
    "length",
    "period",
    "get",
    "percent",
    "join",
    "Map",
    "r",
    "g",
    "b",
    "h",
    "s",
    "v",
    "isFinite",
    "cValid",
    "has",
    "Number",
    "YValid",
    "x",
    "y",
    "Y",
    "valid",
    "rValid",
    "gValid",
    "bValid",
    "wValid",
    "w",
    "transforms",
    "Knx"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Knx.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.transforms.Knx', {\n  type: 'static',\n\n  defer: function () {\n    cv.Transform.addTransform('DPT', {\n      /**\n       * This class defines the default transforms:\n       *   encode: transform JavaScript to bus value\n       *   decode: transform bus to JavaScript value\n       */\n      '1': {\n        name: '1 bit',\n        lname: {\n          'de': '1 Bit',\n          'en': '1 bit'\n        },\n        range: {\n          min: 0,\n          max: 1\n        },\n        unit: '-',\n        encode: function (phy) {\n          phy = +phy; // cast to number\n          return {\n            bus: phy ? '81' : '80',\n            raw: phy ? '01' : '00'\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '1.001': {\n        link: '1',\n        name: 'DPT_Switch',\n        lname: {\n          'de': 'Aus-An-Schalter',\n          'en': 'off on switch'\n        }\n      },\n      '1.002': {\n        link: '1',\n        name: 'DPT_Bool',\n        lname: {\n          'de': 'Boolscher-Wert',\n          'en': 'boolean value'\n        }\n      },\n      '1.003': {\n        link: '1',\n        name: 'DPT_Enable',\n        lname: {\n          'de': 'Disable / Enable',\n          'en': 'disable / enable'\n        }\n      },\n      '1.008': {\n        link: '1',\n        name: 'DPT_UpDown',\n        lname: {\n          'de': 'Hoch-Runter-Schalter',\n          'en': 'up down switch'\n        }\n      },\n      '1.009': {\n        link: '1',\n        name: 'DPT_OpenClose',\n        lname: {\n          'de': 'Auf-Zu-Schalter',\n          'en': 'open close switch'\n        }\n      },\n\n      '2': {\n        link: '1',\n        name: '2 bit',\n        lname: {\n          'de': '2 Bit',\n          'en': '2 bit'\n        },\n        range: {\n          min: 0,\n          max: 3\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 3).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      '3': {\n        name: '4 bit',\n        lname: {\n          'de': '4 Bit',\n          'en': '4 bit'\n        },\n        range: {\n          min: -100,\n          max: 100\n        },\n        unit: '-',\n        encode: function (phy) {\n          phy = +phy; // enforce number\n          if (phy < -100 || (phy > -1 && phy <= 0)) {\n            return { bus: '80', raw: '00' }; // down: stop\n          }\n\n          if (phy > 100 || (phy > 0 && phy < 1)) {\n            return { bus: '88', raw: '08' }; // up: stop\n          }\n\n          const up = phy > 0;\n          const stepCode = 7-Math.floor(Math.log2(Math.abs(phy)));\n          const val = (stepCode | (up * 0b1000)).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          const up = (val & 0b1000) > 0;\n          return (up*2-1) * 100/(2**((val& 0b111)-1));\n        }\n      },\n      '3.007': {\n        link: '3',\n        name: 'DPT_Control_Dimming',\n        lname: {\n          'de': 'Dimmen',\n          'en': 'dimming'\n        }\n      },\n      '3.008': {\n        link: '3',\n        name: 'DPT_Control_Blinds',\n        lname: {\n          'de': 'Beschattungssteuerung',\n          'en': 'blind control'\n        }\n      },\n\n      '4': {\n        name: 'char',\n        lname: {\n          'de': 'Zeichen',\n          'en': 'char'\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = (''+phy).charCodeAt(0).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        }\n      },\n      '4.001': {\n        name: 'DPT_Char_ASCII',\n        link: '4'\n      },\n\n      '5': {\n        name: '8 bit unsigned',\n        lname: {\n          'de': '8 Bit vorzeichenloser Integer',\n          'en': '8 bit unsigned integer'\n        },\n        range: {\n          min: 0,\n          max: 255\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 255).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '5.001': {\n        name: 'DPT_Scaling',\n        lname: {\n          'de': 'Prozentwert',\n          'en': 'percentage'\n        },\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n        unit: '%',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 100, 255 / 100).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) * 100 / 255.0;\n        }\n      },\n      '5.003': {\n        name: 'DPT_Angle',\n        lname: {\n          'de': 'Winkel',\n          'en': 'angle'\n        },\n        range: {\n          min: 0.0,\n          max: 360.0\n        },\n        unit: '°',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 360, 255 / 360).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) * 360 / 255.0;\n        }\n      },\n      '5.004': {\n        link: '5',\n        name: 'DPT_Percent_U8',\n        lname: {\n          'de': 'Prozentwert',\n          'en': 'percentage'\n        },\n        unit: '%'\n      },\n      '5.010': {\n        link: '5',\n        name: 'DPT_Value_1_Ucount',\n        lname: {\n          'de': 'Zähler',\n          'en': 'counter'\n        },\n        unit: '-'\n      },\n\n      '6': {\n        name: '8 bit signed',\n        lname: {\n          'de': '8 Bit vorzeichenbehafteter Integer',\n          'en': '8 bit signed integer'\n        },\n        range: {\n          min: -128,\n          max: 127\n        },\n        unit: '-',\n        encode: function (phy) {\n          phy = cv.Transform.clipInt(-128, phy, 127);\n          let val = phy < 0 ? phy + 256 : phy;\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          return val > 127 ? (val - 256) : val;\n        }\n      },\n      '6.001': {\n        link: '6',\n        name: 'DPT_Percent_V8',\n        lname: {\n          'de': 'Prozentwert mit Vorzeichen',\n          'en': 'percentage with sign'\n        },\n        unit: '%'\n      },\n      '6.010': {\n        link: '6',\n        name: 'DPT_Value_1_Count',\n        lname: {\n          'de': 'Zähler mit Vorzeichen',\n          'en': 'counter with sign'\n        }\n      },\n\n      '7': {\n        name: '2 byte unsigned',\n        lname: {\n          'de': '2 Byte vorzeichenloser Integer',\n          'en': '2 byte unsigned integer'\n        },\n        range: {\n          min: 0,\n          max: 0xffff\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffff).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '7.001':\n      {\n        link: '7',\n        name: 'DPT_Value_2_Ucount'\n      },\n      '7.600': {\n        link: '7',\n        name: 'DPT_Absolute_Colour_Temperature',\n        unit: 'K'\n      },\n\n      '8': {\n        name: '2 byte signed',\n        lname: {\n          'de': '2 Byte vorzeichenbehafteter Integer',\n          'en': '2 byte signed integer'\n        },\n        range: {\n          min: -0x8000,\n          max: 0x7fff\n        },\n        unit: '-',\n        encode: function (phy) {\n          let val = cv.Transform.clipInt(-0x8000, phy, 0x7fff);\n          val = val < 0 ? val + 65536 : val;\n          val = val.toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          return val > 32767 ? (val - 65536) : val;\n        }\n      },\n      '8.001': {\n        link: '8',\n        name: 'DPT_Value_2_Count'\n      },\n\n      '9': {\n        name: '2 byte float',\n        lname: {\n          'de': '2 Byte Gleitkommazahl',\n          'en': '2 byte float value'\n        },\n        range: {\n          min: -671088.64,\n          max: 670433.28\n        },\n        unit: '-',\n        encode: function (phy) {\n          if (undefined === phy || isNaN(phy)) {\n            return '7fff';\n          }\n          const sign = (+phy) < 0 ? 0x8000 : 0;\n          let mant = Math.round((+phy) * 100.0);\n          let exp = 0;\n          while (Math.abs(mant) > 2047) {\n            mant >>= 1;\n            exp++;\n          }\n          const val = (sign | (exp << 11) | (mant & 0x07ff)).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          if (parseInt(hex, 16) === 0x7fff) {\n            return NaN;\n          }\n          const bin1 = parseInt(hex.substr(0, 2), 16);\n          const bin2 = parseInt(hex.substr(2, 2), 16);\n          const sign = parseInt(bin1 & 0x80);\n          const exp = parseInt(bin1 & 0x78) >> 3;\n          let mant = parseInt(((bin1 & 0x7) << 8) | bin2);\n          if (sign !== 0) {\n            mant = -(~(mant - 1) & 0x7ff);\n          }\n          return (1 << exp) * 0.01 * mant;\n        }\n      },\n      '9.001': {\n        link: '9',\n        name: 'DPT_Value_Temp',\n        lname: {\n          'de': 'Temperatur',\n          'en': 'temperature'\n        },\n        unit: '°C'\n      },\n      '9.004': {\n        link: '9',\n        name: 'DPT_Value_Lux',\n        lname: {\n          'de': 'Beleuchtungsstärke',\n          'en': 'illuminance'\n        },\n        unit: 'Lux'\n      },\n      '9.007': {\n        link: '9',\n        name: 'DPT_Value_Humidity',\n        lname: {\n          'de': 'Luftfeuchtigkeit',\n          'en': 'humidity'\n        },\n        unit: '%'\n      },\n      '9.008': {\n        link: '9',\n        name: 'DPT_Value_AirQuality',\n        lname: {\n          'de': 'Luftqualität',\n          'en': 'air quality'\n        },\n        unit: 'ppm'\n      },\n      '9.020': {\n        link: '9',\n        name: 'DPT_Value_Volt',\n        lname: {\n          'de': 'Spannung',\n          'en': 'voltage'\n        },\n        unit: 'mV'\n      },\n      '9.021': {\n        link: '9',\n        name: 'DPT_Value_Curr',\n        lname: {\n          'de': 'Strom',\n          'en': 'current'\n        },\n        unit: 'mA'\n      },\n\n      '10.001': {\n        name: 'DPT_TimeOfDay',\n        lname: {\n          'de': 'Zeit',\n          'en': 'time'\n        },\n        unit: '-',\n        encode: function (phy) {\n          let val = ((phy.getDay() << 5) + phy.getHours()).toString(16).padStart(2, '0');\n          val += phy.getMinutes().toString(16).padStart(2, '0');\n          val += phy.getSeconds().toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const date = new Date(); // assume today\n          date.setHours(parseInt(hex.substr(0, 2), 16) & 0x1F);\n          date.setMinutes(parseInt(hex.substr(2, 2), 16));\n          date.setSeconds(parseInt(hex.substr(4, 2), 16));\n          // as KNX thinks the day of the week belongs to the time, but JavaScript\n          // doesn't, tweak the date till it fits...\n          const day = (parseInt(hex.substr(0, 2), 16) & 0xE0) >> 5;\n          if (day > 0) {\n            const dayShift = (day - date.getDay()) % 7;\n            date.setDate(date.getDate() + dayShift);\n          }\n          return date;\n        }\n      },\n\n      '11.001': {\n        name: 'DPT_Date',\n        lname: {\n          'de': 'Datum',\n          'en': 'date'\n        },\n        unit: '-',\n        encode: function () {\n          // FIXME\n        },\n        decode: function (hex) {\n          const year = parseInt(hex.substr(4, 2), 16) & 0x7F;\n          return new Date(year < 90 ? year + 2000 : year + 1900, //1990 - 2089\n            (parseInt(hex.substr(2, 2), 16) & 0x0F) - 1,\n            parseInt(hex.substr(0, 2), 16) & 0x1F);\n        }\n      },\n\n      '12': {\n        name: '4 byte unsigned',\n        lname: {\n          'de': '4 Byte vorzeichenloser Integer',\n          'en': '4 byte unsigned integer'\n        },\n        range: {\n          min: 0,\n          max: 0xffffffff\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffffff).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '12.001': {\n        link: '12',\n        name: 'DPT_Value_4_Ucount'\n      },\n\n      '13': {\n        name: '4 byte signed',\n        lname: {\n          'de': '4 Byte vorzeichenbehafteter Integer',\n          'en': '4 byte signed integer'\n        },\n        range: {\n          min: -0x80000000,\n          max: 0x7fffffff\n        },\n        unit: '-',\n        encode: function (phy) {\n          let val = cv.Transform.clipInt(-0x80000000, phy, 0x7fffffff);\n          val = val < 0 ? val + 4294967296 : val;\n          val = Math.round(val).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          return val > 2147483647 ? (val - 4294967296) : val;\n        }\n      },\n      '13.001': {\n        link: '13',\n        name: 'DPT_Value_4_Count'\n      },\n\n      '14': {\n        name: '4 byte float',\n        lname: {\n          'de': '4 Byte Gleitkommazahl IEEE 754 (nur Dekodieren)',\n          'en': '4 byte float IEEE 754 (only decode)'\n        },\n        unit: '-',\n        encode: function () {\n          //FIXME: unimplemented (jspack?)\n        },\n        decode: function (hex) {\n          const val = parseInt(hex, 16);\n          const sign = (val & 0x80000000) ? -1 : 1;\n          const exp = ((val & 0x7F800000) >> 23) - 127;\n          const mant = (val & 0x007FFFFF | 0x00800000);\n          return sign * Math.pow(2, exp) * (mant / (1 << 23));\n        }\n      },\n      '14.001': {\n        link: '14',\n        name: 'DPT_Value_Acceleration_Angular'\n      },\n\n      '16': {\n        name: 'DPT_String_ASCII',\n        lname: {\n          'de': '14 Byte Text ASCII',\n          'en': '14 byte text ASCII'\n        },\n        unit: '-',\n        encode: function (phy) {\n          let val = '';\n          phy += ''; // force datatype String\n          for (let i = 0; i < 14; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? ((c < 16 ? '0' : '') + c.toString(16)) : '00';\n          }\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < 28; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n      '16.000': {\n        link: '16'\n      },\n      '16.001': {\n        link: '16',\n        name: 'DPT_String_8859_1',\n        lname: {\n          'de': '14 Byte Text ISO-8859-1',\n          'en': '14 byte text ISO-8859-1'\n        }\n      },\n\n      '17': {\n        link: '18',\n        name: 'DPT_SceneNumber',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        range: {\n          min: 1,\n          max: 64\n        },\n        unit: '-'\n      },\n      '17.001': {\n        link: '18'\n      },\n\n      '18': {\n        name: 'DPT_SceneControl',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        range: {\n          min: 1,\n          max: 64+128\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 128).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n      '18.001': {\n        link: '18'\n      },\n\n      '20.102': {\n        name: 'DPT_HVACMode',\n        lname: {\n          'de': 'KONNEX Betriebsart',\n          'en': 'HVAC mode'\n        },\n        range: {\n          'enum': ['auto', 'comfort', 'standby', 'economy', 'building_protection']\n        },\n        unit: '-',\n        encode: function (phy) {\n          let val;\n          switch (phy) {\n            case 1:\n            case 'comfort':\n              val = 1;\n              break;\n            case 2:\n            case 'standby':\n              val = 2;\n              break;\n            case 3:\n            case 'economy':\n              val = 3;\n              break;\n            case 4:\n            case 'building_protection':\n              val = 4;\n              break;\n            default: // actually \"case 0:\" / \"auto\"\n              val = 0;\n          }\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          switch (parseInt(hex, 16)) {\n            case 1:\n              return 'comfort';\n            case 2:\n              return 'standby';\n            case 3:\n              return 'economy';\n            case 4:\n              return 'building_protection';\n            default: // actually \"case 0:\"\n              return 'auto';\n          }\n        }\n      },\n\n      /* DPT24.001 is probably not fully correct as it can also hold\n       multiple strings sep. by \\x00 as array according to 3.7.2 DPT v1.07\n       but there is no other reference, even not in ETS4\n       so this gives basic support for now, there is also missing a max-length\n       check in encode.\n       In wiregate DPT24.001 has the same basic support with PL38\n       */\n      '24.001': {\n        name: 'DPT_VarString_8859_1',\n        lname: {\n          'de': 'Variabler String ISO-8859-1',\n          'en': 'variable String ISO-8859-1'\n        },\n        unit: '-',\n        encode: function (phy) {\n          let val = '';\n          for (let i = 0; i < phy.length; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? ((c < 16 ? '0' : '') + c.toString(16)) : '00';\n          }\n          /* terminating \\x00 */\n          val += '00';\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < hex.length; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n\n      '26': {\n        name: 'DPT_SceneInfo',\n        lname: {\n          'en': 'Scene Number',\n          'de': 'Szenen Nummer'\n        },\n        range: {\n          min: 1.0,\n          max: 64.0+64\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 64).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n      '26.001': {\n        link: '26'\n      },\n\n      '225' : {\n        name: '3 byte unsigned',\n        lname: {\n          'de': '3 Byte vorzeichenloser Integer',\n          'en': '3 byte unsigned integer'\n        },\n        range: {\n          min: 0x0,\n          max: 0xffffff\n        },\n        unit: '-',\n        encode: function (phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffff).toString(16).padStart(6, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function (hex) {\n          return parseInt(hex, 16);\n        }\n      },\n      '225.001' : {\n        name  : 'DPT_ScalingSpeed',\n        lname: {\n          'de': 'Skalierungsgeschwindigkeit',\n          'en': 'scaling speed'\n        },\n        unit: '-',\n        encode: function(phy) {\n          const period = phy.get('period') || 0;\n          const percent = phy.get('percent') || 0;\n          const val = [\n            cv.Transform.clipInt(0, period, 0xffff).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, percent, 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return new Map([\n            ['period', parseInt(hex.substr(0, 4), 16)],\n            ['percent', parseInt(hex.substr(4, 2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n\n      '232' : {\n        name: '3xDPT_Scaling',\n        lname: {\n          'de': 'Drei Prozentwerte',\n          'en': 'three percentages'\n        },\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n        unit: '%',\n        encode: function(phy) {\n          let val = [\n            cv.Transform.clipInt(0, phy[0], 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[1], 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[2], 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return [\n            parseInt(hex.substr(0, 2), 16) * 100 / 255.0,\n            parseInt(hex.substr(2, 2), 16) * 100 / 255.0,\n            parseInt(hex.substr(4, 2), 16) * 100 / 255.0\n          ];\n        }\n      },\n      '232.600' : {\n        name  : 'DPT_Colour_RGB',\n        lname: {\n          'de': 'RGB-Farbe',\n          'en': 'rgb color'\n        },\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n        unit: '%',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return new Map([\n            ['r', parseInt(hex.substr(0, 2), 16) * 100 / 255.0],\n            ['g', parseInt(hex.substr(2, 2), 16) * 100 / 255.0],\n            ['b', parseInt(hex.substr(4, 2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n      '232.600HSV' : {\n        name  : 'DPT_Colour_HSV_inofficial',\n        lname: {\n          'de': 'HSV-Farbe (inoffiziell)',\n          'en': 'hsv color (inofficial)'\n        },\n        unit: '-',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const h = phy.get('h') || 0;\n          const s = phy.get('s') || 0;\n          const v = phy.get('v') || 0;\n          const val = [\n            cv.Transform.clipInt(0, h, 360, 255 / 360).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, s, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, v, 100, 255 / 100).toString(16).padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          return new Map([\n            ['h', parseInt(hex.substr(0, 2), 16) * 360 / 255.0],\n            ['s', parseInt(hex.substr(2, 2), 16) * 100 / 255.0],\n            ['v', parseInt(hex.substr(4, 2), 16) * 100 / 255.0]\n          ]);\n        }\n      },\n\n      '242.600' : {\n        name  : 'DPT_Colour_xyY',\n        lname: {\n          'de': 'xyY-Farbe',\n          'en': 'xyY color'\n        },\n        unit: '-',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            if (!isFinite(phy)) {\n              return {bus: '80000000000000', raw: '000000000000'};\n            }\n            phy = new Map([['Y', +phy]]);\n          }\n\n          const cValid = phy.has('x') && phy.has('y') && (phy.has('cValid') ? phy.get('cValid') : (Number.isFinite(phy.get('x')) && Number.isFinite(phy.get('y'))));\n          const YValid = phy.has('Y') && (phy.has('YValid') ? phy.get('YValid') : Number.isFinite(phy.get('Y')));\n          const x = phy.get('x') || 0;\n          const y = phy.get('y') || 0;\n          const Y = phy.get('Y') || 0;\n          const val = [\n            cv.Transform.clipInt(0, x, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, y, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, Y, 100, 255 / 100).toString(16).padStart(2, '0'),\n            (cValid*2 + YValid*1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['x', parseInt(hex.substr(0, 4), 16) / 65535.0],\n            ['y', parseInt(hex.substr(4, 4), 16) / 65535.0],\n            ['Y', parseInt(hex.substr(8, 2), 16) * 100 / 255.0],\n            ['cValid', (valid & 2) > 0],\n            ['YValid', (valid & 1) > 0]\n          ]);\n        }\n      },\n\n      '251.600' : {\n        name  : 'DPT_Colour_RGBW',\n        lname: {\n          'de': 'RGBW-Farbe',\n          'en': 'rgbw color'\n        },\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n        unit: '%',\n        encode: function(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000000000', raw: '000000000000' };\n          }\n\n          const rValid = phy.has('r') && Number.isFinite(phy.get('r')) && (phy.has('rValid') ? phy.get('rValid') : true);\n          const gValid = phy.has('g') && Number.isFinite(phy.get('g')) && (phy.has('gValid') ? phy.get('gValid') : true);\n          const bValid = phy.has('b') && Number.isFinite(phy.get('b')) && (phy.has('bValid') ? phy.get('bValid') : true);\n          const wValid = phy.has('w') && Number.isFinite(phy.get('w')) && (phy.has('wValid') ? phy.get('wValid') : true);\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const w = phy.get('w') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100).toString(16).padStart(2, '0'),\n            cv.Transform.clipInt(0, w, 100, 255 / 100).toString(16).padStart(2, '0'),\n            '00',\n            (rValid*8 + gValid*4 + bValid*2 + wValid*1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode: function(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['r', parseInt(hex.substr(0, 2), 16) * 100 / 255.0],\n            ['g', parseInt(hex.substr(2, 2), 16) * 100 / 255.0],\n            ['b', parseInt(hex.substr(4, 2), 16) * 100 / 255.0],\n            ['w', parseInt(hex.substr(6, 2), 16) * 100 / 255.0],\n            ['rValid', (valid & 8) > 0],\n            ['gValid', (valid & 4) > 0],\n            ['bValid', (valid & 2) > 0],\n            ['wValid', (valid & 1) > 0]\n          ]);\n        }\n      }\n    });\n  }\n});\n"
  ]
}