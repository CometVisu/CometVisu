{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Native",
    "construct",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "bom",
    "PageVisibility",
    "addListener",
    "setActive",
    "getVisibilityState",
    "window",
    "parent",
    "showManager",
    "bind",
    "showConfigErrors",
    "statics",
    "HTML_STRUCT",
    "consoleCommands",
    "__commandManager",
    "_relResourcePath",
    "_fullResourcePath",
    "getRelativeResourcePath",
    "fullPath",
    "baseUrl",
    "location",
    "origin",
    "pathname",
    "split",
    "slice",
    "join",
    "util",
    "Uri",
    "getAbsolute",
    "LibraryManager",
    "get",
    "substring",
    "length",
    "createClient",
    "Client",
    "cv",
    "args",
    "Config",
    "testMode",
    "cvTestMode",
    "Mockup",
    "openhab",
    "Rest",
    "pluginsToLoad",
    "includes",
    "push",
    "endsWith",
    "indexOf",
    "mqtt",
    "unshift",
    "Function",
    "prototype",
    "apply",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "check",
    "init",
    "event",
    "commandManager",
    "deferredInit",
    "active",
    "inManager",
    "managerDisabled",
    "managerDisabledReason",
    "managerChecked",
    "members",
    "_blocker",
    "block",
    "val",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "_applyManagerChecked",
    "value",
    "request",
    "queryKey",
    "manager",
    "action",
    "open",
    "data",
    "undefined",
    "main",
    "ConfigCache",
    "_checkBackend",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "info",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "add",
    "registerServiceWorker",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "hideManager",
    "Object",
    "hasOwnProperty",
    "call",
    "ManagerMain",
    "constructor",
    "$$instance",
    "setVisible",
    "isManagerDisabled",
    "notification",
    "topic",
    "target",
    "title",
    "tr",
    "message",
    "getManagerDisabledReason",
    "severity",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "states",
    "engine",
    "isLoggedIn",
    "addListenerOnce",
    "firstCall",
    "getVisible",
    "Timer",
    "once",
    "Bus",
    "dispatchByName",
    "_applyInManager",
    "History",
    "addToHistory",
    "configName",
    "options",
    "handlerId",
    "upgradeVersion",
    "file",
    "handler",
    "handlerOptions",
    "assign",
    "jumpToError",
    "isInManager",
    "condition",
    "validateConfig",
    "worker",
    "FileWorker",
    "displayConfigName",
    "unique",
    "res",
    "configPath",
    "url",
    "has",
    "then",
    "icon",
    "Logger",
    "error",
    "actions",
    "link",
    "Init",
    "getApplication",
    "err",
    "ex",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "name",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "forEach",
    "entry",
    "stack",
    "exc",
    "PopupHandler",
    "optionGroup",
    "ev",
    "getTarget",
    "parentNode",
    "id",
    "classList",
    "contains",
    "box",
    "querySelector",
    "href",
    "shift",
    "checked",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reporting",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "throwError",
    "onerror",
    "Error",
    "Registration",
    "layout",
    "ResizeHandler",
    "invalidateScreensize",
    "stopAll",
    "Lifecycle",
    "onReady",
    "body",
    "document",
    "isCached",
    "enableCache",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "innerHTML",
    "configLoader",
    "ConfigLoader",
    "load",
    "bootstrap",
    "e",
    "anchor",
    "getData",
    "scrollToPage",
    "xml",
    "loader",
    "ScriptLoader",
    "setScriptsLoaded",
    "xmlHash",
    "toHash",
    "isValid",
    "cacheValid",
    "cacheUsed",
    "clear",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "initBackendClient",
    "__detectInitialPage",
    "structure",
    "getStructure",
    "loadParts",
    "setStructureLoaded",
    "treePath",
    "initialPage",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "loadPlugins",
    "clientDesign",
    "configSettings",
    "styles",
    "stylesToLoad",
    "replace",
    "loadStyles",
    "scripts",
    "scriptsToLoad",
    "loadScripts",
    "loadIcons",
    "parseXML",
    "subscribe",
    "dump",
    "iconsFromConfig",
    "IconHandler",
    "insert",
    "uri",
    "type",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "addStyles",
    "addScripts",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "allPluginsQueued",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "path",
    "plugin",
    "startsWith",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "startpage",
    "Environment",
    "localStorage",
    "getItem",
    "rememberLastPage",
    "substr",
    "removeItem",
    "req",
    "parseUri",
    "match",
    "getPageIdByPath",
    "setManagerChecked",
    "rest",
    "getBaseUrl",
    "xhr",
    "Xhr",
    "set",
    "method",
    "accept",
    "env",
    "getResponse",
    "serverVersionId",
    "PHP_VERSION_ID",
    "required_php_version",
    "disable",
    "some",
    "constraint",
    "exec",
    "operator",
    "majorConstraint",
    "parseInt",
    "hasMinorVersion",
    "minorConstraint",
    "hasPatchVersion",
    "patchConstraint",
    "constraintId",
    "maxId",
    "phpversion",
    "setManagerDisabled",
    "setManagerDisabledReason",
    "send",
    "close",
    "client",
    "getClient",
    "terminate",
    "useServiceWorker",
    "workerFile",
    "navigator",
    "serviceWorker",
    "register",
    "reg",
    "scope",
    "configMessage",
    "postMessage",
    "ready",
    "getRegistrations",
    "registrations",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Application.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icons/*)\n * @asset(sentry/bundle.min.js)\n * @asset(sentry/bundle.tracing.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define('cv.Application',\n{\n  extend : qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    const lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n\n    qx.bom.PageVisibility.getInstance().addListener('change', function () {\n      this.setActive(qx.bom.PageVisibility.getInstance().getVisibilityState() === 'visible');\n    }, this);\n\n    // install global shortcut for opening the manager\n    if (window.parent && typeof window.parent.showManager === 'function') {\n      window.showManager = window.parent.showManager;\n    } else {\n      window.showManager = this.showManager.bind(this);\n    }\n    if (window.parent && typeof window.parent.showConfigErrors === 'function') {\n      window.showConfigErrors = window.parent.showConfigErrors;\n    } else {\n      window.showConfigErrors = this.showConfigErrors.bind(this);\n    }\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    HTML_STRUCT: '<div id=\"top\" class=\"loading\"><div class=\"nav_path\">-</div></div><div id=\"navbarTop\" class=\"loading\"></div><div id=\"centerContainer\"><div id=\"navbarLeft\" class=\"loading page\"></div><div id=\"main\" style=\"position:relative; overflow: hidden;\" class=\"loading\"><div id=\"pages\" style=\"position:relative;clear:both;\"><!-- all pages will be inserted here --></div></div><div id=\"navbarRight\" class=\"loading page\"></div></div><div id=\"navbarBottom\" class=\"loading\"></div><div id=\"bottom\" class=\"loading\"><hr /><div class=\"footer\"></div></div>',\n    consoleCommands: [],\n    __commandManager: null,\n    _relResourcePath: null,\n    _fullResourcePath: null,\n\n    getRelativeResourcePath(fullPath) {\n      if (!this._relResourcePath) {\n        const baseUrl = window.location.origin + window.location.pathname.split('/').slice(0, -1).join('/');\n        this._relResourcePath = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')).substring(baseUrl.length+1) + '/';\n      }\n      if (fullPath === true) {\n        if (!this._fullResourcePath) {\n          this._fullResourcePath = window.location.pathname.split('/').slice(0, -1).join('/') + '/' + this._relResourcePath;\n        }\n        return this._fullResourcePath;\n      }\n      return this._relResourcePath;\n    },\n\n    /**\n     * Client factory method -> create a client\n     * @param {...any} args\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient: function(...args) {\n      let Client = cv.io.Client;\n      if (cv.Config.testMode === true || window.cvTestMode === true) {\n        Client = cv.io.Mockup;\n      } else if (args[0] === 'openhab') {\n        Client = cv.io.openhab.Rest;\n        if (!cv.Config.pluginsToLoad.includes('plugin-openhab')) {\n          cv.Config.pluginsToLoad.push('plugin-openhab');\n        }\n        if (args[1] && args[1].endsWith('/cv/l/')) {\n          // we only need the rest path not the login resource\n          args[1] = args[1].substring(0, args[1].indexOf('cv/'));\n        }\n      } else if (args[0] === 'mqtt') {\n        Client = cv.io.mqtt.Client;\n      }\n      args.unshift(null);\n      return new (Function.prototype.bind.apply(Client, args))(); // jshint ignore:line\n    },\n\n    /**\n     * Register shortcuts to usefull commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand: function(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + '() - ' + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    },\n\n    active: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeActive'\n    },\n\n    inManager: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyInManager'\n    },\n\n    managerDisabled: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeManagerDisabled'\n    },\n\n    managerDisabledReason: {\n      check: 'String',\n      nullable: true\n    },\n    managerChecked: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyManagerChecked'\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _blocker: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block: function(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor('#000000');\n          this._blocker.setBlockerOpacity('0.2');\n        }\n        this._blocker.block();\n      } else if (this._blocker) {\n        this._blocker.unblock();\n      }\n    },\n\n    _applyManagerChecked: function(value) {\n      if (value && cv.Config.request.queryKey.manager) {\n        const action = cv.Config.request.queryKey.open ? 'open' : '';\n        const data = cv.Config.request.queryKey.open ? cv.Config.request.queryKey.open : undefined;\n        this.showManager(action, data);\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main : function() {\n      cv.ConfigCache.init();\n      this._checkBackend();\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get('qx.debug')) {\n        if (typeof replayLog !== 'undefined' && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n      cv.report.Record.prepare();\n\n      let info = '\\n' +\n        '  _____                     ___      ___\\n' +\n        ' / ____|                   | \\\\ \\\\    / (_)\\n' +\n        '| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n' +\n        '| |    / _ \\\\| \\'_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n' +\n        '| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n' +\n        ' \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n' +\n        '-----------------------------------------------------------\\n' +\n        ' ©2010-' + (new Date().getFullYear()) + ' Christian Mayer and the CometVisu contributers.\\n' +\n        ' Version: ' + cv.Version.VERSION + '\\n';\n\n      if (cv.Application.consoleCommands.length) {\n        info += '\\n Available commands:\\n'+\n          '    '+cv.Application.consoleCommands.join('\\n    ')+'\\n';\n      }\n\n      info += '-----------------------------------------------------------\\n\\n';\n\n      // eslint-disable-next-line no-console\n      console.log(info);\n\n      // add command to load and open the manager\n      const manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add('open-manager', manCommand);\n      manCommand.addListener('execute', () => this.showManager(), this);\n      this.registerServiceWorker();\n\n      if (qx.core.Environment.get('qx.aspects')) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      this.base(arguments);\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get('qx.debug')) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') + (cv.Config.forceReload === true ? '?'+Date.now() : ''));\n\n      this.__init();\n    },\n\n    hideManager: function () {\n      if (Object.prototype.hasOwnProperty.call(cv.ui, 'manager')) {\n        const ManagerMain = cv.ui['manager']['Main'];\n        // only do something when the singleton is already created\n        if (ManagerMain.constructor.$$instance) {\n          ManagerMain.getInstance().setVisible(false);\n        }\n      }\n    },\n\n    /**\n     * @param action {String} manager event that can be handled by cv.ui.manager.Main._onManagerEvent()\n     * @param data {String|Map} path of file that action should executed on or a Map of options\n     */\n    showManager: function (action, data) {\n      if (this.isManagerDisabled()) {\n        const notification = {\n          topic: 'cv.manager.error',\n          target: 'popup',\n          title: qx.locale.Manager.tr('Manager is not available'),\n          message: this.getManagerDisabledReason(),\n          severity: 'high',\n          deletable: true\n        };\n        cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n      } else {\n        qx.io.PartLoader.require(['manager'], function (states) {\n          // break dependency\n          const engine = cv.TemplateEngine.getInstance();\n          if (!engine.isLoggedIn() && !action) {\n            // never start the manager before we are logged in, as the login response might contain information about the REST API URL\n            engine.addListenerOnce('changeLoggedIn', () => this.showManager());\n            return;\n          }\n          const ManagerMain = cv.ui['manager']['Main'];\n          const firstCall = !ManagerMain.constructor.$$instance;\n          const manager = ManagerMain.getInstance();\n          if (!action && !firstCall) {\n            manager.setVisible(!manager.getVisible());\n          } else if (firstCall) {\n            // initially bind manager visibility\n            manager.bind('visible', this, 'inManager');\n          }\n\n          if (manager.getVisible() && action && data) {\n            // delay this a little bit, give the manager some time to settle\n            qx.event.Timer.once(() => {\n              qx.event.message.Bus.dispatchByName('cv.manager.' + action, data);\n            }, this, 1000);\n          }\n        }, this);\n      }\n    },\n\n    _applyInManager: function (value) {\n      if (value) {\n        qx.bom.History.getInstance().addToHistory('manager', qx.locale.Manager.tr('Manager') + ' - CometVisu');\n      }\n    },\n\n    showConfigErrors: function(configName, options) {\n      configName = configName ? 'visu_config_'+configName+'.xml' : 'visu_config.xml';\n      const handlerId = options && options.upgradeVersion ? 'cv.ui.manager.editor.Diff' : 'cv.ui.manager.editor.Source';\n      const data = {\n        file: configName,\n        handler: handlerId,\n        handlerOptions: Object.assign({\n          jumpToError: true\n        }, options ? options : {})\n      };\n      if (this.isInManager()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', data);\n      } else {\n        this.showManager('openWith', data);\n      }\n      // remove any config error messages shown\n      cv.core.notifications.Router.dispatchMessage('cv.config.error', {\n        topic: 'cv.config.error',\n        condition: false\n      });\n    },\n\n    validateConfig: function (configName) {\n      const worker = cv.data.FileWorker.getInstance();\n      let displayConfigName = configName;\n      if (configName) {\n        configName = '_' + configName;\n      } else {\n        configName = '';\n        displayConfigName = 'default';\n      }\n      let notification = {\n        topic: 'cv.config.validation',\n        severity: 'normal',\n        deletable: true,\n        unique: true\n      };\n      cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n        target: 'toast',\n        message: qx.locale.Manager.tr('Validating configuration file...')\n      }));\n      const res = qx.util.ResourceManager.getInstance();\n      let configPath = `config/visu_config${configName}.xml`;\n      let url = '';\n      if (!res.has(configPath) && res.has(`demo/visu_config${configName}.xml`)) {\n        url = res.toUri(`demo/visu_config${configName}.xml`);\n      }\n      if (!url) {\n        url = res.toUri(configPath);\n      }\n      worker.validateConfig(url).then(res => {\n        // remove the toast information\n        cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n          target: 'toast',\n          condition: false\n        }));\n        if (res === true) {\n          // show result message as dialog\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has no errors!', displayConfigName),\n            icon: 'message_ok'\n          }));\n        } else {\n          // show result message as dialog\n          qx.log.Logger.error(this, res);\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has %2 errors!', displayConfigName, res.length),\n            actions: {\n              link: [\n                {\n                  title: qx.locale.Manager.tr('Show errors'),\n                  action: function () {\n                    qx.core.Init.getApplication().showConfigErrors(configName);\n                  }\n                }]\n            },\n            severity: 'high',\n            icon: 'message_attention'\n          }));\n        }\n      }).catch(err => {\n        this.error(err);\n      });\n    },\n\n    __globalErrorHandler: function(ex) {\n      // connect client data for Bug-Report\n      let exString = '';\n      const maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      } else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + '\\nin ' + ex.getUri() + ' line ' + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + ': ' + ex.message;\n        if (ex.fileName) {\n          exString += '\\n in file ' + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += '\\n line ' + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += '\\n Description: ' + ex.description;\n        }\n        try {\n          let lastLine = '';\n          let repeated = 0;\n          let nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += '\\nNormalized Stack: ' + nStack.substring(0, maxTraceLength) + '\\n';\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += '\\nOriginal Stack: ' + ex.stack + '\\n';\n          }\n        } catch (exc) {\n          if (ex.stack) {\n            exString += '\\nStack: ' + ex.stack.substring(0, maxTraceLength) + '\\n';\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n\n      const notification = {\n        topic: 'cv.error',\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr('An error occured'),\n        message: '<pre>' + (exString || ex.stack) + '</pre>',\n        severity: 'urgent',\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr('Enable on reload:'),\n            options: []\n          },\n          link: [\n            {\n              title: qx.locale.Manager.tr('Reload'),\n              action: function (ev) {\n                let parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === 'notification-center' || parent.classList.contains('popup')) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                let box = parent.querySelector('#enableReporting');\n                let url = window.location.href.split('#').shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reporting=true');\n                }\n                box = parent.querySelector('#reportErrors');\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reportErrors=true');\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n      // reload with reporting checkbox\n      let link = '';\n      if (!cv.Config.reporting) {\n        if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n          link = ' <a href=\\https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr('Action recording') + link,\n          name: 'enableReporting'\n        });\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push(\n            {\n              title: qx.locale.Manager.tr('Send error to sentry.io'),\n              action: function () {\n                Sentry.captureException(ex);\n              },\n              needsConfirmation: false,\n              deleteMessageAfterExecution: true\n            }\n          );\n        } else {\n          link = '';\n          if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n            link = ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr('Error reporting (on sentry.io)') + link,\n            name: 'reportErrors',\n            style: 'margin-left: 18px'\n          });\n          // notification.message+='<div class=\"actions\"><input class=\"reportErrors\" type=\"checkbox\" value=\"true\"/>'+qx.locale.Manager.tr(\"Enable error reporting\")+link+'</div>';\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      'true':  function () {\n        window.onerror(new Error('test error'));\n      },\n      'false': null\n    }),\n\n    /**\n     * Internal initialization method\n     */\n    __init: function() {\n      qx.event.Registration.addListener(window, 'resize', cv.ui.layout.ResizeHandler.invalidateScreensize, cv.ui.layout.ResizeHandler);\n      qx.event.Registration.addListener(window, 'unload', function () {\n        cv.io.Client.stopAll();\n      }, this);\n      qx.bom.Lifecycle.onReady(async function () {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n        let body = document.querySelector('body');\n        let isCached = false;\n        if (cv.Config.enableCache) {\n          isCached = await cv.ConfigCache.isCached();\n        }\n        if (isCached) {\n          // load settings\n          this.debug('using cache');\n          cv.ConfigCache.restore();\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        } else {\n          // load empty HTML structure\n          body.innerHTML = cv.Application.HTML_STRUCT;\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        }\n        let configLoader = new cv.util.ConfigLoader();\n        configLoader.load(this.bootstrap, this);\n      }, this);\n\n      // reaction on browser back button\n      qx.bom.History.getInstance().addListener('request', function(e) {\n        const anchor = e.getData();\n        if (this.isInManager() && anchor !== 'manager') {\n          this.hideManager();\n        } else if (!this.isInManager() && anchor === 'manager') {\n          this.showManager();\n        } else if (anchor) {\n          cv.TemplateEngine.getInstance().scrollToPage(anchor, 0, true);\n        }\n      }, this);\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    bootstrap: async function(xml) {\n      this.debug('bootstrapping');\n      const engine = cv.TemplateEngine.getInstance();\n      const loader = cv.util.ScriptLoader.getInstance();\n\n      engine.xml = xml;\n      loader.addListenerOnce('finished', function() {\n        engine.setScriptsLoaded(true);\n      }, this);\n      let isCached = false;\n      let xmlHash;\n      if (cv.Config.enableCache) {\n        isCached = await cv.ConfigCache.isCached();\n        xmlHash = cv.ConfigCache.toHash(xml);\n      }\n\n      if (isCached) {\n        // check if cache is still valid\n        const cacheValid = await cv.ConfigCache.isValid(null, xmlHash);\n        if (!cacheValid) {\n          this.debug('cache is invalid re-parse xml');\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n\n          // load empty HTML structure\n          const body = document.querySelector('body');\n          body.innerHTML = cv.Application.HTML_STRUCT;\n\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          engine.initBackendClient();\n          this.__detectInitialPage();\n\n          // load part for structure\n          const structure = cv.Config.getStructure();\n          this.debug('loading structure '+structure);\n          engine.loadParts([structure], function(states) {\n            if (states === 'complete') {\n              this.debug(structure + ' has been loaded');\n              this.setStructureLoaded(true);\n            } else {\n              this.error(structure + ' could not be loaded');\n              this.setStructureLoaded(false);\n            }\n          }, this);\n\n          engine.addListenerOnce('changeReady', function() {\n            // create the objects\n            cv.Config.treePath = cv.Config.initialPage;\n            const data = cv.data.Model.getInstance().getWidgetData('id_');\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          }, this);\n          // check if the current design settings overrides the cache one\n          this.loadPlugins();\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            const styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function(style) {\n              styles.push(style.replace('designs/'+cv.Config.configSettings.clientDesign, 'designs/'+cv.Config.clientDesign));\n            }, this);\n            this.loadStyles(styles);\n\n            const scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function(style) {\n              scripts.push(style.replace('designs/'+cv.Config.configSettings.clientDesign, 'designs/'+cv.Config.clientDesign));\n            }, this);\n            this.loadScripts(scripts);\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n          this.loadIcons();\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug('starting');\n        this.__detectInitialPage();\n        engine.parseXML(xml, function () {\n          this.loadPlugins();\n          this.loadStyles();\n          this.loadScripts();\n          this.debug('done');\n\n          if (cv.Config.enableCache) {\n            // cache dom + data when everything is ready\n            qx.event.message.Bus.subscribe('setup.dom.finished', function() {\n              cv.ConfigCache.dump(xml, xmlHash);\n            }, this);\n          }\n        }.bind(this));\n      }\n    },\n\n    /**\n     * Adds icons which were defined in the current configuration to the {@link cv.IconHandler}\n     */\n    loadIcons: function() {\n      cv.Config.configSettings.iconsFromConfig.forEach(function(icon) {\n        cv.IconHandler.getInstance().insert(icon.name, icon.uri, icon.type, icon.flavour, icon.color, icon.styling, icon.dynamic);\n      }, this);\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles: function(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        cv.util.ScriptLoader.getInstance().addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts: function(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins: function() {\n      const plugins = cv.Config.configSettings.pluginsToLoad.slice();\n      cv.Config.pluginsToLoad.forEach(name => {\n        if (!plugins.includes(name)) {\n          plugins.push(name);\n        }\n      });\n      if (plugins.length > 0) {\n        const standalonePlugins = [];\n        let partsLoaded = false;\n        let allPluginsQueued = false;\n        this.debug('loading plugins');\n        const engine = cv.TemplateEngine.getInstance();\n        engine.addListener('changePartsLoaded', function(ev) {\n          if (ev.getData() === true) {\n            this.debug('plugins loaded');\n            partsLoaded = true;\n            if (allPluginsQueued) {\n              qx.event.Timer.once(function () {\n                cv.util.ScriptLoader.getInstance().setAllQueued(true);\n              }, this, 0);\n            }\n          }\n        }, this);\n        const parts = qx.Part.getInstance().getParts();\n        const partPlugins = [];\n        const path = cv.Application.getRelativeResourcePath();\n        plugins.forEach(function(plugin) {\n          if (Object.prototype.hasOwnProperty.call(parts, plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(path + '/plugins/' + plugin.replace('plugin-', '') + '/index.js');\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they use need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            const lid = this.addListener('changeStructureLoaded', function (ev) {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            }, this);\n          }\n        } else {\n          allPluginsQueued = true;\n        }\n      } else {\n        this.debug('no plugins to load => all scripts queued');\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __detectInitialPage: function() {\n      let startpage = 'id_';\n      if (cv.Config.startpage) {\n        startpage = cv.Config.startpage;\n        if (qx.core.Environment.get('html.storage.local') === true) {\n          if (startpage === 'remember') {\n            startpage = localStorage.getItem('lastpage');\n            cv.Config.rememberLastPage = true;\n            if (typeof (startpage) !== 'string' || startpage.substr(0, 3) !== 'id_') {\n              startpage = 'id_'; // fix obvious wrong data\n            }\n          } else if (startpage === 'noremember') {\n            localStorage.removeItem('lastpage');\n            startpage = 'id_';\n            cv.Config.rememberLastPage = false;\n          }\n        }\n      } else {\n        const req = qx.util.Uri.parseUri(window.location.href);\n        if (req.anchor && req.anchor.substring(0, 3) === 'id_') {\n          startpage = req.anchor;\n        }\n      }\n      if (startpage.match(/^id_[0-9_]*$/) !== null) {\n        cv.Config.initialPage = startpage;\n      } else {\n        // wait for DOM to be ready and detect the page id then\n        qx.event.message.Bus.subscribe('setup.dom.finished.before', function() {\n          cv.Config.initialPage = cv.TemplateEngine.getInstance().getPageIdByPath(startpage) || 'id_';\n        });\n      }\n    },\n\n    _checkBackend: function () {\n      if (cv.Config.testMode === true) {\n        this.setManagerChecked(true);\n      } else {\n        const url = cv.io.rest.Client.getBaseUrl().split('/').slice(0, -1).join('/') + '/environment.php';\n        const xhr = new qx.io.request.Xhr(url);\n        xhr.set({\n          method: 'GET',\n          accept: 'application/json'\n        });\n        xhr.addListenerOnce('success', function (e) {\n          const req = e.getTarget();\n          const env = req.getResponse();\n          const serverVersionId = env.PHP_VERSION_ID;\n          //const [major, minor] = env.phpversion.split('.').map(ver => parseInt(ver));\n          const parts = env.required_php_version.split(' ');\n          const disable = parts.some(constraint => {\n            const match = /^(>=|<|>|<=|\\^)(\\d+)\\.(\\d+)\\.?(\\d+)?$/.exec(constraint);\n            if (match) {\n              const operator = match[1];\n              const majorConstraint = parseInt(match[2]);\n              const hasMinorVersion = match[3] !== undefined;\n              const minorConstraint = hasMinorVersion ? parseInt(match[3]) : 0;\n              const hasPatchVersion = match[4] !== undefined;\n              const patchConstraint = hasPatchVersion ? parseInt(match[4]) : 0;\n              const constraintId = 10000 * majorConstraint + 100 * minorConstraint + patchConstraint;\n              const maxId = 10000 * majorConstraint + (hasMinorVersion ? 100 * minorConstraint : 999) + (hasPatchVersion ? patchConstraint : 99);\n              // incomplete implementation of: https://getcomposer.org/doc/articles/versions.md#writing-version-constraints\n              switch (operator) {\n                case '>=':\n                  if (serverVersionId < constraintId) {\n                    return true;\n                  }\n                  break;\n                case '>':\n                  if (serverVersionId <= constraintId) {\n                    return true;\n                  }\n                  break;\n                case '<=':\n                  if (serverVersionId > maxId) {\n                    return true;\n                  }\n                  break;\n                case '<':\n                  if (serverVersionId >= maxId) {\n                    return true;\n                  }\n                  break;\n                case '^':\n                  if (serverVersionId < constraintId || serverVersionId > 10000 *(majorConstraint+1)) {\n                    return true;\n                  }\n                  break;\n                case '~':\n                  if (serverVersionId < constraintId || hasPatchVersion ? serverVersionId > 10000 * (majorConstraint+1) : serverVersionId > (10000 *(majorConstraint) + 100 * (patchConstraint+1))) {\n                    return true;\n                  }\n                  break;\n              }\n            }\n            return false;\n          });\n          if (disable) {\n            this.error('Disabling manager due to PHP version mismatch. Installed:', env.phpversion, 'required:', env.required_php_version);\n            this.setManagerDisabled(true);\n            this.setManagerDisabledReason(qx.locale.Manager.tr('Your system does not provide the required PHP version for the manager. Installed: %1, required: %2', env.phpversion, env.required_php_version));\n          } else {\n            this.info('Manager available for PHP version', env.phpversion);\n          }\n          this.setManagerChecked(true);\n        }, this);\n        xhr.addListener('statusError', e => {\n          this.setManagerChecked(true);\n        });\n        xhr.send();\n      }\n    },\n\n    close: function () {\n      const client = cv.TemplateEngine.getClient();\n      if (client) {\n        client.terminate();\n      }\n    },\n\n    /**\n     * Install the service-worker if possible\n     */\n    registerServiceWorker: function() {\n      if (cv.Config.useServiceWorker === true) {\n        const workerFile = 'ServiceWorker.js';\n        navigator.serviceWorker.register(workerFile).then(function(reg) {\n          this.debug('ServiceWorker successfully registered for scope '+reg.scope);\n\n          // configure service worker\n          var configMessage = {\n            'command': 'configure',\n            'message': {\n              forceReload: cv.Config.forceReload,\n              debug: qx.core.Environment.get('qx.debug')\n            }\n          };\n\n          if (reg.active) {\n            reg.active.postMessage(configMessage);\n          } else {\n            navigator.serviceWorker.ready.then(function(ev) {\n              ev.active.postMessage(configMessage);\n            });\n          }\n        }.bind(this)).catch(function(err) {\n          this.error('Error registering service-worker: ', err);\n        }.bind(this));\n      } else if (navigator.serviceWorker) {\n        navigator.serviceWorker.getRegistrations().then(function(registrations) {\n          this.debug('unregistering existing service workers');\n          registrations.forEach(function (registration) {\n            registration.unregister();\n          });\n        }.bind(this));\n      }\n    }\n  }\n});\n"
  ]
}