{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Native",
    "construct",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "bom",
    "PageVisibility",
    "addListener",
    "setActive",
    "getVisibilityState",
    "window",
    "showManager",
    "statics",
    "HTML_STRUCT",
    "consoleCommands",
    "__commandManager",
    "createClient",
    "args",
    "Array",
    "prototype",
    "slice",
    "call",
    "arguments",
    "cv",
    "Config",
    "configSettings",
    "pluginsToLoad",
    "push",
    "unshift",
    "testMode",
    "Function",
    "bind",
    "apply",
    "Mockup",
    "Client",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "check",
    "init",
    "event",
    "commandManager",
    "deferredInit",
    "active",
    "members",
    "_blocker",
    "block",
    "val",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "main",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "info",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "length",
    "join",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "add",
    "request",
    "queryKey",
    "manager",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "action",
    "path",
    "states",
    "engine",
    "isLoggedIn",
    "addListenerOnce",
    "ManagerMain",
    "toggleVisibility",
    "constructor",
    "$$instance",
    "setVisible",
    "getVisible",
    "Timer",
    "once",
    "message",
    "Bus",
    "dispatchByName",
    "validateConfig",
    "configName",
    "worker",
    "data",
    "FileWorker",
    "displayConfigName",
    "notification",
    "topic",
    "severity",
    "deletable",
    "unique",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "Object",
    "assign",
    "target",
    "tr",
    "res",
    "configPath",
    "url",
    "has",
    "then",
    "condition",
    "icon",
    "error",
    "actions",
    "link",
    "title",
    "Init",
    "getApplication",
    "file",
    "handler",
    "err",
    "ex",
    "bugData",
    "getClientData",
    "body",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "name",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "forEach",
    "entry",
    "substring",
    "stack",
    "exc",
    "JSON",
    "stringify",
    "PopupHandler",
    "optionGroup",
    "options",
    "ev",
    "parent",
    "getTarget",
    "parentNode",
    "id",
    "classList",
    "contains",
    "box",
    "querySelector",
    "location",
    "href",
    "split",
    "shift",
    "checked",
    "Uri",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reportAction",
    "reporting",
    "download",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "throwError",
    "onerror",
    "Error",
    "Registration",
    "layout",
    "ResizeHandler",
    "invalidateScreensize",
    "stopAll",
    "Lifecycle",
    "onReady",
    "document",
    "enableCache",
    "ConfigCache",
    "isCached",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "innerHTML",
    "configLoader",
    "ConfigLoader",
    "load",
    "bootstrap",
    "xml",
    "loader",
    "ScriptLoader",
    "setScriptsLoaded",
    "isValid",
    "cacheUsed",
    "clear",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "initBackendClient",
    "__detectInitialPage",
    "structure",
    "getStructure",
    "loadParts",
    "setStructureLoaded",
    "treePath",
    "initialPage",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "loadPlugins",
    "clientDesign",
    "styles",
    "stylesToLoad",
    "replace",
    "loadStyles",
    "scripts",
    "scriptsToLoad",
    "loadScripts",
    "loadIcons",
    "parseXML",
    "subscribe",
    "dump",
    "iconsFromConfig",
    "IconHandler",
    "insert",
    "uri",
    "type",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "addStyles",
    "addScripts",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "allPluginsQueued",
    "getData",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "LibraryManager",
    "get",
    "plugin",
    "hasOwnProperty",
    "startsWith",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "startpage",
    "Environment",
    "localStorage",
    "getItem",
    "rememberLastPage",
    "substr",
    "removeItem",
    "req",
    "parseUri",
    "anchor",
    "match",
    "getPageIdByPath"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Application.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icon/*)\n * @asset(sentry/bundle.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define(\"cv.Application\",\n{\n  extend : qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    var lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n\n    qx.bom.PageVisibility.getInstance().addListener('change', function () {\n      this.setActive(qx.bom.PageVisibility.getInstance().getVisibilityState() === \"visible\");\n    }, this);\n\n    // install global shortcut for opening the manager\n    window.showManager = this.showManager;\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    HTML_STRUCT: '<div id=\"top\" class=\"loading\"><div class=\"nav_path\">-</div></div><div id=\"navbarTop\" class=\"loading\"></div><div id=\"centerContainer\"><div id=\"navbarLeft\" class=\"loading page\"></div><div id=\"main\" style=\"position:relative; overflow: hidden;\" class=\"loading\"><div id=\"pages\" class=\"clearfix\" style=\"position:relative;clear:both;\"><!-- all pages will be inserted here --></div></div><div id=\"navbarRight\" class=\"loading page\"></div></div><div id=\"navbarBottom\" class=\"loading\"></div><div id=\"bottom\" class=\"loading\"><hr /><div class=\"footer\"></div></div>',\n    consoleCommands: [],\n    __commandManager: null,\n\n    /**\n     * Client factory method -> create a client\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient: function() {\n      var args = Array.prototype.slice.call(arguments);\n      if (args[0] === \"openhab2\") {\n        // auto-load openhab plugin for this backend\n        cv.Config.configSettings.pluginsToLoad.push(\"plugin-openhab\");\n      }\n      args.unshift(null);\n      if (cv.Config.testMode === true) {\n        return  new (Function.prototype.bind.apply(cv.io.Mockup, args)); // jshint ignore:line\n      } else {\n        return new (Function.prototype.bind.apply(cv.io.Client, args)); // jshint ignore:line\n      }\n    },\n\n    /**\n     * Register shortcuts to usefull commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand: function(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + \"() - \" + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    },\n\n    active: {\n      check: \"Boolean\",\n      init: true,\n      event: \"changeActive\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _blocker: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block: function(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor(\"#000000\");\n          this._blocker.setBlockerOpacity(\"0.2\");\n        }\n        this._blocker.block();\n      } else if (this._blocker){\n        this._blocker.unblock();\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main : function() {\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (typeof replayLog !== \"undefined\" && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n      cv.report.Record.prepare();\n\n      var info = \"\\n\"+\n        \"  _____                     ___      ___\\n\"+\n        \" / ____|                   | \\\\ \\\\    / (_)\\n\"+\n        \"| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n\"+\n        \"| |    / _ \\\\| '_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n\"+\n        \"| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n\"+\n        \" \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n\"+\n        \"-----------------------------------------------------------\\n\"+\n        \" ©2010-\"+(new Date().getFullYear())+\" Christian Mayer and the CometVisu contributers.\\n\"+\n        \" Version: \"+cv.Version.VERSION+\"\\n\";\n\n      if (cv.Application.consoleCommands.length) {\n        info += \"\\n Available commands:\\n\"+\n          \"    \"+cv.Application.consoleCommands.join(\"\\n    \")+\"\\n\";\n      }\n\n      info += \"-----------------------------------------------------------\\n\\n\";\n\n      console.log(info);\n\n      // add command to load and open the manager\n      var manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add(\"open-manager\", manCommand);\n      manCommand.addListener('execute', this.showManager, this);\n      if (cv.Config.request.queryKey.manager) {\n        this.showManager();\n      }\n\n      if (qx.core.Environment.get(\"qx.aspects\")) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      this.base(arguments);\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') + (cv.Config.forceReload === true ? '?'+Date.now() : ''));\n\n      this.__init();\n    },\n\n    /**\n     * @param action {String} manager event that can be handled by cv.ui.manager.Main._onManagerEvent()\n     * @param path {String} path of file that action should executed on\n     */\n    showManager: function (action, path) {\n      qx.io.PartLoader.require(['manager'], function (states) {\n        // break dependency\n        var engine = cv.TemplateEngine.getInstance();\n        if (!engine.isLoggedIn()) {\n          // never start the manager before we are logged in, as the login response might contain information about the REST API URL\n          engine.addListenerOnce('changeLoggedIn', this.showManager, this);\n          return;\n        }\n        var ManagerMain = cv.ui['manager']['Main'];\n        var toggleVisibility = !!ManagerMain.constructor.$$instance;\n        var manager = ManagerMain.getInstance();\n        if (toggleVisibility) {\n          manager.setVisible(!manager.getVisible());\n        }\n        if (manager.getVisible() && action && path) {\n          // delay this a little bit, give the manager some time to settle\n          qx.event.Timer.once(() => {\n            qx.event.message.Bus.dispatchByName('cv.manager.' + action, path);\n          }, this, 1000);\n        }\n      }, this);\n    },\n\n    validateConfig: function (configName) {\n      const worker = cv.data.FileWorker.getInstance();\n      let displayConfigName = configName;\n      if (configName) {\n        configName = '_' + configName;\n      } else {\n        configName = '';\n        displayConfigName = 'default';\n      }\n      let notification = {\n        topic: 'cv.config.validation',\n        severity: \"normal\",\n        deletable: true,\n        unique: true\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n        target: 'toast',\n        message: qx.locale.Manager.tr('Validating configuration file...')\n      }));\n      const res = qx.util.ResourceManager.getInstance();\n      let configPath = `config/visu_config${configName}.xml`;\n      let url = '';\n      if (!res.has(configPath) && res.has(`demo/visu_config${configName}.xml`)) {\n        url = res.toUri(`demo/visu_config${configName}.xml`);\n      }\n      if (!url) {\n        url = res.toUri(configPath);\n      }\n      worker.validateConfig(url).then(res => {\n        // remove the toast information\n        cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n          target: 'toast',\n          condition: false\n        }));\n        if (res === true) {\n          // show result message as dialog\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has no errors!', displayConfigName),\n            icon: 'message_ok'\n          }));\n        } else {\n          // show result message as dialog\n          console.error(res);\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has %2 errors!', displayConfigName, res.length),\n            actions: {\n              link: [\n                {\n                  title: qx.locale.Manager.tr(\"Show errors\"),\n                  action: function () {\n                    qx.core.Init.getApplication().showManager('openWith', {\n                      file: `visu_config${configName}.xml`,\n                      handler: 'cv.ui.manager.editor.Source'\n                    })\n                  }\n                }]\n            },\n            severity: 'high',\n            icon: 'message_attention'\n          }));\n        }\n      }).catch(err => {\n        this.error(err);\n      });\n    },\n\n    __globalErrorHandler: function(ex) {\n      // connect client data for Bug-Report\n      var bugData = cv.report.Record.getClientData();\n      var body = \"**\"+qx.locale.Manager.tr(\"Please describe what you have done until the error occured?\")+\"**\\n \\n\\n\";\n      var exString = \"\";\n      var maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      }\n      else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + \"\\nin \" + ex.getUri() + \" line \" + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + \": \" + ex.message;\n        if (ex.fileName) {\n          exString += \"\\n in file \" + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += \"\\n line \" + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += \"\\n Description: \" + ex.description;\n        }\n        try {\n          var lastLine = '';\n          var repeated = 0;\n          var nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += \"\\nNormalized Stack: \" + nStack.substring(0, maxTraceLength) + \"\\n\";\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += \"\\nOriginal Stack: \" + ex.stack + \"\\n\";\n          }\n        } catch(exc) {\n          if (ex.stack) {\n            exString += \"\\nStack: \" + ex.stack.substring(0, maxTraceLength) + \"\\n\";\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n      body += \"```\\n\"+exString+\"\\n```\\n\\n**Client-Data:**\\n```\\n\"+JSON.stringify(bugData, null, 2)+\"\\n```\";\n\n      var notification = {\n        topic: \"cv.error\",\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr(\"An error occured\"),\n        message: \"<pre>\"+ (ex.stack || exString) +\"</pre>\",\n        severity: \"urgent\",\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr(\"Enable on reload:\"),\n            options: []\n          },\n          link: [\n            {\n              title: qx.locale.Manager.tr(\"Reload\"),\n              action: function(ev) {\n                var parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === \"notification-center\" || parent.classList.contains(\"popup\")) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                var box = parent.querySelector(\"#enableReporting\");\n                var url = window.location.href.split(\"#\").shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, \"reporting=true\");\n                }\n                box = parent.querySelector(\"#reportErrors\");\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, \"reportErrors=true\");\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n      // reload with reporting checkbox\n      var reportAction = null;\n      var link = \"\";\n      if (cv.Config.reporting) {\n        // reporting is enabled -> download log and show hint how to append it to the ticket\n        body = '<!--\\n'+qx.locale.Manager.tr(\"Please do not forget to attach the downloaded Logfile to this ticket.\")+'\\n-->\\n\\n'+body;\n        reportAction = cv.report.Record.download;\n      } else {\n        if (qx.locale.Manager.getInstance().getLanguage() === \"de\") {\n          link = ' <a href=\"http://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr(\"Action recording\") + link,\n          name: \"enableReporting\"\n        });\n        // notification.message+='<div class=\"actions\"><input class=\"enableReporting\" type=\"checkbox\" value=\"true\"/>'+qx.locale.Manager.tr(\"Enable reporting on reload\")+link+'</div>';\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push(\n            {\n              title: qx.locale.Manager.tr(\"Send error to sentry.io\"),\n              action: function () {\n                Sentry.captureException(ex);\n              },\n              needsConfirmation: false,\n              deleteMessageAfterExecution: true\n            }\n          );\n        } else {\n          link = \"\";\n          if (qx.locale.Manager.getInstance().getLanguage() === \"de\") {\n            link = ' <a href=\"http://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr(\"Error reporting (on sentry.io)\") + link,\n            name: \"reportErrors\",\n            style: \"margin-left: 18px\"\n          });\n          // notification.message+='<div class=\"actions\"><input class=\"reportErrors\" type=\"checkbox\" value=\"true\"/>'+qx.locale.Manager.tr(\"Enable error reporting\")+link+'</div>';\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      \"true\":  function () {\n        window.onerror(new Error('test error'));\n      },\n      \"false\": null\n    }),\n\n    /**\n     * Internal initialization method\n     */\n    __init: function() {\n      qx.event.Registration.addListener(window, 'resize', cv.ui.layout.ResizeHandler.invalidateScreensize, cv.ui.layout.ResizeHandler);\n      qx.event.Registration.addListener(window, 'unload', function () {\n        cv.io.Client.stopAll();\n      }, this);\n      qx.bom.Lifecycle.onReady(function () {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n        var body = document.querySelector(\"body\");\n\n        if (cv.Config.enableCache && cv.ConfigCache.isCached()) {\n          // load settings\n          this.debug(\"using cache\");\n          cv.ConfigCache.restore();\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        } else {\n          // load empty HTML structure\n          body.innerHTML = cv.Application.HTML_STRUCT;\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        }\n        var configLoader = new cv.util.ConfigLoader();\n        configLoader.load(this.bootstrap, this);\n      }, this);\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    bootstrap: function(xml) {\n      this.debug(\"bootstrapping\");\n      var engine = cv.TemplateEngine.getInstance();\n      var loader = cv.util.ScriptLoader.getInstance();\n\n      engine.xml = xml;\n      loader.addListenerOnce(\"finished\", function() {\n        engine.setScriptsLoaded(true);\n      }, this);\n      if (cv.Config.enableCache && cv.ConfigCache.isCached()) {\n\n        // check if cache is still valid\n        if (!cv.ConfigCache.isValid(xml)) {\n          this.debug(\"cache is invalid re-parse xml\");\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n\n          // load empty HTML structure\n          var body = document.querySelector(\"body\");\n          body.innerHTML = cv.Application.HTML_STRUCT;\n\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          engine.initBackendClient();\n          this.__detectInitialPage();\n\n          // load part for structure\n          var structure = cv.Config.getStructure();\n          this.debug(\"loading structure \"+structure);\n          engine.loadParts([structure], function(states) {\n            if (states === \"complete\") {\n              this.debug(structure + \" has been loaded\");\n              this.setStructureLoaded(true);\n            } else {\n              this.error(structure + \" could not be loaded\");\n              this.setStructureLoaded(false);\n            }\n          }, this);\n\n          engine.addListenerOnce(\"changeReady\", function() {\n            // create the objects\n            cv.Config.treePath = cv.Config.initialPage;\n            var data = cv.data.Model.getInstance().getWidgetData(\"id_\");\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          }, this);\n          // check if the current design settings overrides the cache one\n          this.loadPlugins();\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            var styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function(style) {\n              styles.push(style.replace(\"designs/\"+cv.Config.configSettings.clientDesign, \"designs/\"+cv.Config.clientDesign));\n            }, this);\n            this.loadStyles(styles);\n\n            var scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function(style) {\n              scripts.push(style.replace(\"designs/\"+cv.Config.configSettings.clientDesign, \"designs/\"+cv.Config.clientDesign));\n            }, this);\n            this.loadScripts(scripts);\n\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n          this.loadIcons();\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug(\"starting\");\n        this.__detectInitialPage();\n        engine.parseXML(xml, function () {\n          this.loadPlugins();\n          this.loadStyles();\n          this.loadScripts();\n          this.debug(\"done\");\n\n          if (cv.Config.enableCache) {\n            // cache dom + data when everything is ready\n            qx.event.message.Bus.subscribe(\"setup.dom.finished\", function() {\n              cv.ConfigCache.dump(xml);\n            }, this);\n          }\n        }.bind(this));\n      }\n    },\n\n    /**\n     * Adds icons which were defined in the current configuration to the {@link cv.IconHandler}\n     */\n    loadIcons: function() {\n      cv.Config.configSettings.iconsFromConfig.forEach(function(icon) {\n        cv.IconHandler.getInstance().insert(icon.name, icon.uri, icon.type, icon.flavour, icon.color, icon.styling, icon.dynamic);\n      }, this);\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles: function(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        cv.util.ScriptLoader.getInstance().addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts: function(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins: function() {\n      var plugins = cv.Config.configSettings.pluginsToLoad;\n      if (plugins.length > 0) {\n        var standalonePlugins = [];\n        var partsLoaded = false;\n        var allPluginsQueued = false;\n        this.debug(\"loading plugins\");\n        var engine = cv.TemplateEngine.getInstance();\n        engine.addListener(\"changePartsLoaded\", function(ev) {\n          if (ev.getData() === true) {\n            this.debug(\"plugins loaded\");\n            partsLoaded = true;\n            if (allPluginsQueued) {\n              qx.event.Timer.once(function () {\n                cv.util.ScriptLoader.getInstance().setAllQueued(true);\n              }, this, 0);\n            }\n          }\n        }, this);\n        var parts = qx.Part.getInstance().getParts();\n        var partPlugins = [];\n        var path = qx.util.LibraryManager.getInstance().get('cv', 'resourceUri');\n        plugins.forEach(function(plugin) {\n          if (parts.hasOwnProperty(plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(path + \"/plugins/\" + plugin.replace(\"plugin-\", \"\") + \"/index.js\");\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they use need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            var lid = this.addListener('changeStructureLoaded', function (ev) {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            }, this);\n          }\n        } else {\n          allPluginsQueued = true;\n        }\n      } else {\n        this.debug(\"no plugins to load => all scripts queued\");\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __detectInitialPage: function() {\n      var startpage = 'id_';\n      if (cv.Config.startpage) {\n        startpage = cv.Config.startpage;\n        if (qx.core.Environment.get(\"html.storage.local\") === true) {\n          if ('remember' === startpage) {\n            startpage = localStorage.getItem('lastpage');\n            cv.Config.rememberLastPage = true;\n            if ('string' !== typeof( startpage ) || 'id_' !== startpage.substr(0, 3)) {\n              startpage = 'id_'; // fix obvious wrong data\n            }\n          } else if ('noremember' === startpage) {\n            localStorage.removeItem('lastpage');\n            startpage = 'id_';\n            cv.Config.rememberLastPage = false;\n          }\n        }\n      } else {\n        var req = qx.util.Uri.parseUri(window.location.href);\n        if (req.anchor && req.anchor.substring(0, 3) === \"id_\") {\n          startpage = req.anchor;\n        }\n      }\n      if (startpage.match(/^id_[0-9_]*$/) !== null) {\n        cv.Config.initialPage = startpage;\n      } else {\n        // wait for DOM to be ready and detect the page id then\n        qx.event.message.Bus.subscribe(\"setup.dom.finished.before\", function() {\n          cv.Config.initialPage = cv.TemplateEngine.getInstance().getPageIdByPath(startpage) || \"id_\";\n        });\n      }\n    }\n  }\n});\n"
  ]
}