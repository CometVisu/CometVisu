{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Native",
    "construct",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "bom",
    "PageVisibility",
    "addListener",
    "setActive",
    "getVisibilityState",
    "window",
    "parent",
    "showManager",
    "bind",
    "showConfigErrors",
    "statics",
    "HTML_STRUCT",
    "consoleCommands",
    "__commandManager",
    "createClient",
    "Client",
    "cv",
    "args",
    "Config",
    "testMode",
    "cvTestMode",
    "Mockup",
    "openhab",
    "Rest",
    "configSettings",
    "pluginsToLoad",
    "push",
    "endsWith",
    "substring",
    "indexOf",
    "mqtt",
    "unshift",
    "Function",
    "prototype",
    "apply",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "check",
    "init",
    "event",
    "commandManager",
    "deferredInit",
    "active",
    "inManager",
    "members",
    "_blocker",
    "block",
    "val",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "main",
    "ConfigCache",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "info",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "length",
    "join",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "add",
    "request",
    "queryKey",
    "manager",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "action",
    "data",
    "states",
    "engine",
    "isLoggedIn",
    "addListenerOnce",
    "ManagerMain",
    "firstCall",
    "constructor",
    "$$instance",
    "setVisible",
    "getVisible",
    "Timer",
    "once",
    "message",
    "Bus",
    "dispatchByName",
    "configName",
    "options",
    "handlerId",
    "upgradeVersion",
    "file",
    "handler",
    "handlerOptions",
    "Object",
    "assign",
    "jumpToError",
    "isInManager",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "topic",
    "condition",
    "validateConfig",
    "worker",
    "FileWorker",
    "displayConfigName",
    "notification",
    "severity",
    "deletable",
    "unique",
    "target",
    "tr",
    "res",
    "configPath",
    "url",
    "has",
    "then",
    "icon",
    "Logger",
    "error",
    "actions",
    "link",
    "title",
    "Init",
    "getApplication",
    "err",
    "ex",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "name",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "forEach",
    "entry",
    "stack",
    "exc",
    "PopupHandler",
    "optionGroup",
    "ev",
    "getTarget",
    "parentNode",
    "id",
    "classList",
    "contains",
    "box",
    "querySelector",
    "location",
    "href",
    "split",
    "shift",
    "checked",
    "Uri",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reporting",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "throwError",
    "onerror",
    "Error",
    "Registration",
    "layout",
    "ResizeHandler",
    "invalidateScreensize",
    "stopAll",
    "Lifecycle",
    "onReady",
    "body",
    "document",
    "isCached",
    "enableCache",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "innerHTML",
    "configLoader",
    "ConfigLoader",
    "load",
    "bootstrap",
    "xml",
    "loader",
    "ScriptLoader",
    "setScriptsLoaded",
    "xmlHash",
    "toHash",
    "isValid",
    "cacheValid",
    "cacheUsed",
    "clear",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "initBackendClient",
    "__detectInitialPage",
    "structure",
    "getStructure",
    "loadParts",
    "setStructureLoaded",
    "treePath",
    "initialPage",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "loadPlugins",
    "clientDesign",
    "styles",
    "stylesToLoad",
    "replace",
    "loadStyles",
    "scripts",
    "scriptsToLoad",
    "loadScripts",
    "loadIcons",
    "parseXML",
    "subscribe",
    "dump",
    "iconsFromConfig",
    "IconHandler",
    "insert",
    "uri",
    "type",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "addStyles",
    "addScripts",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "allPluginsQueued",
    "getData",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "path",
    "LibraryManager",
    "get",
    "plugin",
    "hasOwnProperty",
    "call",
    "startsWith",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "startpage",
    "Environment",
    "localStorage",
    "getItem",
    "rememberLastPage",
    "substr",
    "removeItem",
    "req",
    "parseUri",
    "anchor",
    "match",
    "getPageIdByPath",
    "close",
    "getClient",
    "terminate"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Application.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icons/*)\n * @asset(sentry/bundle.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define('cv.Application',\n{\n  extend : qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    const lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n\n    qx.bom.PageVisibility.getInstance().addListener('change', function () {\n      this.setActive(qx.bom.PageVisibility.getInstance().getVisibilityState() === 'visible');\n    }, this);\n\n    // install global shortcut for opening the manager\n    if (window.parent && typeof window.parent.showManager === 'function') {\n      window.showManager = window.parent.showManager;\n    } else {\n      window.showManager = this.showManager.bind(this);\n    }\n    if (window.parent && typeof window.parent.showConfigErrors === 'function') {\n      window.showConfigErrors = window.parent.showConfigErrors;\n    } else {\n      window.showConfigErrors = this.showConfigErrors.bind(this);\n    }\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    HTML_STRUCT: '<div id=\"top\" class=\"loading\"><div class=\"nav_path\">-</div></div><div id=\"navbarTop\" class=\"loading\"></div><div id=\"centerContainer\"><div id=\"navbarLeft\" class=\"loading page\"></div><div id=\"main\" style=\"position:relative; overflow: hidden;\" class=\"loading\"><div id=\"pages\" class=\"clearfix\" style=\"position:relative;clear:both;\"><!-- all pages will be inserted here --></div></div><div id=\"navbarRight\" class=\"loading page\"></div></div><div id=\"navbarBottom\" class=\"loading\"></div><div id=\"bottom\" class=\"loading\"><hr /><div class=\"footer\"></div></div>',\n    consoleCommands: [],\n    __commandManager: null,\n\n    /**\n     * Client factory method -> create a client\n     * @param {...any} args\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient: function(...args) {\n      let Client = cv.io.Client;\n      if (cv.Config.testMode === true || window.cvTestMode === true) {\n        Client = cv.io.Mockup;\n      } else if (args[0] === 'openhab') {\n        Client = cv.io.openhab.Rest;\n        cv.Config.configSettings.pluginsToLoad.push('plugin-openhab');\n        if (args[1] && args[1].endsWith('/cv/l/')) {\n          // we only need the rest path not the login resource\n          args[1] = args[1].substring(0, args[1].indexOf('cv/'));\n        }\n      } else if (args[0] === 'mqtt') {\n        Client = cv.io.mqtt.Client;\n      }\n      args.unshift(null);\n      return new (Function.prototype.bind.apply(Client, args))(); // jshint ignore:line\n    },\n\n    /**\n     * Register shortcuts to usefull commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand: function(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + '() - ' + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    },\n\n    active: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeActive'\n    },\n\n    inManager: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _blocker: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block: function(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor('#000000');\n          this._blocker.setBlockerOpacity('0.2');\n        }\n        this._blocker.block();\n      } else if (this._blocker) {\n        this._blocker.unblock();\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main : function() {\n      cv.ConfigCache.init();\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get('qx.debug')) {\n        if (typeof replayLog !== 'undefined' && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n      cv.report.Record.prepare();\n\n      let info = '\\n' +\n        '  _____                     ___      ___\\n' +\n        ' / ____|                   | \\\\ \\\\    / (_)\\n' +\n        '| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n' +\n        '| |    / _ \\\\| \\'_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n' +\n        '| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n' +\n        ' \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n' +\n        '-----------------------------------------------------------\\n' +\n        ' ©2010-' + (new Date().getFullYear()) + ' Christian Mayer and the CometVisu contributers.\\n' +\n        ' Version: ' + cv.Version.VERSION + '\\n';\n\n      if (cv.Application.consoleCommands.length) {\n        info += '\\n Available commands:\\n'+\n          '    '+cv.Application.consoleCommands.join('\\n    ')+'\\n';\n      }\n\n      info += '-----------------------------------------------------------\\n\\n';\n\n      // eslint-disable-next-line no-console\n      console.log(info);\n\n      // add command to load and open the manager\n      const manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add('open-manager', manCommand);\n      manCommand.addListener('execute', () => this.showManager(), this);\n      if (cv.Config.request.queryKey.manager) {\n        this.showManager();\n      }\n\n      if (qx.core.Environment.get('qx.aspects')) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      this.base(arguments);\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get('qx.debug')) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') + (cv.Config.forceReload === true ? '?'+Date.now() : ''));\n\n      this.__init();\n    },\n\n    /**\n     * @param action {String} manager event that can be handled by cv.ui.manager.Main._onManagerEvent()\n     * @param data {String|Map} path of file that action should executed on or a Map of options\n     */\n    showManager: function (action, data) {\n      qx.io.PartLoader.require(['manager'], function (states) {\n        // break dependency\n        const engine = cv.TemplateEngine.getInstance();\n        if (!engine.isLoggedIn() && !action) {\n          // never start the manager before we are logged in, as the login response might contain information about the REST API URL\n          engine.addListenerOnce('changeLoggedIn', () => this.showManager());\n          return;\n        }\n        const ManagerMain = cv.ui['manager']['Main'];\n        const firstCall = !ManagerMain.constructor.$$instance;\n        const manager = ManagerMain.getInstance();\n        if (!action && !firstCall) {\n          manager.setVisible(!manager.getVisible());\n        } else if (firstCall) {\n          // initially bind manager visibility\n          manager.bind('visible', this, 'inManager');\n        }\n\n        if (manager.getVisible() && action && data) {\n          // delay this a little bit, give the manager some time to settle\n          qx.event.Timer.once(() => {\n            qx.event.message.Bus.dispatchByName('cv.manager.' + action, data);\n          }, this, 1000);\n        }\n      }, this);\n    },\n\n    showConfigErrors: function(configName, options) {\n      configName = configName ? 'visu_config_'+configName+'.xml' : 'visu_config.xml';\n      const handlerId = options && options.upgradeVersion ? 'cv.ui.manager.editor.Diff' : 'cv.ui.manager.editor.Source';\n      const data = {\n        file: configName,\n        handler: handlerId,\n        handlerOptions: Object.assign({\n          jumpToError: true\n        }, options ? options : {})\n      };\n      if (this.isInManager()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', data);\n      } else {\n        this.showManager('openWith', data);\n      }\n      // remove any config error messages shown\n      cv.core.notifications.Router.dispatchMessage('cv.config.error', {\n        topic: 'cv.config.error',\n        condition: false\n      });\n    },\n\n    validateConfig: function (configName) {\n      const worker = cv.data.FileWorker.getInstance();\n      let displayConfigName = configName;\n      if (configName) {\n        configName = '_' + configName;\n      } else {\n        configName = '';\n        displayConfigName = 'default';\n      }\n      let notification = {\n        topic: 'cv.config.validation',\n        severity: 'normal',\n        deletable: true,\n        unique: true\n      };\n      cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n        target: 'toast',\n        message: qx.locale.Manager.tr('Validating configuration file...')\n      }));\n      const res = qx.util.ResourceManager.getInstance();\n      let configPath = `config/visu_config${configName}.xml`;\n      let url = '';\n      if (!res.has(configPath) && res.has(`demo/visu_config${configName}.xml`)) {\n        url = res.toUri(`demo/visu_config${configName}.xml`);\n      }\n      if (!url) {\n        url = res.toUri(configPath);\n      }\n      worker.validateConfig(url).then(res => {\n        // remove the toast information\n        cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n          target: 'toast',\n          condition: false\n        }));\n        if (res === true) {\n          // show result message as dialog\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has no errors!', displayConfigName),\n            icon: 'message_ok'\n          }));\n        } else {\n          // show result message as dialog\n          qx.log.Logger.error(this, res);\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has %2 errors!', displayConfigName, res.length),\n            actions: {\n              link: [\n                {\n                  title: qx.locale.Manager.tr('Show errors'),\n                  action: function () {\n                    qx.core.Init.getApplication().showConfigErrors(configName);\n                  }\n                }]\n            },\n            severity: 'high',\n            icon: 'message_attention'\n          }));\n        }\n      }).catch(err => {\n        this.error(err);\n      });\n    },\n\n    __globalErrorHandler: function(ex) {\n      // connect client data for Bug-Report\n      let exString = '';\n      const maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      } else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + '\\nin ' + ex.getUri() + ' line ' + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + ': ' + ex.message;\n        if (ex.fileName) {\n          exString += '\\n in file ' + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += '\\n line ' + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += '\\n Description: ' + ex.description;\n        }\n        try {\n          let lastLine = '';\n          let repeated = 0;\n          let nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += '\\nNormalized Stack: ' + nStack.substring(0, maxTraceLength) + '\\n';\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += '\\nOriginal Stack: ' + ex.stack + '\\n';\n          }\n        } catch (exc) {\n          if (ex.stack) {\n            exString += '\\nStack: ' + ex.stack.substring(0, maxTraceLength) + '\\n';\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n\n      const notification = {\n        topic: 'cv.error',\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr('An error occured'),\n        message: '<pre>' + (ex.stack || exString) + '</pre>',\n        severity: 'urgent',\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr('Enable on reload:'),\n            options: []\n          },\n          link: [\n            {\n              title: qx.locale.Manager.tr('Reload'),\n              action: function (ev) {\n                let parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === 'notification-center' || parent.classList.contains('popup')) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                let box = parent.querySelector('#enableReporting');\n                let url = window.location.href.split('#').shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reporting=true');\n                }\n                box = parent.querySelector('#reportErrors');\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reportErrors=true');\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n      // reload with reporting checkbox\n      let link = '';\n      if (!cv.Config.reporting) {\n        if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n          link = ' <a href=\\https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr('Action recording') + link,\n          name: 'enableReporting'\n        });\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push(\n            {\n              title: qx.locale.Manager.tr('Send error to sentry.io'),\n              action: function () {\n                Sentry.captureException(ex);\n              },\n              needsConfirmation: false,\n              deleteMessageAfterExecution: true\n            }\n          );\n        } else {\n          link = '';\n          if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n            link = ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr('Error reporting (on sentry.io)') + link,\n            name: 'reportErrors',\n            style: 'margin-left: 18px'\n          });\n          // notification.message+='<div class=\"actions\"><input class=\"reportErrors\" type=\"checkbox\" value=\"true\"/>'+qx.locale.Manager.tr(\"Enable error reporting\")+link+'</div>';\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      'true':  function () {\n        window.onerror(new Error('test error'));\n      },\n      'false': null\n    }),\n\n    /**\n     * Internal initialization method\n     */\n    __init: function() {\n      qx.event.Registration.addListener(window, 'resize', cv.ui.layout.ResizeHandler.invalidateScreensize, cv.ui.layout.ResizeHandler);\n      qx.event.Registration.addListener(window, 'unload', function () {\n        cv.io.Client.stopAll();\n      }, this);\n      qx.bom.Lifecycle.onReady(async function () {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n        let body = document.querySelector('body');\n        let isCached = false;\n        if (cv.Config.enableCache) {\n          isCached = await cv.ConfigCache.isCached();\n        }\n        if (isCached) {\n          // load settings\n          this.debug('using cache');\n          cv.ConfigCache.restore();\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        } else {\n          // load empty HTML structure\n          body.innerHTML = cv.Application.HTML_STRUCT;\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        }\n        let configLoader = new cv.util.ConfigLoader();\n        configLoader.load(this.bootstrap, this);\n      }, this);\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    bootstrap: async function(xml) {\n      this.debug('bootstrapping');\n      const engine = cv.TemplateEngine.getInstance();\n      const loader = cv.util.ScriptLoader.getInstance();\n\n      engine.xml = xml;\n      loader.addListenerOnce('finished', function() {\n        engine.setScriptsLoaded(true);\n      }, this);\n      let isCached = false;\n      let xmlHash;\n      if (cv.Config.enableCache) {\n        isCached = await cv.ConfigCache.isCached();\n        xmlHash = cv.ConfigCache.toHash(xml);\n      }\n\n      if (isCached) {\n        // check if cache is still valid\n        const cacheValid = await cv.ConfigCache.isValid(null, xmlHash);\n        if (!cacheValid) {\n          this.debug('cache is invalid re-parse xml');\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n\n          // load empty HTML structure\n          const body = document.querySelector('body');\n          body.innerHTML = cv.Application.HTML_STRUCT;\n\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          engine.initBackendClient();\n          this.__detectInitialPage();\n\n          // load part for structure\n          const structure = cv.Config.getStructure();\n          this.debug('loading structure '+structure);\n          engine.loadParts([structure], function(states) {\n            if (states === 'complete') {\n              this.debug(structure + ' has been loaded');\n              this.setStructureLoaded(true);\n            } else {\n              this.error(structure + ' could not be loaded');\n              this.setStructureLoaded(false);\n            }\n          }, this);\n\n          engine.addListenerOnce('changeReady', function() {\n            // create the objects\n            cv.Config.treePath = cv.Config.initialPage;\n            const data = cv.data.Model.getInstance().getWidgetData('id_');\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          }, this);\n          // check if the current design settings overrides the cache one\n          this.loadPlugins();\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            const styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function(style) {\n              styles.push(style.replace('designs/'+cv.Config.configSettings.clientDesign, 'designs/'+cv.Config.clientDesign));\n            }, this);\n            this.loadStyles(styles);\n\n            const scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function(style) {\n              scripts.push(style.replace('designs/'+cv.Config.configSettings.clientDesign, 'designs/'+cv.Config.clientDesign));\n            }, this);\n            this.loadScripts(scripts);\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n          this.loadIcons();\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug('starting');\n        this.__detectInitialPage();\n        engine.parseXML(xml, function () {\n          this.loadPlugins();\n          this.loadStyles();\n          this.loadScripts();\n          this.debug('done');\n\n          if (cv.Config.enableCache) {\n            // cache dom + data when everything is ready\n            qx.event.message.Bus.subscribe('setup.dom.finished', function() {\n              cv.ConfigCache.dump(xml, xmlHash);\n            }, this);\n          }\n        }.bind(this));\n      }\n    },\n\n    /**\n     * Adds icons which were defined in the current configuration to the {@link cv.IconHandler}\n     */\n    loadIcons: function() {\n      cv.Config.configSettings.iconsFromConfig.forEach(function(icon) {\n        cv.IconHandler.getInstance().insert(icon.name, icon.uri, icon.type, icon.flavour, icon.color, icon.styling, icon.dynamic);\n      }, this);\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles: function(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        cv.util.ScriptLoader.getInstance().addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts: function(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins: function() {\n      const plugins = cv.Config.configSettings.pluginsToLoad;\n      if (plugins.length > 0) {\n        const standalonePlugins = [];\n        let partsLoaded = false;\n        let allPluginsQueued = false;\n        this.debug('loading plugins');\n        const engine = cv.TemplateEngine.getInstance();\n        engine.addListener('changePartsLoaded', function(ev) {\n          if (ev.getData() === true) {\n            this.debug('plugins loaded');\n            partsLoaded = true;\n            if (allPluginsQueued) {\n              qx.event.Timer.once(function () {\n                cv.util.ScriptLoader.getInstance().setAllQueued(true);\n              }, this, 0);\n            }\n          }\n        }, this);\n        const parts = qx.Part.getInstance().getParts();\n        const partPlugins = [];\n        const path = qx.util.LibraryManager.getInstance().get('cv', 'resourceUri');\n        plugins.forEach(function(plugin) {\n          if (Object.prototype.hasOwnProperty.call(parts, plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(path + '/plugins/' + plugin.replace('plugin-', '') + '/index.js');\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they use need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            const lid = this.addListener('changeStructureLoaded', function (ev) {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            }, this);\n          }\n        } else {\n          allPluginsQueued = true;\n        }\n      } else {\n        this.debug('no plugins to load => all scripts queued');\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __detectInitialPage: function() {\n      let startpage = 'id_';\n      if (cv.Config.startpage) {\n        startpage = cv.Config.startpage;\n        if (qx.core.Environment.get('html.storage.local') === true) {\n          if (startpage === 'remember') {\n            startpage = localStorage.getItem('lastpage');\n            cv.Config.rememberLastPage = true;\n            if (typeof (startpage) !== 'string' || startpage.substr(0, 3) !== 'id_') {\n              startpage = 'id_'; // fix obvious wrong data\n            }\n          } else if (startpage === 'noremember') {\n            localStorage.removeItem('lastpage');\n            startpage = 'id_';\n            cv.Config.rememberLastPage = false;\n          }\n        }\n      } else {\n        const req = qx.util.Uri.parseUri(window.location.href);\n        if (req.anchor && req.anchor.substring(0, 3) === 'id_') {\n          startpage = req.anchor;\n        }\n      }\n      if (startpage.match(/^id_[0-9_]*$/) !== null) {\n        cv.Config.initialPage = startpage;\n      } else {\n        // wait for DOM to be ready and detect the page id then\n        qx.event.message.Bus.subscribe('setup.dom.finished.before', function() {\n          cv.Config.initialPage = cv.TemplateEngine.getInstance().getPageIdByPath(startpage) || 'id_';\n        });\n      }\n    },\n\n    close: function () {\n      cv.TemplateEngine.getClient().terminate();\n    }\n  }\n});\n"
  ]
}