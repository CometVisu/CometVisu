{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/IconHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__db",
    "cv",
    "IconConfig",
    "DB",
    "members",
    "insert",
    "name",
    "uri",
    "flavour",
    "color",
    "styling",
    "undefined",
    "dynamic",
    "source",
    "added",
    "window",
    "util",
    "IconTools",
    "get",
    "a",
    "b",
    "c",
    "asText",
    "document",
    "createTextNode",
    "all",
    "split",
    "length",
    "shift",
    "test",
    "assign",
    "getURI",
    "i",
    "apply",
    "arguments",
    "ResourceManager",
    "getInstance",
    "toUri",
    "getIconElement",
    "iconclass",
    "icon",
    "classes",
    "template",
    "createElement",
    "innerHTML",
    "content",
    "firstChild",
    "getIconSource",
    "res",
    "startsWith",
    "fillIcons",
    "array",
    "forEach",
    "fillRecoloredIcon",
    "list",
    "keys",
    "debug",
    "IconHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* IconHandler.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @author Christian Mayer\n * @since 2012\n */\n\n/**\n * The object \"icon\" contains the whole API necessary to handle the icons.\n *\n */\nqx.Class.define('cv.IconHandler', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function () {\n    this.__db = cv.IconConfig.DB;\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    /**\n     * @typedef iconDBEntry\n     * @type {object}\n     * @property {string} uri\n     * @property {string} styling\n     * @property {(string|HTMLCanvasElement|SVGElement)} icon\n     */\n    /**\n     * @typedef iconDB\n     * Hierachy:      name,           type,                   flavour,                color,   URI\n     * @type {Object.<string, Object.<string, (string|Object.<string, (string|Object.<string, (iconDBEntry|recolorCallback)>)>)>>}\n     */\n\n    /**\n     * Internal database of the known icons.\n     * Initially filled with the default icons.\n     * @type {iconDB}\n     */\n    __db: null,\n\n    /**\n     * Insert or overwrite one or many icons into the database. The parameter\n     * might be a full hash of icon definitions or a single one consisting out of\n     * a name and a URI path. Optional further parameters are a \"type\" and a\n     * flavour.\n     * @param {string} name\n     * @param {string} uri\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color\n     * @param {string?} styling\n     * @param {string?} dynamic\n     * @param {string?} source\n     */\n    insert: function (name, uri, type= '*', flavour='*', color='*', styling=undefined, dynamic='', source = undefined) {\n      let added = false;\n      if (!this.__db[name]) {\n        this.__db[name] = {};\n        added = true;\n      }\n      if (source) {\n        this.__db[name].source = source;\n      }\n      if (!this.__db[name][type]) {\n        this.__db[name][type] = {};\n      }\n      if (!this.__db[name][type][flavour]) {\n        this.__db[name][type][flavour] = {};\n      }\n\n      if (dynamic && window[dynamic]) {\n        this.__db[name][type][flavour][color] = window[dynamic](uri);\n      } else if (dynamic && cv.util.IconTools[dynamic]) {\n          this.__db[name][type][flavour][color] = cv.util.IconTools[dynamic](uri);\n      } else {\n        this.__db[name][type][flavour][color] = {\n          uri: uri,\n          styling: styling\n        };\n      }\n\n      return added;\n    },\n\n    /**\n     * Get the icon information for a name.\n     *\n     * @param {string} name\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color (only relevant for monochrome icons)\n     * @return {(string|recolorCallback|undefined)} The URI for the icon - or \"undefined\" if not known\n     */\n    get: function (name, type = '*', flavour = '*', color = '*') {\n      if (!this.__db[name]) {\n        return (a, b, c, asText) => asText?'[unknown]':document.createTextNode('[unknown]');\n      }\n      if (!this.__db[name][type]) {\n        type = '*'; // undefined -> use default\n      }\n      let all;\n      if (typeof this.__db[name][type] === 'string') {\n        type = this.__db[name][type]; // redirect link\n        if (type.split('/').length > 1) {\n          all = type.split('/');\n          type = all.shift();\n          if (flavour === undefined) {\n            flavour = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour]) {\n        flavour = '*'; // undefined -> use default\n      }\n      if (typeof this.__db[name][type][flavour] === 'string') {\n        flavour = this.__db[name][type][flavour]; // redirect link\n        if (flavour.split('/').length > 1) {\n          all = flavour.split('/');\n          flavour = all.shift();\n          if (!color) {\n            color = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour][color]) {\n        if (/\\.svg(#.+)?$/.test(this.__db[name][type][flavour]['*'].uri)) {\n          // SVGs can be dynamically recolored, so create new entry for this color\n          this.__db[name][type][flavour][color] = Object.assign({}, this.__db[name][type][flavour]['*']);\n        } else {\n          color = '*'; // undefined -> use default\n        }\n      }\n      // handle a generic mapping function\n      if (typeof this.__db[name][type][flavour]['*'] === 'function') {\n        return this.__db[name][type][flavour]['*'];\n      }\n      if (typeof this.__db[name][type][flavour][color] === 'string') {\n        color = this.__db[name][type][flavour][color];\n      } // redirect link\n      return this.__db[name][type][flavour][color];\n    },\n\n    getURI: function () {\n      const i = this.get.apply(this, arguments);\n      if (i) {\n        return qx.util.ResourceManager.getInstance().toUri(i.uri);\n      }\n      return '';\n    },\n\n    /**\n     * Get the icon - either as DOM element (`asText = false`) or as string\n     * (`asText = true`).\n     * When it is returned as string and it was added to the DOM, the\n     * fillIcons method must be called to fill missing content (e.g. the\n     * <canvas> icons.\n     *\n     * @param {string} name\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color (only relevant for monochrome icons)\n     * @param {string?} styling\n     * @param {string?} iconclass\n     * @param {boolean?} asText\n     */\n    getIconElement: function (name, type, flavour, color, styling = '', iconclass = '', asText = false) {\n      const i = this.get(name, type, flavour, color);\n      if (i) {\n        if (i.icon && !styling && typeof i !== 'function' && !asText) {\n          return i.icon;\n        }\n\n        // fetch and cache image\n        if (!styling) {\n          styling = i.styling;\n        }\n\n        let classes = 'icon';\n        if (iconclass) {\n          classes = classes + ' custom_' + iconclass;\n        }\n\n        if (typeof i === 'function') {\n          if (asText) {\n            return i(color, styling, classes, true);\n          }\n          i.icon = i(color, styling, classes, false);\n        } else {\n          if (color) {\n            styling += ';color:' + color;\n          }\n          let icon = /\\.svg#.*?$/.test(i.uri) // SVG with fragment identifier?\n            ? '<svg class=\"' + classes + '\" style=\"' + (styling ? styling : '') + '\"><use href=\"' + qx.util.ResourceManager.getInstance().toUri(i.uri) +'\"></use></svg>'\n            : '<img class=\"' + classes + '\" src=\"' + qx.util.ResourceManager.getInstance().toUri(i.uri) +'\" style=\"' + (styling ? styling : '') + '\"/>';\n          if (asText) {\n            return icon;\n          }\n          let template = document.createElement('template');\n          template.innerHTML = icon;\n          i.icon = template.content.firstChild;\n        }\n        return i.icon;\n      }\n      return asText ? '' : null;\n    },\n\n    /**\n     * Provide a value that can be used by cv.ui.manager.basic.Image to display the icon on an qooxdoo widget.\n     * @param {string} name\n     * @param {string?} classes - optional css classes used in the svg icon code (default is 'icon')\n     * @returns {string}\n     */\n    getIconSource: function (name, classes) {\n      const i = this.get(name);\n      if (i) {\n        if (!classes) {\n          classes = 'icon';\n        }\n        if (typeof i === 'function') {\n          const res = i(undefined, undefined, classes, true);\n          if (res.startsWith('<canvas')) {\n            // no support for canvas as icon preview\n            return '';\n          }\n          return res;\n        }\n        if (/\\.svg#.*?$/.test(i.uri)) {\n          return '<svg class=\"' + classes + '\"><use href=\"' + qx.util.ResourceManager.getInstance().toUri(i.uri) +'\"></use></svg>';\n        }\n        return qx.util.ResourceManager.getInstance().toUri(i.uri);\n      }\n      return '';\n    },\n\n    /**\n     * Fill the icons in the array.\n     * @param array\n     */\n    fillIcons: function (array) {\n      array.forEach(cv.util.IconTools.fillRecoloredIcon, cv.util.IconTools);\n    },\n\n    /**\n     * List all known icons\n     *\n     *\n     * @return {string[]} List of all known icon names\n     */\n    list: function () {\n      return Object.keys(this.__db);\n    },\n\n    /**\n     * Return icon database for debuging purposes - use ONLY for debugging as it's\n     * circumventing the data hiding and exposes a writeable reference to the\n     * database object!\n     *\n     *\n     * @return {Object} The icon database\n     */\n    debug: function () {\n      return this.__db;\n    }\n  }\n});\n"
  ]
}