{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/MetaParser.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "members",
    "parse",
    "xml",
    "done",
    "parseFiles",
    "querySelectorAll",
    "forEach",
    "parseIcons",
    "parseMappings",
    "parseStylings",
    "parseStatusBar",
    "parseStateNotifications",
    "parseTemplates",
    "files",
    "css",
    "js",
    "elem",
    "type",
    "getAttribute",
    "content",
    "push",
    "textContent",
    "cv",
    "Config",
    "configSettings",
    "pluginsToLoad",
    "warn",
    "length",
    "stylesToLoad",
    "concat",
    "scriptsToLoad",
    "icon",
    "__parseIconDefinition",
    "IconHandler",
    "getInstance",
    "insert",
    "name",
    "uri",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "source",
    "iconsFromConfig",
    "mapping",
    "formula",
    "formulaSource",
    "Function",
    "subElements",
    "subElem",
    "origin",
    "childNodes",
    "value",
    "i",
    "v",
    "nodeType",
    "nodeName",
    "toLowerCase",
    "iconDefinition",
    "getIconElement",
    "definition",
    "trim",
    "isDefaultValue",
    "undefined",
    "defaultValue",
    "hasAttribute",
    "range",
    "parseFloat",
    "addMapping",
    "classnames",
    "addStyling",
    "code",
    "condition",
    "sPath",
    "window",
    "location",
    "pathname",
    "sPage",
    "substring",
    "lastIndexOf",
    "editMode",
    "testMode",
    "text",
    "search",
    "linkMatch",
    "linkRegex",
    "matches",
    "exec",
    "handled",
    "url",
    "URL",
    "href",
    "searchParams",
    "has",
    "get",
    "encodeURIComponent",
    "replace",
    "c",
    "charCodeAt",
    "toString",
    "match",
    "suffix",
    "middle",
    "indexOf",
    "replacement",
    "configFile",
    "footerElement",
    "document",
    "querySelector",
    "innerHTML",
    "parsePlugins",
    "nullIsUndefined",
    "x",
    "stateConfig",
    "target",
    "notifications",
    "Router",
    "getTarget",
    "ui",
    "NotificationCenter",
    "addressContainer",
    "config",
    "severity",
    "skipInitial",
    "deletable",
    "unique",
    "valueMapping",
    "addressMapping",
    "topic",
    "iconClasses",
    "titleElem",
    "titleTemplate",
    "messageElem",
    "messageTemplate",
    "conditionElem",
    "addresses",
    "parser",
    "WidgetParser",
    "makeAddressList",
    "getOwnPropertyNames",
    "address",
    "prototype",
    "hasOwnProperty",
    "call",
    "addressConfig",
    "assign",
    "registerStateUpdateHandler",
    "__loadQueue",
    "data",
    "Array",
    "check",
    "templates",
    "templateName",
    "log",
    "Logger",
    "debug",
    "ref",
    "areq",
    "io",
    "request",
    "Xhr",
    "set",
    "accept",
    "cache",
    "forceReload",
    "addListenerOnce",
    "e",
    "req",
    "addTemplate",
    "getResponseText",
    "remove",
    "getUrl",
    "addListener",
    "message",
    "title",
    "locale",
    "Manager",
    "tr",
    "dispatchMessage",
    "send",
    "cleaned",
    "MetaParser"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* MetaParser.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\nqx.Class.define('cv.parser.MetaParser', {\n  extend: qx.core.Object,\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n\n    parse: function(xml, done) {\n      // parse external files\n      this.parseFiles(xml);\n\n      // parse the icons\n      xml.querySelectorAll('meta > icons icon-definition').forEach(this.parseIcons, this);\n\n      // then the mappings\n      xml.querySelectorAll('meta > mappings mapping').forEach(this.parseMappings, this);\n\n      // then the stylings\n      xml.querySelectorAll('meta > stylings styling').forEach(this.parseStylings, this);\n\n      // then the status bar\n      this.parseStatusBar(xml);\n\n      this.parseStateNotifications(xml);\n\n      this.parseTemplates(xml, done);\n    },\n\n    parseFiles: function (xml) {\n      const files = {\n        css: [],\n        js: []\n      };\n      xml.querySelectorAll('meta > files file').forEach(function (elem) {\n        const type = elem.getAttribute('type');\n        const content = elem.getAttribute('content');\n        switch (type) {\n          case 'css':\n            files.css.push(elem.textContent);\n            break;\n\n          case 'js':\n            if (content === 'plugin') {\n              cv.Config.configSettings.pluginsToLoad.push(elem.textContent);\n            } else {\n              files.js.push(elem.textContent);\n            }\n            break;\n\n          default:\n            this.warn('ignoring unknown file type', type);\n            break;\n        }\n      }, this);\n      if (files.css.length > 0) {\n        cv.Config.configSettings.stylesToLoad = cv.Config.configSettings.stylesToLoad.concat(files.css);\n      }\n      if (files.js.length > 0) {\n        cv.Config.configSettings.scriptsToLoad = cv.Config.configSettings.scriptsToLoad.concat(files.js);\n      }\n    },\n\n    parseIcons: function(elem) {\n      let icon = this.__parseIconDefinition(elem);\n      if (cv.IconHandler.getInstance().insert(icon.name, icon.uri, icon.type, icon.flavour, icon.color, icon.styling, icon.dynamic, icon.source)) {\n        cv.Config.configSettings.iconsFromConfig.push(icon);\n      }\n    },\n\n    parseMappings: function(elem) {\n      const name = elem.getAttribute('name');\n      const mapping = {};\n      const formula = elem.querySelectorAll('formula');\n      if (formula.length > 0) {\n        mapping.formulaSource = formula[0].textContent;\n        mapping.formula = new Function('x', 'var y;' + mapping.formulaSource + '; return y;'); // jshint ignore:line\n      }\n      const subElements = elem.querySelectorAll('entry');\n      subElements.forEach(function (subElem) {\n        const origin = subElem.childNodes;\n        const value = [];\n        for (let i = 0; i < origin.length; i++) {\n          const v = origin[i];\n          if (v && v.nodeType === 1 && v.nodeName.toLowerCase() === 'icon') {\n            const iconDefinition = this.__parseIconDefinition(v);\n            let icon = cv.IconHandler.getInstance().getIconElement(iconDefinition.name, iconDefinition.type, iconDefinition.flavour, iconDefinition.color, iconDefinition.styling, iconDefinition['class']);\n            icon.definition = iconDefinition;\n            value.push(icon);\n          } else if (v && v.nodeType === 3 && v.textContent.trim().length) {\n            value.push(v.textContent.trim());\n          }\n        }\n        // check for default entry\n        let isDefaultValue = subElem.getAttribute('default');\n        if (isDefaultValue !== undefined) {\n          isDefaultValue = isDefaultValue === 'true';\n        } else {\n          isDefaultValue = false;\n        }\n        // now set the mapped values\n        if (subElem.getAttribute('value')) {\n          mapping[subElem.getAttribute('value')] = value.length === 1 ? value[0] : value;\n          if (isDefaultValue) {\n            mapping.defaultValue = subElem.getAttribute('value');\n          }\n        } else if (subElem.hasAttribute('range_min')) {\n          if (!mapping.range) {\n            mapping.range = {};\n          }\n          mapping.range[parseFloat(subElem.getAttribute('range_min'))] = [parseFloat(subElem.getAttribute('range_max')), value];\n          if (isDefaultValue) {\n            mapping.defaultValue = parseFloat(subElem.getAttribute('range_min'));\n          }\n        } else if (subElements.length === 1) {\n          // use as catchall mapping\n          mapping['*'] = value.length === 1 ? value[0] : value;\n        }\n      }, this);\n      cv.Config.addMapping(name, mapping);\n    },\n\n    parseStylings: function(elem) {\n      const name = elem.getAttribute('name');\n      let classnames = '';\n      const styling = {};\n      elem.querySelectorAll('entry').forEach(function (subElem) {\n        classnames += subElem.textContent + ' ';\n        // check for default entry\n        let isDefaultValue = subElem.getAttribute('default');\n        if (isDefaultValue !== undefined) {\n          isDefaultValue = isDefaultValue === 'true';\n        } else {\n          isDefaultValue = false;\n        }\n        // now set the styling values\n        if (subElem.getAttribute('value')) {\n          styling[subElem.getAttribute('value')] = subElem.textContent;\n          if (isDefaultValue) {\n            styling.defaultValue = subElem.getAttribute('value');\n          }\n        } else { // a range\n          if (!styling.range) {\n            styling.range = {};\n          }\n          styling.range[parseFloat(subElem.getAttribute('range_min'))] = [parseFloat(subElem.getAttribute('range_max')), subElem.textContent];\n          if (isDefaultValue) {\n            styling.defaultValue = parseFloat(subElem.getAttribute('range_min'));\n          }\n        }\n      }, this);\n      styling.classnames = classnames.trim();\n      cv.Config.addStyling(name, styling);\n    },\n\n    parseStatusBar: function(xml) {\n      let code = '';\n      xml.querySelectorAll('meta > statusbar status').forEach(function (elem) {\n        const condition = elem.getAttribute('condition');\n        let extend = elem.getAttribute('hrefextend');\n        const sPath = window.location.pathname;\n        const sPage = sPath.substring(sPath.lastIndexOf('/') + 1);\n\n        // @TODO: make this match once the new editor is finished-ish.\n        const editMode = sPage === 'edit_config.html';\n\n        // skip this element if it's edit-only and we are non-edit, or the other\n        // way\n        // round\n        if (editMode && condition === '!edit') {\n          return;\n        }\n        if (!editMode && condition === 'edit') {\n          return;\n        }\n\n        if (cv.Config.testMode && condition === '!testMode') {\n          return;\n        }\n        if (!cv.Config.testMode && condition === 'testMode') {\n          return;\n        }\n\n        let text = elem.textContent;\n        let search = '';\n\n        // compability change to make existing customer configurations work with the new manager links\n        // this replaces all document links to old manager tools with the new ones\n        let linkMatch;\n        const linkRegex = /href=\"([^\"]+)\"/gm;\n        const matches = [];\n        // eslint-disable-next-line no-cond-assign\n        while (linkMatch = linkRegex.exec(text)) {\n          matches.push(linkMatch);\n        }\n        let handled = false;\n        const url = new URL(window.location.href);\n        if (url.searchParams.has('config')) {\n          search = url.searchParams.get('config');\n          search = encodeURIComponent(search).replace(/[!'()*]/g, function (c) {\n            return '%' + c.charCodeAt(0).toString(16);\n          });\n        }\n        matches.forEach(match => {\n          switch (match[1]) {\n            case 'manager.php':\n              text = text.replace(match[0], 'href=\"?manager=1\" onclick=\"showManager(); return false;\"');\n              handled = true;\n              break;\n\n            case 'check_config.php':\n              text = text.replace(match[0], 'href=\"#\" onclick=\"qx.core.Init.getApplication().validateConfig(\\'' + search + '\\')\"');\n              handled = true;\n              break;\n\n            case 'editor/':\n            case 'editor': {\n              const suffix = search ? '_' + search : '';\n              text = text.replace(match[0], 'href=\"'+window.location.pathname+'?config='+search+'&manager=1&open=visu_config' + suffix + '.xml\" onclick=\"showManager(\\'open\\', \\'visu_config' + suffix + '.xml\\')\"');\n              handled = true;\n              break;\n            }\n          }\n        });\n\n        if (handled) {\n          // this overrides the extends\n          extend = null;\n        }\n        switch (extend) {\n          case 'all': // append all parameters\n            search = window.location.search.replace(/\\$/g, '$$$$');\n            text = text.replace(/(href=\"[^\"]*)(\")/g, '$1' + search + '$2');\n            break;\n          case 'config': { // append config file info\n            search = window.location.search.replace(/\\$/g, '$$$$');\n            search = search.replace(/.*(config=[^&]*).*|.*/, '$1');\n\n            const middle = text.replace(/.*href=\"([^\"]*)\".*/g, '{$1}');\n            if (middle.indexOf('?') > 0) {\n              search = '&' + search;\n            } else {\n              search = '?' + search;\n            }\n\n            text = text.replace(/(href=\"[^\"]*)(\")/g, '$1' + search + '$2');\n            break;\n          }\n\n          case 'action': {\n            search = window.location.search.replace(/\\$/g, '$$$$');\n            search = search.replace(/.*config=([^&]*).*|.*/, '$1');\n            const match = /cv-action=\"([\\w]+)\"/.exec(text);\n            if (match) {\n              let replacement = 'href=\"#\" ';\n              switch (match[1]) {\n                case 'validate':\n                  replacement += 'onclick=\"qx.core.Init.getApplication().validateConfig(\\'' + search + '\\')\"';\n                  break;\n\n                case 'edit': {\n                  const configFile = search ? 'visu_config_' + search + '.xml' : 'visu_config.xml';\n                  replacement = 'href=\"'+window.location.pathname+'?config='+search+'&manager=1&open='+configFile+'\" onclick=\"showManager(\\'open\\', \\'' + configFile + '\\'); return false;\"';\n                  break;\n                }\n              }\n              text = text.replace(match[0], replacement);\n            }\n            break;\n          }\n        }\n        code += text;\n      }, this);\n      const footerElement = document.querySelector('.footer');\n      footerElement.innerHTML += code;\n    },\n\n    parsePlugins: function(xml) {\n      const pluginsToLoad = [];\n      xml.querySelectorAll('meta > plugins plugin').forEach(function (elem) {\n        const name = elem.getAttribute('name');\n        if (name) {\n          pluginsToLoad.push('plugin-'+name);\n        }\n      });\n      return pluginsToLoad;\n    },\n\n    __parseIconDefinition: function(elem) {\n      const nullIsUndefined = x => x === null ? undefined : x;\n\n      return {\n        name : nullIsUndefined(elem.getAttribute('name')),\n        uri : nullIsUndefined(elem.getAttribute('uri')),\n        type : nullIsUndefined(elem.getAttribute('type')),\n        flavour : nullIsUndefined(elem.getAttribute('flavour')),\n        color : nullIsUndefined(elem.getAttribute('color')),\n        styling : nullIsUndefined(elem.getAttribute('styling')),\n        dynamic : nullIsUndefined(elem.getAttribute('dynamic')),\n        'class' : nullIsUndefined(elem.getAttribute('class')),\n        source: 'config'\n      };\n    },\n\n    parseStateNotifications: function(xml) {\n      const stateConfig = {};\n      xml.querySelectorAll('meta > notifications state-notification').forEach(function (elem) {\n        const target = cv.core.notifications.Router.getTarget(elem.getAttribute('target')) || cv.ui.NotificationCenter.getInstance();\n\n        const addressContainer = elem.querySelector('addresses');\n\n        const config = {\n          target: target,\n          severity: elem.getAttribute('severity'),\n          skipInitial: elem.getAttribute('skip-initial') !== 'false',\n          deletable: elem.getAttribute('deletable') !== 'false',\n          unique: elem.getAttribute('unique') === 'true',\n          valueMapping: addressContainer.getAttribute('value-mapping'),\n          addressMapping: addressContainer.getAttribute('address-mapping')\n        };\n\n        const name = elem.getAttribute('name');\n        if (name) {\n          config.topic = 'cv.state.'+name;\n        }\n        const icon = elem.getAttribute('icon');\n        if (icon) {\n          config.icon = icon;\n          const iconClasses = elem.getAttribute('icon-classes');\n          if (iconClasses) {\n            config.iconClasses = iconClasses;\n          }\n        }\n\n        // templates\n        const titleElem = elem.querySelector('title-template');\n        if (titleElem) {\n          config.titleTemplate = titleElem.innerHTML;\n        }\n        const messageElem = elem.querySelector('message-template');\n        if (messageElem) {\n          config.messageTemplate = messageElem.innerHTML;\n        }\n\n        // condition\n        const conditionElem = elem.querySelector('condition');\n        let condition = conditionElem.textContent;\n        if (condition === 'true') {\n          condition = true;\n        } else if (condition === 'false') {\n          condition = false;\n        }\n        config.condition = condition;\n\n        const addresses = cv.parser.WidgetParser.makeAddressList(addressContainer);\n        // addresses\n        Object.getOwnPropertyNames(addresses).forEach(function(address) {\n          if (!Object.prototype.hasOwnProperty.call(stateConfig, address)) {\n            stateConfig[address] = [];\n          }\n          const addressConfig = Object.assign({}, config);\n          addressConfig.addressConfig = addresses[address];\n          stateConfig[address].push(addressConfig);\n        });\n      });\n      cv.core.notifications.Router.getInstance().registerStateUpdateHandler(stateConfig);\n    },\n\n    /**\n     * Parses meta template definitions and add them to the WidgetParser\n     * @param xml {HTMLElement}\n     * @param done\n     */\n    parseTemplates: function (xml, done) {\n      const __loadQueue = new qx.data.Array();\n\n      const check = function () {\n        if (__loadQueue.length === 0 && done) {\n          done();\n        }\n      };\n      const templates = xml.querySelectorAll('meta > templates template');\n      if (templates.length === 0) {\n        done();\n      } else {\n        templates.forEach(function (elem) {\n          const templateName = elem.getAttribute('name');\n          qx.log.Logger.debug(this, 'loading template:', templateName);\n          const ref = elem.getAttribute('ref');\n          if (ref) {\n            // load template fom external file\n            const areq = new qx.io.request.Xhr(ref);\n            __loadQueue.push(ref);\n            qx.log.Logger.debug(this, 'loading template from file:', ref);\n            areq.set({\n              accept: 'text/plain',\n              cache: !cv.Config.forceReload\n            });\n\n            areq.addListenerOnce('success', function (e) {\n              const req = e.getTarget();\n              cv.parser.WidgetParser.addTemplate(\n                templateName,\n                // templates can only have one single root element, so we wrap it here\n                '<root>' + req.getResponseText() + '</root>'\n              );\n              __loadQueue.remove(areq.getUrl());\n              qx.log.Logger.debug(this, 'DONE loading template from file:', ref);\n              check();\n            }, this);\n            areq.addListener('statusError', function () {\n              const message = {\n                topic: 'cv.config.error',\n                title: qx.locale.Manager.tr('Template loading error'),\n                severity: 'urgent',\n                deletable: true,\n                message: qx.locale.Manager.tr('Template \\'%1\\' could not be loaded from \\'%2\\'.', templateName, ref)\n              };\n              cv.core.notifications.Router.dispatchMessage(message.topic, message);\n            }, this);\n            areq.send();\n          } else {\n            const cleaned = elem.innerHTML.replace(/\\n\\s*/g, '').trim();\n            cv.parser.WidgetParser.addTemplate(\n              templateName,\n              // templates can only have one single root element, so we wrap it here\n              '<root>' + cleaned + '</root>'\n            );\n          }\n        }, this);\n        check();\n      }\n    }\n  }\n});\n"
  ]
}