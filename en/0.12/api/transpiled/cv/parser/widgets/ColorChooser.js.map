{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/widgets/ColorChooser.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "cv",
    "parser",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "makeAddressListFn",
    "baseColors",
    "r",
    "x",
    "y",
    "Y",
    "g",
    "b",
    "w",
    "r_x",
    "getAttribute",
    "r_y",
    "r_wavelength",
    "r_strength",
    "r_curve",
    "r_scale",
    "g_x",
    "g_y",
    "g_wavelength",
    "g_strength",
    "g_curve",
    "g_scale",
    "b_x",
    "b_y",
    "b_wavelength",
    "b_strength",
    "b_curve",
    "b_scale",
    "w_x",
    "w_y",
    "w_strength",
    "w_curve",
    "w_scale",
    "xy",
    "util",
    "Color",
    "wavelength2xy",
    "parseFloat",
    "scale",
    "curve",
    "split",
    "map",
    "src",
    "transform",
    "mode",
    "variant",
    "Set",
    "has",
    "target",
    "value",
    "defer",
    "addHandler",
    "widgets",
    "ColorChooser"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ColorChooser.js\n * \n * copyright (c) 2010-2021, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Widget to be able to select a color.\n */\nqx.Class.define('cv.parser.widgets.ColorChooser', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      let data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n\n      data.baseColors = { // default to sRGB color space with D65 white point\n        r: {x: 0.64, y: 0.33, Y: 0.2126},\n        g: {x: 0.30, y: 0.60, Y: 0.7152},\n        b: {x: 0.15, y: 0.06, Y: 0.0722},\n        w: {x: 0.3127, y: 0.3290, Y: 1}\n      };\n      let r_x          = xml.getAttribute('r_x');\n      let r_y          = xml.getAttribute('r_y');\n      let r_wavelength = xml.getAttribute('r_wavelength');\n      let r_strength   = xml.getAttribute('r_strength');\n      let r_curve      = xml.getAttribute('r_curve');\n      let r_scale      = xml.getAttribute('r_scale');\n      let g_x          = xml.getAttribute('g_x');\n      let g_y          = xml.getAttribute('g_y');\n      let g_wavelength = xml.getAttribute('g_wavelength');\n      let g_strength   = xml.getAttribute('g_strength');\n      let g_curve      = xml.getAttribute('g_curve');\n      let g_scale      = xml.getAttribute('g_scale');\n      let b_x          = xml.getAttribute('b_x');\n      let b_y          = xml.getAttribute('b_y');\n      let b_wavelength = xml.getAttribute('b_wavelength');\n      let b_strength   = xml.getAttribute('b_strength');\n      let b_curve      = xml.getAttribute('b_curve');\n      let b_scale      = xml.getAttribute('b_scale');\n      let w_x          = xml.getAttribute('w_x');\n      let w_y          = xml.getAttribute('w_y');\n      let w_strength   = xml.getAttribute('w_strength');\n      let w_curve      = xml.getAttribute('w_curve');\n      let w_scale      = xml.getAttribute('w_scale');\n\n      if (r_wavelength) {\n        let xy = cv.util.Color.wavelength2xy(parseFloat(r_wavelength));\n        data.baseColors.r.x = xy.x;\n        data.baseColors.r.y = xy.y;\n      }\n      if (r_x) {\n        data.baseColors.r.x = parseFloat(r_x);\n      }\n      if (r_y) {\n        data.baseColors.r.y = parseFloat(r_y);\n      }\n      if (r_strength) {\n        data.baseColors.r.Y = parseFloat(r_strength);\n      }\n      data.baseColors.r.scale = r_scale ? parseFloat(r_scale) : 100;\n      switch (r_curve) {\n        case 'exponential':\n          data.baseColors.r.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.r.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.r.curve = [1];\n          break;\n\n        default:\n          data.baseColors.r.curve = r_curve.split(';').map(x => parseFloat(x));\n      }\n\n      if (g_wavelength) {\n        let xy = cv.util.Color.wavelength2xy(parseFloat(g_wavelength));\n        data.baseColors.g.x = xy.x;\n        data.baseColors.g.y = xy.y;\n      }\n      if (g_x) {\n        data.baseColors.g.x = parseFloat(g_x);\n      }\n      if (g_y) {\n        data.baseColors.g.y = parseFloat(g_y);\n      }\n      if (g_strength) {\n        data.baseColors.g.Y = parseFloat(g_strength);\n      }\n      data.baseColors.g.scale = g_scale ? parseFloat(g_scale) : 100;\n      switch (g_curve) {\n        case 'exponential':\n          data.baseColors.g.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.g.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.g.curve = [1];\n          break;\n\n        default:\n          data.baseColors.g.curve = g_curve.split(';').map(x => parseFloat(x));\n      }\n\n      if (b_wavelength) {\n        let xy = cv.util.Color.wavelength2xy(parseFloat(b_wavelength));\n        data.baseColors.b.x = xy.x;\n        data.baseColors.b.y = xy.y;\n      }\n      if (b_x) {\n        data.baseColors.b.x = parseFloat(b_x);\n      }\n      if (b_y) {\n        data.baseColors.b.y = parseFloat(b_y);\n      }\n      if (b_strength) {\n        data.baseColors.b.Y = parseFloat(b_strength);\n      }\n      data.baseColors.b.scale = b_scale ? parseFloat(b_scale) : 100;\n      switch (b_curve) {\n        case 'exponential':\n          data.baseColors.b.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.b.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.b.curve = [1];\n          break;\n\n        default:\n          data.baseColors.b.curve = b_curve.split(';').map(x => parseFloat(x));\n      }\n      if (w_x) {\n        data.baseColors.w.x = parseFloat(w_x);\n      }\n      if (w_y) {\n        data.baseColors.w.y = parseFloat(w_y);\n      }\n      if (w_strength) {\n        data.baseColors.w.Y = parseFloat(w_strength);\n      }\n      data.baseColors.w.scale = w_scale ? parseFloat(w_scale) : 100;\n      switch (w_curve) {\n        case 'exponential':\n          data.baseColors.w.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.w.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.w.curve = [1];\n          break;\n\n        default:\n          data.baseColors.w.curve = w_curve.split(';').map(x => parseFloat(x));\n      }\n\n      return data;\n    },\n    \n    makeAddressListFn: function(src, transform, mode, variant) {\n      return [true, (new Set(['r', 'g', 'b'])).has(variant) ? 'RGB-'+variant : variant];\n    },\n\n    getAttributeToPropertyMappings: function () {\n      return {\n        'controls': {'default': 'triangle'},\n        'send_on_finish': {\n          target: 'sendOnFinish',\n          'default': false,\n          transform: function(value) {\n            return value === 'true';\n          }\n        }\n      };\n    }\n  },\n\n  defer: function (statics) {\n    // register the parser\n    cv.parser.WidgetParser.addHandler('colorchooser', statics);\n  }\n});\n"
  ]
}