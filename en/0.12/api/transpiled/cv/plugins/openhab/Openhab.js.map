{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/openhab/Openhab.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "prototype",
    "hasOwnProperty",
    "call",
    "cv",
    "Config",
    "request",
    "queryKey",
    "__notificationRouter",
    "notifications",
    "Router",
    "getInstance",
    "client",
    "TemplateEngine",
    "visu",
    "sse",
    "getCurrentTransport",
    "subscribe",
    "_onNotification",
    "executeWhenDomFinished",
    "_createSettings",
    "members",
    "__settings",
    "_openSettings",
    "settingsRoot",
    "dom",
    "Element",
    "create",
    "insertAfter",
    "document",
    "querySelector",
    "ui",
    "NotificationCenter",
    "getRootElementId",
    "button",
    "html",
    "util",
    "IconTools",
    "svgKUF",
    "style",
    "command",
    "Command",
    "addListener",
    "show",
    "getCommands",
    "add",
    "insertBegin",
    "event",
    "Registration",
    "theme",
    "manager",
    "Meta",
    "setTheme",
    "Dark",
    "_inline",
    "root",
    "Inline",
    "setLayout",
    "layout",
    "VBox",
    "plugins",
    "openhab",
    "Settings",
    "exclude",
    "flex",
    "e",
    "data",
    "error",
    "json",
    "JSON",
    "parse",
    "dispatchMessage",
    "topic",
    "destruct",
    "_disposeObjects",
    "defer",
    "statics",
    "Openhab"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Openhab.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This Plugin provides some specials to improve the integration with openHAB backend.\n *\n * .. NOTE::\n *\n *    This plugin gets automatically activated if the openHAB2 backend is used.\n *    There is no need to add it to the ``plugins`` section of the ``visu_config.xml``.\n *\n * @author Tobias Br√§utigam\n * @since 0.11.0\n *\n * @require(qx.ui.root.Inline)\n */\nqx.Class.define('cv.plugins.openhab.Openhab', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n *****************************************************************************\n    CONSTRUCTOR\n *****************************************************************************\n */\n  construct: function () {\n    this.base(arguments);\n    if (!Object.prototype.hasOwnProperty.call(cv.Config.request.queryKey, 'preview')) {\n      this.__notificationRouter = cv.core.notifications.Router.getInstance();\n\n      // listen to notifications\n      const client = cv.TemplateEngine.getInstance().visu;\n      const sse = client.getCurrentTransport && client.getCurrentTransport();\n      if (sse) {\n        sse.subscribe('notifications', this._onNotification, this);\n      }\n      cv.TemplateEngine.getInstance().executeWhenDomFinished(this._createSettings, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __notificationRouter: null,\n    __settings: null,\n    _openSettings: null,\n\n    _createSettings: function() {\n      // add element structure to notification-center\n      const settingsRoot = qx.dom.Element.create('section', {'id': 'qxsettings', 'html': '<div></div>'});\n      qx.dom.Element.insertAfter(settingsRoot, document.querySelector('#'+cv.ui.NotificationCenter.getInstance().getRootElementId()+' section.messages'));\n\n      // add a settings button to trigger opening the settings\n      const button = qx.dom.Element.create('div', {\n        html: cv.util.IconTools.svgKUF('edit_settings')(null, 'width: 22px; height: 22px;', '', true),\n        style: 'float: left;'\n      });\n      this._openSettings = new qx.ui.command.Command('Ctrl+S');\n      this._openSettings.addListener('execute', function() {\n        cv.ui.NotificationCenter.getInstance().show();\n        this.__settings.show();\n      }, this);\n      cv.TemplateEngine.getInstance().getCommands().add('open-settings', this._openSettings);\n      qx.dom.Element.insertBegin(button, document.querySelector('#notification-center footer'));\n      qx.event.Registration.addListener(button, 'tap', function() {\n        this.__settings.show();\n      }, this);\n\n      //add to DOM\n      qx.theme.manager.Meta.getInstance().setTheme(cv.theme.Dark);\n\n      // Initialize tooltip manager (currently disable as it requires a root with basic layout\n      // and that breaks the inline container sizes)\n      // qx.ui.tooltip.Manager.getInstance();\n\n      this._inline = new qx.ui.root.Inline(document.querySelector('#qxsettings > div'), true, false);\n      this._inline.setLayout(new qx.ui.layout.VBox());\n      this.__settings = new cv.plugins.openhab.Settings();\n      this.__settings.exclude();\n      this._inline.add(this.__settings, {flex: 1});\n    },\n\n    /**\n     * Handles notification messages from backend\n     * @param e {Event}\n     * @protected\n     */\n    _onNotification: function(e) {\n      if (!e.data) {\n        this.error('invalid content received from SSE: ', e);\n      }\n      const json = typeof e.data === 'object' ? e.data : JSON.parse(e.data);\n      this.__notificationRouter.dispatchMessage(json.topic || 'cv.backend', json);\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this._disposeObjects('__settings', '_openSettings');\n    this.__notificationRouter = null;\n  },\n\n  defer: function(statics) {\n    // initialize on load\n    statics.getInstance();\n  }\n});\n"
  ]
}