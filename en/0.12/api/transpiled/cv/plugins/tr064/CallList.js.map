{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/tr064/CallList.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Refresh",
    "Update",
    "construct",
    "props",
    "__TAMeventAttached",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "parser",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "parseRefresh",
    "transform",
    "value",
    "events",
    "properties",
    "device",
    "check",
    "init",
    "max",
    "columns",
    "TAM",
    "TAMColor",
    "TAMwait",
    "TAMwaitColor",
    "TAMplay",
    "TAMplayColor",
    "TAMstop",
    "TAMstopColor",
    "typeIncoming",
    "typeIncomingColor",
    "typeMissed",
    "typeMissedColor",
    "typeOutgoing",
    "typeOutgoingColor",
    "typeActiveIncoming",
    "typeActiveIncomingColor",
    "typeRejectedIncoming",
    "typeRejectedIncomingColor",
    "typeActiveOutgoing",
    "typeActiveOutgoingColor",
    "typeUnknown",
    "typeUnknownColor",
    "members",
    "__calllistUri",
    "__calllistList",
    "undefined",
    "__refreshingCalllist",
    "_getInnerDomString",
    "refreshCalllist",
    "_setupRefreshAction",
    "_timer",
    "event",
    "Timer",
    "getRefresh",
    "addListener",
    "start",
    "_update",
    "address",
    "_displayCalllist",
    "self",
    "clLi",
    "getDomElement",
    "getElementsByClassName",
    "sid",
    "replace",
    "html",
    "types",
    "name",
    "getTypeUnknown",
    "color",
    "getTypeUnknownColor",
    "getTypeIncoming",
    "getTypeIncomingColor",
    "getTypeMissed",
    "getTypeMissedColor",
    "getTypeOutgoing",
    "getTypeOutgoingColor",
    "getTypeActiveIncoming",
    "getTypeActiveIncomingColor",
    "getTypeRejectedIncoming",
    "getTypeRejectedIncomingColor",
    "getTypeActiveOutgoing",
    "getTypeActiveOutgoingColor",
    "forEach",
    "cl",
    "audio",
    "type",
    "Type",
    "Path",
    "getDevice",
    "IconHandler",
    "getInstance",
    "getIconText",
    "getTAM",
    "getTAMColor",
    "getColumns",
    "split",
    "col",
    "Date",
    "Name",
    "Caller",
    "innerHTML",
    "tamList",
    "i",
    "length",
    "addEventListener",
    "__playTAM",
    "_getCallListURI",
    "url",
    "window",
    "fetch",
    "then",
    "response",
    "ok",
    "json",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "title",
    "locale",
    "Manager",
    "tr",
    "severity",
    "message",
    "status",
    "statusText",
    "JSON",
    "stringify",
    "source",
    "getMax",
    "text",
    "str",
    "DOMParser",
    "parseFromString",
    "itemList",
    "getElementsByTagName",
    "childrenList",
    "children",
    "entry",
    "ii",
    "nodeName",
    "textContent",
    "push",
    "fireEvent",
    "error",
    "element",
    "previousElementSibling",
    "__TAMstop",
    "readyState",
    "__TAMwait",
    "paused",
    "playPromise",
    "play",
    "__TAMplay",
    "pause",
    "currentTime",
    "getTAMwait",
    "getTAMwaitColor",
    "getTAMplay",
    "getTAMplayColor",
    "getTAMstop",
    "getTAMstopColor",
    "defer",
    "loader",
    "util",
    "ScriptLoader",
    "addStyles",
    "addHandler",
    "plugins",
    "tr064",
    "CallList",
    "WidgetFactory",
    "registerClass"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* CallList.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * The TR-064 plugin and widget creates a interface to routers that are\n * configured by the TR-064 protocol, like the well known Fritz!Box routers.\n * \n * The protocol is described at: https://avm.de/service/schnittstellen/\n * \n * @author Christian Mayer\n * @since 0.11.0\n * @asset(plugins/tr064/*)\n */\n\nqx.Class.define('cv.plugins.tr064.CallList', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Refresh, cv.ui.common.Update],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (props) {\n    this.base(arguments, props);\n    this.__TAMeventAttached = {};\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      const data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path);\n      cv.parser.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function () {\n      return {\n        'device': {},\n        'max': {\n          transform: function (value) {\n            return +value;\n          }\n        },\n        'columns': { 'default': 'type;date;nameOrCaller;tam' },\n        'TAM':          { 'default': 'phone_answering' },\n        'TAMColor':     { 'default': '' },\n        'TAMwait':      { 'default': 'control_reload' },\n        'TAMwaitColor': { 'default': '' },\n        'TAMplay':      { 'default': 'audio_play' },\n        'TAMplayColor': { 'default': '' },\n        'TAMstop':      { 'default': 'phone_answering' },\n        'TAMstopColor': { 'default': '' },\n        'typeIncoming':               { 'default': 'phone_call_in' },\n        'typeIncomingColor':          { 'default': '' },\n        'typeMissed':                 { 'default': 'phone_missed_in' },\n        'typeMissedColor':            { 'default': '' },\n        'typeOutgoing':               { 'default': 'phone_call_out' },\n        'typeOutgoingColor':          { 'default': '' },\n        'typeActiveIncoming':         { 'default': 'phone_ring_in' },\n        'typeActiveIncomingColor':    { 'default': '' },\n        'typeRejectedIncoming':       { 'default': 'phone_call_end_in' },\n        'typeRejectedIncomingColor':  { 'default': '' },\n        'typeActiveOutgoing':         { 'default': 'phone_ring_out' },\n        'typeActiveOutgoingColor':    { 'default': '' },\n        'typeUnknown':                { 'default': 'text_question_mark' },\n        'typeUnknownColor':           { 'default': '' }\n      };\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'tr064ListRefreshed': 'qx.event.type.Event' // event to support unit test\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    device: {\n      check: 'String',\n      init: ''\n    },\n    max: {\n      check: 'Number',\n      init: 0\n    },\n    columns:      { check: 'String' },\n    TAM:          { check: 'String' },\n    TAMColor:     { check: 'String' },\n    TAMwait:      { check: 'String' },\n    TAMwaitColor: { check: 'String' },\n    TAMplay:      { check: 'String' },\n    TAMplayColor: { check: 'String' },\n    TAMstop:      { check: 'String' },\n    TAMstopColor: { check: 'String' },\n    typeIncoming:               { check: 'String' },\n    typeIncomingColor:          { check: 'String' },\n    typeMissed:                 { check: 'String' },\n    typeMissedColor:            { check: 'String' },\n    typeOutgoing:               { check: 'String' },\n    typeOutgoingColor:          { check: 'String' },\n    typeActiveIncoming:         { check: 'String' },\n    typeActiveIncomingColor:    { check: 'String' },\n    typeRejectedIncoming:       { check: 'String' },\n    typeRejectedIncomingColor:  { check: 'String' },\n    typeActiveOutgoing:         { check: 'String' },\n    typeActiveOutgoingColor:    { check: 'String' },\n    typeUnknown:                { check: 'String' },\n    typeUnknownColor:           { check: 'String' }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __calllistUri: '',\n    __calllistList: undefined,\n    __refreshingCalllist: false,\n    /**\n     * Prevent warning \"Reference values are shared across all instances\"\n     * as the keys are unique a share doesn't matter:\n     * @lint ignoreReferenceField(__TAMeventAttached)\n     */\n    __TAMeventAttached: null,\n    \n    _getInnerDomString: function () {\n      this.refreshCalllist('initial');\n      return '<div class=\"actor\"><table class=\"TR064_calllist\"><tr><td>Loading TR-064...</td></tr></table></div>';\n    },\n    _setupRefreshAction: function() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', function () {\n        if (!this.__refreshingCalllist) {\n          this.refreshCalllist('timer');\n        }\n      }, this);\n      this._timer.start();\n    },\n    _update: function(address, value) {\n      if (!this.__refreshingCalllist) {\n        this.refreshCalllist('update');\n      }\n    },\n      \n    _displayCalllist: function() {\n      const self = this;\n      const clLi = this.getDomElement().getElementsByClassName('TR064_calllist')[0];\n      const sid = this.__calllistUri ? this.__calllistUri.replace(/.*sid=/, '') : '';\n      let html = '';\n      const types = {\n        0: {name: this.getTypeUnknown(), color: this.getTypeUnknownColor()},\n        1: {name: this.getTypeIncoming(), color: this.getTypeIncomingColor()},\n        2: {name: this.getTypeMissed(), color: this.getTypeMissedColor()},\n        3: {name: this.getTypeOutgoing(), color: this.getTypeOutgoingColor()},\n        9: {name: this.getTypeActiveIncoming(), color: this.getTypeActiveIncomingColor()},\n        10: {name: this.getTypeRejectedIncoming(), color: this.getTypeRejectedIncomingColor()},\n        11: {name: this.getTypeActiveOutgoing(), color: this.getTypeActiveOutgoingColor()}\n      };\n\n      this.__calllistList.forEach(function(cl) {\n        let audio = '';\n        const type = (cl.Type in types) ? types[cl.Type] : types[0];\n\n        if (cl.Path) {\n          audio = '<audio preload=\"none\">' +\n            '<source src=\"resource/plugins/tr064/proxy.php?device=' + self.getDevice() + '&uri='+cl.Path+'%26sid='+sid+'\">' +\n            '</audio>' +\n            '<div class=\"tam clickable\">' +\n            cv.IconHandler.getInstance().getIconText(self.getTAM(), '*', '*', self.getTAMColor()) +\n            '</div>';\n        }\n        \n        html += '<tr>';\n        self.getColumns().split(';').forEach(function(col) {\n          switch (col) {\n            case 'type':\n              html += '<td>' + cv.IconHandler.getInstance().getIconText(type.name, '*', '*', type.color) + '</td>';\n              break;\n            \n            case 'date':\n              html += '<td>' + cl.Date + '</td>';\n              break;\n            \n            case 'name':\n              html += '<td>' + cl.Name + '</td>';\n              break;\n            \n            case 'caller':\n              html += '<td>' + cl.Caller + '</td>';\n              break;\n            \n            case 'nameOrCaller':\n              if (cl.Name !== '') {\n                html += '<td>' + cl.Name + '</td>';\n              } else {\n                html += '<td>' + cl.Caller + '</td>';\n              }\n              break;\n            \n            case 'tam':\n              html += '<td>' + audio + '</td>';\n              break;\n          }\n        });\n        html += '</tr>';\n      });\n      clLi.innerHTML = html;\n      const tamList = clLi.getElementsByClassName('tam');\n      for (let i = 0; i < tamList.length; i++) {\n        tamList[i].addEventListener('click', function () {\n          self.__playTAM(this);\n        });\n      }\n    },\n    \n    /**\n     * Fetch the TR-064 resource\n     *   /upnp/control/x_contact urn:dslforum-org:service:X_AVM-DE_OnTel:1 \n     *   GetCallList\n     */\n    _getCallListURI: function() {\n      const self = this;\n      const url = 'resource/plugins/tr064/soap.php?device=' + this.getDevice() + '&location=upnp/control/x_contact&uri=urn:dslforum-org:service:X_AVM-DE_OnTel:1&fn=GetCallList';\n\n      window.fetch(url)\n        .then(function(response) {\n          if (response.ok) {\n            return response.json(); \n          }\n          // else:\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr('Reading URL \"%1\" failed with status \"%2\": \"%2\"', response.url, response.status, response.statusText)\n          });\n          self.__calllistUri = '<fail>';\n          return null;\n        })\n        .then(function(data) {\n          if (typeof data === 'string') {\n            self.__calllistUri = data;\n            self.refreshCalllist('getCallListURI');\n          } else {\n            cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n              title: qx.locale.Manager.tr('TR-064 communication response error'),\n              severity: 'urgent',\n              message: qx.locale.Manager.tr('Reading URL \"%1\" failed with content: \"%2\"', url, JSON.stringify(data))\n            });\n            self.__calllistUri = '<fail>';\n          }\n        });\n    },\n\n    refreshCalllist: function(source) {\n      this.__refreshingCalllist = true;\n      \n      if (this.__calllistUri === '<fail>') {\n        return; // this problem won't fix anymore during this instance\n      }\n      \n      if (this.__calllistUri === '') {\n        this._getCallListURI();\n        return;\n      }\n\n      const self = this;\n      const url = 'resource/plugins/tr064/proxy.php?device=' + this.getDevice() + '&uri=' + this.__calllistUri + '%26max=' + this.getMax();\n\n      window.fetch(url)\n        .then(function(response) {\n          if (response.ok) {\n            return response.text(); \n          }\n          // else:\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr('Reading URL \"%1\" failed with status \"%2\": \"%2\"', response.url, response.status, response.statusText)\n          });\n          return '<xml/>';\n        })\n        .then(function(str) {\n          return (new window.DOMParser()).parseFromString(str, 'text/xml');\n        })\n        .then(function(data) {\n          self.__calllistList = [];\n          const itemList = data.getElementsByTagName('Call');\n          for (let i = 0; i < itemList.length; i++) {\n            const childrenList = itemList[i].children;\n            const entry = {};\n            for (let ii = 0; ii < childrenList.length; ii++) {\n              entry[childrenList[ii].nodeName] = childrenList[ii].textContent;\n            }\n            self.__calllistList.push(entry);\n          }\n          self._displayCalllist();\n          self.__refreshingCalllist = false;\n          self.fireEvent('tr064ListRefreshed');\n        })\n        .catch(function(error) {\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr('refreshCalllist() error: \"%1\"', JSON.stringify(error))\n          });\n          self.error('TR-064 refreshCalllist() error:', error);\n        });\n    },\n    \n    /**\n     * The EventListener for click on the TAM button.\n     * @param element\n     */\n    __playTAM: function(element) {\n      const self = this;\n      const audio = element.previousElementSibling;\n\n      if (!this.__TAMeventAttached[audio]) {\n        audio.addEventListener('ended', function () {\n          self.__TAMstop(element);\n        });\n        this.__TAMeventAttached[audio] = true;\n      }\n      \n      if (audio.readyState < 4) { // not ready yet\n        this.__TAMwait(element);\n      }\n      \n      if (audio.paused) {\n        const playPromise = audio.play();\n        if (playPromise !== undefined) {\n          playPromise\n            .then(function() {\n              self.__TAMplay(element);\n            })\n            .catch(function() { /*NOP*/ });\n        }\n      } else {\n        audio.pause();\n        audio.currentTime = 0;\n        this.__TAMstop(element);\n      }\n    },\n    \n    __TAMwait: function(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconText(this.getTAMwait(), '*', '*', this.getTAMwaitColor());\n    },\n    \n    __TAMplay: function(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconText(this.getTAMplay(), '*', '*', this.getTAMplayColor());\n    },\n    \n    __TAMstop: function(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconText(this.getTAMstop(), '*', '*', this.getTAMstopColor());\n    }\n  },\n\n  defer: function(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/tr064/tr064.css');\n    cv.parser.WidgetParser.addHandler('calllist', cv.plugins.tr064.CallList);\n    cv.ui.structure.WidgetFactory.registerClass('calllist', statics);\n  }\n\n});\n"
  ]
}