{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/OpenweatherMap.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Refresh",
    "construct",
    "props",
    "refresh",
    "__options",
    "Object",
    "keys",
    "forEach",
    "key",
    "TemplateEngine",
    "getInstance",
    "isDomFinished",
    "_refreshAction",
    "event",
    "message",
    "Bus",
    "subscribe",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "parser",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseRefresh",
    "target",
    "properties",
    "cssClass",
    "check",
    "nullable",
    "lang",
    "owID",
    "q",
    "lat",
    "lon",
    "units",
    "type",
    "forecast24hItems",
    "forecastDailyhItems",
    "showSunrise",
    "detailItems",
    "appid",
    "description",
    "members",
    "_getInnerDomString",
    "classes",
    "getCssClass",
    "getPath",
    "_setupRefreshAction",
    "_timer",
    "Timer",
    "getRefresh",
    "addListener",
    "start",
    "elem",
    "$",
    "getDomElement",
    "openweathermap",
    "defer",
    "loader",
    "util",
    "ScriptLoader",
    "addStyles",
    "addScripts",
    "addHandler",
    "plugins",
    "OpenweatherMap",
    "WidgetFactory",
    "registerClass"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* OpenweatherMap.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This plugins integrates OpenWeatherMap data.\n *\n * @author Stefan Borchert (stefan@borchert.cc)\n * @author Matthias\n * @since 0.9.0\n * @asset(plugins/openweathermap/owm_core.js)\n * @asset(plugins/openweathermap/owm_basic_style.css)\n * @asset(plugins/openweathermap/owm_weathericon.css)\n * @asset(plugins/openweathermap/font/weathericons-regular-webfont.eot)\n * @asset(plugins/openweathermap/font/weathericons-regular-webfont.woff)\n * @asset(plugins/openweathermap/font/weathericons-regular-webfont.ttf)\n */\nqx.Class.define('cv.plugins.OpenweatherMap', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: cv.ui.common.Refresh,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    props.refresh *= 60;\n    this.base(arguments, props);\n    this.__options = {};\n    Object.keys(props).forEach(function (key) {\n      if (props[key]) {\n        this.__options[key] = props[key];\n      }\n    }, this);\n    if (cv.TemplateEngine.getInstance().isDomFinished()) {\n      this._refreshAction();\n    } else {\n      qx.event.message.Bus.subscribe('setup.dom.finished', function () {\n        // init once\n        this._refreshAction();\n      }, this);\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      const data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function () {\n      return {\n        'class': { target: 'cssClass' },\n        'lang':   { },\n        'owID':  { },\n        'q':   { },\n        'lat':   { },\n        'lon':   { },\n        'units':   { },\n        'type':   { },\n        'forecast24hItems':   { },\n        'forecastDailyItems':   { },\n        'detailItems':   { },\n        'showSunrise': { },\n        'appid':   { },\n        'description':   { }\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    cssClass: {\n      check: 'String',\n      nullable: true\n    },\n    lang: {\n      check: 'String',\n      nullable: true\n    },\n    owID: {\n      check: 'String',\n      nullable: true\n    },\n    q: {\n      check: 'String',\n      nullable: true\n    },\n    lat: {\n      check: 'String',\n      nullable: true\n    },\n    lon: {\n      check: 'String',\n      nullable: true\n    },\n    units: {\n      check: 'String',\n      nullable: true\n    },\n    type: {\n      check: 'String',\n      nullable: true\n    },\n    forecast24hItems: {\n      check: 'String',\n      nullable: true\n    },\n    forecastDailyhItems: {\n      check: 'String',\n      nullable: true\n    },\n    showSunrise: {\n      check: 'String',\n      nullable: true\n    },\n    detailItems: {\n      check: 'String',\n      nullable: true\n    },\n    appid: {\n      check: 'String',\n      nullable: true\n    },\n    description: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __options: null,\n\n    _getInnerDomString: function() {\n      let classes = 'widget clearfix text openweathermap';\n      if (this.getCssClass()) {\n        classes+=' '+this.getCssClass();\n      }\n      return '<div class=\"'+classes+'\"><div id=\"owm_' + this.getPath() + '\" class=\"openweathermap_value\"></div></div>';\n    },\n\n    _setupRefreshAction: function() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', this._refreshAction, this);\n      this._timer.start();\n      // call once immediately\n      this._refreshAction();\n    },\n\n    _refreshAction: function() {\n      const elem = $(this.getDomElement());\n      elem.openweathermap(this.__options);\n    }\n  },\n\n  defer: function(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/openweathermap/owm_basic_style.css');\n    loader.addStyles('plugins/openweathermap/owm_weathericon.css');\n    loader.addScripts('plugins/openweathermap/owm_core.js');\n    // register the parser\n    cv.parser.WidgetParser.addHandler('openweathermap', cv.plugins.OpenweatherMap);\n    cv.ui.structure.WidgetFactory.registerClass('openweathermap', statics);\n  }\n});\n"
  ]
}