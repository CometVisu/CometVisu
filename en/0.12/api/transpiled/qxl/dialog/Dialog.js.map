{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_dialog_v3_2_0/source/class/qxl/dialog/Dialog.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "window",
    "Window",
    "include",
    "qxl",
    "dialog",
    "MDialog",
    "statics",
    "__useBlocker",
    "useBlocker",
    "value",
    "Dialog",
    "getInstanceByType",
    "alert",
    "message",
    "callback",
    "context",
    "caption",
    "Alert",
    "image",
    "show",
    "error",
    "warning",
    "confirm",
    "Confirm",
    "prompt",
    "Prompt",
    "select",
    "options",
    "allowCancel",
    "defaultOptions",
    "label",
    "core",
    "Init",
    "getApplication",
    "tr",
    "Select",
    "form",
    "formData",
    "Assert",
    "assertMap",
    "Form",
    "registerFormElementHandlers",
    "MForm",
    "construct",
    "properties",
    "set",
    "visibility",
    "allowClose",
    "allowMaximize",
    "allowMinimize",
    "alwaysOnTop",
    "modal",
    "movable",
    "resizable",
    "showClose",
    "showMaximize",
    "showMinimize",
    "showStatusbar",
    "setLayout",
    "layout",
    "Grow",
    "root",
    "getRoot",
    "add",
    "__blocker",
    "Blocker",
    "setOpacity",
    "getBlockerOpacity",
    "setColor",
    "getBlockerColor",
    "FocusHandler",
    "getInstance",
    "addRoot",
    "addListener",
    "center",
    "_createWidgetContent",
    "setMessage",
    "_handleEscape",
    "check",
    "nullable",
    "event",
    "apply",
    "init",
    "blockerColor",
    "blockerOpacity",
    "members",
    "__previousFocus",
    "isUseBlocker",
    "maxWindowZIndex",
    "getZIndex",
    "windows",
    "getWindows",
    "i",
    "length",
    "zIndex",
    "Math",
    "max",
    "setZIndex",
    "blockContent",
    "setVisibility",
    "getActiveWidget",
    "blur",
    "e",
    "hide",
    "unblock",
    "focus",
    "destruct",
    "removeListener"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/qooxdoo/qxl.dialog\n\n   Copyright:\n     2007-2020 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     *  Christian Boulanger (cboulanger)\n     *  Derrell Lipman (derrell)\n\n************************************************************************ */\n\n\n/**\n * Base class for dialog widgets\n * @ignore(qxl.dialog.alert)\n * @ignore(qxl.dialog.error)\n * @ignore(qxl.dialog.warning)\n * @ignore(qxl.dialog.confirm)\n * @ignore(qxl.dialog.prompt)\n * @ignore(qxl.dialog.form)\n * @ignore(qxl.dialog.select)\n * @ignore(Promise)\n *\n */\nqx.Class.define(\"qxl.dialog.Dialog\", {\n  extend: qx.ui.window.Window,\n  include: [ qxl.dialog.MDialog ],\n  \n  statics: {\n    /**\n     * for backwards-compability\n     * @type {Boolean}\n     */\n    __useBlocker: false,\n\n    /**\n     * Enforce the use of a coloured blocker.\n     * Added for backwards-compability with pre-1.2 versions\n     * @param  value {Boolean}\n     * @return {void}\n     */\n    useBlocker: function(value) {\n      qxl.dialog.Dialog.__useBlocker = value;\n    },\n\n    /**\n     * Returns a dialog instance by type\n     * @param type {String} The dialog type to get\n     * @return {qxl.dialog.Dialog}\n     */\n    getInstanceByType: qxl.dialog.MDialog.getInstanceByType,\n\n    /**\n     * Shortcut for alert dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    alert: function(message=\"\", callback=null, context=null, caption=\"\") {\n      return new qxl.dialog.Alert({\n        message, callback, context, caption, image: \"qxl.dialog.icon.info\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for error dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    error(message=\"\", callback=null, context=null, caption=\"\") {\n      return new qxl.dialog.Alert({\n        message, callback, context, caption, image: \"qxl.dialog.icon.error\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for warning dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    warning(message=\"\", callback=null, context=null, caption=\"\") {\n      return new qxl.dialog.Alert({\n        message, callback, context, caption, image: \"qxl.dialog.icon.warning\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for confirm dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Confirm} The widget instance\n     */\n    confirm(message=\"\", callback=null, context=null, caption=\"\") {\n      return new qxl.dialog.Confirm({message, callback, context, caption}).show();\n    },\n\n    /**\n     * Shortcut for prompt dialog\n     * @param message {String} The message to display\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param value {String} The default value of the prompt textfield\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Prompt} The widget instance\n     *\n     */\n    prompt(message=\"\", callback=null, context=null, value=\"\", caption=\"\") {\n      return new qxl.dialog.Prompt({message, callback, context, value, caption}).show();\n    },\n\n    /**\n     * Shortcut for select dialog\n     * @param message {String} The message to display\n     * @param options {Array?} Options to select from. If omitted, \"Yes\" (true) or \"No\" (false) will be used.\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param allowCancel {Boolean?} Default: true. If the cancel button is pressed, the result value will be undefined.\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Select} The widget instance\n     */\n    select(message=\"\", options=null, callback=null, context=null, allowCancel=true, caption=\"\") {\n      let defaultOptions = [\n        {label: qx.core.Init.getApplication().tr(\"Yes\"), value: true},\n        {label: qx.core.Init.getApplication().tr(\"No\"), value: false}\n      ];\n      return new qxl.dialog.Select({\n        message, allowCancel, options: options || defaultOptions, callback, context, caption\n      }).show();\n    },\n\n    /**\n     * Shortcut for form dialog. Cannot be reused.\n     * @param message {String} The message to display\n     * @param formData {Map} Map of form data. See {@link qxl.dialog.Form.formData}\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Form} The widget instance\n     */\n    form: function(message, formData, callback=null, context=null, caption=\"\") {\n      qx.core.Assert.assertMap(formData);\n      return new qxl.dialog.Form({message, formData, allowCancel: true, callback, context, caption}).show();\n    },\n\n    // ease use for form element writers\n    registerFormElementHandlers : qxl.dialog.MForm.registerFormElementHandlers\n  },\n\n  /**\n   * Constructor\n   * @param properties {Map|String|undefined} If you supply a map, all the\n   * corresponding properties will be set. If a string is given, use it\n   * as to set the 'message' property.\n   */\n  construct: function(properties) {\n    this.base(arguments);\n    this.set({\n      visibility: \"hidden\",\n      allowClose: false,\n      allowMaximize: false,\n      allowMinimize: false,\n      alwaysOnTop: true,\n      modal: true,\n      movable: false,\n      resizable: false,\n      showClose: false,\n      showMaximize: false,\n      showMinimize: false,\n      showStatusbar: false\n    });\n    this.setLayout(new qx.ui.layout.Grow());\n    let root = qx.core.Init.getApplication().getRoot();\n    root.add(this);\n    // use blocker (for backwards-compability)\n    this.__blocker = new qx.ui.core.Blocker(root);\n    this.__blocker.setOpacity(this.getBlockerOpacity());\n    this.__blocker.setColor(this.getBlockerColor());\n    // handle focus\n    qx.ui.core.FocusHandler.getInstance().addRoot(this);\n    // resize the window when viewport size changes\n    this.addListener(\"resize\", this.center, this);\n    root.addListener(\"resize\", this.center, this);\n    this._createWidgetContent(properties);\n    // set properties from constructor param\n    if (typeof properties == \"object\") {\n      this.set(properties);\n    } else if (typeof properties == \"string\") {\n      this.setMessage(properties);\n    }\n    // escape key\n    root.addListener(\"keyup\", this._handleEscape, this);\n  },\n\n  properties: {\n    /**\n     * Whether the dialog is shown. If true, call the show() method. If false,\n     * call the hide() method.\n     */\n    show: {\n      check: \"Boolean\",\n      nullable: true,\n      event: \"changeShow\",\n      apply: \"_applyShow\"\n    },\n\n    /**\n    * Whether to block the ui while the widget is displayed\n    */\n    useBlocker: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /**\n    * The blocker's color\n    */\n    blockerColor: {\n      check: \"String\",\n      init: \"black\"\n    },\n\n    /**\n    * The blocker's opacity\n    */\n    blockerOpacity: {\n      check: \"Number\",\n      init: 0.5\n    }\n  },\n\n  members: {\n\n    /**\n     * A reference to the widget that previously had the focus\n     */\n    __previousFocus: null,\n\n    /**\n     * Show the widget. Overriding methods must call this parent method.\n     * Returns the widget instance for chaining.\n     * @return {this} The widget instance\n     */\n    show: function() {\n      if (this.isUseBlocker() || qxl.dialog.Dialog.__useBlocker) {\n        // make sure the dialog is above any opened window\n        let root = qx.core.Init.getApplication().getRoot();\n        let maxWindowZIndex = root.getZIndex();\n        let windows = root.getWindows();\n        for (let i = 0; i < windows.length; i++) {\n          let zIndex = windows[i].getZIndex();\n          maxWindowZIndex = Math.max(maxWindowZIndex, zIndex);\n        }\n        this.setZIndex(maxWindowZIndex + 1);\n        this.__blocker.blockContent(maxWindowZIndex);\n      }\n      this.setVisibility(\"visible\");\n      this.__previousFocus = qx.ui.core.FocusHandler\n        .getInstance()\n        .getActiveWidget();\n      if (this.__previousFocus) {\n        try {\n          this.__previousFocus.blur();\n        } catch (e) {}\n        //this.__previousFocus.setFocusable(false);\n      }\n      return this;\n    },\n\n    /**\n     * Hide the widget. Overriding methods must call this parent method.\n     * Returns the widget instance for chaining.\n     * @return {qxl.dialog.Dialog} The widget instance\n     */\n    hide: function() {\n      if (this.isUseBlocker() || qxl.dialog.Dialog.__useBlocker) {\n        this.__blocker.unblock();\n      }\n      if (this.__previousFocus) {\n        try {\n          //this.__previousFocus.setFocusable(true);\n          this.__previousFocus.focus();\n        } catch (e) {}\n      }\n      this.setVisibility(\"hidden\");\n      return this;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    let root = qx.core.Init.getApplication().getRoot();\n    root.removeListener(\"resize\", this.center, this);\n    root.removeListener(\"keyup\",this._handleEscape,this);\n  }\n});\n"
  ]
}