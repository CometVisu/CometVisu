{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_dialog_v3_1_2/source/class/qxl/dialog/formElement/RadioGroup.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "register",
    "qxl",
    "dialog",
    "Dialog",
    "registerFormElementHandlers",
    "_registration",
    "initElement",
    "fieldType",
    "fieldData",
    "key",
    "formElement",
    "ui",
    "form",
    "RadioGroup",
    "orientation",
    "setUserData",
    "options",
    "forEach",
    "item",
    "radioButton",
    "RadioButton",
    "label",
    "value",
    "undefined",
    "add",
    "addToFormController",
    "_formController",
    "addTarget",
    "converter",
    "selectables",
    "getSelectables",
    "selection",
    "selectable",
    "sValue",
    "getUserData",
    "bind"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EACA;AACEC,IAAAA,OAAO,EACP;AACEC,MAAAA,QAAQ,EAAG,oBAAW;AACpBC,QAAAA,GAAG,CAACC,MAAJ,CAAWC,MAAX,CAAkBC,2BAAlB,CACE,YADF,EACgB,KAAKC,aADrB;AAED,OAJH;AAMEA,MAAAA,aAAa,EAAG;AACdC,QAAAA,WAAW,EAAG,qBAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoC;AAChD,cAAIC,WAAW,GAAG,IAAIjB,EAAE,CAACkB,EAAH,CAAMC,IAAN,CAAWC,UAAf,EAAlB;;AACA,cAAIL,SAAS,CAACM,WAAd,EAA2B;AACzBJ,YAAAA,WAAW,CAACK,WAAZ,CAAwB,aAAxB,EAAuCP,SAAS,CAACM,WAAjD;AACD;;AACDN,UAAAA,SAAS,CAACQ,OAAV,CAAkBC,OAAlB,CAA0B,UAAUC,IAAV,EAAgB;AACxC,gBAAIC,WAAW,GAAG,IAAI1B,EAAE,CAACkB,EAAH,CAAMC,IAAN,CAAWQ,WAAf,CAA2BF,IAAI,CAACG,KAAhC,CAAlB;AACAF,YAAAA,WAAW,CAACJ,WAAZ,CACA,OADA,EAEAG,IAAI,CAACI,KAAL,KAAeC,SAAf,GAA2BL,IAAI,CAACI,KAAhC,GAAwCJ,IAAI,CAACG,KAF7C;AAIAX,YAAAA,WAAW,CAACc,GAAZ,CAAgBL,WAAhB;AACD,WAPD,EAOG,IAPH;AAQA,iBAAOT,WAAP;AACD,SAfa;AAiBde,QAAAA,mBAAmB,EAAG,6BAASlB,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,WAApC,EAAiD;AACrE,eAAKgB,eAAL,CAAqBC,SAArB,CAA+BjB,WAA/B,EAA4C,WAA5C,EAAyDD,GAAzD,EAA8D,IAA9D,EAAoE;AAClEmB,YAAAA,SAAS,EAAE,UAAUN,KAAV,EAAiB;AAC1B,kBAAIO,WAAW,GAAGnB,WAAW,CAACoB,cAAZ,EAAlB;AACA,kBAAIC,SAAS,GAAG,EAAhB;;AACA,kBAAIT,KAAJ,EAAW;AACTO,gBAAAA,WAAW,CAACZ,OAAZ,CAAoB,UAAUe,UAAV,EAAsB;AACxC,sBAAIC,MAAM,GAAGD,UAAU,CAACE,WAAX,CAAuB,OAAvB,CAAb;;AACA,sBAAID,MAAM,KAAKX,KAAf,EAAsB;AACpBS,oBAAAA,SAAS,GAAG,CAACC,UAAD,CAAZ;AACD;AACF,iBALD,EAKG,IALH;AAMD;;AACD,qBAAOD,SAAP;AACD,aAZU,CAYTI,IAZS,CAYJ,IAZI;AADuD,WAApE,EAcG;AACDP,YAAAA,SAAS,EAAE,mBAAUG,SAAV,EAAqB;AAC9B,kBAAIT,KAAK,GAAGS,SAAS,CAAC,CAAD,CAAT,CAAaG,WAAb,CAAyB,OAAzB,CAAZ;AACA,qBAAOZ,KAAP;AACD;AAJA,WAdH;AAoBD;AAtCa;AANlB;AAFF,GADA;AAnBArB,EAAAA,GAAG,CAACC,MAAJ,CAAWQ,WAAX,CAAuBG,UAAvB,CAAkCjB,aAAlC,GAAkDA,aAAlD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/qooxdoo/qxl.dialog\n\n   Copyright:\n     2020 Christian Boulanger, Derrell Lipman\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     *  Christian Boulanger (cboulanger)\n     *  Derrell Lipman (derrell)\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.dialog.formElement.RadioGroup\",\n{\n  statics :\n  {\n    register : function() {\n      qxl.dialog.Dialog.registerFormElementHandlers(\n        \"radiogroup\", this._registration);\n    },\n\n    _registration : {\n      initElement : function(fieldType, fieldData, key) {\n        let formElement = new qx.ui.form.RadioGroup();\n        if (fieldData.orientation) {\n          formElement.setUserData(\"orientation\", fieldData.orientation);\n        }\n        fieldData.options.forEach(function (item) {\n          let radioButton = new qx.ui.form.RadioButton(item.label);\n          radioButton.setUserData(\n          \"value\",\n          item.value !== undefined ? item.value : item.label\n          );\n          formElement.add(radioButton);\n        }, this);\n        return formElement;\n      },\n\n      addToFormController : function(fieldType, fieldData, key, formElement) {\n        this._formController.addTarget(formElement, \"selection\", key, true, {\n          converter: function (value) {\n            let selectables = formElement.getSelectables();\n            let selection = [];\n            if (value) {\n              selectables.forEach(function (selectable) {\n                let sValue = selectable.getUserData(\"value\");\n                if (sValue === value) {\n                  selection = [selectable];\n                }\n              }, this);\n            }\n            return selection;\n          }.bind(this)\n        }, {\n          converter: function (selection) {\n            let value = selection[0].getUserData(\"value\");\n            return value;\n          }\n        });\n      }\n    }\n  }\n});\n"
  ]
}