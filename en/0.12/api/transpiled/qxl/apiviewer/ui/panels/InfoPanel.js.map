{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v1_0_0-beta_7/source/class/qxl/apiviewer/ui/panels/InfoPanel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "labelText",
    "icon",
    "_labelText",
    "_icon",
    "qxl",
    "apiviewer",
    "ObjectRegistry",
    "register",
    "properties",
    "element",
    "check",
    "init",
    "nullable",
    "apply",
    "isOpen",
    "docNode",
    "async",
    "members",
    "getPanelTitle",
    "getPanelIcon",
    "canDisplayItem",
    "dao",
    "Error",
    "classname",
    "getItemTypeHtml",
    "node",
    "currentClassDocNode",
    "getItemTitleHtml",
    "getItemTextHtml",
    "showDetails",
    "getItemTooltip",
    "getItemHtml",
    "currentDocNode",
    "Package",
    "parentNode",
    "getPackage",
    "getClass",
    "html",
    "util",
    "StringBuilder",
    "inherited",
    "getType",
    "iconUrl",
    "TreeUtil",
    "getIconUrl",
    "add",
    "ui",
    "panels",
    "InfoPanel",
    "getItemCssClasses",
    "tooltipText",
    "tooltip",
    "ClassViewer",
    "createImageHtml",
    "typeHtml",
    "itemHasDetails",
    "ResourceManager",
    "getInstance",
    "toUri",
    "__encodeObject",
    "getName",
    "getFullName",
    "get",
    "object",
    "toHashCode",
    "getPanelHtml",
    "viewer",
    "uppercaseLabelText",
    "charAt",
    "toUpperCase",
    "substring",
    "getIsOpen",
    "_getPanelItems",
    "showInherited",
    "showIncluded",
    "daoClass",
    "result",
    "fromClassHash",
    "classes",
    "_canShowInherited",
    "getInterfaceHierarchy",
    "getClassHierarchy",
    "classIndex",
    "length",
    "currClassNode",
    "getPanelItemObjects",
    "forEach",
    "item",
    "name",
    "undefined",
    "push",
    "__filterItems",
    "nodeArr",
    "expandProperties",
    "showProtected",
    "showPrivate",
    "showInternal",
    "copyArr",
    "concat",
    "i",
    "isPropertyGenerated",
    "lang",
    "Array",
    "removeAt",
    "isPrivate",
    "isProtected",
    "isInternal",
    "_displayNodes",
    "nodes",
    "getBodyElement",
    "innerHTML",
    "_postProcessLinks",
    "AbstractViewer",
    "fixLinks",
    "highlightCode",
    "style",
    "display",
    "getElement",
    "update",
    "classViewer",
    "setDocNodeAsync",
    "then",
    "getShowInherited",
    "getShowIncluded",
    "getExpandProperties",
    "getShowProtected",
    "getShowPrivate",
    "getShowInternal",
    "sortItems",
    "_applyElement",
    "_titleElement",
    "firstChild",
    "_bodyElement",
    "lastChild",
    "getTitleElement",
    "getItemElement",
    "elemArr",
    "getElementsByTagName",
    "childNodes",
    "getAttribute",
    "toggleShowItemDetails",
    "itemName",
    "fromClassName",
    "textDiv",
    "_showDetails",
    "fromClassNode",
    "getClassByName",
    "getDocNode",
    "arr",
    "tmp",
    "opencloseImgElem",
    "previousSibling",
    "src",
    "exc",
    "error",
    "el",
    "_processed",
    "q",
    "on",
    "e",
    "target",
    "getTarget",
    "mouseup",
    "removeAttribute",
    "setAttribute",
    "Function",
    "onClickValue",
    "click",
    "destruct",
    "statics",
    "ITEM_SPEC_REGEX",
    "SENTENCE_END_REGEX",
    "resolveLinkAttributes",
    "description",
    "packageBaseClass",
    "linkRegex",
    "hit",
    "lastPos",
    "exec",
    "index",
    "createItemLinkHtml",
    "linkText",
    "useIcon",
    "useShortName",
    "classNode",
    "className",
    "label",
    "trim",
    "indexOf",
    "fullName",
    "pos",
    "lastIndexOf",
    "baseClassname",
    "isLoaded",
    "itemNode",
    "cleanItemName",
    "parenPos",
    "__getItemFromClassHierarchy",
    "UiModel",
    "classNodes",
    "l",
    "getItemByNameFromMixins",
    "ClassItem",
    "iconCode",
    "Environment",
    "fullItemName",
    "protocol",
    "host",
    "pathname",
    "location",
    "window",
    "linkHtml",
    "join",
    "createSeeAlsoHtml",
    "see",
    "getSee",
    "seeAlsoLinks",
    "link",
    "isEmpty",
    "seeAlsoHtml",
    "createInheritedFromHtml",
    "createOverwriddenFromHtml",
    "getOverriddenFrom",
    "createIncludedFromHtml",
    "baseClassNode",
    "getItem",
    "createDescriptionHtml",
    "desc",
    "getDescription",
    "__extractFirstSentence",
    "text",
    "ret",
    "substr",
    "descriptionHasDetails",
    "createTypeHtml",
    "typeNode",
    "defaultType",
    "types",
    "typeDimensions",
    "typeName",
    "getTypes",
    "j",
    "dimensions",
    "PRIMITIVES",
    "MDC_LINKS",
    "lastDot",
    "parseInt",
    "createErrorHtml",
    "errors",
    "getErrors",
    "attributes",
    "msg",
    "line",
    "column",
    "createDeprecationHtml",
    "isDeprecated",
    "getDeprecationText",
    "createAccessHtml",
    "isPublic",
    "access",
    "createInfoRequiredByHtml",
    "requiredBy",
    "getRequiredBy",
    "createSourceLinkHtml",
    "getLineNumber",
    "sourceUri",
    "getSourceUri",
    "title",
    "setTitleClass",
    "cssClasses"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * John Spackman (johnspackman) of Zenesis Ltd (http://www.zenesis.com)\n\n************************************************************************ */\n\n/**\n * @require(qx.module.event.GestureHandler)\n * @require(qx.module.Attribute)\n * @require(qx.module.event.Native)\n *\n * @ignore(location.*)\n */\nqx.Class.define(\"qxl.apiviewer.ui.panels.InfoPanel\", {\n\n  type: \"abstract\",\n\n  extend: qx.core.Object,\n\n  /**\n   * Creates an info panel. An info panel shows the information about one item\n   * type (e.g. for public methods).\n   *\n   * @param labelText\n   *          {String} the label text describing the node type.\n   */\n  construct: function(labelText, icon) {\n    this.base(arguments);\n    this._labelText = labelText;\n    this._icon = icon;\n    qxl.apiviewer.ObjectRegistry.register(this);\n  },\n\n  properties: {\n\n    /** top level DOM node of the panel */\n    element: {\n      check: \"Element\",\n      init: null,\n      nullable: true,\n      apply: \"_applyElement\"\n    },\n\n    /** whether the info panel is open */\n    isOpen: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    docNode: {\n      nullable: true,\n      async: true\n    }\n  },\n\n  members: {\n\n    _labelText: null,\n    _icon: null,\n\n    /**\n     * Returns the title of the panel\n     *\n     * @return {String}\n     */\n    getPanelTitle: function() {\n      return this._labelText;\n    },\n\n    /**\n     * Returns the icon for the panel\n     *\n     * @return {String}\n     */\n    getPanelIcon: function() {\n      return this._icon;\n    },\n\n    /**\n     * Whether the panel can display the given item node\n     *\n     * @return {Boolean} Whether the panel can display the given item node\n     */\n    canDisplayItem: function(dao) {\n      throw new Error(\"No implementation for \" + this.classname + \".canDisplayItem\");\n    },\n\n    /**\n     * Get the type HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTypeHtml: function(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the title HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTitleHtml: function(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the description text HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @param showDetails\n     *          {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTextHtml: function(node, currentClassDocNode, showDetails) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    getItemTooltip: function(node, currentClassDocNode) {\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing the information about a class item. The root\n     * HTML element must be a table row (&lt;tr&gt;).\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param showDetails\n     *          {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemHtml: function(node, currentDocNode, showDetails) {\n      if ((node instanceof qxl.apiviewer.dao.Class) || node instanceof qxl.apiviewer.dao.Package) {\n        var parentNode = node.getPackage();\n      } else {\n        var parentNode = node.getClass();\n      }\n      var html = new qx.util.StringBuilder();\n\n      var inherited = parentNode && (parentNode != currentDocNode) && parentNode.getType() == \"class\";\n      var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(node, inherited);\n\n      // Create the title row\n      html.add(\"<tr class=\\\"\", qxl.apiviewer.ui.panels.InfoPanel.getItemCssClasses(node), \"\\\">\");\n      var tooltipText = this.getItemTooltip(node, currentDocNode);\n      var tooltip = tooltipText ? \"title=\\\"\" + tooltipText + \"\\\" alt=\\\"\" + tooltipText + \"\\\"\" : \"\";\n      html.add(\"<td class=\\\"icon\\\" \", tooltip, \">\", qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl), \"</td>\");\n\n      var typeHtml = this.getItemTypeHtml(node, currentDocNode);\n      html.add(\"<td class=\\\"type\\\">\", ((typeHtml) ? (typeHtml + \"&nbsp;\") : \"&nbsp;\"), \"</td>\");\n\n      html.add(\"<td class=\\\"toggle\\\">\");\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        // This node has details -> Show the detail button\n        html.add(\"<img src=\\\"\", qx.util.ResourceManager.getInstance().toUri(\"qxl/apiviewer/image/open.gif\"), \"\\\" onclick=\\\"\", this\n          .__encodeObject(this), \".toggleShowItemDetails('\", node.getName(), \"'\", ((parentNode != currentDocNode) ? \",'\" +\n            parentNode.getFullName() + \"'\" : \"\"), \")\\\"/>\");\n      } else {\n        html.add(\"&#160;\");\n      }\n\n      html.add(\"</td>\");\n\n      html.add(\"<td class=\\\"text\\\">\");\n\n      // Create headline\n      html.add(\"<h3\");\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        html.add(\" onclick=\\\"\", this.__encodeObject(this), \".toggleShowItemDetails('\", node.getName(), \"'\",\n          ((parentNode != currentDocNode) ? \",'\" + parentNode.getFullName() + \"'\" : \"\"), \")\\\">\");\n      } else {\n        html.add(\">\");\n      }\n\n      html.add(this.getItemTitleHtml(node, currentDocNode));\n\n      html.add(\"</h3>\");\n\n      // Create content area\n      html.add(\"<div _itemName=\\\"\", node.getName(), \"\\\">\");\n      html.add(this.getItemTextHtml(node, currentDocNode, showDetails));\n      html.add(\"</div>\");\n\n      html.add(\"</td>\");\n      html.add(\"</tr>\");\n      return html.get();\n    },\n\n    /**\n     * Checks whether a class item has details. This method is abstract. Sub\n     * classes must override it.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {Boolean} whether the class item has details.\n     */\n    itemHasDetails: function(node, currentClassDocNode) {\n      return true;\n    },\n\n    __encodeObject: function(object) {\n      return \"qxl.apiviewer.ObjectRegistry.getObjectFromHashCode('\" + object.toHashCode() + \"')\";\n    },\n\n    /**\n     * Get the HTML fragment of the info panel\n     *\n     * @return {String} HTML fragment of the info panel\n     */\n    getPanelHtml: function(viewer) {\n      var uppercaseLabelText = this._labelText.charAt(0).toUpperCase() + this._labelText.substring(1);\n\n      var html = new qx.util.StringBuilder(\"<div class=\\\"info-panel\\\"><h2>\");\n      html.add(\"<img class=\\\"openclose\\\" src=\\\"\", qx.util.ResourceManager.getInstance().toUri(\n        \"qxl/apiviewer/image/\" + (this.getIsOpen() ? \"close.gif\" : \"open.gif\")), \"\\\" onclick=\\\"\", this.__encodeObject(viewer),\n      \".togglePanelVisibility(\" + this.__encodeObject(this), \")\\\"/> \", \"<span onclick=\\\"\", this.__encodeObject(viewer),\n      \".togglePanelVisibility(\", this.__encodeObject(this), \")\\\">\", uppercaseLabelText, \"</span>\");\n\n      html.add(\"</h2><div></div></div>\");\n\n      return html.get();\n    },\n\n    /**\n     * Returns a list of all items to display in the panel\n     *\n     * @param showInherited\n     *          {Boolean} whether to show inherited items\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the currently displayed class\n     * @return {qxl.apiviewer.dao.ClassItem[]} list of all items to display in the\n     *         panel\n     */\n    _getPanelItems: function(showInherited, showIncluded, daoClass) {\n      if (!daoClass) {\n        return [];\n      }\n\n      var result = [];\n      var fromClassHash = {};\n      var classes;\n\n      // Get the classes to show\n      if (showInherited && this._canShowInherited()) {\n        if (daoClass.getType() == \"interface\") {\n          classes = daoClass.getInterfaceHierarchy();\n        } else {\n          classes = daoClass.getClassHierarchy();\n        }\n      } else {\n        classes = [daoClass];\n      }\n\n      for (var classIndex = 0; classIndex < classes.length; classIndex++) {\n        var currClassNode = classes[classIndex];\n        this.getPanelItemObjects(currClassNode).forEach(item => {\n          var name = item.getName();\n          if (fromClassHash[name] === undefined) {\n            result.push(item);\n            fromClassHash[name] = item;\n          }\n        });\n      }\n\n      return result;\n    },\n\n    _canShowInherited: function() {\n      return false;\n    },\n\n    getPanelItemObjects: function(daoClass, showInherited) {\n      throw new Error(\"No implementation for \" + this.classname + \".getPanelItemObjects\");\n    },\n\n    /**\n     * Filter the item list to display only the desired items.\n     *\n     * @param nodeArr\n     *          {qxl.apiviewer.dao.ClassItem[]} array of class items\n     * @param showProtected\n     *          {Boolean} whether to show protected items\n     * @param showPrivate\n     *          {Boolean} whether to show private items\n     * @param showInternal\n     *          {Boolean} whether to show internal items\n     * @return {qxl.apiviewer.dao.ClassItem[]} filtered list of items\n     */\n    __filterItems: function(nodeArr, expandProperties, showProtected, showPrivate, showInternal) {\n      var copyArr = nodeArr.concat();\n      for (var i = nodeArr.length - 1; i >= 0; i--) {\n        var node = nodeArr[i];\n        if (node.isPropertyGenerated() && !expandProperties) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isPrivate() && !showPrivate) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isProtected() && !showProtected) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isInternal() && !showInternal) {\n          qx.lang.Array.removeAt(copyArr, i);\n        }\n      }\n\n      return copyArr;\n    },\n\n    _displayNodes: function(nodes, currentClassDocNode) {\n      // Show the nodes\n      if (nodes && nodes.length > 0) {\n        var html = new qx.util.StringBuilder(\"<table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" class=\\\"info\\\" width=\\\"100%\\\">\");\n\n        for (var i = 0; i < nodes.length; i++) {\n          html.add(this.getItemHtml(nodes[i], currentClassDocNode, false));\n        }\n\n        html.add(\"</table>\");\n\n        this.getBodyElement().innerHTML = html.get();\n        this._postProcessLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(this.getBodyElement());\n        this.getBodyElement().style.display = !this.getIsOpen() ? \"none\" : \"\";\n        this.getElement().style.display = \"\";\n      } else {\n        this.getElement().style.display = \"none\";\n      }\n    },\n\n    /**\n     * Updates an info panel.\n     *\n     * @param classViewer\n     *          {qxl.apiviewer.ui.ClassViewer} parent class viewer widget.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the currently displayed class\n     * @return {qx.Promise}\n     */\n    update: function(classViewer, currentClassDocNode) {\n      if (!this.getElement()) {\n        return;\n      }\n\n      return this.setDocNodeAsync(currentClassDocNode)\n        .then(() => {\n          var showInherited = classViewer.getShowInherited();\n          var showIncluded = classViewer.getShowIncluded();\n          var nodeArr = this._getPanelItems(showInherited, showIncluded, currentClassDocNode);\n\n          if (nodeArr && nodeArr.length > 0) {\n            var expandProperties = classViewer.getExpandProperties();\n            var showProtected = classViewer.getShowProtected();\n            var showPrivate = classViewer.getShowPrivate();\n            var showInternal = classViewer.getShowInternal();\n\n            nodeArr = this.__filterItems(nodeArr, expandProperties, showProtected, showPrivate, showInternal);\n            classViewer.sortItems(nodeArr);\n          }\n\n          this._displayNodes(nodeArr, currentClassDocNode);\n        });\n    },\n\n    _applyElement: function(element) {\n      this._titleElement = element.firstChild;\n      this._bodyElement = element.lastChild;\n    },\n\n    /** DOM node of the title of the panel */\n    getTitleElement: function() {\n      return this._titleElement;\n    },\n\n    /** DOM node of the body of the panel */\n    getBodyElement: function() {\n      return this._bodyElement;\n    },\n\n    /**\n     * Gets the HTML element showing the details of an item.\n     *\n     * @param panel\n     *          {InfoPanel} the info panel of the item.\n     * @param name\n     *          {String} the item's name.\n     * @return {Element} the HTML element showing the details of the item.\n     * @ignore(getElementsByTagName)\n     */\n    getItemElement: function(name) {\n      var elemArr = this.getBodyElement().getElementsByTagName(\"TBODY\")[0].childNodes;\n\n      for (var i = 0; i < elemArr.length; i++) {\n        // ARRG, should be implemented in a more fault-tolerant way\n        // iterate over tr's, look inside the third \"td\" and there the second\n        // element\n        if (elemArr[i].childNodes[3].childNodes[1].getAttribute(\"_itemName\") == name) {\n          return elemArr[i].childNodes[3].childNodes[1];\n        }\n      }\n    },\n\n    /**\n     * Event handler. Called when the user clicked a button for showing/hiding\n     * the details of an item.\n     *\n     * @param panelHashCode\n     *          {Integer} hash code of the panel object.\n     * @param name\n     *          {String} the name of the item.\n     * @param fromClassName\n     *          {String} the name of the class the item the item was defined in.\n     */\n    toggleShowItemDetails: function(itemName, fromClassName) {\n      try {\n        var textDiv = this.getItemElement(itemName);\n\n        if (!textDiv) {\n          throw Error(\"Element for name '\" + itemName + \"' not found!\");\n        }\n\n        var showDetails = textDiv._showDetails ? !textDiv._showDetails : true;\n        textDiv._showDetails = showDetails;\n\n        var fromClassNode = fromClassName ? qxl.apiviewer.dao.Class.getClassByName(fromClassName) : this.getDocNode();\n        var node = null;\n        for (var arr = this.getPanelItemObjects(fromClassNode), i = 0; i < arr.length && !node; i++) {\n          var tmp = arr[i];\n          if (tmp.getName() == itemName) {\n            node = tmp;\n          }\n        }\n        if (!node) {\n          return;\n        }\n\n        // Update the close/open image\n        var opencloseImgElem = textDiv.parentNode.previousSibling.firstChild;\n        opencloseImgElem.src = qx.util.ResourceManager.getInstance().toUri(\n          showDetails ? \"qxl/apiviewer/image/close.gif\" : \"qxl/apiviewer/image/open.gif\");\n\n        // Update content\n        textDiv.innerHTML = this.getItemTextHtml(node, this.getDocNode(), showDetails);\n        this._postProcessLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(textDiv);\n      } catch (exc) {\n        this.error(\"Toggling item details failed\");\n        this.error(exc);\n      }\n    },\n\n    /**\n     * Convert mouseup and click listener attached to tap / pointerup listener.\n     *\n     * @param el\n     *          {Element} The element containing the links.\n     */\n    _postProcessLinks: function(el) {\n      if (el._processed) {\n        return;\n      }\n      q(el).on(\"pointerup\", function(e) {\n        var target = e.getTarget();\n        var mouseup = target.getAttribute(\"onmouseup\");\n        if (mouseup) {\n          target.removeAttribute(\"onmouseup\");\n          target.setAttribute(\"oldonmouseup\", mouseup);\n        } else {\n          mouseup = target.getAttribute(\"oldonmouseup\");\n        }\n\n        if (mouseup) {\n          Function(mouseup)();\n        }\n      });\n\n      q(el).on(\"tap\", function(e) {\n        var onClickValue = \"event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;\";\n        var target = e.getTarget();\n        var click = target.getAttribute(\"onclick\");\n        if (click && click != onClickValue) {\n          target.removeAttribute(\"onclick\");\n          target.setAttribute(\"oldonclick\", click);\n          target.setAttribute(\"onclick\", onClickValue);\n        } else {\n          click = target.getAttribute(\"oldonclick\");\n        }\n\n        if (click) {\n          Function(click)();\n        }\n      });\n\n      el._processed = true;\n    }\n  },\n\n  /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n  destruct: function() {\n    this._titleElement = this._bodyElement = null;\n  },\n\n  statics: {\n\n    /**\n     * {regexp} The regexp for parsing a item name (e.g.\n     * \"mypackage.MyClass#MY_CONSTANT alternative text\").\n     */\n    ITEM_SPEC_REGEX: /^(([\\w\\.]+)?(#\\w+(\\([^\\)]*\\))?)?)(\\s+(.*))?$/,\n\n    /** {regexp} The regexp that finds the end of a sentence. */\n    SENTENCE_END_REGEX: /[^\\.].\\.(\\s|<)/,\n\n    /**\n     * Creates HTML that replaces all &#64;link-attributes with links.\n     *\n     * @param description\n     *          {String} the description.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use for\n     *          auto-adding packages.\n     * @return {String} HTML fragment\n     */\n    resolveLinkAttributes: function(description, packageBaseClass) {\n      var linkRegex = /\\{@link([^\\}]*)\\}/mg;\n\n      var html = new qx.util.StringBuilder();\n      var hit;\n      var lastPos = 0;\n\n      while ((hit = linkRegex.exec(description)) != null) {\n        // Add the text before the link\n        html.add(description.substring(lastPos, hit.index) + this.createItemLinkHtml(hit[1], packageBaseClass));\n\n        lastPos = hit.index + hit[0].length;\n      }\n\n      // Add the text after the last hit\n      html.add(description.substring(lastPos, description.length));\n\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML for a link to an item.\n     *\n     * @param linkText\n     *          {String} the link text (e.g. \"mypackage.MyClass#myMethod alt\n     *          text\")\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use when\n     *          auto-adding the package to a class name having no package\n     *          specified. If null, no automatic package addition is done.\n     * @param useIcon\n     *          {Boolean?true} whether to add an icon to the link.\n     * @param useShortName\n     *          {Boolean?false} whether to use the short name.\n     * @return {String} HTML fragment of the link\n     */\n    createItemLinkHtml: function(linkText, packageBaseClass, useIcon, useShortName) {\n      var classNode = null;\n      if (useIcon == null) {\n        useIcon = true;\n      }\n\n      var className;\n      var itemName = null;\n      var label = \"\";\n      var style = \"\";\n\n      if (typeof linkText == \"string\") {\n        linkText = linkText.trim();\n\n        if (linkText.charAt(0) == \"\\\"\" || linkText.charAt(0) == \"<\") {\n          // This is a String or a link to a URL -> Just use it as it is\n          return linkText;\n        }\n\n        // This is a link to another class or method -> Create an item link\n        // Separate item name from label\n        var hit = this.ITEM_SPEC_REGEX.exec(linkText);\n\n        if (hit == null) {\n          // Malformed item name\n          return linkText;\n        }\n        className = hit[2];\n        itemName = hit[3];\n        label = hit[6];\n\n        // Make the item name absolute\n        if (className == null || className.length == 0) {\n          // This is a relative link to a method -> Add the current class\n          className = packageBaseClass.getFullName();\n        } else if (packageBaseClass && className.indexOf(\".\") == -1) {\n          classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n\n          // classNode could be a native JS constructor (String, Boolean, ...)\n          if (!classNode || !classNode.classname || classNode.getPackage().getName() !== \"\") {\n            // The class name has no package -> Use the same package as the\n            // current class\n            if (packageBaseClass instanceof qxl.apiviewer.dao.Package) {\n              className = packageBaseClass.getFullName() + \".\" + className;\n            } else {\n              let fullName = packageBaseClass.getFullName();\n              let pos = fullName.lastIndexOf(\".\");\n              let baseClassname = fullName.substring(pos + 1);\n              if (baseClassname == className) {\n                className = fullName;\n                classNode = packageBaseClass;\n              } else {\n                className = fullName.substring(0, pos + 1) + className;\n              }\n            }\n          }\n        }\n\n        // Get the node info\n        if (label == null || label.length == 0) {\n          // We have no label -> Use the item name as label\n          label = hit[1];\n        }\n\n        // Add the right icon\n        if (useIcon) {\n          if (!classNode) {\n            classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n          }\n\n          // If the class is not loaded, then itemNode is not available - the only side effect of which is that\n          //  the icon is not available.  However, this is acceptable because the only time the classes might\n          //  not be loaded will be if referenced from within comments and where the class is not a dependent\n          //  class, in which cases icons are not needed.\n          if (classNode && classNode.isLoaded()) {\n            var itemNode;\n\n            if (itemName) {\n              // The links points to a item of the class\n              var cleanItemName = itemName.substring(1);\n              var parenPos = cleanItemName.indexOf(\"(\");\n\n              if (parenPos != -1) {\n                cleanItemName = cleanItemName.substring(0, parenPos).trim();\n              }\n              itemNode = this.__getItemFromClassHierarchy(cleanItemName, classNode);\n              if (!itemNode && qxl.apiviewer.UiModel.getInstance().getShowIncluded()) {\n                if (qxl.apiviewer.UiModel.getInstance().getShowInherited()) {\n                  var classNodes = [classNode];\n                  if (classNode.getType() == \"interface\") {\n                    classNodes = classNode.getInterfaceHierarchy();\n                  } else {\n                    classNodes = classNode.getClassHierarchy();\n                  }\n                  for (var i = 0, l = classNodes.length; i < l; i++) {\n                    itemNode = classNodes[i].getItemByNameFromMixins(cleanItemName);\n                    if (itemNode) {\n                      break;\n                    }\n                  }\n                } else {\n                  itemNode = classNode.getItemByNameFromMixins(cleanItemName);\n                }\n              }\n            } else {\n              // The links points to the class\n              itemNode = classNode;\n            }\n\n            if (itemNode && !(itemNode instanceof qxl.apiviewer.dao.Package)) {\n              className = itemNode.getFullName?itemNode.getFullName():itemNode.name;\n            }\n          }\n        }\n      } else {\n        itemNode = linkText;\n\n        if (itemNode instanceof qxl.apiviewer.dao.Class) {\n          className = label = itemNode.getFullName();\n        } else if (itemNode instanceof qxl.apiviewer.dao.ClassItem) {\n          className = itemNode.getClass().getName();\n          itemName = label = itemNode.getFullName();\n        }\n      }\n\n      if (itemNode) {\n        var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(itemNode);\n        var iconCode = qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl);\n\n        if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n          if (iconCode.indexOf(\"overlay_\") !== -1) {\n            style = \"margin-left:18px;\";\n          }\n        }\n      }\n\n      // Create a real bookmarkable link\n      // NOTE: The onclick-handler must be added by HTML code. If it\n      // is added using the DOM element then the href is followed.\n      var fullItemName = (itemNode && itemNode.getFullName)? itemNode.getFullName() : classNode && classNode.getFullName ? classNode.getFullName() : className;\n      var protocol, host, pathname;\n\n      // Opera 10.5 loses the reference to \"window\"\n      // See http://bugzilla.qooxdoo.org/show_bug.cgi?id=3516 for details\n      if (qx.core.Environment.get(\"engine.name\") == \"opera\" && qx.core.Environment.get(\"engine.version\") > 9) {\n        protocol = location.protocol;\n        host = location.host;\n        pathname = location.pathname;\n      } else {\n        protocol = window.location.protocol;\n        host = window.location.host;\n        pathname = window.location.pathname;\n      }\n\n      var linkHtml = [\"<span style=\\\"white-space: nowrap;\\\">\", (typeof iconCode != \"undefined\" ? iconCode : \"\"),\n        \"<a style=\\\"\" + style + \"\\\" href=\\\"\" + protocol, \"//\", host, pathname, \"#\", fullItemName, \"\\\" onclick=\\\"return false;\\\"\",\n        \"\\\" onmouseup=\\\"qxl.apiviewer.TabViewController.instance.onSelectItem('\", fullItemName, \"'); return false;\\\"\", \" title=\\\"\",\n        fullItemName, \"\\\">\", label, \"</a></span>\"];\n\n      return linkHtml.join(\"\");\n    },\n\n    /**\n     * Creates the HTML showing the &#64;see attributes of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML showing the &#64;see attributes.\n     */\n    createSeeAlsoHtml: function(node) {\n      var see = node.getSee();\n      if (see.length > 0) {\n        var seeAlsoLinks = new qx.util.StringBuilder();\n\n        for (var i = 0; i < see.length; i++) {\n          if (seeAlsoLinks.length != 0) {\n            seeAlsoLinks.add(\", \");\n          }\n          var link = this.createItemLinkHtml(see[i], node.getClass());\n          if (link.indexOf(\"http\") === 0) {\n            link = \"<a target='_blank' href='\" + link + \"'>\" + link + \"</a>\";\n          }\n          seeAlsoLinks.add(link);\n        }\n\n        if (!seeAlsoLinks.isEmpty()) {\n          // We had @see attributes\n          var seeAlsoHtml = new qx.util.StringBuilder();\n          seeAlsoHtml.add(\"<div class=\\\"item-detail-headline\\\">\", \"See also:\", \"</div>\", \"<div class=\\\"item-detail-text\\\">\",\n            seeAlsoLinks, \"</div>\");\n          return seeAlsoHtml.get();\n        }\n      }\n\n      // Nothing found\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing information about inheritance\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createInheritedFromHtml: function(node, currentClassDocNode) {\n      if (node.getClass().getType() != \"mixin\" && node.getClass() != currentClassDocNode) {\n        var html = new qx.util.StringBuilder(\"<div class=\\\"item-detail-headline\\\">\", \"Inherited from:\", \"</div>\",\n          \"<div class=\\\"item-detail-text\\\">\", qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(node.getClass().getFullName() + \"#\" +\n                node.getName()), \"</div>\");\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is overridden\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @return {String} HTML fragment\n     */\n    createOverwriddenFromHtml: function(node) {\n      if (node.getOverriddenFrom()) {\n        var html = new qx.util.StringBuilder(\"<div class=\\\"item-detail-headline\\\">\", \"Overrides:\", \"</div>\",\n          \"<div class=\\\"item-detail-text\\\">\", qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(node.getOverriddenFrom()\n            .getFullName() +\n                \"#\" + node.getName()), \"</div>\");\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is included from a mixin\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createIncludedFromHtml: function(node, currentClassDocNode) {\n      if (node.getClass() != currentClassDocNode) {\n        if (node.getClass().getType() == \"mixin\") {\n          var html = new qx.util.StringBuilder(\"<div class=\\\"item-detail-headline\\\">\", \"Included from mixin:\", \"</div>\",\n            \"<div class=\\\"item-detail-text\\\">\", qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(node.getClass().getFullName() +\n                  \"#\" + node.getName()), \"</div>\");\n          return html.get();\n        }\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\n     * Gets a class item from baseClassNode. if it is not found there, the\n     * class' hierarchy is searched until the item is found.\n     *\n     * @param itemName\n     *          {String} the name of the item.\n     * @param baseClassNode\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {qxl.apiviewer.dao.ClassItem} the classItem\n     *\n     */\n    __getItemFromClassHierarchy: function(itemName, baseClassNode) {\n      var itemNode = baseClassNode.getItem(itemName);\n      if (itemNode) {\n        return itemNode;\n      }\n      var classNodes = baseClassNode.getClassHierarchy();\n      for (var i = 0, l = classNodes.length; i < l; i++) {\n        var currClassNode = classNodes[i];\n        itemNode = currClassNode.getItem(itemName);\n        if (itemNode) {\n          break;\n        }\n      }\n      return itemNode;\n    },\n\n    /**\n     * Creates the HTML showing the description of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class|qxl.apiviewer.dao.Package?null} the doc node of\n     *          the class to use for auto-adding packages.\n     * @param showDetails\n     *          {Boolean} whether to show details. If <code>false</code> only\n     *          the first sentence of the description will be shown.\n     * @return {String} the HTML showing the description.\n     */\n    createDescriptionHtml: function(node, packageBaseClass, showDetails) {\n      var desc = node.getDescription();\n\n      if (desc) {\n        if (!showDetails) {\n          desc = this.__extractFirstSentence(desc);\n        }\n        return \"<div class=\\\"item-desc\\\">\" + this.resolveLinkAttributes(desc, packageBaseClass) + \"</div>\";\n      }\n      return \"\";\n    },\n\n    /**\n     * Extracts the first sentence from a text.\n     *\n     * @param text\n     *          {String} the text.\n     * @return {String} the first sentence from the text.\n     */\n    __extractFirstSentence: function(text) {\n      var ret = text;\n\n      // Extract first block\n      var pos = ret.indexOf(\"</p>\");\n\n      if (pos != -1) {\n        ret = ret.substr(0, pos + 4);\n\n        var hit = this.SENTENCE_END_REGEX.exec(ret);\n\n        if (hit != null) {\n          ret = text.substring(0, hit.index + hit[0].length - 1) + \"</p>\";\n        }\n      }\n\n      return ret;\n    },\n\n    /**\n     * Returns whether the description of an item has details (has more than one\n     * sentence).\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @return {Boolean} whether the description of an item has details.\n     */\n    descriptionHasDetails: function(node) {\n      var desc = node.getDescription();\n      if (desc) {\n        return this.__extractFirstSentence(desc) != desc;\n      }\n      return false;\n    },\n\n    /**\n     * Creates the HTML showing the type of a doc node.\n     *\n     * @param typeNode\n     *          {qxl.apiviewer.dao.ClassItem} the doc node to show the type for.\n     * @param defaultType\n     *          {String} the type name to use if <code>typeNode</code> is\n     *          <code>null</code> or defines no type.\n     * @param useShortName\n     *          {Boolean?true} whether to use short class names (without\n     *          package).\n     * @return {String} the HTML showing the type.\n     */\n    createTypeHtml: function(typeNode, defaultType, useShortName) {\n      if (useShortName == null) {\n        useShortName = true;\n      }\n\n      var types = [];\n      var typeDimensions, typeName, linkText;\n\n      if (typeNode) {\n        types = typeNode.getTypes();\n      }\n\n      var typeHtml = new qx.util.StringBuilder();\n      if (types.length == 0) {\n        typeHtml.add(defaultType);\n      } else {\n        if (types.length > 1) {\n          typeHtml.add(\"(\");\n        }\n\n        for (var j = 0; j < types.length; j++) {\n          if (j > 0) {\n            typeHtml.add(\" | \");\n          }\n\n          typeName = types[j].type;\n          typeDimensions = types[j].dimensions;\n\n          if (qxl.apiviewer.ui.ClassViewer.PRIMITIVES[typeName]) {\n            if (qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName]) {\n              typeHtml.add(\"<span style=\\\"white-space: nowrap;\\\"><a href=\\\"\" + qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName] +\n                  \"\\\" target=\\\"_blank\\\" title=\\\"\" + typeName + \"\\\">\" + typeName + \"</a></span>\");\n            } else {\n              typeHtml.add(typeName);\n            }\n          } else {\n            linkText = typeName;\n\n            if (useShortName) {\n              var lastDot = typeName.lastIndexOf(\".\");\n\n              if (lastDot != -1) {\n                linkText += \" \" + typeName.substring(lastDot + 1);\n              }\n            }\n            typeHtml.add(qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(linkText, typeNode.getClass(), false, true));\n          }\n\n          if (typeDimensions) {\n            for (var i = 0; i < parseInt(typeDimensions); i++) {\n              typeHtml.add(\"[]\");\n            }\n          }\n        }\n\n        if (types.length > 1) {\n          typeHtml.add(\")\");\n        }\n      }\n\n      return typeHtml.get();\n    },\n\n    /**\n     * Creates the HTML showing the documentation errors of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param currentClassDocNode\n     *          {Map} the doc node of the currently displayed class\n     * @return {String} the HTML showing the documentation errors.\n     */\n    createErrorHtml: function(node, currentClassDocNode) {\n      var errors = node.getErrors();\n\n      if (errors.length > 0) {\n        var html = new qx.util.StringBuilder(\"<div class=\\\"item-detail-error\\\">\", \"Documentation errors:\", \"</div>\");\n\n        for (var i = 0; i < errors.length; i++) {\n          html.add(\"<div class=\\\"item-detail-text\\\">\", errors[i].attributes.msg, \" <br/>\");\n\n          if (errors[i].attributes.line || node.getClass() != currentClassDocNode) {\n            html.add(\"(\");\n\n            if (node.getClass() != currentClassDocNode) {\n              html.add(node.getClass().getFullName(), \"; \");\n            }\n\n            if (errors[i].attributes.line) {\n              html.add(\"Line: \", errors[i].attributes.line);\n              if (errors[i].attributes.column) {\n                html.add(\", Column:\", errors[i].attributes.column);\n              }\n            }\n            html.add(\")\");\n          }\n          html.add(\"</div>\");\n        }\n\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is deprecated\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param itemName\n     *          {String} type of the item, e.g. \"method\", \"property\",\n     *          \"constant\", ...\n     * @return {String} the HTML fragment.\n     */\n    createDeprecationHtml: function(node, itemName) {\n      if (!node.isDeprecated()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add(\"<div class=\\\"item-detail-error\\\">\", \"Deprecated:\", \"</div>\");\n\n      html.add(\"<div class=\\\"item-detail-text\\\">\");\n      var desc = node.getDeprecationText();\n      if (desc) {\n        html.add(desc);\n      } else {\n        html.add(\"This \", itemName, \" is deprecated!\");\n      }\n      html.add(\"</div>\");\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing the access protection for a class item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML fragment.\n     */\n    createAccessHtml: function(node) {\n      if (node.isPublic()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add(\"<div class=\\\"item-detail-headline\\\">\", \"Access:\", \"</div>\");\n      html.add(\"<div class=\\\"item-detail-text\\\">\");\n      var access = [];\n      if (node.isPrivate()) {\n        access.push(\"private\");\n      }\n      if (node.isInternal()) {\n        access.push(\"internal\");\n      }\n      if (node.isProtected()) {\n        access.push(\"protected\");\n      }\n      html.add(access.join(\" \"));\n      html.add(\"</div>\");\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing interfaces requiring this node\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createInfoRequiredByHtml: function(node) {\n      var html = new qx.util.StringBuilder();\n      var requiredBy = node.getRequiredBy();\n      if (requiredBy.length > 0) {\n        html.add(\"<div class=\\\"item-detail-headline\\\">\", \"Required by:\", \"</div>\");\n        for (var i = 0; i < requiredBy.length; i++) {\n          html.add(\"<div class=\\\"item-detail-text\\\">\", qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(requiredBy[i].getFullName() +\n              \"#\" + node.getName()), \"</div>\");\n        }\n      }\n      return html.get();\n    },\n\n    /**\n     * Creates the link to the source file that definen an item\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createSourceLinkHtml: function(node) {\n      if (!node.getLineNumber || !node.getLineNumber()) {\n        return \"\";\n      }\n\n      var sourceUri = qxl.apiviewer.ui.ClassViewer.getSourceUri(node);\n      if (!sourceUri) {\n        return \"\";\n      }\n\n      var title;\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        title = node.getFullName();\n      } else {\n        title = node.getClass().getFullName() + \"#\" + node.getName();\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add(\"<div class=\\\"item-detail-headline\\\">\", \"View Source:\", \"</div>\");\n      html.add(\"<div class=\\\"item-detail-text\\\">\", \"<a href=\\\"\" + sourceUri + \"\\\" target=\\\"_blank\\\">\" + title + \"</a>\", \"</div>\");\n\n      return html.get();\n    },\n\n    /**\n     * Wraps a HTML fragment with a \"span\" element with CSS classes for the\n     * item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @param title\n     *          {String} original title\n     * @return {String} HMTL fragment\n     */\n    setTitleClass: function(node, title) {\n      var html = [\"<span class='\", \"\", \"'>\", title, \"</span>\"];\n      html[1] = this.getItemCssClasses(node);\n      return html.join(\"\");\n    },\n\n    /**\n     * Gets CSS classes for a class item\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {String} CSS classes separated by \" \"\n     */\n    getItemCssClasses: function(node) {\n      var cssClasses = [];\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        if (node.isDeprecated()) {\n          cssClasses.push(\"item-deprecated\");\n        }\n        if (node.isPrivate()) {\n          cssClasses.push(\"item-private\");\n        }\n        if (node.isInternal()) {\n          cssClasses.push(\"item-internal\");\n        }\n        if (node.isProtected()) {\n          cssClasses.push(\"item-protected\");\n        }\n      }\n      return cssClasses.join(\" \");\n    }\n\n  }\n});\n"
  ]
}