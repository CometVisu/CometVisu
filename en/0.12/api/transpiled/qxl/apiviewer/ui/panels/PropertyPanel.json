{
  "className": "qxl.apiviewer.ui.panels.PropertyPanel",
  "packageName": "qxl.apiviewer.ui.panels",
  "name": "PropertyPanel",
  "superClass": "qxl.apiviewer.ui.panels.InfoPanel",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 262,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Til Schneider (til132)\n Sebastian Werner (wpbasti)\n Andreas Ecker (ecker)\n Fabian Jakobs (fjakobs)\n John Spackman (johnspackman) of Zenesis Ltd (http://www.zenesis.com)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 28,
        "column": 13
      },
      "end": {
        "line": 30,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "members": {
    "canDisplayItem": {
      "location": {
        "start": {
          "line": 37,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the panel can display the given item node",
            "type": "Boolean",
            "description": " Whether the panel can display the given item node"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "appearsIn": [
        "qxl.apiviewer.ui.panels.InfoPanel"
      ]
    },
    "_canShowInherited": {
      "location": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "appearsIn": [
        "qxl.apiviewer.ui.panels.InfoPanel"
      ]
    },
    "getPanelItemObjects": {
      "location": {
        "start": {
          "line": 45,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "appearsIn": [
        "qxl.apiviewer.ui.panels.InfoPanel"
      ]
    },
    "__createGeneratedMethodsHtml": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "__createAttributesHtml": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "__createRefinedFromHtml": {
      "location": {
        "start": {
          "line": 137,
          "column": 4
        },
        "end": {
          "line": 149,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the HTML showing whether the item is refined</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {qxl.apiviewer.dao.ClassItem} item to get the the information from",
            "paramName": "node",
            "description": " item to get the the information from",
            "type": "qxl.apiviewer.dao.ClassItem"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} HTML fragment",
            "type": "String",
            "description": " HTML fragment"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getItemTypeHtml": {
      "location": {
        "start": {
          "line": 152,
          "column": 4
        },
        "end": {
          "line": 154,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "appearsIn": [
        "qxl.apiviewer.ui.panels.InfoPanel"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "node\n          {qxl.apiviewer.dao.ClassItem} the doc node of the item.",
            "paramName": "node",
            "description": " the doc node of the item.",
            "type": "qxl.apiviewer.dao.ClassItem"
          },
          {
            "name": "@param",
            "body": "currentClassDocNode\n          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n          class",
            "paramName": "currentClassDocNode",
            "description": " the doc node of the currently displayed\n          class",
            "type": "qxl.apiviewer.dao.Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the HTML showing the information about the method.",
            "type": "String",
            "description": " the HTML showing the information about the method."
          }
        ]
      }
    },
    "getItemTitleHtml": {
      "location": {
        "start": {
          "line": 157,
          "column": 4
        },
        "end": {
          "line": 159,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "appearsIn": [
        "qxl.apiviewer.ui.panels.InfoPanel"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "node\n          {qxl.apiviewer.dao.ClassItem} the doc node of the item.",
            "paramName": "node",
            "description": " the doc node of the item.",
            "type": "qxl.apiviewer.dao.ClassItem"
          },
          {
            "name": "@param",
            "body": "currentClassDocNode\n          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n          class",
            "paramName": "currentClassDocNode",
            "description": " the doc node of the currently displayed\n          class",
            "type": "qxl.apiviewer.dao.Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the HTML showing the information about the method.",
            "type": "String",
            "description": " the HTML showing the information about the method."
          }
        ]
      }
    },
    "getItemTextHtml": {
      "location": {
        "start": {
          "line": 170,
          "column": 4
        },
        "end": {
          "line": 258,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the HTML showing the information about a property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Map} the doc node of the property.",
            "paramName": "node",
            "description": " the doc node of the property.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "currentClassDocNode {Map} the doc node of the currently displayed class",
            "paramName": "currentClassDocNode",
            "description": " the doc node of the currently displayed class",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "showDetails {Boolean} whether to show the details.",
            "paramName": "showDetails",
            "description": " whether to show the details.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the HTML showing the information about the property.",
            "type": "String",
            "description": " the HTML showing the information about the property."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "appearsIn": [
        "qxl.apiviewer.ui.panels.InfoPanel"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "reset"
    },
    "getElement": {
      "type": "function",
      "name": "getElement",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>element</code>.\n\nFor further details take a look at the property definition: {@link #element}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Element",
            "desc": "Returns the value for element"
          }
        ]
      }
    },
    "setElement": {
      "type": "function",
      "name": "setElement",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>element</code>.\n\nFor further details take a look at the property definition: {@link #element}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Element",
            "paramName": "value",
            "desc": "Value for element"
          }
        ]
      }
    },
    "resetElement": {
      "type": "function",
      "name": "resetElement",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "reset"
    },
    "getIsOpen": {
      "type": "function",
      "name": "getIsOpen",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>isOpen</code>.\n\nFor further details take a look at the property definition: {@link #isOpen}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for isOpen"
          }
        ]
      }
    },
    "isIsOpen": {
      "type": "function",
      "name": "isIsOpen",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>isOpen</code>.\n\nFor further details take a look at the property definition: {@link #isOpen}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for isOpen"
          }
        ]
      }
    },
    "setIsOpen": {
      "type": "function",
      "name": "setIsOpen",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>isOpen</code>.\n\nFor further details take a look at the property definition: {@link #isOpen}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for isOpen"
          }
        ]
      }
    },
    "resetIsOpen": {
      "type": "function",
      "name": "resetIsOpen",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "reset"
    },
    "getDocNode": {
      "type": "function",
      "name": "getDocNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>docNode</code>.\n\nFor further details take a look at the property definition: {@link #docNode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for docNode"
          }
        ]
      }
    },
    "setDocNode": {
      "type": "function",
      "name": "setDocNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>docNode</code>.\n\nFor further details take a look at the property definition: {@link #docNode}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for docNode"
          }
        ]
      }
    },
    "resetDocNode": {
      "type": "function",
      "name": "resetDocNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "reset"
    },
    "getDocNodeAsync": {
      "type": "function",
      "name": "getDocNodeAsync",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "getAsync",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a {@link qx.Promise} which resolves to the (computed) value of the property <code>docNode</code>.\nFor further details take a look at the property definition: {@link #docNode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Promise",
            "desc": "Returns the value for docNode"
          }
        ]
      }
    },
    "setDocNodeAsync": {
      "type": "function",
      "name": "setDocNodeAsync",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.ui.panels.InfoPanel",
      "property": "setAsync",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>docNode</code>, returns a {@link qx.Promise} which resolves when the value change has fully completed (in the case where there are asynchronous apply methods or events).\n\nFor further details take a look at the property definition: {@link #docNode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Promise",
            "desc": "Returns the value for docNode"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for docNode"
          }
        ]
      }
    }
  },
  "descendants": []
}