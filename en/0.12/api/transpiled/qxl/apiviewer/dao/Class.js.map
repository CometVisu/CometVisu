{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v1_0_0-beta_7/source/class/qxl/apiviewer/dao/Class.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "dao",
    "Node",
    "construct",
    "className",
    "_className",
    "_package",
    "Package",
    "getParentPackage",
    "addClass",
    "members",
    "_construct",
    "_destruct",
    "_defer",
    "_staticMethods",
    "_constants",
    "_members",
    "_mixinMembers",
    "_properties",
    "_mixinProperties",
    "_events",
    "_mixinEvents",
    "_superClass",
    "_superInterfaces",
    "_superMixins",
    "_mixins",
    "_loadingPromise",
    "_loaded",
    "load",
    "url",
    "ClassLoader",
    "getBaseUri",
    "replace",
    "RequestUtil",
    "get",
    "then",
    "content",
    "meta",
    "eval",
    "_initMeta",
    "e",
    "error",
    "message",
    "isLoaded",
    "_jsdoc",
    "clazz",
    "jsdoc",
    "Method",
    "destruct",
    "defer",
    "statics",
    "name",
    "data",
    "type",
    "push",
    "Constant",
    "obj",
    "mixin",
    "properties",
    "Property",
    "events",
    "Event",
    "_childControls",
    "arr",
    "forEach",
    "elem",
    "ChildControl",
    "all",
    "findClasses",
    "tmp",
    "p",
    "classes",
    "item",
    "_meta",
    "superClass",
    "_interfaces",
    "interfaces",
    "mixins",
    "Promise",
    "getPackage",
    "getName",
    "getFullName",
    "getPackageName",
    "getType",
    "isAbstract",
    "isStatic",
    "isSingleton",
    "getSuperClass",
    "getChildClasses",
    "_childClassesPromise",
    "descendants",
    "resolve",
    "getInterfaces",
    "getSuperInterfaces",
    "getMixins",
    "getSuperMixins",
    "getIncluder",
    "_includersPromise",
    "getImplementations",
    "_implementationsPromise",
    "getConstructor",
    "getChildControls",
    "getMembers",
    "getMethods",
    "getMixinMembers",
    "getMixinMethods",
    "getStatics",
    "getEvents",
    "getMixinEvents",
    "getProperties",
    "getProperty",
    "i",
    "length",
    "prop",
    "getMixinProperties",
    "getConstants",
    "getSee",
    "map",
    "body",
    "getErrors",
    "getClassHierarchy",
    "includeNativeObjects",
    "result",
    "currentClass",
    "isNative",
    "isNativeObject",
    "getInterfaceHierarchy",
    "add",
    "itf",
    "getAllInterfaces",
    "includeSuperClasses",
    "interfaceNodes",
    "ifaceRecurser",
    "ifaceNode",
    "classNodes",
    "classNode",
    "getItemByNameFromMixins",
    "itemName",
    "getItem",
    "itemListNames",
    "list",
    "j",
    "loadDependedClasses",
    "loadClassList",
    "getDependedClasses",
    "foundClasses",
    "_native_classes",
    "Array",
    "Boolean",
    "Date",
    "Error",
    "Function",
    "Math",
    "Number",
    "Object",
    "RegExp",
    "String",
    "getClassByName",
    "create",
    "nativeClass",
    "undefined",
    "pkg",
    "cls",
    "getClassesByName",
    "classNames",
    "lang",
    "toNativeArray",
    "filter",
    "c",
    "classname"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;AAGAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EAA2C;AACzCC,IAAAA,MAAM,EAAEC,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBC,IADe;;AAGzC;;;;AAIAC,IAAAA,SAAS,EAAE,mBAAUC,SAAV,EAAqB;AAC9B;AACA,WAAKC,UAAL,GAAkBD,SAAlB;AACA,WAAKE,QAAL,GAAgBP,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBM,OAAlB,CAA0BC,gBAA1B,CAA2CJ,SAA3C,CAAhB;;AACA,WAAKE,QAAL,CAAcG,QAAd,CAAuB,IAAvB;AACD,KAZwC;AAczCC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,QAAQ,EAAE,IADH;AAEPK,MAAAA,UAAU,EAAE,IAFL;AAGPC,MAAAA,SAAS,EAAE,IAHJ;AAIPC,MAAAA,MAAM,EAAE,IAJD;AAKPC,MAAAA,cAAc,EAAE,IALT;AAMPC,MAAAA,UAAU,EAAE,IANL;AAOPC,MAAAA,QAAQ,EAAE,IAPH;AAQPC,MAAAA,aAAa,EAAE,IARR;AASPC,MAAAA,WAAW,EAAE,IATN;AAUPC,MAAAA,gBAAgB,EAAE,IAVX;AAWPC,MAAAA,OAAO,EAAE,IAXF;AAYPC,MAAAA,YAAY,EAAE,IAZP;AAaPC,MAAAA,WAAW,EAAE,IAbN;AAcPC,MAAAA,gBAAgB,EAAE,IAdX;AAePC,MAAAA,YAAY,EAAE,IAfP;AAgBPC,MAAAA,OAAO,EAAE,IAhBF;AAkBPC,MAAAA,eAAe,EAAE,IAlBV;AAmBPC,MAAAA,OAAO,EAAE,KAnBF;;AAqBP;;;;;AAKAC,MAAAA,IAAI,EAAE,gBAAY;AAAA;;AAChB,YAAI,KAAKF,eAAT,EAA0B;AACxB,iBAAO,KAAKA,eAAZ;AACD;;AAED,YAAIG,GAAG,GAAG9B,GAAG,CAACC,SAAJ,CAAc8B,WAAd,CAA0BC,UAA1B,KAAyC,cAAzC,GAA0D,KAAK1B,UAAL,CAAgB2B,OAAhB,CAAwB,KAAxB,EAA+B,GAA/B,CAA1D,GAAgG,OAA1G;AACA,eAAO,KAAKN,eAAL,GAAuB3B,GAAG,CAACC,SAAJ,CAAciC,WAAd,CAA0BC,GAA1B,CAA8BL,GAA9B,EAC3BM,IAD2B,CACtB,UAAAC,OAAO,EAAI;AACf,cAAIC,IAAI,GAAGC,IAAI,CAAC,MAAMF,OAAN,GAAgB,GAAjB,CAAf;AACA,iBAAO,KAAI,CAACG,SAAL,CAAeF,IAAf,EACJF,IADI,CACC,YAAM;AACV,YAAA,KAAI,CAACR,OAAL,GAAe,IAAf;AACA,mBAAO,KAAP;AACD,WAJI,CAAP;AAKD,SAR2B,WASrB,UAAAa,CAAC,EAAI;AACV,UAAA,KAAI,CAACC,KAAL,CAAW,yBAAyBZ,GAAzB,GAA+B,GAA/B,GAAqCW,CAAC,CAACE,OAAlD;AACD,SAX2B,CAA9B;AAYD,OA5CM;AA8CPC,MAAAA,QAAQ,EAAE,oBAAY;AACpB,eAAO,KAAKhB,OAAZ;AACD,OAhDM;;AAkDP;;;;;AAKAY,MAAAA,SAAS,EAAE,mBAAUF,IAAV,EAAgB;AAAA;;AACzB,oEAAqBA,IAArB;;AAEA,aAAKO,MAAL,GAAcP,IAAI,CAACQ,KAAL,CAAWC,KAAX,IAAoB,EAAlC;AAEA,aAAKnC,UAAL,GAAkB0B,IAAI,CAAClC,SAAL,GAAiB,CAAC,IAAIJ,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkB8C,MAAtB,CAA6BV,IAAI,CAAClC,SAAlC,EAA6C,IAA7C,EAAmD,WAAnD,CAAD,CAAjB,GAAqF,EAAvG;AACA,aAAKS,SAAL,GAAiByB,IAAI,CAACW,QAAL,GAAgB,CAAC,IAAIjD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkB8C,MAAtB,CAA6BV,IAAI,CAACW,QAAlC,EAA4C,IAA5C,EAAkD,UAAlD,CAAD,CAAhB,GAAkF,EAAnG;AACA,aAAKnC,MAAL,GAAcwB,IAAI,CAACY,KAAL,GAAa,CAAC,IAAIlD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkB8C,MAAtB,CAA6BV,IAAI,CAACY,KAAlC,EAAyC,IAAzC,EAA+C,OAA/C,CAAD,CAAb,GAAyE,EAAvF;AAEA,aAAKnC,cAAL,GAAsB,EAAtB;AACA,aAAKC,UAAL,GAAkB,EAAlB;;AACA,YAAIsB,IAAI,CAACa,OAAT,EAAkB;AAChB,eAAK,IAAIC,IAAT,IAAiBd,IAAI,CAACa,OAAtB,EAA+B;AAC7B,gBAAIE,IAAI,GAAGf,IAAI,CAACa,OAAL,CAAaC,IAAb,CAAX;;AACA,gBAAIC,IAAI,CAACC,IAAL,IAAa,UAAjB,EAA6B;AAC3B,mBAAKtC,UAAL,CAAgBuC,IAAhB,CAAqB,IAAIvD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBsD,QAAtB,CAA+BH,IAA/B,EAAqC,IAArC,EAA2CD,IAA3C,CAArB;AACD,aAFD,MAEO;AACL,mBAAKrC,cAAL,CAAoBwC,IAApB,CAAyB,IAAIvD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkB8C,MAAtB,CAA6BK,IAA7B,EAAmC,IAAnC,EAAyCD,IAAzC,CAAzB;AACD;AACF;AACF;;AAED,aAAKnC,QAAL,GAAgB,EAAhB;AACA,aAAKC,aAAL,GAAqB,EAArB;;AACA,YAAIoB,IAAI,CAAC3B,OAAT,EAAkB;AAChB,eAAK,IAAIyC,KAAT,IAAiBd,IAAI,CAAC3B,OAAtB,EAA+B;AAC7B,gBAAI0C,KAAI,GAAGf,IAAI,CAAC3B,OAAL,CAAayC,KAAb,CAAX;;AACA,gBAAIC,KAAI,CAACC,IAAL,IAAa,UAAjB,EAA6B;AAC3B,kBAAIG,GAAG,GAAG,IAAIzD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkB8C,MAAtB,CAA6BK,KAA7B,EAAmC,IAAnC,EAAyCD,KAAzC,CAAV;;AACA,kBAAIC,KAAI,CAACK,KAAT,EAAgB;AACd,qBAAKxC,aAAL,CAAmBqC,IAAnB,CAAwBE,GAAxB;AACD,eAFD,MAEO;AACL,qBAAKxC,QAAL,CAAcsC,IAAd,CAAmBE,GAAnB;AACD;AACF;AACF;AACF;;AAED,aAAKtC,WAAL,GAAmB,EAAnB;AACA,aAAKC,gBAAL,GAAwB,EAAxB;;AACA,YAAIkB,IAAI,CAACqB,UAAT,EAAqB;AACnB,eAAK,IAAIP,MAAT,IAAiBd,IAAI,CAACqB,UAAtB,EAAkC;AAChC,gBAAIN,MAAI,GAAGf,IAAI,CAACqB,UAAL,CAAgBP,MAAhB,CAAX;;AACA,gBAAIK,IAAG,GAAG,IAAIzD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkB0D,QAAtB,CAA+BP,MAA/B,EAAqC,IAArC,EAA2CD,MAA3C,CAAV;;AACA,gBAAIC,MAAI,CAACK,KAAT,EAAgB;AACd,mBAAKtC,gBAAL,CAAsBmC,IAAtB,CAA2BE,IAA3B;AACD,aAFD,MAEO;AACL,mBAAKtC,WAAL,CAAiBoC,IAAjB,CAAsBE,IAAtB;AACD;AACF;AACF;;AAED,aAAKpC,OAAL,GAAe,EAAf;AACA,aAAKC,YAAL,GAAoB,EAApB;;AACA,YAAIgB,IAAI,CAACuB,MAAT,EAAiB;AACf,eAAK,IAAIT,MAAT,IAAiBd,IAAI,CAACuB,MAAtB,EAA8B;AAC5B,gBAAIR,MAAI,GAAGf,IAAI,CAACuB,MAAL,CAAYT,MAAZ,CAAX;;AACA,gBAAIK,KAAG,GAAG,IAAIzD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkB4D,KAAtB,CAA4BT,MAA5B,EAAkC,IAAlC,CAAV;;AACA,gBAAIA,MAAI,CAACK,KAAT,EAAgB;AACd,mBAAKpC,YAAL,CAAkBiC,IAAlB,CAAuBE,KAAvB;AACD,aAFD,MAEO;AACL,mBAAKpC,OAAL,CAAakC,IAAb,CAAkBE,KAAlB;AACD;AACF;AACF;;AAED,aAAKM,cAAL,GAAsB,EAAtB;AACA,YAAIC,GAAG,GAAG,KAAKnB,MAAL,CAAY,eAAZ,CAAV;;AACA,YAAImB,GAAJ,EAAS;AACPA,UAAAA,GAAG,CAACC,OAAJ,CAAY,UAAAC,IAAI,EAAI;AAClB,YAAA,MAAI,CAACH,cAAL,CAAoBR,IAApB,CAAyB,IAAIvD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBiE,YAAtB,CAAmCD,IAAnC,EAAyC,MAAzC,CAAzB;AACD,WAFD;AAGD;;AAED,YAAIE,GAAG,GAAG,EAAV;;AACA,iBAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,cAAIC,CAAC,GAAGvE,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBwE,WAAxB,CAAoCC,GAApC,CAAR;AACA,iBAAOC,CAAC,CAACnC,IAAF,CAAO,UAAAoC,OAAO,EAAI;AACvBA,YAAAA,OAAO,CAACP,OAAR,CAAgB,UAAAQ,IAAI,EAAI;AACtBL,cAAAA,GAAG,CAACb,IAAJ,CAASkB,IAAT;AACD,aAFD;AAGA,mBAAOD,OAAP;AACD,WALM,CAAP;AAMD;;AAED,aAAKjD,WAAL,GAAmB,IAAnB;AACA,aAAKC,gBAAL,GAAwB,EAAxB;AACA,aAAKC,YAAL,GAAoB,EAApB;;AACA,YAAI,KAAKiD,KAAL,CAAWpB,IAAX,IAAmB,WAAvB,EAAoC;AAClCc,UAAAA,GAAG,CAACb,IAAJ,CAASc,WAAW,CAAC/B,IAAI,CAACqC,UAAN,CAAX,CAA6BvC,IAA7B,CAAkC,UAAA4B,GAAG;AAAA,mBAAI,MAAI,CAACxC,gBAAL,GAAwBwC,GAA5B;AAAA,WAArC,CAAT;AACD,SAFD,MAEO,IAAI,KAAKU,KAAL,CAAWpB,IAAX,IAAmB,OAAvB,EAAgC;AACrCc,UAAAA,GAAG,CAACb,IAAJ,CAASc,WAAW,CAAC/B,IAAI,CAACqC,UAAN,CAAX,CAA6BvC,IAA7B,CAAkC,UAAA4B,GAAG;AAAA,mBAAI,MAAI,CAACvC,YAAL,GAAoBuC,GAAxB;AAAA,WAArC,CAAT;AACD,SAFM,MAEA;AACLI,UAAAA,GAAG,CAACb,IAAJ,CAASc,WAAW,CAAC/B,IAAI,CAACqC,UAAN,CAAX,CAA6BvC,IAA7B,CAAkC,UAAA4B,GAAG;AAAA,mBAAI,MAAI,CAACzC,WAAL,GAAmByC,GAAG,CAAC,CAAD,CAAH,IAAU,IAAjC;AAAA,WAArC,CAAT;AACD;;AACD,aAAKY,WAAL,GAAmB,EAAnB;AACAP,QAAAA,WAAW,CAAC/B,IAAI,CAACuC,UAAN,CAAX,CAA6BzC,IAA7B,CAAkC,UAAA4B,GAAG;AAAA,iBAAI,MAAI,CAACY,WAAL,GAAmBZ,GAAvB;AAAA,SAArC;AACA,aAAKtC,OAAL,GAAe,EAAf;AACA2C,QAAAA,WAAW,CAAC/B,IAAI,CAACwC,MAAN,CAAX,CAAyB1C,IAAzB,CAA8B,UAAA4B,GAAG;AAAA,iBAAI,MAAI,CAACtC,OAAL,GAAesC,GAAnB;AAAA,SAAjC;AACA,eAAOvE,EAAE,CAACsF,OAAH,CAAWX,GAAX,CAAeA,GAAf,CAAP;AACD,OA3JM;AA6JPY,MAAAA,UAAU,EAAE,sBAAY;AACtB,eAAO,KAAKzE,QAAZ;AACD,OA/JM;;AAiKP;;;;;AAKA0E,MAAAA,OAAO,EAAE,mBAAY;AACnB,eAAO,KAAK3E,UAAZ;AACD,OAxKM;;AA2KP;;;;;AAKA4E,MAAAA,WAAW,EAAE,uBAAY;AACvB,eAAO,KAAK5E,UAAZ;AACD,OAlLM;;AAqLP;;;;;AAKA6E,MAAAA,cAAc,EAAE,0BAAY;AAC1B,eAAO,KAAK5E,QAAL,CAAc2E,WAAd,EAAP;AACD,OA5LM;;AA+LP;;;;;;AAMAE,MAAAA,OAAO,EAAE,mBAAY;AACnB,eAAO,KAAKV,KAAL,CAAWpB,IAAlB;AACD,OAvMM;;AA0MP;;;;;AAKA+B,MAAAA,UAAU,EAAE,sBAAY;AACtB,eAAO,KAAKX,KAAL,CAAWW,UAAX,IAAyB,KAAhC;AACD,OAjNM;;AAoNP;;;;;AAKAC,MAAAA,QAAQ,EAAE,oBAAY;AACpB,eAAO,KAAKZ,KAAL,CAAWY,QAAX,IAAuB,KAA9B;AACD,OA3NM;;AA8NP;;;;;AAKAC,MAAAA,WAAW,EAAE,uBAAY;AACvB,eAAO,KAAKb,KAAL,CAAWa,WAAX,IAA0B,KAAjC;AACD,OArOM;;AAwOP;;;;;AAKAC,MAAAA,aAAa,EAAE,yBAAY;AACzB,eAAO,KAAKjE,WAAZ;AACD,OA/OM;;AAkPP;;;;;;AAMAkE,MAAAA,eAAe,EAAE,2BAAY;AAC3B,YAAI,CAAC,KAAKC,oBAAV,EAAgC;AAC9B,cAAI,KAAKhB,KAAL,CAAWpB,IAAX,IAAmB,OAAvB,EAAgC;AAC9B,iBAAKoC,oBAAL,GAA4B1F,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBwE,WAAxB,CAAoC,KAAKK,KAAL,CAAWiB,WAA/C,CAA5B;AACD,WAFD,MAEO;AACL,iBAAKD,oBAAL,GAA4BjG,EAAE,CAACsF,OAAH,CAAWa,OAAX,CAAmB,EAAnB,CAA5B;AACD;AACF;;AACD,eAAO,KAAKF,oBAAZ;AACD,OAjQM;;AAoQP;;;;;;AAMAG,MAAAA,aAAa,EAAE,yBAAY;AACzB,eAAO,KAAKjB,WAAZ;AACD,OA5QM;;AA8QP;;;;;AAKAkB,MAAAA,kBAAkB,EAAE,8BAAY;AAC9B,eAAO,KAAKtE,gBAAZ;AACD,OArRM;;AAuRP;;;;;;AAMAuE,MAAAA,SAAS,EAAE,qBAAY;AACrB,eAAO,KAAKrE,OAAZ;AACD,OA/RM;;AAiSP;;;;;AAKAsE,MAAAA,cAAc,EAAE,0BAAY;AAC1B,eAAO,KAAKvE,YAAZ;AACD,OAxSM;;AA0SP;;;;;AAKAwE,MAAAA,WAAW,EAAE,uBAAY;AACvB,YAAI,CAAC,KAAKC,iBAAV,EAA6B;AAC3B,cAAI,KAAKxB,KAAL,CAAWpB,IAAX,IAAmB,OAAvB,EAAgC;AAC9B,iBAAK4C,iBAAL,GAAyBlG,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBwE,WAAxB,CAAoC,KAAKK,KAAL,CAAWiB,WAA/C,CAAzB;AACD,WAFD,MAEO;AACL,iBAAKO,iBAAL,GAAyBzG,EAAE,CAACsF,OAAH,CAAWa,OAAX,CAAmB,EAAnB,CAAzB;AACD;AACF;;AACD,eAAO,KAAKM,iBAAZ;AACD,OAxTM;;AA0TP;;;;;AAKAC,MAAAA,kBAAkB,EAAE,8BAAY;AAC9B,YAAI,CAAC,KAAKC,uBAAV,EAAmC;AACjC,cAAI,KAAK1B,KAAL,CAAWpB,IAAX,IAAmB,WAAvB,EAAoC;AAClC,iBAAK8C,uBAAL,GAA+BpG,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBwE,WAAxB,CAAoC,KAAKK,KAAL,CAAWiB,WAA/C,CAA/B;AACD,WAFD,MAEO;AACL,iBAAKS,uBAAL,GAA+B3G,EAAE,CAACsF,OAAH,CAAWa,OAAX,CAAmB,EAAnB,CAA/B;AACD;AACF;;AACD,eAAO,KAAKQ,uBAAZ;AACD,OAxUM;;AA0UP;;;;;AAKAC,MAAAA,cAAc,EAAE,0BAAY;AAC1B,eAAO,KAAKzF,UAAZ;AACD,OAjVM;;AAoVP;;;;;AAKA0F,MAAAA,gBAAgB,EAAE,4BAAY;AAC5B,eAAO,KAAKvC,cAAZ;AACD,OA3VM;;AA6VP;;;;;;AAMAwC,MAAAA,UAAU,EAAE,sBAAY;AACtB,eAAO,KAAKtF,QAAZ;AACD,OArWM;;AAuWP;;;;;AAKAuF,MAAAA,UAAU,EAAE,sBAAY;AACtB,eAAO,KAAKvF,QAAZ;AACD,OA9WM;;AAgXP;;;;;;AAMAwF,MAAAA,eAAe,EAAE,2BAAY;AAC3B,eAAO,KAAKvF,aAAZ;AACD,OAxXM;;AA0XP;;;;;AAKAwF,MAAAA,eAAe,EAAE,2BAAY;AAC3B,eAAO,KAAKxF,aAAZ;AACD,OAjYM;;AAmYP;;;;;AAKAyF,MAAAA,UAAU,EAAE,sBAAY;AACtB,eAAO,KAAK5F,cAAZ;AACD,OA1YM;;AA4YP;;;;;AAKA6F,MAAAA,SAAS,EAAE,qBAAY;AACrB,eAAO,KAAKvF,OAAZ;AACD,OAnZM;;AAqZP;;;;;AAKAwF,MAAAA,cAAc,EAAE,0BAAY;AAC1B,eAAO,KAAKvF,YAAZ;AACD,OA5ZM;;AA8ZP;;;;;AAKAwF,MAAAA,aAAa,EAAE,yBAAY;AACzB,eAAO,KAAK3F,WAAZ;AACD,OAraM;;AAuaP;;;;;AAKA4F,MAAAA,WAAW,EAAE,qBAAU3D,IAAV,EAAgB;AAC3B,aAAK,IAAI4D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7F,WAAL,CAAiB8F,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,cAAIE,IAAI,GAAG,KAAK/F,WAAL,CAAiB6F,CAAjB,CAAX;;AACA,cAAIE,IAAI,CAACjC,OAAL,MAAkB7B,IAAtB,EAA4B;AAC1B,mBAAO8D,IAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OApbM;;AAsbP;;;;;AAKAC,MAAAA,kBAAkB,EAAE,8BAAY;AAC9B,eAAO,KAAK/F,gBAAZ;AACD,OA7bM;;AA+bP;;;;;AAKAgG,MAAAA,YAAY,EAAE,wBAAY;AACxB,eAAO,KAAKpG,UAAZ;AACD,OAtcM;;AAwcP;;;;;AAKAqG,MAAAA,MAAM,EAAE,kBAAY;AAClB,eAAO,CAAC,KAAKxE,MAAL,CAAY,MAAZ,KAAuB,EAAxB,EAA4ByE,GAA5B,CAAgC,UAAA7C,IAAI;AAAA,iBAAIA,IAAI,CAAC8C,IAAT;AAAA,SAApC,CAAP;AACD,OA/cM;AAidPC,MAAAA,SAAS,EAAE,qBAAY;AACrB,eAAO,EAAP;AACD,OAndM;;AAqdP;;AAEA;;;;;;;;;AASAC,MAAAA,iBAAiB,EAAE,2BAAUC,oBAAV,EAAgC;AACjD,YAAIC,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIC,YAAY,GAAG,IAAxB,EAA8BA,YAA9B,EAA4CA,YAAY,GAAGA,YAAY,CAACpC,aAAb,EAA3D,EAAyF;AACvF,cAAIqC,QAAQ,GAAG7H,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBiI,cAAxB,CAAuCF,YAAvC,CAAf;;AACA,cAAI,CAACC,QAAD,IAAaH,oBAAjB,EAAuC;AACrCC,YAAAA,MAAM,CAACpE,IAAP,CAAYqE,YAAZ;AACD;;AACD,cAAIC,QAAJ,EAAc;AACZ;AACD;AACF;;AACD,eAAOF,MAAP;AACD,OA5eM;;AA+eP;;;;;;;AAOAI,MAAAA,qBAAqB,EAAE,iCAAY;AACjC,YAAIH,YAAY,GAAG,IAAnB;AACA,YAAID,MAAM,GAAG,EAAb;;AAEA,iBAASK,GAAT,CAAaJ,YAAb,EAA2B;AACzBD,UAAAA,MAAM,CAACpE,IAAP,CAAYqE,YAAZ;AACAA,UAAAA,YAAY,CAAC9B,kBAAb,GAAkC7B,OAAlC,CAA0C,UAAAgE,GAAG;AAAA,mBAAID,GAAG,CAACC,GAAD,CAAP;AAAA,WAA7C;AACD;;AACDD,QAAAA,GAAG,CAAC,IAAD,CAAH;AAEA,eAAOL,MAAP;AACD,OAjgBM;;AAmgBP;;;;;;;AAOAO,MAAAA,gBAAgB,EAAE,0BAAUC,mBAAV,EAA+B;AAC/C,YAAIC,cAAc,GAAG,EAArB;;AAEA,YAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,SAAS,EAAI;AAC/BF,UAAAA,cAAc,CAAC7E,IAAf,CAAoB+E,SAApB;AACAA,UAAAA,SAAS,CAACxC,kBAAV,GAA+B7B,OAA/B,CAAuCoE,aAAvC;AACD,SAHD;;AAKA,YAAIE,UAAU,GAAGJ,mBAAmB,GAAG,KAAKV,iBAAL,EAAH,GAA8B,CAAC,IAAD,CAAlE;AACAc,QAAAA,UAAU,CAACtE,OAAX,CAAmB,UAAAuE,SAAS;AAAA,iBAAI,CAACA,SAAS,CAAC3C,aAAV,MAA6B,EAA9B,EAAkC5B,OAAlC,CAA0CoE,aAA1C,CAAJ;AAAA,SAA5B;AAEA,eAAOD,cAAP;AACD,OAthBM;;AAyhBP;;;;;;;AAOAK,MAAAA,uBAAuB,EAAE,iCAAUC,QAAV,EAAoB;AAC3C,eAAO,KAAKxH,aAAL,CAAmBwH,QAAnB,KACL,KAAKtH,gBAAL,CAAsBsH,QAAtB,CADK,IAEL,KAAKpH,YAAL,CAAkBoH,QAAlB,CAFK,IAGL,IAHF;AAID,OAriBM;;AAuiBP;;;;;;AAMAC,MAAAA,OAAO,EAAE,iBAAUD,QAAV,EAAoB;AAC3B,YAAIE,aAAa,GAAG,CAClB,YADkB,EAElB,YAFkB,EAGlB,WAHkB,EAIlB,eAJkB,EAKlB,cALkB,EAMlB;AACA,0BAPkB,CAApB;;AAUA,aAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,aAAa,CAAC3B,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,cAAI6B,IAAI,GAAG,KAAKD,aAAa,CAAC5B,CAAD,CAAlB,GAAX;;AACA,cAAI6B,IAAJ,EAAU;AACR,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAAC5B,MAAzB,EAAiC6B,CAAC,EAAlC,EAAsC;AACpC,kBAAIJ,QAAQ,IAAIG,IAAI,CAACC,CAAD,CAAJ,CAAQ7D,OAAR,EAAhB,EAAmC;AACjC,uBAAO4D,IAAI,CAACC,CAAD,CAAX;AACD;AACF;AACF;AACF;;AAED,eAAO,IAAP;AACD,OApkBM;AAskBPC,MAAAA,mBAAmB,EAAE,+BAAY;AAC/B,eAAO/I,GAAG,CAACC,SAAJ,CAAc8B,WAAd,CAA0BiH,aAA1B,CAAwC,KAAKC,kBAAL,EAAxC,CAAP;AACD,OAxkBM;;AA0kBP;;;;;;;AAOAA,MAAAA,kBAAkB,EAAE,8BAAY;AAC9B,YAAIC,YAAY,GAAG,EAAnB;;AAEA,iBAAS7E,WAAT,CAAqBvB,KAArB,EAA4B;AAC1B,cAAI9C,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBiI,cAAxB,CAAuChF,KAAvC,CAAJ,EAAmD;AACjD;AACD;;AACD,iBAAOA,KAAK,CAACjB,IAAN,GAAaO,IAAb,CAAkB,YAAM,CAE9B,CAFM,CAAP;AAIA8G,UAAAA,YAAY,CAAC3F,IAAb,CAAkBT,KAAlB;AACAA,UAAAA,KAAK,CAAC0C,aAAN,MAAyBnB,WAAW,CAACvB,KAAK,CAAC0C,aAAN,EAAD,CAApC;AACA1C,UAAAA,KAAK,CAACiD,SAAN,GAAkB9B,OAAlB,CAA0B,UAAAP,KAAK;AAAA,mBAAIW,WAAJ;AAAA,WAA/B;AACAvB,UAAAA,KAAK,CAACkD,cAAN,GAAuB/B,OAAvB,CAA+B,UAAAP,KAAK;AAAA,mBAAIW,WAAJ;AAAA,WAApC;AACAvB,UAAAA,KAAK,CAAC+C,aAAN,GAAsB5B,OAAtB,CAA8B,UAAAP,KAAK;AAAA,mBAAIW,WAAJ;AAAA,WAAnC;AACAvB,UAAAA,KAAK,CAACgD,kBAAN,GAA2B7B,OAA3B,CAAmC,UAAAP,KAAK;AAAA,mBAAIW,WAAJ;AAAA,WAAxC;AACD;;AAEDA,QAAAA,WAAW,CAAC,IAAD,CAAX;AACA,eAAO6E,YAAP;AACD;AAtmBM,KAdgC;AAunBzC/F,IAAAA,OAAO,EAAE;AACPgG,MAAAA,eAAe,EAAE;AACf,iBAASC,KADM;AAEf,mBAAWC,OAFI;AAGf,gBAAQC,IAHO;AAIf,iBAASC,KAJM;AAKf,oBAAYC,QALG;AAMf,gBAAQC,IANO;AAOf,kBAAUC,MAPK;AAQf,kBAAUC,MARK;AASf,kBAAUC,MATK;AAUf,kBAAUC;AAVK,OADV;;AAcP;;;;;;;AAOAC,MAAAA,cAAc,EAAE,wBAAUzJ,SAAV,EAAqB0J,MAArB,EAA6B;AAC3C,YAAIC,WAAW,GAAGhK,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBsJ,eAAxB,CAAwC9I,SAAxC,CAAlB;;AACA,YAAI2J,WAAW,KAAKC,SAApB,EAA+B;AAC7B,iBAAOD,WAAP;AACD;;AAED,YAAIE,GAAG,GAAGlK,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBM,OAAlB,CAA0BC,gBAA1B,CAA2CJ,SAA3C,CAAV;;AACA,YAAI,CAAC6J,GAAL,EAAU;AACR,gBAAM,IAAIX,KAAJ,CAAU,+BAA+BlJ,SAAzC,CAAN;AACD;;AAED,YAAI8J,GAAG,GAAGD,GAAG,CAACJ,cAAJ,CAAmBzJ,SAAnB,CAAV;;AACA,YAAI,CAAC8J,GAAD,IAAQJ,MAAZ,EAAoB;AAClBI,UAAAA,GAAG,GAAG,IAAInK,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAtB,CAA4BQ,SAA5B,CAAN;AACD;;AACD,eAAO8J,GAAP;AACD,OArCM;;AAwCP;;;;;;;AAOAC,MAAAA,gBAAgB,EAAE,0BAAUC,UAAV,EAAsBN,MAAtB,EAA8B;AAC9CM,QAAAA,UAAU,GAAG5K,EAAE,CAAC6K,IAAH,CAAQlB,KAAR,CAAcmB,aAAd,CAA4BF,UAA5B,CAAb;AACA,YAAI1C,MAAM,GAAG0C,UAAU,CAAC/C,GAAX,CAAe,UAAAlE,IAAI;AAAA,iBAAIpD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBiK,cAAxB,CAAuC1G,IAAvC,EAA6C2G,MAA7C,CAAJ;AAAA,SAAnB,CAAb;AACA,eAAOpC,MAAP;AACD,OAnDM;AAsDPtD,MAAAA,WAAW,EAAE,qBAAUjB,IAAV,EAAgB;AAC3B,YAAI,CAACA,IAAL,EAAW;AACT,iBAAO3D,EAAE,CAACsF,OAAH,CAAWa,OAAX,CAAmB,EAAnB,CAAP;AACD;;AACD,YAAIxB,GAAG,GAAG3E,EAAE,CAAC6K,IAAH,CAAQlB,KAAR,CAAcmB,aAAd,CAA4BnH,IAA5B,EACPoH,MADO,CACA,UAAApH,IAAI;AAAA,iBAAI,CAACpD,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBsJ,eAAxB,CAAwC/F,IAAxC,CAAL;AAAA,SADJ,EAEPkE,GAFO,CAEH,UAAAlE,IAAI,EAAI;AACX,cAAIqH,CAAC,GAAGzK,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBiK,cAAxB,CAAuC1G,IAAvC,CAAR;;AACA,cAAIqH,CAAJ,EAAO;AACLA,YAAAA,CAAC,CAAC5I,IAAF;AACD;;AACD,iBAAO4I,CAAP;AACD,SARO,CAAV;AASA,eAAOhL,EAAE,CAACsF,OAAH,CAAWX,GAAX,CAAeA,GAAf,CAAP;AACD,OApEM;;AAuEP;;;;;;;;AAQA0D,MAAAA,cAAc,EAAE,wBAAUhF,KAAV,EAAiB;AAC/B,eAAOA,KAAK,CAAC4H,SAAN,KAAoB,yBAA3B;AACD;AAjFM;AAvnBgC,GAA3C;AAvBA1K,EAAAA,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBL,KAAlB,CAAwBD,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This Class wraps the access to the documentation data of classes.\n */\nqx.Class.define(\"qxl.apiviewer.dao.Class\", {\n  extend: qxl.apiviewer.dao.Node,\n\n  /**\n   * @param classDocNode\n   *          {Map} class documentation node\n   */\n  construct: function (className) {\n    this.base(arguments);\n    this._className = className;\n    this._package = qxl.apiviewer.dao.Package.getParentPackage(className);\n    this._package.addClass(this);\n  },\n\n  members: {\n    _package: null,\n    _construct: null,\n    _destruct: null,\n    _defer: null,\n    _staticMethods: null,\n    _constants: null,\n    _members: null,\n    _mixinMembers: null,\n    _properties: null,\n    _mixinProperties: null,\n    _events: null,\n    _mixinEvents: null,\n    _superClass: null,\n    _superInterfaces: null,\n    _superMixins: null,\n    _mixins: null,\n\n    _loadingPromise: null,\n    _loaded: false,\n\n    /**\n     * Loads the class\n     *\n     * @return {Promise}\n     */\n    load: function () {\n      if (this._loadingPromise) {\n        return this._loadingPromise;\n      }\n\n      var url = qxl.apiviewer.ClassLoader.getBaseUri() + \"/transpiled/\" + this._className.replace(/\\./g, \"/\") + \".json\";\n      return this._loadingPromise = qxl.apiviewer.RequestUtil.get(url)\n        .then(content => {\n          var meta = eval(\"(\" + content + \")\");\n          return this._initMeta(meta)\n            .then(() => {\n              this._loaded = true;\n              return this;\n            });\n        })\n        .catch(e => {\n          this.error(\"Couldn't load file: \" + url + \" \" + e.message);\n        });\n    },\n\n    isLoaded: function () {\n      return this._loaded;\n    },\n\n    /**\n     * Loads meta data, including super classes/interfaces/mixins\n     *\n     * @return {qx.Promise}\n     */\n    _initMeta: function (meta) {\n      this.base(arguments, meta);\n\n      this._jsdoc = meta.clazz.jsdoc || {};\n\n      this._construct = meta.construct ? [new qxl.apiviewer.dao.Method(meta.construct, this, \"construct\")] : [];\n      this._destruct = meta.destruct ? [new qxl.apiviewer.dao.Method(meta.destruct, this, \"destruct\")] : [];\n      this._defer = meta.defer ? [new qxl.apiviewer.dao.Method(meta.defer, this, \"defer\")] : [];\n\n      this._staticMethods = [];\n      this._constants = [];\n      if (meta.statics) {\n        for (let name in meta.statics) {\n          let data = meta.statics[name];\n          if (data.type == \"variable\") {\n            this._constants.push(new qxl.apiviewer.dao.Constant(data, this, name));\n          } else {\n            this._staticMethods.push(new qxl.apiviewer.dao.Method(data, this, name));\n          }\n        }\n      }\n\n      this._members = [];\n      this._mixinMembers = [];\n      if (meta.members) {\n        for (let name in meta.members) {\n          let data = meta.members[name];\n          if (data.type == \"function\") {\n            let obj = new qxl.apiviewer.dao.Method(data, this, name);\n            if (data.mixin) {\n              this._mixinMembers.push(obj);\n            } else {\n              this._members.push(obj);\n            }\n          }\n        }\n      }\n\n      this._properties = [];\n      this._mixinProperties = [];\n      if (meta.properties) {\n        for (let name in meta.properties) {\n          let data = meta.properties[name];\n          let obj = new qxl.apiviewer.dao.Property(data, this, name);\n          if (data.mixin) {\n            this._mixinProperties.push(obj);\n          } else {\n            this._properties.push(obj);\n          }\n        }\n      }\n\n      this._events = [];\n      this._mixinEvents = [];\n      if (meta.events) {\n        for (let name in meta.events) {\n          let data = meta.events[name];\n          let obj = new qxl.apiviewer.dao.Event(data, this);\n          if (data.mixin) {\n            this._mixinEvents.push(obj);\n          } else {\n            this._events.push(obj);\n          }\n        }\n      }\n\n      this._childControls = [];\n      let arr = this._jsdoc[\"@childControl\"];\n      if (arr) {\n        arr.forEach(elem => {\n          this._childControls.push(new qxl.apiviewer.dao.ChildControl(elem, this));\n        });\n      }\n\n      var all = [];\n      function findClasses(tmp) {\n        let p = qxl.apiviewer.dao.Class.findClasses(tmp);\n        return p.then(classes => {\n          classes.forEach(item => {\n            all.push(item);\n          })\n          return classes;\n        });\n      }\n\n      this._superClass = null;\n      this._superInterfaces = [];\n      this._superMixins = [];\n      if (this._meta.type == \"interface\") {\n        all.push(findClasses(meta.superClass).then(arr => this._superInterfaces = arr));\n      } else if (this._meta.type == \"mixin\") {\n        all.push(findClasses(meta.superClass).then(arr => this._superMixins = arr));\n      } else {\n        all.push(findClasses(meta.superClass).then(arr => this._superClass = arr[0] || null));\n      }\n      this._interfaces = [];\n      findClasses(meta.interfaces).then(arr => this._interfaces = arr);\n      this._mixins = [];\n      findClasses(meta.mixins).then(arr => this._mixins = arr);\n      return qx.Promise.all(all);\n    },\n\n    getPackage: function () {\n      return this._package;\n    },\n\n    /**\n     * Get the name of the class.\n     *\n     * @return {String} name of the class\n     */\n    getName: function () {\n      return this._className;\n    },\n\n\n    /**\n     * Get the full name of the class, including the package name.\n     *\n     * @return {String} full name of the class\n     */\n    getFullName: function () {\n      return this._className;\n    },\n\n\n    /**\n     * Get the package name of the class.\n     *\n     * @return {String} package name of the class\n     */\n    getPackageName: function () {\n      return this._package.getFullName();\n    },\n\n\n    /**\n     * Get type of the class. Valid types are \"class\", \"interface\" and \"mixin\".\n     *\n     * @return {String} The type of the class. Valid types are \"class\",\n     *         \"interface\" and \"mixin\".\n     */\n    getType: function () {\n      return this._meta.type;\n    },\n\n\n    /**\n     * Get whether the class is abstract.\n     *\n     * @return {Boolean} Whether the class is abstract.\n     */\n    isAbstract: function () {\n      return this._meta.isAbstract || false;\n    },\n\n\n    /**\n     * Get whether the class is a static class.\n     *\n     * @return {Boolean} Whether the class is static.\n     */\n    isStatic: function () {\n      return this._meta.isStatic || false;\n    },\n\n\n    /**\n     * Get whether the class is a singleton.\n     *\n     * @return {Boolean} Whether the class is a singleton.\n     */\n    isSingleton: function () {\n      return this._meta.isSingleton || false;\n    },\n\n\n    /**\n     * Get the super class of the class.\n     *\n     * @return {qxl.apiviewer.dao.Class} The super class of the class.\n     */\n    getSuperClass: function () {\n      return this._superClass;\n    },\n\n\n    /**\n     * Get the direct child classes of the class.\n     *\n     * @return {qx.Promise(qxl.apiviewer.dao.Class[])} A list of direct child classes of the\n     *         class.\n     */\n    getChildClasses: function () {\n      if (!this._childClassesPromise) {\n        if (this._meta.type == \"class\") {\n          this._childClassesPromise = qxl.apiviewer.dao.Class.findClasses(this._meta.descendants);\n        } else {\n          this._childClassesPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._childClassesPromise;\n    },\n\n\n    /**\n     * Get all interfaces declared at the class declaration.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All interfaces declared at the class\n     *         declaration.\n     */\n    getInterfaces: function () {\n      return this._interfaces;\n    },\n\n    /**\n     * Get all super interfaces. (Only for interfaces)\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All super interfaces.\n     */\n    getSuperInterfaces: function () {\n      return this._superInterfaces;\n    },\n\n    /**\n     * Get all mixins declared at the class declaration.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All mixins declared at the class\n     *         declaration.\n     */\n    getMixins: function () {\n      return this._mixins;\n    },\n\n    /**\n     * Get all super mixins. (Only for mixins)\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All super mixins.\n     */\n    getSuperMixins: function () {\n      return this._superMixins;\n    },\n\n    /**\n     * Get all classes including this mixin. (Only for mixins)\n     *\n     * @return {qx.Promise(qxl.apiviewer.dao.Class[])} All classes including this mixin.\n     */\n    getIncluder: function () {\n      if (!this._includersPromise) {\n        if (this._meta.type == \"mixin\") {\n          this._includersPromise = qxl.apiviewer.dao.Class.findClasses(this._meta.descendants);\n        } else {\n          this._includersPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._includersPromise;\n    },\n\n    /**\n     * Get all implementations of this interface. (Only for interfaces)\n     *\n     * @return {qx.Promise(qxl.apiviewer.dao.Class[])} All implementations of this interface.\n     */\n    getImplementations: function () {\n      if (!this._implementationsPromise) {\n        if (this._meta.type == \"interface\") {\n          this._implementationsPromise = qxl.apiviewer.dao.Class.findClasses(this._meta.descendants);\n        } else {\n          this._implementationsPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._implementationsPromise;\n    },\n\n    /**\n     * Get the constructor of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method} The constructor of the class.\n     */\n    getConstructor: function () {\n      return this._construct;\n    },\n\n\n    /**\n     * Get all child controls\n     *\n     * @return {qxl.apiviewer.dao.ChildControl[]} All child controls.\n     */\n    getChildControls: function () {\n      return this._childControls;\n    },\n\n    /**\n     * Get the members of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMembers: function () {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMethods: function () {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMixinMembers: function () {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMixinMethods: function () {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the statics of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The statics of the class.\n     */\n    getStatics: function () {\n      return this._staticMethods;\n    },\n\n    /**\n     * Get the events of the class.\n     *\n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getEvents: function () {\n      return this._events;\n    },\n\n    /**\n     * Get the events of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getMixinEvents: function () {\n      return this._mixinEvents;\n    },\n\n    /**\n     * Get the properties of the class.\n     *\n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getProperties: function () {\n      return this._properties;\n    },\n\n    /**\n     * Returns a property with a given name\n     *\n     * @return {qxl.apiviewer.dao.Property} The named property\n     */\n    getProperty: function (name) {\n      for (var i = 0; i < this._properties.length; i++) {\n        var prop = this._properties[i];\n        if (prop.getName() == name) {\n          return prop;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Get the properties of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getMixinProperties: function () {\n      return this._mixinProperties;\n    },\n\n    /**\n     * Get the constants of the class.\n     *\n     * @return {qxl.apiviewer.dao.Constant[]} The constants of the class.\n     */\n    getConstants: function () {\n      return this._constants;\n    },\n\n    /**\n     * Get all references declared using the \"see\" attribute.\n     *\n     * @return {String[]} A list of all references declared using the \"see\" attribute.\n     */\n    getSee: function () {\n      return (this._jsdoc[\"@see\"] || []).map(item => item.body);\n    },\n\n    getErrors: function () {\n      return [];\n    },\n\n    /* COMPLEX FUNCTIONS */\n\n    /**\n     * Get the documentation nodes of all classes in the inheritance chain of a\n     * class. The first entry in the list is the class itself.\n     *\n     * @param includeNativeObjects\n     *          {Boolean} true if you want to get native JS objects too\n     * @return {qxl.apiviewer.dao.Class[]} array of super classes of the given\n     *         class.\n     */\n    getClassHierarchy: function (includeNativeObjects) {\n      var result = [];\n      for (var currentClass = this; currentClass; currentClass = currentClass.getSuperClass()) {\n        var isNative = qxl.apiviewer.dao.Class.isNativeObject(currentClass);\n        if (!isNative || includeNativeObjects) {\n          result.push(currentClass);\n        }\n        if (isNative) {\n          break;\n        }\n      }\n      return result;\n    },\n\n\n    /**\n     * Get the documentation nodes of all interfaces in the inheritance chain of\n     * an interface. The first entry in the list is the interface itself.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} array of super interfaces of the given\n     *         interface.\n     */\n    getInterfaceHierarchy: function () {\n      var currentClass = this;\n      var result = [];\n\n      function add(currentClass) {\n        result.push(currentClass);\n        currentClass.getSuperInterfaces().forEach(itf => add(itf));\n      }\n      add(this);\n\n      return result;\n    },\n\n    /**\n     * Returns a list of all interfaces the class implements directly.\n     *\n     * @param includeSuperClasses\n     *          {Boolean?false} Whether the interfaces of all super classes\n     *          should be returned as well.\n     */\n    getAllInterfaces: function (includeSuperClasses) {\n      var interfaceNodes = [];\n\n      let ifaceRecurser = ifaceNode => {\n        interfaceNodes.push(ifaceNode);\n        ifaceNode.getSuperInterfaces().forEach(ifaceRecurser);\n      };\n\n      var classNodes = includeSuperClasses ? this.getClassHierarchy() : [this];\n      classNodes.forEach(classNode => (classNode.getInterfaces() || []).forEach(ifaceRecurser));\n\n      return interfaceNodes;\n    },\n\n\n    /**\n     * Return a class item matching the given name.\n     *\n     * @param itemName\n     *          {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItemByNameFromMixins: function (itemName) {\n      return this._mixinMembers[itemName] ||\n        this._mixinProperties[itemName] ||\n        this._mixinEvents[itemName] ||\n        null;\n    },\n\n    /**\n     * Return a class item matching the given name.\n     *\n     * @param itemName {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItem: function (itemName) {\n      var itemListNames = [\n        \"getMembers\",\n        \"getStatics\",\n        \"getEvents\",\n        \"getProperties\",\n        \"getConstants\",\n        // \"getAppearances\",\n        \"getChildControls\"\n      ];\n\n      for (var i = 0; i < itemListNames.length; i++) {\n        var list = this[itemListNames[i]]();\n        if (list) {\n          for (var j = 0; j < list.length; j++) {\n            if (itemName == list[j].getName()) {\n              return list[j];\n            }\n          }\n        }\n      }\n\n      return null;\n    },\n\n    loadDependedClasses: function () {\n      return qxl.apiviewer.ClassLoader.loadClassList(this.getDependedClasses());\n    },\n\n    /**\n     * Return a list of all classes, mixins and interfaces this class depends\n     * on. This includes all super classes and their mixins/interfaces and the\n     * class itself.\n     *\n     * @return {qx.Promise(Class[])} array of dependent classes.\n     */\n    getDependedClasses: function () {\n      let foundClasses = [];\n\n      function findClasses(clazz) {\n        if (qxl.apiviewer.dao.Class.isNativeObject(clazz)) {\n          return;\n        }\n        return clazz.load().then(() => {\n\n        });\n\n        foundClasses.push(clazz);\n        clazz.getSuperClass() && findClasses(clazz.getSuperClass());\n        clazz.getMixins().forEach(mixin => findClasses);\n        clazz.getSuperMixins().forEach(mixin => findClasses);\n        clazz.getInterfaces().forEach(mixin => findClasses);\n        clazz.getSuperInterfaces().forEach(mixin => findClasses);\n      }\n\n      findClasses(this);\n      return foundClasses;\n    }\n  },\n\n  statics: {\n    _native_classes: {\n      \"Array\": Array,\n      \"Boolean\": Boolean,\n      \"Date\": Date,\n      \"Error\": Error,\n      \"Function\": Function,\n      \"Math\": Math,\n      \"Number\": Number,\n      \"Object\": Object,\n      \"RegExp\": RegExp,\n      \"String\": String\n    },\n\n    /**\n     * Get a class documentation by the class name.\n     *\n     * @param className\n     *          {String} name of the class\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassByName: function (className, create) {\n      var nativeClass = qxl.apiviewer.dao.Class._native_classes[className];\n      if (nativeClass !== undefined) {\n        return nativeClass;\n      }\n\n      var pkg = qxl.apiviewer.dao.Package.getParentPackage(className);\n      if (!pkg) {\n        throw new Error(\"Cannot find a package for \" + className);\n      }\n\n      var cls = pkg.getClassByName(className);\n      if (!cls && create) {\n        cls = new qxl.apiviewer.dao.Class(className);\n      }\n      return cls;\n    },\n\n\n    /**\n     * Get a class documentation by the class name.\n     *\n     * @param className\n     *          {String} name of the class\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassesByName: function (classNames, create) {\n      classNames = qx.lang.Array.toNativeArray(classNames);\n      var result = classNames.map(name => qxl.apiviewer.dao.Class.getClassByName(name, create));\n      return result;\n    },\n\n\n    findClasses: function (name) {\n      if (!name) {\n        return qx.Promise.resolve([]);\n      }\n      var all = qx.lang.Array.toNativeArray(name)\n        .filter(name => !qxl.apiviewer.dao.Class._native_classes[name])\n        .map(name => {\n          let c = qxl.apiviewer.dao.Class.getClassByName(name);\n          if (c) {\n            c.load();\n          }\n          return c;\n        });\n      return qx.Promise.all(all);\n    },\n\n\n    /**\n     * Checks if the Class is a qooxdoo qxl.apiviewer.dao.Class Object or a native\n     * one\n     *\n     * @param clazz\n     *          {qxl.apiviewer.dao.Class} the object to be checked\n     * @return {Boolean} true if it is a JS native object\n     */\n    isNativeObject: function (clazz) {\n      return clazz.classname !== \"qxl.apiviewer.dao.Class\";\n    }\n\n  }\n});"
  ]
}