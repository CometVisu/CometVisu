{
  "className": "qxl.apiviewer.dao.Property",
  "packageName": "qxl.apiviewer.dao",
  "name": "Property",
  "superClass": "qxl.apiviewer.dao.ClassItem",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 56,
        "column": 0
      },
      "end": {
        "line": 147,
        "column": 5
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n John Spackman (johnspackman)\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Represents a property\n    \"paddingTop\": {\n      \"location\": {\n        \"start\": {\n          \"line\": 393,\n          \"column\": 4\n        },\n        \"end\": {\n          \"line\": 399,\n          \"column\": 5\n        }\n      },\n      \"jsdoc\": {\n        \"@description\": [\n          {\n            \"name\": \"@description\",\n            \"body\": \"---------------------------------------------------------------------------\\nPADDING\\n---------------------------------------------------------------------------\"\n          },\n          {\n            \"name\": \"@description\",\n            \"body\": \"Padding of the widget (top)\"\n          }\n        ]\n      },\n      \"name\": \"paddingTop\",\n      \"propertyType\": \"new\",\n      \"themeable\": true,\n      \"apply\": \"_applyPadding\",\n      \"check\": \"Integer\",\n      \"defaultValue\": 0\n    },</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 60,
        "column": 16
      },
      "end": {
        "line": 62,
        "column": 5
      }
    },
    "jsdoc": {}
  },
  "members": {
    "getTypes": {
      "location": {
        "start": {
          "line": 65,
          "column": 6
        },
        "end": {
          "line": 71,
          "column": 7
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.ClassItem",
      "appearsIn": [
        "qxl.apiviewer.dao.ClassItem"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} Array of types of the item. A type has the keys 'type' and 'dimensions', where\n dimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\n dimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined",
            "type": "Map[]",
            "description": " Array of types of the item. A type has the keys 'type' and 'dimensions', where\n dimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\n dimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined"
          }
        ]
      }
    },
    "getCheck": {
      "location": {
        "start": {
          "line": 81,
          "column": 6
        },
        "end": {
          "line": 90,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the check attribute of the property definition if\n the check attribute does not define an internal type or a\n class. In this case use {@link #getTypes}.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the contents of the check attribute.",
            "type": "String",
            "description": " the contents of the check attribute."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isRequiredByInterface": {
      "location": {
        "start": {
          "line": 95,
          "column": 6
        },
        "end": {
          "line": 97,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ifaceNode {qxl.apiviewer.dao.Class} interface to check for",
            "paramName": "ifaceNode",
            "description": " interface to check for",
            "type": "qxl.apiviewer.dao.Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the item is required by the interface.",
            "type": "Boolean",
            "description": " whether the item is required by the interface."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.ClassItem",
      "appearsIn": [
        "qxl.apiviewer.dao.ClassItem"
      ]
    },
    "getClassname": {
      "location": {
        "start": {
          "line": 99,
          "column": 6
        },
        "end": {
          "line": 101,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "getPossibleValues": {
      "location": {
        "start": {
          "line": 103,
          "column": 6
        },
        "end": {
          "line": 105,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "getGroup": {
      "location": {
        "start": {
          "line": 107,
          "column": 6
        },
        "end": {
          "line": 109,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "isPropertyGroup": {
      "location": {
        "start": {
          "line": 111,
          "column": 6
        },
        "end": {
          "line": 113,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "getType": {
      "location": {
        "start": {
          "line": 115,
          "column": 6
        },
        "end": {
          "line": 117,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "getEvent": {
      "location": {
        "start": {
          "line": 119,
          "column": 6
        },
        "end": {
          "line": 121,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "getApplyMethod": {
      "location": {
        "start": {
          "line": 123,
          "column": 6
        },
        "end": {
          "line": 125,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "isNullable": {
      "location": {
        "start": {
          "line": 127,
          "column": 6
        },
        "end": {
          "line": 129,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "getDefaultValue": {
      "location": {
        "start": {
          "line": 131,
          "column": 6
        },
        "end": {
          "line": 133,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "isInheritable": {
      "location": {
        "start": {
          "line": 135,
          "column": 6
        },
        "end": {
          "line": 137,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "isThemeable": {
      "location": {
        "start": {
          "line": 139,
          "column": 6
        },
        "end": {
          "line": 141,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "isRefined": {
      "location": {
        "start": {
          "line": 143,
          "column": 6
        },
        "end": {
          "line": 145,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset"
    }
  },
  "descendants": []
}