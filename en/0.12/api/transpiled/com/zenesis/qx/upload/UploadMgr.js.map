{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v1_0_4/source/class/com/zenesis/qx/upload/UploadMgr.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "com",
    "zenesis",
    "upload",
    "MParameters",
    "construct",
    "widget",
    "uploadUrl",
    "__widgetsData",
    "addWidget",
    "setUploadUrl",
    "events",
    "properties",
    "check",
    "nullable",
    "init",
    "event",
    "autoUpload",
    "apply",
    "multiple",
    "inputNamePrefix",
    "requireMultipartFormData",
    "members",
    "__inputSerial",
    "__uploadHandler",
    "__uploadId",
    "appearId",
    "addListenerOnce",
    "evt",
    "data",
    "toHashCode",
    "container",
    "getContentElement",
    "setStyle",
    "getEnabled",
    "inputElement",
    "addAt",
    "_createInputElement",
    "__fixupSize",
    "keydownId",
    "Environment",
    "get",
    "addListener",
    "dom",
    "getDomElement",
    "click",
    "getData",
    "_removeInputElement",
    "removeWidget",
    "removeListener",
    "addBlob",
    "filename",
    "blob",
    "params",
    "getUploadHandler",
    "getAutoUpload",
    "beginUploads",
    "bounds",
    "getBounds",
    "setStyles",
    "width",
    "height",
    "_applyAutoUpload",
    "value",
    "oldValue",
    "_applyMultiple",
    "hash",
    "setMultiple",
    "_applyRequireMultipartFormData",
    "Error",
    "cancel",
    "file",
    "cancelAll",
    "name",
    "getInputNamePrefix",
    "Assert",
    "assertNull",
    "elem",
    "InputElement",
    "getMultiple",
    "lang",
    "Function",
    "bind",
    "_onInputChange",
    "remove",
    "_resetInputElement",
    "getWidget",
    "addFile",
    "XhrHandler",
    "isSupported",
    "isRequireMultipartFormData",
    "FormHandler",
    "allocateUploadId",
    "UploadMgr"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;;;AAUAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EAAmD;AACjDC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADiC;AAEjDC,IAAAA,OAAO,EAAE,CAAEC,GAAG,CAACC,OAAJ,CAAYX,EAAZ,CAAeY,MAAf,CAAsBC,WAAxB,CAFwC;AAIjDC,IAAAA,SAAS,EAAE,mBAASC,MAAT,EAAiBC,SAAjB,EAA4B;AACrC;AACA,WAAKC,SAAL,GAAqB,EAArB;AACA,UAAIF,MAAJ,EACE,KAAKG,SAAL,CAAeH,MAAf;AACF,UAAIC,SAAJ,EACE,KAAKG,YAAL,CAAkBH,SAAlB;AACH,KAXgD;AAajDI,IAAAA,MAAM,EAAE;AACN;;;;AAIA,iBAAW,oBALL;;AAON;;;;AAIA,qBAAe,oBAXT;;AAaN;;;;AAIA,wBAAkB,oBAjBZ;;AAmBN;;;;AAIA,sBAAgB;AAvBV,KAbyC;AAuCjDC,IAAAA,UAAU,EAAE;AACV;;;AAGAL,MAAAA,SAAS,EAAE;AACTM,QAAAA,KAAK,EAAE,QADE;AAETC,QAAAA,QAAQ,EAAE,KAFD;AAGTC,QAAAA,IAAI,EAAE,EAHG;AAITC,QAAAA,KAAK,EAAE;AAJE,OAJD;;AAWV;;;;AAIAC,MAAAA,UAAU,EAAE;AACVJ,QAAAA,KAAK,EAAE,SADG;AAEVE,QAAAA,IAAI,EAAE,IAFI;AAGVD,QAAAA,QAAQ,EAAE,KAHA;AAIVE,QAAAA,KAAK,EAAE,kBAJG;AAKVE,QAAAA,KAAK,EAAE;AALG,OAfF;;AAuBV;;;;AAIAC,MAAAA,QAAQ,EAAE;AACRN,QAAAA,KAAK,EAAE,SADC;AAERE,QAAAA,IAAI,EAAE,IAFE;AAGRD,QAAAA,QAAQ,EAAE,KAHF;AAIRE,QAAAA,KAAK,EAAE,gBAJC;AAKRE,QAAAA,KAAK,EAAE;AALC,OA3BA;;AAmCV;;;AAGAE,MAAAA,eAAe,EAAE;AACfP,QAAAA,KAAK,EAAE,QADQ;AAEfE,QAAAA,IAAI,EAAE,gBAFS;AAGfD,QAAAA,QAAQ,EAAE,KAHK;AAIfE,QAAAA,KAAK,EAAE;AAJQ,OAtCP;;AA6CV;;;AAGAK,MAAAA,wBAAwB,EAAE;AACxBR,QAAAA,KAAK,EAAE,SADiB;AAExBE,QAAAA,IAAI,EAAE,IAFkB;AAGxBD,QAAAA,QAAQ,EAAE,KAHc;AAIxBE,QAAAA,KAAK,EAAE,gCAJiB;AAKxBE,QAAAA,KAAK,EAAE;AALiB;AAhDhB,KAvCqC;AAgGjDI,IAAAA,OAAO,EAAE;AACPd,MAAAA,SAAa,EAAE,IADR;AAEPe,MAAAA,SAAa,EAAE,CAFR;AAGPC,MAAAA,SAAe,EAAE,IAHV;AAIPC,MAAAA,SAAU,EAAE,CAJL;;AAMP;;;;;AAKAhB,MAAAA,SAAS,EAAE,mBAASH,MAAT,EAAiB;AAC1B,YAAIoB,QAAQ,GAAGpB,MAAM,CAACqB,eAAP,CAAuB,QAAvB,EAAiC,UAASC,GAAT,EAAc;AAC5D,cAAIC,IAAI,GAAG,KAAKrB,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,CAAX;;AACA,cAAID,IAAJ,EAAU;AACRA,YAAAA,IAAI,CAACH,QAAL,GAAgB,IAAhB;AACA,gBAAIK,SAAS,GAAGzB,MAAM,CAAC0B,iBAAP,EAAhB;AACAD,YAAAA,SAAS,CAACE,QAAV,CAAmB,UAAnB,EAA+B,QAA/B;AACA,gBAAI3B,MAAM,CAAC4B,UAAP,MAAuB,CAACL,IAAI,CAACM,YAAjC,EACEJ,SAAS,CAACK,KAAV,CAAgB,KAAKC,mBAAL,CAAyB/B,MAAzB,CAAhB,EAAkD,CAAlD;;AACF,iBAAKgC,SAAL,CAAiBhC,MAAjB;AACD;AACF,SAVc,EAUZ,IAVY,CAAf;AAWA,YAAIiC,SAAS,GAAG,IAAhB;;AACA,YAAIhD,EAAE,CAACO,IAAH,CAAQ0C,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,OAA9C,EAAuD;AACrDF,UAAAA,SAAS,GAAGjC,MAAM,CAACoC,WAAP,CAAmB,SAAnB,EAA8B,UAASd,GAAT,EAAc;AACtD,gBAAIC,IAAI,GAAG,KAAKrB,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,CAAX;;AACA,gBAAID,IAAI,IAAIA,IAAI,CAACM,YAAjB,EAA+B;AAC7B,kBAAIQ,GAAG,GAAGd,IAAI,CAACM,YAAL,CAAkBS,aAAlB,EAAV;;AACA,kBAAID,GAAG,IAAI,OAAOA,GAAG,CAACE,KAAX,IAAoB,UAA/B,EAA2C;AACzC;AACAF,gBAAAA,GAAG,CAACE,KAAJ;AACD;AACF;AACF,WATW,EAST,IATS,CAAZ;AAUD;;AACD,aAAKrC,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,IAA0C;AACxCJ,UAAAA,QAAQ,EAAEA,QAD8B;AAExCa,UAAAA,SAAS,EAAEA,SAF6B;AAGxCjC,UAAAA,MAAM,EAAEA,MAHgC;AAIxC6B,UAAAA,YAAY,EAAE;AAJ0B,SAA1C;AAMA7B,QAAAA,MAAM,CAACoC,WAAP,CAAmB,QAAnB,EAA6B,UAASd,GAAT,EAAc;AACzC,eAAKU,SAAL,CAAiBhC,MAAjB;AACD,SAFD,EAEG,IAFH;AAGAA,QAAAA,MAAM,CAACoC,WAAP,CAAmB,eAAnB,EAAoC,UAASd,GAAT,EAAc;AAChD,cAAIA,GAAG,CAACkB,OAAJ,EAAJ,EAAmB;AACjB,gBAAIf,SAAS,GAAGzB,MAAM,CAAC0B,iBAAP,EAAhB;AACAD,YAAAA,SAAS,CAACK,KAAV,CAAgB,KAAKC,mBAAL,CAAyB/B,MAAzB,CAAhB,EAAkD,CAAlD;AACD,WAHD,MAGO;AACL,iBAAKyC,mBAAL,CAAyBzC,MAAzB;AACD;AACF,SAPD,EAOG,IAPH;AAQD,OArDM;;AAuDP;;;;;AAKA0C,MAAAA,YAAY,EAAE,sBAAS1C,MAAT,EAAiB;AAC7B,YAAIuB,IAAI,GAAG,KAAKrB,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,CAAX;;AACA,YAAID,IAAJ,EAAU;AACR,cAAIA,IAAI,CAACH,QAAT,EACEpB,MAAM,CAAC2C,cAAP,CAAsBpB,IAAI,CAACH,QAA3B;AACF,cAAIG,IAAI,CAACU,SAAT,EACEjC,MAAM,CAAC2C,cAAP,CAAsBpB,IAAI,CAACU,SAA3B;AACF,iBAAO,KAAK/B,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,CAAP;AACD;AACF,OArEM;;AAuEP;;;;;;AAMAoB,MAAAA,OAAO,EAAE,iBAAUC,QAAV,EAAoBC,IAApB,EAA0BC,MAA1B,EAAiC;AACxC,aAAKC,gBAAL,GAAwBJ,OAAxB,CAAgCC,QAAhC,EAA0CC,IAA1C,EAAgDC,MAAhD;AACA,YAAI,KAAKE,aAAL,EAAJ,EACE,KAAKD,gBAAL,GAAwBE,YAAxB;AACH,OAjFM;;AAmFP;;;;;;AAMAlB,MAAAA,SAAW,EAAE,mBAAShC,MAAT,EAAiB;AAC5B,YAAIuB,IAAI,GAAG,KAAKrB,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,CAAX;;AACA,YAAID,IAAI,IAAIA,IAAI,CAACM,YAAjB,EAA+B;AAC7B,cAAIsB,MAAM,GAAGnD,MAAM,CAACoD,SAAP,EAAb,CAD6B,CAE7B;AACA;AACA;;AACA,cAAGD,MAAH,EAAW;AACT5B,YAAAA,IAAI,CAACM,YAAL,CAAkBwB,SAAlB,CAA4B;AAC1BC,cAAAA,KAAK,EAAEH,MAAM,CAACG,KAAP,GAAe,IADI;AAE1BC,cAAAA,MAAM,EAAEJ,MAAM,CAACI,MAAP,GAAgB;AAFE,aAA5B;AAID;AACF;AACF,OAvGM;AAyGP;AACAC,MAAAA,gBAAgB,EAAE,0BAASC,KAAT,EAAgBC,QAAhB,EAA0B;AAC1C,aAAKV,gBAAL,GAAwBE,YAAxB;AACD,OA5GM;AA8GP;AACAS,MAAAA,cAAc,EAAE,wBAASF,KAAT,EAAgBC,QAAhB,EAA0B;AACxC,aAAM,IAAIE,IAAV,IAAkB,KAAK1D,SAAvB,EAAsC;AACpC,cAAIqB,IAAI,GAAG,KAAKrB,SAAL,CAAmB0D,IAAnB,CAAX;AACA,cAAIrC,IAAI,CAACM,YAAT,EACEN,IAAI,CAACM,YAAL,CAAkBgC,WAAlB,CAA8BJ,KAA9B;AACH;AACF,OArHM;AAuHP;AACAK,MAAAA,8BAA8B,EAAE,wCAASL,KAAT,EAAgBC,QAAhB,EAA0B;AACxD,YAAI,KAAKxC,SAAT,EACE,MAAM,IAAI6C,KAAJ,CAAU,uDAAuD,IAAvD,GAA8D,0CAAxE,CAAN;AACH,OA3HM;;AA6HP;;;;;AAKAC,MAAAA,MAAM,EAAE,gBAASC,IAAT,EAAe;AACrB,aAAKjB,gBAAL,GAAwBgB,MAAxB,CAA+BC,IAA/B;AACD,OApIM;;AAsIP;;;AAGAC,MAAAA,SAAS,EAAE,qBAAW;AACpB,aAAKlB,gBAAL,GAAwBkB,SAAxB;AACD,OA3IM;;AA6IP;;;;;AAKAnC,MAAAA,mBAAmB,EAAE,6BAAS/B,MAAT,EAAiB;AACpC,YAAIuB,IAAI,GAAG,KAAKrB,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,CAAX;;AACA,YAAI2C,IAAI,GAAG,KAAKC,kBAAL,KAA4B,GAA5B,GAAmC,EAAE,KAAKnD,SAArD;AACAhC,QAAAA,EAAE,CAACO,IAAH,CAAQ6E,MAAR,CAAeC,UAAf,CAA0B/C,IAAI,CAACM,YAA/B;AACA,YAAI0C,IAAI,GAAGhD,IAAI,CAACM,YAAL,GAAoB,IAAIlC,GAAG,CAACC,OAAJ,CAAYX,EAAZ,CAAeY,MAAf,CAAsB2E,YAA1B,CAAuCxE,MAAvC,EAA+C,KAAKyE,WAAL,EAA/C,EAAmEN,IAAnE,CAA/B;AACAI,QAAAA,IAAI,CAAClD,eAAL,CAAqB,QAArB,EAA+BpC,EAAE,CAACyF,IAAH,CAAQC,QAAR,CAAiBC,IAAjB,CAAsB,KAAKC,cAA3B,EAA2C,IAA3C,EAAiDN,IAAjD,CAA/B;AAEA,eAAOA,IAAP;AACD,OA1JM;;AA4JP;;;;AAIA9B,MAAAA,mBAAmB,EAAE,6BAASzC,MAAT,EAAiB;AACpC,YAAIuB,IAAI,GAAG,KAAKrB,SAAL,CAAmBF,MAAM,CAACwB,UAAP,EAAnB,CAAX;;AACA,YAAI+C,IAAI,GAAGhD,IAAI,CAACM,YAAhB;AACA,YAAIJ,SAAS,GAAGzB,MAAM,CAAC0B,iBAAP,EAAhB;AACAH,QAAAA,IAAI,CAACM,YAAL,GAAoB,IAApB;AACA,YAAI0C,IAAJ,EACE9C,SAAS,CAACqD,MAAV,CAAiBP,IAAjB;AACH,OAvKM;;AAyKP;;;;AAIAQ,MAAAA,kBAAkB,EAAE,4BAAS/E,MAAT,EAAiB;AACnC,aAAKyC,mBAAL,CAAyBzC,MAAzB;;AACA,YAAIyB,SAAS,GAAGzB,MAAM,CAAC0B,iBAAP,EAAhB;AACAD,QAAAA,SAAS,CAACK,KAAV,CAAgB,KAAKC,mBAAL,CAAyB/B,MAAzB,CAAhB,EAAkD,CAAlD;AACD,OAjLM;;AAmLP;;;;;;;AAOA6E,MAAAA,cAAc,EAAE,wBAASN,IAAT,EAAejD,GAAf,EAAoB;AAClC,YAAItB,MAAM,GAAGuE,IAAI,CAACS,SAAL,EAAb;AAEA,aAAKhC,gBAAL,GAAwBiC,OAAxB,CAAgCV,IAAI,CAACjC,aAAL,EAAhC,EAAsDtC,MAAtD;AACA,YAAI,KAAKiD,aAAL,EAAJ,EACE,KAAKD,gBAAL,GAAwBE,YAAxB;;AACF,aAAK6B,kBAAL,CAAwB/E,MAAxB;AACD,OAjMM;;AAmMP;;;;;AAKAgD,MAAAA,gBAAgB,EAAE,4BAAW;AAC3B,YAAI,CAAC,KAAK9B,SAAV,EAA2B;AACzB,cAAIvB,GAAG,CAACC,OAAJ,CAAYX,EAAZ,CAAeY,MAAf,CAAsBqF,UAAtB,CAAiCC,WAAjC,CAA6C,KAAKC,0BAAL,EAA7C,CAAJ,EACE,KAAKlE,SAAL,GAAuB,IAAIvB,GAAG,CAACC,OAAJ,CAAYX,EAAZ,CAAeY,MAAf,CAAsBqF,UAA1B,CAAqC,IAArC,CAAvB,CADF,KAGE,KAAKhE,SAAL,GAAuB,IAAIvB,GAAG,CAACC,OAAJ,CAAYX,EAAZ,CAAeY,MAAf,CAAsBwF,WAA1B,CAAsC,IAAtC,CAAvB;AACH;;AACD,eAAO,KAAKnE,SAAZ;AACD,OAhNM;;AAkNP;;;;AAIAoE,MAAAA,gBAAgB,EAAE,4BAAW;AAC3B,eAAO,cAAe,EAAE,KAAKnE,SAA7B;AACD;AAxNM;AAhGwC,GAAnD;AAjCAxB,EAAAA,GAAG,CAACC,OAAJ,CAAYX,EAAZ,CAAeY,MAAf,CAAsB0F,SAAtB,CAAgCnG,aAAhC,GAAgDA,aAAhD",
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * Manages uploading of files to the server; this class can use any suitable\n * widget to attach the input[type=file] to, provided the widget includes\n * com.zenesis.qx.upload.MUploadButton.\n * \n * Uploader will use XhrHandler to upload via XMLHttpRequest if supported or\n * will fall back to FormHandler.\n * \n * @require(qx.event.handler.Input)\n */\nqx.Class.define(\"com.zenesis.qx.upload.UploadMgr\", {\n  extend: qx.core.Object,\n  include: [ com.zenesis.qx.upload.MParameters ],\n\n  construct: function(widget, uploadUrl) {\n    this.base(arguments);\n    this.__widgetsData = {};\n    if (widget)\n      this.addWidget(widget);\n    if (uploadUrl)\n      this.setUploadUrl(uploadUrl);\n  },\n\n  events: {\n    /**\n     * Fired when a file is added to the queue; data is the\n     * com.zenesis.qx.upload.File\n     */\n    \"addFile\": \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file starts to be uploaded; data is the\n     * com.zenesis.qx.upload.File\n     */\n    \"beginUpload\": \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file has been uploaded; data is the\n     * com.zenesis.qx.upload.File\n     */\n    \"completeUpload\": \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file upload has been cancelled; data is the\n     * com.zenesis.qx.upload.File\n     */\n    \"cancelUpload\": \"qx.event.type.Data\"\n  },\n\n  properties: {\n    /**\n     * The URL to upload to\n     */\n    uploadUrl: {\n      check: \"String\",\n      nullable: false,\n      init: \"\",\n      event: \"changeUploadUrl\"\n    },\n\n    /**\n     * Whether to automatically start uploading when a file is added\n     * (default=true)\n     */\n    autoUpload: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeAutoUpload\",\n      apply: \"_applyAutoUpload\"\n    },\n\n    /**\n     * Whether to support multiple files (default=true); this is not supported\n     * on older browsers\n     */\n    multiple: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeMultiple\",\n      apply: \"_applyMultiple\"\n    },\n\n    /**\n     * Prefix to apply to the name of input fields\n     */\n    inputNamePrefix: {\n      check: \"String\",\n      init: \"uploadMgrInput\",\n      nullable: false,\n      event: \"changeInputNamePrefix\"\n    },\n\n    /**\n     * Whether the server can only handle multipart/form-data content type\n     */\n    requireMultipartFormData: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeRequireMultipartFormData\",\n      apply: \"_applyRequireMultipartFormData\"\n    }\n  },\n\n  members: {\n    __widgetsData: null,\n    __inputSerial: 0,\n    __uploadHandler: null,\n    __uploadId: 0,\n\n    /**\n     * Adds a widget which is to have an input[type=file] attached; this would\n     * typically be an instance of com.zenesis.qx.upload.UploadButton (see\n     * com.zenesis.qx.upload.MUploadButton for implementing for other widgets)\n     */\n    addWidget: function(widget) {\n      var appearId = widget.addListenerOnce(\"appear\", function(evt) {\n        var data = this.__widgetsData[widget.toHashCode()];\n        if (data) {\n          data.appearId = null;\n          var container = widget.getContentElement();\n          container.setStyle(\"overflow\", \"hidden\");\n          if (widget.getEnabled() && !data.inputElement)\n            container.addAt(this._createInputElement(widget), 0);\n          this.__fixupSize(widget);\n        }\n      }, this);\n      var keydownId = null;\n      if (qx.core.Environment.get(\"engine.name\") != \"gecko\") {\n        keydownId = widget.addListener(\"keydown\", function(evt) {\n          var data = this.__widgetsData[widget.toHashCode()];\n          if (data && data.inputElement) {\n            var dom = data.inputElement.getDomElement();\n            if (dom && typeof dom.click == \"function\") {\n              // dom.focus();\n              dom.click();\n            }\n          }\n        }, this);\n      }\n      this.__widgetsData[widget.toHashCode()] = {\n        appearId: appearId,\n        keydownId: keydownId,\n        widget: widget,\n        inputElement: null\n      };\n      widget.addListener(\"resize\", function(evt) {\n        this.__fixupSize(widget);\n      }, this);\n      widget.addListener(\"changeEnabled\", function(evt) {\n        if (evt.getData()) {\n          var container = widget.getContentElement();\n          container.addAt(this._createInputElement(widget), 0);\n        } else {\n          this._removeInputElement(widget);\n        }\n      }, this);\n    },\n\n    /**\n     * Removes a widget\n     * \n     * @param widget {qx.ui.core.Widget} Widget to remvove\n     */\n    removeWidget: function(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      if (data) {\n        if (data.appearId)\n          widget.removeListener(data.appearId);\n        if (data.keydownId)\n          widget.removeListener(data.keydownId);\n        delete this.__widgetsData[widget.toHashCode()];\n      }\n    },\n    \n    /**\n     * Adds a blob to the upload list \n     * \n     * @param blob    {Blob}    the blob to upload\n     * @param params  {Object}  List of params added to the upload params\n     */\n    addBlob: function (filename, blob, params){\n      this.getUploadHandler().addBlob(filename, blob, params);\n      if (this.getAutoUpload())\n        this.getUploadHandler().beginUploads();\n    },\n    \n    /**\n     * Helper method that corrects the size of the input element to match the\n     * size of the widget\n     * \n     * @param widget {qx.ui.core.Widget} Widget to fixup size\n     */\n    __fixupSize: function(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      if (data && data.inputElement) {\n        var bounds = widget.getBounds();\n        // It may be that if the widgets icon is styled\n        // through a theme, neither label nor icon are set yet.\n        // In this situation bounds calculation would fail.\n        if(bounds) { \n          data.inputElement.setStyles({\n            width: bounds.width + \"px\",\n            height: bounds.height + \"px\"\n          });\n        }\n      }\n    },\n\n    // property apply\n    _applyAutoUpload: function(value, oldValue) {\n      this.getUploadHandler().beginUploads();\n    },\n\n    // property apply\n    _applyMultiple: function(value, oldValue) {\n      for ( var hash in this.__widgetsData) {\n        var data = this.__widgetsData[hash];\n        if (data.inputElement)\n          data.inputElement.setMultiple(value);\n      }\n    },\n\n    // property apply\n    _applyRequireMultipartFormData: function(value, oldValue) {\n      if (this.__uploadHandler)\n        throw new Error(\"Changing the requireMultipartFormData property of \" + this + \" has no effect once uploads have started\");\n    },\n\n    /**\n     * Cancels a file being uploaded\n     * \n     * @param file {String} Upload to cancel\n     */\n    cancel: function(file) {\n      this.getUploadHandler().cancel(file);\n    },\n\n    /**\n     * Cancels all files being uploaded\n     */\n    cancelAll: function() {\n      this.getUploadHandler().cancelAll();\n    },\n\n    /**\n     * Creates the input[type=file] element\n     * \n     * @returns\n     */\n    _createInputElement: function(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      var name = this.getInputNamePrefix() + '-' + (++this.__inputSerial);\n      qx.core.Assert.assertNull(data.inputElement);\n      var elem = data.inputElement = new com.zenesis.qx.upload.InputElement(widget, this.getMultiple(), name);\n      elem.addListenerOnce(\"change\", qx.lang.Function.bind(this._onInputChange, this, elem));\n\n      return elem;\n    },\n\n    /**\n     * Removes the input element - ie discards the current one (which presumably\n     * has already been queued for uploading)\n     */\n    _removeInputElement: function(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      var elem = data.inputElement;\n      var container = widget.getContentElement();\n      data.inputElement = null;\n      if (elem)\n        container.remove(elem);\n    },\n\n    /**\n     * Resets the input element - ie discards the current one (which presumably\n     * has already been queued for uploading) and creates a new one\n     */\n    _resetInputElement: function(widget) {\n      this._removeInputElement(widget);\n      var container = widget.getContentElement();\n      container.addAt(this._createInputElement(widget), 0);\n    },\n\n    /**\n     * Callback for changes to the input[ty=file]'s value, ie this is called\n     * when the user has selected a file to upload\n     * \n     * @param elem {Element} Element which is affected\n     * @param evt {Event} Event data\n     */\n    _onInputChange: function(elem, evt) {\n      var widget = elem.getWidget();\n\n      this.getUploadHandler().addFile(elem.getDomElement(), widget);\n      if (this.getAutoUpload())\n        this.getUploadHandler().beginUploads();\n      this._resetInputElement(widget);\n    },\n\n    /**\n     * Returns the upload handler\n     * \n     * @returns\n     */\n    getUploadHandler: function() {\n      if (!this.__uploadHandler) {\n        if (com.zenesis.qx.upload.XhrHandler.isSupported(this.isRequireMultipartFormData()))\n          this.__uploadHandler = new com.zenesis.qx.upload.XhrHandler(this);\n        else\n          this.__uploadHandler = new com.zenesis.qx.upload.FormHandler(this);\n      }\n      return this.__uploadHandler;\n    },\n\n    /**\n     * Allocates a new upload ID; this is just a unique number that widgets or\n     * application code can use to uniquely identify themselves to the server\n     */\n    allocateUploadId: function() {\n      return \"uploadId:\" + (++this.__uploadId);\n    }\n\n  }\n});\n"
  ]
}