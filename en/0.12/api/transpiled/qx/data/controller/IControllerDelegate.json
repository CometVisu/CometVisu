{
  "className": "qx.data.controller.IControllerDelegate",
  "packageName": "qx.data.controller",
  "name": "IControllerDelegate",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 30,
        "column": 0
      },
      "end": {
        "line": 81,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2009 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Martin Wittemann (martinwittemann)\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Objects, which are used as delegates for a data binding controller may\n implement any of the methods described in this interface. The delegate does\n not need implement all of the methods of this interface. If a method is not\n implemented the controller provides a default implementation.\n Note: This interface is meant to document the delegate but should not be\n listed in the <code>implement</code> key of a class unless all methods are\n really implemented.</p>"
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "configureItem": {
      "location": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 37
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gives the user the opportunity to set individual styles and properties\n on the by the controller created widgets.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Item to modify.",
            "paramName": "item",
            "description": " Item to modify.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "filter": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Filter checks the current data and returns a boolean if the data should\n appear in the filtered data set or not.\n The filter currently works only with the {@link qx.data.controller.List}\n controller!</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {var} The data which will be checked.",
            "paramName": "data",
            "description": " The data which will be checked.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if the data passes the filter, false otherwise.",
            "type": "Boolean",
            "description": " True, if the data passes the filter, false otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createItem": {
      "location": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an item which will be added to the target as child. Be sure to\n implement the {@link #bindItem} function as well to get the needed\n properties bound.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} A new created widget.",
            "type": "qx.ui.core.Widget",
            "description": " A new created widget."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "bindItem": {
      "location": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 48
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets up the binding for the given item and index.\n For every property you want to bind, use\n {@link qx.data.controller.List#bindProperty} like this:\n <code>\n controller.bindProperty(\"path.in.the.model\", \"label\", options, item, id);\n </code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "controller {var} The currently used controller.",
            "paramName": "controller",
            "description": " The currently used controller.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The created and used item.",
            "paramName": "item",
            "description": " The created and used item.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "id {var} The id for the binding.",
            "paramName": "id",
            "description": " The id for the binding.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}