{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/data/Array.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "data",
    "marshal",
    "MEventBubbling",
    "implement",
    "IListData",
    "construct",
    "param",
    "undefined",
    "__array",
    "arguments",
    "length",
    "i",
    "push",
    "Array",
    "lang",
    "clone",
    "dispose",
    "Error",
    "_applyEventPropagation",
    "__updateLength",
    "properties",
    "autoDisposeItems",
    "check",
    "init",
    "events",
    "members",
    "concat",
    "array",
    "toNativeArray",
    "newArray",
    "join",
    "connector",
    "pop",
    "item",
    "_registerEventChaining",
    "fireDataEvent",
    "value",
    "name",
    "old",
    "start",
    "end",
    "type",
    "removed",
    "added",
    "varargs",
    "reverse",
    "oldArray",
    "__updateEventPropagation",
    "shift",
    "slice",
    "from",
    "to",
    "splice",
    "startIndex",
    "amount",
    "oldLength",
    "returnArray",
    "apply",
    "addedItems",
    "fromArguments",
    "Math",
    "max",
    "endIndex",
    "eventData",
    "replace",
    "src",
    "equals",
    "args",
    "getLength",
    "forEach",
    "sort",
    "func",
    "unshift",
    "toArray",
    "getItem",
    "index",
    "setItem",
    "oldItem",
    "indexOf",
    "lastIndexOf",
    "toString",
    "contains",
    "includes",
    "copy",
    "insertAt",
    "insertBefore",
    "before",
    "insertAfter",
    "after",
    "removeAt",
    "removeAll",
    "items",
    "append",
    "prototype",
    "exclude",
    "remove",
    "sum",
    "result",
    "min",
    "callback",
    "context",
    "call",
    "filter",
    "self",
    "map",
    "some",
    "every",
    "reduce",
    "initValue",
    "reduceRight",
    "destruct",
    "isAutoDisposeItems"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The data array is a special array used in the data binding context of\n * qooxdoo. It does not extend the native array of JavaScript but its a wrapper\n * for it. All the native methods are included in the implementation and it\n * also fires events if the content or the length of the array changes in\n * any way. Also the <code>.length</code> property is available on the array.\n * \n * This class does not need to be disposed, unless you set the autoDisposeItems\n * property to true and want the items to be disposed.\n */\nqx.Class.define(\"qx.data.Array\",\n{\n  extend : qx.core.Object,\n  include : qx.data.marshal.MEventBubbling,\n  implement : [qx.data.IListData],\n\n  /**\n   * Creates a new instance of an array.\n   *\n   * @param param {var} The parameter can be some types.<br/>\n   *   Without a parameter a new blank array will be created.<br/>\n   *   If there is more than one parameter is given, the parameter will be\n   *   added directly to the new array.<br/>\n   *   If the parameter is a number, a new Array with the given length will be\n   *   created.<br/>\n   *   If the parameter is a JavaScript array, a new array containing the given\n   *   elements will be created.\n   */\n  construct : function(param)\n  {\n    this.base(arguments);\n    // if no argument is given\n    if (param == undefined) {\n      this.__array = [];\n\n    // check for elements (create the array)\n    } else if (arguments.length > 1) {\n      // create an empty array and go through every argument and push it\n      this.__array = [];\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n      }\n\n    // check for a number (length)\n    } else if (typeof param == \"number\") {\n      this.__array = new Array(param);\n    // check for an array itself\n    } else if (param instanceof Array) {\n      this.__array = qx.lang.Array.clone(param);\n\n    // error case\n    } else {\n      this.__array = [];\n      this.dispose();\n      throw new Error(\"Type of the parameter not supported!\");\n    }\n\n    // propagate changes\n    for (var i=0; i<this.__array.length; i++) {\n      this._applyEventPropagation(this.__array[i], null, i);\n    }\n\n    // update the length at startup\n    this.__updateLength();\n\n    // work against the console printout of the array\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this[0] = \"Please use 'toArray()' to see the content.\";\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Flag to set the dispose behavior of the array. If the property is set to\n     * <code>true</code>, the array will dispose its content on dispose, too.\n     */\n    autoDisposeItems : {\n      check : \"Boolean\",\n      init : false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * The change event which will be fired if there is a change in the array.\n     * The data contains a map with five key value pairs:\n     * <li>start: The start index of the change.</li>\n     * <li>end: The end index of the change.</li>\n     * <li>type: The type of the change as a String. This can be 'add',\n     * 'remove', 'order' or 'add/remove'</li>\n     * <li>added: The items which has been added (as a JavaScript array)</li>\n     * <li>removed: The items which has been removed (as a JavaScript array)</li>\n     */\n    \"change\" : \"qx.event.type.Data\",\n\n\n    /**\n     * The changeLength event will be fired every time the length of the\n     * array changes.\n     */\n    \"changeLength\": \"qx.event.type.Data\"\n  },\n\n\n  members :\n  {\n    // private members\n    __array : null,\n\n\n    /**\n     * Concatenates the current and the given array into a new one.\n     *\n     * @param array {qx.data.Array|Array} The javaScript array which should be concatenated\n     *   to the current array.\n     *\n     * @return {qx.data.Array} A new array containing the values of both former\n     *   arrays.\n     */\n    concat: function(array) {\n      array = qx.lang.Array.toNativeArray(array);\n      if (array) {\n        var newArray = this.__array.concat(array);\n      } else {\n        var newArray = this.__array.concat();\n      }\n      return new qx.data.Array(newArray);\n    },\n\n\n    /**\n     * Returns the array as a string using the given connector string to\n     * connect the values.\n     *\n     * @param connector {String} the string which should be used to past in\n     *  between of the array values.\n     *\n     * @return {String} The array as a string.\n     */\n    join: function(connector) {\n      return this.__array.join(connector);\n    },\n\n\n    /**\n     * Removes and returns the last element of the array.\n     * An change event will be fired.\n     *\n     * @return {var} The last element of the array.\n     */\n    pop: function() {\n      var item = this.__array.pop();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length - 1);\n      // fire change bubble event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: this.length + \"\",\n        old: [item],\n        item: this\n      });\n\n      this.fireDataEvent(\"change\",\n        {\n          start: this.length - 1,\n          end: this.length - 1,\n          type: \"remove\",\n          removed : [item],\n          added : []\n        }, null\n      );\n      return item;\n    },\n\n\n    /**\n     * Adds an element at the end of the array.\n     *\n     * @param varargs {var} Multiple elements. Every element will be added to\n     *   the end of the array. An change event will be fired.\n     *\n     * @return {Number} The new length of the array.\n     */\n    push: function(varargs) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n        this.__updateLength();\n        // apply to every pushed item an event listener for the bubbling\n        this._registerEventChaining(arguments[i], null, this.length - 1);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [arguments[i]],\n          name: (this.length - 1) + \"\",\n          old: [],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\"change\",\n          {\n            start: this.length - 1,\n            end: this.length - 1,\n            type: \"add\",\n            added: [arguments[i]],\n            removed : []\n          }, null\n        );\n      }\n      return this.length;\n    },\n\n\n    /**\n     * Reverses the order of the array. An change event will be fired.\n     */\n    reverse: function() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var oldArray = this.__array.concat();\n      this.__array.reverse();\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\"change\",\n        {start: 0, end: this.length - 1, type: \"order\", added: [], removed: []}, null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.__array.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n\n    /**\n     * Removes the first element of the array and returns it. An change event\n     * will be fired.\n     *\n     * @return {var} the former first element.\n     */\n    shift: function() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var item = this.__array.shift();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length -1);\n      // as every item has changed its position, we need to update the event bubbling\n      this.__updateEventPropagation(0, this.length);\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0\",\n        old: [item],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\"change\",\n        {\n          start: 0,\n          end: this.length -1,\n          type: \"remove\",\n          removed : [item],\n          added : []\n        }, null\n      );\n      return item;\n    },\n\n\n    /**\n     * Returns a new array based on the range specified by the parameters.\n     *\n     * @param from {Number} The start index.\n     * @param to {Number?null} The zero-based end index. <code>slice</code> extracts\n     *   up to but not including <code>to</code>. If omitted, slice extracts to the\n     *   end of the array.\n     *\n     * @return {qx.data.Array} A new array containing the given range of values.\n     */\n    slice: function(from, to) {\n      return new qx.data.Array(this.__array.slice(from, to));\n    },\n\n\n    /**\n     * Method to remove and add new elements to the array. A change event\n     * will be fired for every removal or addition unless the array is\n     * identical before and after splicing.\n     *\n     * @param startIndex {Integer} The index where the splice should start\n     * @param amount {Integer} Defines number of elements which will be removed\n     *   at the given position.\n     * @param varargs {var} All following parameters will be added at the given\n     *   position to the array.\n     * @return {qx.data.Array} An data array containing the removed elements.\n     *   Keep in to dispose this one, even if you don't use it!\n     */\n    splice: function(startIndex, amount, varargs) {\n      // store the old length\n      var oldLength = this.__array.length;\n\n      // invoke the slice on the array\n      var returnArray = this.__array.splice.apply(this.__array, arguments);\n\n      // fire a change event for the length\n      if (this.__array.length != oldLength) {\n        this.__updateLength();\n      } else if (amount == arguments.length - 2) {\n        // if we added as much items as we removed\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n        // check if the array content equals the content before the operation\n        for (var i = 0; i < addedItems.length; i++) {\n          if (addedItems[i] !== returnArray[i]) {\n            break;\n          }\n          // if all added and removed items are equal\n          if (i == addedItems.length -1) {\n            // prevent all events and return a new array\n            return new qx.data.Array();\n          }\n        }\n      }\n      // fire an event for the change\n      var removed = amount > 0;\n      var added = arguments.length > 2;\n      if (removed || added) {\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n\n        if (returnArray.length == 0) {\n          var type = \"add\";\n          var end = startIndex + addedItems.length;\n        } else if (addedItems.length == 0) {\n          var type = \"remove\";\n          var end = this.length - 1;\n        } else {\n          var type = \"add/remove\";\n          var end = startIndex + Math.max(addedItems.length, returnArray.length) - 1;\n        }\n\n        this.fireDataEvent(\"change\",\n          {\n            start: startIndex,\n            end: end,\n            type: type,\n            added : addedItems,\n            removed : returnArray\n          }, null\n        );\n      }\n\n      // remove the listeners first [BUG #7132]\n      for (var i = 0; i < returnArray.length; i++) {\n        this._registerEventChaining(null, returnArray[i], i);\n      }\n\n      // add listeners\n      for (var i = 2; i < arguments.length; i++) {\n        this._registerEventChaining(arguments[i], null, startIndex + (i - 2));\n      }\n      // apply event chaining for every item moved\n      this.__updateEventPropagation(startIndex + (arguments.length - 2) - amount, this.length);\n\n      // fire the changeBubble event\n      if (removed || added) {\n        var value = [];\n        for (var i = 2; i < arguments.length; i++) {\n          value[i-2] = arguments[i];\n        }\n        var endIndex = (startIndex + Math.max(arguments.length - 3 , amount - 1));\n        var name = startIndex == endIndex ? endIndex : startIndex + \"-\" + endIndex;\n\n        var eventData = {\n          value: value,\n          name: name + \"\",\n          old: returnArray,\n          item: this\n        };\n        this.fireDataEvent(\"changeBubble\", eventData);\n      }\n      return (new qx.data.Array(returnArray));\n    },\n    \n    \n    /**\n     * Efficiently replaces the array with the contents of src; this will suppress the\n     * change event if the array contents are the same, and will make sure that only\n     * one change event is fired\n     * \n     * @param src {qx.data.Array|Array} the new value to set the array to\n     */\n    replace: function(src) {\n      src = qx.lang.Array.toNativeArray(src);\n      if (this.equals(src)) {\n        return;\n      }\n      var args = [ 0, this.getLength() ];\n      src.forEach(function(item) {\n        args.push(item);\n      });\n      this.splice.apply(this, args);\n    },\n\n\n    /**\n     * Sorts the array. If a function is given, this will be used to\n     * compare the items. <code>changeBubble</code> event will only be fired,\n     * if sorting result differs from original array.\n     *\n     * @param func {Function} A compare function comparing two parameters and\n     *   should return a number.\n     */\n    sort: function(func) {\n      // ignore if the array is empty\n      if (this.length == 0) {\n        return;\n      }\n      var oldArray = this.__array.concat();\n\n      this.__array.sort.apply(this.__array, arguments);\n\n      // prevent changeBubble event if nothing has been changed\n      if (qx.lang.Array.equals(this.__array, oldArray) === true){\n        return;\n      }\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\"change\",\n        {start: 0, end: this.length - 1, type: \"order\", added: [], removed: []}, null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n\n    /**\n     * Adds the given items to the beginning of the array. For every element,\n     * a change event will be fired.\n     *\n     * @param varargs {var} As many elements as you want to add to the beginning.\n     * @return {Integer} The new length of the array\n     */\n    unshift: function(varargs) {\n      for (var i = arguments.length - 1; i >= 0; i--) {\n        this.__array.unshift(arguments[i]);\n        this.__updateLength();\n        // apply to every item an event listener for the bubbling\n        this.__updateEventPropagation(0, this.length);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [this.__array[0]],\n          name: \"0\",\n          old: [this.__array[1]],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\"change\",\n          {\n            start: 0,\n            end: this.length - 1,\n            type: \"add\",\n            added : [arguments[i]],\n            removed : []\n          }, null\n        );\n      }\n      return this.length;\n    },\n\n\n    /**\n     * Returns the list data as native array. Beware of the fact that the\n     * internal representation will be returned and any manipulation of that\n     * can cause a misbehavior of the array. This method should only be used for\n     * debugging purposes.\n     *\n     * @return {Array} The native array.\n     */\n    toArray: function() {\n      return this.__array;\n    },\n\n\n    /**\n     * Replacement function for the getting of the array value.\n     * array[0] should be array.getItem(0).\n     *\n     * @param index {Number} The index requested of the array element.\n     *\n     * @return {var} The element at the given index.\n     */\n    getItem: function(index) {\n      return this.__array[index];\n    },\n\n\n    /**\n     * Replacement function for the setting of an array value.\n     * array[0] = \"a\" should be array.setItem(0, \"a\").\n     * A change event will be fired if the value changes. Setting the same\n     * value again will not lead to a change event.\n     *\n     * @param index {Number} The index of the array element.\n     * @param item {var} The new item to set.\n     */\n    setItem: function(index, item) {\n      var oldItem = this.__array[index];\n      // ignore settings of already set items [BUG #4106]\n      if (oldItem === item) {\n        return;\n      }\n      this.__array[index] = item;\n      // set an event listener for the bubbling\n      this._registerEventChaining(item, oldItem, index);\n      // only update the length if its changed\n      if (this.length != this.__array.length) {\n        this.__updateLength();\n      }\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [item],\n        name: index + \"\",\n        old: [oldItem],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\"change\",\n        {\n          start: index,\n          end: index,\n          type: \"add/remove\",\n          added: [item],\n          removed: [oldItem]\n        }, null\n      );\n    },\n\n\n    /**\n     * This method returns the current length stored under .length on each\n     * array.\n     *\n     * @return {Number} The current length of the array.\n     */\n    getLength: function() {\n      return this.length;\n    },\n\n\n    /**\n     * Returns the index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    indexOf: function(item) {\n      return this.__array.indexOf(item);\n    },\n\n    /**\n     * Returns the last index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    lastIndexOf: function(item) {\n      return this.__array.lastIndexOf(item);\n    },\n\n\n    /**\n     * Returns the toString of the original Array\n     * @return {String} The array as a string.\n     */\n    toString: function() {\n      if (this.__array != null) {\n        return this.__array.toString();\n      }\n      return \"\";\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n       IMPLEMENTATION OF THE QX.LANG.ARRAY METHODS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @deprecated {6.0} Please use the include method instead\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    contains: function(item) {\n      return this.includes(item);\n    },\n\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    includes: function(item) {\n      return this.__array.indexOf(item) !== -1;\n    },\n\n\n    /**\n     * Return a copy of the given arr\n     *\n     * @return {qx.data.Array} copy of this\n     */\n    copy : function() {\n      return this.concat();\n    },\n\n\n    /**\n     * Insert an element at a given position.\n     *\n     * @param index {Integer} Position where to insert the item.\n     * @param item {var} The element to insert.\n     */\n    insertAt : function(index, item)\n    {\n      this.splice(index, 0, item).dispose();\n    },\n\n\n    /**\n     * Insert an item into the array before a given item.\n     *\n     * @param before {var} Insert item before this object.\n     * @param item {var} The item to be inserted.\n     */\n    insertBefore : function(before, item)\n    {\n      var index = this.indexOf(before);\n\n      if (index == -1) {\n        this.push(item);\n      } else {\n        this.splice(index, 0, item).dispose();\n      }\n    },\n\n\n    /**\n     * Insert an element into the array after a given item.\n     *\n     * @param after {var} Insert item after this object.\n     * @param item {var} Object to be inserted.\n     */\n    insertAfter : function(after, item)\n    {\n      var index = this.indexOf(after);\n\n      if (index == -1 || index == (this.length - 1)) {\n        this.push(item);\n      } else {\n        this.splice(index + 1, 0, item).dispose();\n      }\n    },\n\n\n    /**\n     * Remove an element from the array at the given index.\n     *\n     * @param index {Integer} Index of the item to be removed.\n     * @return {var} The removed item.\n     */\n    removeAt : function(index) {\n      var returnArray = this.splice(index, 1);\n      var item = returnArray.getItem(0);\n      returnArray.dispose();\n      return item;\n    },\n\n\n    /**\n     * Remove all elements from the array.\n     *\n     * @return {Array} A native array containing the removed elements.\n     */\n    removeAll : function() {\n      // remove all possible added event listeners\n      for (var i = 0; i < this.__array.length; i++) {\n        this._registerEventChaining(null, this.__array[i], i);\n      }\n\n      // ignore if array is empty\n      if (this.getLength() == 0) {\n        return [];\n      }\n\n      // store the old data\n      var oldLength = this.getLength();\n      var items = this.__array.concat();\n\n      // change the length\n      this.__array.length = 0;\n      this.__updateLength();\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0-\" + (oldLength - 1),\n        old: items,\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\"change\",\n        {\n          start: 0,\n          end: oldLength - 1,\n          type: \"remove\",\n          removed : items,\n          added : []\n        }, null\n      );\n      return items;\n    },\n\n\n    /**\n     * Append the items of the given array.\n     *\n     * @param array {Array|qx.data.IListData} The items of this array will\n     * be appended.\n     * @throws {Error} if the argument is not an array.\n     */\n    append : function(array)\n    {\n      // qooxdoo array support\n      array = qx.lang.Array.toNativeArray(array);\n\n      // this check is important because opera throws an uncatchable error if\n      // apply is called without an array as argument.\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertArray(array, \"The parameter must be an array.\");\n      }\n\n      var oldLength = this.__array.length;\n      Array.prototype.push.apply(this.__array, array);\n\n      // add a listener to the new items\n      for (var i = 0; i < array.length; i++) {\n        this._registerEventChaining(array[i], null, oldLength + i);\n      }\n\n      var oldLength = this.length;\n      this.__updateLength();\n\n      // fire change bubbles\n      var name =\n        oldLength == (this.length-1) ?\n        oldLength :\n        oldLength + \"-\" + (this.length-1);\n      this.fireDataEvent(\"changeBubble\", {\n        value: array,\n        name: name + \"\",\n        old: [],\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\"change\",\n        {\n          start: oldLength,\n          end: this.length - 1,\n          type: \"add\",\n          added : array,\n          removed : []\n        }, null\n      );\n    },\n\n\n    /**\n     * Removes all elements which are listed in the array.\n     *\n     * @param array {Array} the elements of this array will be excluded from this one\n     */\n    exclude : function(array)\n    {\n      array = qx.lang.Array.toNativeArray(array);\n      array.forEach(function(item) {\n        this.remove(item);\n      }, this);\n    },\n\n\n    /**\n     * Remove the given item.\n     *\n     * @param item {var} Item to be removed from the array.\n     * @return {var} The removed item.\n     */\n    remove : function(item)\n    {\n      var index = this.indexOf(item);\n\n      if (index != -1)\n      {\n        this.splice(index, 1).dispose();\n        return item;\n      }\n    },\n\n\n    /**\n     * Check whether the given array has the same content as this.\n     * Checks only the equality of the arrays' content.\n     *\n     * @param array {qx.data.Array} The array to check.\n     * @return {Boolean} Whether the two arrays are equal.\n     */\n    equals : function(array)\n    {\n      if (this.length !== array.length) {\n        return false;\n      }\n\n      array = qx.lang.Array.toNativeArray(array);\n      for (var i = 0; i < this.length; i++)\n      {\n        if (this.getItem(i) !== array[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n\n    /**\n     * Returns the sum of all values in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number} The sum of all values.\n     */\n    sum : function()\n    {\n      var result = 0;\n      for (var i = 0; i < this.length; i++) {\n        result += this.getItem(i);\n      }\n\n      return result;\n    },\n\n\n    /**\n     * Returns the highest value in the given array.\n     * Supports numeric values only.\n     *\n     * @return {Number | null} The highest of all values or undefined if the\n     *   array is empty.\n     */\n    max : function()\n    {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++)\n      {\n        if (this.getItem(i) > result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n\n    /**\n     * Returns the lowest value in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number | null} The lowest of all values or undefined\n     *   if the array is empty.\n     */\n    min : function()\n    {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++)\n      {\n        if (this.getItem(i) < result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n\n    /**\n     * Invokes the given function for every item in the array.\n     *\n     * @param callback {Function} The function which will be call for every\n     *   item in the array. It will be invoked with three parameters:\n     *   the item, the index and the array itself.\n     * @param context {var?} The context in which the callback will be invoked.\n     */\n    forEach : function(callback, context)\n    {\n      for (var i = 0; i < this.__array.length; i++) {\n        callback.call(context, this.__array[i], i, this);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      Additional JS1.6 methods\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Creates a new array with all elements that pass the test implemented by\n     * the provided function. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing only the items\n     *  which passed the test.\n     */\n    filter : function(callback, self) {\n      return new qx.data.Array(this.__array.filter(callback, self));\n    },\n\n\n    /**\n     * Creates a new array with the results of calling a provided function on every\n     * element in this array. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The mapping function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing the new created items.\n     */\n    map : function(callback, self) {\n      return new qx.data.Array(this.__array.map(callback, self));\n    },\n\n\n    /**\n     * Tests whether any element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if any element passed the test function.\n     */\n    some : function(callback, self) {\n      return this.__array.some(callback, self);\n    },\n\n\n    /**\n     * Tests whether every element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if every element passed the test function.\n     */\n    every : function(callback, self) {\n      return this.__array.every(callback, self);\n    },\n\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from left-to-right) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduce : function(callback, initValue) {\n      return this.__array.reduce(callback, initValue);\n    },\n\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from right-to-left) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduceRight : function(callback, initValue) {\n      return this.__array.reduceRight(callback, initValue);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL HELPERS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Internal function which updates the length property of the array.\n     * Every time the length will be updated, a {@link #changeLength} data\n     * event will be fired.\n     */\n    __updateLength: function() {\n      var oldLength = this.length;\n      this.length = this.__array.length;\n      this.fireDataEvent(\"changeLength\", this.length, oldLength);\n    },\n\n\n    /**\n     * Helper to update the event propagation for a range of items.\n     * @param from {Number} Start index.\n     * @param to {Number} End index.\n     */\n    __updateEventPropagation : function(from, to) {\n      for (var i=from; i < to; i++) {\n        this._registerEventChaining(this.__array[i], this.__array[i], i);\n      };\n    }\n  },\n\n\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n  */\n\n  destruct : function() {\n    for (var i = 0; i < this.__array.length; i++) {\n      var item = this.__array[i];\n      this._applyEventPropagation(null, item, i);\n\n      // dispose the items on auto dispose\n      if (this.isAutoDisposeItems() && item && item instanceof qx.core.Object) {\n        item.dispose();\n      }\n    }\n\n    this.__array = null;\n  }\n});\n"
  ]
}