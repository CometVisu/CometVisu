{
  "className": "qx.dev.unit.TestSuite",
  "packageName": "qx.dev.unit",
  "name": "TestSuite",
  "superClass": "qx.dev.unit.AbstractTestSuite",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 147,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2007-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>A TestSuite is a collection of test functions, classes and other test suites,\n which should be run together.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 14
      },
      "end": {
        "line": 42,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "testClassOrNamespace {var} Either a string with the name of the test\n    class or test namespace or a reference to the test class or namespace.\n    All test in the given class/namespace will be added to the suite.",
          "paramName": "testClassOrNamespace",
          "description": " Either a string with the name of the test\n    class or test namespace or a reference to the test class or namespace.\n    All test in the given class/namespace will be added to the suite.",
          "type": "var"
        }
      ]
    }
  },
  "members": {
    "add": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a test class or namespace to the suite</p>"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreDeprecated(alert, eval)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testClassOrNamespace {var} Either a string with the name of the test\n    class or test namespace or a reference to the test class or namespace.\n    All test in the given class/namespace will be added to the suite.",
            "paramName": "testClassOrNamespace",
            "description": " Either a string with the name of the test\n    class or test namespace or a reference to the test class or namespace.\n    All test in the given class/namespace will be added to the suite.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addTestNamespace": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 113,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add all tests from the given namespace to the suite</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "namespace {Object} The topmost namespace of the tests classes to add.",
            "paramName": "namespace",
            "description": " The topmost namespace of the tests classes to add.",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addTestClass": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a test class to the suite</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {Class} The test class to add",
            "paramName": "clazz",
            "description": " The test class to add",
            "type": "Class"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTestClasses": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 145,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a list of all test classes in the suite</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Class[]} A list of all test classes in the suite",
            "type": "Class[]",
            "description": " A list of all test classes in the suite"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.AbstractTestSuite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.AbstractTestSuite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.AbstractTestSuite",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.AbstractTestSuite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.AbstractTestSuite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.AbstractTestSuite",
      "property": "reset"
    }
  },
  "descendants": []
}