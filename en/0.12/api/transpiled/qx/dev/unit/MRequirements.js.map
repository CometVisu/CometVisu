{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/MRequirements.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "include",
    "dev",
    "unit",
    "MRequirementsBasic",
    "statics",
    "__hasPhp",
    "members",
    "hasHttp",
    "document",
    "location",
    "protocol",
    "indexOf",
    "hasPhp",
    "MRequirements",
    "url",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "req",
    "bom",
    "request",
    "Xhr",
    "onload",
    "lang",
    "Function",
    "bind",
    "Json",
    "parse",
    "responseText",
    "ex",
    "onerror",
    "abort",
    "open",
    "send",
    "hasGuiApp",
    "core",
    "Init",
    "getApplication",
    "application",
    "Standalone",
    "hasInlineApp",
    "Inline",
    "hasNativeApp",
    "Native",
    "hasChrome",
    "Environment",
    "get",
    "hasFirefox",
    "hasGecko",
    "hasIe",
    "hasMshtml",
    "hasOpera",
    "hasWebkit",
    "hasNoOsx",
    "hasNoWin7",
    "isWin7",
    "hasNoWin10",
    "isWin10",
    "hasNoChromeOnLinux",
    "hasAsyncFunctions"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/* *********************************************************************\n************************************************************************ */\n\n/**\n * Common requirement checks for unit tests. Example:\n *\n * <pre class=\"javascript\">\n * testBackend : function()\n * {\n *   this.require([\"http\", \"php\"]); // test will be skipped unless all conditions are met\n *   // test code goes here\n * }\n * </pre>\n *\n * @use(feature-checks)\n * @ignore(qx.application.Standalone)\n * @ignore(qx.application.Inline)\n * @ignore(qx.application.Native)\n *\n * @asset(qx/test/xmlhttp/php_version.php)\n */\nqx.Mixin.define(\"qx.dev.unit.MRequirements\", {\n\n  include : [qx.dev.unit.MRequirementsBasic],\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n  statics :\n  {\n    /** @type {Boolean} Result of {@link #hasPhp}. Stored as class member to avoid\n     * repeating the check. */\n    __hasPhp : null\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members :\n  {\n\n    /**\n     * Checks if the application has been loaded over HTTP.\n     *\n     * @return {Boolean} <code>true</code> if HTTP is currently used\n     */\n    hasHttp : function()\n    {\n      return document.location.protocol.indexOf(\"http\") == 0;\n    },\n\n\n    /**\n     * Checks if the server supports PHP.\n     *\n     * @return {Boolean} <code>true</code> if PHP is supported by the backend\n     */\n    hasPhp : function()\n    {\n      if (qx.dev.unit.MRequirements.__hasPhp != null) {\n        return qx.dev.unit.MRequirements.__hasPhp;\n      }\n\n      var url = qx.util.ResourceManager.getInstance().toUri(\"qx/test/xmlhttp/php_version.php\");\n      var req = new qx.bom.request.Xhr();\n\n      req.onload = qx.lang.Function.bind(function() {\n        try {\n          qx.lang.Json.parse(req.responseText);\n          qx.dev.unit.MRequirements.__hasPhp = true;\n        } catch(ex) {\n          qx.dev.unit.MRequirements.__hasPhp = false;\n        }\n      }, this);\n\n      req.onerror = req.abort = qx.lang.Function.bind(function() {\n        qx.dev.unit.MRequirements.__hasPhp = false;\n      }, this);\n\n      req.open(\"POST\", url, false);\n      try {\n        req.send();\n      } catch(ex) {\n        qx.dev.unit.MRequirements.__hasPhp = false;\n      }\n\n      return qx.dev.unit.MRequirements.__hasPhp;\n    },\n\n\n    /**\n     * Checks if the application extends qx.application.Standalone\n     *\n     * @return {Boolean} <code>true</code> if the application is a standalone (GUI)\n     * application\n     */\n    hasGuiApp : function()\n    {\n      try {\n        return qx.core.Init.getApplication() instanceof qx.application.Standalone;\n      } catch(ex) {\n        return false;\n      }\n    },\n\n\n    /**\n     * Checks if the application extends qx.application.Inline\n     *\n     * @return {Boolean} <code>true</code> if the application is an inline application\n     */\n    hasInlineApp : function()\n    {\n      try {\n        return qx.core.Init.getApplication() instanceof qx.application.Inline;\n      } catch(ex) {\n        return false;\n      }\n    },\n\n\n    /**\n     * Checks if the application extends qx.application.Native\n     *\n     * @return {Boolean} <code>true</code> if the application is a native application\n     */\n    hasNativeApp : function()\n    {\n      try {\n        return qx.core.Init.getApplication() instanceof qx.application.Native;\n      } catch(ex) {\n        return false;\n      }\n    },\n\n\n    /**\n     * Checks if the application is running in Google Chrome\n     *\n     * @return {Boolean} <code>true</code> if the browser is Google Chrome\n     */\n    hasChrome : function()\n    {\n      return qx.core.Environment.get(\"browser.name\") === \"chrome\";\n    },\n\n\n    /**\n     * Checks if the application is running in Firefox\n     *\n     * @return {Boolean} <code>true</code> if the browser is Firefox\n     */\n    hasFirefox : function()\n    {\n      return qx.core.Environment.get(\"browser.name\") === \"firefox\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the Gecko engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is Mozilla Gecko\n     */\n    hasGecko : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"gecko\";\n    },\n\n\n    /**\n     * Checks if the application is running in Internet Explorer\n     *\n     * @return {Boolean} <code>true</code> if the browser is Internet Explorer\n     */\n    hasIe : function()\n    {\n      return qx.core.Environment.get(\"browser.name\") === \"ie\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the MSHTML engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is MSHTML\n     */\n    hasMshtml : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"mshtml\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the Opera engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is Opera\n     */\n    hasOpera : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"opera\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the Webkit engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is Webkit\n     */\n    hasWebkit : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"webkit\";\n    },\n\n\n    /**\n     * Checks if the application is NOT running on OS X\n     *\n     * @return {Boolean} <code>true</code> if the operating system is NOT OX X\n     */\n    hasNoOsx : function()\n    {\n      return (qx.core.Environment.get(\"os.name\") === \"osx\"?false:true);\n    },\n\n\n    /**\n     * Checks if the application is running on Windows 7\n     *\n     * @return {Boolean} <code>false</code> if operating system is Windows 7\n     */\n    hasNoWin7 : function()\n    {\n      var isWin7 = (qx.core.Environment.get(\"os.name\") === \"win\" && qx.core.Environment.get(\"os.version\") === \"7\");\n      return (isWin7 ? false : true);\n    },\n\n\n    /**\n     * Checks if the application is running on Windows 10\n     *\n     * @return {Boolean} <code>false</code> if operating system is Windows 10\n     */\n    hasNoWin10 : function()\n    {\n      var isWin10 = (qx.core.Environment.get(\"os.name\") === \"win\" && qx.core.Environment.get(\"os.version\") === \"10\");\n      return (isWin10 ? false : true);\n    },\n\n\n    /**\n     * Checks if the application is not running in a Google Chrome browser on Linux\n     *\n     * @return {Boolean} <code>true</code> if the browser is not Google Chrome on Linux\n     */\n    hasNoChromeOnLinux : function()\n    {\n      return (qx.core.Environment.get(\"browser.name\") === \"chrome\" && qx.core.Environment.get(\"os.name\") === \"linux\"?false:true);\n    },\n\n\n    /**\n    * Checks if the application is running on a client supporting async functions\n    *\n    * @return {Boolean} <code>true</code> if the client supports async functions\n    */\n    hasAsyncFunctions : function()\n    {\n      return qx.core.Environment.get(\"ecmascript.function.async\");\n    }\n  }\n\n});\n"
  ]
}