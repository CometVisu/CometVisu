{
  "className": "qx.dev.unit.TestLoaderBasic",
  "packageName": "qx.dev.unit",
  "name": "TestLoaderBasic",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [
    "qx.dev.unit.MTestLoader"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 39,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2010 1&amp;1 Internet AG, Germany, http://www.1and1.org\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Daniel Wagner (d_wagner)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Test loader for server-side/\"headless\" environments</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 14
      },
      "end": {
        "line": 38,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "nameSpace {String} Test namespace, e.g. myapplication.test.*",
          "paramName": "nameSpace",
          "description": " Test namespace, e.g. myapplication.test.*",
          "type": "String"
        }
      ]
    }
  },
  "members": {
    "_getClassNameFromUrl": {
      "type": "function",
      "name": "_getClassNameFromUrl",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses the url parameters and tries to find the classes to test.\n The pattern is like <code>index.html?testclass=qx.test</code></p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the class/namespace to test",
            "type": "String",
            "description": " the class/namespace to test"
          }
        ]
      }
    },
    "setTestNamespace": {
      "type": "function",
      "name": "setTestNamespace",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the top level namespace of the test cases to test. All classes\n below this namespace extending {@link TestCase} will be tested.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "namespace {Object} Namespace to add",
            "paramName": "namespace",
            "description": " Namespace to add",
            "type": "Object"
          }
        ]
      }
    },
    "runJsUnit": {
      "type": "function",
      "name": "runJsUnit",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader"
    },
    "runStandAlone": {
      "type": "function",
      "name": "runStandAlone",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader"
    },
    "getTestDescriptions": {
      "type": "function",
      "name": "getTestDescriptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a list of test descriptions</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} A description of all tests.",
            "type": "String",
            "description": " A description of all tests."
          }
        ]
      }
    },
    "runTests": {
      "type": "function",
      "name": "runTests",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Runs exactly one test from the test suite</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testResult {qx.dev.unit.TestResult} the result logger",
            "paramName": "testResult",
            "description": " the result logger",
            "type": "qx.dev.unit.TestResult"
          },
          {
            "name": "@param",
            "body": "className {String} Name of the test class",
            "paramName": "className",
            "description": " Name of the test class",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "methodName {String} Name of the test method",
            "paramName": "methodName",
            "description": " Name of the test method",
            "type": "String"
          }
        ]
      }
    },
    "runTestsFromNamespace": {
      "type": "function",
      "name": "runTestsFromNamespace",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Runs all tests inside of the given namespace</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testResult {qx.dev.unit.TestResult} the result logger",
            "paramName": "testResult",
            "description": " the result logger",
            "type": "qx.dev.unit.TestResult"
          },
          {
            "name": "@param",
            "body": "namespaceName {String} Namespace of the tests to run",
            "paramName": "namespaceName",
            "description": " Namespace of the tests to run",
            "type": "String"
          }
        ]
      }
    },
    "getSuite": {
      "type": "function",
      "name": "getSuite",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>suite</code>.\n\nFor further details take a look at the property definition: {@link #suite}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.dev.unit.TestSuite",
            "desc": "Returns the value for suite"
          }
        ]
      }
    },
    "setSuite": {
      "type": "function",
      "name": "setSuite",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>suite</code>.\n\nFor further details take a look at the property definition: {@link #suite}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.dev.unit.TestSuite",
            "paramName": "value",
            "desc": "Value for suite"
          }
        ]
      }
    },
    "resetSuite": {
      "type": "function",
      "name": "resetSuite",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MTestLoader",
      "property": "reset"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "descendants": []
}