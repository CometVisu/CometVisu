{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/dev/unit/TestSuite.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "AbstractTestSuite",
    "construct",
    "testClassOrNamespace",
    "_tests",
    "add",
    "members",
    "lang",
    "Type",
    "isString",
    "evalTestClassOrNamespace",
    "window",
    "eval",
    "addFail",
    "isFunction",
    "addTestClass",
    "isObject",
    "addTestNamespace",
    "namespace",
    "classname",
    "isSubClassOf",
    "TestCase",
    "$$classtype",
    "Array",
    "key",
    "clazz",
    "push",
    "TestClass",
    "getTestClasses",
    "classes",
    "i",
    "length",
    "test",
    "TestSuite"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A TestSuite is a collection of test functions, classes and other test suites,\n * which should be run together.\n */\nqx.Class.define(\"qx.dev.unit.TestSuite\",\n{\n  extend : qx.dev.unit.AbstractTestSuite,\n\n\n  /**\n   * @param testClassOrNamespace {var} Either a string with the name of the test\n   *    class or test namespace or a reference to the test class or namespace.\n   *    All test in the given class/namespace will be added to the suite.\n   */\n  construct : function(testClassOrNamespace)\n  {\n    this.base(arguments);\n\n    this._tests = [];\n\n    if (testClassOrNamespace) {\n      this.add(testClassOrNamespace);\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Add a test class or namespace to the suite\n     *\n     * @lint ignoreDeprecated(alert, eval)\n     *\n     * @param testClassOrNamespace {var} Either a string with the name of the test\n     *    class or test namespace or a reference to the test class or namespace.\n     *    All test in the given class/namespace will be added to the suite.\n     */\n    add : function(testClassOrNamespace)\n    {\n      // This try-block is needed to avoid errors (e.g. \"too much recursion\")\n//      try\n//      {\n        if (qx.lang.Type.isString(testClassOrNamespace))\n        {\n          var evalTestClassOrNamespace = window.eval(testClassOrNamespace);\n\n          if (!evalTestClassOrNamespace) {\n            this.addFail(testClassOrNamespace, \"The class/namespace '\" + testClassOrNamespace + \"' is undefined!\");\n          }\n\n          testClassOrNamespace = evalTestClassOrNamespace;\n        }\n\n        if (qx.lang.Type.isFunction(testClassOrNamespace)) {\n          this.addTestClass(testClassOrNamespace);\n        } else if (qx.lang.Type.isObject(testClassOrNamespace)) {\n          this.addTestNamespace(testClassOrNamespace);\n        }\n        else\n        {\n          this.addFail(\"existsCheck\", \"Unknown test class '\" + testClassOrNamespace + \"'!\");\n          return;\n        }\n//      }\n//      catch (ex)\n//      {\n//        window.alert(\"An error occurred while adding test classes/namespaces\\nPlease try a different test file.\");\n//      }\n    },\n\n\n    /**\n     * Add all tests from the given namespace to the suite\n     *\n     * @param namespace {Object} The topmost namespace of the tests classes to add.\n     */\n    addTestNamespace : function(namespace)\n    {\n      if (qx.lang.Type.isFunction(namespace) && namespace.classname)\n      {\n        if (qx.Class.isSubClassOf(namespace, qx.dev.unit.TestCase))\n        {\n          if (namespace.$$classtype !== \"abstract\") {\n            this.addTestClass(namespace);\n          }\n          return;\n        }\n      }\n      else if (qx.lang.Type.isObject(namespace) && !(namespace instanceof Array))\n      {\n        for (var key in namespace) {\n          this.addTestNamespace(namespace[key]);\n        }\n      }\n    },\n\n\n    /**\n     * Add a test class to the suite\n     *\n     * @param clazz {Class} The test class to add\n     */\n    addTestClass : function(clazz) {\n      this._tests.push(new qx.dev.unit.TestClass(clazz));\n    },\n\n\n    /**\n     * Get a list of all test classes in the suite\n     *\n     * @return {Class[]} A list of all test classes in the suite\n     */\n    getTestClasses : function()\n    {\n      var classes = [];\n\n      for (var i=0; i<this._tests.length; i++)\n      {\n        var test = this._tests[i];\n\n        if (test instanceof qx.dev.unit.TestClass) {\n          classes.push(test);\n        }\n      }\n\n      return classes;\n    }\n  }\n});\n"
  ]
}