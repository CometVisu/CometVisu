{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/dev/Debug.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "disposeProfilingActive",
    "debugObject",
    "obj",
    "initialMessage",
    "maxLevel",
    "log",
    "Logger",
    "debug",
    "dev",
    "Debug",
    "debugObjectToString",
    "bHtml",
    "eol",
    "sol",
    "currentLevel",
    "indentStr",
    "i",
    "message",
    "displayObj",
    "level",
    "prop",
    "Array",
    "undefined",
    "e",
    "length",
    "count",
    "ex",
    "getFunctionName",
    "func",
    "functionType",
    "clazz",
    "self",
    "wrapper",
    "lang",
    "Object",
    "getKeyFromValue",
    "prototype",
    "debugProperties",
    "model",
    "html",
    "indent",
    "newLine",
    "Type",
    "isNumber",
    "isString",
    "isBoolean",
    "hasInterface",
    "constructor",
    "data",
    "IListData",
    "j",
    "getItem",
    "properties",
    "$$properties",
    "key",
    "String",
    "firstUp",
    "startDisposeProfiling",
    "stopDisposeProfiling",
    "showDisposeProfiling"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006, 2007 Derrell Lipman\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n * Useful debug capabilities\n * @ignore(qx.ui.decoration.IDecorator)\n * @ignore(qx.theme.manager.Decoration)\n * @ignore(qx.ui.core.queue.Dispose)\n * @ignore(qx.bom.Font)\n * @ignore(qx.theme.manager.Font)\n */\nqx.Class.define(\"qx.dev.Debug\",\n{\n  statics :\n  {\n    /**\n     * Flag that shows whether dispose profiling is currently active\n     * @internal\n     */\n    disposeProfilingActive : false,\n\n    /**\n     * Recursively display an object (as a debug message)\n     *\n     *\n     * @param obj {Object}\n     *   The object to be recursively displayed\n     *\n     * @param initialMessage {String|null}\n     *   The initial message to be displayed.\n     *\n     * @param maxLevel {Integer ? 10}\n     *   The maximum level of recursion.  Objects beyond this level will not\n     *   be displayed.\n     *\n     */\n    debugObject : function(obj, initialMessage, maxLevel)\n    {\n      // We've compiled the complete message.  Give 'em what they came for!\n      qx.log.Logger.debug(this,\n                          qx.dev.Debug.debugObjectToString(obj,\n                                                           initialMessage,\n                                                           maxLevel,\n                                                           false));\n    },\n\n    /**\n     * Recursively display an object (into a string)\n     *\n     *\n     * @param obj {Object}\n     *   The object to be recursively displayed\n     *\n     * @param initialMessage {String|null}\n     *   The initial message to be displayed.\n     *\n     * @param maxLevel {Integer ? 10}\n     *   The maximum level of recursion.  Objects beyond this level will not\n     *   be displayed.\n     *\n     * @param bHtml {Boolean ? false}\n     *   If true, then render the debug message in HTML;\n     *   Otherwise, use spaces for indentation and \"\\n\" for end of line.\n     *\n     * @return {String}\n     *   The string containing the recursive display of the object\n     *\n     * @lint ignoreUnused(prop)\n     */\n    debugObjectToString : function(obj, initialMessage, maxLevel, bHtml)\n    {\n      // If a maximum recursion level was not specified...\n      if (!maxLevel)\n      {\n        // ... then create one arbitrarily\n        maxLevel = 10;\n      }\n\n      // If they want html, the differences are \"<br>\" instead of \"\\n\"\n      // and how we do the indentation.  Define the end-of-line string\n      // and a start-of-line function.\n      var eol = (bHtml ? \"</span><br>\" : \"\\n\");\n      var sol = function(currentLevel)\n      {\n        var indentStr;\n        if (! bHtml)\n        {\n          indentStr = \"\";\n          for (var i = 0; i < currentLevel; i++)\n          {\n            indentStr += \"  \";\n          }\n        }\n        else\n        {\n          indentStr =\n            \"<span style='padding-left:\" + (currentLevel * 8) + \"px;'>\";\n        }\n        return indentStr;\n      };\n\n      // Initialize an empty message to be displayed\n      var message = \"\";\n\n      // Function to recursively display an object\n      var displayObj = function(obj, level, maxLevel)\n      {\n        // If we've exceeded the maximum recursion level...\n        if (level > maxLevel)\n        {\n          // ... then tell 'em so, and get outta dodge.\n          message += (\n            sol(level) +\n              \"*** TOO MUCH RECURSION: not displaying ***\" +\n              eol);\n          return;\n        }\n\n        // Is this an ordinary non-recursive item?\n        if (typeof (obj) != \"object\")\n        {\n          // Yup.  Just add it to the message.\n          message += sol(level) + obj + eol;\n          return;\n        }\n\n        // We have an object  or array.  For each child...\n        for (var prop in obj)\n        {\n          // Is this child a recursive item?\n          if (typeof (obj[prop]) == \"object\")\n          {\n            try\n            {\n              // Yup.  Determine the type and add it to the message\n              if (obj[prop] instanceof Array)\n              {\n                message += sol(level) + prop + \": \" + \"Array\" + eol;\n              }\n              else if (obj[prop] === null)\n              {\n                message += sol(level) + prop + \": \" + \"null\" + eol;\n                continue;\n              }\n              else if (obj[prop] === undefined)\n              {\n                message += sol(level) + prop + \": \" + \"undefined\" + eol;\n                continue;\n              }\n              else\n              {\n                message += sol(level) + prop + \": \" + \"Object\" + eol;\n              }\n\n              // Recurse into it to display its children.\n              displayObj(obj[prop], level + 1, maxLevel);\n            }\n            catch (e)\n            {\n              message +=\n                sol(level) + prop + \": EXCEPTION expanding property\" + eol;\n            }\n          }\n          else\n          {\n            // We have an ordinary non-recursive item.  Add it to the message.\n            message += sol(level) + prop + \": \" + obj[prop] + eol;\n          }\n        }\n      };\n\n      // Was an initial message provided?\n      if (initialMessage)\n      {\n        // Yup.  Add it to the displayable message.\n        message += sol(0) + initialMessage + eol;\n      }\n\n      if (obj instanceof Array)\n      {\n        message += sol(0) + \"Array, length=\" + obj.length + \":\" + eol;\n      }\n      else if (typeof(obj) == \"object\")\n      {\n        var count = 0;\n        for (var prop in obj)\n        {\n          count++;\n        }\n        message += sol(0) + \"Object, count=\" + count + \":\" + eol;\n      }\n\n      message +=\n        sol(0) +\n        \"------------------------------------------------------------\" +\n        eol;\n\n      try\n      {\n        // Recursively display this object\n        displayObj(obj, 0, maxLevel);\n      }\n      catch(ex)\n      {\n        message += sol(0) + \"*** EXCEPTION (\" + ex + \") ***\" + eol;\n      }\n\n      message +=\n        sol(0) +\n        \"============================================================\" +\n        eol;\n\n      return message;\n    },\n\n\n    /**\n     * Get the name of a member/static function or constructor defined using the new style class definition.\n     * If the function could not be found <code>null</code> is returned.\n     *\n     * This function uses a linear search, so don't use it in performance critical\n     * code.\n     *\n     * @param func {Function} member function to get the name of.\n     * @param functionType {String?\"all\"} Where to look for the function. Possible values are \"members\", \"statics\", \"constructor\", \"all\"\n     * @return {String|null} Name of the function (null if not found).\n     */\n    getFunctionName: function(func, functionType)\n    {\n      var clazz = func.self;\n      if (!clazz) {\n        return null;\n      }\n\n      // unwrap\n      while(func.wrapper) {\n        func = func.wrapper;\n      }\n\n      switch (functionType)\n      {\n        case \"construct\":\n          return func == clazz ? \"construct\" : null;\n\n        case \"members\":\n          return qx.lang.Object.getKeyFromValue(clazz, func);\n\n        case \"statics\":\n          return qx.lang.Object.getKeyFromValue(clazz.prototype, func);\n\n        default:\n          // constructor\n          if (func == clazz) {\n            return \"construct\";\n          }\n\n          return (\n            qx.lang.Object.getKeyFromValue(clazz.prototype, func) ||\n            qx.lang.Object.getKeyFromValue(clazz, func) ||\n            null\n          );\n      }\n    },\n\n\n    /**\n     * Returns a string representing the given model. The string will include\n     * all model objects to a given recursive depth.\n     *\n     * @param model {qx.core.Object} The model object.\n     * @param maxLevel {Number ? 10} The amount of max recursive depth.\n     * @param html {Boolean ? false} If the returned string should have \\n\\r as\n     *   newline of <br>.\n     * @param indent {Number ? 1} The indentation level.\n     *   (Needed for the recursion)\n     *\n     * @return {String} A string representation of the given model.\n     */\n    debugProperties: function(model, maxLevel, html, indent) {\n      // set the default max depth of the recursion\n      if (maxLevel == null) {\n        maxLevel = 10;\n      }\n      // set the default startin indent\n      if (indent == null) {\n        indent = 1;\n      }\n\n      var newLine = \"\";\n      html ? newLine = \"<br>\" : newLine = \"\\r\\n\";\n\n      var message = \"\";\n\n      if (\n        qx.lang.Type.isNumber(model)\n        || qx.lang.Type.isString(model)\n        || qx.lang.Type.isBoolean(model)\n        || model == null\n        || maxLevel <= 0\n      ) {\n        return model;\n\n      } else if (qx.Class.hasInterface(model.constructor, qx.data.IListData)) {\n        // go threw the data structure\n        for (var i = 0; i < model.length; i++) {\n          // print out the indentation\n          for (var j = 0; j < indent; j++) {\n            message += \"-\";\n          }\n          message += \"index(\" + i + \"): \"\n            + this.debugProperties(model.getItem(i), maxLevel - 1, html, indent + 1)\n            + newLine;\n        }\n        return message + newLine;\n\n      } else if (model.constructor != null) {\n        // go threw all properties\n        var properties = model.constructor.$$properties;\n        for (var key in properties) {\n          message += newLine;\n          // print out the indentation\n          for (var j = 0; j < indent; j++) {\n            message += \"-\";\n          }\n          message += \" \" + key + \": \" + this.debugProperties(\n            model[\"get\" + qx.lang.String.firstUp(key)](), maxLevel - 1, html, indent + 1\n          );\n        }\n        return message;\n      }\n      return \"\";\n    },\n\n\n    /**\n     * Starts a dispose profiling session. Use {@link #stopDisposeProfiling} to\n     * get the results\n     *\n     * @return {Number|undefined}\n     *   Returns a handle which may be passed to {@link #stopDisposeProfiling}\n     *   indicating the start point for searching for undisposed objects.\n     */\n    startDisposeProfiling : qx.core.Environment.select(\"qx.debug.dispose\", {\n      \"true\" : function() {\n        this.disposeProfilingActive = true;\n        this.__nextHashFirst = qx.core.ObjectRegistry.getNextHash();\n        return this.__nextHashFirst;\n      },\n\n      \"default\" : (function() {})\n    }),\n\n\n    /**\n     * Returns a list of any (qx) objects that were created but not disposed\n     * since {@link #startDisposeProfiling} was called. Also returns a stack\n     * trace recorded at the time the object was created. The starting point\n     * of dispose tracking is reset, so to do further dispose profiling, a new\n     * call to {@link #startDisposeProfile} must be issued.\n     *\n     * @signature function(checkFunction)\n     * @param checkFunction {Function} Custom check function. It is called once\n     * for each object that was created after dispose profiling was started,\n     * with the object as the only parameter. If it returns false, the object\n     * will not be included in the returned list\n     * @return {Map[]} List of maps. Each map contains two keys:\n     * <code>object</code> and <code>stackTrace</code>\n     */\n    stopDisposeProfiling : qx.core.Environment.select(\"qx.debug.dispose\", {\n      \"true\" : function(checkFunction, startHandle) {\n        if (!this.__nextHashFirst) {\n          qx.log.Logger.error(\"Call \" + this.classname + \".startDisposeProfiling first.\");\n          return [];\n        }\n\n        //qx.core.ObjectRegistry.saveStackTraces = false;\n        this.disposeProfilingActive = false;\n\n        var undisposedObjects = this.showDisposeProfiling(checkFunction, startHandle || this.__nextHashFirst);\n\n        delete this.__nextHashFirst;\n        return undisposedObjects;\n      },\n\n      \"default\" : (function() {})\n    }),\n\n    /**\n     * Returns a list of any (qx) objects that were created but not disposed\n     * since {@link #startDisposeProfiling} was called. Also returns a stack\n     * trace recorded at the time the object was created. Does not restart the\n     * tracking point, so subsequent calls to this method will continue to\n     * show undisposed objects since {@link #startDisposeProfiling} was\n     * called.\n     *\n     * @signature function(checkFunction)\n     * @param checkFunction {Function} Custom check function. It is called once\n     * for each object that was created after dispose profiling was started,\n     * with the object as the only parameter. If it returns false, the object\n     * will not be included in the returned list\n     * @return {Map[]} List of maps. Each map contains two keys:\n     * <code>object</code> and <code>stackTrace</code>\n     */\n    showDisposeProfiling : qx.core.Environment.select(\"qx.debug.dispose\", {\n      \"true\" : function(checkFunction) {\n        var undisposedObjects = [];\n        // If destroy calls another destroy, flushing the queue once is not enough\n        if (qx.Class.getByName(\"qx.ui.core.queue.Dispose\")) {\n          while (!qx.ui.core.queue.Dispose.isEmpty()) {\n            qx.ui.core.queue.Dispose.flush();\n          }\n        }\n        var nextHashLast = qx.core.ObjectRegistry.getNextHash();\n        var postId = qx.core.ObjectRegistry.getPostId();\n        var traces = qx.core.ObjectRegistry.getStackTraces();\n        for (var hash = this.__nextHashFirst; hash<nextHashLast; hash++) {\n          var obj = qx.core.ObjectRegistry.fromHashCode(hash + postId);\n          if (obj && obj.isDisposed && !obj.isDisposed()) {\n            // User-defined check\n            if (checkFunction && typeof checkFunction == \"function\" &&\n              !checkFunction(obj)) {\n                continue;\n            }\n            // Singleton instances\n            if (obj.constructor.$$instance === obj) {\n              continue;\n            }\n            // Event handlers\n            if (qx.Class.implementsInterface(obj, qx.event.IEventHandler)) {\n              continue;\n            }\n            // Pooled Decorators\n            if (obj.$$pooled) {\n              continue;\n            }\n            // Dynamic decorators\n            if (qx.Interface.getByName(\"qx.ui.decoration.IDecorator\") &&\n                qx.Class.getByName(\"qx.theme.manager.Decoration\") && \n                qx.Class.implementsInterface(obj, qx.ui.decoration.IDecorator) &&\n              qx.theme.manager.Decoration.getInstance().isCached(obj)) {\n              continue;\n            }\n            // ignored objects\n            if (obj.$$ignoreDisposeWarning) {\n              continue;\n            }\n            // Dynamic fonts\n            if (qx.Class.getByName(\"qx.bom.Font\") && \n                obj instanceof qx.bom.Font &&\n                qx.Class.getByName(\"qx.theme.manager.Font\") &&\n                qx.theme.manager.Font.getInstance().isDynamic(obj)) {\n              continue;\n            }\n            undisposedObjects.push({\n              object : obj,\n              stackTrace : traces[hash + postId] ? traces[hash + postId] : null\n            });\n          }\n        }\n\n        return undisposedObjects;\n      },\n\n      \"default\" : (function() {})\n    })\n  }\n});\n"
  ]
}