{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/log/appender/NodeConsole.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__OUT",
    "__ERR",
    "log",
    "logMessage",
    "level",
    "write",
    "debug",
    "info",
    "warn",
    "error",
    "process",
    "entry",
    "prop",
    "items",
    "p",
    "length",
    "item",
    "text",
    "defer",
    "stdout",
    "stderr",
    "appender",
    "NodeConsole"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EAA+C;AAE7CC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACIC,MAAAA,SAAK,EAAG,IAJV;;AAKE;AACJ;AACA;AACIC,MAAAA,SAAK,EAAG,IARV;;AAUE;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,GAAG,EAAG,aAASC,UAAT,EAAqBC,KAArB,EACN;AACE,YAAIA,KAAK,IAAI,OAAb,EAAsB;AACpB,eAAKH,SAAL,CAAWI,KAAX,CAAiBF,UAAU,GAAC,IAA5B;AACD,SAFD,MAEO;AACL,eAAKH,SAAL,CAAWK,KAAX,CAAiBF,UAAU,GAAC,IAA5B;AACD;AACF,OAxBH;;AA0BE;AACJ;AACA;AACA;AACA;AACIG,MAAAA,KAAK,EAAG,eAASH,UAAT,EACR;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,OAArB;AACD,OAlCH;;AAoCE;AACJ;AACA;AACA;AACA;AACII,MAAAA,IAAI,EAAG,cAASJ,UAAT,EACP;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,MAArB;AACD,OA5CH;;AA8CE;AACJ;AACA;AACA;AACA;AACIK,MAAAA,IAAI,EAAG,cAASL,UAAT,EACP;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,MAArB;AACD,OAtDH;;AAwDE;AACJ;AACA;AACA;AACA;AACIM,MAAAA,KAAK,EAAG,eAASN,UAAT,EACR;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,OAArB;AACD,OAhEH;;AAkEE;AACJ;AACA;AACA;AACA;AACIO,MAAAA,OAAO,EAAG,iBAASC,KAAT,EACV;AACE,YAAIP,KAAK,GAAGO,KAAK,CAACP,KAAN,IAAe,MAA3B;;AACA,aAAK,IAAIQ,IAAT,IAAiBD,KAAjB,EAAwB;AACtB,cAAIC,IAAI,IAAI,OAAZ,EAAqB;AACnB,gBAAIC,KAAK,GAAGF,KAAK,CAACC,IAAD,CAAjB;;AACA,iBAAK,IAAIE,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,KAAK,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,kBAAIE,IAAI,GAAGH,KAAK,CAACC,CAAD,CAAhB;AACA,mBAAKV,KAAL,EAAYY,IAAI,CAACC,IAAjB;AACD;AACF;AACF;AACF;AAnFH,KAH6C;;AA0F7C;AACF;AACA;AACEC,IAAAA,KAAK,EAAG,eAASnB,OAAT,EACR;AACE,UAAI,OAAOW,OAAP,KAAoB,WAAxB,EAAqC;AACnCX,QAAAA,OAAO,CAACC,SAAR,GAAgBU,OAAO,CAACS,MAAxB;AACApB,QAAAA,OAAO,CAACE,SAAR,GAAgBS,OAAO,CAACU,MAAxB;AACD;AACF;AAnG4C,GAA/C;AA1BA3B,EAAAA,EAAE,CAACS,GAAH,CAAOmB,QAAP,CAAgBC,WAAhB,CAA4B1B,aAA5B,GAA4CA,aAA5C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006-2011 1&1 Internet AG, Germany, http://www.1and1.org\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n     * Thomas Herchenroeder (thron7)\n\n************************************************************************ */\n\n/**\n * Log appender for qooxdoo applications running in Node.js. Writes log\n * messages to STDOUT/STDERR.\n *\n * @ignore(process.*)\n */\n\nqx.Class.define(\"qx.log.appender.NodeConsole\", {\n\n  statics:\n  {\n    /**\n     * process.stdout\n     */\n    __OUT : null,\n    /**\n     * process.stderr\n     */\n    __ERR : null,\n\n    /**\n     * Writes a message to the shell. Errors will be sent to STDERR, everything\n     * else goes to STDOUT\n     *\n     * @param logMessage {String} Message to be logged\n     * @param level {String} Log level. One of \"debug\", \"info\", \"warn\", \"error\"\n     */\n    log : function(logMessage, level)\n    {\n      if (level == \"error\") {\n        this.__ERR.write(logMessage+'\\n');\n      } else {\n        this.__OUT.write(logMessage+'\\n');\n      }\n    },\n\n    /**\n     * Logs a debug message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    debug : function(logMessage)\n    {\n      this.log(logMessage, \"debug\");\n    },\n\n    /**\n     * Logs an info message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    info : function(logMessage)\n    {\n      this.log(logMessage, \"info\");\n    },\n\n    /**\n     * Logs a warning message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    warn : function(logMessage)\n    {\n      this.log(logMessage, \"warn\");\n    },\n\n    /**\n     * Logs an error message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    error : function(logMessage)\n    {\n      this.log(logMessage, \"error\");\n    },\n\n    /**\n     * Process a log entry object from qooxdoo's logging system.\n     *\n     * @param entry {Map} Log entry object\n     */\n    process : function(entry)\n    {\n      var level = entry.level || \"info\";\n      for (var prop in entry) {\n        if (prop == \"items\") {\n          var items = entry[prop];\n          for (var p=0; p<items.length; p++) {\n            var item = items[p];\n            this[level](item.text);\n          }\n        }\n      }\n    }\n\n  },\n\n  /**\n   * @ignore(process.*)\n   */\n  defer : function(statics)\n  {\n    if (typeof(process) !== \"undefined\") {\n      statics.__OUT = process.stdout;\n      statics.__ERR = process.stderr;\n    }\n  }\n\n});\n"
  ]
}