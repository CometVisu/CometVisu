{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/log/appender/Element.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "element",
    "style",
    "bom",
    "Stylesheet",
    "createElement",
    "join",
    "log",
    "Logger",
    "register",
    "members",
    "__element",
    "setElement",
    "clear",
    "add",
    "elem",
    "innerHTML",
    "process",
    "entry",
    "formatter",
    "appender",
    "Formatter",
    "getFormatter",
    "appendChild",
    "toHtml",
    "scrollTop",
    "scrollHeight",
    "Element"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,MADnB;;AAKE;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACEC,IAAAA,SAAS,EAAG,mBAASC,OAAT,EACZ;AACE;AAEA,UAAIC,KAAK,GACT,CACE,4CADF,EAEE,6CAFF,EAGE,6CAHF,EAIE,8CAJF,EAKE,6CALF,EAME,2DANF,EAOE,6DAPF,EAQE,8DARF,EASE,0DATF,EAUE,wDAVF,EAWE,wDAXF,EAYE,yDAZF,EAaE,4DAbF,EAcE,6DAdF,CADA,CAHF,CAqBE;;AACAX,MAAAA,EAAE,CAACY,GAAH,CAAOC,UAAP,CAAkBC,aAAlB,CAAgCH,KAAK,CAACI,IAAN,CAAW,EAAX,CAAhC,EAtBF,CAwBE;;AACAf,MAAAA,EAAE,CAACgB,GAAH,CAAOC,MAAP,CAAcC,QAAd,CAAuB,IAAvB;AACD,KAzCH;;AA6CE;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EACP;AAEEC,MAAAA,SAAS,EAAG,IAFd;;AAIE;AACJ;AACA;AACA;AACA;AACIC,MAAAA,UAAU,EAAG,oBAASX,OAAT,EACb;AACE;AACA,aAAKY,KAAL,GAFF,CAIE;;AACA,YAAIZ,OAAJ,EAAa;AACXV,UAAAA,EAAE,CAACY,GAAH,CAAOF,OAAP,CAAeN,KAAf,CAAqBmB,GAArB,CAAyBb,OAAzB,EAAkC,YAAlC;AACD,SAPH,CASE;;;AACA,aAAKU,SAAL,GAAiBV,OAAjB;AACD,OArBH;;AAwBE;AACJ;AACA;AACA;AACIY,MAAAA,KAAK,EAAG,iBACR;AACE,YAAIE,IAAI,GAAG,KAAKJ,SAAhB,CADF,CAGE;;AACA,YAAII,IAAJ,EAAU;AACRA,UAAAA,IAAI,CAACC,SAAL,GAAiB,EAAjB;AACD;AACF,OApCH;;AAuCE;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAAO,EAAG,iBAASC,KAAT,EACV;AACE,YAAIH,IAAI,GAAG,KAAKJ,SAAhB;;AAEA,YAAI,CAACI,IAAL,EAAW;AACT;AACD,SALH,CAOE;;;AACA,YAAII,SAAS,GAAG5B,EAAE,CAACgB,GAAH,CAAOa,QAAP,CAAgBC,SAAhB,CAA0BC,YAA1B,EAAhB;AACAP,QAAAA,IAAI,CAACQ,WAAL,CAAiBJ,SAAS,CAACK,MAAV,CAAiBN,KAAjB,CAAjB,EATF,CAWE;;AACAH,QAAAA,IAAI,CAACU,SAAL,GAAiBV,IAAI,CAACW,YAAtB;AACD;AA3DH;AApDF,GADA;AArBAnC,EAAAA,EAAE,CAACgB,GAAH,CAAOa,QAAP,CAAgBO,OAAhB,CAAwBjC,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This appender is used to log to an existing DOM element\n */\nqx.Class.define(\"qx.log.appender.Element\",\n{\n  extend : qx.core.Object,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param element {Element} DOM element to use for log output.\n   */\n  construct : function(element)\n  {\n    this.base(arguments);\n\n    var style =\n    [\n      '.qxappender .level-debug{background:white}',\n      '.qxappender .level-info{background:#DEEDFA}',\n      '.qxappender .level-warn{background:#FFF7D5}',\n      '.qxappender .level-error{background:#FFE2D5}',\n      '.qxappender .level-user{background:#E3EFE9}',\n      '.qxappender .type-string{color:black;font-weight:normal;}',\n      '.qxappender .type-number{color:#155791;font-weight:normal;}',\n      '.qxappender .type-boolean{color:#15BC91;font-weight:normal;}',\n      '.qxappender .type-array{color:#CC3E8A;font-weight:bold;}',\n      '.qxappender .type-map{color:#CC3E8A;font-weight:bold;}',\n      '.qxappender .type-key{color:#565656;font-style:italic}',\n      '.qxappender .type-class{color:#5F3E8A;font-weight:bold}',\n      '.qxappender .type-instance{color:#565656;font-weight:bold}',\n      '.qxappender .type-stringify{color:#565656;font-weight:bold}'\n    ];\n\n    // Include stylesheet\n    qx.bom.Stylesheet.createElement(style.join(\"\"));\n\n    // Finally register to log engine\n    qx.log.Logger.register(this);\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __element : null,\n\n    /**\n     * Configures the DOM element to use.\n     *\n     * @param element {Element} DOM element to log to\n     */\n    setElement : function(element)\n    {\n      // Clear old element\n      this.clear();\n\n      // Add classname\n      if (element) {\n        qx.bom.element.Class.add(element, \"qxappender\");\n      }\n\n      // Link to element\n      this.__element = element;\n    },\n\n\n    /**\n     * Clears the current output.\n     *\n     */\n    clear : function()\n    {\n      var elem = this.__element;\n\n      // Remove all messages\n      if (elem) {\n        elem.innerHTML = \"\";\n      }\n    },\n\n\n    /**\n     * Processes a single log entry\n     *\n     * @signature function(entry)\n     * @param entry {Map} The entry to process\n     */\n    process : function(entry)\n    {\n      var elem = this.__element;\n\n      if (!elem) {\n        return;\n      }\n\n      // Append new content\n      var formatter = qx.log.appender.Formatter.getFormatter();\n      elem.appendChild(formatter.toHtml(entry));\n\n      // Scroll down\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }\n});\n"
  ]
}