{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/util/Uuid.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "createUuidV4",
    "buf",
    "bufIdx",
    "hexBytes",
    "i",
    "toString",
    "substr",
    "uuid",
    "BUFFER_SIZE",
    "bin",
    "uuidBin",
    "clearBuffer",
    "test",
    "crypt0",
    "crypto",
    "window",
    "msCrypto",
    "module",
    "require",
    "util",
    "Uuid",
    "randomBytes",
    "getRandomValues",
    "n",
    "bytes",
    "Uint8Array",
    "r",
    "push",
    "Math",
    "floor",
    "random",
    "randomBytesBuffered",
    "slice",
    "b"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2019 Zenesis Ltd http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (https://github.com/johnspackman/)\n\n************************************************************************ */\n\n/**\n * Helper class for generating UUIDs\n */\nqx.Class.define(\"qx.util.Uuid\", {\n  extend: qx.core.Object,\n  \n  statics: {\n    /**\n     * Creates an RFC4122 compliant UUID/v4 - that means that collisions are possible but highly\n     * unlikely (it has been said that \"you would need to do-loop uuid() at max speed for 73,067 \n     * years for a 50% chance of one collision\").\n     * \n     * The implementation of this is from https://github.com/jchook/uuid-random \n     * \n     * @returns {String} eg 534f57dc-301c-417a-ae4c-11a921716307\n     */\n    createUuidV4: null\n  }\n});\n\n/**\n * @ignore(crypto)\n * @ignore(module)\n * @ignore(module.exports)\n * @ignore(Uint8Array)\n * @ignore(require)\n */\n\n(function(){\n\n  var\n    buf,\n    bufIdx = 0,\n    hexBytes = [],\n    i\n  ;\n\n  // Pre-calculate toString(16) for speed\n  for (i = 0; i < 256; i++) {\n    hexBytes[i] = (i + 0x100).toString(16).substr(1);\n  }\n\n  // Buffer random numbers for speed\n  // Reduce memory usage by decreasing this number (min 16)\n  // or improve speed by increasing this number (try 16384)\n  uuid.BUFFER_SIZE = 4096;\n\n  // Binary uuids\n  uuid.bin = uuidBin;\n\n  // Clear buffer\n  uuid.clearBuffer = function() {\n    buf = null;\n    bufIdx = 0;\n  };\n\n  // Test for uuid\n  uuid.test = function(uuid) {\n    if (typeof uuid === 'string') {\n      return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(uuid);\n    }\n    return false;\n  };\n\n  // Node & Browser support\n  var crypt0;\n  if (typeof crypto !== 'undefined') {\n    crypt0 = crypto;\n  } else if( (typeof window !== 'undefined') && (typeof window.msCrypto !== 'undefined')) {\n    crypt0 = window.msCrypto; // IE11\n  }\n\n  if ((typeof module !== 'undefined') && (typeof require === 'function')) {\n    crypt0 = crypt0 || require('crypto');\n  }\n  qx.util.Uuid.createUuidV4 = uuid;\n\n  // Use best available PRNG\n  // Also expose this so you can override it.\n  uuid.randomBytes = (function(){\n    if (crypt0) {\n      if (crypt0.randomBytes) {\n        return crypt0.randomBytes;\n      }\n      if (crypt0.getRandomValues) {\n        return function(n) {\n          var bytes = new Uint8Array(n);\n          crypt0.getRandomValues(bytes);\n          return bytes;\n        };\n      }\n    }\n    return function(n) {\n      var i, r = [];\n      for (i = 0; i < n; i++) {\n        r.push(Math.floor(Math.random() * 256));\n      }\n      return r;\n    };\n  })();\n\n  // Buffer some random bytes for speed\n  function randomBytesBuffered(n) {\n    if (!buf || ((bufIdx + n) > uuid.BUFFER_SIZE)) {\n      bufIdx = 0;\n      buf = uuid.randomBytes(uuid.BUFFER_SIZE);\n    }\n    return buf.slice(bufIdx, bufIdx += n);\n  }\n\n  // uuid.bin\n  function uuidBin() {\n    var b = randomBytesBuffered(16);\n    b[6] = (b[6] & 0x0f) | 0x40;\n    b[8] = (b[8] & 0x3f) | 0x80;\n    return b;\n  }\n\n  // String UUIDv4 (Random)\n  function uuid() {\n    var b = uuidBin();\n    return hexBytes[b[0]] + hexBytes[b[1]] +\n      hexBytes[b[2]] + hexBytes[b[3]] + '-' +\n      hexBytes[b[4]] + hexBytes[b[5]] + '-' +\n      hexBytes[b[6]] + hexBytes[b[7]] + '-' +\n      hexBytes[b[8]] + hexBytes[b[9]] + '-' +\n      hexBytes[b[10]] + hexBytes[b[11]] +\n      hexBytes[b[12]] + hexBytes[b[13]] +\n      hexBytes[b[14]] + hexBytes[b[15]]\n    ;\n  }\n\n})();\n"
  ]
}