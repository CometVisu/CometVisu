{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/Validate.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "number",
    "errorMessage",
    "value",
    "util",
    "Validate",
    "checkNumber",
    "formItem",
    "locale",
    "Manager",
    "tr",
    "bom",
    "String",
    "escape",
    "Number",
    "isFinite",
    "core",
    "ValidationError",
    "email",
    "checkEmail",
    "reg",
    "test",
    "string",
    "checkString",
    "url",
    "checkUrl",
    "color",
    "checkColor",
    "ColorUtil",
    "stringToRgb",
    "e",
    "message",
    "range",
    "from",
    "to",
    "inArray",
    "array",
    "indexOf",
    "regExp"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * This static class contains a set of default validators.\n * These validators are listed twice\n * <ul>\n *   <li>number</li>\n *   <li>email</li>\n *   <li>string</li>\n *   <li>url</li>\n *   <li>color</li>\n * </ul>\n * All these validators don't need an input so the listed function just return a\n * method fitting for the use in the property system.\n * The methods with the check prefix are the returned methods and can be used in\n * other contexts without the property system.\n *\n * There are three more validators\n * <ul>\n *   <li>range</li>\n *   <li>inArray</li>\n *   <li>regExp</li>\n * </ul>\n * These methods do need some addition parameters to specify the validator. So\n * there is no check function which you can use in other contexts because the\n * check function for the validation is created based on the given parameter.\n *\n * *Example usage for a property*\n *\n * <code>validate: qx.util.Validate.number()</code>\n * <br>\n * <code>validate: qx.util.Validate.range(0, 100)</code>\n *\n * Because the methods without the check prefix return a validation method,\n * the function must be called at the property definition. So don't forget the\n * ending brackets for those methods without parameters!\n * For the correct usage, take an additional look at the documentation of the\n * {@link qx.core.Property} class.\n */\nqx.Class.define(\"qx.util.Validate\",\n{\n  statics :\n  {\n    /**\n     * Returns the function that checks for a number.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkNumber} Function.\n     */\n    number : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkNumber(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is a number.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the number check in a property definition,\n     * use the {@link #number} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?undefined} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not a\n     *    finite number\n     */\n    checkNumber : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"%1 is not a number.\", (value ? qx.bom.String.escape(value + \"\") : value));\n\n      if ((typeof value !== \"number\" && (!(value instanceof Number)))\n        || (!(isFinite(value))))\n      {\n        throw new qx.core.ValidationError(\"Validation Error\", errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for an email address.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkEmail} Function.\n     */\n    email : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkEmail(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is an email address.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the email check in a property definition,\n     * use the {@link #email} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not\n     *    a valid email address.\n     */\n    checkEmail : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"'%1' is not an email address.\", (value ? qx.bom.String.escape(value + \"\") : \"\"));\n\n      var reg = /^([A-Za-z0-9_\\-.+])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/;\n      if (reg.test(value) === false) {\n        throw new qx.core.ValidationError(\"Validation Error\",errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for a string.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkString} Function.\n     */\n    string : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkString(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is a string.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the string check in a property definition,\n     * use the {@link #string} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not a string.\n     */\n    checkString : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"%1 is not a string.\", (value ? qx.bom.String.escape(value + \"\") : value));\n\n      if (typeof value !== \"string\" && (!(value instanceof String))) {\n        throw new qx.core.ValidationError(\"Validation Error\", errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for an url.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkUrl} Function.\n     */\n    url : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkUrl(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is an url.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the url check in a property definition,\n     * use the {@link #url} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not an url.\n     */\n    checkUrl : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"%1 is not an url.\", (value ? qx.bom.String.escape(value + \"\") : value));\n\n      var reg =  /([A-Za-z0-9])+:\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n      if (!reg.test(value)) {\n        throw new qx.core.ValidationError(\"Validation Error\", errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for a color.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkColor} Function.\n     */\n    color : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkColor(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is a color.\n     * If not, an ValidationError will be thrown. The check itself will be\n     * delegated to the {@link qx.util.ColorUtil#stringToRgb} method.\n     * If you want to use the color check in a property definition,\n     * use the {@link #color} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not a color.\n     */\n    checkColor : function(value, formItem, errorMessage)\n    {\n      try {\n        qx.util.ColorUtil.stringToRgb(value);\n      } catch (e) {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 is not a color! %2\", (value ? qx.bom.String.escape(value + \"\") : value), e);\n        throw new qx.core.ValidationError(\"Validation Error\", message);\n      }\n    },\n\n\n    /**\n     * Returns a function that checks if the number is in the given range.\n     * The range includes the border values.\n     * A range from 1 to 2 accepts the values 1 equally as everything up to 2\n     * including the 2.\n     * If the value given to the returned function is out of the range, a\n     * ValidationError will be thrown.\n     *\n     * @param from {Number} The lower border of the range.\n     * @param to {Number} The upper border of the range.\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} A function taking one parameter (value).\n     */\n    range : function(from, to, errorMessage)\n    {\n      return function(value)\n      {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 is not in the range from [%2, %3].\", (value ? qx.bom.String.escape(value + \"\") : value), from, to);\n\n        if (value < from || value > to) {\n          throw new qx.core.ValidationError(\"Validation Error\", message);\n        }\n      };\n    },\n\n\n    /**\n     * Returns a function that checks if the given value is in the array.\n     * If the value given to the returned function is not in the array, a\n     * ValidationError will be thrown.\n     *\n     * @param array {Array} The array holding the possibilities.\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} A function taking one parameter (value).\n     */\n    inArray : function(array, errorMessage)\n    {\n      return function(value)\n      {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 is not in %2\", (value ? qx.bom.String.escape(value + \"\") : value), array);\n\n        if (array.indexOf(value) === -1) {\n          throw new qx.core.ValidationError(\"Validation Error\", message);\n        }\n      };\n    },\n\n\n    /**\n     * Returns a function that checks if the given value fits the RegExp.\n     * For testing, the function uses the RegExp.test function.\n     * If the value given to the returned function does not fit the RegExp, a\n     * ValidationError will be thrown.\n     * incoming\n     * @param reg {RegExp} The RegExp for the check.\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} A function taking one parameter (value).\n     */\n    regExp : function(reg, errorMessage)\n    {\n      return function(value)\n      {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 does not fit %2.\", (value ? qx.bom.String.escape(value + \"\") : value), reg);\n\n        if (!reg.test(value)) {\n          throw new qx.core.ValidationError(\"Validation Error\", message);\n        }\n      };\n    }\n  }\n});\n"
  ]
}