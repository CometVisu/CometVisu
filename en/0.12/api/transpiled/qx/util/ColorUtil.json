{
  "className": "qx.util.ColorUtil",
  "packageName": "qx.util",
  "name": "ColorUtil",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 668,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Sebastian Werner (wpbasti)\n Andreas Ecker (ecker)\n Christian Hagendorn (cs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Methods to convert colors between different color spaces.</p>"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.theme.*"
        },
        {
          "name": "@ignore",
          "body": "qx.Class"
        },
        {
          "name": "@ignore",
          "body": "qx.Class.*"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "REGEXP": {
      "location": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 41,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Regular expressions for color strings</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "SYSTEM": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>CSS3 system color names.</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "NAMED": {
      "location": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Named colors, only the 16 basic colors plus the following ones:\n transparent, grey, magenta, orange and brown</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "isNamedColor": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the incoming value is a named color.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} the color value to test",
            "paramName": "value",
            "description": " the color value to test",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the color is a named color",
            "type": "Boolean",
            "description": " true if the color is a named color"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSystemColor": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 130,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the incoming value is a system color.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} the color value to test",
            "paramName": "value",
            "description": " the color value to test",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the color is a system color",
            "type": "Boolean",
            "description": " true if the color is a system color"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "supportsThemes": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 144,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the color theme manager is loaded. Generally\n part of the GUI of qooxdoo.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when color theme support is ready.",
            "type": "Boolean",
            "description": " <code>true</code> when color theme support is ready."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isThemedColor": {
      "location": {
        "start": {
          "line": 153,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the incoming value is a themed color.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} the color value to test",
            "paramName": "value",
            "description": " the color value to test",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if the color is a themed color",
            "type": "Boolean",
            "description": " true if the color is a themed color"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stringToRgb": {
      "location": {
        "start": {
          "line": 175,
          "column": 4
        },
        "end": {
          "line": 206,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Try to convert an incoming string to an RGB array.\n Supports themed, named and system colors, but also RGB strings,\n hex3 and hex6 values.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} returns an array of red, green, blue on a successful transformation",
            "type": "Array",
            "description": " returns an array of red, green, blue on a successful transformation"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the string could not be parsed",
            "type": "Error",
            "description": " if the string could not be parsed"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cssStringToRgb": {
      "location": {
        "start": {
          "line": 217,
          "column": 4
        },
        "end": {
          "line": 245,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Try to convert an incoming string to an RGB array.\n Support named colors, RGB strings, hex3 and hex6 values.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} returns an array of red, green, blue on a successful transformation",
            "type": "Array",
            "description": " returns an array of red, green, blue on a successful transformation"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the string could not be parsed",
            "type": "Error",
            "description": " if the string could not be parsed"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stringToRgbString": {
      "location": {
        "start": {
          "line": 258,
          "column": 4
        },
        "end": {
          "line": 260,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Try to convert an incoming string to an RGB string, which can be used\n for all color properties.\n Supports themed, named and system colors, but also RGB strings,\n hex3 and hex6 values.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} a RGB string",
            "type": "String",
            "description": " a RGB string"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the string could not be parsed",
            "type": "Error",
            "description": " if the string could not be parsed"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "rgbToRgbString": {
      "location": {
        "start": {
          "line": 270,
          "column": 4
        },
        "end": {
          "line": 272,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a RGB array to an RGB string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rgb {Array} an array with red, green and blue values and optionally\n an alpha value",
            "paramName": "rgb",
            "description": " an array with red, green and blue values and optionally\n an alpha value",
            "type": "Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} an RGB string",
            "type": "String",
            "description": " an RGB string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "rgbToHexString": {
      "location": {
        "start": {
          "line": 281,
          "column": 4
        },
        "end": {
          "line": 289,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a RGB array to an hex6 string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rgb {Array} an array with red, green and blue",
            "paramName": "rgb",
            "description": " an array with red, green and blue",
            "type": "Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} a hex6 string (#xxxxxx)",
            "type": "String",
            "description": " a hex6 string (#xxxxxx)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isValidPropertyValue": {
      "location": {
        "start": {
          "line": 298,
          "column": 4
        },
        "end": {
          "line": 306,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects if a string is a valid qooxdoo color</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the incoming value is a valid qooxdoo color",
            "type": "Boolean",
            "description": " true when the incoming value is a valid qooxdoo color"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isCssString": {
      "location": {
        "start": {
          "line": 315,
          "column": 4
        },
        "end": {
          "line": 323,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects if a string is a valid CSS color string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the incoming value is a valid CSS color string",
            "type": "Boolean",
            "description": " true when the incoming value is a valid CSS color string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isHex3String": {
      "location": {
        "start": {
          "line": 332,
          "column": 4
        },
        "end": {
          "line": 334,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects if a string is a valid hex3 string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the incoming value is a valid hex3 string",
            "type": "Boolean",
            "description": " true when the incoming value is a valid hex3 string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isHex6String": {
      "location": {
        "start": {
          "line": 343,
          "column": 4
        },
        "end": {
          "line": 345,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects if a string is a valid hex6 string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the incoming value is a valid hex6 string",
            "type": "Boolean",
            "description": " true when the incoming value is a valid hex6 string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isRgbString": {
      "location": {
        "start": {
          "line": 354,
          "column": 4
        },
        "end": {
          "line": 356,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects if a string is a valid RGB string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the incoming value is a valid RGB string",
            "type": "Boolean",
            "description": " true when the incoming value is a valid RGB string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isRgbaString": {
      "location": {
        "start": {
          "line": 365,
          "column": 4
        },
        "end": {
          "line": 367,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects if a string is a valid RGBA string</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "str {String} any string",
            "paramName": "str",
            "description": " any string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true when the incoming value is a valid RGBA string",
            "type": "Boolean",
            "description": " true when the incoming value is a valid RGBA string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__rgbStringToRgb": {
      "location": {
        "start": {
          "line": 375,
          "column": 4
        },
        "end": {
          "line": 382,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a regexp object match of a rgb string to an RGB array.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with red, green, blue",
            "type": "Array",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__rgbaStringToRgb": {
      "location": {
        "start": {
          "line": 389,
          "column": 4
        },
        "end": {
          "line": 401,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a regexp object match of a rgba string to an RGB array.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with red, green, blue",
            "type": "Array",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__hex3StringToRgb": {
      "location": {
        "start": {
          "line": 409,
          "column": 4
        },
        "end": {
          "line": 416,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a regexp object match of a hex3 string to an RGB array.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with red, green, blue",
            "type": "Array",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__hex6StringToRgb": {
      "location": {
        "start": {
          "line": 424,
          "column": 4
        },
        "end": {
          "line": 431,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a regexp object match of a hex6 string to an RGB array.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with red, green, blue",
            "type": "Array",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "hex3StringToRgb": {
      "location": {
        "start": {
          "line": 440,
          "column": 4
        },
        "end": {
          "line": 447,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a hex3 string to an RGB array</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} a hex3 (#xxx) string",
            "paramName": "value",
            "description": " a hex3 (#xxx) string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with red, green, blue",
            "type": "Array",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hex3StringToHex6String": {
      "location": {
        "start": {
          "line": 457,
          "column": 4
        },
        "end": {
          "line": 463,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a hex3 (#xxx) string to a hex6 (#xxxxxx) string.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} a hex3 (#xxx) string",
            "paramName": "value",
            "description": " a hex3 (#xxx) string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The hex6 (#xxxxxx) string or the passed value when the\n   passed value is not an hex3 (#xxx) value.",
            "type": "String",
            "description": " The hex6 (#xxxxxx) string or the passed value when the\n   passed value is not an hex3 (#xxx) value."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hex6StringToRgb": {
      "location": {
        "start": {
          "line": 472,
          "column": 4
        },
        "end": {
          "line": 479,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a hex6 string to an RGB array</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} a hex6 (#xxxxxx) string",
            "paramName": "value",
            "description": " a hex6 (#xxxxxx) string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with red, green, blue",
            "type": "Array",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hexStringToRgb": {
      "location": {
        "start": {
          "line": 488,
          "column": 4
        },
        "end": {
          "line": 499,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a hex string to an RGB array</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} a hex3 (#xxx) or hex6 (#xxxxxx) string",
            "paramName": "value",
            "description": " a hex3 (#xxx) or hex6 (#xxxxxx) string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with red, green, blue",
            "type": "Array",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "rgbToHsb": {
      "location": {
        "start": {
          "line": 508,
          "column": 4
        },
        "end": {
          "line": 562,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Convert RGB colors to HSB</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rgb {Number[]} red, blue and green as array",
            "paramName": "rgb",
            "description": " red, blue and green as array",
            "type": "Number[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with hue, saturation and brightness",
            "type": "Array",
            "description": " an array with hue, saturation and brightness"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hsbToRgb": {
      "location": {
        "start": {
          "line": 571,
          "column": 4
        },
        "end": {
          "line": 651,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Convert HSB colors to RGB</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hsb {Number[]} an array with hue, saturation and brightness",
            "paramName": "hsb",
            "description": " an array with hue, saturation and brightness",
            "type": "Number[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} an array with red, green, blue",
            "type": "Integer[]",
            "description": " an array with red, green, blue"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "randomColor": {
      "location": {
        "start": {
          "line": 659,
          "column": 4
        },
        "end": {
          "line": 666,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a random color.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} a valid qooxdoo/CSS rgb color string.",
            "type": "String",
            "description": " a valid qooxdoo/CSS rgb color string."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}