{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Placeholder.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "PLACEHOLDER_NAME",
    "update",
    "qxWeb",
    "env",
    "get",
    "updatePlaceholder",
    "__syncStyles",
    "item",
    "placeholder",
    "getAttribute",
    "placeholderEl",
    "getProperty",
    "module",
    "Placeholder",
    "zIndex",
    "getStyle",
    "paddingHor",
    "parseInt",
    "paddingVer",
    "setHtml",
    "setStyles",
    "display",
    "getValue",
    "textAlign",
    "width",
    "getWidth",
    "height",
    "getHeight",
    "left",
    "getPosition",
    "top",
    "fontFamily",
    "fontStyle",
    "fontVariant",
    "fontWeight",
    "fontSize",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "__createPlaceholderElement",
    "create",
    "position",
    "color",
    "overflow",
    "pointerEvents",
    "setProperty",
    "on",
    "el",
    "setStyle",
    "bind",
    "focus",
    "members",
    "i",
    "length",
    "tagName",
    "itemInBody",
    "isRendered",
    "placeholderElInBody",
    "before",
    "remove",
    "defer",
    "$attachAll"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * The module supplies a fallback implementation for placeholders, which is\n * used on input and textarea elements. If the browser supports native placeholders\n * the API silently ignores all calls. If not, an element will be created for every\n * given input element and acts as placeholder. Most modern browsers support\n * placeholders which makes the fallback only relevant for IE < 10 and FF < 4.\n *\n *  * <a href=\"http://dev.w3.org/html5/spec/single-page.html#the-placeholder-attribute\">HTML Spec</a>\n *\n *  * <a href=\"http://caniuse.com/#feat=input-placeholder\">Browser Support</a>\n *\n * @require(qx.module.Manipulating)\n * @require(qx.module.Css)\n * @require(qx.module.Attribute)\n * @require(qx.module.Event)\n * @require(qx.module.Environment)\n * @require(qx.module.Polyfill)\n * @require(qx.module.Traversing)\n */\nqx.Bootstrap.define(\"qx.module.Placeholder\", {\n  statics :\n  {\n    /**\n     * String holding the property name which holds the placeholder\n     * element for each input.\n     */\n    PLACEHOLDER_NAME : \"$qx_placeholder\",\n\n\n    /**\n     * Queries for all input and textarea elements on the page and updates\n     * their placeholder.\n     * @attachStatic{qxWeb, placeholder.update}\n     */\n    update : function() {\n      // ignore if native placeholder are supported\n      if (!qxWeb.env.get(\"css.placeholder\")) {\n        qxWeb(\"input[placeholder], textarea[placeholder]\").updatePlaceholder();\n      }\n    },\n\n\n    /**\n     * Internal helper method to update the styles for a given input element.\n     * @param item {qxWeb} The input element to update.\n     */\n    __syncStyles : function(item) {\n      var placeholder = item.getAttribute(\"placeholder\");\n      var placeholderEl = item.getProperty(qx.module.Placeholder.PLACEHOLDER_NAME);\n\n      var zIndex= item.getStyle(\"z-index\");\n\n      var paddingHor = parseInt(item.getStyle(\"padding-left\")) + 2 * parseInt(item.getStyle(\"padding-right\"));\n      var paddingVer = parseInt(item.getStyle(\"padding-top\")) + 2 * parseInt(item.getStyle(\"padding-bottom\"));\n\n      placeholderEl.setHtml(placeholder).setStyles({\n        display : item.getValue() == \"\" ? \"inline\" : \"none\",\n        zIndex : zIndex == \"auto\" ? 1 : zIndex + 1,\n        textAlign: item.getStyle(\"text-align\"),\n        width: (item.getWidth() - paddingHor - 4) + \"px\",\n        height: (item.getHeight() - paddingVer - 4) + \"px\",\n        left: item.getPosition().left + \"px\",\n        top: item.getPosition().top + \"px\",\n        fontFamily : item.getStyle(\"font-family\"),\n        fontStyle : item.getStyle(\"font-style\"),\n        fontVariant : item.getStyle(\"font-variant\"),\n        fontWeight : item.getStyle(\"font-weight\"),\n        fontSize : item.getStyle(\"font-size\"),\n        paddingTop : (parseInt(item.getStyle(\"padding-top\")) + 2) + \"px\",\n        paddingRight : (parseInt(item.getStyle(\"padding-right\")) + 2) + \"px\",\n        paddingBottom : (parseInt(item.getStyle(\"padding-bottom\")) + 2) + \"px\",\n        paddingLeft : (parseInt(item.getStyle(\"padding-left\")) + 2) + \"px\"\n      });\n    },\n\n\n    /**\n     * Creates a placeholder element based on the given input element.\n     * @param item {qxWeb} The input element.\n     * @return {qxWeb} The placeholder element.\n     */\n    __createPlaceholderElement : function(item) {\n      // create the label with initial styles\n      var placeholderEl = qxWeb.create(\"<label>\").setStyles({\n        position: \"absolute\",\n        color: \"#989898\",\n        overflow: \"hidden\",\n        pointerEvents : \"none\"\n      });\n      // store the label at the input field\n      item.setProperty(qx.module.Placeholder.PLACEHOLDER_NAME, placeholderEl);\n\n      // update the placeholders visibility on keyUp\n      item.on(\"keyup\", function(item) {\n        var el = item.getProperty(qx.module.Placeholder.PLACEHOLDER_NAME);\n        el.setStyle(\"display\", item.getValue() == \"\" ? \"inline\" : \"none\");\n      }.bind(this, item));\n\n      // for browsers not supporting pointer events\n      if (!qxWeb.env.get(\"css.pointerevents\")) {\n        placeholderEl.setStyle(\"cursor\", \"text\").on(\"tap\", function(item) {\n          item.focus();\n        }.bind(this, item));\n      }\n      return placeholderEl;\n    }\n  },\n\n  members :\n  {\n\n    /**\n     * Updates the placeholders for input's and textarea's in the collection.\n     * This includes positioning, styles and DOM positioning.\n     * In case the browser supports native placeholders, this methods simply\n     * does nothing.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    updatePlaceholder : function() {\n      // ignore everything if native placeholder are supported\n      if (!qxWeb.env.get(\"css.placeholder\")) {\n        for (var i=0; i < this.length; i++) {\n          var item = qxWeb(this[i]);\n\n          // ignore all not fitting items in the collection\n          var placeholder = item.getAttribute(\"placeholder\");\n          var tagName = item.getProperty(\"tagName\");\n          if (!placeholder || (tagName != \"TEXTAREA\"&& tagName != \"INPUT\")) {\n            continue;\n          }\n\n          // create the element if necessary\n          var placeholderEl = item.getProperty(qx.module.Placeholder.PLACEHOLDER_NAME);\n          if (!placeholderEl) {\n            placeholderEl = qx.module.Placeholder.__createPlaceholderElement(item);\n          }\n\n          // remove and add handling\n          var itemInBody = item.isRendered();\n          var placeholderElInBody = placeholderEl.isRendered();\n          if (itemInBody && !placeholderElInBody) {\n            item.before(placeholderEl);\n          } else if (!itemInBody && placeholderElInBody) {\n            placeholderEl.remove();\n            return this;\n          }\n\n          qx.module.Placeholder.__syncStyles(item);\n        };\n      }\n      return this;\n    }\n  },\n\n\n  defer : function(statics) {\n    qxWeb.$attachAll(this, \"placeholder\");\n  }\n});\n"
  ]
}