{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/module/Manipulating.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_animationDescription",
    "scrollLeft",
    "duration",
    "timing",
    "keep",
    "keyFrames",
    "scrollTop",
    "__animateScroll",
    "property",
    "value",
    "desc",
    "lang",
    "Object",
    "clone",
    "module",
    "Manipulating",
    "animate",
    "__getCollectionFromArgument",
    "arg",
    "coll",
    "Type",
    "isArray",
    "qxWeb",
    "arr",
    "bom",
    "Html",
    "clean",
    "length",
    "dom",
    "Node",
    "isElement",
    "__getInnermostElement",
    "element",
    "childNodes",
    "i",
    "l",
    "nodeType",
    "__getElementArray",
    "fromSelector",
    "filter",
    "item",
    "create",
    "html",
    "context",
    "$init",
    "members",
    "events",
    "clones",
    "cloneNode",
    "copyEventsTo",
    "append",
    "children",
    "_forEachElement",
    "index",
    "j",
    "m",
    "Element",
    "insertEnd",
    "eq",
    "appendTo",
    "parent",
    "insertBefore",
    "target",
    "insertAfter",
    "wrap",
    "wrapper",
    "clonedwrapper",
    "innermost",
    "remove",
    "empty",
    "firstChild",
    "removeChild",
    "before",
    "content",
    "fragment",
    "document",
    "createDocumentFragment",
    "kids",
    "Array",
    "cast",
    "child",
    "parentNode",
    "after",
    "nextSibling",
    "getScrollLeft",
    "obj",
    "isWindow",
    "isDocument",
    "Viewport",
    "getScrollTop",
    "setScrollLeft",
    "AnimationJs",
    "bind",
    "scrollTo",
    "getWindow",
    "setScrollTop",
    "focus",
    "ex",
    "blur",
    "forEach",
    "defer",
    "$attachAll"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * DOM manipulation module\n *\n * @ignore(qx.bom.element, qx.bom.element.AnimationJs)\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Manipulating\", {\n  statics :\n  {\n    /** Default animation descriptions for animated scrolling **/\n    _animationDescription: {\n      scrollLeft : {duration: 700, timing: \"ease-in\", keep: 100, keyFrames : {\n        0: {},\n        100: {scrollLeft: 1}\n      }},\n\n      scrollTop : {duration: 700, timing: \"ease-in\", keep: 100, keyFrames : {\n        0: {},\n        100: {scrollTop: 1}\n      }}\n    },\n\n\n    /**\n     * Performs animated scrolling\n     *\n     * @param property {String} Element property to animate: <code>scrollLeft</code>\n     * or <code>scrollTop</code>\n     * @param value {Number} Final scroll position\n     * @param duration {Number} The animation's duration in ms\n     * @return {q} The collection for chaining.\n     */\n    __animateScroll : function(property, value, duration)\n    {\n      var desc = qx.lang.Object.clone(qx.module.Manipulating._animationDescription[property], true);\n      desc.keyFrames[100][property] = value;\n      return this.animate(desc, duration);\n    },\n\n\n    /**\n     * Creates a new collection from the given argument\n     * @param arg {var} Selector expression, HTML string, DOM element or list of\n     * DOM elements\n     * @return {qxWeb} Collection\n     * @internal\n     */\n    __getCollectionFromArgument : function(arg) {\n      var coll;\n      // Collection/array of DOM elements\n      if (qx.lang.Type.isArray(arg)) {\n        coll = qxWeb(arg);\n      }\n      // HTML string\n      else {\n        var arr = qx.bom.Html.clean([arg]);\n        if (arr.length > 0 && qx.dom.Node.isElement(arr[0])) {\n          coll = qxWeb(arr);\n        }\n        // Selector or single element\n        else {\n          coll = qxWeb(arg);\n        }\n      }\n\n      return coll;\n    },\n\n\n    /**\n     * Returns the innermost element of a DOM tree as determined by a simple\n     * depth-first search.\n     *\n     * @param element {Element} Root element\n     * @return {Element} innermost element\n     * @internal\n     */\n    __getInnermostElement : function(element)\n    {\n      if (element.childNodes.length == 0) {\n        return element;\n      }\n      for (var i=0,l=element.childNodes.length; i<l; i++) {\n        if (element.childNodes[i].nodeType === 1) {\n          return this.__getInnermostElement(element.childNodes[i]);\n        }\n      }\n      return element;\n    },\n\n\n    /**\n     * Returns an array from a selector expression or a single element\n     *\n     * @attach{qxWeb}\n     * @param arg {String|Element} Selector expression or DOM element\n     * @return {Element[]} Array of elements\n     * @internal\n     */\n    __getElementArray : function(arg)\n    {\n      if (!qx.lang.Type.isArray(arg)) {\n        var fromSelector = qxWeb(arg);\n        arg = fromSelector.length > 0 ? fromSelector : [arg];\n      }\n\n      return arg.filter(function(item) {\n        return (item && (item.nodeType === 1 || item.nodeType === 11));\n      });\n    },\n\n\n    /**\n     * Creates a new collection from the given argument. This can either be an\n     * HTML string, a single DOM element or an array of elements\n     *\n     * When no <code>context</code> is given the global document is used to\n     * create new DOM elements.\n     *\n     * <strong>Note:</strong> When a complex HTML string is provided the <code>innerHTML</code>\n     * mechanism of the browser is used. Some browsers do filter out elements like <code>&lt;html&gt;</code>,\n     * <code>&lt;head&gt;</code> or <code>&lt;body&gt;</code>. The better approach is to create\n     * a single element and the appending the child nodes.\n     *\n     * @attachStatic{qxWeb}\n     * @param html {String|Element[]} HTML string or DOM element(s)\n     * @param context {Document?document} Context in which the elements should be created\n     * @return {qxWeb} Collection of elements\n     */\n    create : function(html, context) {\n      return qxWeb.$init(qx.bom.Html.clean([html], context), qxWeb);\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Clones the items in the current collection and returns them in a new set.\n     * Event listeners can also be cloned.\n     *\n     * @attach{qxWeb}\n     * @param events {Boolean} clone event listeners. Default: <code>false</code>\n     * @return {qxWeb} New collection with clones\n     */\n    clone : function(events) {\n      var clones = [];\n      for (var i=0; i < this.length; i++) {\n        if (this[i] && this[i].nodeType === 1) {\n          clones[i] = this[i].cloneNode(true);\n        }\n      }\n\n      if (events === true && this.copyEventsTo) {\n        this.copyEventsTo(clones);\n      }\n\n      return qxWeb(clones);\n    },\n\n\n\n    /**\n     * Appends content to each element in the current set. Accepts an HTML string,\n     * a single DOM element or an array of elements\n     *\n     * @attach{qxWeb}\n     * @param html {String|Element[]|qxWeb} HTML string or DOM element(s) to append\n     * @return {qxWeb} The collection for chaining\n     */\n    append : function(html) {\n      var arr = qx.bom.Html.clean([html]);\n      var children = qxWeb.$init(arr, qxWeb);\n\n      this._forEachElement(function(item, index) {\n        for (var j=0, m=children.length; j < m; j++) {\n          if (index == 0) {\n            // first parent: move the target node(s)\n            qx.dom.Element.insertEnd(children[j], item);\n          }\n          else {\n            qx.dom.Element.insertEnd(children.eq(j).clone(true)[0], item);\n          }\n        }\n      });\n\n      return this;\n    },\n\n\n    /**\n     * Appends all items in the collection to the specified parents. If multiple\n     * parents are given, the items will be moved to the first parent, while\n     * clones of the items will be appended to subsequent parents.\n     *\n     * @attach{qxWeb}\n     * @param parent {String|Element[]|qxWeb} Parent selector expression or list of\n     * parent elements\n     * @return {qxWeb} The collection for chaining\n     */\n    appendTo : function(parent) {\n      parent = qx.module.Manipulating.__getElementArray(parent);\n      for (var i=0, l=parent.length; i < l; i++) {\n        this._forEachElement(function(item, j) {\n          if (i == 0) {\n            // first parent: move the target node(s)\n            qx.dom.Element.insertEnd(this[j], parent[i]);\n          }\n          else {\n            // further parents: clone the target node(s)\n            qx.dom.Element.insertEnd(this.eq(j).clone(true)[0], parent[i]);\n          }\n        });\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Inserts the current collection before each target item. The collection\n     * items are moved before the first target. For subsequent targets,\n     * clones of the collection items are created and inserted.\n     *\n     * @attach{qxWeb}\n     * @param target {String|Element|Element[]|qxWeb} Selector expression, DOM element,\n     * Array of DOM elements or collection\n     * @return {qxWeb} The collection for chaining\n     */\n    insertBefore : function(target)\n    {\n      target = qx.module.Manipulating.__getElementArray(target);\n      for (var i=0, l=target.length; i < l; i++) {\n        this._forEachElement(function(item, index) {\n          if (i == 0) {\n            // first target: move the target node(s)\n            qx.dom.Element.insertBefore(item, target[i]);\n          }\n          else {\n            // further targets: clone the target node(s)\n            qx.dom.Element.insertBefore(this.eq(index).clone(true)[0], target[i]);\n          }\n        });\n      }\n\n      return this;\n    },\n\n\n\n    /**\n     * Inserts the current collection after each target item. The collection\n     * items are moved after the first target. For subsequent targets,\n     * clones of the collection items are created and inserted.\n     *\n     * @attach{qxWeb}\n     * @param target {String|Element|Element[]|qxWeb} Selector expression, DOM element,\n     * Array of DOM elements or collection\n     * @return {qxWeb} The collection for chaining\n     */\n    insertAfter : function(target)\n    {\n      target = qx.module.Manipulating.__getElementArray(target);\n      for (var i=0, l=target.length; i < l; i++) {\n        for (var j=this.length - 1; j >= 0; j--) {\n          if (!this[j] || this[j].nodeType !== 1) {\n            continue;\n          }\n          if (i == 0) {\n            // first target: move the target node(s)\n            qx.dom.Element.insertAfter(this[j], target[i]);\n          }\n          else {\n            // further targets: clone the target node(s)\n            qx.dom.Element.insertAfter(this.eq(j).clone(true)[0], target[i]);\n          }\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Wraps each element in the collection in a copy of an HTML structure.\n     * Elements will be appended to the deepest nested element in the structure\n     * as determined by a depth-first search.\n     *\n     * @attach{qxWeb}\n     * @param wrapper {String|Element|Element[]|qxWeb} Selector expression, HTML string, DOM element or\n     * list of DOM elements\n     * @return {qxWeb} The collection for chaining\n     */\n    wrap : function(wrapper) {\n      wrapper = qx.module.Manipulating.__getCollectionFromArgument(wrapper);\n\n      if (wrapper.length == 0) {\n        return this;\n      }\n\n      this._forEachElement(function(item) {\n        var clonedwrapper = wrapper.eq(0).clone(true);\n        qx.dom.Element.insertAfter(clonedwrapper[0], item);\n        var innermost = qx.module.Manipulating.__getInnermostElement(clonedwrapper[0]);\n        qx.dom.Element.insertEnd(item, innermost);\n      });\n\n      return this;\n    },\n\n\n    /**\n     * Removes each element in the current collection from the DOM\n     *\n     * @attach{qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    remove : function() {\n      this._forEachElement(function(item) {\n        qx.dom.Element.remove(item);\n      });\n      return this;\n    },\n\n\n    /**\n     * Removes all content from the elements in the collection\n     *\n     * @attach{qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    empty : function() {\n      this._forEachElement(function(item) {\n        // don't use innerHTML=\"\" because of [BUG #7323]\n        // and don't use textContent=\"\" because of missing IE8 support\n        while (item.firstChild) {\n          item.removeChild(item.firstChild);\n        }\n      });\n      return this;\n    },\n\n\n    /**\n     * Inserts content before each element in the collection. This can either\n     * be an HTML string, an array of HTML strings, a single DOM element or an\n     * array of elements.\n     *\n     * @attach{qxWeb}\n     * @param content {String|String[]|Element|Element[]|qxWeb} HTML string(s),\n     * DOM element(s) or collection to insert\n     * @return {qxWeb} The collection for chaining\n     */\n    before : function(content) {\n      if (!qx.lang.Type.isArray(content)) {\n        content = [content];\n      }\n      var fragment = document.createDocumentFragment();\n      qx.bom.Html.clean(content, document, fragment);\n      this._forEachElement(function(item, index) {\n        var kids = qx.lang.Array.cast(fragment.childNodes, Array);\n        for (var i=0,l=kids.length; i<l; i++) {\n          var child;\n          if (index < this.length - 1) {\n            child = kids[i].cloneNode(true);\n          }\n          else {\n            child = kids[i];\n          }\n          item.parentNode.insertBefore(child, item);\n        }\n      }, this);\n\n      return this;\n    },\n\n\n    /**\n     * Inserts content after each element in the collection. This can either\n     * be an HTML string, an array of HTML strings, a single DOM element or an\n     * array of elements.\n     *\n     * @attach{qxWeb}\n     * @param content {String|String[]|Element|Element[]|qxWeb} HTML string(s),\n     * DOM element(s) or collection to insert\n     * @return {qxWeb} The collection for chaining\n     */\n    after : function(content) {\n      if (!qx.lang.Type.isArray(content)) {\n        content = [content];\n      }\n      var fragment = document.createDocumentFragment();\n      qx.bom.Html.clean(content, document, fragment);\n      this._forEachElement(function(item, index) {\n        var kids = qx.lang.Array.cast(fragment.childNodes, Array);\n        for (var i=kids.length-1; i>=0; i--) {\n          var child;\n          if (index < this.length - 1) {\n            child = kids[i].cloneNode(true);\n          }\n          else {\n            child = kids[i];\n          }\n          item.parentNode.insertBefore(child, item.nextSibling);\n        }\n      }, this);\n\n      return this;\n    },\n\n\n    /**\n     * Returns the left scroll position of the first element in the collection.\n     *\n     * @attach{qxWeb}\n     * @return {Number} Current left scroll position\n     */\n    getScrollLeft : function()\n    {\n      var obj = this[0];\n      if (!obj) {\n        return null;\n      }\n\n      var Node = qx.dom.Node;\n      if (Node.isWindow(obj) || Node.isDocument(obj)) {\n        return qx.bom.Viewport.getScrollLeft();\n      }\n\n      return obj.scrollLeft;\n    },\n\n\n    /**\n     * Returns the top scroll position of the first element in the collection.\n     *\n     * @attach{qxWeb}\n     * @return {Number} Current top scroll position\n     */\n    getScrollTop : function()\n    {\n      var obj = this[0];\n      if (!obj) {\n        return null;\n      }\n\n      var Node = qx.dom.Node;\n      if (Node.isWindow(obj) || Node.isDocument(obj)) {\n        return qx.bom.Viewport.getScrollTop();\n      }\n\n      return obj.scrollTop;\n    },\n\n\n    /**\n     * Scrolls the elements of the collection to the given coordinate.\n     *\n     * @attach{qxWeb}\n     * @param value {Number} Left scroll position\n     * @param duration {Number?} Optional: Duration in ms for animated scrolling\n     * @return {qxWeb} The collection for chaining\n     */\n    setScrollLeft : function(value, duration)\n    {\n      var Node = qx.dom.Node;\n\n      if (duration && qx.bom.element && qx.bom.element.AnimationJs) {\n        qx.module.Manipulating.__animateScroll.bind(this, \"scrollLeft\",\n          value, duration)();\n      }\n\n      for (var i=0, l=this.length, obj; i<l; i++)\n      {\n        obj = this[i];\n\n        if (Node.isElement(obj)) {\n          if (!(duration && qx.bom.element && qx.bom.element.AnimationJs)) {\n            obj.scrollLeft = value;\n          }\n        } else if (Node.isWindow(obj)) {\n          obj.scrollTo(value, this.getScrollTop(obj));\n        } else if (Node.isDocument(obj)) {\n          Node.getWindow(obj).scrollTo(value, this.getScrollTop(obj));\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Scrolls the elements of the collection to the given coordinate.\n     *\n     * @attach{qxWeb}\n     * @param value {Number} Top scroll position\n     * @param duration {Number?} Optional: Duration in ms for animated scrolling\n     * @return {qxWeb} The collection for chaining\n     */\n    setScrollTop : function(value, duration)\n    {\n      var Node = qx.dom.Node;\n\n      if (duration && qx.bom.element && qx.bom.element.AnimationJs) {\n        qx.module.Manipulating.__animateScroll.bind(this, \"scrollTop\",\n           value, duration)();\n      }\n\n      for (var i=0, l=this.length, obj; i<l; i++)\n      {\n        obj = this[i];\n\n        if (Node.isElement(obj)) {\n          if (!(duration && qx.bom.element && qx.bom.element.AnimationJs)) {\n            obj.scrollTop = value;\n          }\n        } else if (Node.isWindow(obj)) {\n          obj.scrollTo(this.getScrollLeft(obj), value);\n        } else if (Node.isDocument(obj)) {\n          Node.getWindow(obj).scrollTo(this.getScrollLeft(obj), value);\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Focuses the first element in the collection\n     *\n     * @attach{qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    focus : function()\n    {\n      try {\n        this[0].focus();\n      }\n      catch(ex) {}\n\n      return this;\n    },\n\n\n    /**\n     * Blurs each element in the collection\n     *\n     * @attach{qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    blur : function()\n    {\n      this.forEach(function(item, index) {\n        try {\n          item.blur();\n        }\n        catch(ex) {}\n      });\n\n      return this;\n    }\n  },\n\n\n  defer : function(statics) {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ]
}