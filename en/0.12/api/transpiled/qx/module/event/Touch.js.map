{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/module/event/Touch.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "normalize",
    "event",
    "element",
    "type",
    "_type",
    "defer",
    "qxWeb",
    "$registerEventNormalization",
    "module",
    "Touch"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,uBAApB,EAA6C;AAC3CC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACIC,MAAAA,KAAK,EAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,OAAnB,EAA4B,QAA5B,CAJV;;AAOE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,SAAS,EAAG,mBAASC,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EACZ;AACE,YAAI,CAACF,KAAL,EAAY;AACV,iBAAOA,KAAP;AACD;;AACDA,QAAAA,KAAK,CAACG,KAAN,GAAcD,IAAd;AACA,eAAOF,KAAP;AACD;AAxBH,KAF2C;AA6B3CI,IAAAA,KAAK,EAAG,eAASP,OAAT,EAAkB;AACxBQ,MAAAA,KAAK,CAACC,2BAAN,CAAkCT,OAAO,CAACC,KAA1C,EAAiDD,OAAO,CAACE,SAAzD;AACD;AA/B0C,GAA7C;AA1BAP,EAAAA,EAAE,CAACe,MAAH,CAAUP,KAAV,CAAgBQ,KAAhB,CAAsBb,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Normalization for touch events. For cross-device applications that\n * support both mouse and touchscreen interaction, consider using\n * <a href=\"#Pointer\">Pointer</a> and/or Gesture events (e.g. <a href=\"Tap\"></a>).\n * @require(qx.module.Event)\n *\n * @group (Event_Normalization)\n */\nqx.Bootstrap.define(\"qx.module.event.Touch\", {\n  statics :\n  {\n    /**\n     * List of event types to be normalized\n     */\n    TYPES : [\"tap\", \"longtap\", \"swipe\", \"dbltap\"],\n\n\n    /**\n     * Manipulates the native event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element the listener was attached to\n     * @param type {String} Event type\n     * @return {Event} Normalized event object\n     * @internal\n     */\n    normalize : function(event, element, type)\n    {\n      if (!event) {\n        return event;\n      }\n      event._type = type;\n      return event;\n    }\n  },\n\n  defer : function(statics) {\n    qxWeb.$registerEventNormalization(statics.TYPES, statics.normalize);\n  }\n});\n"
  ]
}