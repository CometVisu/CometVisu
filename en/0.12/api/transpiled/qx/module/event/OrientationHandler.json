{
  "className": "qx.module.event.OrientationHandler",
  "packageName": "qx.module.event",
  "name": "OrientationHandler",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 89,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2012 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Daniel Wagner (danielwagner)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Orientation handler which is responsible for registering and unregistering a\n {@link qx.event.handler.OrientationCore} handler for each given element.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.module.Event"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Event_Normalization"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "TYPES": {
      "location": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 34,
          "column": 33
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of events that require an orientation handler</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "register": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an orientation handler for the given window when an\n orientationchange event listener is attached to it</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Window} DOM Window",
            "paramName": "element",
            "description": " DOM Window",
            "type": "Window"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "unregister": {
      "location": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the orientation event handler from the element if there are no more\n orientationchange event listeners attached to it</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM element",
            "paramName": "element",
            "description": " DOM element",
            "type": "Element"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 85,
        "column": 10
      },
      "end": {
        "line": 88,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}