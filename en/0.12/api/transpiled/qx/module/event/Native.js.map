{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/module/event/Native.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "FORWARD_METHODS",
    "BIND_METHODS",
    "preventDefault",
    "keyCode",
    "ex",
    "returnValue",
    "stopPropagation",
    "cancelBubble",
    "getType",
    "_type",
    "type",
    "getTarget",
    "getRelatedTarget",
    "getCurrentTarget",
    "normalize",
    "event",
    "element",
    "fwdMethods",
    "module",
    "Native",
    "i",
    "l",
    "length",
    "bom",
    "Event",
    "bind",
    "bindMethods",
    "currentTarget",
    "defer",
    "qxWeb",
    "$registerEventNormalization"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;AASAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,wBAApB,EAA8C;AAC5CC,IAAAA,OAAO,EACP;AACE;;;AAGAC,MAAAA,KAAK,EAAG,CAAC,GAAD,CAJV;;AAOE;;;;AAIAC,MAAAA,eAAe,EAAG,CAAC,WAAD,EAAc,kBAAd,CAXpB;;AAcE;;;;AAIAC,MAAAA,YAAY,EAAG,CAAC,gBAAD,EAAmB,iBAAnB,EAAsC,SAAtC,CAlBjB;;AAqBE;;;AAGAC,MAAAA,cAAc,EAAG,0BACjB;AACE,YAAI;AACF;AACA;AACA,eAAKC,OAAL,GAAe,CAAf;AACD,SAJD,CAIE,OAAMC,EAAN,EAAU,CAAE;;AAEd,aAAKC,WAAL,GAAmB,KAAnB;AACD,OAjCH;;AAoCE;;;AAGAC,MAAAA,eAAe,EAAG,2BAClB;AACE,aAAKC,YAAL,GAAoB,IAApB;AACD,OA1CH;;AA6CE;;;;;AAKAC,MAAAA,OAAO,EAAG,mBACV;AACE,eAAO,KAAKC,KAAL,IAAc,KAAKC,IAA1B;AACD,OArDH;;AAwDE;;;;;;AAMAC,MAAAA,SAAS,EAAG,qBAAW,CAAE,CA9D3B;;AAiEE;;;;;;AAMAC,MAAAA,gBAAgB,EAAG,4BAAW,CAAE,CAvElC;;AA0EE;;;;;;;AAOAC,MAAAA,gBAAgB,EAAG,4BAAW,CAAE,CAjFlC;;AAmFE;;;;;;;;;AASAC,MAAAA,SAAS,EAAG,mBAASC,KAAT,EAAgBC,OAAhB,EAAyB;AACnC,YAAI,CAACD,KAAL,EAAY;AACV,iBAAOA,KAAP;AACD;;AACD,YAAIE,UAAU,GAAGxB,EAAE,CAACyB,MAAH,CAAUH,KAAV,CAAgBI,MAAhB,CAAuBnB,eAAxC;;AACA,aAAK,IAAIoB,CAAC,GAAC,CAAN,EAASC,CAAC,GAACJ,UAAU,CAACK,MAA3B,EAAmCF,CAAC,GAACC,CAArC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CL,UAAAA,KAAK,CAACE,UAAU,CAACG,CAAD,CAAX,CAAL,GAAuB3B,EAAE,CAAC8B,GAAH,CAAOC,KAAP,CAAaP,UAAU,CAACG,CAAD,CAAvB,EAA4BK,IAA5B,CAAiC,IAAjC,EAAuCV,KAAvC,CAAvB;AACD;;AAED,YAAIW,WAAW,GAAGjC,EAAE,CAACyB,MAAH,CAAUH,KAAV,CAAgBI,MAAhB,CAAuBlB,YAAzC;;AACA,aAAK,IAAImB,CAAC,GAAC,CAAN,EAASC,CAAC,GAACK,WAAW,CAACJ,MAA5B,EAAoCF,CAAC,GAACC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,cAAI,OAAOL,KAAK,CAACW,WAAW,CAACN,CAAD,CAAZ,CAAZ,IAAgC,UAApC,EAAgD;AAC9CL,YAAAA,KAAK,CAACW,WAAW,CAACN,CAAD,CAAZ,CAAL,GAAwB3B,EAAE,CAACyB,MAAH,CAAUH,KAAV,CAAgBI,MAAhB,CAAuBO,WAAW,CAACN,CAAD,CAAlC,EAAuCK,IAAvC,CAA4CV,KAA5C,CAAxB;AACD;AACF;;AAEDA,QAAAA,KAAK,CAACF,gBAAN,GAAyB,YACzB;AACE,iBAAOE,KAAK,CAACY,aAAN,IAAuBX,OAA9B;AACD,SAHD;;AAKA,eAAOD,KAAP;AACD;AAlHH,KAF4C;AAuH5Ca,IAAAA,KAAK,EAAG,eAAS9B,OAAT,EAAkB;AACxB+B,MAAAA,KAAK,CAACC,2BAAN,CAAkChC,OAAO,CAACC,KAA1C,EAAiDD,OAAO,CAACgB,SAAzD;AACD;AAzH2C,GAA9C;AA3BArB,EAAAA,EAAE,CAACyB,MAAH,CAAUH,KAAV,CAAgBI,MAAhB,CAAuBvB,aAAvB,GAAuCA,aAAvC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Common normalizations for native events\n *\n * @require(qx.module.Event)\n * @require(qx.bom.Event#getTarget)\n * @require(qx.bom.Event#getRelatedTarget)\n *\n * @group (Event_Normalization)\n */\nqx.Bootstrap.define(\"qx.module.event.Native\", {\n  statics :\n  {\n    /**\n     * List of event types to be normalized\n     */\n    TYPES : [\"*\"],\n\n\n    /**\n     * List of qx.bom.Event methods to be attached to native event objects\n     * @internal\n     */\n    FORWARD_METHODS : [\"getTarget\", \"getRelatedTarget\"],\n\n\n    /**\n     * List of qx.module.event.Native methods to be attached to native event objects\n     * @internal\n     */\n    BIND_METHODS : [\"preventDefault\", \"stopPropagation\", \"getType\"],\n\n\n    /**\n     * Prevent the native default behavior of the event.\n     */\n    preventDefault : function()\n    {\n      try {\n        // this allows us to prevent some key press events in IE.\n        // See bug #1049\n        this.keyCode = 0;\n      } catch(ex) {}\n\n      this.returnValue = false;\n    },\n\n\n    /**\n     * Stops the event's propagation to the element's parent\n     */\n    stopPropagation : function()\n    {\n      this.cancelBubble = true;\n    },\n\n\n    /**\n     * Returns the event's type\n     *\n     * @return {String} event type\n     */\n    getType : function()\n    {\n      return this._type || this.type;\n    },\n\n\n    /**\n     * Returns the target of the event.\n     *\n     * @signature function ()\n     * @return {Object} Any valid native event target\n     */\n    getTarget : function() {},\n\n\n    /**\n     * Computes the related target from the native DOM event\n     *\n     * @signature function ()\n     * @return {Element} The related target\n     */\n    getRelatedTarget : function() {},\n\n\n    /**\n     * Computes the current target from the native DOM event. Emulates the current target\n     * for all browsers without native support (like older IEs).\n     *\n     * @signature function ()\n     * @return {Element} The current target\n     */\n    getCurrentTarget : function() {},\n\n    /**\n     * Manipulates the native event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element the listener was attached to\n     * @return {Event} Normalized event object\n     * @internal\n     */\n    normalize : function(event, element) {\n      if (!event) {\n        return event;\n      }\n      var fwdMethods = qx.module.event.Native.FORWARD_METHODS;\n      for (var i=0, l=fwdMethods.length; i<l; i++) {\n        event[fwdMethods[i]] = qx.bom.Event[fwdMethods[i]].bind(null, event);\n      }\n\n      var bindMethods = qx.module.event.Native.BIND_METHODS;\n      for (var i=0, l=bindMethods.length; i<l; i++) {\n        if (typeof event[bindMethods[i]] != \"function\") {\n          event[bindMethods[i]] = qx.module.event.Native[bindMethods[i]].bind(event);\n        }\n      }\n\n      event.getCurrentTarget = function()\n      {\n        return event.currentTarget || element;\n      };\n\n      return event;\n    }\n  },\n\n  defer : function(statics) {\n    qxWeb.$registerEventNormalization(statics.TYPES, statics.normalize);\n  }\n});\n"
  ]
}