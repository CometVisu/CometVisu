{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/event/Tap.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "BIND_METHODS",
    "getViewportLeft",
    "_original",
    "getViewportTop",
    "getDocumentLeft",
    "getDocumentTop",
    "getScreenLeft",
    "getScreenTop",
    "normalize",
    "event",
    "element",
    "bindMethods",
    "module",
    "Tap",
    "i",
    "l",
    "length",
    "bind",
    "defer",
    "qxWeb",
    "$registerEventNormalization"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Normalization for tap gesture events. These gestures are based on <a href=\"#Pointer\">Pointer events</a>,\n * meaning that they are available on all devices, no matter which input device type is used (e.g. mouse or\n * touchscreen).\n *\n * @require(qx.module.Event)\n * @require(qx.module.event.Tap#getViewportLeft) // static code analysis - this method has to referenced\n * @require(qx.module.event.Tap#getViewportTop) // static code analysis - this method has to referenced\n * @require(qx.module.event.Tap#getDocumentLeft) // static code analysis - this method has to referenced\n * @require(qx.module.event.Tap#getDocumentTop) // static code analysis - this method has to referenced\n * @require(qx.module.event.Tap#getScreenLeft) // static code analysis - this method has to referenced\n * @require(qx.module.event.Tap#getScreenTop) // static code analysis - this method has to referenced\n *\n * @group (Event_Normalization)\n */\nqx.Bootstrap.define(\"qx.module.event.Tap\", {\n  statics :\n  {\n    /**\n     * List of event types to be normalized\n     */\n    TYPES : [\"tap\", \"longtap\", \"dbltap\"],\n\n    /**\n     * List methods to be attached to gesture event\n     * objects\n     * @internal\n     */\n    BIND_METHODS : [\"getViewportLeft\", \"getViewportTop\",\n      \"getDocumentLeft\", \"getDocumentTop\", \"getScreenLeft\", \"getScreenTop\"],\n\n    /**\n     * Get the horizontal coordinate at which the event occurred relative\n     * to the viewport.\n     *\n     * @return {Number} The horizontal contact position\n     */\n    getViewportLeft : function() {\n      return this._original.getViewportLeft();\n    },\n\n\n    /**\n     * Get the vertical coordinate at which the event occurred relative\n     * to the viewport.\n     *\n     * @return {Number} The vertical contact position\n     * @signature function()\n     */\n    getViewportTop : function() {\n      return this._original.getViewportTop();\n    },\n\n\n    /**\n     * Get the horizontal position at which the event occurred relative to the\n     * left of the document. This property takes into account any scrolling of\n     * the page.\n     *\n     * @return {Number} The horizontal contact position in the document.\n     */\n    getDocumentLeft : function()\n    {\n      return this._original.getDocumentLeft();\n    },\n\n\n    /**\n     * Get the vertical position at which the event occurred relative to the\n     * top of the document. This property takes into account any scrolling of\n     * the page.\n     *\n     * @return {Number} The vertical contact position in the document.\n     */\n    getDocumentTop : function()\n    {\n      return this._original.getDocumentTop();\n    },\n\n\n    /**\n     * Get the horizontal coordinate at which the event occurred relative to\n     * the origin of the screen coordinate system.\n     *\n     * Note: This value is usually not very useful unless you want to\n     * position a native popup window at this coordinate.\n     *\n     * @return {Number} The horizontal contact position on the screen.\n     */\n    getScreenLeft : function() {\n      return this._original.getScreenLeft();\n    },\n\n\n    /**\n     * Get the vertical coordinate at which the event occurred relative to\n     * the origin of the screen coordinate system.\n     *\n     * Note: This value is usually not very useful unless you want to\n     * position a native popup window at this coordinate.\n     *\n     * @return {Number} The vertical contact position on the screen.\n     */\n    getScreenTop : function() {\n      return this._original.getScreenTop();\n    },\n\n\n    /**\n     * Manipulates the native event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element the listener was attached to\n     * @return {Event} Normalized event object\n     * @internal\n     */\n    normalize : function(event, element)\n    {\n      if (!event) {\n        return event;\n      }\n\n      var bindMethods = qx.module.event.Tap.BIND_METHODS;\n      for (var i=0, l=bindMethods.length; i<l; i++) {\n        if (typeof event[bindMethods[i]] != \"function\") {\n          event[bindMethods[i]] = qx.module.event.Tap[bindMethods[i]].bind(event);\n        }\n      }\n\n      return event;\n    }\n  },\n\n  defer : function(statics) {\n    qxWeb.$registerEventNormalization(qx.module.event.Tap.TYPES, statics.normalize);\n  }\n});\n"
  ]
}