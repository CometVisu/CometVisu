{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/module/event/Track.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "BIND_METHODS",
    "getDelta",
    "_original",
    "delta",
    "normalize",
    "event",
    "element",
    "bindMethods",
    "module",
    "Track",
    "i",
    "l",
    "length",
    "bind",
    "defer",
    "qxWeb",
    "$registerEventNormalization"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,uBAApB,EAA6C;AAC3CC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACIC,MAAAA,KAAK,EAAG,CAAC,OAAD,CAJV;AAOEC,MAAAA,YAAY,EAAG,CAAE,UAAF,CAPjB;;AAUE;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,QAAQ,EAAG,oBAAW;AACpB,eAAO,KAAKC,SAAL,CAAeC,KAAtB;AACD,OAnBH;;AAsBE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,SAAS,EAAG,mBAASC,KAAT,EAAgBC,OAAhB,EACZ;AACE,YAAI,CAACD,KAAL,EAAY;AACV,iBAAOA,KAAP;AACD,SAHH,CAIE;;;AACA,YAAIE,WAAW,GAAGd,EAAE,CAACe,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBT,YAAxC;;AACA,aAAK,IAAIU,CAAC,GAAC,CAAN,EAASC,CAAC,GAACJ,WAAW,CAACK,MAA5B,EAAoCF,CAAC,GAACC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,cAAI,OAAOL,KAAK,CAACE,WAAW,CAACG,CAAD,CAAZ,CAAZ,IAAgC,UAApC,EAAgD;AAC9CL,YAAAA,KAAK,CAACE,WAAW,CAACG,CAAD,CAAZ,CAAL,GAAwBjB,EAAE,CAACe,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBF,WAAW,CAACG,CAAD,CAAjC,EAAsCG,IAAtC,CAA2CR,KAA3C,CAAxB;AACD;AACF;;AAED,eAAOA,KAAP;AACD;AA7CH,KAF2C;AAkD3CS,IAAAA,KAAK,EAAG,eAAShB,OAAT,EAAkB;AACxBiB,MAAAA,KAAK,CAACC,2BAAN,CAAkCvB,EAAE,CAACe,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBV,KAAxD,EAA+DD,OAAO,CAACM,SAAvE;AACD;AApD0C,GAA7C;AA3BAX,EAAAA,EAAE,CAACe,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBb,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Normalization for the track gesture. This gesture is based on <a href=\"#Pointer\">Pointer events</a>,\n * meaning that it's available on all devices, no matter which input device type is used (e.g. mouse or\n * touchscreen).\n *\n * @require(qx.module.Event)\n *\n * @group (Event_Normalization)\n */\nqx.Bootstrap.define(\"qx.module.event.Track\", {\n  statics :\n  {\n    /**\n     * List of event types to be normalized\n     */\n    TYPES : [\"track\"],\n\n\n    BIND_METHODS : [ \"getDelta\" ],\n\n\n    /**\n     * Returns a map with the calculated delta coordinates and axis,\n     * relative to the position on <code>trackstart</code> event.\n     *\n     * @return {Map} a map with contains the delta as <code>x</code> and\n     * <code>y</code> and the movement axis as <code>axis</code>.\n     */\n    getDelta : function() {\n      return this._original.delta;\n    },\n\n\n    /**\n     * Manipulates the native event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element the listener was attached to\n     * @return {Event} Normalized event object\n     * @internal\n     */\n    normalize : function(event, element)\n    {\n      if (!event) {\n        return event;\n      }\n      // apply mouse event normalizations\n      var bindMethods = qx.module.event.Track.BIND_METHODS;\n      for (var i=0, l=bindMethods.length; i<l; i++) {\n        if (typeof event[bindMethods[i]] != \"function\") {\n          event[bindMethods[i]] = qx.module.event.Track[bindMethods[i]].bind(event);\n        }\n      }\n\n      return event;\n    }\n  },\n\n  defer : function(statics) {\n    qxWeb.$registerEventNormalization(qx.module.event.Track.TYPES, statics.normalize);\n  }\n});\n"
  ]
}