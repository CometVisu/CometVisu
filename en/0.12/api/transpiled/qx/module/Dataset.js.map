{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/module/Dataset.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "members",
    "setData",
    "name",
    "value",
    "_forEachElement",
    "item",
    "bom",
    "element",
    "Dataset",
    "set",
    "getData",
    "nodeType",
    "get",
    "getAllData",
    "getAll",
    "hasData",
    "removeData",
    "remove",
    "defer",
    "statics",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,mBAApB,EAAyC;AAEvCC,IAAAA,OAAO,EAAE;AAEP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAAO,EAAG,iBAASC,IAAT,EAAeC,KAAf,EACV;AACE,aAAKC,eAAL,CAAqB,UAASC,IAAT,EAAe;AAClCV,UAAAA,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeC,OAAf,CAAuBC,GAAvB,CAA2BJ,IAA3B,EAAiCH,IAAjC,EAAuCC,KAAvC;AACD,SAFD;;AAIA,eAAO,IAAP;AACD,OAjBM;;AAoBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIO,MAAAA,OAAO,EAAG,iBAASR,IAAT,EACV;AACE,YAAI,KAAK,CAAL,KAAW,KAAK,CAAL,EAAQS,QAAR,KAAqB,CAApC,EAAuC;AACrC,iBAAOhB,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeC,OAAf,CAAuBI,GAAvB,CAA2B,KAAK,CAAL,CAA3B,EAAoCV,IAApC,CAAP;AACD;AACF,OAlCM;;AAoCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACIW,MAAAA,UAAU,EAAG,sBACb;AACE,YAAI,KAAK,CAAL,KAAW,KAAK,CAAL,EAAQF,QAAR,KAAqB,CAApC,EAAuC;AACrC,iBAAOhB,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeC,OAAf,CAAuBM,MAAvB,CAA8B,KAAK,CAAL,CAA9B,CAAP;AACD;;AACD,eAAO,EAAP;AACD,OAjDM;;AAoDP;AACJ;AACA;AACA;AACIC,MAAAA,OAAO,EAAG,mBAAW;AACnB,eAAOpB,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeC,OAAf,CAAuBO,OAAvB,CAA+B,KAAK,CAAL,CAA/B,CAAP;AACD,OA1DM;;AA6DP;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,UAAU,EAAG,oBAASd,IAAT,EACb;AACE,aAAKE,eAAL,CAAqB,UAASC,IAAT,EAAe;AAClCV,UAAAA,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeC,OAAf,CAAuBS,MAAvB,CAA8BZ,IAA9B,EAAoCH,IAApC;AACD,SAFD;;AAIA,eAAO,IAAP;AACD;AA3EM,KAF8B;AAiFvCgB,IAAAA,KAAK,EAAG,eAASC,OAAT,EACR;AACEC,MAAAA,KAAK,CAACC,UAAN,CAAiB,IAAjB;AAEA;AArFqC,GAAzC;AArBA1B,EAAAA,EAAE,CAAC2B,MAAH,CAAUd,OAAV,CAAkBV,aAAlB,GAAkCA,aAAlC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Romeo Kenfack (rkenfack)\n\n************************************************************************ */\n\n/**\n * Module for handling of HTML5 data-* attributes\n */\nqx.Bootstrap.define(\"qx.module.Dataset\", {\n\n  members: {\n\n    /**\n     * Sets an HTML \"data-*\" attribute on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Name of the attribute [CamelCase variant]\n     * @param value {var} New value of the attribute\n     * @return {qxWeb} The collection for chaining\n     */\n    setData : function(name, value)\n    {\n      this._forEachElement(function(item) {\n        qx.bom.element.Dataset.set(item, name, value);\n      });\n\n      return this;\n    },\n\n\n    /**\n     *\n     * Returns the value of the given HTML \"data-*\" attribute for the first item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Name of the attribute [CamelCase variant]\n     * @return {var} The value of the attribute\n     *\n     */\n    getData : function(name)\n    {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Dataset.get(this[0], name);\n      }\n    },\n\n    /**\n     * Returns a map containing all the HTML \"data-*\" attributes of the specified element\n     *\n     * @attach {qxWeb}\n     * @return {Map} The map containing the \"data-*\" attributes\n     *\n     */\n    getAllData : function()\n    {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Dataset.getAll(this[0]);\n      }\n      return {};\n    },\n\n\n    /**\n    * Checks if any element in the collection has a \"data-*\" attribute\n    * @return {Boolean} True if any element in the collection has a \"data-*\" attribute\n    */\n    hasData : function() {\n      return qx.bom.element.Dataset.hasData(this[0]);\n    },\n\n\n    /**\n     * Remove an HTML \"data-*\" attribute on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Name of the attribute\n     * @return {qxWeb} The collection for chaining\n     */\n    removeData : function(name)\n    {\n      this._forEachElement(function(item) {\n        qx.bom.element.Dataset.remove(item, name);\n      });\n\n      return this;\n    }\n\n  },\n\n  defer : function(statics)\n  {\n    qxWeb.$attachAll(this);\n\n   }\n});\n"
  ]
}