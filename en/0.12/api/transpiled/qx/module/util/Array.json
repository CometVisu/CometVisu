{
  "className": "qx.module.util.Array",
  "packageName": "qx.module.util",
  "name": "Array",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 195,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2012 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Martin Wittemann (wittemann)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Utility module to give some support to work with arrays.</p>"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Utilities"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "cast": {
      "location": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 29
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts an array like object to any other array like\n object.\n Attention: The returned array may be same\n instance as the incoming one if the constructor is identical!</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(object, constructor, offset)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.cast}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "object {var} any array-like object",
            "paramName": "object",
            "description": " any array-like object",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "constructor {Function} constructor of the new instance",
            "paramName": "constructor",
            "description": " constructor of the new instance",
            "type": "qx.module.util.Function"
          },
          {
            "name": "@param",
            "body": "offset {Number?0} position to start from",
            "paramName": "offset",
            "description": " position to start from",
            "optional": true,
            "defaultValue": "0",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} the converted array",
            "type": "qx.module.util.Array",
            "description": " the converted array"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "equals": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 33
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the two arrays have the same content. Checks only the\n equality of the arrays' content.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr1, arr2)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.equals}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr1 {Array} first array",
            "paramName": "arr1",
            "description": " first array",
            "type": "qx.module.util.Array"
          },
          {
            "name": "@param",
            "body": "arr2 {Array} second array",
            "paramName": "arr2",
            "description": " second array",
            "type": "qx.module.util.Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the two arrays are equal",
            "type": "Boolean",
            "description": " Whether the two arrays are equal"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "exclude": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 68,
          "column": 35
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Modifies the first array as it removes all elements\n which are listed in the second array as well.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr1, arr2)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.exclude}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr1 {Array} the array",
            "paramName": "arr1",
            "description": " the array",
            "type": "qx.module.util.Array"
          },
          {
            "name": "@param",
            "body": "arr2 {Array} the elements of this array will be excluded from the other one",
            "paramName": "arr2",
            "description": " the elements of this array will be excluded from the other one",
            "type": "qx.module.util.Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The modified array.",
            "type": "qx.module.util.Array",
            "description": " The modified array."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "fromArguments": {
      "location": {
        "start": {
          "line": 81,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 47
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Convert an arguments object into an array.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(args, offset)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.fromArguments}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "args {arguments} arguments object",
            "paramName": "args",
            "description": " arguments object",
            "type": "arguments"
          },
          {
            "name": "@param",
            "body": "offset {Number?0} position to start from",
            "paramName": "offset",
            "description": " position to start from",
            "optional": true,
            "defaultValue": "0",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} a newly created array (copy) with the content of the arguments object.",
            "type": "qx.module.util.Array",
            "description": " a newly created array (copy) with the content of the arguments object."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "insertAfter": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 43
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Insert an element into the array after a given second element.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr, obj, obj2)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.insertAfter}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr {Array} the array",
            "paramName": "arr",
            "description": " the array",
            "type": "qx.module.util.Array"
          },
          {
            "name": "@param",
            "body": "obj {var} object to be inserted",
            "paramName": "obj",
            "description": " object to be inserted",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "obj2 {var} insert obj1 after this object",
            "paramName": "obj2",
            "description": " insert obj1 after this object",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The given array.",
            "type": "qx.module.util.Array",
            "description": " The given array."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "insertBefore": {
      "location": {
        "start": {
          "line": 109,
          "column": 4
        },
        "end": {
          "line": 109,
          "column": 45
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Insert an element into the array before a given second element.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr, obj, obj2)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.insertBefore}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr {Array} the array",
            "paramName": "arr",
            "description": " the array",
            "type": "qx.module.util.Array"
          },
          {
            "name": "@param",
            "body": "obj {var} object to be inserted",
            "paramName": "obj",
            "description": " object to be inserted",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "obj2 {var} insert obj1 before this object",
            "paramName": "obj2",
            "description": " insert obj1 before this object",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The given array.",
            "type": "qx.module.util.Array",
            "description": " The given array."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "max": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 122,
          "column": 27
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the highest value in the given array. Supports\n numeric values only.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.max}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr {Array} Array to process.",
            "paramName": "arr",
            "description": " Array to process.",
            "type": "qx.module.util.Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number | undefined} The highest of all values or undefined if array is empty.",
            "type": "Number | undefined",
            "description": " The highest of all values or undefined if array is empty."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "min": {
      "location": {
        "start": {
          "line": 135,
          "column": 4
        },
        "end": {
          "line": 135,
          "column": 27
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the lowest value in the given array. Supports\n numeric values only.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.min}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr {Array} Array to process.",
            "paramName": "arr",
            "description": " Array to process.",
            "type": "qx.module.util.Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number | undefined} The lowest of all values or undefined if array is empty.",
            "type": "Number | undefined",
            "description": " The lowest of all values or undefined if array is empty."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 148,
          "column": 4
        },
        "end": {
          "line": 148,
          "column": 33
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove an element from the array.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr, obj)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.remove}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr {Array} the array",
            "paramName": "arr",
            "description": " the array",
            "type": "qx.module.util.Array"
          },
          {
            "name": "@param",
            "body": "obj {var} element to be removed from the array",
            "paramName": "obj",
            "description": " element to be removed from the array",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the removed element",
            "type": "var",
            "description": " the removed element"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "removeAll": {
      "location": {
        "start": {
          "line": 160,
          "column": 4
        },
        "end": {
          "line": 160,
          "column": 39
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove all elements from the array</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.removeAll}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr {Array} the array",
            "paramName": "arr",
            "description": " the array",
            "type": "qx.module.util.Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} empty array",
            "type": "qx.module.util.Array",
            "description": " empty array"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "unique": {
      "location": {
        "start": {
          "line": 175,
          "column": 4
        },
        "end": {
          "line": 175,
          "column": 33
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Recreates an array which is free of all duplicate elements from the original.\n This method do not modifies the original array!\n Keep in mind that this methods deletes undefined indexes.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(arr)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.unique}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arr {Array} Incoming array",
            "paramName": "arr",
            "description": " Incoming array",
            "type": "qx.module.util.Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} Returns a copy with no duplicates\n   or the original array if no duplicates were found.",
            "type": "qx.module.util.Array",
            "description": " Returns a copy with no duplicates\n   or the original array if no duplicates were found."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "range": {
      "location": {
        "start": {
          "line": 188,
          "column": 4
        },
        "end": {
          "line": 188,
          "column": 31
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a new array with integers from start to stop incremented or decremented by step.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(start, stop, step)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, array.range}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "start {Integer} start of the new array, defaults to 0",
            "paramName": "start",
            "description": " start of the new array, defaults to 0",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "stop {Integer} stop of the new array",
            "paramName": "stop",
            "description": " stop of the new array",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "step {Integer} increment / decrement - depends whether you use positive or negative values",
            "paramName": "step",
            "description": " increment / decrement - depends whether you use positive or negative values",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} Returns a new array with integers",
            "type": "qx.module.util.Array",
            "description": " Returns a new array with integers"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 192,
        "column": 10
      },
      "end": {
        "line": 194,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}