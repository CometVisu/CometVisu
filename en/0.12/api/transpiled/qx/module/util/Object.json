{
  "className": "qx.module.util.Object",
  "packageName": "qx.module.util",
  "name": "Object",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 104,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2013 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Alexander Steitz (aback)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Helper functions to handle an Object as a Hash map.</p>"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Utilities"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.module.util.Array"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "clone": {
      "location": {
        "start": {
          "line": 37,
          "column": 4
        },
        "end": {
          "line": 37,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return a copy of an Object</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(source, deep)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, object.clone}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "source {Object} Object to copy",
            "paramName": "source",
            "description": " Object to copy",
            "type": "qx.module.util.Object"
          },
          {
            "name": "@param",
            "body": "deep {Boolean} If the clone should be a deep clone.",
            "paramName": "deep",
            "description": " If the clone should be a deep clone.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} A copy of the object",
            "type": "qx.module.util.Object",
            "description": " A copy of the object"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "getValues": {
      "location": {
        "start": {
          "line": 48,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the values of a map as array</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(map)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, object.getValues}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "map {Object} the map",
            "paramName": "map",
            "description": " the map",
            "type": "qx.module.util.Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} array of the values of the map",
            "type": "qx.module.util.Array",
            "description": " array of the values of the map"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "invert": {
      "location": {
        "start": {
          "line": 62,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 34
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Inverts a map by exchanging the keys with the values.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(map)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, object.invert}\n If the map has the same values for different keys, information will get lost.\n The values will be converted to strings using the toString methods."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "map {Object} Map to invert",
            "paramName": "map",
            "description": " Map to invert",
            "type": "qx.module.util.Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} inverted Map",
            "type": "qx.module.util.Object",
            "description": " inverted Map"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "contains": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 75,
          "column": 38
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the map contains the given value.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(map, value)"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, object.contains}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "map {Object} Map to search for the value",
            "paramName": "map",
            "description": " Map to search for the value",
            "type": "qx.module.util.Object"
          },
          {
            "name": "@param",
            "body": "value {var} Value to look for",
            "paramName": "value",
            "description": " Value to look for",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the value was found in the map.",
            "type": "Boolean",
            "description": " Whether the value was found in the map."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "merge": {
      "location": {
        "start": {
          "line": 88,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Merges one or more objects into the 'target' object.\n<em>The objects are merged by overwriting existing keys.</em></p>"
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, object.merge}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {Object} target object to merge into",
            "paramName": "target",
            "description": " target object to merge into",
            "type": "qx.module.util.Object"
          },
          {
            "name": "@param",
            "body": "varargs {var} As many items as you want to merge.",
            "paramName": "varargs",
            "description": " As many items as you want to merge.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} the merged object",
            "type": "qx.module.util.Object",
            "description": " the merged object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 101,
        "column": 10
      },
      "end": {
        "line": 103,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}