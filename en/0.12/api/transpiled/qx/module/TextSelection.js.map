{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/module/TextSelection.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__isInput",
    "el",
    "tag",
    "tagName",
    "toLowerCase",
    "__getTextNode",
    "i",
    "l",
    "childNodes",
    "length",
    "nodeType",
    "members",
    "getTextSelection",
    "module",
    "TextSelection",
    "bom",
    "Selection",
    "get",
    "getTextSelectionLength",
    "getLength",
    "getTextSelectionStart",
    "getStart",
    "getTextSelectionEnd",
    "getEnd",
    "setTextSelection",
    "start",
    "end",
    "set",
    "clearTextSelection",
    "_forEachElement",
    "clear",
    "defer",
    "qxWeb",
    "$attachAll"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n/**\n * Text selection manipulation module\n */\nqx.Bootstrap.define(\"qx.module.TextSelection\", {\n  statics: {\n    /**\n     * Checks if the given DOM node is a text input field or textarea\n     *\n     * @param el {Element} The node to check\n     * @return {Boolean} <code>true</code> if the given node is an input field\n     *\n     * @attach {qxWeb}\n     */\n    __isInput : function(el) {\n      var tag = el.tagName ? el.tagName.toLowerCase() : null;\n      return (tag === \"input\" || tag === \"textarea\");\n    },\n\n\n    /**\n     * Returns the first text child node of the given element\n     *\n     * @param el {Element} DOM element\n     * @return {Node|null} text node\n     *\n     * @attach {qxWeb}\n     */\n    __getTextNode : function(el) {\n      for (var i=0, l=el.childNodes.length; i<l; i++) {\n        if (el.childNodes[i].nodeType === 3) {\n          return el.childNodes[i];\n        }\n      }\n      return null;\n    }\n  },\n\n  members :\n  {\n    /**\n     * Get the text selection of the first element.\n     *\n     * @return {String|null}\n     */\n    getTextSelection : function() {\n      var el = this[0];\n      if (el) {\n        if (!qx.module.TextSelection.__isInput(el)) {\n          el = qx.module.TextSelection.__getTextNode(el);\n        }\n        return el ? qx.bom.Selection.get(el) : null;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the length of the text selection of the first element.\n     *\n     *\n     * @return {Integer|null}\n     *\n     * @attach {qxWeb}\n     */\n    getTextSelectionLength : function() {\n      var el = this[0];\n      if (el) {\n        if (!qx.module.TextSelection.__isInput(el)) {\n          el = qx.module.TextSelection.__getTextNode(el);\n        }\n        return el ? qx.bom.Selection.getLength(el) : null;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the start of the text selection of the first element.\n     *\n     * @return {Integer|null}\n     *\n     * @attach {qxWeb}\n     */\n    getTextSelectionStart : function() {\n      var el = this[0];\n      if (el) {\n        if (!qx.module.TextSelection.__isInput(el)) {\n          el = qx.module.TextSelection.__getTextNode(el);\n        }\n        return el ? qx.bom.Selection.getStart(el) : null;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the end of the text selection of the first element.\n     *\n     * @return {Integer|null}\n     *\n     * @attach {qxWeb}\n     */\n    getTextSelectionEnd : function() {\n      var el = this[0];\n      if (el) {\n        if (!qx.module.TextSelection.__isInput(el)) {\n          el = qx.module.TextSelection.__getTextNode(el);\n        }\n        return el ? qx.bom.Selection.getEnd(el) : null;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Set the text selection of the first element in the collection\n     * with the given start and end value.\n     * If no end value is passed the selection will extend to the end.\n     *\n     * @param start {Integer} start of the selection (zero based)\n     * @param end {Integer} end of the selection\n     * @return {qxWeb} The collection for chaining.\n     *\n     * @attach {qxWeb}\n     */\n    setTextSelection : function(start, end) {\n      var el = this[0];\n      if (el) {\n        if (!qx.module.TextSelection.__isInput(el)) {\n          el = qx.module.TextSelection.__getTextNode(el);\n        }\n        if (el) {\n          qx.bom.Selection.set(el, start, end);\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Clears the text selection of all elements.\n     *\n     * @return {qxWeb} The collection for chaining.\n     *\n     * @attach {qxWeb}\n     */\n    clearTextSelection : function() {\n      this._forEachElement(function(el) {\n        if (!qx.module.TextSelection.__isInput(el)) {\n          el = qx.module.TextSelection.__getTextNode(el);\n        }\n        if (el) {\n          qx.bom.Selection.clear(el);\n        }\n      });\n      return this;\n    }\n  },\n\n\n  defer : function(statics) {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ]
}