{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/Utils.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "ABORT",
    "track",
    "Environment",
    "select",
    "tracker",
    "fn",
    "lang",
    "Type",
    "isPromise",
    "value",
    "then",
    "__push",
    "newPromise",
    "promise",
    "rejected",
    "self",
    "result",
    "event",
    "Utils",
    "reject",
    "__addCatcher",
    "__thenPromise",
    "Error",
    "__catcher",
    "undefined",
    "bind",
    "err",
    "catchers",
    "push",
    "catch1",
    "catch2",
    "callListener",
    "listener",
    "context",
    "tmp",
    "handler",
    "call",
    "getPropagationStopped",
    "series",
    "arr",
    "ignoreAbort",
    "index",
    "length",
    "Promise",
    "item"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2018 Zenesis Ltd, john.spackman@zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n\n************************************************************************ */\n\n/**\n * Utility methods which implement a fast, psuedo-promises mechanism used by event handlers\n * and dispatchers.\n *\n * Event handlers are allowed to return instances of `qx.Promise`, in which case the event\n * queue is suspended until the promise is resolved.  The simplest way to handle this would be\n * to convert the result of every event handler into a `qx.Promise` via `qx.Promise.resolve`,\n * but given that by far the majority of event handlers do not return promises, this could add\n * a significant overhead; the static methods in this class allow the event handlers to be\n * triggered and only when a `qx.Promise` is returned from a handler does the event dispatch\n * mechanism switch to using promise to suspend the event queue.\n *\n * To use this, the calling code simply creates an empty object (i.e. `var tracker = {};`)\n * which is then passed to `qx.event.Utils.then`, for example:\n *\n * <code>\n * var tracker = {};\n * Utils.then(tracker, function() { ... });\n * Utils.then(tracker, function() { ... });\n * Utils.then(tracker, function() { ... });\n * Utils.catch(tracker, function() { ... });\n * </code>\n *\n * Following with the morphing nature of this class, the return type will be either the value\n * returned from the event handlers, or a promise which evaluates to that value.\n *\n * When events are aborted (eg via `event.stopPropagation()`) that causes the promise (if there\n * is one) to be rejected.\n *\n * Note that this class is not a replacement for promises and has its limitations because it\n * has been built for the express purposes of the event dispatchers.\n *\n * @internal\n * @ignore(qx.Promise)\n * @ignore(Promise)\n */\nqx.Class.define(\"qx.event.Utils\", {\n  extend: qx.core.Object,\n\n  statics: {\n    ABORT: \"[[ qx.event.Utils.ABORT ]]\",\n\n    /**\n     * Evaluates a value, and adds it to the tracker\n     *\n     * @param tracker {Object} the tracker object\n     * @param fn {Function|Object?} if a function, it's evaluated as a `then`, otherwise\n     *  it's encapulated in a function for `then`\n     * @return {qx.Promise|Object?}\n     */\n    track: qx.core.Environment.select(\"qx.promise\", {\n      \"true\": function(tracker, fn) {\n        if (typeof fn !== \"function\" && !qx.lang.Type.isPromise(fn)) {\n          fn = (function(value) { return function() { return value; } })(fn);\n        }\n        return this.then(tracker, fn);\n      },\n      \"false\": function(tracker, fn) {\n        if (typeof fn === \"function\") {\n          return fn();\n        }\n        return fn;\n      }\n    }),\n\n    /**\n     * Helper method to store a promise in a tracker\n     *\n     * @param tracker {Object} the tracker object\n     * @param newPromise {qx.Promise} the new promise\n     * @return {qx.Promise} the new promise\n     */\n    __push: function(tracker, newPromise) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (tracker.promises === undefined) {\n          tracker.promises = [];\n        }\n        var ex = null;\n        try {\n          throw new Error(\"\");\n        } catch(e) {\n          ex = e;\n        }\n        tracker.promises.push({ promise: newPromise, ex: ex });\n      }\n      tracker.promise = newPromise;\n      return tracker.promise;\n    },\n\n    /**\n     * Equivalent of `promise.then()`\n     *\n     * @param tracker {Object} the tracker object\n     * @param fn {Function} the function to call when previous promises are complete\n     * @return {qx.Promise?} the new promise, or the return value from `fn` if no promises are in use\n     */\n    then: qx.core.Environment.select(\"qx.promise\", {\n      \"true\": function(tracker, fn) {\n        if (tracker.rejected) {\n          return null;\n        }\n        if (tracker.promise) {\n          if (qx.lang.Type.isPromise(fn)) {\n            this.__push(tracker, tracker.promise.then(fn));\n          } else {\n            var self = this;\n            this.__push(tracker, tracker.promise.then(function (result) {\n                if (tracker.rejected) {\n                  return null;\n                }\n                result = fn(result);\n                if (result === qx.event.Utils.ABORT) {\n                  return self.reject(tracker);\n                }\n                return result;\n              })\n            );\n          }\n          this.__addCatcher(tracker);\n          return tracker.promise;\n        }\n        if (qx.lang.Type.isPromise(fn)) {\n          return this.__thenPromise(tracker, fn);\n        }\n        var result = fn(tracker.result);\n        if (qx.lang.Type.isPromise(result)) {\n          return this.__thenPromise(tracker, result);\n        }\n        tracker.result = result;\n        if (result === qx.event.Utils.ABORT) {\n          return this.reject(tracker);\n        }\n\n        return result;\n      },\n\n      \"false\": function(tracker, fn) {\n        if (tracker.rejected) {\n          return null;\n        }\n        var result = tracker.result = fn(tracker.result);\n        if (result === qx.event.Utils.ABORT) {\n          return this.reject(tracker);\n        }\n        return result;\n      }\n    }),\n\n    /**\n     * Helper method to append a promise after the current one\n     *\n     * @param tracker {Object} the tracker object\n     * @param newPromise {qx.Promise} the new promise\n     * @return {qx.Promise} the new promise\n     */\n    __thenPromise: function(tracker, newPromise) {\n      if (tracker.promise) {\n        this.__push(tracker, tracker.promise.then(function() {\n            return newPromise;\n          }));\n      } else {\n        this.__push(tracker, newPromise);\n      }\n      this.__addCatcher(tracker);\n      return tracker.promise;\n    },\n\n    /**\n     * Rejects the tracker, aborting the promise if there is one.  The caller should stop\n     * immediately because if promises are not in use and exception is not thrown.\n     *\n     * @param tracker {Object} the tracker object\n     * @return {qx.Promise?} the last promise or the value returned by the catcher\n     */\n    reject: function(tracker) {\n      if (tracker.rejected) {\n        return qx.event.Utils.ABORT;\n      }\n      tracker.rejected = true;\n\n      if (tracker.promise) {\n        throw new Error(\"Rejecting Event\");\n      }\n      var result = this.__catcher(tracker);\n      return result === undefined ? this.ABORT : result;\n    },\n\n    /**\n     * Helper method that adds a catcher to the tracker\n     *\n     * @param tracker {Object} the tracker object\n     */\n    __addCatcher: function(tracker) {\n      if (tracker.promise && tracker.catch) {\n        if (!tracker.promise[\"qx.event.Utils.hasCatcher\"]) {\n          this.__push(tracker, tracker.promise.catch(this.__catcher.bind(this, tracker)));\n          tracker.promise[\"qx.event.Utils.hasCatcher\"] = true;\n        }\n      }\n    },\n\n    /**\n     * This method is added with `.catch` to every promise created; because this is added\n     * all the way up the promise chain to ensure that it catches everything, this method\n     * supresses multiple invocations (i.e. ignores everything except the first)\n     *\n     * @param tracker {Object} the tracker object\n     */\n    __catcher: function(tracker, err) {\n      var fn = tracker.catch;\n      if (fn) {\n        tracker.catch = null;\n        tracker.rejected = true;\n        return fn(err);\n      }\n      return qx.event.Utils.ABORT;\n    },\n\n    /**\n     * Equivalent to `.catch()`; note that unlike promises, this method must be called *before*\n     * `.then()` so that it is able to handle rejections when promises are not in use; this is\n     * because `Promise.catch` only catches rejections from previous promises, but because promises\n     * are *always* asynchronous the `.catch` goes at the end.  For synchronous, this is nt possible\n     * so `Utils.catch` must go before `Utils.then`\n     *\n     * @param tracker {Object} the tracker object\n     * @param fn {Function} the function to call\n     */\n    \"catch\": function(tracker, fn) {\n      if (tracker.rejected) {\n        fn();\n        return;\n      }\n\n      if (tracker.catchers === undefined) {\n        tracker.catchers = [fn];\n      } else {\n        tracker.catchers.push(fn);\n      }\n\n      if (tracker.catch) {\n        tracker.catch = (function(catch1, catch2) {\n            return function() {\n              catch1();\n              catch2();\n            };\n          })(tracker.catch, fn)\n      } else {\n        tracker.catch = fn;\n      }\n      this.__addCatcher(tracker);\n    },\n\n    /**\n     * Calls a listener, converting propagationStopped into a rejection\n     *\n     * @param tracker {Object} the tracker object\n     * @param listener {Function} the event handler\n     * @param context {Object?} the `this` for the event handler\n     * @param event {Event} the event being fired\n     * @returns {qx.Promise|?} the result of the handler\n     */\n    callListener: function(tracker, listener, context, event) {\n      if (tracker.rejected) {\n        return qx.event.Utils.ABORT;\n      }\n      var tmp = listener.handler.call(context, event);\n      if (event.getPropagationStopped()) {\n        return qx.event.Utils.ABORT;\n      }\n      return tmp;\n    },\n\n    /**\n     * Provides a handy way to iterate over an array which at any point could\n     * become asynchronous\n     *\n     * @param arr {Array} an array to interate over\n     * @param fn {Function?} the function to call, with parameters (item, index)\n     * @param ignoreAbort {Boolean?} whether to ignore the \"ABORT\" return value\n     * @return {qx.Promise|Object?}\n     */\n    series: qx.core.Environment.select(\"qx.promise\", {\n      \"true\": function(arr, fn, ignoreAbort) {\n        var tracker = {};\n        for (var index = 0; index < arr.length; index++) {\n          var result = fn(arr[index], index);\n          if (result instanceof qx.Promise) {\n            for (++index; index < arr.length; index++) {\n              (function(item, index) {\n                result = result.then(function() {\n                  var tmp = fn(item, index);\n                  if (!ignoreAbort && tmp === qx.event.Utils.ABORT) {\n                    throw new Error(\"Rejecting in series()\");\n                  }\n                  return tmp;\n                });\n              })(arr[index], index);\n            }\n            return result;\n          }\n\n          if (!ignoreAbort && result === qx.event.Utils.ABORT) {\n            return this.reject(tracker);\n          }\n        }\n\n        return null;\n      },\n\n      \"false\": function(arr, fn, ignoreAbort) {\n        var tracker = {};\n        for (var index = 0; index < arr.length; index++) {\n          var result = fn(arr[index], index);\n          if (!ignoreAbort && result === qx.event.Utils.ABORT) {\n            return this.reject(tracker);\n          }\n        }\n      }\n    })\n  }\n});\n"
  ]
}