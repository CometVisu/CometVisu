{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/event/handler/Iframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "load",
    "navigate",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "onevent",
    "GlobalError",
    "observeMethod",
    "target",
    "currentUrl",
    "bom",
    "Iframe",
    "queryCurrentUrl",
    "$$url",
    "fireEvent",
    "type",
    "Data",
    "members",
    "canHandleEvent",
    "tagName",
    "toLowerCase",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "defer",
    "addHandler",
    "handler"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;AAGAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,MADnB;AAEEC,IAAAA,SAAS,EAAGT,EAAE,CAACU,KAAH,CAASC,aAFvB;;AAQE;;;;;AAMAC,IAAAA,OAAO,EACP;AACE;AACAC,MAAAA,QAAQ,EAAGb,EAAE,CAACU,KAAH,CAASI,YAAT,CAAsBC,eAFnC;;AAIE;AACAC,MAAAA,eAAe,EAAG;AAChBC,QAAAA,IAAI,EAAE,CADU;AAEhBC,QAAAA,QAAQ,EAAE;AAFM,OALpB;;AAUE;AACAC,MAAAA,YAAY,EAAGnB,EAAE,CAACU,KAAH,CAASC,aAAT,CAAuBS,cAXxC;;AAaE;AACAC,MAAAA,iBAAiB,EAAG,KAdtB;;AAgBE;;;;;;;AAOAC,MAAAA,OAAO,EAAGtB,EAAE,CAACU,KAAH,CAASa,WAAT,CAAqBC,aAArB,CAAmC,UAASC,MAAT,EAAiB;AAE5D;AACA,YAAIC,UAAU,GAAG1B,EAAE,CAAC2B,GAAH,CAAOC,MAAP,CAAcC,eAAd,CAA8BJ,MAA9B,CAAjB;;AAEA,YAAIC,UAAU,KAAKD,MAAM,CAACK,KAA1B,EAAiC;AAC/B9B,UAAAA,EAAE,CAACU,KAAH,CAASI,YAAT,CAAsBiB,SAAtB,CAAgCN,MAAhC,EAAwC,UAAxC,EAAoDzB,EAAE,CAACU,KAAH,CAASsB,IAAT,CAAcC,IAAlE,EAAwE,CAACP,UAAD,CAAxE;AACAD,UAAAA,MAAM,CAACK,KAAP,GAAeJ,UAAf;AACD,SAR2D,CAU5D;;;AACA1B,QAAAA,EAAE,CAACU,KAAH,CAASI,YAAT,CAAsBiB,SAAtB,CAAgCN,MAAhC,EAAwC,MAAxC;AACD,OAZS;AAvBZ,KAfF;;AAyDE;;;;;AAMAS,IAAAA,OAAO,EACP;AACE;;;;;AAMA;AACAC,MAAAA,cAAc,EAAG,wBAASV,MAAT,EAAiBO,IAAjB,EAAuB;AACtC,eAAOP,MAAM,CAACW,OAAP,CAAeC,WAAf,OAAiC,QAAxC;AACD,OAVH;AAaE;AACAC,MAAAA,aAAa,EAAG,uBAASb,MAAT,EAAiBO,IAAjB,EAAuBO,OAAvB,EAAgC,CAC9C;AACD,OAhBH;AAmBE;AACAC,MAAAA,eAAe,EAAG,yBAASf,MAAT,EAAiBO,IAAjB,EAAuBO,OAAvB,EAAgC,CAChD;AACD;AAtBH,KAhEF;;AA+FE;;;;;AAMAE,IAAAA,KAAK,EAAG,eAAS7B,OAAT,EAAkB;AACxBZ,MAAAA,EAAE,CAACU,KAAH,CAASI,YAAT,CAAsB4B,UAAtB,CAAiC9B,OAAjC;AACD;AAvGH,GADA;AAtBAZ,EAAAA,EAAE,CAACU,KAAH,CAASiC,OAAT,CAAiBf,MAAjB,CAAwBzB,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This handler provides a \"load\" event for iframes\n */\nqx.Class.define(\"qx.event.handler.Iframe\",\n{\n  extend : qx.core.Object,\n  implement : qx.event.IEventHandler,\n\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES : {\n      load: 1,\n      navigate: 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : false,\n\n    /**\n     * Internal function called by iframes created using {@link qx.bom.Iframe}.\n     *\n     * @signature function(target)\n     * @internal\n     * @param target {Element} DOM element which is the target of this event\n     */\n    onevent : qx.event.GlobalError.observeMethod(function(target) {\n\n      // Fire navigate event when actual URL diverges from stored URL\n      var currentUrl = qx.bom.Iframe.queryCurrentUrl(target);\n\n      if (currentUrl !== target.$$url) {\n        qx.event.Registration.fireEvent(target, \"navigate\", qx.event.type.Data, [currentUrl]);\n        target.$$url = currentUrl;\n      }\n\n      // Always fire load event\n      qx.event.Registration.fireEvent(target, \"load\");\n    })\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {\n      return target.tagName.toLowerCase() === \"iframe\";\n    },\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    }\n\n\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}