{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/handler/ElementResize.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__elements",
    "__timer",
    "Timer",
    "addListener",
    "_onInterval",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "resize",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "tagName",
    "toLowerCase",
    "registerEvent",
    "capture",
    "hash",
    "ObjectRegistry",
    "toHashCode",
    "elements",
    "element",
    "width",
    "bom",
    "Dimension",
    "getWidth",
    "height",
    "getHeight",
    "start",
    "unregisterEvent",
    "lang",
    "isEmpty",
    "stop",
    "e",
    "key",
    "data",
    "el",
    "fireNonBubblingEvent",
    "Data",
    "oldWidth",
    "oldHeight",
    "destruct",
    "_disposeObjects",
    "defer",
    "addHandler",
    "handler",
    "ElementResize"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This handler fires a <code>resize</code> event if the size of a DOM element\n * changes.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.handler.ElementResize\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    this.__manager = manager;\n    this.__elements = {};\n\n    this.__timer = new qx.event.Timer(200);\n    this.__timer.addListener(\"interval\", this._onInterval, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      resize : true\n    },\n\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE,\n\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : false\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __elements : null,\n    __manager : null,\n    __timer : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {\n      return target.tagName.toLowerCase() !== \"body\";\n    },\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture)\n    {\n      var hash = qx.core.ObjectRegistry.toHashCode(target);\n\n      var elements = this.__elements;\n      if (!elements[hash])\n      {\n        elements[hash] = {\n          element: target,\n          width: qx.bom.element.Dimension.getWidth(target),\n          height: qx.bom.element.Dimension.getHeight(target)\n        };\n        this.__timer.start();\n      }\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture)\n    {\n      var hash = qx.core.ObjectRegistry.toHashCode(target);\n\n      var elements = this.__elements;\n      if (elements[hash])\n      {\n        delete elements[hash];\n\n        if (qx.lang.Object.isEmpty(elements)) {\n          this.__timer.stop();\n        }\n      }\n    },\n\n\n    /**\n     * Checks elements for width and height changes and fires resize event\n     * if needed.\n     *\n     * @param e {qx.event.type.Data} The incoming data event\n     */\n    _onInterval : function(e)\n    {\n      var elements = this.__elements;\n      for (var key in elements)\n      {\n        var data = elements[key];\n\n        var el = data.element;\n        var width = qx.bom.element.Dimension.getWidth(el);\n        var height = qx.bom.element.Dimension.getHeight(el);\n\n        if (data.height !== height || data.width !== width)\n        {\n          qx.event.Registration.fireNonBubblingEvent(\n            el,\n            \"resize\",\n            qx.event.type.Data,\n            [{\n              width: width,\n              oldWidth: data.width,\n              height: height,\n              oldHeight: data.height\n            }]\n          );\n\n          data.width = width;\n          data.height = height;\n        }\n      }\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this.__manager = this.__elements = null;\n    this._disposeObjects(\"__timer\");\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}