{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Gesture.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "handler",
    "GestureCore",
    "implement",
    "IEventHandler",
    "core",
    "IDisposable",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "tap",
    "swipe",
    "longtap",
    "dbltap",
    "rotate",
    "pinch",
    "track",
    "trackstart",
    "trackend",
    "roll",
    "GESTURE_EVENTS",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "TARGET_DOCUMENT",
    "IGNORE_CAN_HANDLE",
    "EVENT_CLASSES",
    "type",
    "Tap",
    "Swipe",
    "Rotate",
    "Pinch",
    "Track",
    "Roll",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "__root",
    "document",
    "apply",
    "members",
    "__listener",
    "__onDblClickWrapped",
    "__fireRollWrapped",
    "canHandleEvent",
    "target",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "_initObserver",
    "lang",
    "Function",
    "listener",
    "checkAndFireGesture",
    "Gesture",
    "forEach",
    "addListener",
    "bind",
    "Environment",
    "get",
    "_onDblClick",
    "bom",
    "Event",
    "addNativeListener",
    "data",
    "client",
    "getMouseWheel",
    "_fireRoll",
    "pointerEvent",
    "__callBase",
    "getNativeEvent",
    "getType",
    "getTarget",
    "_stopObserver",
    "removeListener",
    "removeNativeListener",
    "_hasIntermediaryHandler",
    "_fireEvent",
    "domEvent",
    "eventTypeClass",
    "Pointer",
    "nodeType",
    "fireEvent",
    "Data",
    "dispose",
    "method",
    "args",
    "prototype",
    "defer",
    "addHandler",
    "getManager",
    "getHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Unified gesture event handler.\n *\n * @require(qx.event.handler.Pointer)\n */\nqx.Class.define(\"qx.event.handler.Gesture\",\n{\n  extend : qx.event.handler.GestureCore,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n  statics : {\n\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES : {\n      tap : 1,\n      swipe : 1,\n      longtap : 1,\n      dbltap : 1,\n      rotate : 1,\n      pinch : 1,\n      track : 1,\n      trackstart : 1,\n      trackend : 1,\n      roll : 1\n    },\n\n    GESTURE_EVENTS : [\"gesturebegin\", \"gesturefinish\", \"gesturemove\", \"gesturecancel\"],\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE + qx.event.IEventHandler.TARGET_DOCUMENT,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true,\n\n    EVENT_CLASSES : {\n      \"tap\": qx.event.type.Tap,\n      \"longtap\": qx.event.type.Tap,\n      \"dbltap\": qx.event.type.Tap,\n      \"swipe\": qx.event.type.Swipe,\n      \"rotate\": qx.event.type.Rotate,\n      \"pinch\": qx.event.type.Pinch,\n      \"track\": qx.event.type.Track,\n      \"trackstart\": qx.event.type.Track,\n      \"trackend\": qx.event.type.Track,\n      \"roll\" : qx.event.type.Roll\n    }\n  },\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    // Define shorthands\n    this.__manager = manager;\n    this.__window = manager.getWindow();\n    this.__root = this.__window.document;\n\n    qx.event.handler.GestureCore.apply(this, [this.__root]);\n  },\n\n  members : {\n    __manager : null,\n    __window : null,\n    __root : null,\n    __listener : null,\n    __onDblClickWrapped : null,\n    __fireRollWrapped : null,\n\n    /**\n     * Getter for the internal __window object\n     * @return {Window} DOM window instance\n     */\n    getWindow: function() {\n      return this.__window;\n    },\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // overridden\n    _initObserver : function() {\n      this.__listener = qx.lang.Function.listener(this.checkAndFireGesture, this);\n      qx.event.handler.Gesture.GESTURE_EVENTS.forEach(function(type) {\n        qx.event.Registration.addListener(this.__root, type, this.__listener, this);\n      }.bind(this));\n\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9)\n      {\n        this.__onDblClickWrapped = qx.lang.Function.listener(this._onDblClick, this);\n        qx.bom.Event.addNativeListener(this.__root, \"dblclick\", this.__onDblClickWrapped);\n      }\n\n      // list to wheel events\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\n      this.__fireRollWrapped = qx.lang.Function.listener(this._fireRoll, this);\n      // replaced the useCapture (4th parameter) from this to true\n      // see https://github.com/qooxdoo/qooxdoo/pull/9292\n      qx.bom.Event.addNativeListener(data.target, data.type, this.__fireRollWrapped, true, false);\n    },\n\n    /**\n     * Checks if a gesture was made and fires the gesture event.\n     *\n     * @param pointerEvent {qx.event.type.Pointer} Pointer event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    checkAndFireGesture : function(pointerEvent, type, target) {\n      this.__callBase(\"checkAndFireGesture\",\n        [pointerEvent.getNativeEvent(), pointerEvent.getType(), pointerEvent.getTarget()]\n      );\n    },\n\n\n    // overridden\n    _stopObserver : function() {\n      qx.event.handler.Gesture.GESTURE_EVENTS.forEach(function(type) {\n        qx.event.Registration.removeListener(this.__root, type, this.__listener);\n      }.bind(this));\n\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9)\n      {\n        qx.bom.Event.removeNativeListener(this.__root, \"dblclick\", this.__onDblClickWrapped);\n      }\n\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\n      qx.bom.Event.removeNativeListener(data.target, data.type, this.__fireRollWrapped);\n    },\n\n\n    // overridden\n    _hasIntermediaryHandler : function(target) {\n      /* This check is irrelevant for qx.Desktop since there is only one\n         gesture handler */\n      return false;\n    },\n\n\n    /**\n     * Fire a touch event with the given parameters\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    _fireEvent : function(domEvent, type, target) {\n      if (!target) {\n        target = qx.bom.Event.getTarget(domEvent);\n      }\n\n      if (!type) {\n        type = domEvent.type;\n      }\n\n      var eventTypeClass = qx.event.handler.Gesture.EVENT_CLASSES[type] || qx.event.type.Pointer;\n\n      if (target && target.nodeType) {\n        qx.event.Registration.fireEvent(\n          target,\n          type,\n          eventTypeClass,\n          [domEvent, target, null, true, true]\n        );\n      }\n\n      // Fire user action event\n      qx.event.Registration.fireEvent(this.__window, \"useraction\", qx.event.type.Data, [type]);\n    },\n\n\n    /**\n     * Dispose this object\n     */\n    dispose : function()\n    {\n      this._stopObserver();\n      this.__callBase(\"dispose\");\n      this.__manager = this.__window = this.__root = this.__onDblClickWrapped = null;\n    },\n\n\n    /**\n     * Call overridden method.\n     *\n     * @param method {String} Name of the overridden method.\n     * @param args {Array} Arguments.\n     */\n    __callBase: function(method, args) {\n      qx.event.handler.GestureCore.prototype[method].apply(this, args || []);\n    }\n  },\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n    qx.event.Registration.getManager(document).getHandler(statics);\n  }\n});\n"
  ]
}