{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/handler/GestureCore.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "statics",
    "TYPES",
    "GESTURE_EVENTS",
    "TAP_MAX_DISTANCE",
    "DOUBLETAP_MAX_DISTANCE",
    "SWIPE_DIRECTION",
    "x",
    "y",
    "LONGTAP_TIME",
    "Environment",
    "get",
    "DOUBLETAP_TIME",
    "ROLL_FACTOR",
    "TOUCHPAD_ROLL_FACTOR",
    "TOUCHPAD_WHEEL_EVENTS_THRESHOLD",
    "TOUCHPAD_WHEEL_EVENTS_PERIOD",
    "TOUCHPAD_WHEEL_EVENTS_TIMEOUT",
    "construct",
    "target",
    "emitter",
    "__defaultTarget",
    "__emitter",
    "__gesture",
    "__lastTap",
    "__stopMomentum",
    "__momentum",
    "__rollEvents",
    "_initObserver",
    "members",
    "__eventName",
    "__primaryTarget",
    "__isMultiPointerGesture",
    "__initialAngle",
    "__rollImpulseId",
    "__initialDistance",
    "__rollEventsCountStart",
    "__rollEventsCount",
    "__touchPadDetectionPerformed",
    "__lastRollEventTime",
    "event",
    "handler",
    "GestureCore",
    "forEach",
    "gestureType",
    "qxWeb",
    "on",
    "checkAndFireGesture",
    "bind",
    "_onDblClick",
    "data",
    "type",
    "_fireRoll",
    "_stopObserver",
    "pointerType",
    "off",
    "domEvent",
    "bom",
    "Event",
    "getTarget",
    "gestureBegin",
    "gestureMove",
    "gestureFinish",
    "gestureCancel",
    "pointerId",
    "__stopLongTapTimer",
    "_hasIntermediaryHandler",
    "Date",
    "getTime",
    "clientX",
    "clientY",
    "isPrimary",
    "window",
    "setTimeout",
    "__fireLongTap",
    "__fireTrack",
    "keys",
    "length",
    "_calcAngle",
    "_calcDistance",
    "gesture",
    "oldClientX",
    "oldClientY",
    "lastEventTime",
    "velocityX",
    "velocityY",
    "__fireRotate",
    "__firePinch",
    "isTap",
    "_isBelowTapMaxDistance",
    "$$gestureHandler",
    "parentNode",
    "__handleRollImpulse",
    "_fireEvent",
    "isDblTap",
    "limit",
    "now",
    "time",
    "lastTap",
    "isBelowDoubleTapDistance",
    "__isBelowDoubleTapDistance",
    "getPointerType",
    "isSameTarget",
    "isSameButton",
    "button",
    "swipe",
    "__getSwipeGesture",
    "stopMomentum",
    "id",
    "updateGestureTarget",
    "deltaX",
    "deltaY",
    "oldTimeoutId",
    "timeoutId",
    "Math",
    "abs",
    "getWindow",
    "startFactor",
    "AnimationFrame",
    "request",
    "lang",
    "Function",
    "round",
    "delta",
    "momentum",
    "pointerA",
    "pointerB",
    "atan2",
    "PI",
    "scale",
    "sqrt",
    "pow",
    "_getDeltaCoordinates",
    "maxDistance",
    "x1",
    "y1",
    "x2",
    "y2",
    "clazz",
    "inX",
    "inY",
    "startX",
    "startY",
    "axis",
    "evt",
    "dom",
    "Custom",
    "bubbles",
    "angle",
    "dispatchEvent",
    "currentTarget",
    "srcElement",
    "emit",
    "deltaCoordinates",
    "duration",
    "startTime",
    "distance",
    "direction",
    "velocity",
    "__fireRollEvent",
    "rollFactor",
    "util",
    "Wheel",
    "getDelta",
    "__performAdaptativeRollScrolling",
    "IS_TOUCHPAD",
    "reLength",
    "i",
    "__endTouchPadDetection",
    "_isTouchPadDetectionEnabled",
    "detectionTimeout",
    "Timer",
    "once",
    "push",
    "longTapTimer",
    "clearTimeout",
    "dispose"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Listens for (native or synthetic) pointer events and fires events\n * for gestures like \"tap\" or \"swipe\"\n */\nqx.Bootstrap.define(\"qx.event.handler.GestureCore\", {\n  extend : Object,\n  implement: [ qx.core.IDisposable ],\n\n  statics : {\n\n    TYPES : [\"tap\", \"swipe\", \"longtap\", \"dbltap\", \"track\", \"trackstart\", \"trackend\", \"rotate\", \"pinch\", \"roll\"],\n\n    GESTURE_EVENTS : [\"gesturebegin\", \"gesturefinish\", \"gesturemove\", \"gesturecancel\"],\n\n    /** @type {Map} Maximum distance between a pointer-down and pointer-up event, values are configurable */\n    TAP_MAX_DISTANCE : {\"touch\": 40, \"mouse\": 5, \"pen\": 20}, // values are educated guesses\n\n    /** @type {Map} Maximum distance between two subsequent taps, values are configurable */\n    DOUBLETAP_MAX_DISTANCE : {\"touch\": 10, \"mouse\": 4, \"pen\": 10}, // values are educated guesses\n\n    /** @type {Map} The direction of a swipe relative to the axis */\n    SWIPE_DIRECTION :\n    {\n      x : [\"left\", \"right\"],\n      y : [\"up\", \"down\"]\n    },\n\n    /**\n     * @type {Integer} The time delta in milliseconds to fire a long tap event.\n     */\n    LONGTAP_TIME : qx.core.Environment.get(\"device.touch\")? 500: 99999,\n\n    /**\n     * @type {Integer} Maximum time between two tap events that will still trigger a\n     * dbltap event.\n     */\n    DOUBLETAP_TIME : 500,\n\n    /**\n     * @type {Integer} Factor which is used for adapting the delta of the mouse wheel\n     * event to the roll events,\n     */\n    ROLL_FACTOR: 18,\n\n    /**\n     * @type {Integer} Factor which is used for adapting the delta of the touchpad gesture\n     * event to the roll events,\n     */\n    TOUCHPAD_ROLL_FACTOR: 1,\n\n    /**\n     * @type {Integer} Minimum number of wheel events to receive during the\n     * TOUCHPAD_WHEEL_EVENTS_PERIOD to detect a touchpad.\n     */\n    TOUCHPAD_WHEEL_EVENTS_THRESHOLD: 10,\n\n    /**\n     * @type {Integer} Period (in ms) during which the wheel events are counted in order\n     * to detect a touchpad.\n     */\n    TOUCHPAD_WHEEL_EVENTS_PERIOD: 100,\n\n    /**\n     * @type {Integer} Timeout (in ms) after which the touchpad detection is reset if no wheel\n     * events are received in the meantime.\n     */\n    TOUCHPAD_WHEEL_EVENTS_TIMEOUT: 5000\n  },\n\n  /**\n   * @param target {Element} DOM Element that should fire gesture events\n   * @param emitter {qx.event.Emitter?} Event emitter (used if dispatchEvent\n   * is not supported, e.g. in IE8)\n   */\n  construct : function(target, emitter) {\n    this.__defaultTarget = target;\n    this.__emitter = emitter;\n    this.__gesture = {};\n    this.__lastTap = {};\n    this.__stopMomentum = {};\n    this.__momentum = {};\n    this.__rollEvents = [];\n    this._initObserver();\n  },\n\n  members : {\n    __defaultTarget : null,\n    __emitter : null,\n    __gesture : null,\n    __eventName : null,\n    __primaryTarget : null,\n    __isMultiPointerGesture : null,\n    __initialAngle : null,\n    __lastTap : null,\n    __rollImpulseId : null,\n    __stopMomentum : null,\n    __initialDistance : null,\n    __momentum : null,\n    __rollEvents : null,\n    __rollEventsCountStart : 0,\n    __rollEventsCount : 0,\n    __touchPadDetectionPerformed : false,\n    __lastRollEventTime: 0,\n\n    /**\n     * Register pointer event listeners\n     */\n    _initObserver : function() {\n      qx.event.handler.GestureCore.GESTURE_EVENTS.forEach(function(gestureType) {\n        qxWeb(this.__defaultTarget).on(gestureType, this.checkAndFireGesture, this);\n      }.bind(this));\n\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9)\n      {\n        qxWeb(this.__defaultTarget).on(\"dblclick\", this._onDblClick, this);\n      }\n\n      // list to wheel events\n      var data = qx.core.Environment.get(\"event.mousewheel\");\n      qxWeb(data.target).on(data.type, this._fireRoll, this);\n    },\n\n\n    /**\n     * Remove native pointer event listeners.\n     */\n    _stopObserver : function() {\n      qx.event.handler.GestureCore.GESTURE_EVENTS.forEach(function(pointerType) {\n        qxWeb(this.__defaultTarget).off(pointerType, this.checkAndFireGesture, this);\n      }.bind(this));\n\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9)\n      {\n        qxWeb(this.__defaultTarget).off(\"dblclick\", this._onDblClick, this);\n      }\n\n      var data = qx.core.Environment.get(\"event.mousewheel\");\n      qxWeb(data.target).off(data.type, this._fireRoll, this);\n    },\n\n\n    /**\n     * Checks if a gesture was made and fires the gesture event.\n     *\n     * @param domEvent {qx.event.type.Pointer} DOM event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    checkAndFireGesture : function(domEvent, type, target) {\n      if (!type) {\n        type = domEvent.type;\n      }\n\n      if (!target) {\n        target = qx.bom.Event.getTarget(domEvent);\n      }\n\n      if (type == \"gesturebegin\") {\n        this.gestureBegin(domEvent, target);\n      } else if (type == \"gesturemove\") {\n        this.gestureMove(domEvent, target);\n      } else if (type == \"gesturefinish\") {\n        this.gestureFinish(domEvent, target);\n      } else if (type == \"gesturecancel\") {\n        this.gestureCancel(domEvent.pointerId);\n      }\n    },\n\n    /**\n     * Helper method for gesture start.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    gestureBegin : function(domEvent, target) {\n      if (this.__gesture[domEvent.pointerId]) {\n        this.__stopLongTapTimer(this.__gesture[domEvent.pointerId]);\n        delete this.__gesture[domEvent.pointerId];\n      }\n\n      /*\n        If the dom event's target or one of its ancestors have\n        a gesture handler, we don't need to fire the gesture again\n        since it bubbles.\n       */\n      if (this._hasIntermediaryHandler(target)) {\n        return;\n      }\n\n      this.__gesture[domEvent.pointerId] = {\n        \"startTime\" : new Date().getTime(),\n        \"lastEventTime\" : new Date().getTime(),\n        \"startX\" : domEvent.clientX,\n        \"startY\" : domEvent.clientY,\n        \"clientX\" : domEvent.clientX,\n        \"clientY\" : domEvent.clientY,\n        \"velocityX\" : 0,\n        \"velocityY\" : 0,\n        \"target\" : target,\n        \"isTap\" : true,\n        \"isPrimary\" : domEvent.isPrimary,\n        \"longTapTimer\" : window.setTimeout(\n          this.__fireLongTap.bind(this, domEvent, target),\n          qx.event.handler.GestureCore.LONGTAP_TIME\n        )\n      };\n\n      if(domEvent.isPrimary) {\n        this.__isMultiPointerGesture = false;\n        this.__primaryTarget = target;\n        this.__fireTrack(\"trackstart\", domEvent, target);\n      } else {\n        this.__isMultiPointerGesture = true;\n        if(Object.keys(this.__gesture).length === 2) {\n          this.__initialAngle = this._calcAngle();\n          this.__initialDistance = this._calcDistance();\n        }\n      }\n    },\n\n\n    /**\n     * Helper method for gesture move.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    gestureMove : function(domEvent, target) {\n      var gesture = this.__gesture[domEvent.pointerId];\n\n      if (gesture) {\n        var oldClientX = gesture.clientX;\n        var oldClientY = gesture.clientY;\n\n        gesture.clientX = domEvent.clientX;\n        gesture.clientY = domEvent.clientY;\n        gesture.lastEventTime = new Date().getTime();\n\n        if(oldClientX) {\n          gesture.velocityX = gesture.clientX - oldClientX;\n        }\n        if(oldClientY) {\n          gesture.velocityY = gesture.clientY - oldClientY;\n        }\n\n        if (Object.keys(this.__gesture).length === 2) {\n          this.__fireRotate(domEvent, gesture.target);\n          this.__firePinch(domEvent, gesture.target);\n        }\n\n        if(!this.__isMultiPointerGesture) {\n          this.__fireTrack(\"track\", domEvent, gesture.target);\n          this._fireRoll(domEvent, \"touch\", gesture.target);\n        }\n\n        // abort long tap timer if the distance is too big\n        if (gesture.isTap) {\n          gesture.isTap = this._isBelowTapMaxDistance(domEvent);\n          if (!gesture.isTap) {\n            this.__stopLongTapTimer(gesture);\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Checks if a DOM element located between the target of a gesture\n     * event and the element this handler is attached to has a gesture\n     * handler of its own.\n     *\n     * @param target {Element} The gesture event's target\n     * @return {Boolean}\n     */\n    _hasIntermediaryHandler: function(target) {\n      while (target && target !== this.__defaultTarget) {\n        if (target.$$gestureHandler) {\n          return true;\n        }\n        target = target.parentNode;\n      }\n      return false;\n    },\n\n\n    /**\n     * Helper method for gesture end.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    gestureFinish : function(domEvent, target) {\n      // If no start position is available for this pointerup event, cancel gesture recognition.\n      if (!this.__gesture[domEvent.pointerId]) {\n        return;\n      }\n\n      var gesture = this.__gesture[domEvent.pointerId];\n      // delete the long tap\n      this.__stopLongTapTimer(gesture);\n\n      /*\n        If the dom event's target or one of its ancestors have\n        a gesture handler, we don't need to fire the gesture again\n        since it bubbles.\n       */\n      if (this._hasIntermediaryHandler(target)) {\n        return;\n      }\n\n      // always start the roll impulse on the original target\n      this.__handleRollImpulse(\n        gesture.velocityX,\n        gesture.velocityY,\n        domEvent,\n        gesture.target\n      );\n\n      this.__fireTrack(\"trackend\", domEvent, gesture.target);\n\n      if (gesture.isTap) {\n        if (target !== gesture.target) {\n\n          delete this.__gesture[domEvent.pointerId];\n          return;\n        }\n\n        this._fireEvent(domEvent, \"tap\", domEvent.target || target);\n\n        var isDblTap = false;\n        if (Object.keys(this.__lastTap).length > 0) {\n          // delete old tap entries\n          var limit = Date.now() - qx.event.handler.GestureCore.DOUBLETAP_TIME;\n          for (var time in this.__lastTap) {\n\n            if (time < limit) {\n              delete this.__lastTap[time];\n            } else {\n              var lastTap = this.__lastTap[time];\n              var isBelowDoubleTapDistance = this.__isBelowDoubleTapDistance(\n                lastTap.x,\n                lastTap.y,\n                domEvent.clientX,\n                domEvent.clientY,\n                domEvent.getPointerType()\n              );\n              var isSameTarget = lastTap.target === (domEvent.target || target);\n              var isSameButton = lastTap.button === domEvent.button;\n\n              if (isBelowDoubleTapDistance && isSameButton && isSameTarget) {\n                isDblTap = true;\n                delete this.__lastTap[time];\n                this._fireEvent(domEvent, \"dbltap\", domEvent.target || target);\n              }\n            }\n          }\n        }\n\n        if (!isDblTap) {\n          this.__lastTap[Date.now()] = {\n            x: domEvent.clientX,\n            y: domEvent.clientY,\n            target: domEvent.target || target,\n            button: domEvent.button\n          };\n        }\n\n      } else if (!this._isBelowTapMaxDistance(domEvent)) {\n        var swipe = this.__getSwipeGesture(domEvent, target);\n        if (swipe) {\n          domEvent.swipe = swipe;\n          this._fireEvent(domEvent, \"swipe\", gesture.target || target);\n        }\n      }\n\n      delete this.__gesture[domEvent.pointerId];\n    },\n\n\n    /**\n     * Stops the momentum scrolling currently running.\n     *\n     * @param id {Integer} The timeoutId of a 'roll' event\n     */\n    stopMomentum : function(id) {\n      this.__stopMomentum[id] = true;\n    },\n\n\n    /**\n     * Cancels the gesture if running.\n     * @param id {Number} The pointer Id.\n     */\n    gestureCancel : function(id) {\n      if (this.__gesture[id]) {\n        this.__stopLongTapTimer(this.__gesture[id]);\n        delete this.__gesture[id];\n      }\n      if (this.__momentum[id]) {\n        this.stopMomentum(this.__momentum[id]);\n        delete this.__momentum[id];\n      }\n    },\n\n\n    /**\n     * Update the target of a running gesture. This is used in virtual widgets\n     * when the DOM element changes.\n     *\n     * @param id {String} The pointer id.\n     * @param target {Element} The new target element.\n     * @internal\n     */\n    updateGestureTarget : function(id, target) {\n      this.__gesture[id].target = target;\n    },\n\n\n    /**\n     * Method which will be called recursively to provide a momentum scrolling.\n     * @param deltaX {Number} The last offset in X direction\n     * @param deltaY {Number} The last offset in Y direction\n     * @param domEvent {Event} The original gesture event\n     * @param target {Element} The target of the momentum roll events\n     * @param time {Number ?} The time in ms between the last two calls\n     */\n    __handleRollImpulse : function(deltaX, deltaY, domEvent, target, time) {\n      var oldTimeoutId = domEvent.timeoutId;\n      if (!time && this.__momentum[domEvent.pointerId]) {\n        // new roll impulse started, stop the old one\n        this.stopMomentum(this.__momentum[domEvent.pointerId]);\n      }\n      // do nothing if we don't need to scroll\n      if ((Math.abs(deltaY) < 1 && Math.abs(deltaX) < 1) || this.__stopMomentum[oldTimeoutId] || !this.getWindow()) {\n        delete this.__stopMomentum[oldTimeoutId];\n        delete this.__momentum[domEvent.pointerId];\n        return;\n      }\n\n      if (!time) {\n        time = 1;\n        var startFactor = 2.8;\n        deltaY = deltaY / startFactor;\n        deltaX = deltaX / startFactor;\n      }\n      time += 0.0006;\n\n      deltaY = deltaY / time;\n      deltaX = deltaX / time;\n\n      // set up a new timer with the new delta\n      var timeoutId = qx.bom.AnimationFrame.request(\n        qx.lang.Function.bind(\n          function(deltaX, deltaY, domEvent, target, time) {\n            this.__handleRollImpulse(deltaX, deltaY, domEvent, target, time);\n          },\n          this, deltaX, deltaY, domEvent, target, time)\n      );\n\n      deltaX = Math.round(deltaX * 100) / 100;\n      deltaY = Math.round(deltaY * 100) / 100;\n\n      // scroll the desired new delta\n      domEvent.delta = {\n        x: -deltaX,\n        y: -deltaY\n      };\n      domEvent.momentum = true;\n      domEvent.timeoutId = timeoutId;\n      this.__momentum[domEvent.pointerId] = timeoutId;\n      this._fireEvent(domEvent, \"roll\", domEvent.target || target);\n    },\n\n\n    /**\n    * Calculates the angle of the primary and secondary pointer.\n    * @return {Number} the rotation angle of the 2 pointers.\n    */\n    _calcAngle : function() {\n      var pointerA = null;\n      var pointerB = null;\n\n      for (var pointerId in this.__gesture) {\n        var gesture = this.__gesture[pointerId];\n        if (pointerA === null) {\n          pointerA = gesture;\n        } else {\n          pointerB = gesture;\n        }\n      }\n\n      var x = pointerA.clientX - pointerB.clientX;\n      var y = pointerA.clientY - pointerB.clientY;\n\n      return (360 + Math.atan2(y, x) * (180/Math.PI)) % 360;\n    },\n\n\n    /**\n     * Calculates the scaling distance between two pointers.\n     * @return {Number} the calculated distance.\n     */\n    _calcDistance : function() {\n      var pointerA = null;\n      var pointerB = null;\n\n      for (var pointerId in this.__gesture) {\n        var gesture = this.__gesture[pointerId];\n        if (pointerA === null) {\n          pointerA = gesture;\n        } else {\n          pointerB = gesture;\n        }\n      }\n\n      var scale = Math.sqrt( Math.pow(pointerA.clientX - pointerB.clientX, 2) + Math.pow(pointerA.clientY - pointerB.clientY, 2));\n      return scale;\n    },\n\n\n    /**\n     * Checks if the distance between the x/y coordinates of DOM event\n     * exceeds TAP_MAX_DISTANCE and returns the result.\n     *\n     * @param domEvent {Event} The DOM event from the browser.\n     * @return {Boolean|null} true if distance is below TAP_MAX_DISTANCE.\n     */\n    _isBelowTapMaxDistance: function(domEvent) {\n      var delta = this._getDeltaCoordinates(domEvent);\n      var maxDistance = qx.event.handler.GestureCore.TAP_MAX_DISTANCE[domEvent.getPointerType()];\n      if (!delta) {\n        return null;\n      }\n\n      return (Math.abs(delta.x) <= maxDistance &&\n              Math.abs(delta.y) <= maxDistance);\n    },\n\n\n    /**\n     * Checks if the distance between the x1/y1 and x2/y2 is\n     * below the TAP_MAX_DISTANCE and returns the result.\n     *\n     * @param x1 {Number} The x position of point one.\n     * @param y1 {Number} The y position of point one.\n     * @param x2 {Number} The x position of point two.\n     * @param y2 {Number} The y position of point two.\n     * @param type {String} The pointer type e.g. \"mouse\"\n     * @return {Boolean} <code>true</code>, if points are in range\n     */\n    __isBelowDoubleTapDistance : function(x1, y1, x2, y2, type) {\n      var clazz = qx.event.handler.GestureCore;\n\n      var inX = Math.abs(x1 - x2) < clazz.DOUBLETAP_MAX_DISTANCE[type];\n      var inY = Math.abs(y1 - y2) < clazz.DOUBLETAP_MAX_DISTANCE[type];\n\n      return inX && inY;\n    },\n\n\n    /**\n    * Calculates the delta coordinates in relation to the position on <code>pointerstart</code> event.\n    * @param domEvent {Event} The DOM event from the browser.\n    * @return {Map} containing the deltaX as x, and deltaY as y.\n    */\n    _getDeltaCoordinates : function(domEvent) {\n      var gesture = this.__gesture[domEvent.pointerId];\n      if (!gesture) {\n        return null;\n      }\n\n      var deltaX = domEvent.clientX - gesture.startX;\n      var deltaY = domEvent.clientY - gesture.startY;\n\n      var axis = \"x\";\n      if (Math.abs(deltaX / deltaY) < 1) {\n        axis = \"y\";\n      }\n\n      return {\n        \"x\": deltaX,\n        \"y\": deltaY,\n        \"axis\": axis\n      };\n    },\n\n\n    /**\n     * Fire a gesture event with the given parameters\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String} type of the event\n     * @param target {Element ? null} event target\n     * @return {qx.Promise?} a promise, if one or more of the event handlers returned a promise\n     */\n    _fireEvent : function(domEvent, type, target) {\n      // The target may have been removed, e.g. menu hide on tap\n      if (!this.__defaultTarget) {\n        return;\n      }\n      var evt;\n      if (qx.core.Environment.get(\"event.dispatchevent\")) {\n        evt = new qx.event.type.dom.Custom(type, domEvent, {\n          bubbles: true,\n          swipe: domEvent.swipe,\n          scale: domEvent.scale,\n          angle: domEvent.angle,\n          delta: domEvent.delta,\n          pointerType: domEvent.pointerType,\n          momentum : domEvent.momentum\n        });\n        return target.dispatchEvent(evt);\n      } else if (this.__emitter) {\n        evt = new qx.event.type.dom.Custom(type, domEvent, {\n          target : this.__defaultTarget,\n          currentTarget : this.__defaultTarget,\n          srcElement : this.__defaultTarget,\n          swipe: domEvent.swipe,\n          scale: domEvent.scale,\n          angle: domEvent.angle,\n          delta: domEvent.delta,\n          pointerType: domEvent.pointerType,\n          momentum : domEvent.momentum\n        });\n\n        this.__emitter.emit(type, domEvent);\n      }\n    },\n\n\n    /**\n     * Fire \"tap\" and \"dbltap\" events after a native \"dblclick\"\n     * event to fix IE 8's broken mouse event sequence.\n     *\n     * @param domEvent {Event} dblclick event\n     */\n    _onDblClick : function(domEvent) {\n      var target = qx.bom.Event.getTarget(domEvent);\n      this._fireEvent(domEvent, \"tap\", target);\n      this._fireEvent(domEvent, \"dbltap\", target);\n    },\n\n\n    /**\n     * Returns the swipe gesture when the user performed a swipe.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     * @return {Map|null} returns the swipe data when the user performed a swipe, null if the gesture was no swipe.\n     */\n    __getSwipeGesture : function(domEvent, target) {\n      var gesture = this.__gesture[domEvent.pointerId];\n      if (!gesture) {\n        return null;\n      }\n\n      var clazz = qx.event.handler.GestureCore;\n      var deltaCoordinates = this._getDeltaCoordinates(domEvent);\n      var duration = new Date().getTime() - gesture.startTime;\n      var axis = (Math.abs(deltaCoordinates.x) >= Math.abs(deltaCoordinates.y)) ? \"x\" : \"y\";\n      var distance = deltaCoordinates[axis];\n      var direction = clazz.SWIPE_DIRECTION[axis][distance < 0 ? 0 : 1];\n      var velocity = (duration !== 0) ? distance / duration : 0;\n\n      var swipe = {\n        startTime: gesture.startTime,\n        duration: duration,\n        axis: axis,\n        direction: direction,\n        distance: distance,\n        velocity: velocity\n      };\n\n      return swipe;\n    },\n\n\n    /**\n     * Fires a track event.\n     *\n     * @param type {String} the track type\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __fireTrack : function(type, domEvent, target) {\n      domEvent.delta = this._getDeltaCoordinates(domEvent);\n      this._fireEvent(domEvent, type, domEvent.target || target);\n    },\n\n\n    /**\n     * Fires a roll event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     * @param rollFactor {Integer} the roll factor to apply\n     */\n    __fireRollEvent: function (domEvent, target, rollFactor) {\n      domEvent.delta = {\n        x: qx.util.Wheel.getDelta(domEvent, \"x\") * rollFactor,\n        y: qx.util.Wheel.getDelta(domEvent, \"y\") * rollFactor\n      };\n      domEvent.delta.axis = Math.abs(domEvent.delta.x / domEvent.delta.y) < 1 ? \"y\" : \"x\";\n      domEvent.pointerType = \"wheel\";\n      this._fireEvent(domEvent, \"roll\", domEvent.target || target);\n    },\n\n    /**\n     * Triggers the adaptative roll scrolling.\n     *\n     * @param target {Element} event target\n     */\n    __performAdaptativeRollScrolling: function (target) {\n      var rollFactor = qx.event.handler.GestureCore.ROLL_FACTOR;\n      if (qx.util.Wheel.IS_TOUCHPAD) {\n        // The domEvent was generated by a touchpad\n        rollFactor = qx.event.handler.GestureCore.TOUCHPAD_ROLL_FACTOR;\n      }\n      this.__lastRollEventTime = new Date().getTime();\n      var reLength = this.__rollEvents.length;\n      for (var i = 0; i < reLength; i++) {\n        var domEvent = this.__rollEvents[i];\n        this.__fireRollEvent(domEvent, target, rollFactor);\n      }\n      this.__rollEvents = [];\n    },\n\n    /**\n     * Ends touch pad detection process.\n     */\n    __endTouchPadDetection: function () {\n      if (this.__rollEvents.length > qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_THRESHOLD) {\n        qx.util.Wheel.IS_TOUCHPAD = true;\n      } else {\n        qx.util.Wheel.IS_TOUCHPAD = false;\n      }\n      if (qx.core.Environment.get(\"qx.debug.touchpad.detection\")) {\n        qx.log.Logger.debug(this, \"IS_TOUCHPAD : \" + qx.util.Wheel.IS_TOUCHPAD);\n      }\n      this.__touchPadDetectionPerformed = true;\n    },\n\n    /**\n     * Is touchpad detection enabled ? Default implementation activates it only for Mac OS after Sierra (>= 10.12).\n     * @return {boolean} true if touchpad detection should occur.\n     * @internal\n     */\n    _isTouchPadDetectionEnabled: function () {\n      return qx.core.Environment.get(\"os.name\") == \"osx\" && qx.core.Environment.get(\"os.version\") >= 10.12;\n    },\n\n    /**\n     * Fires a roll event after determining the roll factor to apply. Mac OS Sierra (10.12+)\n     * introduces a lot more wheel events fired from the trackpad, so the roll factor to be applied\n     * has to be reduced in order to make the scrolling less sensitive.\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String} The type of the dom event\n     * @param target {Element} event target\n     */\n    _fireRoll : function(domEvent, type, target) {\n      var now;\n      var detectionTimeout;\n      if (domEvent.type === qx.core.Environment.get(\"event.mousewheel\").type) {\n        if (this._isTouchPadDetectionEnabled()) {\n          now = new Date().getTime();\n          detectionTimeout = qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_TIMEOUT;\n          if (this.__lastRollEventTime > 0 && now - this.__lastRollEventTime > detectionTimeout) {\n            // The detection timeout was reached. A new detection step should occur.\n            this.__touchPadDetectionPerformed = false;\n            this.__rollEvents = [];\n            this.__lastRollEventTime = 0;\n          }\n          if (!this.__touchPadDetectionPerformed) {\n            // We are into a detection session. We count the events so that we can decide if\n            // they were fired by a real mouse wheel or a touchpad. Just swallow them until the\n            // detection period is over.\n            if (this.__rollEvents.length === 0) {\n              // detection starts\n              this.__rollEventsCountStart = now;\n              qx.event.Timer.once(function () {\n                if (!this.__touchPadDetectionPerformed) {\n                  // There were not enough events during the TOUCHPAD_WHEEL_EVENTS_PERIOD to actually\n                  // trigger a scrolling. Trigger it manually.\n                  this.__endTouchPadDetection();\n                  this.__performAdaptativeRollScrolling(target);\n                }\n              }, this, qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_PERIOD + 50)\n            }\n            this.__rollEvents.push(domEvent);\n            this.__rollEventsCount++;\n            if (now - this.__rollEventsCountStart > qx.event.handler.GestureCore.TOUCHPAD_WHEEL_EVENTS_PERIOD) {\n              this.__endTouchPadDetection();\n            }\n          }\n          if (this.__touchPadDetectionPerformed) {\n            if (this.__rollEvents.length === 0) {\n              this.__rollEvents.push(domEvent);\n            }\n            // Detection is done. We can now decide the roll factor to apply to the delta.\n            // Default to a real mouse wheel event as opposed to a touchpad one.\n            this.__performAdaptativeRollScrolling(target);\n          }\n        } else {\n          this.__fireRollEvent(domEvent, target, qx.event.handler.GestureCore.ROLL_FACTOR);\n        }\n      } else {\n        var gesture = this.__gesture[domEvent.pointerId];\n        domEvent.delta = {\n          x: -gesture.velocityX,\n          y: -gesture.velocityY,\n          axis : Math.abs(gesture.velocityX / gesture.velocityY) < 1 ? \"y\" : \"x\"\n        };\n        this._fireEvent(domEvent, \"roll\", domEvent.target || target);\n      }\n    },\n\n\n    /**\n     * Fires a rotate event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __fireRotate : function(domEvent, target) {\n      if(!domEvent.isPrimary) {\n        var angle = this._calcAngle();\n        domEvent.angle = Math.round((angle - this.__initialAngle) % 360);\n        this._fireEvent(domEvent, \"rotate\", this.__primaryTarget);\n      }\n    },\n\n\n    /**\n     * Fires a pinch event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __firePinch: function(domEvent, target) {\n      if (!domEvent.isPrimary) {\n        var distance = this._calcDistance();\n        var scale = distance / this.__initialDistance;\n        domEvent.scale = (Math.round(scale * 100) / 100);\n        this._fireEvent(domEvent, \"pinch\", this.__primaryTarget);\n      }\n    },\n\n\n    /**\n     * Fires the long tap event.\n     *\n     * @param domEvent {Event} DOM event\n     * @param target {Element} event target\n     */\n    __fireLongTap : function(domEvent, target) {\n      var gesture = this.__gesture[domEvent.pointerId];\n      if (gesture) {\n        this._fireEvent(domEvent, \"longtap\", domEvent.target || target);\n        gesture.longTapTimer = null;\n        gesture.isTap = false;\n      }\n    },\n\n\n    /**\n     * Stops the time for the long tap event.\n     * @param gesture {Map} Data may representing the gesture.\n     */\n    __stopLongTapTimer : function(gesture) {\n      if (gesture.longTapTimer) {\n        window.clearTimeout(gesture.longTapTimer);\n        gesture.longTapTimer = null;\n      }\n    },\n\n    /**\n     * Dispose the current instance\n     */\n    dispose : function() {\n      for(var gesture in this.__gesture) {\n        this.__stopLongTapTimer(gesture);\n      }\n\n      this._stopObserver();\n      this.__defaultTarget = this.__emitter = null;\n    }\n  }\n});\n"
  ]
}