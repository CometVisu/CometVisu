{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/handler/DragDrop.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__root",
    "getWindow",
    "document",
    "documentElement",
    "addListener",
    "_onLongtap",
    "_onPointerdown",
    "Registration",
    "window",
    "_onWindowBlur",
    "__rebuildStructures",
    "statics",
    "PRIORITY",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "dragstart",
    "dragend",
    "dragover",
    "dragleave",
    "drop",
    "drag",
    "dragchange",
    "droprequest",
    "IGNORE_CAN_HANDLE",
    "ALLOWED_BUTTONS",
    "MIN_DRAG_DISTANCE",
    "properties",
    "cursor",
    "check",
    "nullable",
    "init",
    "members",
    "__dropTarget",
    "__dragTarget",
    "__types",
    "__actions",
    "__keys",
    "__cache",
    "__currentType",
    "__currentAction",
    "__sessionActive",
    "__validDrop",
    "__validAction",
    "__dragTargetWidget",
    "__startConfig",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "addType",
    "addAction",
    "action",
    "supportsType",
    "supportsAction",
    "setDropAllowed",
    "isAllowed",
    "__detectAction",
    "getData",
    "Error",
    "__fireEvent",
    "getDataAsync",
    "tracker",
    "self",
    "Utils",
    "then",
    "getCurrentAction",
    "getCurrentActionAsync",
    "Environment",
    "select",
    "Promise",
    "resolve",
    "classname",
    "getDragTarget",
    "addData",
    "data",
    "getCurrentType",
    "isSessionActive",
    "get",
    "reject",
    "actions",
    "keys",
    "current",
    "Shift",
    "Control",
    "alias",
    "Alt",
    "copy",
    "move",
    "old",
    "validAction",
    "relatedTarget",
    "cancelable",
    "original",
    "async",
    "dragEvent",
    "createEvent",
    "Drag",
    "setRelatedTarget",
    "result",
    "dispatchEvent",
    "undefined",
    "getDefaultPrevented",
    "__findDraggable",
    "elem",
    "nodeType",
    "getAttribute",
    "parentNode",
    "__findDroppable",
    "clearSession",
    "removeListener",
    "_onPointermove",
    "_onPointerup",
    "_onKeyDown",
    "_onKeyUp",
    "_onKeyPress",
    "_onRoll",
    "removeState",
    "e",
    "getPointerType",
    "_start",
    "isButtonOk",
    "handler",
    "DragDrop",
    "indexOf",
    "getButton",
    "isPrimary",
    "getTarget",
    "draggable",
    "widgetOriginalTarget",
    "ui",
    "Widget",
    "getWidgetByElement",
    "isAnonymous",
    "getLayoutParent",
    "addState",
    "getOriginalTarget",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "delta",
    "_getDelta",
    "distance",
    "Math",
    "abs",
    "x",
    "y",
    "el",
    "getNativeEvent",
    "view",
    "elementFromPoint",
    "getCursor",
    "DragDropCursor",
    "getInstance",
    "cursorEl",
    "getContentElement",
    "getDomElement",
    "contains",
    "display",
    "bom",
    "element",
    "Style",
    "set",
    "droppable",
    "dropLeaveTarget",
    "innerTracker",
    "validDrop",
    "isCtrlPressed",
    "isShiftPressed",
    "isAltPressed",
    "deltaX",
    "deltaY",
    "stopPropagation",
    "stop",
    "iden",
    "getKeyIdentifier",
    "destruct",
    "defer",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Event handler, which supports drag events on DOM elements.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.event.handler.Gesture)\n * @require(qx.event.handler.Keyboard)\n * @require(qx.event.handler.Capture)\n */\nqx.Class.define(\"qx.event.handler.DragDrop\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    // Define shorthands\n    this.__manager = manager;\n    this.__root = manager.getWindow().document.documentElement;\n\n    // Initialize listener\n    this.__manager.addListener(this.__root, \"longtap\", this._onLongtap, this);\n    this.__manager.addListener(this.__root, \"pointerdown\", this._onPointerdown, this, true);\n\n    qx.event.Registration.addListener(window, \"blur\", this._onWindowBlur, this);\n\n    // Initialize data structures\n    this.__rebuildStructures();\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      dragstart : 1,\n      dragend : 1,\n      dragover : 1,\n      dragleave : 1,\n      drop : 1,\n      drag : 1,\n      dragchange : 1,\n      droprequest : 1\n    },\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true,\n\n    /**\n     * Array of strings holding the names of the allowed mouse buttons\n     * for Drag & Drop. The default is \"left\" but could be extended with\n     * \"middle\" or \"right\"\n     */\n    ALLOWED_BUTTONS: [\"left\"],\n\n\n    /**\n     * The distance needed to change the mouse position before a drag session start.\n     */\n    MIN_DRAG_DISTANCE : 5\n  },\n\n\n  properties : {\n    /**\n     * Widget instance of the drag & drop cursor. If non is given, the default\n     * {@link qx.ui.core.DragDropCursor} will be used.\n     */\n    cursor : {\n      check : \"qx.ui.core.Widget\",\n      nullable : true,\n      init : null\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __manager : null,\n    __root : null,\n    __dropTarget : null,\n    __dragTarget : null,\n    __types : null,\n    __actions : null,\n    __keys : null,\n    __cache : null,\n    __currentType : null,\n    __currentAction : null,\n    __sessionActive : false,\n    __validDrop : false,\n    __validAction : false,\n    __dragTargetWidget : null,\n    __startConfig : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Registers a supported type\n     *\n     * @param type {String} The type to add\n     */\n    addType : function(type) {\n      this.__types[type] = true;\n    },\n\n    /**\n     * Registers a supported action. One of <code>move</code>,\n     * <code>copy</code> or <code>alias</code>.\n     *\n     * @param action {String} The action to add\n     */\n    addAction : function(action) {\n      this.__actions[action] = true;\n    },\n\n\n    /**\n     * Whether the current drag target supports the given type\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the type is supported\n     */\n    supportsType : function(type) {\n      return !!this.__types[type];\n    },\n\n\n    /**\n     * Whether the current drag target supports the given action\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the action is supported\n     */\n    supportsAction : function(type) {\n      return !!this.__actions[type];\n    },\n\n    /**\n     * Whether the current drop target allows the current drag target.\n     *\n     * @param isAllowed {Boolean} False if a drop should be disallowed\n     */\n    setDropAllowed : function(isAllowed) {\n      this.__validDrop = isAllowed;\n      this.__detectAction();\n    },\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * Note that this is a synchronous method and if any of the drag and drop\n     * events handlers are implemented using Promises, this may fail; @see\n     * `getDataAsync`.\n     *\n     * @param type {String} Any supported type\n     * @return {var} The result data in a promise\n     */\n    getData : function(type)\n    {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\"This method must not be used outside the drop event listener!\");\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      if (!this.__cache[type])\n      {\n        this.__currentType = type;\n        this.__fireEvent(\"droprequest\", this.__dragTarget, this.__dropTarget, false, false);\n      }\n\n      if (!this.__cache[type]) {\n        throw new Error(\"Please use a droprequest listener to the drag source to fill the manager with data!\");\n      }\n\n      return this.__cache[type] || null;\n    },\n\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * @param type {String} Any supported type\n     * @return {qx.Promise} The result data in a promise\n     */\n    getDataAsync : function(type)\n    {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\"This method must not be used outside the drop event listener!\");\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      var tracker = {};\n      var self = this;\n      if (!this.__cache[type]) {\n        qx.event.Utils.then(tracker, function () {\n          self.__currentType = type;\n          return self.__fireEvent(\"droprequest\", self.__dragTarget, self.__dropTarget, false);\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        if (!this.__cache[type]) {\n          throw new Error(\"Please use a droprequest listener to the drag source to fill the manager with data!\");\n        }\n\n        return this.__cache[type] || null;\n      });\n    },\n\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentAction : function() {\n      this.__detectAction();\n      return this.__currentAction;\n    },\n\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {qx.Promise|String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentActionAsync : qx.core.Environment.select(\"qx.promise\", {\n      \"true\": function() {\n      var self = this;\n\n      return qx.Promise.resolve(self.__detectAction())\n        .then(function() {\n          return self.__currentAction;\n        });\n      },\n      \"false\": function () {\n        throw new Error(this.classname + \".getCurrentActionAsync not supported because qx.promise==false\");\n      }\n    }),\n\n\n    /**\n     * Returns the widget which has been the target of the drag start.\n     * @return {qx.ui.core.Widget} The widget on which the drag started.\n     */\n    getDragTarget : function() {\n      return this.__dragTargetWidget;\n    },\n\n\n    /**\n     * Adds data of the given type to the internal storage. The data\n     * is available until the <code>dragend</code> event is fired.\n     *\n     * @param type {String} Any valid type\n     * @param data {var} Any data to store\n     */\n    addData : function(type, data) {\n      this.__cache[type] = data;\n    },\n\n\n    /**\n     * Returns the type which was requested last.\n     *\n     * @return {String} The last requested data type\n     */\n    getCurrentType : function() {\n      return this.__currentType;\n    },\n\n\n    /**\n     * Returns if a drag session is currently active\n     *\n     * @return {Boolean} active drag session\n     */\n    isSessionActive : function() {\n      return this.__sessionActive;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Rebuilds the internal data storage used during a drag&drop session\n     */\n    __rebuildStructures : function()\n    {\n      this.__types = {};\n      this.__actions = {};\n      this.__keys = {};\n      this.__cache = {};\n    },\n\n\n    /**\n     * Detects the current action and stores it under the private\n     * field <code>__currentAction</code>. Also fires the event\n     * <code>dragchange</code> on every modification.\n     *\n     * @return {qx.Promise|null}\n     */\n    __detectAction : function()\n    {\n      if (this.__dragTarget == null) {\n        if (qx.core.Environment.get(\"qx.promise\")) {\n          return qx.Promise.reject();\n        } else {\n          return null;\n        }\n      }\n\n      var actions = this.__actions;\n      var keys = this.__keys;\n      var current = null;\n\n      if (this.__validDrop)\n      {\n        if (keys.Shift && keys.Control && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Shift && keys.Alt && actions.copy) {\n          current = \"copy\";\n        } else if (keys.Shift && actions.move) {\n          current = \"move\";\n        } else if (keys.Alt && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Control && actions.copy) {\n          current = \"copy\";\n        } else if (actions.move) {\n          current = \"move\";\n        } else if (actions.copy) {\n          current = \"copy\";\n        } else if (actions.alias) {\n          current = \"alias\";\n        }\n      }\n\n      var self = this;\n      var tracker = {};\n      var old = this.__currentAction;\n      if (current != old) {\n        if (this.__dropTarget) {\n          qx.event.Utils.catch(function () {\n            self.__validAction = false;\n            current = null;\n          });\n          qx.event.Utils.then(tracker, function () {\n            self.__currentAction = current;\n            return self.__fireEvent(\"dragchange\", self.__dropTarget, self.__dragTarget, true);\n          });\n          qx.event.Utils.then(tracker, function (validAction) {\n            self.__validAction = validAction;\n            if (!validAction) {\n              current = null;\n            }\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function() {\n        if (current != old) {\n          self.__currentAction = current;\n          return self.__fireEvent(\"dragchange\", self.__dragTarget, self.__dropTarget, false);\n        }\n      });\n    },\n\n\n    /**\n     * Wrapper for {@link qx.event.Registration#fireEvent} for drag&drop events\n     * needed in this class.\n     *\n     * @param type {String} Event type\n     * @param target {Object} Target to fire on\n     * @param relatedTarget {Object} Related target, i.e. drag or drop target\n     *    depending on the drag event\n     * @param cancelable {Boolean} Whether the event is cancelable\n     * @param original {qx.event.type.Pointer} Original pointer event\n     * @return {qx.Promise|Boolean} <code>true</code> if the event's default behavior was\n     * not prevented\n     */\n    __fireEvent : function(type, target, relatedTarget, cancelable, original, async)\n    {\n      var Registration = qx.event.Registration;\n      var dragEvent = Registration.createEvent(type, qx.event.type.Drag, [ cancelable, original ]);\n\n      if (target !== relatedTarget) {\n        dragEvent.setRelatedTarget(relatedTarget);\n      }\n\n      var result = Registration.dispatchEvent(target, dragEvent);\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        if (async === undefined || async) {\n          return qx.Promise.resolve(result)\n            .then(function() {\n              return !dragEvent.getDefaultPrevented();\n            });\n        } else {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (result instanceof qx.Promise) {\n              this.error(\"DragDrop event \\\"\" + type + \"\\\" returned a promise but a synchronous event was required, drag and drop may not work as expected (consider using getDataAsync)\");\n            }\n          }\n          return result;\n        }\n      } else {\n        return result;\n      }\n    },\n\n\n    /**\n     * Finds next draggable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDraggable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is draggable. May also be <code>null</code>\n     */\n    __findDraggable : function(elem)\n    {\n      while (elem && elem.nodeType == 1)\n      {\n        if (elem.getAttribute(\"qxDraggable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Finds next droppable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is droppable. May also be <code>null</code>\n     */\n    __findDroppable : function(elem)\n    {\n      while (elem && elem.nodeType == 1)\n      {\n        if (elem.getAttribute(\"qxDroppable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Cleans up a drag&drop session when <code>dragstart</code> was fired before.\n     *\n     * @return {qx.Promise?} promise, if one was created by event handlers\n     */\n    clearSession : function()\n    {\n      //this.debug(\"clearSession\");\n\n      // Deregister from root events\n      this.__manager.removeListener(this.__root, \"pointermove\", this._onPointermove, this);\n      this.__manager.removeListener(this.__root, \"pointerup\", this._onPointerup, this, true);\n\n      this.__manager.removeListener(this.__root, \"keydown\", this._onKeyDown, this, true);\n      this.__manager.removeListener(this.__root, \"keyup\", this._onKeyUp, this, true);\n      this.__manager.removeListener(this.__root, \"keypress\", this._onKeyPress, this, true);\n      this.__manager.removeListener(this.__root, \"roll\", this._onRoll, this, true);\n\n      var tracker = {};\n      var self = this;\n\n      // Fire dragend event\n      if (this.__dragTarget) {\n        qx.event.Utils.then(tracker, function() {\n          return self.__fireEvent(\"dragend\", self.__dragTarget, self.__dropTarget, false);\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function() {\n        // Cleanup\n        self.__validDrop = false;\n        self.__dropTarget = null;\n        if (self.__dragTargetWidget) {\n          self.__dragTargetWidget.removeState(\"drag\");\n          self.__dragTargetWidget = null;\n        }\n\n        // Clear init\n        //self.debug(\"Clearing drag target\");\n        self.__dragTarget = null;\n        self.__sessionActive = false;\n        self.__startConfig = null;\n        self.__rebuildStructures();\n      });\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for long tap which takes care of starting the drag & drop session for\n     * touch interactions.\n     * @param e {qx.event.type.Tap} The longtap event.\n     */\n    _onLongtap : function(e) {\n      // only for touch\n      if (e.getPointerType() != \"touch\") {\n        return;\n      }\n      // prevent scrolling\n      this.__manager.addListener(this.__root, \"roll\", this._onRoll, this, true);\n      return this._start(e);\n    },\n\n\n    /**\n     * Helper to start the drag & drop session. It is responsible for firing the\n     * dragstart event and attaching the key listener.\n     * @param e {qx.event.type.Pointer} Either a longtap or pointermove event.\n     *\n     * @return {Boolean} Returns <code>false</code> if drag session should be\n     * canceled.\n     */\n    _start : function(e) {\n      // only for primary pointer and allowed buttons\n      var isButtonOk = qx.event.handler.DragDrop.ALLOWED_BUTTONS.indexOf(e.getButton()) !== -1;\n      if (!e.isPrimary() || !isButtonOk) {\n        return false;\n      }\n\n      // start target can be none as the drag & drop handler might\n      // be created after the first start event\n      var target = this.__startConfig ? this.__startConfig.target : e.getTarget();\n      var draggable = this.__findDraggable(target);\n      if (draggable) {\n        // This is the source target\n        //this.debug(\"Setting dragtarget = \" + draggable);\n        this.__dragTarget = draggable;\n\n        var widgetOriginalTarget = qx.ui.core.Widget.getWidgetByElement(this.__startConfig.original);\n        while (widgetOriginalTarget && widgetOriginalTarget.isAnonymous()) {\n          widgetOriginalTarget = widgetOriginalTarget.getLayoutParent();\n        }\n        if (widgetOriginalTarget) {\n          this.__dragTargetWidget = widgetOriginalTarget;\n          widgetOriginalTarget.addState(\"drag\");\n        }\n\n        // fire cancelable dragstart\n        var self = this;\n        var tracker = {};\n        qx.event.Utils.catch(function() {\n          //self.debug(\"dragstart FAILED, setting __sessionActive=false\");\n          self.__sessionActive = false;\n        });\n        qx.event.Utils.then(tracker, function() {\n          return self.__fireEvent(\"dragstart\", self.__dragTarget, self.__dropTarget, true, e);\n        });\n        return qx.event.Utils.then(tracker, function(validAction) {\n          if (!validAction) {\n            return;\n          }\n          //self.debug(\"dragstart ok, setting __sessionActive=true\")\n          self.__manager.addListener(self.__root, \"keydown\", self._onKeyDown, self, true);\n          self.__manager.addListener(self.__root, \"keyup\", self._onKeyUp, self, true);\n          self.__manager.addListener(self.__root, \"keypress\", self._onKeyPress, self, true);\n          self.__sessionActive = true;\n        });\n      }\n    },\n\n\n    /**\n     * Event handler for the pointerdown event which stores the initial targets and the coordinates.\n     * @param e {qx.event.type.Pointer} The pointerdown event.\n     */\n    _onPointerdown : function(e) {\n      if (e.isPrimary()) {\n        this.__startConfig = {\n          target: e.getTarget(),\n          original: e.getOriginalTarget(),\n          left : e.getDocumentLeft(),\n          top : e.getDocumentTop()\n        };\n\n        this.__manager.addListener(this.__root, \"pointermove\", this._onPointermove, this);\n        this.__manager.addListener(this.__root, \"pointerup\", this._onPointerup, this, true);\n      }\n    },\n\n\n    /**\n     * Event handler for the pointermove event which starts the drag session and\n     * is responsible for firing the drag, dragover and dragleave event.\n     * @param e {qx.event.type.Pointer} The pointermove event.\n     */\n    _onPointermove : function(e) {\n      // only allow drag & drop for primary pointer\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      //this.debug(\"_onPointermove: start\");\n\n      var self = this;\n      var tracker = {};\n\n      qx.event.Utils.catch(function() {\n        return self.clearSession();\n      });\n\n      // start the drag session for mouse\n      if (!self.__sessionActive && e.getPointerType() == \"mouse\") {\n        var delta = self._getDelta(e);\n        // if the mouse moved a bit in any direction\n        var distance = qx.event.handler.DragDrop.MIN_DRAG_DISTANCE;\n        if (delta && (Math.abs(delta.x) > distance || Math.abs(delta.y) > distance)) {\n          //self.debug(\"_onPointermove: outside min drag distance\");\n          qx.event.Utils.then(tracker, function() {\n            return self._start(e);\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function() {\n        // check if the session has been activated\n        if (!self.__sessionActive) {\n          //self.debug(\"not active\");\n          return;\n        }\n\n        var tracker = {};\n        qx.event.Utils.then(tracker, function() {\n          //self.debug(\"active, firing drag\");\n          return self.__fireEvent(\"drag\", self.__dragTarget, self.__dropTarget, true, e);\n        });\n        qx.event.Utils.then(tracker, function(validAction) {\n          if (!validAction) {\n            this.clearSession();\n          }\n\n          //self.debug(\"drag\");\n          // find current hovered droppable\n          var el = e.getTarget();\n          if (self.__startConfig.target === el) {\n            // on touch devices the native events return wrong elements as target (its always the element where the dragging started)\n            el = e.getNativeEvent().view.document.elementFromPoint(e.getDocumentLeft(), e.getDocumentTop());\n          }\n          var cursor = self.getCursor();\n          if (!cursor) {\n            cursor = qx.ui.core.DragDropCursor.getInstance();\n          }\n          var cursorEl = cursor.getContentElement().getDomElement();\n          if (cursorEl && (el === cursorEl || cursorEl.contains(el))) {\n            var display = qx.bom.element.Style.get(cursorEl, \"display\");\n            // get the cursor out of the way\n            qx.bom.element.Style.set(cursorEl, \"display\", \"none\");\n            el = e.getNativeEvent().view.document.elementFromPoint(e.getDocumentLeft(), e.getDocumentTop());\n            qx.bom.element.Style.set(cursorEl, \"display\", display);\n          }\n\n          if (el !== cursorEl) {\n            var droppable = self.__findDroppable(el);\n\n            // new drop target detected\n            if (droppable && droppable != self.__dropTarget) {\n              var dropLeaveTarget = self.__dropTarget;\n              \n              self.__validDrop = true; // initial value should be true\n              self.__dropTarget = droppable;\n\n              var innerTracker = {};\n              qx.event.Utils.catch(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n              });\n              \n              // fire dragleave for previous drop target\n              if (dropLeaveTarget) {\n                qx.event.Utils.then(innerTracker, function () {\n                  return self.__fireEvent(\"dragleave\", dropLeaveTarget, self.__dragTarget, false, e);\n                });\n              }\n              \n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\"dragover\", droppable, self.__dragTarget, true, e);\n              });\n              \n              return qx.event.Utils.then(innerTracker, function (validDrop) {\n                self.__validDrop = validDrop;\n              });\n            }\n\n            // only previous drop target\n            else if (!droppable && self.__dropTarget) {\n              var innerTracker = {};\n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\"dragleave\", self.__dropTarget, self.__dragTarget, false, e);\n              });\n              return qx.event.Utils.then(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n\n                return self.__detectAction();\n              });\n            }\n          }\n        });\n        return qx.event.Utils.then(tracker, function() {\n          // Reevaluate current action\n          var keys = self.__keys;\n          keys.Control = e.isCtrlPressed();\n          keys.Shift = e.isShiftPressed();\n          keys.Alt = e.isAltPressed();\n          return self.__detectAction();\n        });\n      });\n\n    },\n\n\n    /**\n     * Helper function to compute the delta between current cursor position from given event\n     * and the stored coordinates at {@link #_onPointerdown}.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     *\n     * @return {Map} containing the deltaX as x, and deltaY as y.\n     */\n    _getDelta : function(e)\n    {\n      if (!this.__startConfig) {\n        return null;\n      }\n\n      var deltaX = e.getDocumentLeft() - this.__startConfig.left;\n      var deltaY = e.getDocumentTop() - this.__startConfig.top;\n\n      return {\n        \"x\": deltaX,\n        \"y\": deltaY\n      };\n    },\n\n\n    /**\n     * Handler for the pointerup event which is responsible fore firing the drop event.\n     * @param e {qx.event.type.Pointer} The pointerup event\n     */\n    _onPointerup : function(e) {\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      var tracker = {};\n      var self = this;\n\n      // Fire drop event in success case\n      if (this.__validDrop && this.__validAction) {\n        qx.event.Utils.then(tracker, function() {\n          return self.__fireEvent(\"drop\", self.__dropTarget, self.__dragTarget, false, e);\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function() {\n        // Stop event\n        if (e.getTarget() == self.__dragTarget) {\n          e.stopPropagation();\n        }\n\n        // Clean up\n        return self.clearSession();\n      });\n    },\n\n\n    /**\n     * Roll listener to stop scrolling on touch devices.\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll : function(e) {\n      e.stop();\n    },\n\n\n    /**\n     * Event listener for window's <code>blur</code> event\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    _onWindowBlur : function(e) {\n      return this.clearSession();\n    },\n\n\n    /**\n     * Event listener for root's <code>keydown</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyDown : function(e) {\n      var iden = e.getKeyIdentifier();\n      switch(iden)\n      {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (!this.__keys[iden])\n          {\n            this.__keys[iden] = true;\n            return this.__detectAction();\n          }\n      }\n    },\n\n\n    /**\n     * Event listener for root's <code>keyup</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyUp : function(e) {\n      var iden = e.getKeyIdentifier();\n      switch(iden)\n      {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (this.__keys[iden])\n          {\n            this.__keys[iden] = false;\n            return this.__detectAction();\n          }\n      }\n    },\n\n\n    /**\n     * Event listener for root's <code>keypress</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyPress : function(e) {\n      var iden = e.getKeyIdentifier();\n      switch(iden)\n      {\n        case \"Escape\":\n          return this.clearSession();\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    qx.event.Registration.removeListener(window, \"blur\", this._onWindowBlur, this);\n\n    // Clear fields\n    this.__dragTarget = this.__dropTarget = this.__manager = this.__root =\n      this.__types = this.__actions = this.__keys = this.__cache = null;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}