{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/handler/OrientationCore.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "targetWindow",
    "emitter",
    "_window",
    "window",
    "__emitter",
    "_initObserver",
    "members",
    "_currentOrientation",
    "__onNativeWrapper",
    "__nativeEventType",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "bom",
    "Event",
    "supportsEvent",
    "addNativeListener",
    "_stopObserver",
    "removeNativeListener",
    "domEvent",
    "orientation",
    "Viewport",
    "getOrientation",
    "mode",
    "isLandscape",
    "_orientation",
    "_mode",
    "emit",
    "destruct",
    "__manager",
    "event",
    "handler",
    "OrientationCore"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;;;AAMAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,kCAApB,EAAwD;AAEtDC,IAAAA,MAAM,EAAGC,MAF6C;AAGtDC,IAAAA,SAAS,EAAG,CAAEP,EAAE,CAACQ,IAAH,CAAQC,WAAV,CAH0C;;AAKtD;;;;;AAKAC,IAAAA,SAAS,EAAG,mBAASC,YAAT,EAAuBC,OAAvB,EACZ;AACE,WAAKC,OAAL,GAAeF,YAAY,IAAIG,MAA/B;AACA,WAAKC,SAAL,GAAiBH,OAAjB;;AACA,WAAKI,aAAL;AACD,KAfqD;AAmBtDC,IAAAA,OAAO,EACP;AACEF,MAAAA,SAAS,EAAG,IADd;AAEEF,MAAAA,OAAO,EAAG,IAFZ;AAGEK,MAAAA,mBAAmB,EAAG,IAHxB;AAIEC,MAAAA,iBAAiB,EAAG,IAJtB;AAKEC,MAAAA,iBAAiB,EAAG,IALtB;;AASE;;;;;;AAMA;;;AAGAJ,MAAAA,aAAa,EAAG,yBAChB;AACE,aAAKG,iBAAL,GAAyBnB,EAAE,CAACqB,IAAH,CAAQC,QAAR,CAAiBC,QAAjB,CAA0B,KAAKC,SAA/B,EAA0C,IAA1C,CAAzB,CADF,CAGE;AACA;AACA;;AACA,aAAKJ,iBAAL,GAAyBpB,EAAE,CAACyB,GAAH,CAAOC,KAAP,CAAaC,aAAb,CAA2B,KAAKd,OAAhC,EAAyC,mBAAzC,IACvB,mBADuB,GACD,QADxB;AAIAb,QAAAA,EAAE,CAACyB,GAAH,CAAOC,KAAP,CAAaE,iBAAb,CAA+B,KAAKf,OAApC,EAA6C,KAAKO,iBAAlD,EACE,KAAKD,iBADP;AAED,OA/BH;;AAmCE;;;;;;AAMA;;;AAGAU,MAAAA,aAAa,EAAG,yBAChB;AACE7B,QAAAA,EAAE,CAACyB,GAAH,CAAOC,KAAP,CAAaI,oBAAb,CAAkC,KAAKjB,OAAvC,EAAgD,KAAKO,iBAArD,EACE,KAAKD,iBADP;AAED,OAhDH;;AAoDE;;;;;;AAMA;;;;;;AAMAK,MAAAA,SAAS,EAAG,mBAASO,QAAT,EACZ;AACE,YAAIC,WAAW,GAAGhC,EAAE,CAACyB,GAAH,CAAOQ,QAAP,CAAgBC,cAAhB,EAAlB;;AAEA,YAAI,KAAKhB,mBAAL,IAA4Bc,WAAhC,EACA;AACE,eAAKd,mBAAL,GAA2Bc,WAA3B;AACA,cAAIG,IAAI,GAAGnC,EAAE,CAACyB,GAAH,CAAOQ,QAAP,CAAgBG,WAAhB,KAAgC,WAAhC,GAA8C,UAAzD;AAEAL,UAAAA,QAAQ,CAACM,YAAT,GAAwBL,WAAxB;AACAD,UAAAA,QAAQ,CAACO,KAAT,GAAiBH,IAAjB;;AAEA,cAAI,KAAKpB,SAAT,EAAoB;AAClB,iBAAKA,SAAL,CAAewB,IAAf,CAAoB,mBAApB,EAAyCR,QAAzC;AACD;AACF;AACF;AAhFH,KApBsD;;AAyGtD;;;;;AAMAS,IAAAA,QAAQ,EAAG,oBACX;AACE,WAAKX,aAAL;;AACA,WAAKY,SAAL,GAAiB,KAAK1B,SAAL,GAAiB,IAAlC;AACD;AAnHqD,GAAxD;AAxCAf,EAAAA,EAAE,CAAC0C,KAAH,CAASC,OAAT,CAAiBC,eAAjB,CAAiCzC,aAAjC,GAAiDA,aAAjD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Daniel Wagner (danielwagner)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Unify Project\n\n     Homepage:\n       http://unify-project.org\n\n     Copyright:\n       2009-2010 Deutsche Telekom AG, Germany, http://telekom.com\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n * Listens for native orientation change events\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Bootstrap.define(\"qx.event.handler.OrientationCore\", {\n\n  extend : Object,\n  implement : [ qx.core.IDisposable ],\n\n  /**\n   *\n   * @param targetWindow {Window} DOM window object\n   * @param emitter {qx.event.Emitter} Event emitter object\n   */\n  construct : function(targetWindow, emitter)\n  {\n    this._window = targetWindow || window;\n    this.__emitter = emitter;\n    this._initObserver();\n  },\n\n\n\n  members :\n  {\n    __emitter : null,\n    _window : null,\n    _currentOrientation : null,\n    __onNativeWrapper : null,\n    __nativeEventType : null,\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER INIT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Initializes the native orientation change event listeners.\n     */\n    _initObserver : function()\n    {\n      this.__onNativeWrapper = qx.lang.Function.listener(this._onNative, this);\n\n      // Handle orientation change event for Android devices by the resize event.\n      // See http://stackoverflow.com/questions/1649086/detect-rotation-of-android-phone-in-the-browser-with-javascript\n      // for more information.\n      this.__nativeEventType = qx.bom.Event.supportsEvent(this._window, \"orientationchange\") ?\n        \"orientationchange\" : \"resize\";\n\n\n      qx.bom.Event.addNativeListener(this._window, this.__nativeEventType,\n        this.__onNativeWrapper);\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER STOP\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Disconnects the native orientation change event listeners.\n     */\n    _stopObserver : function()\n    {\n      qx.bom.Event.removeNativeListener(this._window, this.__nativeEventType,\n        this.__onNativeWrapper);\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      NATIVE EVENT OBSERVERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for the native orientation change event.\n     *\n     * @signature function(domEvent)\n     * @param domEvent {Event} The touch event from the browser.\n     */\n    _onNative : function(domEvent)\n    {\n      var orientation = qx.bom.Viewport.getOrientation();\n\n      if (this._currentOrientation != orientation)\n      {\n        this._currentOrientation = orientation;\n        var mode = qx.bom.Viewport.isLandscape() ? \"landscape\" : \"portrait\";\n\n        domEvent._orientation = orientation;\n        domEvent._mode = mode;\n\n        if (this.__emitter) {\n          this.__emitter.emit(\"orientationchange\", domEvent);\n        }\n      }\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._stopObserver();\n    this.__manager = this.__emitter = null;\n  }\n\n});"
  ]
}