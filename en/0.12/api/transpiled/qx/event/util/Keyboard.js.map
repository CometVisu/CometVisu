{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/event/util/Keyboard.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "specialCharCodeMap",
    "numpadToCharCode",
    "charCodeAt",
    "keyCodeToIdentifierMap",
    "core",
    "Environment",
    "get",
    "charCodeA",
    "charCodeZ",
    "charCode0",
    "charCode9",
    "keyCodeToIdentifier",
    "keyCode",
    "isIdentifiableKeyCode",
    "numPadKeyCode",
    "String",
    "fromCharCode",
    "charCodeToIdentifier",
    "charCode",
    "toUpperCase",
    "isNonPrintableKeyCode",
    "isValidKeyIdentifier",
    "keyIdentifier",
    "identifierToKeyCodeMap",
    "length",
    "isPrintableKeyIdentifier",
    "defer",
    "key",
    "parseInt",
    "event",
    "util",
    "Keyboard"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Utilities for working with character codes and key identifiers\n */\nqx.Bootstrap.define(\"qx.event.util.Keyboard\", {\n\n  statics :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      KEY MAPS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} maps the charcodes of special printable keys to key identifiers\n     *\n     * @lint ignoreReferenceField(specialCharCodeMap)\n     */\n    specialCharCodeMap :\n    {\n      8  : \"Backspace\",   // The Backspace (Back) key.\n      9  : \"Tab\",         // The Horizontal Tabulation (Tab) key.\n\n      //   Note: This key identifier is also used for the\n      //   Return (Macintosh numpad) key.\n      13 : \"Enter\",       // The Enter key.\n      27 : \"Escape\",      // The Escape (Esc) key.\n      32 : \"Space\"        // The Space (Spacebar) key.\n    },\n\n    /**\n     * @type {Map} maps the keycodes of the numpad keys to the right charcodes\n     *\n     * @lint ignoreReferenceField(numpadToCharCode)\n     */\n    numpadToCharCode :\n    {\n       96 : \"0\".charCodeAt(0),\n       97 : \"1\".charCodeAt(0),\n       98 : \"2\".charCodeAt(0),\n       99 : \"3\".charCodeAt(0),\n      100 : \"4\".charCodeAt(0),\n      101 : \"5\".charCodeAt(0),\n      102 : \"6\".charCodeAt(0),\n      103 : \"7\".charCodeAt(0),\n      104 : \"8\".charCodeAt(0),\n      105 : \"9\".charCodeAt(0),\n      106 : \"*\".charCodeAt(0),\n      107 : \"+\".charCodeAt(0),\n      109 : \"-\".charCodeAt(0),\n      110 : \",\".charCodeAt(0),\n      111 : \"/\".charCodeAt(0)\n    },\n\n    /**\n     * @type {Map} maps the keycodes of non printable keys to key identifiers\n     *\n     * @lint ignoreReferenceField(keyCodeToIdentifierMap)\n     */\n    keyCodeToIdentifierMap :\n    {\n       16 : \"Shift\",        // The Shift key.\n       17 : \"Control\",      // The Control (Ctrl) key.\n       18 : \"Alt\",          // The Alt (Menu) key.\n       20 : \"CapsLock\",     // The CapsLock key\n      224 : \"Meta\",         // The Meta key. (Apple Meta and Windows key)\n\n       37 : \"Left\",         // The Left Arrow key.\n       38 : \"Up\",           // The Up Arrow key.\n       39 : \"Right\",        // The Right Arrow key.\n       40 : \"Down\",         // The Down Arrow key.\n\n       33 : \"PageUp\",       // The Page Up key.\n       34 : \"PageDown\",     // The Page Down (Next) key.\n\n       35 : \"End\",          // The End key.\n       36 : \"Home\",         // The Home key.\n\n       45 : \"Insert\",       // The Insert (Ins) key. (Does not fire in Opera/Win)\n       46 : \"Delete\",       // The Delete (Del) Key.\n\n      112 : \"F1\",           // The F1 key.\n      113 : \"F2\",           // The F2 key.\n      114 : \"F3\",           // The F3 key.\n      115 : \"F4\",           // The F4 key.\n      116 : \"F5\",           // The F5 key.\n      117 : \"F6\",           // The F6 key.\n      118 : \"F7\",           // The F7 key.\n      119 : \"F8\",           // The F8 key.\n      120 : \"F9\",           // The F9 key.\n      121 : \"F10\",          // The F10 key.\n      122 : \"F11\",          // The F11 key.\n      123 : \"F12\",          // The F12 key.\n\n      144 : \"NumLock\",      // The Num Lock key.\n       44 : \"PrintScreen\",  // The Print Screen (PrintScrn, SnapShot) key.\n      145 : \"Scroll\",       // The scroll lock key\n       19 : \"Pause\",        // The pause/break key\n       // The left Windows Logo key or left cmd key\n       91 : qx.core.Environment.get(\"os.name\") == \"osx\" ? \"cmd\" : \"Win\",\n       92 : \"Win\",          // The right Windows Logo key or left cmd key\n       // The Application key (Windows Context Menu) or right cmd key\n       93 : qx.core.Environment.get(\"os.name\") == \"osx\" ? \"cmd\" : \"Apps\"\n    },\n\n\n    /** char code for capital A */\n    charCodeA : \"A\".charCodeAt(0),\n    /** char code for capital Z */\n    charCodeZ : \"Z\".charCodeAt(0),\n    /** char code for 0 */\n    charCode0 : \"0\".charCodeAt(0),\n    /** char code for 9 */\n    charCode9 : \"9\".charCodeAt(0),\n\n    /**\n     * converts a keyboard code to the corresponding identifier\n     *\n     * @param keyCode {Integer} key code\n     * @return {String} key identifier\n     */\n    keyCodeToIdentifier : function(keyCode)\n    {\n      if (this.isIdentifiableKeyCode(keyCode))\n      {\n        var numPadKeyCode = this.numpadToCharCode[keyCode];\n\n        if (numPadKeyCode) {\n          return String.fromCharCode(numPadKeyCode);\n        }\n\n        return (this.keyCodeToIdentifierMap[keyCode] || this.specialCharCodeMap[keyCode] || String.fromCharCode(keyCode));\n      }\n      else\n      {\n        return \"Unidentified\";\n      }\n    },\n\n\n    /**\n     * converts a character code to the corresponding identifier\n     *\n     * @param charCode {String} character code\n     * @return {String} key identifier\n     */\n    charCodeToIdentifier : function(charCode) {\n      return this.specialCharCodeMap[charCode] || String.fromCharCode(charCode).toUpperCase();\n    },\n\n\n    /**\n     * Check whether the keycode can be reliably detected in keyup/keydown events\n     *\n     * @param keyCode {String} key code to check.\n     * @return {Boolean} Whether the keycode can be reliably detected in keyup/keydown events.\n     */\n    isIdentifiableKeyCode : function(keyCode)\n    {\n      if (keyCode >= this.charCodeA && keyCode <= this.charCodeZ) {\n        return true;\n      }\n\n      // 0-9\n      if (keyCode >= this.charCode0 && keyCode <= this.charCode9) {\n        return true;\n      }\n\n      // Enter, Space, Tab, Backspace\n      if (this.specialCharCodeMap[keyCode]) {\n        return true;\n      }\n\n      // Numpad\n      if (this.numpadToCharCode[keyCode]) {\n        return true;\n      }\n\n      // non printable keys\n      if (this.isNonPrintableKeyCode(keyCode)) {\n        return true;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Checks whether the keyCode represents a non printable key\n     *\n     * @param keyCode {String} key code to check.\n     * @return {Boolean} Whether the keyCode represents a non printable key.\n     */\n    isNonPrintableKeyCode : function(keyCode) {\n      return this.keyCodeToIdentifierMap[keyCode] ? true : false;\n    },\n\n\n    /**\n     * Checks whether a given string is a valid keyIdentifier\n     *\n     * @param keyIdentifier {String} The key identifier.\n     * @return {Boolean} whether the given string is a valid keyIdentifier\n     */\n    isValidKeyIdentifier : function(keyIdentifier)\n    {\n      if (this.identifierToKeyCodeMap[keyIdentifier]) {\n        return true;\n      }\n\n      if (keyIdentifier.length != 1) {\n        return false;\n      }\n\n      if (keyIdentifier >= \"0\" && keyIdentifier <= \"9\") {\n        return true;\n      }\n\n      if (keyIdentifier >= \"A\" && keyIdentifier <= \"Z\") {\n        return true;\n      }\n\n      switch(keyIdentifier)\n      {\n        case \"+\":\n        case \"-\":\n        case \"*\":\n        case \"/\":\n        case \",\":\n          return true;\n\n        default:\n          return false;\n      }\n    },\n\n\n    /**\n     * Checks whether a given string is a printable keyIdentifier.\n     *\n     * @param keyIdentifier {String} The key identifier.\n     * @return {Boolean} whether the given string is a printable keyIdentifier.\n     */\n    isPrintableKeyIdentifier : function(keyIdentifier)\n    {\n      if (keyIdentifier === \"Space\") {\n        return true;\n      } else {\n        return this.identifierToKeyCodeMap[keyIdentifier] ? false : true;\n      }\n    }\n  },\n\n  defer : function(statics)\n  {\n    // construct inverse of keyCodeToIdentifierMap\n    if (!statics.identifierToKeyCodeMap)\n    {\n      statics.identifierToKeyCodeMap = {};\n\n      for (var key in statics.keyCodeToIdentifierMap) {\n        statics.identifierToKeyCodeMap[statics.keyCodeToIdentifierMap[key]] = parseInt(key, 10);\n      }\n\n      for (var key in statics.specialCharCodeMap) {\n        statics.identifierToKeyCodeMap[statics.specialCharCodeMap[key]] = parseInt(key, 10);\n      }\n    }\n  }\n});\n"
  ]
}