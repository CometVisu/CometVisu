{
  "className": "qx.event.type.Rest",
  "packageName": "qx.event.type",
  "name": "Rest",
  "superClass": "qx.event.type.Data",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 103,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2011 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Tristan Koch (tristankoch)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Rest event object.</p>"
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "request": {
      "location": {
        "start": {
          "line": 31,
          "column": 4
        },
        "end": {
          "line": 33,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The request of the event.</p>"
          }
        ]
      },
      "name": "request",
      "propertyType": "new",
      "check": "qx.io.request.AbstractRequest"
    },
    "action": {
      "location": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The action that invoked the request.</p>"
          }
        ]
      },
      "name": "action",
      "propertyType": "new",
      "check": "String"
    },
    "phase": {
      "location": {
        "start": {
          "line": 45,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The phase of the request.</p>"
          }
        ]
      },
      "name": "phase",
      "propertyType": "new",
      "check": "String"
    },
    "id": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The id of the request.</p>"
          }
        ]
      },
      "name": "id",
      "propertyType": "new",
      "check": "Number"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "init": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 84,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes an event object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {var} Then event's new data",
            "paramName": "data",
            "description": " Then event's new data",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "old {var?null} The event's old data",
            "paramName": "old",
            "description": " The event's old data",
            "optional": true,
            "defaultValue": "null",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "cancelable {Boolean?false} Whether or not an event can have its default\n  action prevented. The default action can either be the browser's\n  default action of a native event (e.g. open the context menu on a\n  right click) or the default action of a qooxdoo class (e.g. close\n  the window widget). The default action can be prevented by calling\n  {@link qx.event.type.Event#preventDefault}",
            "paramName": "cancelable",
            "description": " Whether or not an event can have its default\n  action prevented. The default action can either be the browser's\n  default action of a native event (e.g. open the context menu on a\n  right click) or the default action of a qooxdoo class (e.g. close\n  the window widget). The default action can be prevented by calling\n  {@link qx.event.type.Event#preventDefault}",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "request {qx.io.request.AbstractRequest} The associated request.",
            "paramName": "request",
            "description": " The associated request.",
            "type": "qx.io.request.AbstractRequest"
          },
          {
            "name": "@param",
            "body": "action {String} The associated action.",
            "paramName": "action",
            "description": " The associated action.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "phase {String} The associated phase.",
            "paramName": "phase",
            "description": " The associated phase.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.event.type.Data} The initialized instance.",
            "type": "qx.event.type.Data",
            "description": " The initialized instance."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "appearsIn": [
        "qx.event.type.Data",
        "qx.event.type.Event"
      ]
    },
    "clone": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 101,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a copy of this object</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "embryo {qx.event.type.Data?null} Optional event class, which will\n  be configured using the data of this event instance. The event must be\n  an instance of this event class. If the data is <code>null</code>,\n  a new pooled instance is created.",
            "paramName": "embryo",
            "description": " Optional event class, which will\n  be configured using the data of this event instance. The event must be\n  an instance of this event class. If the data is <code>null</code>,\n  a new pooled instance is created.",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.event.type.Data"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.event.type.Data} A copy of this object.",
            "type": "qx.event.type.Data",
            "description": " A copy of this object."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "appearsIn": [
        "qx.event.type.Data",
        "qx.event.type.Event",
        "qx.core.Object"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Data",
      "property": "reset"
    },
    "getRequest": {
      "type": "function",
      "name": "getRequest",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>request</code>.\n\nFor further details take a look at the property definition: {@link #request}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.io.request.AbstractRequest",
            "desc": "Returns the value for request"
          }
        ]
      }
    },
    "setRequest": {
      "type": "function",
      "name": "setRequest",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>request</code>.\n\nFor further details take a look at the property definition: {@link #request}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.io.request.AbstractRequest",
            "paramName": "value",
            "desc": "Value for request"
          }
        ]
      }
    },
    "resetRequest": {
      "type": "function",
      "name": "resetRequest",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>request</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #request}."
          }
        ]
      }
    },
    "getAction": {
      "type": "function",
      "name": "getAction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>action</code>.\n\nFor further details take a look at the property definition: {@link #action}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for action"
          }
        ]
      }
    },
    "setAction": {
      "type": "function",
      "name": "setAction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>action</code>.\n\nFor further details take a look at the property definition: {@link #action}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for action"
          }
        ]
      }
    },
    "resetAction": {
      "type": "function",
      "name": "resetAction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>action</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #action}."
          }
        ]
      }
    },
    "getPhase": {
      "type": "function",
      "name": "getPhase",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>phase</code>.\n\nFor further details take a look at the property definition: {@link #phase}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for phase"
          }
        ]
      }
    },
    "setPhase": {
      "type": "function",
      "name": "setPhase",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>phase</code>.\n\nFor further details take a look at the property definition: {@link #phase}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for phase"
          }
        ]
      }
    },
    "resetPhase": {
      "type": "function",
      "name": "resetPhase",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>phase</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #phase}."
          }
        ]
      }
    },
    "getId": {
      "type": "function",
      "name": "getId",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>id</code>.\n\nFor further details take a look at the property definition: {@link #id}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for id"
          }
        ]
      }
    },
    "setId": {
      "type": "function",
      "name": "setId",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>id</code>.\n\nFor further details take a look at the property definition: {@link #id}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for id"
          }
        ]
      }
    },
    "resetId": {
      "type": "function",
      "name": "resetId",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>id</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #id}."
          }
        ]
      }
    }
  },
  "descendants": []
}