{
  "className": "qx.event.type.Touch",
  "packageName": "qx.event.type",
  "name": "Touch",
  "superClass": "qx.event.type.Dom",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 313,
        "column": 5
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2010 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Martin Wittemann (martinwittemann)\n Tino Butz (tbtz)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Touch event object.\n For more information see:\n     https://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html</p>"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "_cloneNativeEvent": {
      "location": {
        "start": {
          "line": 41,
          "column": 6
        },
        "end": {
          "line": 76,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nativeEvent {Event} The native browser event",
            "paramName": "nativeEvent",
            "description": " The native browser event",
            "type": "qx.event.type.Event"
          },
          {
            "name": "@param",
            "body": "clone {Object} The initialized clone.",
            "paramName": "clone",
            "description": " The initialized clone.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The cloned event",
            "type": "Object",
            "description": " The cloned event"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.event.type.Dom",
      "appearsIn": [
        "qx.event.type.Dom",
        "qx.event.type.Native"
      ]
    },
    "stop": {
      "location": {
        "start": {
          "line": 80,
          "column": 6
        },
        "end": {
          "line": 82,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Event",
      "appearsIn": [
        "qx.event.type.Event"
      ]
    },
    "getAllTouches": {
      "location": {
        "start": {
          "line": 93,
          "column": 6
        },
        "end": {
          "line": 95,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array of native Touch objects representing all current\n touches on the document.\n Returns an empty array for the \"touchend\" event.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of touch objects. For more information see:\n     https://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html",
            "type": "Object[]",
            "description": " Array of touch objects. For more information see:\n     https://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTargetTouches": {
      "location": {
        "start": {
          "line": 106,
          "column": 6
        },
        "end": {
          "line": 108,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array of native Touch objects representing all touches\n associated with the event target element.\n Returns an empty array for the \"touchend\" event.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of touch objects. For more information see:\n     https://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html",
            "type": "Object[]",
            "description": " Array of touch objects. For more information see:\n     https://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChangedTargetTouches": {
      "location": {
        "start": {
          "line": 125,
          "column": 6
        },
        "end": {
          "line": 127,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array of native Touch objects representing all touches of\n the target element that changed in this event.\n On the \"touchstart\" event the array contains all touches that were\n added to the target element.\n On the \"touchmove\" event the array contains all touches that were\n moved on the target element.\n On the \"touchend\" event the array contains all touches that used\n to be on the target element.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of touch objects. For more information see:\n     https://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html",
            "type": "Object[]",
            "description": " Array of touch objects. For more information see:\n     https://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isMultiTouch": {
      "location": {
        "start": {
          "line": 136,
          "column": 6
        },
        "end": {
          "line": 138,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether more than one touch is associated with the event target\n element.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Is multi-touch",
            "type": "Boolean",
            "description": " Is multi-touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScale": {
      "location": {
        "start": {
          "line": 151,
          "column": 6
        },
        "end": {
          "line": 153,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the distance between two fingers since the start of the event.\n The distance is a multiplier of the initial distance.\n Initial value: 1.0.\n Gestures:\n &lt; 1.0, pinch close / zoom out.</p>\n<blockquote>\n  <p>1.0, pinch open / to zoom in.</p>\n</blockquote>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Float} The scale distance between two fingers",
            "type": "Float",
            "description": " The scale distance between two fingers"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRotation": {
      "location": {
        "start": {
          "line": 164,
          "column": 6
        },
        "end": {
          "line": 170,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the delta of the rotation since the start of the event, in degrees.\n Initial value is 0.0\n Clockwise &gt; 0\n Counter-clockwise &lt; 0.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Float} The rotation delta",
            "type": "Float",
            "description": " The rotation delta"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDelta": {
      "location": {
        "start": {
          "line": 180,
          "column": 6
        },
        "end": {
          "line": 182,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array with the calculated delta coordinates of all active touches,\n relative to the position on <code>touchstart</code> event.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with objects for each active touch which contains the delta as <code>x</code> and\n <code>y</code>, the touch identifier as <code>identifier</code> and the movement axis as <code>axis</code>.",
            "type": "Array",
            "description": " an array with objects for each active touch which contains the delta as <code>x</code> and\n <code>y</code>, the touch identifier as <code>identifier</code> and the movement axis as <code>axis</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentLeft": {
      "location": {
        "start": {
          "line": 193,
          "column": 6
        },
        "end": {
          "line": 195,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the horizontal position at which the event occurred relative to the\n left of the document. This property takes into account any scrolling of\n the page.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal position of the touch in the document.",
            "type": "Integer",
            "description": " The horizontal position of the touch in the document."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentTop": {
      "location": {
        "start": {
          "line": 206,
          "column": 6
        },
        "end": {
          "line": 208,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the vertical position at which the event occurred relative to the\n top of the document. This property takes into account any scrolling of\n the page.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical position of the touch in the document.",
            "type": "Integer",
            "description": " The vertical position of the touch in the document."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScreenLeft": {
      "location": {
        "start": {
          "line": 218,
          "column": 6
        },
        "end": {
          "line": 220,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the horizontal coordinate at which the event occurred relative to\n the origin of the screen coordinate system.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal position of the touch",
            "type": "Integer",
            "description": " The horizontal position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScreenTop": {
      "location": {
        "start": {
          "line": 230,
          "column": 6
        },
        "end": {
          "line": 232,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the vertical coordinate at which the event occurred relative to\n the origin of the screen coordinate system.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical position of the touch",
            "type": "Integer",
            "description": " The vertical position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getViewportLeft": {
      "location": {
        "start": {
          "line": 242,
          "column": 6
        },
        "end": {
          "line": 244,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the the horizontal coordinate at which the event occurred relative\n to the viewport.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal position of the touch",
            "type": "Integer",
            "description": " The horizontal position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getViewportTop": {
      "location": {
        "start": {
          "line": 254,
          "column": 6
        },
        "end": {
          "line": 256,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the vertical coordinate at which the event occurred relative\n to the viewport.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical position of the touch",
            "type": "Integer",
            "description": " The vertical position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getIdentifier": {
      "location": {
        "start": {
          "line": 265,
          "column": 6
        },
        "end": {
          "line": 267,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the unique identifier for a certain touch object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Unique identifier of the touch object",
            "type": "Integer",
            "description": " Unique identifier of the touch object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__getEventSpecificTouch": {
      "location": {
        "start": {
          "line": 279,
          "column": 6
        },
        "end": {
          "line": 283,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an event specific touch on the target element. This function is\n used as the \"touchend\" event only offers Touch objects in the\n changedTouches array.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object to\n     retrieve",
            "paramName": "touchIndex",
            "description": " The index of the Touch object to\n     retrieve",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} A native Touch object",
            "type": "Object",
            "description": " A native Touch object"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getEventSpecificTouches": {
      "location": {
        "start": {
          "line": 293,
          "column": 6
        },
        "end": {
          "line": 297,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the event specific touches on the target element. This function\n is used as the \"touchend\" event only offers Touch objects in the\n changedTouches array.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of native Touch objects",
            "type": "Object[]",
            "description": " Array of native Touch objects"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_isTouchEnd": {
      "location": {
        "start": {
          "line": 308,
          "column": 6
        },
        "end": {
          "line": 311,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Indicates if the event occurs during the \"touchend\" phase. Needed to\n determine the event specific touches. Override this method if you derive\n from this class and want to indicate that the specific event occurred\n during the \"touchend\" phase.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the event occurred during the \"touchend\" phase",
            "type": "Boolean",
            "description": " Whether the event occurred during the \"touchend\" phase"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "reset"
    }
  },
  "descendants": []
}