{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/Emitter.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "statics",
    "__storage",
    "members",
    "__listener",
    "__any",
    "on",
    "name",
    "listener",
    "ctx",
    "id",
    "event",
    "Emitter",
    "length",
    "__getStorage",
    "push",
    "once",
    "off",
    "storage",
    "i",
    "entry",
    "splice",
    "offById",
    "addListener",
    "addListenerOnce",
    "removeListener",
    "removeListenerById",
    "emit",
    "data",
    "concat",
    "toDelete",
    "call",
    "forEach",
    "origStorage",
    "idx",
    "indexOf",
    "bind",
    "getListeners",
    "getEntryById",
    "store",
    "j"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Basic implementation for an event emitter. This supplies a basic and\n * minimalistic event mechanism.\n */\nqx.Bootstrap.define(\"qx.event.Emitter\",\n{\n  extend : Object,\n  statics : {\n    /** Static storage for all event listener */\n    __storage : []\n  },\n\n  members :\n  {\n    __listener : null,\n    __any : null,\n\n\n    /**\n     * Attach a listener to the event emitter. The given <code>name</code>\n     * will define the type of event. Handing in a <code>'*'</code> will\n     * listen to all events emitted by the event emitter.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    on : function(name, listener, ctx) {\n      var id = qx.event.Emitter.__storage.length;\n      this.__getStorage(name).push({listener: listener, ctx: ctx, id: id, name: name});\n      qx.event.Emitter.__storage.push({name: name, listener: listener, ctx: ctx});\n      return id;\n    },\n\n\n    /**\n     * Attach a listener to the event emitter which will be executed only once.\n     * The given <code>name</code> will define the type of event. Handing in a\n     * <code>'*'</code> will listen to all events emitted by the event emitter.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    once : function(name, listener, ctx) {\n      var id = qx.event.Emitter.__storage.length;\n      this.__getStorage(name).push({listener: listener, ctx: ctx, once: true, id: id});\n      qx.event.Emitter.__storage.push({name: name, listener: listener, ctx: ctx});\n      return id;\n    },\n\n\n    /**\n     * Remove a listener from the event emitter. The given <code>name</code>\n     * will define the type of event.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer|null} The listener's id if it was removed or\n     * <code>null</code> if it wasn't found\n     */\n    off : function(name, listener, ctx) {\n      var storage = this.__getStorage(name);\n      for (var i = storage.length - 1; i >= 0; i--) {\n        var entry = storage[i];\n        if (entry.listener == listener && entry.ctx == ctx) {\n          storage.splice(i, 1);\n          qx.event.Emitter.__storage[entry.id] = null;\n          return entry.id;\n        }\n      }\n      return null;\n    },\n\n\n    /**\n     * Removes the listener identified by the given <code>id</code>. The id\n     * will be return on attaching the listener and can be stored for removing.\n     *\n     * @param id {Integer} The id of the listener.\n     * @return {Integer|null} The listener's id if it was removed or\n     * <code>null</code> if it wasn't found\n     */\n    offById : function(id) {\n      var entry = qx.event.Emitter.__storage[id];\n      if (entry) {\n        this.off(entry.name, entry.listener, entry.ctx);\n      }\n      return null;\n    },\n\n\n\n\n    /**\n     * Alternative for {@link #on}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    addListener : function(name, listener, ctx) {\n      return this.on(name, listener, ctx);\n    },\n\n\n    /**\n     * Alternative for {@link #once}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     * @return {Integer} An unique <code>id</code> for the attached listener.\n     */\n    addListenerOnce : function(name, listener, ctx) {\n      return this.once(name, listener, ctx);\n    },\n\n\n    /**\n     * Alternative for {@link #off}.\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function execute on {@link #emit}.\n     * @param ctx {var?Window} The context of the listener.\n     */\n    removeListener : function(name, listener, ctx) {\n      this.off(name, listener, ctx);\n    },\n\n\n    /**\n     * Alternative for {@link #offById}.\n     * @param id {Integer} The id of the listener.\n     */\n    removeListenerById : function(id) {\n     this.offById(id);\n    },\n\n\n\n\n    /**\n     * Emits an event with the given name. The data will be passed\n     * to the listener.\n     * @param name {String} The name of the event to emit.\n     * @param data {var?undefined} The data which should be passed to the listener.\n     */\n    emit : function(name, data) {\n      var storage = this.__getStorage(name).concat();\n      var toDelete = [];\n      for (var i = 0; i < storage.length; i++) {\n        var entry = storage[i];\n        entry.listener.call(entry.ctx, data);\n        if (entry.once) {\n          toDelete.push(entry);\n        }\n      }\n\n      // listener callbacks could manipulate the storage\n      // (e.g. module.Event.once)\n      toDelete.forEach(function(entry) {\n        var origStorage = this.__getStorage(name);\n        var idx = origStorage.indexOf(entry);\n        origStorage.splice(idx, 1);\n      }.bind(this));\n\n      // call on any\n      storage = this.__getStorage(\"*\");\n      for (var i = storage.length - 1; i >= 0; i--) {\n        var entry = storage[i];\n        entry.listener.call(entry.ctx, data);\n      }\n    },\n\n\n\n    /**\n     * Returns the internal attached listener.\n     * @internal\n     * @return {Map} A map which has the event name as key. The values are\n     *   arrays containing a map with 'listener' and 'ctx'.\n     */\n    getListeners : function() {\n      return this.__listener;\n    },\n\n\n    /**\n     * Returns the data entry for a given event id. If the entry could\n     * not be found, undefined will be returned.\n     * @internal\n     * @param id {Number} The listeners id\n     * @return {Map|undefined} The data entry if found\n     */\n    getEntryById : function(id) {\n      for (var name in this.__listener) {\n        var store = this.__listener[name];\n\n        for (var i=0, j=store.length; i<j; i++) {\n          if (store[i].id === id) {\n            return store[i];\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Internal helper which will return the storage for the given name.\n     * @param name {String} The name of the event.\n     * @return {Array} An array which is the storage for the listener and\n     *   the given event name.\n     */\n    __getStorage : function(name) {\n      if (this.__listener == null) {\n        this.__listener = {};\n      }\n      if (this.__listener[name] == null) {\n        this.__listener[name] = [];\n      }\n      return this.__listener[name];\n    }\n  }\n});\n"
  ]
}