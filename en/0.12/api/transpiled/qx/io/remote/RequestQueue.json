{
  "className": "qx.io.remote.RequestQueue",
  "packageName": "qx.io.remote",
  "name": "RequestQueue",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 32,
        "column": 0
      },
      "end": {
        "line": 520,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Sebastian Werner (wpbasti)\n Andreas Ecker (ecker)\n Derrell Lipman (derrell)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Handles scheduling of requests to be sent to a server.\n This class is a singleton and is used by qx.io.remote.Request to schedule its\n requests. It should not be used directly.\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 47,
        "column": 14
      },
      "end": {
        "line": 59,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "properties": {
    "enabled": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Indicates whether queue is enabled or not.</p>"
          }
        ]
      },
      "name": "enabled",
      "propertyType": "new",
      "apply": "_applyEnabled",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "maxTotalRequests": {
      "location": {
        "start": {
          "line": 86,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The maximum number of total requests.</p>"
          }
        ]
      },
      "name": "maxTotalRequests",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "maxConcurrentRequests": {
      "location": {
        "start": {
          "line": 96,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maximum number of parallel requests.</p>"
          }
        ]
      },
      "name": "maxConcurrentRequests",
      "propertyType": "new",
      "check": "Integer"
    },
    "defaultTimeout": {
      "location": {
        "start": {
          "line": 106,
          "column": 4
        },
        "end": {
          "line": 110,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Default timeout for remote requests in milliseconds.</p>"
          }
        ]
      },
      "name": "defaultTimeout",
      "propertyType": "new",
      "init": 5000,
      "check": "Integer",
      "defaultValue": 5000
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "__queue": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__active": {
      "location": {
        "start": {
          "line": 126,
          "column": 4
        },
        "end": {
          "line": 126,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__totalRequests": {
      "location": {
        "start": {
          "line": 127,
          "column": 4
        },
        "end": {
          "line": 127,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__timer": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getRequestQueue": {
      "location": {
        "start": {
          "line": 142,
          "column": 4
        },
        "end": {
          "line": 144,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  QUEUE HANDLING\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>Get a list of queued requests</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.remote.Request[]} The list of queued requests",
            "type": "qx.io.remote.Request[]",
            "description": " The list of queued requests"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getActiveQueue": {
      "location": {
        "start": {
          "line": 154,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a list of active queued requests, each one wrapped in an instance of\n {@link qx.io.remote.Exchange}</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.remote.Exchange[]} The list of active queued requests, each one\n   wrapped in an instance of {@link qx.io.remote.Exchange}",
            "type": "qx.io.remote.Exchange[]",
            "description": " The list of active queued requests, each one\n   wrapped in an instance of {@link qx.io.remote.Exchange}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_debug": {
      "location": {
        "start": {
          "line": 162,
          "column": 4
        },
        "end": {
          "line": 175,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates debug output</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_check": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 239,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks the queue if any request is left to send and uses the transport\n layer to send the open requests.\n This method calls itself until every request in the queue is send.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_remove": {
      "location": {
        "start": {
          "line": 248,
          "column": 4
        },
        "end": {
          "line": 258,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes a transport object from the active queue and disposes the\n transport object in order stop the request.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "vTransport {qx.io.remote.Exchange} Transport object",
            "paramName": "vTransport",
            "description": " Transport object",
            "type": "qx.io.remote.Exchange"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__activeCount": {
      "location": {
        "start": {
          "line": 269,
          "column": 4
        },
        "end": {
          "line": 269,
          "column": 21
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  EVENT HANDLING\n---------------------------------------------------------------------------\n</code></pre>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "_onsending": {
      "location": {
        "start": {
          "line": 278,
          "column": 4
        },
        "end": {
          "line": 292,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listens for the \"sending\" event of the transport object and increases\n the counter for active requests.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onreceiving": {
      "location": {
        "start": {
          "line": 301,
          "column": 4
        },
        "end": {
          "line": 303,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listens for the \"receiving\" event of the transport object and delegate\n the event to the current request object.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_oncompleted": {
      "location": {
        "start": {
          "line": 312,
          "column": 4
        },
        "end": {
          "line": 365,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listens for the \"completed\" event of the transport object and decreases\n the counter for active requests.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_oninterval": {
      "location": {
        "start": {
          "line": 382,
          "column": 4
        },
        "end": {
          "line": 429,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  TIMEOUT HANDLING\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>Listens for the \"interval\" event of the transport object and checks\n if the active requests are timed out.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyEnabled": {
      "location": {
        "start": {
          "line": 442,
          "column": 4
        },
        "end": {
          "line": 449,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  MODIFIERS\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "enabled"
      ]
    },
    "add": {
      "location": {
        "start": {
          "line": 465,
          "column": 4
        },
        "end": {
          "line": 480,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  CORE METHODS\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>Add the request to the pending requests queue.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "vRequest {var} The request",
            "paramName": "vRequest",
            "description": " The request",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "abort": {
      "location": {
        "start": {
          "line": 493,
          "column": 4
        },
        "end": {
          "line": 502,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove the request from the pending requests queue.\n  The underlying transport of the request is forced into the aborted\n  state (\"aborted\") and listeners of the \"aborted\"\n  signal are notified about the event. If the request isn't in the\n  pending requests queue, this method is a noop.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "vRequest {var} The request",
            "paramName": "vRequest",
            "description": " The request",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>enabled</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ]
      }
    },
    "getMaxTotalRequests": {
      "type": "function",
      "name": "getMaxTotalRequests",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxTotalRequests</code>.\n\nFor further details take a look at the property definition: {@link #maxTotalRequests}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for maxTotalRequests"
          }
        ]
      }
    },
    "setMaxTotalRequests": {
      "type": "function",
      "name": "setMaxTotalRequests",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxTotalRequests</code>.\n\nFor further details take a look at the property definition: {@link #maxTotalRequests}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for maxTotalRequests"
          }
        ]
      }
    },
    "resetMaxTotalRequests": {
      "type": "function",
      "name": "resetMaxTotalRequests",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxTotalRequests</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxTotalRequests}."
          }
        ]
      }
    },
    "getMaxConcurrentRequests": {
      "type": "function",
      "name": "getMaxConcurrentRequests",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxConcurrentRequests</code>.\n\nFor further details take a look at the property definition: {@link #maxConcurrentRequests}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for maxConcurrentRequests"
          }
        ]
      }
    },
    "setMaxConcurrentRequests": {
      "type": "function",
      "name": "setMaxConcurrentRequests",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxConcurrentRequests</code>.\n\nFor further details take a look at the property definition: {@link #maxConcurrentRequests}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for maxConcurrentRequests"
          }
        ]
      }
    },
    "resetMaxConcurrentRequests": {
      "type": "function",
      "name": "resetMaxConcurrentRequests",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxConcurrentRequests</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxConcurrentRequests}."
          }
        ]
      }
    },
    "getDefaultTimeout": {
      "type": "function",
      "name": "getDefaultTimeout",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultTimeout</code>.\n\nFor further details take a look at the property definition: {@link #defaultTimeout}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for defaultTimeout"
          }
        ]
      }
    },
    "setDefaultTimeout": {
      "type": "function",
      "name": "setDefaultTimeout",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultTimeout</code>.\n\nFor further details take a look at the property definition: {@link #defaultTimeout}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for defaultTimeout"
          }
        ]
      }
    },
    "resetDefaultTimeout": {
      "type": "function",
      "name": "resetDefaultTimeout",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultTimeout</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultTimeout}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 514,
        "column": 13
      },
      "end": {
        "line": 519,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n DESTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "descendants": []
}