{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/io/remote/transport/Iframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "remote",
    "transport",
    "Abstract",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "vUniqueId",
    "Date",
    "valueOf",
    "vFrameName",
    "vFormName",
    "vFrameSource",
    "Environment",
    "get",
    "__frame",
    "bom",
    "Iframe",
    "create",
    "id",
    "name",
    "src",
    "element",
    "Style",
    "set",
    "__form",
    "dom",
    "Element",
    "target",
    "insertEnd",
    "Node",
    "getBodyElement",
    "document",
    "__data",
    "event",
    "Registration",
    "addListener",
    "_onload",
    "__onreadystatechangeWrapper",
    "lang",
    "Function",
    "listener",
    "_onreadystatechange",
    "Event",
    "addNativeListener",
    "statics",
    "handles",
    "synchronous",
    "asynchronous",
    "crossDomain",
    "fileUpload",
    "programmaticFormFields",
    "responseTypes",
    "isSupported",
    "_numericMap",
    "members",
    "__lastReadyState",
    "send",
    "vMethod",
    "getMethod",
    "vUrl",
    "getUrl",
    "vParameters",
    "getParameters",
    "vParametersList",
    "vId",
    "value",
    "Array",
    "i",
    "length",
    "push",
    "encodeURIComponent",
    "indexOf",
    "join",
    "getData",
    "setData",
    "vFormFields",
    "getFormFields",
    "vField",
    "createElement",
    "appendChild",
    "createTextNode",
    "action",
    "method",
    "submit",
    "setState",
    "GlobalError",
    "observeMethod",
    "e",
    "getIframeHtmlContent",
    "_switchReadyState",
    "complete",
    "readyState",
    "vReadyState",
    "getState",
    "warn",
    "Exchange",
    "_nativeMap",
    "setRequestHeader",
    "vLabel",
    "vValue",
    "getResponseHeader",
    "getResponseHeaders",
    "getStatusCode",
    "getStatusText",
    "getIframeWindow",
    "getWindow",
    "getIframeDocument",
    "getDocument",
    "getIframeBody",
    "getBody",
    "getIframeTextContent",
    "vBody",
    "firstChild",
    "tagName",
    "toLowerCase",
    "innerHTML",
    "getFetchedLength",
    "getResponseContent",
    "vText",
    "getResponseType",
    "Json",
    "parse",
    "ex",
    "error",
    "window",
    "eval",
    "defer",
    "registerType",
    "destruct",
    "removeListener",
    "removeNativeListener",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "remove"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Andreas Junghans (lucidcake)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n\n/**\n * Transports requests to a server using an IFRAME.\n *\n * This class should not be used directly by client programmers.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @asset(qx/static/blank.gif)\n */\nqx.Class.define(\"qx.io.remote.transport.Iframe\",\n{\n  extend : qx.io.remote.transport.Abstract,\n  implement: [ qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Unique identifiers for iframe and form\n    var vUniqueId = (new Date).valueOf();\n    var vFrameName = \"frame_\" + vUniqueId;\n    var vFormName = \"form_\" + vUniqueId;\n\n    // This is to prevent the \"mixed secure and insecure content\" warning in IE with https\n    var vFrameSource;\n    if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\")) {\n      vFrameSource = \"javascript:void(0)\";\n    }\n\n    // Create a hidden iframe.\n    // The purpose of the iframe is to receive data coming back from the server (see below).\n    this.__frame = qx.bom.Iframe.create({id: vFrameName, name: vFrameName, src: vFrameSource});\n\n    qx.bom.element.Style.set(this.__frame, \"display\", \"none\");\n\n    // Create form element with textarea as conduit for request data.\n    // The target of the form is the hidden iframe, which means the response\n    // coming back from the server is written into the iframe.\n    this.__form = qx.dom.Element.create(\"form\", {id: vFormName, name: vFormName, target: vFrameName});\n    qx.bom.element.Style.set(this.__form, \"display\", \"none\");\n    qx.dom.Element.insertEnd(this.__form, qx.dom.Node.getBodyElement(document));\n\n    this.__data = qx.dom.Element.create(\"textarea\", {id: \"_data_\", name: \"_data_\"});\n    qx.dom.Element.insertEnd(this.__data, this.__form);\n\n    // Finally, attach iframe to DOM and add listeners\n    qx.dom.Element.insertEnd(this.__frame, qx.dom.Node.getBodyElement(document));\n    qx.event.Registration.addListener(this.__frame, \"load\", this._onload, this);\n\n    // qx.event.handler.Iframe does not yet support the readystatechange event\n    this.__onreadystatechangeWrapper = qx.lang.Function.listener(this._onreadystatechange, this);\n    qx.bom.Event.addNativeListener(this.__frame, \"readystatechange\", this.__onreadystatechangeWrapper);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Capabilities of this transport type.\n     *\n     * @internal\n     */\n    handles :\n    {\n      synchronous           : false,\n      asynchronous          : true,\n      crossDomain           : false,\n      fileUpload            : true,\n      programmaticFormFields : true,\n      responseTypes         : [ \"text/plain\", \"text/javascript\", \"application/json\", \"application/xml\", \"text/html\" ]\n    },\n\n\n    /**\n     * Returns always true, because iframe transport is supported by all browsers.\n     *\n     * @return {Boolean}\n     */\n    isSupported : function() {\n      return true;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * For reference:\n     * http://msdn.microsoft.com/en-us/library/ie/ms534359%28v=vs.85%29.aspx\n     *\n     * @internal\n     */\n    _numericMap :\n    {\n      \"uninitialized\" : 1,\n      \"loading\"       : 2,\n      \"loaded\"        : 2,\n      \"interactive\"   : 3,\n      \"complete\"      : 4\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __data : null,\n    __lastReadyState : 0,\n    __form : null,\n    __frame : null,\n    __onreadystatechangeWrapper : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sends a request with the use of a form.\n     *\n     */\n    send : function()\n    {\n      var vMethod = this.getMethod();\n      var vUrl = this.getUrl();\n\n      // --------------------------------------\n      //   Adding parameters\n      // --------------------------------------\n      var vParameters = this.getParameters(false);\n      var vParametersList = [];\n\n      for (var vId in vParameters)\n      {\n        var value = vParameters[vId];\n\n        if (value instanceof Array)\n        {\n          for (var i=0; i<value.length; i++) {\n            vParametersList.push(encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i]));\n          }\n        }\n        else\n        {\n          vParametersList.push(encodeURIComponent(vId) + \"=\" + encodeURIComponent(value));\n        }\n      }\n\n      if (vParametersList.length > 0) {\n        vUrl += (vUrl.indexOf(\"?\") >= 0 ? \"&\" : \"?\") + vParametersList.join(\"&\");\n      }\n\n      // --------------------------------------------------------\n      //   Adding data parameters (if no data is already present)\n      // --------------------------------------------------------\n      if (this.getData() === null)\n      {\n        var vParameters = this.getParameters(true);\n        var vParametersList = [];\n\n        for (var vId in vParameters)\n        {\n          var value = vParameters[vId];\n\n          if (value instanceof Array)\n          {\n            for (var i=0; i<value.length; i++)\n            {\n              vParametersList.push(encodeURIComponent(vId) +\n                                   \"=\" +\n                                   encodeURIComponent(value[i]));\n            }\n          }\n          else\n          {\n            vParametersList.push(encodeURIComponent(vId) +\n                                 \"=\" +\n                                 encodeURIComponent(value));\n          }\n        }\n\n        if (vParametersList.length > 0)\n        {\n          this.setData(vParametersList.join(\"&\"));\n        }\n      }\n\n      // --------------------------------------\n      //   Adding form fields\n      // --------------------------------------\n      var vFormFields = this.getFormFields();\n\n      for (var vId in vFormFields)\n      {\n        var vField = document.createElement(\"textarea\");\n        vField.name = vId;\n        vField.appendChild(document.createTextNode(vFormFields[vId]));\n        this.__form.appendChild(vField);\n      }\n\n      // --------------------------------------\n      //   Preparing form\n      // --------------------------------------\n      this.__form.action = vUrl;\n      this.__form.method = vMethod;\n\n      // --------------------------------------\n      //   Sending data\n      // --------------------------------------\n      this.__data.appendChild(document.createTextNode(this.getData()));\n      this.__form.submit();\n      this.setState(\"sending\");\n    },\n\n\n    /**\n     * Converting complete state to numeric value and update state property\n     *\n     * @signature function(e)\n     * @param e {qx.event.type.Event} event object\n     */\n    _onload : qx.event.GlobalError.observeMethod(function(e)\n    {\n\n      // Timing-issue in Opera\n      // Do not switch state to complete in case load event fires before content\n      // of iframe was updated\n      if (qx.core.Environment.get(\"engine.name\") == \"opera\" && this.getIframeHtmlContent() == \"\") {\n        return;\n      }\n\n      if (this.__form.src) {\n        return;\n      }\n\n      this._switchReadyState(qx.io.remote.transport.Iframe._numericMap.complete);\n    }),\n\n\n    /**\n     * Converting named readyState to numeric value and update state property\n     *\n     * @signature function(e)\n     * @param e {qx.event.type.Event} event object\n     */\n    _onreadystatechange : qx.event.GlobalError.observeMethod(function(e) {\n      this._switchReadyState(qx.io.remote.transport.Iframe._numericMap[this.__frame.readyState]);\n    }),\n\n\n    /**\n     * Switches the readystate by setting the internal state.\n     *\n     * @param vReadyState {String} readystate value\n     */\n    _switchReadyState : function(vReadyState)\n    {\n      // Ignoring already stopped requests\n      switch(this.getState())\n      {\n        case \"completed\":\n        case \"aborted\":\n        case \"failed\":\n        case \"timeout\":\n          this.warn(\"Ignore Ready State Change\");\n          return;\n      }\n\n      // Updating internal state\n      while (this.__lastReadyState < vReadyState) {\n        this.setState(qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      REQUEST HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a request header with the given value.\n     *\n     * This method is not implemented at the moment.\n     *\n     * @param vLabel {String} request header name\n     * @param vValue {var} request header value\n     */\n    setRequestHeader : function(vLabel, vValue) {},\n\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the value of the given response header.\n     *\n     * This method is not implemented at the moment and returns always \"null\".\n     *\n     * @param vLabel {String} Response header name\n     * @return {null} Returns null\n     */\n    getResponseHeader : function(vLabel) {\n      return null;\n    },\n\n    /**\n     * Provides an hash of all response headers.\n     *\n     * This method is not implemented at the moment and returns an empty map.\n     *\n     * @return {Map} empty map\n     */\n    getResponseHeaders : function() {\n      return {};\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current status code of the request if available or -1 if not.\n     * This method needs implementation (returns always 200).\n     *\n     * @return {Integer} status code\n     */\n    getStatusCode : function() {\n      return 200;\n    },\n\n    /**\n     * Provides the status text for the current request if available and null otherwise.\n     * This method needs implementation (returns always an empty string)\n     *\n     * @return {String} status code text\n     */\n    getStatusText : function() {\n      return \"\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FRAME UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the DOM window object of the used iframe.\n     *\n     * @return {Object} DOM window object\n     */\n    getIframeWindow : function() {\n      return qx.bom.Iframe.getWindow(this.__frame);\n    },\n\n\n    /**\n     * Returns the document node of the used iframe.\n     *\n     * @return {Object} document node\n     */\n    getIframeDocument : function() {\n      return qx.bom.Iframe.getDocument(this.__frame);\n    },\n\n\n    /**\n     * Returns the body node of the used iframe.\n     *\n     * @return {Object} body node\n     */\n    getIframeBody : function() {\n      return qx.bom.Iframe.getBody(this.__frame);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE DATA SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the iframe content (innerHTML) as text.\n     *\n     * @return {String} iframe content as text\n     */\n    getIframeTextContent : function()\n    {\n      var vBody = this.getIframeBody();\n\n      if (!vBody) {\n        return null;\n      }\n\n      if (!vBody.firstChild) {\n        return \"\";\n      }\n\n      // Mshtml returns the content inside a PRE\n      // element if we use plain text\n      if (vBody.firstChild.tagName &&\n          vBody.firstChild.tagName.toLowerCase() == \"pre\") {\n        return vBody.firstChild.innerHTML;\n      } else {\n        return vBody.innerHTML;\n      }\n    },\n\n\n    /**\n     * Returns the iframe content as HTML.\n     *\n     * @return {String} iframe content as HTML\n     */\n    getIframeHtmlContent : function()\n    {\n      var vBody = this.getIframeBody();\n      return vBody ? vBody.innerHTML : null;\n    },\n\n\n    /**\n     * Returns the length of the content as fetched thus far.\n     * This method needs implementation (returns always 0).\n     *\n     * @return {Integer} Returns 0\n     */\n    getFetchedLength : function() {\n      return 0;\n    },\n\n    /**\n     * Returns the content of the response\n     *\n     * @return {null | String} null or text of the response (=iframe content).\n     */\n    getResponseContent : function()\n    {\n      if (this.getState() !== \"completed\")\n      {\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n            this.warn(\"Transfer not complete, ignoring content!\");\n          }\n        }\n\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.debug(\"Returning content for responseType: \" + this.getResponseType());\n        }\n      }\n\n      var vText = this.getIframeTextContent();\n\n      switch(this.getResponseType())\n      {\n        case \"text/plain\":\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\"))\n            {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        case \"text/html\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\"))\n            {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        case \"application/json\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\"))\n            {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n\n          try {\n            return vText && vText.length > 0 ? qx.lang.Json.parse(vText) : null;\n          } catch(ex) {\n            return this.error(\"Could not execute json: (\" + vText + \")\", ex);\n          }\n\n        case \"text/javascript\":\n          vText = this.getIframeHtmlContent();\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\"))\n            {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n\n          try {\n            return vText && vText.length > 0 ? window.eval(vText) : null;\n          } catch(ex) {\n            return this.error(\"Could not execute javascript: (\" + vText + \")\", ex);\n          }\n\n        case \"application/xml\":\n          vText = this.getIframeDocument();\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\"))\n            {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          return vText;\n\n        default:\n          this.warn(\"No valid responseType specified (\" + this.getResponseType() + \")!\");\n          return null;\n      }\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function()\n  {\n    // basic registration to qx.io.remote.Exchange\n    // the real availability check (activeX stuff and so on) follows at the first real request\n    qx.io.remote.Exchange.registerType(qx.io.remote.transport.Iframe, \"qx.io.remote.transport.Iframe\");\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (this.__frame)\n    {\n      qx.event.Registration.removeListener(this.__frame, \"load\", this._onload, this);\n      qx.bom.Event.removeNativeListener(this.__frame, \"readystatechange\", this.__onreadystatechangeWrapper);\n\n      // Reset source to a blank image for gecko\n      // Otherwise it will switch into a load-without-end behaviour\n      if ((qx.core.Environment.get(\"engine.name\") == \"gecko\")) {\n        this.__frame.src = qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\");\n      }\n\n      // Finally, remove element node\n      qx.dom.Element.remove(this.__frame);\n    }\n\n    if (this.__form) {\n      qx.dom.Element.remove(this.__form);\n    }\n\n    this.__frame = this.__form = this.__data = null;\n  }\n});\n"
  ]
}