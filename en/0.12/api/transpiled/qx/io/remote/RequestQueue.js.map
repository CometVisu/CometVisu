{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/io/remote/RequestQueue.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "construct",
    "__queue",
    "__active",
    "__totalRequests",
    "__timer",
    "event",
    "Timer",
    "addListener",
    "_oninterval",
    "properties",
    "enabled",
    "init",
    "check",
    "apply",
    "maxTotalRequests",
    "nullable",
    "maxConcurrentRequests",
    "Environment",
    "get",
    "defaultTimeout",
    "members",
    "getRequestQueue",
    "getActiveQueue",
    "_debug",
    "_check",
    "length",
    "stop",
    "getEnabled",
    "isAsynchronous",
    "getMaxConcurrentRequests",
    "getMaxTotalRequests",
    "vRequest",
    "shift",
    "vTransport",
    "io",
    "remote",
    "Exchange",
    "push",
    "_onsending",
    "_onreceiving",
    "_oncompleted",
    "_start",
    "Date",
    "valueOf",
    "send",
    "_remove",
    "lang",
    "Array",
    "remove",
    "dispose",
    "__activeCount",
    "e",
    "getTarget",
    "getRequest",
    "request",
    "requestHandler",
    "getType",
    "ex",
    "error",
    "Registration",
    "createEvent",
    "Event",
    "ex1",
    "vActive",
    "vCurrent",
    "vDefaultTimeout",
    "getDefaultTimeout",
    "vTimeout",
    "vTime",
    "i",
    "getTimeout",
    "warn",
    "toHashCode",
    "timeout",
    "_applyEnabled",
    "value",
    "old",
    "setEnabled",
    "add",
    "setState",
    "unshift",
    "start",
    "abort",
    "getTransport",
    "includes",
    "destruct",
    "_disposeArray",
    "_disposeObjects",
    "RequestQueue"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;AAUAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACEC,IAAAA,IAAI,EAAG,WADT;AAEEC,IAAAA,MAAM,EAAGP,EAAE,CAACQ,IAAH,CAAQC,MAFnB;AAGEC,IAAAA,SAAS,EAAG,CAAEV,EAAE,CAACQ,IAAH,CAAQG,WAAV,CAHd;;AAQE;;;;;AAMAC,IAAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,QAAL,GAAgB,EAAhB;AAEA,WAAKC,eAAL,GAAuB,CAAvB,CANF,CAQE;;AACA,WAAKC,OAAL,GAAe,IAAIhB,EAAE,CAACiB,KAAH,CAASC,KAAb,CAAmB,GAAnB,CAAf;;AACA,WAAKF,OAAL,CAAaG,WAAb,CAAyB,UAAzB,EAAqC,KAAKC,WAA1C,EAAuD,IAAvD;AACD,KA1BH;;AA+BE;;;;;AAMAC,IAAAA,UAAU,EACV;AAEE;;;AAGAC,MAAAA,OAAO,EACP;AACEC,QAAAA,IAAI,EAAG,IADT;AAEEC,QAAAA,KAAK,EAAG,SAFV;AAGEC,QAAAA,KAAK,EAAG;AAHV,OANF;;AAYE;;;AAGAC,MAAAA,gBAAgB,EAChB;AACEF,QAAAA,KAAK,EAAG,SADV;AAEEG,QAAAA,QAAQ,EAAG;AAFb,OAhBF;;AAsBE;;;AAGAC,MAAAA,qBAAqB,EACrB;AACEJ,QAAAA,KAAK,EAAG,SADV;AAEED,QAAAA,IAAI,EAAGvB,EAAE,CAACQ,IAAH,CAAQqB,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB;AAFT,OA1BF;;AAgCE;;;AAGAC,MAAAA,cAAc,EACd;AACEP,QAAAA,KAAK,EAAG,SADV;AAEED,QAAAA,IAAI,EAAG;AAFT;AApCF,KAtCF;;AAmFE;;;;;AAMAS,IAAAA,OAAO,EACP;AAEEnB,MAAAA,OAAO,EAAG,IAFZ;AAGEC,MAAAA,QAAQ,EAAG,IAHb;AAIEC,MAAAA,eAAe,EAAG,IAJpB;AAKEC,MAAAA,OAAO,EAAG,IALZ;;AAOE;;;;;;AAOA;;;;;AAKAiB,MAAAA,eAAe,EAAG,2BAAW;AAC3B,eAAO,KAAKpB,OAAZ;AACD,OArBH;;AAwBE;;;;;;;AAOAqB,MAAAA,cAAc,EAAG,0BAAW;AAC1B,eAAO,KAAKpB,QAAZ;AACD,OAjCH;;AAoCE;;;AAGAqB,MAAAA,MAAM,EAAG,kBACT,CAYC,CApDH;;AAuDE;;;;;;AAMAC,MAAAA,MAAM,EAAG,kBACT;AACE;AACA,aAAKD,MAAL,GAFF,CAIE;;;AACA,YAAI,KAAKrB,QAAL,CAAcuB,MAAd,IAAwB,CAAxB,IAA6B,KAAKxB,OAAL,CAAawB,MAAb,IAAuB,CAAxD,EAA2D;AACzD,eAAKrB,OAAL,CAAasB,IAAb;AACD,SAPH,CASE;;;AACA,YAAI,CAAC,KAAKC,UAAL,EAAL,EAAwB;AACtB;AACD,SAZH,CAcE;;;AACA,YAAK,KAAK1B,OAAL,CAAawB,MAAb,IAAuB,CAAvB,IAA4B,KAAKxB,OAAL,CAAa,CAAb,EAAgB2B,cAAhB,MAAoC,KAAK1B,QAAL,CAAcuB,MAAd,IAAwB,KAAKI,wBAAL,EAA7F,EAA+H;AAC7H;AACD,SAjBH,CAmBE;;;AACA,YAAI,KAAKC,mBAAL,MAA8B,IAA9B,IAAsC,KAAK3B,eAAL,IAAwB,KAAK2B,mBAAL,EAAlE,EAA8F;AAC5F;AACD;;AAED,YAAIC,QAAQ,GAAG,KAAK9B,OAAL,CAAa+B,KAAb,EAAf;;AACA,YAAIC,UAAU,GAAG,IAAI7C,EAAE,CAAC8C,EAAH,CAAMC,MAAN,CAAaC,QAAjB,CAA0BL,QAA1B,CAAjB,CAzBF,CA2BE;;AACA,aAAK5B,eAAL,GA5BF,CA8BE;;AACA,aAAKD,QAAL,CAAcmC,IAAd,CAAmBJ,UAAnB,EA/BF,CAiCE;;;AACA,aAAKV,MAAL,GAlCF,CAoCE;;;AACAU,QAAAA,UAAU,CAAC1B,WAAX,CAAuB,SAAvB,EAAkC,KAAK+B,UAAvC,EAAmD,IAAnD;AACAL,QAAAA,UAAU,CAAC1B,WAAX,CAAuB,WAAvB,EAAoC,KAAKgC,YAAzC,EAAuD,IAAvD;AACAN,QAAAA,UAAU,CAAC1B,WAAX,CAAuB,WAAvB,EAAoC,KAAKiC,YAAzC,EAAuD,IAAvD;AACAP,QAAAA,UAAU,CAAC1B,WAAX,CAAuB,SAAvB,EAAkC,KAAKiC,YAAvC,EAAqD,IAArD;AACAP,QAAAA,UAAU,CAAC1B,WAAX,CAAuB,SAAvB,EAAkC,KAAKiC,YAAvC,EAAqD,IAArD;AACAP,QAAAA,UAAU,CAAC1B,WAAX,CAAuB,QAAvB,EAAiC,KAAKiC,YAAtC,EAAoD,IAApD,EA1CF,CA4CE;;AACAP,QAAAA,UAAU,CAACQ,MAAX,GAAqB,IAAIC,IAAJ,EAAD,CAAWC,OAAX,EAApB,CA7CF,CA+CE;;AACAV,QAAAA,UAAU,CAACW,IAAX,GAhDF,CAkDE;;AACA,YAAI,KAAK3C,OAAL,CAAawB,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,eAAKD,MAAL;AACD;AACF,OApHH;;AAuHE;;;;;;AAMAqB,MAAAA,OAAO,EAAG,iBAASZ,UAAT,EACV;AACE;AACA7C,QAAAA,EAAE,CAAC0D,IAAH,CAAQC,KAAR,CAAcC,MAAd,CAAqB,KAAK9C,QAA1B,EAAoC+B,UAApC,EAFF,CAIE;;AACAA,QAAAA,UAAU,CAACgB,OAAX,GALF,CAOE;;AACA,aAAKzB,MAAL;AACD,OAvIH;;AA4IE;;;;;AAMA0B,MAAAA,aAAa,EAAG,CAlJlB;;AAqJE;;;;;;AAMAZ,MAAAA,UAAU,EAAG,oBAASa,CAAT,EACb;AAYEA,QAAAA,CAAC,CAACC,SAAF,GAAcC,UAAd,GAA2Bf,UAA3B,CAAsCa,CAAtC;AACD,OAzKH;;AA4KE;;;;;;AAMAZ,MAAAA,YAAY,EAAG,sBAASY,CAAT,EAAY;AACzBA,QAAAA,CAAC,CAACC,SAAF,GAAcC,UAAd,GAA2Bd,YAA3B,CAAwCY,CAAxC;AACD,OApLH;;AAuLE;;;;;;AAMAX,MAAAA,YAAY,EAAG,sBAASW,CAAT,EACf;AAaE;AACA;AACA,YAAIG,OAAO,GAAGH,CAAC,CAACC,SAAF,GAAcC,UAAd,EAAd;AACA,YAAIE,cAAc,GAAG,QAAQJ,CAAC,CAACK,OAAF,EAA7B,CAhBF,CAkBE;AACA;;AACA,aAAKX,OAAL,CAAaM,CAAC,CAACC,SAAF,EAAb,EApBF,CAsBE;AACA;AACA;;;AACA,YACA;AACE,cAAIE,OAAO,CAACC,cAAD,CAAX,EACA;AACED,YAAAA,OAAO,CAACC,cAAD,CAAP,CAAwBJ,CAAxB;AACD;AACF,SAND,CAOA,OAAMM,EAAN,EACA;AACE,eAAKC,KAAL,CAAW,aAAaJ,OAAb,GAAuB,WAAvB,GAAqCC,cAArC,GACT,mBADF,EACuBE,EADvB,EADF,CAIE;AACA;;AACA,cACA;AACE,gBAAIH,OAAO,CAAC,YAAD,CAAX,EACA;AACE,kBAAIjD,KAAK,GAAGjB,EAAE,CAACiB,KAAH,CAASsD,YAAT,CAAsBC,WAAtB,CAAkC,SAAlC,EAC8BxE,EAAE,CAACiB,KAAH,CAASX,IAAT,CAAcmE,KAD5C,CAAZ;AAEAP,cAAAA,OAAO,CAAC,YAAD,CAAP,CAAsBjD,KAAtB;AACD;AACF,WARD,CASA,OAAMyD,GAAN,EACA,CACC;AACF;AACF,OAlPH;;AAuPE;;;;;;AAMA;;;;;;AAMAtD,MAAAA,WAAW,EAAG,qBAAS2C,CAAT,EACd;AACE,YAAIY,OAAO,GAAG,KAAK7D,QAAnB;;AAEA,YAAI6D,OAAO,CAACtC,MAAR,IAAkB,CAAtB,EACA;AACE,eAAKrB,OAAL,CAAasB,IAAb;;AACA;AACD;;AAED,YAAIsC,QAAQ,GAAI,IAAItB,IAAJ,EAAD,CAAWC,OAAX,EAAf;AACA,YAAIV,UAAJ;AACA,YAAIF,QAAJ;AACA,YAAIkC,eAAe,GAAG,KAAKC,iBAAL,EAAtB;AACA,YAAIC,QAAJ;AACA,YAAIC,KAAJ;;AAEA,aAAK,IAAIC,CAAC,GAACN,OAAO,CAACtC,MAAR,GAAe,CAA1B,EAA6B4C,CAAC,IAAE,CAAhC,EAAmCA,CAAC,EAApC,EACA;AACEpC,UAAAA,UAAU,GAAG8B,OAAO,CAACM,CAAD,CAApB;AACAtC,UAAAA,QAAQ,GAAGE,UAAU,CAACoB,UAAX,EAAX;;AAEA,cAAItB,QAAQ,CAACH,cAAT,EAAJ,EACA;AACEuC,YAAAA,QAAQ,GAAGpC,QAAQ,CAACuC,UAAT,EAAX,CADF,CAGE;;AACA,gBAAIH,QAAQ,IAAI,CAAhB,EACA;AACE;AACA;AACD;;AAED,gBAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpBA,cAAAA,QAAQ,GAAGF,eAAX;AACD;;AAEDG,YAAAA,KAAK,GAAGJ,QAAQ,GAAG/B,UAAU,CAACQ,MAA9B;;AAEA,gBAAI2B,KAAK,GAAGD,QAAZ,EACA;AACE,mBAAKI,IAAL,CAAU,wBAAwBtC,UAAU,CAACuC,UAAX,EAAlC;AACA,mBAAKD,IAAL,CAAUH,KAAK,GAAG,OAAR,GAAkBD,QAAlB,GAA6B,IAAvC;AACAlC,cAAAA,UAAU,CAACwC,OAAX;AACD;AACF;AACF;AACF,OAlTH;;AAuTE;;;;;AAOA;AACAC,MAAAA,aAAa,EAAG,uBAASC,KAAT,EAAgBC,GAAhB,EAChB;AACE,YAAID,KAAJ,EAAW;AACT,eAAKnD,MAAL;AACD;;AAED,aAAKpB,OAAL,CAAayE,UAAb,CAAwBF,KAAxB;AACD,OAtUH;;AA2UE;;;;;;AAMA;;;;;AAKAG,MAAAA,GAAG,EAAG,aAAS/C,QAAT,EACN;AACEA,QAAAA,QAAQ,CAACgD,QAAT,CAAkB,QAAlB;;AAEA,YAAIhD,QAAQ,CAACH,cAAT,EAAJ,EAA+B;AAC7B,eAAK3B,OAAL,CAAaoC,IAAb,CAAkBN,QAAlB;AACD,SAFD,MAEO;AACL,eAAK9B,OAAL,CAAa+E,OAAb,CAAqBjD,QAArB;AACD;;AAED,aAAKP,MAAL;;AAEA,YAAI,KAAKG,UAAL,EAAJ,EAAuB;AACrB,eAAKvB,OAAL,CAAa6E,KAAb;AACD;AACF,OArWH;;AAwWE;;;;;;;;;;AAUAC,MAAAA,KAAK,EAAG,eAASnD,QAAT,EACR;AACE,YAAIE,UAAU,GAAGF,QAAQ,CAACoD,YAAT,EAAjB;;AAEA,YAAIlD,UAAJ,EAAgB;AACdA,UAAAA,UAAU,CAACiD,KAAX;AACD,SAFD,MAEO,IAAI,KAAKjF,OAAL,CAAamF,QAAb,CAAsBrD,QAAtB,CAAJ,EAAqC;AAC1C3C,UAAAA,EAAE,CAAC0D,IAAH,CAAQC,KAAR,CAAcC,MAAd,CAAqB,KAAK/C,OAA1B,EAAmC8B,QAAnC;AACD;AACF;AA3XH,KA1FF;;AA2dE;;;;;AAMAsD,IAAAA,QAAQ,EAAG,oBACX;AACE,WAAKC,aAAL,CAAmB,UAAnB;;AACA,WAAKC,eAAL,CAAqB,SAArB;;AACA,WAAKtF,OAAL,GAAe,IAAf;AACD;AAteH,GADA;AA/BAb,EAAAA,EAAE,CAAC8C,EAAH,CAAMC,MAAN,CAAaqD,YAAb,CAA0BjG,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Handles scheduling of requests to be sent to a server.\n *\n * This class is a singleton and is used by qx.io.remote.Request to schedule its\n * requests. It should not be used directly.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @internal\n */\nqx.Class.define(\"qx.io.remote.RequestQueue\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__queue = [];\n    this.__active = [];\n\n    this.__totalRequests = 0;\n\n    // timeout handling\n    this.__timer = new qx.event.Timer(500);\n    this.__timer.addListener(\"interval\", this._oninterval, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n\n    /**\n     * Indicates whether queue is enabled or not.\n     */\n    enabled :\n    {\n      init : true,\n      check : \"Boolean\",\n      apply : \"_applyEnabled\"\n    },\n\n    /**\n     * The maximum number of total requests.\n     */\n    maxTotalRequests :\n    {\n      check : \"Integer\",\n      nullable : true\n    },\n\n\n    /**\n     * Maximum number of parallel requests.\n     */\n    maxConcurrentRequests :\n    {\n      check : \"Integer\",\n      init : qx.core.Environment.get(\"io.maxrequests\")\n    },\n\n\n    /**\n     * Default timeout for remote requests in milliseconds.\n     */\n    defaultTimeout :\n    {\n      check : \"Integer\",\n      init : 5000\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __queue : null,\n    __active : null,\n    __totalRequests : null,\n    __timer : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      QUEUE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get a list of queued requests\n     *\n     * @return {qx.io.remote.Request[]} The list of queued requests\n     */\n    getRequestQueue : function() {\n      return this.__queue;\n    },\n\n\n    /**\n     * Get a list of active queued requests, each one wrapped in an instance of\n     * {@link qx.io.remote.Exchange}\n     *\n     * @return {qx.io.remote.Exchange[]} The list of active queued requests, each one\n     *   wrapped in an instance of {@link qx.io.remote.Exchange}\n     */\n    getActiveQueue : function() {\n      return this.__active;\n    },\n\n\n    /**\n     * Generates debug output\n     */\n    _debug : function()\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\"))\n        {\n          // Debug output\n          var vText = this.__active.length + \"/\" + (this.__queue.length + this.__active.length);\n\n          this.debug(\"Progress: \" + vText);\n          window.status = \"Request-Queue Progress: \" + vText;\n        }\n      }\n    },\n\n\n    /**\n     * Checks the queue if any request is left to send and uses the transport\n     * layer to send the open requests.\n     * This method calls itself until every request in the queue is send.\n     *\n     */\n    _check : function()\n    {\n      // Debug output\n      this._debug();\n\n      // Check queues and stop timer if not needed anymore\n      if (this.__active.length == 0 && this.__queue.length == 0) {\n        this.__timer.stop();\n      }\n\n      // Checking if enabled\n      if (!this.getEnabled()) {\n        return;\n      }\n\n      // Checking active queue fill\n      if ( this.__queue.length == 0 ||(this.__queue[0].isAsynchronous() && this.__active.length >= this.getMaxConcurrentRequests())) {\n        return;\n      }\n\n      // Checking number of total requests\n      if (this.getMaxTotalRequests() != null && this.__totalRequests >= this.getMaxTotalRequests()) {\n        return;\n      }\n\n      var vRequest = this.__queue.shift();\n      var vTransport = new qx.io.remote.Exchange(vRequest);\n\n      // Increment counter\n      this.__totalRequests++;\n\n      // Add to active queue\n      this.__active.push(vTransport);\n\n      // Debug output\n      this._debug();\n\n      // Establish event connection between qx.io.remote.Exchange and me.\n      vTransport.addListener(\"sending\", this._onsending, this);\n      vTransport.addListener(\"receiving\", this._onreceiving, this);\n      vTransport.addListener(\"completed\", this._oncompleted, this);\n      vTransport.addListener(\"aborted\", this._oncompleted, this);\n      vTransport.addListener(\"timeout\", this._oncompleted, this);\n      vTransport.addListener(\"failed\", this._oncompleted, this);\n\n      // Store send timestamp\n      vTransport._start = (new Date).valueOf();\n\n      // Send\n      vTransport.send();\n\n      // Retry\n      if (this.__queue.length > 0) {\n        this._check();\n      }\n    },\n\n\n    /**\n     * Removes a transport object from the active queue and disposes the\n     * transport object in order stop the request.\n     *\n     * @param vTransport {qx.io.remote.Exchange} Transport object\n     */\n    _remove : function(vTransport)\n    {\n      // Remove from active transports\n      qx.lang.Array.remove(this.__active, vTransport);\n\n      // Dispose transport object\n      vTransport.dispose();\n\n      // Check again\n      this._check();\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    __activeCount : 0,\n\n\n    /**\n     * Listens for the \"sending\" event of the transport object and increases\n     * the counter for active requests.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _onsending : function(e)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\"))\n        {\n          this.__activeCount++;\n          e.getTarget()._counted = true;\n\n          this.debug(\"ActiveCount: \" + this.__activeCount);\n        }\n      }\n\n      e.getTarget().getRequest()._onsending(e);\n    },\n\n\n    /**\n     * Listens for the \"receiving\" event of the transport object and delegate\n     * the event to the current request object.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _onreceiving : function(e) {\n      e.getTarget().getRequest()._onreceiving(e);\n    },\n\n\n    /**\n     * Listens for the \"completed\" event of the transport object and decreases\n     * the counter for active requests.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _oncompleted : function(e)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\"))\n        {\n          if (e.getTarget()._counted)\n          {\n            this.__activeCount--;\n            this.debug(\"ActiveCount: \" + this.__activeCount);\n          }\n        }\n      }\n\n      // delegate the event to the handler method of the request depending\n      // on the current type of the event ( completed|aborted|timeout|failed )\n      var request = e.getTarget().getRequest();\n      var requestHandler = \"_on\" + e.getType();\n\n      // remove the request from the queue,\n      // keep local reference, see [BUG #4422]\n      this._remove(e.getTarget());\n\n      // It's possible that the request handler can fail, possibly due to\n      // being sent garbage data. We want to prevent that from crashing\n      // the program, but instead display an error.\n      try\n      {\n        if (request[requestHandler])\n        {\n          request[requestHandler](e);\n        }\n      }\n      catch(ex)\n      {\n        this.error(\"Request \" + request + \" handler \" + requestHandler +\n          \" threw an error: \", ex);\n\n        // Issue an \"aborted\" event so the application gets notified.\n        // If that too fails, or if there's no \"aborted\" handler, ignore it.\n        try\n        {\n          if (request[\"_onaborted\"])\n          {\n            var event = qx.event.Registration.createEvent(\"aborted\",\n                                                      qx.event.type.Event);\n            request[\"_onaborted\"](event);\n          }\n        }\n        catch(ex1)\n        {\n        }\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMEOUT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listens for the \"interval\" event of the transport object and checks\n     * if the active requests are timed out.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _oninterval : function(e)\n    {\n      var vActive = this.__active;\n\n      if (vActive.length == 0)\n      {\n        this.__timer.stop();\n        return;\n      }\n\n      var vCurrent = (new Date).valueOf();\n      var vTransport;\n      var vRequest;\n      var vDefaultTimeout = this.getDefaultTimeout();\n      var vTimeout;\n      var vTime;\n\n      for (var i=vActive.length-1; i>=0; i--)\n      {\n        vTransport = vActive[i];\n        vRequest = vTransport.getRequest();\n\n        if (vRequest.isAsynchronous())\n        {\n          vTimeout = vRequest.getTimeout();\n\n          // if timer is disabled...\n          if (vTimeout == 0)\n          {\n            // then ignore it.\n            continue;\n          }\n\n          if (vTimeout == null) {\n            vTimeout = vDefaultTimeout;\n          }\n\n          vTime = vCurrent - vTransport._start;\n\n          if (vTime > vTimeout)\n          {\n            this.warn(\"Timeout: transport \" + vTransport.toHashCode());\n            this.warn(vTime + \"ms > \" + vTimeout + \"ms\");\n            vTransport.timeout();\n          }\n        }\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MODIFIERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyEnabled : function(value, old)\n    {\n      if (value) {\n        this._check();\n      }\n\n      this.__timer.setEnabled(value);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CORE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add the request to the pending requests queue.\n     *\n     * @param vRequest {var} The request\n     */\n    add : function(vRequest)\n    {\n      vRequest.setState(\"queued\");\n\n      if (vRequest.isAsynchronous()) {\n        this.__queue.push(vRequest);\n      } else {\n        this.__queue.unshift(vRequest);\n      }\n\n      this._check();\n\n      if (this.getEnabled()) {\n        this.__timer.start();\n      }\n    },\n\n\n    /**\n     * Remove the request from the pending requests queue.\n     *\n     *  The underlying transport of the request is forced into the aborted\n     *  state (\"aborted\") and listeners of the \"aborted\"\n     *  signal are notified about the event. If the request isn't in the\n     *  pending requests queue, this method is a noop.\n     *\n     * @param vRequest {var} The request\n     */\n    abort : function(vRequest)\n    {\n      var vTransport = vRequest.getTransport();\n\n      if (vTransport) {\n        vTransport.abort();\n      } else if (this.__queue.includes(vRequest)) {\n        qx.lang.Array.remove(this.__queue, vRequest);\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._disposeArray(\"__active\");\n    this._disposeObjects(\"__timer\");\n    this.__queue = null;\n  }\n});\n"
  ]
}