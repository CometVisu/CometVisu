{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/core/Aspect.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__registry",
    "wrap",
    "fullName",
    "fcn",
    "type",
    "before",
    "after",
    "reg",
    "entry",
    "i",
    "length",
    "name",
    "match",
    "pos",
    "push",
    "wrapper",
    "call",
    "arguments",
    "ret",
    "apply",
    "self",
    "base",
    "original",
    "addAdvice",
    "position",
    "core",
    "Aspect"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Basis for Aspect Oriented features in qooxdoo.\n *\n * This class makes it possible to attach functions (aspects) before or\n * after each function call of any function defined in {@link qx.Class#define}.\n *\n * Classes, which define own aspects must add an explicit require to this class\n * in the header comment using the following code:\n *\n * <pre>\n * &#35;require(qx.core.Aspect)\n * &#35;ignore(auto-require)\n * </pre>\n *\n * One example for a qooxdoo aspect is profiling ({@link qx.dev.Profile}).\n */\nqx.Bootstrap.define(\"qx.core.Aspect\",\n{\n  statics :\n  {\n    /** @type {Array} Registry for all known aspect wishes */\n    __registry : [],\n\n\n    /**\n     * This function is used by {@link qx.Class#define} to wrap all statics, members and\n     * constructors.\n     *\n     * @param fullName {String} Full name of the function including the class name.\n     * @param fcn {Function} function to wrap.\n     * @param type {String} Type of the wrapped function. One of \"member\", \"static\",\n     *          \"constructor\", \"destructor\" or \"property\".\n     *\n     * @return {Function} wrapped function\n     */\n    wrap : function(fullName, fcn, type)\n    {\n      var before = [];\n      var after = [];\n      var reg = this.__registry;\n      var entry;\n\n      for (var i=0; i<reg.length; i++)\n      {\n        entry = reg[i];\n\n        if ((entry.type == null || type == entry.type || entry.type == \"*\") && (entry.name == null || fullName.match(entry.name))) {\n          entry.pos == -1 ? before.push(entry.fcn) : after.push(entry.fcn);\n        }\n      }\n\n      if (before.length === 0 && after.length === 0) {\n        return fcn;\n      }\n\n      var wrapper = function()\n      {\n        for (var i=0; i<before.length; i++) {\n          before[i].call(this, fullName, fcn, type, arguments);\n        }\n\n        var ret = fcn.apply(this, arguments);\n\n        for (var i=0; i<after.length; i++) {\n          after[i].call(this, fullName, fcn, type, arguments, ret);\n        }\n\n        return ret;\n      };\n\n      if (type !== \"static\")\n      {\n        wrapper.self = fcn.self;\n        wrapper.base = fcn.base;\n      }\n\n      fcn.wrapper = wrapper;\n      wrapper.original = fcn;\n\n      return wrapper;\n    },\n\n\n    /**\n     * Register a function to be called just before or after each time\n     * one of the selected functions is called.\n     *\n     * @param fcn {Function} Function to be called just before or after any of the\n     *     selected functions is called. If position is \"before\" the functions\n     *     supports the same signature as {@link qx.dev.Profile#profileBefore}. If\n     *     position is \"after\" it supports the same signature as\n     *     {@link qx.dev.Profile#profileAfter}.\n     * @param position {String?\"after\"} One of \"before\" or \"after\". Whether the function\n     *     should be called before or after the wrapped function.\n     * @param type {String?null} Type of the wrapped function. One of \"member\",\n     *     \"static\", \"constructor\", \"destructor\", \"property\" or \"*\". <code>null</code>\n     *     is handled identical to \"*\".\n     * @param name {String|RegExp?null} Each function, with a full name matching\n     *     this pattern (using <code>fullName.match(name)</code>) will be\n     *     wrapped.\n     */\n    addAdvice : function(fcn, position, type, name)\n    {\n      this.__registry.push(\n      {\n        fcn: fcn,\n        pos: position === \"before\" ? -1 : 1,\n        type: type,\n        name: name\n      });\n    }\n  }\n});\n"
  ]
}