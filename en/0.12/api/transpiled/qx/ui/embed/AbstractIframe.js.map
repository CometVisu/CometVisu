{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/embed/AbstractIframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "source",
    "setSource",
    "_getIframeElement",
    "addListener",
    "__onNavigate",
    "events",
    "properties",
    "check",
    "apply",
    "init",
    "frameName",
    "members",
    "Error",
    "_applySource",
    "value",
    "old",
    "_applyFrameName",
    "setAttribute",
    "getWindow",
    "getDocument",
    "getBody",
    "getName",
    "reload",
    "e",
    "actualUrl",
    "getData",
    "fireDataEvent",
    "embed",
    "AbstractIframe"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Til Schneider (til132)\n     * Jonathan Wei√ü (jonathan_rass)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Abstract base class for iframe widgets.\n */\nqx.Class.define(\"qx.ui.embed.AbstractIframe\",\n{\n  extend : qx.ui.core.Widget,\n\n  /**\n   * @param source {String} URL which should initially set.\n   */\n  construct : function(source)\n  {\n    this.base(arguments);\n\n    if (source) {\n      this.setSource(source);\n    }\n\n    this._getIframeElement().addListener(\"navigate\", this.__onNavigate, this);\n  },\n\n\n  events:\n  {\n    /**\n     * The \"load\" event is fired after the iframe content has successfully been loaded.\n     */\n    \"load\" : \"qx.event.type.Event\",\n\n    /**\n    * The \"navigate\" event is fired whenever the location of the iframe\n    * changes.\n    *\n    * Useful to track user navigation and internally used to keep the source\n    * property in sync. Only works when the destination source is of same\n    * origin than the page embedding the iframe.\n    */\n    \"navigate\" : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    /**\n     * Source URL of the iframe.\n     */\n    source :\n    {\n      check : \"String\",\n      apply : \"_applySource\",\n      init : \"about:blank\"\n    },\n\n    /**\n     * Name of the iframe.\n     */\n    frameName :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyFrameName\"\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Get the Element wrapper for the iframe\n     *\n     * @abstract\n     * @return {qx.html.Iframe} the iframe element wrapper\n     */\n    _getIframeElement : function() {\n      throw new Error(\"Abstract method call\");\n    },\n\n\n    // property apply\n    _applySource : function(value, old) {\n      this._getIframeElement().setSource(value);\n    },\n\n\n    // property apply\n    _applyFrameName : function(value, old) {\n      this._getIframeElement().setAttribute(\"name\", value);\n    },\n\n\n\n    /**\n     * Get the DOM window object of an iframe.\n     *\n     * @return {Window} The DOM window object of the iframe.\n     */\n    getWindow : function() {\n      return this._getIframeElement().getWindow();\n    },\n\n\n    /**\n     * Get the DOM document object of an iframe.\n     *\n     * @return {Document} The DOM document object of the iframe.\n     */\n    getDocument : function() {\n      return this._getIframeElement().getDocument();\n    },\n\n\n    /**\n     * Get the HTML body element of the iframe.\n     *\n     * @return {Element} The DOM node of the <code>body</code> element of the iframe.\n     */\n    getBody : function() {\n      return this._getIframeElement().getBody();\n    },\n\n\n    /**\n     * Get the current name.\n     *\n     * @return {String} The iframe's name.\n     */\n    getName : function() {\n      return this._getIframeElement().getName();\n    },\n\n\n    /**\n     * Reload the contents of the iframe.\n     *\n     */\n    reload : function() {\n      this._getIframeElement().reload();\n    },\n\n    /**\n    * Handle user navigation. Sync actual URL of iframe with source property.\n    *\n    * @param e {qx.event.type.Data} navigate event\n    */\n    __onNavigate: function(e) {\n      var actualUrl = e.getData();\n\n      if (actualUrl) {\n        this.setSource(actualUrl);\n      }\n\n      this.fireDataEvent(\"navigate\", actualUrl);\n    }\n  }\n});\n"
  ]
}