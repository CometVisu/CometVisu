{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/groupbox/GroupBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "MRemoteLayoutHandling",
    "MContentPadding",
    "form",
    "MForm",
    "implement",
    "IForm",
    "construct",
    "legend",
    "icon",
    "_setLayout",
    "layout",
    "Canvas",
    "_createChildControl",
    "setLegend",
    "setIcon",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "event",
    "nullable",
    "legendPosition",
    "themeable",
    "members",
    "_forwardStates",
    "invalid",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "Composite",
    "_add",
    "left",
    "top",
    "right",
    "bottom",
    "basic",
    "Atom",
    "addListener",
    "_repositionFrame",
    "_getContentPaddingTarget",
    "getChildControl",
    "_applyLegend",
    "value",
    "old",
    "setLabel",
    "show",
    "exclude",
    "_applyLegendPosition",
    "e",
    "getBounds",
    "frame",
    "height",
    "getLegendPosition",
    "setLayoutProperties",
    "Math",
    "round",
    "getChildrenContainer",
    "getIcon",
    "groupbox",
    "GroupBox"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Group boxes are used to group a set of form elements.\n *\n * @childControl frame {qx.ui.container.Composite} frame for the content widgets\n * @childControl legend {qx.ui.basic.Atom} legend to show at top of the groupbox\n */\nqx.Class.define(\"qx.ui.groupbox.GroupBox\",\n{\n  extend : qx.ui.core.Widget,\n  include : [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MRemoteLayoutHandling,\n    qx.ui.core.MContentPadding,\n    qx.ui.form.MForm\n  ],\n  implement : [qx.ui.form.IForm],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param legend {String?\"\"} The group boxes legend\n   * @param icon {String?\"\"} The icon of the legend\n   */\n  construct : function(legend, icon)\n  {\n    this.base(arguments);\n\n    this._setLayout(new qx.ui.layout.Canvas);\n\n    // Sub widgets\n    this._createChildControl(\"frame\");\n    this._createChildControl(\"legend\");\n\n    // Processing parameters\n    if (legend != null) {\n      this.setLegend(legend);\n    }\n\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init   : \"groupbox\"\n    },\n\n    /**\n     * Label of the legend sub widget. Set if the given string is\n     * valid. Otherwise the legend sub widget is not being displayed.\n     */\n    legend:\n    {\n      check: \"String\",\n      apply: \"_applyLegend\",\n      event: \"changeLegend\",\n      nullable: true\n    },\n\n    /**\n     * Property for setting the position of the legend.\n     */\n    legendPosition :\n    {\n      check     : [\"top\", \"middle\"],\n      init      : \"middle\",\n      apply     : \"_applyLegendPosition\",\n      themeable : true\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      invalid : true\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"frame\":\n          control = new qx.ui.container.Composite();\n          this._add(control, {left: 0, top: 6, right: 0, bottom: 0});\n          break;\n\n        case \"legend\":\n          control = new qx.ui.basic.Atom();\n          control.addListener(\"resize\", this._repositionFrame, this);\n          this._add(control, {left: 0, right: 0});\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getChildControl(\"frame\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LEGEND HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyLegend : function(value, old)\n    {\n      var control = this.getChildControl(\"legend\");\n\n      if (value !== null)\n      {\n        control.setLabel(value);\n        control.show();\n      }\n      else\n      {\n        control.exclude();\n      }\n    },\n\n\n    /**\n     * Apply method for applying the legend position. It calls the\n     * {@link #_repositionFrame} method.\n     */\n    _applyLegendPosition: function(e)\n    {\n      if (this.getChildControl(\"legend\").getBounds()) {\n        this._repositionFrame();\n      }\n    },\n\n\n    /**\n     * Repositions the frame of the group box dependent on the\n     * {@link #legendPosition} property.\n     */\n    _repositionFrame: function()\n    {\n      var legend = this.getChildControl(\"legend\");\n      var frame = this.getChildControl(\"frame\");\n\n      // get the current height of the legend\n      var height = legend.getBounds().height;\n\n      // check for the property legend position\n      if (this.getLegendPosition() == \"middle\") {\n        frame.setLayoutProperties({\"top\": Math.round(height / 2)});\n      } else if (this.getLegendPosition() == \"top\") {\n        frame.setLayoutProperties({\"top\": height});\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      GETTER FOR SUB WIDGETS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * The children container needed by the {@link qx.ui.core.MRemoteChildrenHandling}\n     * mixin\n     *\n     * @return {qx.ui.container.Composite} pane sub widget\n     */\n    getChildrenContainer : function() {\n      return this.getChildControl(\"frame\");\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SETTER/GETTER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the icon of the legend sub widget.\n     *\n     * @param icon {String} source of the new icon of the legend sub widget\n     */\n    setIcon : function(icon) {\n      this.getChildControl(\"legend\").setIcon(icon);\n    },\n\n\n    /**\n     * Accessor method for the icon of the legend sub widget\n     *\n     * @return {String} source of the new icon of the legend sub widget\n     */\n    getIcon : function() {\n      return this.getChildControl(\"legend\").getIcon();\n    }\n  }\n});\n"
  ]
}