{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/command/Command.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "shortcut",
    "_shortcut",
    "bom",
    "Shortcut",
    "addListener",
    "execute",
    "undefined",
    "setShortcut",
    "events",
    "properties",
    "active",
    "init",
    "check",
    "event",
    "apply",
    "enabled",
    "nullable",
    "label",
    "icon",
    "toolTipText",
    "value",
    "menu",
    "members",
    "_applyActive",
    "setEnabled",
    "getEnabled",
    "_applyEnabled",
    "getActive",
    "_applyShortcut",
    "target",
    "fireDataEvent",
    "toString",
    "destruct",
    "removeListener",
    "_disposeObjects",
    "ui",
    "command",
    "Command"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n/**\n * Commands can be used to globally define keyboard shortcuts. They could\n * also be used to assign an execution of a command sequence to multiple\n * widgets. It is possible to use the same Command in a MenuButton and\n * ToolBarButton for example.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.ui.command.Command\",\n{\n  extend : qx.core.Object,\n\n\n  /**\n   * @param shortcut {String} Shortcuts can be composed of optional modifier\n   *    keys Control, Alt, Shift, Meta and a non modifier key.\n   *    If no non modifier key is specified, the second parameter is evaluated.\n   *    The key must be separated by a <code>+</code> or <code>-</code> character.\n   *    Examples: Alt+F1, Control+C, Control+Alt+Delete\n   */\n  construct : function(shortcut)\n  {\n    this.base(arguments);\n    this._shortcut = new qx.bom.Shortcut(shortcut);\n    this._shortcut.addListener(\"execute\", this.execute, this);\n\n    if (shortcut !== undefined) {\n      this.setShortcut(shortcut);\n    }\n  },\n\n\n  events :\n  {\n    /**\n     * Fired when the command is executed. Sets the \"data\" property of the\n     * event to the object that issued the command.\n     */\n    \"execute\" : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    /** Whether the command should be activated. If 'false' execute event\n     * wouldn't fire. This property will be used by command groups when\n     * activating/deactivating all commands of the group.*/\n    active :\n    {\n      init : true,\n      check : \"Boolean\",\n      event : \"changeActive\",\n      apply : \"_applyActive\"\n    },\n\n\n    /** Whether the command should be respected/enabled. If 'false' execute event\n     * wouldn't fire. If value of property {@link qx.ui.command.Command#active}\n     * is 'false', enabled value can be set but has no effect until\n     * {@link qx.ui.command.Command#active} will be set to 'true'.*/\n    enabled :\n    {\n      init : true,\n      check : \"Boolean\",\n      event : \"changeEnabled\",\n      apply : \"_applyEnabled\"\n    },\n\n\n    /** The command shortcut as a string */\n    shortcut :\n    {\n      check : \"String\",\n      apply : \"_applyShortcut\",\n      nullable : true\n    },\n\n\n    /** The label, which will be set in all connected widgets (if available) */\n    label :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeLabel\"\n    },\n\n\n    /** The icon, which will be set in all connected widgets (if available) */\n    icon :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeIcon\"\n    },\n\n\n    /**\n     * The tooltip text, which will be set in all connected\n     * widgets (if available)\n     */\n    toolTipText :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeToolTipText\"\n    },\n\n\n    /** The value of the connected widgets */\n    value :\n    {\n      nullable : true,\n      event : \"changeValue\"\n    },\n\n\n    /** The menu, which will be set in all connected widgets (if available) */\n    menu :\n    {\n      check : \"qx.ui.menu.Menu\",\n      nullable : true,\n      event : \"changeMenu\"\n    }\n  },\n\n\n  members :\n  {\n    _shortcut : null,\n\n\n    // property apply\n    _applyActive : function(value)\n    {\n      if (value === false) {\n        this._shortcut.setEnabled(false);\n      } else {\n        // synchronize value with current \"enabled\" value of this command\n        this._shortcut.setEnabled(this.getEnabled());\n      }\n    },\n\n\n    // property apply\n    _applyEnabled : function(value)\n    {\n      if (this.getActive()) {\n        this._shortcut.setEnabled(value);\n      }\n    },\n\n\n    // property apply\n    _applyShortcut : function(value) {\n      this._shortcut.setShortcut(value);\n    },\n\n\n    /**\n     * Fire the \"execute\" event on this command. If property\n     * <code>active</code> and <code>enabled</code> set to\n     * <code>true</code>.\n     * @param target {Object?} Object which issued the execute event\n     */\n    execute : function(target)\n    {\n      if (this.getActive() && this.getEnabled()) {\n        this.fireDataEvent(\"execute\", target);\n      }\n    },\n\n\n    /**\n     * Returns the used shortcut as string using the currently selected locale.\n     *\n     * @return {String} shortcut\n     */\n    toString : function()\n    {\n      if (this._shortcut) {\n          return this._shortcut.toString();\n      }\n      return this.base(arguments);\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._shortcut.removeListener(\"execute\", this.execute, this);\n    this._disposeObjects(\"_shortcut\");\n  }\n});\n"
  ]
}