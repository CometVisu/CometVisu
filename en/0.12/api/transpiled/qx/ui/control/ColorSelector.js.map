{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/control/ColorSelector.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IColorForm",
    "construct",
    "_setLayout",
    "layout",
    "VBox",
    "_createChildControl",
    "addListener",
    "_onAppear",
    "events",
    "properties",
    "appearance",
    "refine",
    "init",
    "red",
    "check",
    "apply",
    "green",
    "blue",
    "hue",
    "saturation",
    "brightness",
    "members",
    "__updateContext",
    "__presetTable",
    "__capture",
    "__brightnessSubtract",
    "__hueSaturationSubtractTop",
    "__hueSaturationSubtractLeft",
    "__nullValue",
    "__preventChangeValueEvent",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "Composite",
    "HBox",
    "add",
    "getChildControl",
    "_add",
    "groupbox",
    "GroupBox",
    "tr",
    "setLayout",
    "flex",
    "Canvas",
    "setAllowGrowY",
    "_onHueSaturationPaneRoll",
    "left",
    "top",
    "basic",
    "Image",
    "_onHueSaturationFieldPointerDown",
    "_onHueSaturationHandlePointerUp",
    "_onHueSaturationHandlePointerMove",
    "_onBrightnessPaneRoll",
    "_onBrightnessFieldPointerDown",
    "_onBrightnessHandlePointerDown",
    "_onBrightnessHandlePointerUp",
    "_onBrightnessHandlePointerMove",
    "Grow",
    "_onColorFieldTap",
    "controlLayout",
    "Grid",
    "colorField",
    "colorPos",
    "i",
    "j",
    "setBackgroundColor",
    "column",
    "row",
    "setSpacing",
    "setAlignY",
    "hexLabel",
    "Label",
    "setWidth",
    "hexHelper",
    "TextField",
    "setMaxLength",
    "setFilter",
    "_onHexFieldChange",
    "rgbSpinLabel",
    "Spinner",
    "_setRedFromSpinner",
    "_setGreenFromSpinner",
    "_setBlueFromSpinner",
    "hsbSpinLabel",
    "_setHueFromSpinner",
    "_setSaturationFromSpinner",
    "_setBrightnessFromSpinner",
    "setValue",
    "value",
    "rgb",
    "util",
    "ColorUtil",
    "stringToRgb",
    "setRed",
    "setGreen",
    "setBlue",
    "getValue",
    "rgbToHexString",
    "getRed",
    "getGreen",
    "getBlue",
    "resetValue",
    "__fireChangeValueEvent",
    "fireDataEvent",
    "_applyRed",
    "old",
    "_setHexFromRgb",
    "_setHueFromRgb",
    "_setPreviewFromRgb",
    "_applyGreen",
    "_applyBlue",
    "_applyHue",
    "getBounds",
    "setDomLeft",
    "Math",
    "round",
    "getPaddingLeft",
    "setLayoutProperties",
    "_setRgbFromHue",
    "_setBrightnessGradiant",
    "_applySaturation",
    "setDomTop",
    "getPaddingTop",
    "_applyBrightness",
    "topValue",
    "e",
    "capture",
    "locationBrightnessField",
    "getContentLocation",
    "locationBrightnessHandle",
    "fieldBounds",
    "getDocumentTop",
    "stopPropagation",
    "releaseCapture",
    "_setBrightnessOnFieldEvent",
    "location",
    "bounds",
    "height",
    "stop",
    "getPointerType",
    "setBrightness",
    "lang",
    "Number",
    "limit",
    "getBrightness",
    "getDelta",
    "y",
    "_setHueSaturationOnFieldEvent",
    "handleBounds",
    "width",
    "delta",
    "setSaturation",
    "getSaturation",
    "setHue",
    "getHue",
    "x",
    "vTop",
    "vLeft",
    "getDocumentLeft",
    "setDomPosition",
    "hexField",
    "hexStringToRgb",
    "ex",
    "substring",
    "length",
    "vColor",
    "getTarget",
    "getBackgroundColor",
    "error",
    "hsb",
    "rgbToHsb",
    "vRgb",
    "hsbToRgb",
    "rgbString",
    "rgbToRgbString",
    "setPreviousColor",
    "color",
    "helpRgb",
    "helpRgbString",
    "ColorSelector"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Jonathan Weiß (jonathan_rass)\n     * Matthew Gregory\n\n************************************************************************ */\n\n/**\n * A typical color selector as known from native applications.\n *\n * Includes support for RGB and HSB color areas.\n *\n * @childControl control-bar {qx.ui.container.Composite} container which holds the control-pane and visual-pane\n * @childControl visual-pane {qx.ui.groupbox.GroupBox} pane shows the hue-saturation-pane and the brightness-pane\n * @childControl hue-saturation-pane {qx.ui.container.Composite} shows the hue saturation and the handle to select\n * @childControl hue-saturation-field {qx.ui.basic.Image} hue saturation image which shows all available colors\n * @childControl hue-saturation-handle {qx.ui.basic.Image} handle to select the color using the pointer\n * @childControl brightness-pane {qx.ui.container.Composite} shows the brightness field and the handle to select\n * @childControl brightness-field {qx.ui.basic.Image} brightness image which shows all brightness steps\n * @childControl brightness-handle {qx.ui.basic.Image} brightness handle to select the brightness using the pointer\n * @childControl preset-field-set {qx.ui.groupbox.GroupBox} groupbox holding all preset colors\n * @childControl colorbucket {qx.ui.core.Widget} color bucket\n * @childControl preset-grid {qx.ui.container.Composite} container for all color presets\n * @childControl input-field-set {qx.ui.groupbox.GroupBox} groupbox holding different input elements\n * @childControl preview-field-set {qx.ui.groupbox.GroupBox} groupbox holding the two preview fields\n * @childControl hex-field-composite {qx.ui.container.Composite} container for the hex field\n * @childControl hex-field {qx.ui.form.TextField} textfield to input a hex value\n * @childControl rgb-spinner-composite {qx.ui.container.Composite} container for the rgb spinner\n * @childControl rgb-spinner-red {qx.ui.form.Spinner} spinner control for the red hex value\n * @childControl rgb-spinner-green {qx.ui.form.Spinner} spinner control for the green hex value\n * @childControl rgb-spinner-blue {qx.ui.form.Spinner} spinner control for the blue hex value\n * @childControl hsb-spinner-composite {qx.ui.container.Composite} container for the hsb spinners\n * @childControl hsb-spinner-hue {qx.ui.form.Spinner} spinner control for the huevalue\n * @childControl hsb-spinner-saturation {qx.ui.form.Spinner} spinner control for the saturation value\n * @childControl hsb-spinner-brightness {qx.ui.form.Spinner} spinner control for the brightness value\n * @childControl preview-content-old {qx.ui.core.Widget} preview of the old color\n * @childControl preview-content-new {qx.ui.core.Widget} preview of the new color\n */\nqx.Class.define(\"qx.ui.control.ColorSelector\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [qx.ui.form.IColorForm],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a ColorSelector.\n   */\n  construct : function()\n  {\n    this.base(arguments);\n\n    // add the basic layout\n    this._setLayout(new qx.ui.layout.VBox());\n\n    this._createChildControl(\"control-bar\");\n\n    this.addListener(\"appear\", this._onAppear, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events:\n  {\n    /** Fired when the \"OK\" button is tapped. */\n    \"dialogok\"     : \"qx.event.type.Event\",\n\n    /** Fired when the \"Cancel\" button is tapped. */\n    \"dialogcancel\" : \"qx.event.type.Event\",\n\n    /** Fired when the value changes */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"colorselector\"\n    },\n\n    /** The numeric red value of the selected color. */\n    red :\n    {\n      check : \"Integer\",\n      init : 255,\n      apply : \"_applyRed\"\n    },\n\n    /** The numeric green value of the selected color. */\n    green :\n    {\n      check : \"Integer\",\n      init : 255,\n      apply : \"_applyGreen\"\n    },\n\n    /** The numeric blue value of the selected color. */\n    blue :\n    {\n      check : \"Integer\",\n      init :  255,\n      apply : \"_applyBlue\"\n    },\n\n    /** The numeric hue value. */\n    hue :\n    {\n      check : \"Number\",\n      init : 0,\n      apply : \"_applyHue\"\n    },\n\n    /** The numeric saturation value. */\n    saturation :\n    {\n      check : \"Number\",\n      init : 0,\n      apply : \"_applySaturation\"\n    },\n\n    /** The numeric brightness value. */\n    brightness :\n    {\n      check : \"Number\",\n      init : 100,\n      apply : \"_applyBrightness\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {String} The context in which an update has occurred.\n     */\n    __updateContext : null,\n\n    /**\n     * @type {Array} Map containing the preset colors.\n     * @lint ignoreReferenceField(__presetTable)\n     */\n    __presetTable : [ \"maroon\", \"red\", \"orange\", \"yellow\", \"olive\", \"purple\",\n      \"fuchsia\", \"lime\", \"green\", \"navy\", \"blue\", \"aqua\", \"teal\", \"black\",\n      \"#333\", \"#666\", \"#999\", \"#BBB\", \"#EEE\", \"white\" ],\n\n    /**\n     * @type {String} Name of child control which is captured.\n     */\n    __capture : \"\",\n\n    /**\n     * @type {Number} Numeric brightness value\n     */\n    __brightnessSubtract : 0,\n\n    /**\n     * @type {Integer} HueSaturation's X coordinate\n     */\n    __hueSaturationSubtractTop : 0,\n\n    /**\n     * @type {Integer} HueSaturation's Y coordinate\n     */\n    __hueSaturationSubtractLeft : 0,\n\n    // internal boolean flag to signal, that the value is set to null\n    __nullValue : true,\n\n    // internal mutex to prevent the changeValue event to be fired too often\n    __preventChangeValueEvent : false,\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        /*\n        ---------------------------------------------------------------------------\n          CREATE #1: BASE STRUCTURE\n        ---------------------------------------------------------------------------\n        */\n        case \"control-bar\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n\n          control.add(this.getChildControl(\"control-pane\"));\n          control.add(this.getChildControl(\"visual-pane\"));\n\n          this._add(control);\n          break;\n\n        /*\n        ---------------------------------------------------------------------------\n          CREATE #2: PANES\n        ---------------------------------------------------------------------------\n        */\n\n        case \"visual-pane\":\n          control = new qx.ui.groupbox.GroupBox(this.tr(\"Visual\"));\n          control.setLayout(new qx.ui.layout.HBox(10));\n          control.add(this.getChildControl(\"hue-saturation-pane\"));\n          control.add(this.getChildControl(\"brightness-pane\"));\n          break;\n\n        case \"control-pane\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.VBox(0));\n          control.add(this.getChildControl(\"preset-field-set\"));\n          control.add(this.getChildControl(\"input-field-set\"));\n          control.add(this.getChildControl(\"preview-field-set\"), {flex: 1});\n          break;\n\n        case \"hue-saturation-pane\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.Canvas());\n          control.setAllowGrowY(false);\n          control.addListener(\"roll\", this._onHueSaturationPaneRoll, this);\n          control.add(this.getChildControl(\"hue-saturation-field\"));\n          control.add(this.getChildControl(\"hue-saturation-handle\"), {left: 0, top: 256});\n          break;\n\n        case \"hue-saturation-field\":\n          control = new qx.ui.basic.Image(\"decoration/colorselector/huesaturation-field.jpg\");\n          control.addListener(\"pointerdown\", this._onHueSaturationFieldPointerDown, this);\n          break;\n\n        case \"hue-saturation-handle\":\n          control = new qx.ui.basic.Image(\"decoration/colorselector/huesaturation-handle.gif\");\n          control.addListener(\"pointerdown\", this._onHueSaturationFieldPointerDown, this);\n          control.addListener(\"pointerup\", this._onHueSaturationHandlePointerUp, this);\n          control.addListener(\"pointermove\", this._onHueSaturationHandlePointerMove, this);\n          break;\n\n        case \"brightness-pane\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.Canvas());\n          control.setAllowGrowY(false);\n          control.addListener(\"roll\", this._onBrightnessPaneRoll, this);\n          control.add(this.getChildControl(\"brightness-field\"));\n          control.add(this.getChildControl(\"brightness-handle\"));\n          break;\n\n        case \"brightness-field\":\n          control = new qx.ui.basic.Image(\"decoration/colorselector/brightness-field.png\");\n          control.addListener(\"pointerdown\", this._onBrightnessFieldPointerDown, this);\n          break;\n\n        case \"brightness-handle\":\n          control = new qx.ui.basic.Image(\"decoration/colorselector/brightness-handle.gif\");\n          control.addListener(\"pointerdown\", this._onBrightnessHandlePointerDown, this);\n          control.addListener(\"pointerup\", this._onBrightnessHandlePointerUp, this);\n          control.addListener(\"pointermove\", this._onBrightnessHandlePointerMove, this);\n          break;\n\n\n        /*\n        ---------------------------------------------------------------------------\n          CREATE #3: CONTROL PANE CONTENT\n        ---------------------------------------------------------------------------\n        */\n        case \"preset-field-set\":\n          control = new qx.ui.groupbox.GroupBox(this.tr(\"Presets\"));\n          control.setLayout(new qx.ui.layout.Grow());\n          control.add(this.getChildControl(\"preset-grid\"));\n          break;\n\n        case \"colorbucket\":\n          control = new qx.ui.core.Widget();\n          control.addListener(\"pointerdown\", this._onColorFieldTap, this);\n          break;\n\n        case \"preset-grid\":\n          controlLayout = new qx.ui.layout.Grid(3, 3);\n          control = new qx.ui.container.Composite(controlLayout);\n\n          var colorField;\n          var colorPos;\n\n          for (var i=0; i<2; i++)\n          {\n            for (var j=0; j<10; j++)\n            {\n              colorPos = i * 10 + j;\n              colorField = this.getChildControl(\"colorbucket#\" + colorPos);\n              colorField.setBackgroundColor(this.__presetTable[colorPos]);\n\n              control.add(colorField, {column: j, row: i});\n            }\n          }\n          break;\n\n        case \"input-field-set\":\n          control = new qx.ui.groupbox.GroupBox(this.tr(\"Details\"));\n          var controlLayout = new qx.ui.layout.VBox();\n          controlLayout.setSpacing(10);\n          control.setLayout(controlLayout);\n\n          control.add(this.getChildControl(\"hex-field-composite\"));\n          control.add(this.getChildControl(\"rgb-spinner-composite\"));\n          control.add(this.getChildControl(\"hsb-spinner-composite\"));\n          break;\n\n        case \"preview-field-set\":\n          control = new qx.ui.groupbox.GroupBox(this.tr(\"Preview (Old/New)\"));\n          var controlLayout = new qx.ui.layout.HBox(10);\n          control.setLayout(controlLayout);\n\n          control.add(this.getChildControl(\"preview-content-old\"), {flex: 1});\n          control.add(this.getChildControl(\"preview-content-new\"), {flex: 1});\n          break;\n\n        /*\n        ---------------------------------------------------------------------------\n          CREATE #4: INPUT FIELDSET CONTENT\n        ---------------------------------------------------------------------------\n        */\n        case \"hex-field-composite\":\n          var layout = new qx.ui.layout.HBox(4);\n          layout.setAlignY(\"middle\");\n          control = new qx.ui.container.Composite(layout);\n\n          var hexLabel = new qx.ui.basic.Label(this.tr(\"Hex\"));\n          hexLabel.setWidth(30);\n          control.add(hexLabel);\n\n          var hexHelper = new qx.ui.basic.Label(\"#\");\n          control.add(hexHelper);\n\n          control.add(this.getChildControl(\"hex-field\"));\n          break;\n\n        case \"hex-field\":\n          control = new qx.ui.form.TextField(\"FFFFFF\");\n          control.setMaxLength(6);\n          control.setFilter(/[0-9A-Fa-f]/);\n          control.setWidth(55);\n          control.addListener(\"changeValue\", this._onHexFieldChange, this);\n          break;\n\n        case \"rgb-spinner-composite\":\n          var layout = new qx.ui.layout.HBox(4);\n          layout.setAlignY(\"middle\");\n          control = new qx.ui.container.Composite(layout);\n\n          var rgbSpinLabel = new qx.ui.basic.Label(this.tr(\"RGB\"));\n          rgbSpinLabel.setWidth(30);\n          control.add(rgbSpinLabel);\n\n          control.add(this.getChildControl(\"rgb-spinner-red\"));\n          control.add(this.getChildControl(\"rgb-spinner-green\"));\n          control.add(this.getChildControl(\"rgb-spinner-blue\"));\n          break;\n\n        case \"rgb-spinner-red\":\n          control = new qx.ui.form.Spinner(0, 255, 255);\n          control.setWidth(50);\n          control.addListener(\"changeValue\", this._setRedFromSpinner, this);\n          break;\n\n        case \"rgb-spinner-green\":\n          control = new qx.ui.form.Spinner(0, 255, 255);\n          control.setWidth(50);\n          control.addListener(\"changeValue\", this._setGreenFromSpinner, this);\n          break;\n\n        case \"rgb-spinner-blue\":\n          control = new qx.ui.form.Spinner(0, 255, 255);\n          control.setWidth(50);\n          control.addListener(\"changeValue\", this._setBlueFromSpinner, this);\n          break;\n\n        case \"hsb-spinner-composite\":\n          var layout = new qx.ui.layout.HBox(4);\n          layout.setAlignY(\"middle\");\n          control = new qx.ui.container.Composite(layout);\n\n          var hsbSpinLabel = new qx.ui.basic.Label(this.tr(\"HSB\"));\n          hsbSpinLabel.setWidth(30);\n          control.add(hsbSpinLabel);\n\n          control.add(this.getChildControl(\"hsb-spinner-hue\"));\n          control.add(this.getChildControl(\"hsb-spinner-saturation\"));\n          control.add(this.getChildControl(\"hsb-spinner-brightness\"));\n          break;\n\n        case \"hsb-spinner-hue\":\n          control = new qx.ui.form.Spinner(0, 0, 360);\n          control.setWidth(50);\n          control.addListener(\"changeValue\", this._setHueFromSpinner, this);\n          break;\n\n        case \"hsb-spinner-saturation\":\n          control = new qx.ui.form.Spinner(0, 0, 100);\n          control.setWidth(50);\n          control.addListener(\"changeValue\", this._setSaturationFromSpinner, this);\n          break;\n\n        case \"hsb-spinner-brightness\":\n          control = new qx.ui.form.Spinner(0, 100, 100);\n          control.setWidth(50);\n          control.addListener(\"changeValue\", this._setBrightnessFromSpinner, this);\n          break;\n\n\n        /*\n        ---------------------------------------------------------------------------\n          CREATE #5: PREVIEW CONTENT\n        ---------------------------------------------------------------------------\n        */\n        case \"preview-content-old\":\n          control = new qx.ui.core.Widget();\n          break;\n\n        case \"preview-content-new\":\n          control = new qx.ui.core.Widget();\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * The value of the ColorSelector is a string containing the HEX value of\n     * the currently selected color. Take a look at\n     * {@link qx.util.ColorUtil#stringToRgb} to see what kind of input the\n     * method can handle.\n     *\n     * @param value {String} The value of a color.\n     */\n    setValue: function(value)\n    {\n      var rgb;\n\n      if (value == null)\n      {\n        this.__nullValue = true;\n        rgb = [255, 255, 255];\n      }\n      else\n      {\n        rgb = qx.util.ColorUtil.stringToRgb(value);\n        this.__nullValue = false;\n      }\n\n      // block the first tow events\n      this.__preventChangeValueEvent = true;\n      this.setRed(rgb[0]);\n      this.setGreen(rgb[1]);\n      // only allow the final change event\n      this.__preventChangeValueEvent = false;\n      this.setBlue(rgb[2]);\n    },\n\n\n    /**\n     * Returns the currently selected color.\n     *\n     * @return {String | null} The HEX value of the color of if not color\n     *   is set, null.\n     */\n    getValue: function()\n    {\n      return this.__nullValue ? null : qx.util.ColorUtil.rgbToHexString(\n        [this.getRed(), this.getGreen(), this.getBlue()]\n      );\n    },\n\n    /**\n     * Resets the color to null.\n     */\n    resetValue: function()\n    {\n      this.__nullValue = true;\n      this.__preventChangeValueEvent = true;\n      this.setRed(255);\n      this.setGreen(255);\n      this.__preventChangeValueEvent = false;\n      this.setBlue(255);\n    },\n\n\n    /**\n     * Helper for firing the changeValue event and checking for the mutex.\n     */\n    __fireChangeValueEvent: function()\n    {\n      if (!this.__preventChangeValueEvent)\n      {\n        this.__nullValue = false;\n        this.fireDataEvent(\"changeValue\", this.getValue());\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      RGB MODIFIER\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyRed : function(value, old)\n    {\n      if (this.__updateContext === null) {\n        this.__updateContext = \"redModifier\";\n      }\n\n      if (this.__updateContext !== \"rgbSpinner\") {\n        this.getChildControl(\"rgb-spinner-red\").setValue(value);\n      }\n\n      if (this.__updateContext !== \"hexField\") {\n        this._setHexFromRgb();\n      }\n\n      switch(this.__updateContext)\n      {\n        case \"rgbSpinner\":\n        case \"hexField\":\n        case \"redModifier\":\n          this._setHueFromRgb();\n      }\n\n      this._setPreviewFromRgb();\n      this.__fireChangeValueEvent();\n\n      if (this.__updateContext === \"redModifier\") {\n        this.__updateContext = null;\n      }\n    },\n\n\n    // property apply\n    _applyGreen : function(value, old)\n    {\n      if (this.__updateContext === null) {\n        this.__updateContext = \"greenModifier\";\n      }\n\n      if (this.__updateContext !== \"rgbSpinner\") {\n        this.getChildControl(\"rgb-spinner-green\").setValue(value);\n      }\n\n      if (this.__updateContext !== \"hexField\") {\n        this._setHexFromRgb();\n      }\n\n      switch(this.__updateContext)\n      {\n        case \"rgbSpinner\":\n        case \"hexField\":\n        case \"greenModifier\":\n          this._setHueFromRgb();\n      }\n\n      this._setPreviewFromRgb();\n      this.__fireChangeValueEvent();\n\n      if (this.__updateContext === \"greenModifier\") {\n        this.__updateContext = null;\n      }\n    },\n\n\n    // property apply\n    _applyBlue : function(value, old)\n    {\n      if (this.__updateContext === null) {\n        this.__updateContext = \"blueModifier\";\n      }\n\n      if (this.__updateContext !== \"rgbSpinner\") {\n        this.getChildControl(\"rgb-spinner-blue\").setValue(value);\n      }\n\n      if (this.__updateContext !== \"hexField\") {\n        this._setHexFromRgb();\n      }\n\n      switch(this.__updateContext)\n      {\n        case \"rgbSpinner\":\n        case \"hexField\":\n        case \"blueModifier\":\n          this._setHueFromRgb();\n      }\n\n      this._setPreviewFromRgb();\n      this.__fireChangeValueEvent();\n\n      if (this.__updateContext === \"blueModifier\") {\n        this.__updateContext = null;\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HSB MODIFIER\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyHue : function(value, old)\n    {\n      if (this.__updateContext === null) {\n        this.__updateContext = \"hueModifier\";\n      }\n\n      if (this.__updateContext !== \"hsbSpinner\") {\n        this.getChildControl(\"hsb-spinner-hue\").setValue(value);\n      }\n\n      if (this.__updateContext !== \"hueSaturationField\")\n      {\n        if (this.getChildControl(\"hue-saturation-handle\").getBounds()) {\n          this.getChildControl(\"hue-saturation-handle\").setDomLeft(Math.round(value / 1.40625) + this.getChildControl(\"hue-saturation-pane\").getPaddingLeft());\n        } else {\n          this.getChildControl(\"hue-saturation-handle\").setLayoutProperties({ left : Math.round(value / 1.40625) });\n        }\n      }\n\n      switch(this.__updateContext)\n      {\n        case \"hsbSpinner\":\n        case \"hueSaturationField\":\n        case \"hueModifier\":\n          this._setRgbFromHue();\n      }\n      this._setBrightnessGradiant();\n      if (this.__updateContext === \"hueModifier\") {\n        this.__updateContext = null;\n      }\n    },\n\n\n    // property apply\n    _applySaturation : function(value, old)\n    {\n      if (this.__updateContext === null) {\n        this.__updateContext = \"saturationModifier\";\n      }\n\n      if (this.__updateContext !== \"hsbSpinner\") {\n        this.getChildControl(\"hsb-spinner-saturation\").setValue(value);\n      }\n\n      if (this.__updateContext !== \"hueSaturationField\")\n      {\n        this._setBrightnessGradiant();\n        if (this.getChildControl(\"hue-saturation-handle\").getBounds()) {\n          this.getChildControl(\"hue-saturation-handle\").setDomTop(256 - Math.round(value * 2.56) + this.getChildControl(\"hue-saturation-pane\").getPaddingTop());\n        } else {\n          this.getChildControl(\"hue-saturation-handle\").setLayoutProperties({ top : 256 - Math.round(value * 2.56)});\n        }\n      }\n\n      switch(this.__updateContext)\n      {\n        case \"hsbSpinner\":\n        case \"hueSaturationField\":\n        case \"saturationModifier\":\n          this._setRgbFromHue();\n      }\n\n      if (this.__updateContext === \"saturationModifier\") {\n        this.__updateContext = null;\n      }\n    },\n\n\n    // property apply\n    _applyBrightness : function(value, old)\n    {\n      if (this.__updateContext === null) {\n        this.__updateContext = \"brightnessModifier\";\n      }\n\n      if (this.__updateContext !== \"hsbSpinner\") {\n        this.getChildControl(\"hsb-spinner-brightness\").setValue(value);\n      }\n\n      if (this.__updateContext !== \"brightnessField\")\n      {\n        var topValue = 256 - Math.round(value * 2.56);\n\n        if (this.getChildControl(\"brightness-handle\").getBounds()) {\n          this.getChildControl(\"brightness-handle\").setDomTop(topValue + this.getChildControl(\"brightness-pane\").getPaddingTop());\n        } else {\n          this.getChildControl(\"brightness-handle\").setLayoutProperties({ top : topValue });\n        }\n      }\n\n      switch(this.__updateContext)\n      {\n        case \"hsbSpinner\":\n        case \"brightnessField\":\n        case \"brightnessModifier\":\n          this._setRgbFromHue();\n      }\n\n      if (this.__updateContext === \"brightnessModifier\") {\n        this.__updateContext = null;\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      BRIGHTNESS IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener of pointerdown event on the brightness handle.\n     * Adjusts the color by changing the brightness.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onBrightnessHandlePointerDown : function(e)\n    {\n      // Activate Capturing\n      this.getChildControl(\"brightness-handle\").capture();\n      this.__capture = \"brightness-handle\";\n\n      // Calculate subtract: Position of Brightness Field - Current Pointer Offset\n      var locationBrightnessField = this.getChildControl(\"brightness-field\").getContentLocation();\n      var locationBrightnessHandle = this.getChildControl(\"brightness-handle\").getContentLocation();\n      var fieldBounds = this.getChildControl(\"brightness-field\").getBounds();\n\n      this.__brightnessSubtract = locationBrightnessField.top +\n        (e.getDocumentTop() - locationBrightnessHandle.top) - fieldBounds.top;\n\n      // Block field event handling\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener of pointerup event on the brightness handle.\n     * Releases the capture.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onBrightnessHandlePointerUp : function(e)\n    {\n      // Disabling capturing\n      this.getChildControl(\"brightness-handle\").releaseCapture();\n      this.__capture = null;\n    },\n\n\n    /**\n     * Listener of pointermove event on the brightness handle.\n     * Forwards the event to _setBrightnessOnFieldEvent().\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onBrightnessHandlePointerMove : function(e)\n    {\n      // Update if captured currently (through previous pointerdown)\n      if (this.__capture === \"brightness-handle\") {\n        this._setBrightnessOnFieldEvent(e);\n        e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Listener of pointerdown event on the brightness field.\n     * Adjusts the color by changing the brightness.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onBrightnessFieldPointerDown : function(e)\n    {\n      // Calculate substract: Half height of handler\n      var location  = this.getChildControl(\"brightness-field\").getContentLocation();\n      var bounds = this.getChildControl(\"brightness-handle\").getBounds();\n      this.__brightnessSubtract = location.top + (bounds.height / 2);\n\n      // Update\n      this._setBrightnessOnFieldEvent(e);\n\n      // Afterwards: Activate Capturing for handle\n      this.getChildControl(\"brightness-handle\").capture();\n      this.__capture = \"brightness-handle\";\n    },\n\n\n    /**\n     * Listener of roll event on the brightness pane.\n     * Adjusts the color by changing the brightness.\n     *\n     * @param e {qx.event.type.Roll} Incoming event object\n     */\n    _onBrightnessPaneRoll : function(e)\n    {\n      e.stop();\n\n      // only wheel\n      if (e.getPointerType() != \"wheel\") {\n        return;\n      }\n\n      this.setBrightness(qx.lang.Number.limit((this.getBrightness() - (e.getDelta().y / 10)), 0, 100));\n    },\n\n\n    /**\n     * Sets the brightness and moves the brightness handle.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _setBrightnessOnFieldEvent : function(e)\n    {\n      var value = qx.lang.Number.limit(e.getDocumentTop() - this.__brightnessSubtract, 0, 256);\n\n      this.__updateContext = \"brightnessField\";\n\n      if (this.getChildControl(\"brightness-handle\").getBounds()) {\n        this.getChildControl(\"brightness-handle\").setDomTop(value);\n      } else {\n        this.getChildControl(\"brightness-handle\").setLayoutProperties({ top : value });\n      }\n\n      this.setBrightness(100 - Math.round(value / 2.56));\n\n      this.__updateContext = null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HUE/SATURATION IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Listener of pointerup event on the saturation handle.\n     * Releases pointer capture.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onHueSaturationHandlePointerUp : function(e)\n    {\n      // Disabling capturing\n      if (this.__capture)\n      {\n        e.stopPropagation();\n        this.getChildControl(\"hue-saturation-handle\").releaseCapture();\n        this.__capture = null;\n      }\n    },\n\n\n    /**\n     * Listener of pointermove event on the saturation handle.\n     * Forwards the event to _onHueSaturationHandlePointerMove().\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onHueSaturationHandlePointerMove : function(e)\n    {\n\n      // Update if captured currently (through previous pointerdown)\n      if (this.__capture === \"hue-saturation-handle\")\n      {\n        this._setHueSaturationOnFieldEvent(e);\n        e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Listener of pointerdown event on the saturation field.\n     * Adjusts the color by changing the saturation.\n     * Sets pointer capture.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onHueSaturationFieldPointerDown : function(e)\n    {\n      // Calculate substract: Half width/height of handler\n      var location = this.getChildControl(\"hue-saturation-field\").getContentLocation();\n      var handleBounds = this.getChildControl(\"hue-saturation-handle\").getBounds();\n      var fieldBounds = this.getChildControl(\"hue-saturation-field\").getBounds();\n\n      this.__hueSaturationSubtractTop = location.top + (handleBounds.height / 2) - fieldBounds.top;\n      this.__hueSaturationSubtractLeft = location.left + (handleBounds.width / 2) - fieldBounds.left;\n\n      // Update\n      this._setHueSaturationOnFieldEvent(e);\n\n      // Afterwards: Activate Capturing for handle\n      this.getChildControl(\"hue-saturation-handle\").capture();\n      this.__capture = \"hue-saturation-handle\";\n    },\n\n\n    /**\n     * Listener of roll event on the saturation pane.\n     * Adjusts the color by changing the saturation.\n     *\n     * @param e {qx.event.type.Roll} Incoming event object\n     */\n    _onHueSaturationPaneRoll : function(e)\n    {\n      e.stop();\n\n      // only wheel\n      if (e.getPointerType() != \"wheel\") {\n        return;\n      }\n\n      var delta = e.getDelta();\n      this.setSaturation(qx.lang.Number.limit(this.getSaturation() - delta.y / 10, 0, 100));\n      this.setHue(qx.lang.Number.limit(this.getHue() + delta.x / 10, 0, 360));\n    },\n\n\n    /**\n     * Sets the saturation and moves the saturation handle.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _setHueSaturationOnFieldEvent : function(e)\n    {\n      var vTop = qx.lang.Number.limit(e.getDocumentTop() - this.__hueSaturationSubtractTop, 0, 256);\n      var vLeft = qx.lang.Number.limit(e.getDocumentLeft() - this.__hueSaturationSubtractLeft, 0, 256);\n\n      this.getChildControl(\"hue-saturation-handle\").setDomPosition(vLeft, vTop);\n\n      this.__updateContext = \"hueSaturationField\";\n\n      this.setSaturation(100 - Math.round(vTop / 2.56));\n      this.setHue(Math.round(vLeft * 1.40625));\n\n      this.__updateContext = null;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      RGB SPINNER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets widget's red value to spinner's value.\n     */\n    _setRedFromSpinner : function()\n    {\n      if (this.__updateContext !== null) {\n        return;\n      }\n\n      this.__updateContext = \"rgbSpinner\";\n      this.setRed(this.getChildControl(\"rgb-spinner-red\").getValue());\n      this.__updateContext = null;\n    },\n\n\n    /**\n     * Sets widget's green value to spinner's value.\n     */\n    _setGreenFromSpinner : function()\n    {\n      if (this.__updateContext !== null) {\n        return;\n      }\n\n      this.__updateContext = \"rgbSpinner\";\n      this.setGreen(this.getChildControl(\"rgb-spinner-green\").getValue());\n      this.__updateContext = null;\n    },\n\n\n    /**\n     * Sets widget's blue value to spinner's value.\n     */\n    _setBlueFromSpinner : function()\n    {\n      if (this.__updateContext !== null) {\n        return;\n      }\n\n      this.__updateContext = \"rgbSpinner\";\n      this.setBlue(this.getChildControl(\"rgb-spinner-blue\").getValue());\n      this.__updateContext = null;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HSB SPINNER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets widget's hue value to spinner's value.\n     */\n    _setHueFromSpinner : function()\n    {\n      if (this.__updateContext !== null) {\n        return;\n      }\n\n      this.__updateContext = \"hsbSpinner\";\n      this.setHue(this.getChildControl(\"hsb-spinner-hue\").getValue());\n      this.__updateContext = null;\n    },\n\n\n    /**\n     * Sets widget's saturation value to spinner's value.\n     */\n    _setSaturationFromSpinner : function()\n    {\n      if (this.__updateContext !== null) {\n        return;\n      }\n\n      this.__updateContext = \"hsbSpinner\";\n      this.setSaturation(this.getChildControl(\"hsb-spinner-saturation\").getValue());\n      this.__updateContext = null;\n    },\n\n\n    /**\n     * Sets widget's brightness value to spinner's value.\n     */\n    _setBrightnessFromSpinner : function()\n    {\n      if (this.__updateContext !== null) {\n        return;\n      }\n\n      this.__updateContext = \"hsbSpinner\";\n      this.setBrightness(this.getChildControl(\"hsb-spinner-brightness\").getValue());\n      this.__updateContext = null;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HEX FIELD\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Changes red, green and blue value to the corresponding hexfield value.\n     * @param e {qx.event.type.Data} Incoming event object\n     */\n    _onHexFieldChange : function(e)\n    {\n      if (this.__updateContext !== null) {\n        return;\n      }\n\n      try\n      {\n        var hexField = this.getChildControl(\"hex-field\");\n        var rgb = qx.util.ColorUtil.hexStringToRgb(\"#\" + hexField.getValue());\n      } catch(ex) {\n        return;\n      };\n\n      this.__updateContext = \"hexField\";\n      this.setRed(rgb[0]);\n      this.setGreen(rgb[1]);\n      this.setBlue(rgb[2]);\n      this.__updateContext = null;\n    },\n\n\n    /**\n     * Sets hexfield value to it's corresponding red, green and blue value.\n     */\n    _setHexFromRgb : function()\n    {\n      var value = qx.util.ColorUtil.rgbToHexString(\n        [this.getRed(),this.getGreen(),this.getBlue()]\n      );\n\n      // get rid of the starting '#'\n      value = value.substring(1, value.length);\n\n      this.getChildControl(\"hex-field\").setValue(value);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      COLOR FIELD\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener of tap event on the color field.\n     * Sets red, green and blue values to tapped color field's background color.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onColorFieldTap : function(e)\n    {\n      var vColor = e.getTarget().getBackgroundColor();\n\n      if (!vColor) {\n        this.error(\"Missing backgroundColor value for field: \" + e.getTarget());\n        return;\n      }\n\n      var rgb = qx.util.ColorUtil.stringToRgb(vColor);\n\n      this.setRed(rgb[0]);\n      this.setGreen(rgb[1]);\n      this.setBlue(rgb[2]);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      RGB/HSB SYNC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets hue value to it's corresponding red, green and blue value.\n     */\n    _setHueFromRgb : function()\n    {\n      switch(this.__updateContext)\n      {\n        case \"hsbSpinner\":\n        case \"hueSaturationField\":\n        case \"brightnessField\":\n          break;\n\n        default:\n          var hsb = qx.util.ColorUtil.rgbToHsb([this.getRed(), this.getGreen(), this.getBlue()]);\n\n          this.setHue(hsb[0]);\n          this.setSaturation(hsb[1]);\n          this.setBrightness(hsb[2]);\n      }\n    },\n\n\n    /**\n     * Sets red, green and blue value to corresponding hue value.\n     */\n    _setRgbFromHue : function()\n    {\n      switch(this.__updateContext)\n      {\n        case \"rgbSpinner\":\n        case \"hexField\":\n          break;\n\n        default:\n          var vRgb = qx.util.ColorUtil.hsbToRgb([this.getHue(), this.getSaturation(), this.getBrightness()]);\n\n          this.setRed(vRgb[0]);\n          this.setGreen(vRgb[1]);\n          this.setBlue(vRgb[2]);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PREVIEW SYNC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets preview pane's background color to corresponding red, green and blue color values.\n     */\n    _setPreviewFromRgb : function()\n    {\n      var rgbString = qx.util.ColorUtil.rgbToRgbString([this.getRed(), this.getGreen(), this.getBlue()]);\n      this.getChildControl(\"preview-content-new\").setBackgroundColor(rgbString);\n    },\n\n\n    /**\n     * Sets previous color's to given values.\n     *\n     * @param red {Number} Red color value.\n     * @param green {Number} Green color value.\n     * @param blue {Number} Blue color value.\n     */\n    setPreviousColor : function(red, green, blue)\n    {\n      var color = qx.util.ColorUtil.rgbToRgbString([red, green, blue]);\n      this.getChildControl(\"preview-content-old\").setBackgroundColor(color);\n\n      this.setRed(red);\n      this.setGreen(green);\n      this.setBlue(blue);\n    },\n\n    /**\n     * Updates the background of the brightness field to give a nicer gradient\n     */\n    _setBrightnessGradiant : function()\n    {\n      var ColorUtil = qx.util.ColorUtil;\n      var helpRgb = ColorUtil.hsbToRgb([this.getHue(), this.getSaturation(), 255]);\n      var helpRgbString = ColorUtil.rgbToRgbString(helpRgb);\n      this.getChildControl(\"brightness-field\").setBackgroundColor(helpRgbString);\n    },\n\n    /**\n     * Listener for appear.\n     * Sets preview pane's background color to the current color.\n     *\n     * @param e {qx.event.type.Data} Incoming event object\n     */\n    _onAppear : function(e)\n    {\n      var color = qx.util.ColorUtil.rgbToRgbString([this.getRed(),\n      this.getGreen(), this.getBlue()]);\n\n      this.getChildControl(\"preview-content-old\").setBackgroundColor(color);\n      this.getChildControl(\"preview-content-new\").setBackgroundColor(color);\n    }\n  }\n});\n"
  ]
}