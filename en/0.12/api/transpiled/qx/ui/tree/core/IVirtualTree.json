{
  "className": "qx.ui.tree.core.IVirtualTree",
  "packageName": "qx.ui.tree.core",
  "name": "IVirtualTree",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 160,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2011 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Christian Hagendorn (chris_schmidt)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Interface describes the methods which the {@link qx.ui.tree.provider.WidgetProvider}\n uses for communication.</p>"
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "isShowTopLevelOpenCloseIcons": {
      "location": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 35,
          "column": 48
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return whether top level items should have an open/close button. The top\n level item item is normally the root item, but when the root is hidden,\n the root children are the top level items.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Returns <code>true</code> when top level items should\n   show open/close buttons, <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " Returns <code>true</code> when top level items should\n   show open/close buttons, <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLookupTable": {
      "location": {
        "start": {
          "line": 45,
          "column": 4
        },
        "end": {
          "line": 45,
          "column": 34
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the internal data structure. The Array index is the row and the\n value is the model item.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array} The internal data structure.",
            "type": "qx.data.Array",
            "description": " The internal data structure."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isNode": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns if the passed item is a note or a leaf.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.core.Object} Item to check.",
            "paramName": "item",
            "description": " Item to check.",
            "type": "qx.core.Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>True</code> when item is a node,\n   </code>false</code> when item is a leaf.",
            "type": "Boolean",
            "description": " <code>True</code> when item is a node,\n   </code>false</code> when item is a leaf."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isNodeOpen": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 74,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return whether the node is opened or closed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {qx.core.Object} Node to check.",
            "paramName": "node",
            "description": " Node to check.",
            "type": "qx.core.Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Returns <code>true</code> when the node is opened,\n   <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " Returns <code>true</code> when the node is opened,\n   <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLevel": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the row's nesting level.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} The row to get the nesting level.",
            "paramName": "row",
            "description": " The row to get the nesting level.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The row's nesting level or <code>null</code>.",
            "type": "Integer",
            "description": " The row's nesting level or <code>null</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hasChildren": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 102,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return whether the node has visible children or not.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {qx.core.Object} Node to check.",
            "paramName": "node",
            "description": " Node to check.",
            "type": "qx.core.Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>True</code> when the node has visible children,\n   <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>True</code> when the node has visible children,\n   <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "openNode": {
      "location": {
        "start": {
          "line": 110,
          "column": 4
        },
        "end": {
          "line": 114,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Opens the passed node.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {qx.core.Object} Node to open.",
            "paramName": "node",
            "description": " Node to open.",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "openNodeWithoutScrolling": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 126,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Opens the passed node without scrolling selected item into view.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {qx.core.Object} Node to open.",
            "paramName": "node",
            "description": " Node to open.",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "closeNode": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 138,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Closes the passed node.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {qx.core.Object} Node to close.",
            "paramName": "node",
            "description": " Node to close.",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "closeNodeWithoutScrolling": {
      "location": {
        "start": {
          "line": 146,
          "column": 4
        },
        "end": {
          "line": 150,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Closes the passed node without scrolling selected item into view.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {qx.core.Object} Node to close.",
            "paramName": "node",
            "description": " Node to close.",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelection": {
      "location": {
        "start": {
          "line": 158,
          "column": 4
        },
        "end": {
          "line": 158,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current selection.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array} The current selected elements.",
            "type": "qx.data.Array",
            "description": " The current selected elements."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}