{
  "className": "qx.ui.tree.provider.IVirtualTreeProvider",
  "packageName": "qx.ui.tree.provider",
  "name": "IVirtualTreeProvider",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 107,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2011 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Christian Hagendorn (chris_schmidt)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>This interface needs to implemented from all {@link qx.ui.tree.VirtualTree}\n providers.</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "createLayer": {
      "location": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 34,
          "column": 31
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a layer for node and leaf rendering.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.virtual.layer.Abstract} new layer.",
            "type": "qx.ui.virtual.layer.Abstract",
            "description": " new layer."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createRenderer": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 34
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a renderer for rendering.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} new node renderer.",
            "type": "var",
            "description": " new node renderer."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setChildProperty": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the name of the property, where the children are stored in the model.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} The child property name.",
            "paramName": "value",
            "description": " The child property name.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setLabelPath": {
      "location": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 67,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the name of the property, where the value for the tree folders label\n is stored in the model classes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} The label path.",
            "paramName": "value",
            "description": " The label path.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "styleSelectabled": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Styles a selected item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "styleUnselectabled": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 91,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Styles a not selected item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSelectable": {
      "location": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 105,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns if the passed row can be selected or not.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to select.",
            "paramName": "row",
            "description": " row to select.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the row can be selected,\n    <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> when the row can be selected,\n    <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}