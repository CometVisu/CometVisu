{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/provider/WidgetProvider.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "virtual",
    "IWidgetCellProvider",
    "tree",
    "provider",
    "IVirtualTreeProvider",
    "include",
    "MWidgetController",
    "construct",
    "_tree",
    "addListener",
    "_onChangeDelegate",
    "members",
    "_renderer",
    "getCellWidget",
    "row",
    "column",
    "item",
    "getLookupTable",
    "getItem",
    "hasChildren",
    "isNode",
    "widget",
    "setOpen",
    "isNodeOpen",
    "__onOpenChanged",
    "setUserData",
    "getChildProperty",
    "isShowLeafs",
    "getSelection",
    "contains",
    "_styleSelectabled",
    "_styleUnselectabled",
    "level",
    "getLevel",
    "isShowTopLevelOpenCloseIcons",
    "setOpenSymbolMode",
    "getOpenProperty",
    "setModel",
    "_bindItem",
    "queue",
    "Widget",
    "add",
    "poolCellWidget",
    "removeListener",
    "_removeBindingsFrom",
    "pool",
    "_onPool",
    "createLayer",
    "layer",
    "WidgetCell",
    "createRenderer",
    "createItem",
    "util",
    "Delegate",
    "getMethod",
    "getDelegate",
    "VirtualTreeItem",
    "renderer",
    "cell",
    "setDelegate",
    "createWidget",
    "styleSelectabled",
    "_layer",
    "getRenderedCellWidget",
    "styleUnselectabled",
    "isSelectable",
    "isEnabled",
    "updateStates",
    "selected",
    "onPool",
    "_onItemCreated",
    "event",
    "configureItem",
    "leaf",
    "getData",
    "dispose",
    "removeBindings",
    "getTarget",
    "getUserData",
    "openNodeWithoutScrolling",
    "closeNodeWithoutScrolling",
    "destruct",
    "WidgetProvider"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The provider implements the {@link qx.ui.virtual.core.IWidgetCellProvider}\n * API, which can be used as delegate for the widget cell rendering and it\n * provides a API to bind the model with the rendered item.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.tree.provider.WidgetProvider\",\n{\n  extend : qx.core.Object,\n\n  implement : [\n   qx.ui.virtual.core.IWidgetCellProvider,\n   qx.ui.tree.provider.IVirtualTreeProvider\n  ],\n\n  include : [qx.ui.tree.core.MWidgetController],\n\n\n  /**\n   * @param tree {qx.ui.tree.VirtualTree} tree to provide.\n   */\n  construct : function(tree)\n  {\n    this.base(arguments);\n\n    this._tree = tree;\n\n    this.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n    this._onChangeDelegate();\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.tree.VirtualTree} tree to provide. */\n    _tree : null,\n\n\n    /** @type {qx.ui.virtual.cell.WidgetCell} the used item renderer. */\n    _renderer : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // interface implementation\n    getCellWidget : function(row, column)\n    {\n      var item = this._tree.getLookupTable().getItem(row);\n\n      var hasChildren = false;\n      if (this._tree.isNode(item)) {\n        hasChildren = this._tree.hasChildren(item);\n      }\n\n      var widget = this._renderer.getCellWidget();\n      widget.setOpen(hasChildren && this._tree.isNodeOpen(item));\n      widget.addListener(\"changeOpen\", this.__onOpenChanged, this);\n      widget.setUserData(\"cell.childProperty\", this.getChildProperty());\n      widget.setUserData(\"cell.showLeafs\", this._tree.isShowLeafs());\n\n      if(this._tree.getSelection().contains(item)) {\n        this._styleSelectabled(widget);\n      } else {\n        this._styleUnselectabled(widget);\n      }\n\n      var level = this._tree.getLevel(row);\n      if (!this._tree.isShowTopLevelOpenCloseIcons()) {\n        level -= 1;\n      }\n      widget.setUserData(\"cell.level\", level);\n\n      if (!this._tree.isShowTopLevelOpenCloseIcons() && level == -1) {\n        widget.setOpenSymbolMode(\"never\");\n      } else {\n        widget.setOpenSymbolMode(\"auto\");\n      }\n\n      if (this._tree.getOpenProperty()) {\n        widget.setModel(item);\n      }\n\n      this._bindItem(widget, row);\n      qx.ui.core.queue.Widget.add(widget);\n\n      return widget;\n    },\n\n\n    // interface implementation\n    poolCellWidget : function(widget)\n    {\n      widget.removeListener(\"changeOpen\", this.__onOpenChanged, this);\n      this._removeBindingsFrom(widget);\n      this._renderer.pool(widget);\n      this._onPool(widget);\n    },\n\n\n    // Interface implementation\n    createLayer : function() {\n      return new qx.ui.virtual.layer.WidgetCell(this);\n    },\n\n\n    // Interface implementation\n    createRenderer : function()\n    {\n      var createItem = qx.util.Delegate.getMethod(this.getDelegate(), \"createItem\");\n\n      if (createItem == null) {\n        createItem = function() {\n          return new qx.ui.tree.VirtualTreeItem();\n        };\n      }\n\n      var renderer = new qx.ui.virtual.cell.WidgetCell();\n      renderer.setDelegate({\n        createWidget : createItem\n      });\n\n      return renderer;\n    },\n\n\n    // interface implementation\n    styleSelectabled : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      this._styleSelectabled(widget);\n    },\n\n\n    // interface implementation\n    styleUnselectabled : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      this._styleUnselectabled(widget);\n    },\n\n\n    // interface implementation\n    isSelectable : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      if (widget != null) {\n        return widget.isEnabled();\n      } else {\n        return true;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleSelectabled : function(widget) {\n      if(widget == null) {\n        return;\n      }\n\n      this._renderer.updateStates(widget, {selected: 1});\n    },\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleUnselectabled : function(widget) {\n      if(widget == null) {\n        return;\n      }\n\n      this._renderer.updateStates(widget, {});\n    },\n\n\n    /**\n     * Calls the delegate <code>onPool</code> method when it is used in the\n     * {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} Item to modify.\n     */\n    _onPool : function(item)\n    {\n      var onPool = qx.util.Delegate.getMethod(this.getDelegate(), \"onPool\");\n\n      if (onPool != null) {\n        onPool(item);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the created item's.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onItemCreated : function(event)\n    {\n      var configureItem = qx.util.Delegate.getMethod(this.getDelegate(), \"configureItem\");\n\n      if (configureItem != null) {\n        var leaf = event.getData();\n        configureItem(leaf);\n      }\n    },\n\n\n    /**\n     * Event handler for the change delegate event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onChangeDelegate : function(event)\n    {\n      if (this._renderer != null) {\n        this._renderer.dispose();\n        this.removeBindings();\n      }\n\n      this._renderer = this.createRenderer();\n      this._renderer.addListener(\"created\", this._onItemCreated, this);\n    },\n\n\n    /**\n     * Handler when a node changes opened or closed state.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    __onOpenChanged : function(event)\n    {\n      var widget = event.getTarget();\n\n      var row = widget.getUserData(\"cell.row\");\n      var item = this._tree.getLookupTable().getItem(row);\n\n      if (event.getData()) {\n        this._tree.openNodeWithoutScrolling(item);\n      } else {\n        this._tree.closeNodeWithoutScrolling(item);\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.removeBindings();\n    this._renderer.dispose();\n    this._tree = this._renderer = null;\n  }\n});\n"
  ]
}