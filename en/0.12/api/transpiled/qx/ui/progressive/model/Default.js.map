{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/model/Default.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "progressive",
    "model",
    "Abstract",
    "construct",
    "__elements",
    "members",
    "addElements",
    "elems",
    "concat",
    "fireDataEvent",
    "length",
    "addElement",
    "elem",
    "push",
    "getElementCount",
    "getNextElement",
    "element",
    "shift",
    "remaining",
    "destruct",
    "Default"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EACA;AACEC,IAAAA,MAAM,EAAON,EAAE,CAACO,EAAH,CAAMC,WAAN,CAAkBC,KAAlB,CAAwBC,QADvC;AAIEC,IAAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAKC,SAAL,GAAkB,EAAlB;AACD,KATH;AAYEC,IAAAA,OAAO,EACP;AAEED,MAAAA,SAAU,EAAG,IAFf;;AAIE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,MAAAA,WAAW,EAAG,qBAASC,KAAT,EACd;AACE;AACA,aAAKH,SAAL,GAAkB,KAAKA,SAAL,CAAgBI,MAAhB,CAAuBD,KAAvB,CAAlB,CAFF,CAIE;;AACA,aAAKE,aAAL,CAAmB,eAAnB,EAAoC,KAAKL,SAAL,CAAgBM,MAApD;AACD,OAnBH;;AAqBE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,UAAU,EAAG,oBAASC,IAAT,EACb;AACE;AACA,aAAKR,SAAL,CAAgBS,IAAhB,CAAqBD,IAArB,EAFF,CAIE;;;AACA,aAAKH,aAAL,CAAmB,eAAnB,EAAoC,KAAKL,SAAL,CAAgBM,MAApD;AACD,OApCH;AAsCE;AACAI,MAAAA,eAAe,EAAG,2BAClB;AACE,eAAO,KAAKV,SAAL,CAAgBM,MAAvB;AACD,OA1CH;AA4CE;AACAK,MAAAA,cAAc,EAAG,0BACjB;AACE;AACA,YAAI,KAAKX,SAAL,CAAgBM,MAAhB,GAAyB,CAA7B,EACA;AACE;AACA,iBACE;AACEM,YAAAA,OAAO,EAAK,KAAKZ,SAAL,CAAgBa,KAAhB,EADd;AAEEC,YAAAA,SAAS,EAAG,KAAKd,SAAL,CAAgBM;AAF9B,WADF;AAKD;;AAED,eAAO,IAAP;AACD;AA3DH,KAbF;AA2EES,IAAAA,QAAQ,EAAG,oBAAW;AACpB,WAAKf,SAAL,GAAkB,IAAlB;AACD;AA7EH,GADA;AArBAZ,EAAAA,EAAE,CAACO,EAAH,CAAMC,WAAN,CAAkBC,KAAlB,CAAwBmB,OAAxB,CAAgCzB,aAAhC,GAAgDA,aAAhD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Data Model for Progressive renderer.\n */\nqx.Class.define(\"qx.ui.progressive.model.Default\",\n{\n  extend     : qx.ui.progressive.model.Abstract,\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__elements = [ ];\n  },\n\n\n  members :\n  {\n\n    __elements : null,\n\n    /**\n     * Add elements to be progressively rendered.  Each element must be an\n     * object which contains at least two members: renderer (the renderer\n     * name) and data.\n     *\n     * @param elems {Array}\n     *   An array of elements to be added to the element queue\n     */\n    addElements : function(elems)\n    {\n      // Add the new elements to our elements queue.\n      this.__elements = this.__elements.concat(elems);\n\n      // Tell Progressive that data is available\n      this.fireDataEvent(\"dataAvailable\", this.__elements.length);\n    },\n\n    /**\n     * Add a single element to be progressively rendered.  The element must\n     * be an object which contains at least two members: renderer (the\n     * renderer name) and data.\n     *\n     * @param elem {var}\n     *   An element to be added to the element queue\n     */\n    addElement : function(elem)\n    {\n      // Add the new elements to our elements queue.\n      this.__elements.push(elem);\n\n      // Tell Progressive that data is available\n      this.fireDataEvent(\"dataAvailable\", this.__elements.length);\n    },\n\n    // overridden\n    getElementCount : function()\n    {\n      return this.__elements.length;\n    },\n\n    // overridden\n    getNextElement : function()\n    {\n      // Do we have any remaining elements?\n      if (this.__elements.length > 0)\n      {\n        // Yup.  Give 'em the first one and remove it from our queue.\n        return(\n          {\n            element   : this.__elements.shift(),\n            remaining : this.__elements.length\n          });\n      }\n\n      return null;\n    }\n  },\n\n  destruct : function() {\n    this.__elements = null;\n  }\n});\n"
  ]
}