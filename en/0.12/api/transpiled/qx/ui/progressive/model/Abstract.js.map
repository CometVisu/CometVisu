{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/ui/progressive/model/Abstract.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "events",
    "members",
    "getElementCount",
    "Error",
    "getNextElement",
    "ui",
    "progressive",
    "model",
    "Abstract"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AAGAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kCAAhB,EACA;AACEC,IAAAA,IAAI,EAAS,UADf;AAEEC,IAAAA,MAAM,EAAOP,EAAE,CAACQ,IAAH,CAAQC,MAFvB;AAKEC,IAAAA,MAAM,EACN;AACE;;;;;;;AAOA,uBAAkB;AARpB,KANF;AAkBEC,IAAAA,OAAO,EACP;AACE;;;;;;AAMAC,MAAAA,eAAe,EAAG,2BAClB;AACE,cAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD,OAVH;;AAYE;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAC,MAAAA,cAAc,EAAG,0BACjB;AACE,cAAM,IAAID,KAAJ,CAAU,8BAAV,CAAN;AACD;AAxCH;AAnBF,GADA;AArBAb,EAAAA,EAAE,CAACe,EAAH,CAAMC,WAAN,CAAkBC,KAAlB,CAAwBC,QAAxB,CAAiCf,aAAjC,GAAiDA,aAAjD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Data Model for Progressive renderer.\n */\nqx.Class.define(\"qx.ui.progressive.model.Abstract\",\n{\n  type       : \"abstract\",\n  extend     : qx.core.Object,\n\n\n  events :\n  {\n    /**\n     * This event is fired when new data has been added to the data model.  It\n     * typically informs Progressive to begin its rendering process.\n     *\n     * The event data is an integer: the number of elements now available on\n     * the element queue.\n     */\n    \"dataAvailable\" : \"qx.event.type.Data\"\n  },\n\n\n  members :\n  {\n    /**\n     * Get the number of data elements currently available.\n     *\n     * @throws {Error} An error if this method is called.\n     * @return {Integer}\n     */\n    getElementCount : function()\n    {\n      throw new Error(\"getElementCount() is abstract\");\n    },\n\n    /**\n     * Get the next available element from the data model.\n     *\n     * @throws {Error} An error if this method is called.\n     * @return {Object}\n     *   The returned object must provide at least the following members:\n     *   <dl>\n     *     <dt>\n     *       renderer</dt>\n     *     <dd>\n     *       The name of a renderer.  That name is used by {@link\n     *       qx.ui.progressive.Progressive} to select the renderer to be used\n     *       to render this element.  The name should match one provided to\n     *       {@link qx.ui.progressive.Progressive#addRenderer}.\n     *     </dd>\n     *\n     *     <dt>\n     *       data\n     *     </dt>\n     *     <dd>\n     *       The data to be passed to the renderer.  The data may be of any\n     *       type that the renderer knows how to render.\n     *     </dd>\n     *   </dl>\n     */\n    getNextElement : function()\n    {\n      throw new Error(\"getNextElement() is abstract\");\n    }\n  }\n});\n"
  ]
}