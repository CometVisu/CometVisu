{
  "className": "qx.ui.progressive.renderer.table.cell.Abstract",
  "packageName": "qx.ui.progressive.renderer.table.cell",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 80,
        "column": 0
      },
      "end": {
        "line": 169,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2008 Derrell Lipman\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Derrell Lipman (derrell)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Cell Renderer for Progressive's Table.\n Many of the methods in this class accept a parameter called cellInfo.  This\n parameter is an object with the following members:\n </p>\n<dl>\n   <dt>\n     state\n   </dt>\n   <dd>\n     The {@link qx.ui.progressive.State} object pertaining to this rendering\n     session.\n   </dd>\n   <dt>\n     rowDiv\n   </dt>\n   <dd>\n     The \"div\" DOM element of the row in which this cell is to be added.\n   </dd>\n   <dt>\n     element\n   </dt>\n   <dd>\n     The entire element object returned by the data model.\n   </dd>\n   <dt>\n     dataIndex\n   </dt>\n   <dd>\n     The index into the data element provided by the data model.\n     Effectively, this is the column number.\n   </dd>\n   <dt>\n     cellData\n   </dt>\n   <dd>\n     The data from the data model, to be rendered.  This the specific column\n     data for the column being rendered, and is a shorthand for\n     element.data[element.dataIndex].\n   </dd>\n   <dt>\n     height <span style=\"color:red;\">Input/Output parameter!</span>\n   </dt>\n   <dd>\n     On input to a cell renderer, this contains the height, as determined to\n     date, for the current row.  The first column being rendered will\n     receive a height of zero.  Upon return, it may leave the height at\n     zero, meaning that it will accept any minimum height, or may specify a\n     minimum height by setting this member.  Subsequent column cell renderers\n     will receive the maximum height specified by any previous cell\n     renderer.  Upon completion of calling each of the cell renderers for a\n     row, the row height will be set to the value found in this member.\n   </dd>\n </dl>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "members": {
    "_getCellStyle": {
      "location": {
        "start": {
          "line": 99,
          "column": 4
        },
        "end": {
          "line": 102,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieve any style characteristics the cell renderer wants applied to\n this cell.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Object}\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "paramName": "cellInfo",
            "description": "\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   The style characteristics to be applied to this cell.",
            "type": "qx.ui.progressive.renderer.table.cell.String",
            "description": "\n   The style characteristics to be applied to this cell."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellExtras": {
      "location": {
        "start": {
          "line": 116,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieve any extra attributes the cell renderer wants applied to this\n cell.  Extra attributes could be such things as\n \"onclick='handleClick()';\"</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Object}\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "paramName": "cellInfo",
            "description": "\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   The extra attributes to be applied to this cell.",
            "type": "qx.ui.progressive.renderer.table.cell.String",
            "description": "\n   The extra attributes to be applied to this cell."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getContentHtml": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieve the HTML content to be added to the cell div.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Object}\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "paramName": "cellInfo",
            "description": "\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   The HTML content to be added to the cell div.",
            "type": "qx.ui.progressive.renderer.table.cell.String",
            "description": "\n   The HTML content to be added to the cell div."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "render": {
      "location": {
        "start": {
          "line": 147,
          "column": 4
        },
        "end": {
          "line": 167,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Given the provided cell information, generate the HTML for this\n cell.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Object}\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "paramName": "cellInfo",
            "description": "\n   See {@link qx.ui.progressive.renderer.table.cell.Abstract} class\n   description for details",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   The HTML required to create this cell.",
            "type": "qx.ui.progressive.renderer.table.cell.String",
            "description": "\n   The HTML required to create this cell."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "descendants": [
    "qx.ui.progressive.renderer.table.cell.Conditional",
    "qx.ui.progressive.renderer.table.cell.Default",
    "qx.ui.progressive.renderer.table.cell.Html",
    "qx.ui.progressive.renderer.table.cell.Icon",
    "qx.ui.progressive.renderer.table.cell.String"
  ]
}