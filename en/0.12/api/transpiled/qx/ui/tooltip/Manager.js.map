{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/tooltip/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "event",
    "Registration",
    "addListener",
    "document",
    "body",
    "__onPointerOverRoot",
    "__showTimer",
    "Timer",
    "__onShowInterval",
    "__hideTimer",
    "__onHideInterval",
    "__pointerPosition",
    "left",
    "top",
    "properties",
    "current",
    "check",
    "nullable",
    "apply",
    "showInvalidToolTips",
    "init",
    "showToolTips",
    "members",
    "__sharedToolTip",
    "__sharedErrorToolTip",
    "getSharedTooltip",
    "ui",
    "tooltip",
    "ToolTip",
    "set",
    "rich",
    "getSharedErrorTooltip",
    "appearance",
    "setLabel",
    "syncAppearance",
    "_applyCurrent",
    "value",
    "old",
    "Widget",
    "contains",
    "isDisposed",
    "exclude",
    "stop",
    "el",
    "startWith",
    "getShowTimeout",
    "__onPointerOutRoot",
    "__onFocusOutRoot",
    "__onPointerMoveRoot",
    "removeListener",
    "e",
    "getCurrent",
    "getHideTimeout",
    "getPlaceMethod",
    "placeToWidget",
    "getOpener",
    "placeToPoint",
    "show",
    "getAutoHide",
    "resetCurrent",
    "pos",
    "Math",
    "round",
    "getDocumentLeft",
    "getDocumentTop",
    "target",
    "getWidgetByElement",
    "getTarget",
    "showToolTip",
    "tooltipText",
    "tooltipIcon",
    "invalidMessage",
    "getToolTip",
    "getToolTipText",
    "getToolTipIcon",
    "hasInterface",
    "constructor",
    "form",
    "IForm",
    "isValid",
    "getInvalidMessage",
    "getLayoutParent",
    "getEnabled",
    "isShowToolTipWhenDisabled",
    "isBlockToolTip",
    "getShowToolTips",
    "getShowInvalidToolTips",
    "label",
    "icon",
    "setCurrent",
    "setOpener",
    "related",
    "getRelatedTarget",
    "getPointerType",
    "destruct",
    "_disposeObjects",
    "Manager"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;AAKAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EACA;AACEC,IAAAA,IAAI,EAAG,WADT;AAEEC,IAAAA,MAAM,EAAGP,EAAE,CAACQ,IAAH,CAAQC,MAFnB;;AAME;;;;;AAMAC,IAAAA,SAAS,EAAG,qBACZ;AACE,4CADF,CAGE;;AACAV,MAAAA,EAAE,CAACW,KAAH,CAASC,YAAT,CAAsBC,WAAtB,CAAkCC,QAAQ,CAACC,IAA3C,EAAiD,aAAjD,EAAgE,KAAKC,mBAArE,EAA0F,IAA1F,EAAgG,IAAhG,EAJF,CAME;;AACA,WAAKC,WAAL,GAAmB,IAAIjB,EAAE,CAACW,KAAH,CAASO,KAAb,EAAnB;;AACA,WAAKD,WAAL,CAAiBJ,WAAjB,CAA6B,UAA7B,EAAyC,KAAKM,gBAA9C,EAAgE,IAAhE;;AAEA,WAAKC,WAAL,GAAmB,IAAIpB,EAAE,CAACW,KAAH,CAASO,KAAb,EAAnB;;AACA,WAAKE,WAAL,CAAiBP,WAAjB,CAA6B,UAA7B,EAAyC,KAAKQ,gBAA9C,EAAgE,IAAhE,EAXF,CAaE;;;AACA,WAAKC,iBAAL,GAAyB;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,GAAG,EAAE;AAAhB,OAAzB;AACD,KA5BH;;AAiCE;;;;;AAMAC,IAAAA,UAAU,EACV;AACE;AACAC,MAAAA,OAAO,EACP;AACEC,QAAAA,KAAK,EAAG,uBADV;AAEEC,QAAAA,QAAQ,EAAG,IAFb;AAGEC,QAAAA,KAAK,EAAG;AAHV,OAHF;;AASE;AACAC,MAAAA,mBAAmB,EACnB;AACEH,QAAAA,KAAK,EAAG,SADV;AAEEI,QAAAA,IAAI,EAAG;AAFT,OAXF;;AAgBE;AACAC,MAAAA,YAAY,EACZ;AACEL,QAAAA,KAAK,EAAG,SADV;AAEEI,QAAAA,IAAI,EAAG;AAFT;AAlBF,KAxCF;;AAmEE;;;;;AAMAE,IAAAA,OAAO,EACP;AACEX,MAAAA,iBAAiB,EAAG,IADtB;AAEEF,MAAAA,WAAW,EAAG,IAFhB;AAGEH,MAAAA,WAAW,EAAG,IAHhB;AAIEiB,MAAAA,eAAe,EAAE,IAJnB;AAKEC,MAAAA,oBAAoB,EAAE,IALxB;;AAQE;;;;;;;;;AASAC,MAAAA,gBAAgB,EAAG,4BACnB;AACE,YAAI,CAAC,KAAKF,eAAV,EACA;AACE,eAAKA,eAAL,GAAuB,IAAIlC,EAAE,CAACqC,EAAH,CAAMC,OAAN,CAAcC,OAAlB,GAA4BC,GAA5B,CAAgC;AACrDC,YAAAA,IAAI,EAAE;AAD+C,WAAhC,CAAvB;AAGD;;AACD,eAAO,KAAKP,eAAZ;AACD,OA1BH;;AA6BE;;;;;;;;;;AAUAQ,MAAAA,qBAAqB,EAAG,iCACxB;AACE,YAAI,CAAC,KAAKP,oBAAV,EACA;AACE,eAAKA,oBAAL,GAA4B,IAAInC,EAAE,CAACqC,EAAH,CAAMC,OAAN,CAAcC,OAAlB,GAA4BC,GAA5B,CAAgC;AAC1DG,YAAAA,UAAU,EAAE,eAD8C;AAE1DF,YAAAA,IAAI,EAAE;AAFoD,WAAhC,CAA5B;;AAIA,eAAKN,oBAAL,CAA0BS,QAA1B,CAAmC,EAAnC,EALF,CAK0C;;;AACxC,eAAKT,oBAAL,CAA0BU,cAA1B;AACD;;AAED,eAAO,KAAKV,oBAAZ;AACD,OApDH;;AAuDE;;;;;AAMA;AACAW,MAAAA,aAAa,EAAG,uBAASC,KAAT,EAAgBC,GAAhB,EAChB;AACE;AACA,YAAIA,GAAG,IAAIhD,EAAE,CAACqC,EAAH,CAAM7B,IAAN,CAAWyC,MAAX,CAAkBC,QAAlB,CAA2BF,GAA3B,EAAgCD,KAAhC,CAAX,EAAmD;AACjD;AACD,SAJH,CAME;;;AACA,YAAIC,GAAJ,EACA;AACE,cAAI,CAACA,GAAG,CAACG,UAAJ,EAAL,EAAuB;AACrBH,YAAAA,GAAG,CAACI,OAAJ;AACD;;AAED,eAAKnC,WAAL,CAAiBoC,IAAjB;;AACA,eAAKjC,WAAL,CAAiBiC,IAAjB;AACD;;AAED,YAAIzC,YAAY,GAAGZ,EAAE,CAACW,KAAH,CAASC,YAA5B;AACA,YAAI0C,EAAE,GAAGxC,QAAQ,CAACC,IAAlB,CAlBF,CAmBE;;AACA,YAAIgC,KAAJ,EACA;AACE,eAAK9B,WAAL,CAAiBsC,SAAjB,CAA2BR,KAAK,CAACS,cAAN,EAA3B,EADF,CAGE;;;AACA5C,UAAAA,YAAY,CAACC,WAAb,CAAyByC,EAAzB,EAA6B,YAA7B,EAA2C,KAAKG,kBAAhD,EAAoE,IAApE,EAA0E,IAA1E;AACA7C,UAAAA,YAAY,CAACC,WAAb,CAAyByC,EAAzB,EAA6B,UAA7B,EAAyC,KAAKI,gBAA9C,EAAgE,IAAhE,EAAsE,IAAtE;AACA9C,UAAAA,YAAY,CAACC,WAAb,CAAyByC,EAAzB,EAA6B,aAA7B,EAA4C,KAAKK,mBAAjD,EAAsE,IAAtE,EAA4E,IAA5E;AACD,SARD,MAUA;AACE;AACA/C,UAAAA,YAAY,CAACgD,cAAb,CAA4BN,EAA5B,EAAgC,YAAhC,EAA8C,KAAKG,kBAAnD,EAAuE,IAAvE,EAA6E,IAA7E;AACA7C,UAAAA,YAAY,CAACgD,cAAb,CAA4BN,EAA5B,EAAgC,UAAhC,EAA4C,KAAKI,gBAAjD,EAAmE,IAAnE,EAAyE,IAAzE;AACA9C,UAAAA,YAAY,CAACgD,cAAb,CAA4BN,EAA5B,EAAgC,aAAhC,EAA+C,KAAKK,mBAApD,EAAyE,IAAzE,EAA+E,IAA/E;AACD;AACF,OAnGH;;AAwGE;;;;;;AAMA;;;;;AAKAxC,MAAAA,gBAAgB,EAAG,0BAAS0C,CAAT,EACnB;AACE,YAAInC,OAAO,GAAG,KAAKoC,UAAL,EAAd;;AACA,YAAIpC,OAAO,IAAI,CAACA,OAAO,CAACyB,UAAR,EAAhB,EACA;AACE,eAAK/B,WAAL,CAAiBmC,SAAjB,CAA2B7B,OAAO,CAACqC,cAAR,EAA3B;;AAEA,cAAIrC,OAAO,CAACsC,cAAR,MAA4B,QAAhC,EAA0C;AACxCtC,YAAAA,OAAO,CAACuC,aAAR,CAAsBvC,OAAO,CAACwC,SAAR,EAAtB;AACD,WAFD,MAEO;AACLxC,YAAAA,OAAO,CAACyC,YAAR,CAAqB,KAAK7C,iBAA1B;AACD;;AAEDI,UAAAA,OAAO,CAAC0C,IAAR;AACD;;AAED,aAAKnD,WAAL,CAAiBoC,IAAjB;AACD,OApIH;;AAuIE;;;;;AAKAhC,MAAAA,gBAAgB,EAAG,0BAASwC,CAAT,EACnB;AACE,YAAInC,OAAO,GAAG,KAAKoC,UAAL,EAAd;;AAEA,YAAGpC,OAAO,IAAI,CAACA,OAAO,CAAC2C,WAAR,EAAf,EAAsC;AACpC;AACD;;AAED,YAAI3C,OAAO,IAAI,CAACA,OAAO,CAACyB,UAAR,EAAhB,EAAsC;AACpCzB,UAAAA,OAAO,CAAC0B,OAAR;AACD;;AAED,aAAKhC,WAAL,CAAiBiC,IAAjB;;AACA,aAAKiB,YAAL;AACD,OA1JH;;AA+JE;;;;;;AAMA;;;;;AAKAX,MAAAA,mBAAmB,EAAG,6BAASE,CAAT,EACtB;AACE,YAAIU,GAAG,GAAG,KAAKjD,iBAAf;AAEAiD,QAAAA,GAAG,CAAChD,IAAJ,GAAWiD,IAAI,CAACC,KAAL,CAAWZ,CAAC,CAACa,eAAF,EAAX,CAAX;AACAH,QAAAA,GAAG,CAAC/C,GAAJ,GAAUgD,IAAI,CAACC,KAAL,CAAWZ,CAAC,CAACc,cAAF,EAAX,CAAV;AACD,OAhLH;;AAmLE;;;;;;;AAOA3D,MAAAA,mBAAmB,EAAG,6BAAS6C,CAAT,EACtB;AACE,YAAIe,MAAM,GAAG5E,EAAE,CAACqC,EAAH,CAAM7B,IAAN,CAAWyC,MAAX,CAAkB4B,kBAAlB,CAAqChB,CAAC,CAACiB,SAAF,EAArC,CAAb,CADF,CAEE;;AACA,aAAKnB,mBAAL,CAAyBE,CAAzB;;AACA,aAAKkB,WAAL,CAAiBH,MAAjB;AACD,OAhMH;;AAmME;;;;;AAKAG,MAAAA,WAAW,EAAG,qBAASH,MAAT,EAAiB;AAC7B,YAAI,CAACA,MAAL,EAAY;AACV;AACD;;AAED,YAAItC,OAAJ,EACI0C,WADJ,EAEIC,WAFJ,EAGIC,cAHJ,CAL6B,CAU7B;;AACA,eAAON,MAAM,IAAI,IAAjB,EACA;AACEtC,UAAAA,OAAO,GAAGsC,MAAM,CAACO,UAAP,EAAV;AACAH,UAAAA,WAAW,GAAGJ,MAAM,CAACQ,cAAP,MAA2B,IAAzC;AACAH,UAAAA,WAAW,GAAGL,MAAM,CAACS,cAAP,MAA2B,IAAzC;;AACA,cAAIrF,EAAE,CAACI,KAAH,CAASkF,YAAT,CAAsBV,MAAM,CAACW,WAA7B,EAA0CvF,EAAE,CAACqC,EAAH,CAAMmD,IAAN,CAAWC,KAArD,KACG,CAACb,MAAM,CAACc,OAAP,EADR,EAC0B;AACxBR,YAAAA,cAAc,GAAGN,MAAM,CAACe,iBAAP,EAAjB;AACD;;AAED,cAAIrD,OAAO,IAAI0C,WAAX,IAA0BC,WAA1B,IAAyCC,cAA7C,EAA6D;AAC3D;AACD;;AAEDN,UAAAA,MAAM,GAAGA,MAAM,CAACgB,eAAP,EAAT;AACD,SA1B4B,CA4B7B;;;AACA,YAAI,CAAChB,MAAD,CAAQ;AACR;AADA,WAEI,CAACA,MAAM,CAACiB,UAAP,EAAD,IAAwB,CAACjB,MAAM,CAACkB,yBAAP,EAF7B,CAGA;AAHA,WAIGlB,MAAM,CAACmB,cAAP,EAJH,CAKA;AALA,WAMI,CAACb,cAAD,IAAmB,CAAC,KAAKc,eAAL,EANxB,CAOA;AAPA,WAQId,cAAc,IAAI,CAAC,KAAKe,sBAAL,EAR3B,EASA;AACE;AACD;;AAED,YAAIf,cAAJ,EACA;AACE5C,UAAAA,OAAO,GAAG,KAAKI,qBAAL,GAA6BF,GAA7B,CAAiC;AACzC0D,YAAAA,KAAK,EAAEhB;AADkC,WAAjC,CAAV;AAGD;;AACD,YAAI,CAAC5C,OAAL,EACA;AACEA,UAAAA,OAAO,GAAG,KAAKF,gBAAL,GAAwBI,GAAxB,CAA4B;AACpC0D,YAAAA,KAAK,EAAElB,WAD6B;AAEpCmB,YAAAA,IAAI,EAAElB;AAF8B,WAA5B,CAAV;AAID;;AACD,aAAKmB,UAAL,CAAgB9D,OAAhB;AACAA,QAAAA,OAAO,CAAC+D,SAAR,CAAkBzB,MAAlB;AACD,OAjQH;;AAoQE;;;;;;AAMAnB,MAAAA,kBAAkB,EAAG,4BAASI,CAAT,EACrB;AACE,YAAIe,MAAM,GAAG5E,EAAE,CAACqC,EAAH,CAAM7B,IAAN,CAAWyC,MAAX,CAAkB4B,kBAAlB,CAAqChB,CAAC,CAACiB,SAAF,EAArC,CAAb;;AACA,YAAI,CAACF,MAAL,EAAa;AACX;AACD;;AAED,YAAI0B,OAAO,GAAGtG,EAAE,CAACqC,EAAH,CAAM7B,IAAN,CAAWyC,MAAX,CAAkB4B,kBAAlB,CAAqChB,CAAC,CAAC0C,gBAAF,EAArC,CAAd;;AACA,YAAI,CAACD,OAAD,IAAYzC,CAAC,CAAC2C,cAAF,MAAsB,OAAtC,EAA+C;AAC7C;AACD;;AAED,YAAIlE,OAAO,GAAG,KAAKwB,UAAL,EAAd,CAXF,CAaE;AACA;AACA;AACA;;AACA,YAAIxB,OAAO,KAAKgE,OAAO,IAAIhE,OAAX,IAAsBtC,EAAE,CAACqC,EAAH,CAAM7B,IAAN,CAAWyC,MAAX,CAAkBC,QAAlB,CAA2BZ,OAA3B,EAAoCgE,OAApC,CAA3B,CAAX,EAAqF;AACnF;AACD,SAnBH,CAqBE;;;AACA,YAAIA,OAAO,IAAI1B,MAAX,IAAqB5E,EAAE,CAACqC,EAAH,CAAM7B,IAAN,CAAWyC,MAAX,CAAkBC,QAAlB,CAA2B0B,MAA3B,EAAmC0B,OAAnC,CAAzB,EAAsE;AACpE;AACD;;AAED,YAAGhE,OAAO,IAAI,CAACA,OAAO,CAAC+B,WAAR,EAAf,EAAsC;AACpC;AACD,SA5BH,CA8BE;;;AACA,YAAI/B,OAAO,IAAI,CAACgE,OAAhB,EAAyB;AACvB,eAAKF,UAAL,CAAgB,IAAhB;AACD,SAFD,MAEO;AACL,eAAK9B,YAAL;AACD;AACF,OA/SH;;AAoTE;;;;;;AAOA;;;;;;AAMAZ,MAAAA,gBAAgB,EAAG,0BAASG,CAAT,EACnB;AACE,YAAIe,MAAM,GAAG5E,EAAE,CAACqC,EAAH,CAAM7B,IAAN,CAAWyC,MAAX,CAAkB4B,kBAAlB,CAAqChB,CAAC,CAACiB,SAAF,EAArC,CAAb;;AACA,YAAI,CAACF,MAAL,EAAa;AACX;AACD;;AAED,YAAItC,OAAO,GAAG,KAAKwB,UAAL,EAAd;;AAEA,YAAGxB,OAAO,IAAI,CAACA,OAAO,CAAC+B,WAAR,EAAf,EAAsC;AACpC;AACD,SAVH,CAYE;AACA;;;AACA,YAAI/B,OAAO,IAAIA,OAAO,IAAIsC,MAAM,CAACO,UAAP,EAA1B,EAA+C;AAC7C,eAAKiB,UAAL,CAAgB,IAAhB;AACD;AACF;AAnVH,KA1EF;;AAkaE;;;;;AAMAK,IAAAA,QAAQ,EAAG,oBACX;AACE;AACAzG,MAAAA,EAAE,CAACW,KAAH,CAASC,YAAT,CAAsBgD,cAAtB,CAAqC9C,QAAQ,CAACC,IAA9C,EAAoD,aAApD,EAAmE,KAAKC,mBAAxE,EAA6F,IAA7F,EAAmG,IAAnG,EAFF,CAIE;;AACA,WAAK0F,eAAL,CAAqB,aAArB,EAAoC,aAApC,EAAmD,iBAAnD;;AACA,WAAKpF,iBAAL,GAAyB,IAAzB;AACD;AAhbH,GADA;AAzBAtB,EAAAA,EAAE,CAACqC,EAAH,CAAMC,OAAN,CAAcqE,OAAd,CAAsBxG,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * The tooltip manager globally manages the tooltips of all widgets. It will\n * display tooltips if the user hovers a widgets with a tooltip and hides all\n * other tooltips.\n */\nqx.Class.define(\"qx.ui.tooltip.Manager\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Register events\n    qx.event.Registration.addListener(document.body, \"pointerover\", this.__onPointerOverRoot, this, true);\n\n    // Instantiate timers\n    this.__showTimer = new qx.event.Timer();\n    this.__showTimer.addListener(\"interval\", this.__onShowInterval, this);\n\n    this.__hideTimer = new qx.event.Timer();\n    this.__hideTimer.addListener(\"interval\", this.__onHideInterval, this);\n\n    // Init pointer position\n    this.__pointerPosition = { left: 0, top: 0 };\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Holds the current ToolTip instance */\n    current :\n    {\n      check : \"qx.ui.tooltip.ToolTip\",\n      nullable : true,\n      apply : \"_applyCurrent\"\n    },\n\n    /** Show all invalid form fields tooltips . */\n    showInvalidToolTips :\n    {\n      check : \"Boolean\",\n      init : true\n    },\n\n    /** Show all tooltips. */\n    showToolTips :\n    {\n      check : \"Boolean\",\n      init : true\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __pointerPosition : null,\n    __hideTimer : null,\n    __showTimer : null,\n    __sharedToolTip: null,\n    __sharedErrorToolTip: null,\n\n\n    /**\n     * Get the shared tooltip, which is used to display the\n     * {@link qx.ui.core.Widget#toolTipText} and\n     * {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n     * You can use this public shared instance to e.g. customize the\n     * look and feel.\n     *\n     * @return {qx.ui.tooltip.ToolTip} The shared tooltip\n     */\n    getSharedTooltip : function()\n    {\n      if (!this.__sharedToolTip)\n      {\n        this.__sharedToolTip = new qx.ui.tooltip.ToolTip().set({\n          rich: true\n        });\n      }\n      return this.__sharedToolTip;\n    },\n\n\n    /**\n     * Get the shared tooltip, which is used to display the\n     * {@link qx.ui.core.Widget#toolTipText} and\n     * {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n     * You can use this public shared instance to e.g. customize the\n     * look and feel of the validation tooltips like\n     * <code>getSharedErrorTooltip().getChildControl(\"atom\").getChildControl(\"label\").set({rich: true, wrap: true, width: 80})</code>\n     *\n     * @return {qx.ui.tooltip.ToolTip} The shared tooltip\n     */\n    getSharedErrorTooltip : function()\n    {\n      if (!this.__sharedErrorToolTip)\n      {\n        this.__sharedErrorToolTip = new qx.ui.tooltip.ToolTip().set({\n          appearance: \"tooltip-error\",\n          rich: true\n        });\n        this.__sharedErrorToolTip.setLabel(\"\"); // trigger label widget creation\n        this.__sharedErrorToolTip.syncAppearance();\n      }\n\n      return this.__sharedErrorToolTip;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyCurrent : function(value, old)\n    {\n      // Return if the new tooltip is a child of the old one\n      if (old && qx.ui.core.Widget.contains(old, value)) {\n        return;\n      }\n\n      // If old tooltip existing, hide it and clear widget binding\n      if (old)\n      {\n        if (!old.isDisposed()) {\n          old.exclude();\n        }\n\n        this.__showTimer.stop();\n        this.__hideTimer.stop();\n      }\n\n      var Registration = qx.event.Registration;\n      var el = document.body;\n      // If new tooltip is not null, set it up and start the timer\n      if (value)\n      {\n        this.__showTimer.startWith(value.getShowTimeout());\n\n        // Register hide handler\n        Registration.addListener(el, \"pointerout\", this.__onPointerOutRoot, this, true);\n        Registration.addListener(el, \"focusout\", this.__onFocusOutRoot, this, true);\n        Registration.addListener(el, \"pointermove\", this.__onPointerMoveRoot, this, true);\n      }\n      else\n      {\n        // Deregister hide handler\n        Registration.removeListener(el, \"pointerout\", this.__onPointerOutRoot, this, true);\n        Registration.removeListener(el, \"focusout\", this.__onFocusOutRoot, this, true);\n        Registration.removeListener(el, \"pointermove\", this.__onPointerMoveRoot, this, true);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMER EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for the interval event of the show timer.\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    __onShowInterval : function(e)\n    {\n      var current = this.getCurrent();\n      if (current && !current.isDisposed())\n      {\n        this.__hideTimer.startWith(current.getHideTimeout());\n\n        if (current.getPlaceMethod() == \"widget\") {\n          current.placeToWidget(current.getOpener());\n        } else {\n          current.placeToPoint(this.__pointerPosition);\n        }\n\n        current.show();\n      }\n\n      this.__showTimer.stop();\n    },\n\n\n    /**\n     * Event listener for the interval event of the hide timer.\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    __onHideInterval : function(e)\n    {\n      var current = this.getCurrent();\n\n      if(current && !current.getAutoHide()) {\n        return;\n      }\n\n      if (current && !current.isDisposed()) {\n        current.exclude();\n      }\n\n      this.__hideTimer.stop();\n      this.resetCurrent();\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Global pointer move event handler\n     *\n     * @param e {qx.event.type.Pointer} The move pointer event\n     */\n    __onPointerMoveRoot : function(e)\n    {\n      var pos = this.__pointerPosition;\n\n      pos.left = Math.round(e.getDocumentLeft());\n      pos.top = Math.round(e.getDocumentTop());\n    },\n\n\n    /**\n     * Searches for the tooltip of the target widget. If any tooltip instance\n     * is found this instance is bound to the target widget and the tooltip is\n     * set as {@link #current}\n     *\n     * @param e {qx.event.type.Pointer} pointerover event\n     */\n    __onPointerOverRoot : function(e)\n    {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      // take first coordinates as backup if no move event will be fired (e.g. touch devices)\n      this.__onPointerMoveRoot(e);\n      this.showToolTip(target);\n    },\n\n\n    /**\n     * Explicitly show tooltip for particular form item.\n     *\n     * @param target {Object | null} widget to show tooltip for\n     */\n    showToolTip : function(target) {\n      if (!target){\n        return;\n      }\n\n      var tooltip,\n          tooltipText,\n          tooltipIcon,\n          invalidMessage;\n\n      // Search first parent which has a tooltip\n      while (target != null)\n      {\n        tooltip = target.getToolTip();\n        tooltipText = target.getToolTipText() || null;\n        tooltipIcon = target.getToolTipIcon() || null;\n        if (qx.Class.hasInterface(target.constructor, qx.ui.form.IForm)\n            && !target.isValid()) {\n          invalidMessage = target.getInvalidMessage();\n        }\n\n        if (tooltip || tooltipText || tooltipIcon || invalidMessage) {\n          break;\n        }\n\n        target = target.getLayoutParent();\n      }\n\n      //do nothing if\n      if (!target //don't have a target\n          // tooltip is disabled and the value of showToolTipWhenDisabled is false\n          || (!target.getEnabled() && !target.isShowToolTipWhenDisabled() )\n          //tooltip is blocked\n          || target.isBlockToolTip()\n          //an invalid message isn't set and tooltips are disabled\n          || (!invalidMessage && !this.getShowToolTips())\n          //an invalid message is set and invalid tooltips are disabled\n          || (invalidMessage && !this.getShowInvalidToolTips()))\n      {\n        return;\n      }\n\n      if (invalidMessage)\n      {\n        tooltip = this.getSharedErrorTooltip().set({\n          label: invalidMessage\n        });\n      }\n      if (!tooltip)\n      {\n        tooltip = this.getSharedTooltip().set({\n          label: tooltipText,\n          icon: tooltipIcon\n        });\n      }\n      this.setCurrent(tooltip);\n      tooltip.setOpener(target);\n    },\n\n\n    /**\n     * Resets the property {@link #current} if there was a\n     * tooltip and no new one is created.\n     *\n     * @param e {qx.event.type.Pointer} pointerout event\n     */\n    __onPointerOutRoot : function(e)\n    {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      if (!target) {\n        return;\n      }\n\n      var related = qx.ui.core.Widget.getWidgetByElement(e.getRelatedTarget());\n      if (!related && e.getPointerType() == \"mouse\") {\n        return;\n      }\n\n      var tooltip = this.getCurrent();\n\n      // If there was a tooltip and\n      // - the destination target is the current tooltip\n      //   or\n      // - the current tooltip contains the destination target\n      if (tooltip && (related == tooltip || qx.ui.core.Widget.contains(tooltip, related))) {\n        return;\n      }\n\n      // If the destination target exists and the target contains it\n      if (related && target && qx.ui.core.Widget.contains(target, related)) {\n        return;\n      }\n\n      if(tooltip && !tooltip.getAutoHide()) {\n        return;\n      }\n\n      // If there was a tooltip and there is no new one\n      if (tooltip && !related) {\n        this.setCurrent(null);\n      } else {\n        this.resetCurrent();\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Reset the property {@link #current} if the\n     * current tooltip is the tooltip of the target widget.\n     *\n     * @param e {qx.event.type.Focus} blur event\n     */\n    __onFocusOutRoot : function(e)\n    {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      if (!target) {\n        return;\n      }\n\n      var tooltip = this.getCurrent();\n\n      if(tooltip && !tooltip.getAutoHide()) {\n        return;\n      }\n\n      // Only set to null if blurred widget is the\n      // one which has created the current tooltip\n      if (tooltip && tooltip == target.getToolTip()) {\n        this.setCurrent(null);\n      }\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    // Deregister events\n    qx.event.Registration.removeListener(document.body, \"pointerover\", this.__onPointerOverRoot, this, true);\n\n    // Dispose timers\n    this._disposeObjects(\"__showTimer\", \"__hideTimer\", \"__sharedToolTip\");\n    this.__pointerPosition = null;\n  }\n});\n"
  ]
}