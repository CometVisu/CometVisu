{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Menu.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MPlacement",
    "MRemoteChildrenHandling",
    "construct",
    "_setLayout",
    "menu",
    "Layout",
    "root",
    "getApplicationRoot",
    "add",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onResize",
    "_blocker",
    "Blocker",
    "initVisibility",
    "initKeepFocus",
    "initKeepActive",
    "properties",
    "appearance",
    "refine",
    "init",
    "allowGrowX",
    "allowGrowY",
    "visibility",
    "keepFocus",
    "keepActive",
    "spacingX",
    "check",
    "apply",
    "themeable",
    "spacingY",
    "iconColumnWidth",
    "arrowColumnWidth",
    "blockerColor",
    "nullable",
    "blockerOpacity",
    "selectedButton",
    "openedButton",
    "opener",
    "openInterval",
    "closeInterval",
    "blockBackground",
    "members",
    "__scheduledOpen",
    "__onAfterSlideBarAdd",
    "open",
    "getOpener",
    "isPlaced",
    "placeToWidget",
    "__updateSlideBar",
    "show",
    "_placementTarget",
    "warn",
    "openAtPointer",
    "e",
    "placeToPointer",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "openAtPoint",
    "point",
    "placeToPoint",
    "addSeparator",
    "Separator",
    "getColumnSizes",
    "_getMenuLayout",
    "getSelectables",
    "result",
    "children",
    "getChildren",
    "i",
    "length",
    "isEnabled",
    "push",
    "_applyIconColumnWidth",
    "value",
    "old",
    "setIconColumnWidth",
    "_applyArrowColumnWidth",
    "setArrowColumnWidth",
    "_applySpacingX",
    "setColumnSpacing",
    "_applySpacingY",
    "setSpacing",
    "_applyVisibility",
    "mgr",
    "Manager",
    "getInstance",
    "parentMenu",
    "getParentMenu",
    "setOpenedButton",
    "remove",
    "getOpenedButton",
    "resetOpenedButton",
    "resetSelectedButton",
    "__updateBlockerVisibility",
    "isVisible",
    "getBlockBackground",
    "zIndex",
    "getZIndex",
    "blockContent",
    "isBlocked",
    "unblock",
    "widget",
    "AbstractButton",
    "getContextMenu",
    "Menu",
    "getLayoutParent",
    "_applySelectedButton",
    "removeState",
    "addState",
    "_applyOpenedButton",
    "getMenu",
    "exclude",
    "_applyBlockerColor",
    "setColor",
    "_applyBlockerOpacity",
    "setOpacity",
    "getChildrenContainer",
    "getChildControl",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "MenuSlideBar",
    "layout",
    "_getLayout",
    "Grow",
    "slidebarLayout",
    "getLayout",
    "setLayout",
    "dispose",
    "lang",
    "Array",
    "clone",
    "removeListener",
    "_add",
    "hasChildControl",
    "_getMenuBounds",
    "getBounds",
    "_computePlacementSize",
    "menuBounds",
    "addListenerOnce",
    "rootHeight",
    "height",
    "getLayoutProperties",
    "_assertSlideBar",
    "setHeight",
    "moveTo",
    "callback",
    "call",
    "queue",
    "syncWidget",
    "jobs",
    "target",
    "undefined",
    "Error",
    "cancelClose",
    "getTarget",
    "setSelectedButton",
    "subMenu",
    "setOpener",
    "scheduleOpen",
    "opened",
    "scheduleClose",
    "cancelOpen",
    "contains",
    "getRelatedTarget",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "_disposeObjects"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The menu is a popup like control which supports buttons. It comes\n * with full keyboard navigation and an improved timeout based pointer\n * control behavior.\n *\n * This class is the container for all derived instances of\n * {@link qx.ui.menu.AbstractButton}.\n *\n * @childControl slidebar {qx.ui.menu.MenuSlideBar} shows a slidebar to easily navigate inside the menu (if too little space is left)\n */\nqx.Class.define(\"qx.ui.menu.Menu\",\n{\n  extend : qx.ui.core.Widget,\n\n  include : [\n    qx.ui.core.MPlacement,\n    qx.ui.core.MRemoteChildrenHandling\n  ],\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Use hard coded layout\n    this._setLayout(new qx.ui.menu.Layout);\n\n    // Automatically add to application's root\n    var root = this.getApplicationRoot();\n    root.add(this);\n\n    // Register pointer listeners\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n\n    // add resize listener\n    this.addListener(\"resize\", this._onResize, this);\n    root.addListener(\"resize\", this._onResize, this);\n\n    this._blocker = new qx.ui.core.Blocker(root);\n\n    // Initialize properties\n    this.initVisibility();\n    this.initKeepFocus();\n    this.initKeepActive();\n  },\n\n\n\n  properties :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"menu\"\n    },\n\n    // overridden\n    allowGrowX :\n    {\n      refine : true,\n      init: false\n    },\n\n    // overridden\n    allowGrowY :\n    {\n      refine : true,\n      init: false\n    },\n\n    // overridden\n    visibility :\n    {\n      refine : true,\n      init : \"excluded\"\n    },\n\n    // overridden\n    keepFocus :\n    {\n      refine : true,\n      init : true\n    },\n\n    // overridden\n    keepActive :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLE OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /** The spacing between each cell of the menu buttons */\n    spacingX :\n    {\n      check : \"Integer\",\n      apply : \"_applySpacingX\",\n      init : 0,\n      themeable : true\n    },\n\n    /** The spacing between each menu button */\n    spacingY :\n    {\n      check : \"Integer\",\n      apply : \"_applySpacingY\",\n      init : 0,\n      themeable : true\n    },\n\n    /**\n    * Default icon column width if no icons are rendered.\n    * This property is ignored as soon as an icon is present.\n    */\n    iconColumnWidth :\n    {\n      check : \"Integer\",\n      init : 0,\n      themeable : true,\n      apply : \"_applyIconColumnWidth\"\n    },\n\n    /** Default arrow column width if no sub menus are rendered */\n    arrowColumnWidth :\n    {\n      check : \"Integer\",\n      init : 0,\n      themeable : true,\n      apply : \"_applyArrowColumnWidth\"\n    },\n\n    /**\n     * Color of the blocker\n     */\n    blockerColor :\n    {\n      check : \"Color\",\n      init : null,\n      nullable: true,\n      apply : \"_applyBlockerColor\",\n      themeable: true\n    },\n\n    /**\n     * Opacity of the blocker\n     */\n    blockerOpacity :\n    {\n      check : \"Number\",\n      init : 1,\n      apply : \"_applyBlockerOpacity\",\n      themeable: true\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FUNCTIONALITY PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /** The currently selected button */\n    selectedButton :\n    {\n      check : \"qx.ui.core.Widget\",\n      nullable : true,\n      apply : \"_applySelectedButton\"\n    },\n\n    /** The currently opened button (sub menu is visible) */\n    openedButton :\n    {\n      check : \"qx.ui.core.Widget\",\n      nullable : true,\n      apply : \"_applyOpenedButton\"\n    },\n\n    /** Widget that opened the menu */\n    opener :\n    {\n      check : \"qx.ui.core.Widget\",\n      nullable : true\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      BEHAVIOR PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Interval in ms after which sub menus should be opened */\n    openInterval :\n    {\n      check : \"Integer\",\n      themeable : true,\n      init : 250,\n      apply : \"_applyOpenInterval\"\n    },\n\n    /** Interval in ms after which sub menus should be closed  */\n    closeInterval :\n    {\n      check : \"Integer\",\n      themeable : true,\n      init : 250,\n      apply : \"_applyCloseInterval\"\n    },\n\n    /** Blocks the background if value is <code>true<code> */\n    blockBackground :\n    {\n      check : \"Boolean\",\n      themeable : true,\n      init : false\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __scheduledOpen : null,\n    __onAfterSlideBarAdd : null,\n\n    /** @type {qx.ui.core.Blocker} blocker for background blocking */\n    _blocker : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Opens the menu and configures the opener\n     */\n    open : function()\n    {\n      if (this.getOpener() != null)\n      {\n        var isPlaced = this.placeToWidget(this.getOpener(), true);\n        if(isPlaced) {\n          this.__updateSlideBar();\n          this.show();\n\n          this._placementTarget = this.getOpener();\n        } else {\n          this.warn(\"Could not open menu instance because 'opener' widget is not visible\");\n        }\n      } else {\n        this.warn(\"The menu instance needs a configured 'opener' widget!\");\n      }\n    },\n\n\n    /**\n     * Opens the menu at the pointer position\n     *\n     * @param e {qx.event.type.Pointer} Pointer event to align to\n     */\n    openAtPointer : function(e)\n    {\n      this.placeToPointer(e);\n      this.__updateSlideBar();\n      this.show();\n\n      this._placementTarget = {\n        left: e.getDocumentLeft(),\n        top: e.getDocumentTop()\n      };\n    },\n\n\n    /**\n     * Opens the menu in relation to the given point\n     *\n     * @param point {Map} Coordinate of any point with the keys <code>left</code>\n     *   and <code>top</code>.\n     */\n    openAtPoint : function(point)\n    {\n      this.placeToPoint(point);\n      this.__updateSlideBar();\n      this.show();\n\n      this._placementTarget = point;\n    },\n\n\n    /**\n     * Convenience method to add a separator to the menu\n     */\n    addSeparator : function() {\n      this.add(new qx.ui.menu.Separator);\n    },\n\n\n    /**\n     * Returns the column sizes detected during the pre-layout phase\n     *\n     * @return {Array} List of all column widths\n     */\n    getColumnSizes : function() {\n      return this._getMenuLayout().getColumnSizes();\n    },\n\n\n    /**\n     * Return all selectable menu items.\n     *\n     * @return {qx.ui.core.Widget[]} selectable widgets\n     */\n    getSelectables : function() {\n      var result = [];\n      var children = this.getChildren();\n\n      for (var i = 0; i < children.length; i++)\n      {\n        if (children[i].isEnabled()) {\n          result.push(children[i]);\n        }\n      }\n\n      return result;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIconColumnWidth : function(value, old) {\n      this._getMenuLayout().setIconColumnWidth(value);\n    },\n\n\n    // property apply\n    _applyArrowColumnWidth : function(value, old) {\n      this._getMenuLayout().setArrowColumnWidth(value);\n    },\n\n\n    // property apply\n    _applySpacingX : function(value, old) {\n      this._getMenuLayout().setColumnSpacing(value);\n    },\n\n\n    // property apply\n    _applySpacingY : function(value, old) {\n      this._getMenuLayout().setSpacing(value);\n    },\n\n\n    // overridden\n    _applyVisibility : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      var mgr = qx.ui.menu.Manager.getInstance();\n\n      if (value === \"visible\")\n      {\n        // Register to manager (zIndex handling etc.)\n        mgr.add(this);\n\n        // Mark opened in parent menu\n        var parentMenu = this.getParentMenu();\n        if (parentMenu) {\n          parentMenu.setOpenedButton(this.getOpener());\n        }\n      }\n      else if (old === \"visible\")\n      {\n        // Deregister from manager (zIndex handling etc.)\n        mgr.remove(this);\n\n        // Unmark opened in parent menu\n        var parentMenu = this.getParentMenu();\n        if (parentMenu && parentMenu.getOpenedButton() == this.getOpener()) {\n          parentMenu.resetOpenedButton();\n        }\n\n        // Clear properties\n        this.resetOpenedButton();\n        this.resetSelectedButton();\n      }\n\n      this.__updateBlockerVisibility();\n    },\n\n\n    /**\n     * Updates the blocker's visibility\n     */\n    __updateBlockerVisibility : function()\n    {\n      if (this.isVisible())\n      {\n        if (this.getBlockBackground()) {\n          var zIndex = this.getZIndex();\n          this._blocker.blockContent(zIndex - 1);\n        }\n      }\n      else\n      {\n        if (this._blocker.isBlocked()) {\n          this._blocker.unblock();\n        }\n      }\n    },\n\n\n    /**\n     * Get the parent menu. Returns <code>null</code> if the menu doesn't have a\n     * parent menu.\n     *\n     * @return {qx.ui.core.Widget|null} The parent menu.\n     */\n    getParentMenu : function()\n    {\n      var widget = this.getOpener();\n      if (!widget || !(widget instanceof qx.ui.menu.AbstractButton)) {\n        return null;\n      }\n\n      if (widget && widget.getContextMenu() === this) {\n        return null;\n      }\n\n      while (widget && !(widget instanceof qx.ui.menu.Menu)) {\n        widget = widget.getLayoutParent();\n      }\n      return widget;\n    },\n\n\n    // property apply\n    _applySelectedButton : function(value, old)\n    {\n      if (old) {\n        old.removeState(\"selected\");\n      }\n\n      if (value) {\n        value.addState(\"selected\");\n      }\n    },\n\n\n    // property apply\n    _applyOpenedButton : function(value, old)\n    {\n      if (old && old.getMenu()) {\n        old.getMenu().exclude();\n      }\n\n      if (value) {\n        value.getMenu().open();\n      }\n    },\n\n\n    // property apply\n    _applyBlockerColor : function(value, old) {\n      this._blocker.setColor(value);\n    },\n\n\n    // property apply\n    _applyBlockerOpacity : function(value, old) {\n      this._blocker.setOpacity(value);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n    SCROLLING SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getChildrenContainer : function() {\n      return this.getChildControl(\"slidebar\", true) || this;\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"slidebar\":\n          var control = new qx.ui.menu.MenuSlideBar();\n\n          var layout = this._getLayout();\n          this._setLayout(new qx.ui.layout.Grow());\n\n          var slidebarLayout = control.getLayout();\n          control.setLayout(layout);\n          slidebarLayout.dispose();\n\n          var children = qx.lang.Array.clone(this.getChildren());\n          for (var i=0; i<children.length; i++) {\n            control.add(children[i]);\n          }\n\n          this.removeListener(\"resize\", this._onResize, this);\n          control.getChildrenContainer().addListener(\"resize\", this._onResize, this);\n\n          this._add(control);\n\n        break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Get the menu layout manager\n     *\n     * @return {qx.ui.layout.Abstract} The menu layout manager\n     */\n    _getMenuLayout : function()\n    {\n      if (this.hasChildControl(\"slidebar\")) {\n        return this.getChildControl(\"slidebar\").getChildrenContainer().getLayout();\n      } else {\n        return this._getLayout();\n      }\n    },\n\n\n    /**\n     * Get the menu bounds\n     *\n     * @return {Map} The menu bounds\n     */\n    _getMenuBounds : function()\n    {\n      if (this.hasChildControl(\"slidebar\")) {\n        return this.getChildControl(\"slidebar\").getChildrenContainer().getBounds();\n      } else {\n        return this.getBounds();\n      }\n    },\n\n\n    /**\n     * Computes the size of the menu. This method is used by the\n     * {@link qx.ui.core.MPlacement} mixin.\n     * @return {Map} The menu bounds\n     */\n    _computePlacementSize : function() {\n      return this._getMenuBounds();\n    },\n\n\n    /**\n     * Updates the visibility of the slidebar based on the menu's current size\n     * and position.\n     */\n    __updateSlideBar : function()\n    {\n      var menuBounds = this._getMenuBounds();\n      if (!menuBounds)\n      {\n        this.addListenerOnce(\"resize\", this.__updateSlideBar, this);\n        return;\n      }\n\n      var rootHeight = this.getLayoutParent().getBounds().height;\n      var top = this.getLayoutProperties().top;\n      var left = this.getLayoutProperties().left;\n\n      // Adding the slidebar must be deferred because this call can happen\n      // during the layout flush, which make it impossible to move existing\n      // layout to the slidebar\n      if (top < 0)\n      {\n        this._assertSlideBar(function() {\n          this.setHeight(menuBounds.height + top);\n          this.moveTo(left, 0);\n        });\n      }\n      else if (top + menuBounds.height > rootHeight)\n      {\n        this._assertSlideBar(function() {\n          this.setHeight(rootHeight - top);\n        });\n      }\n      else\n      {\n        this.setHeight(null);\n      }\n    },\n\n\n    /**\n     * Schedules the addition of the slidebar and calls the given callback\n     * after the slidebar has been added.\n     *\n     * @param callback {Function} the callback to call\n     * @return {var|undefined} The return value of the callback if the slidebar\n     * already exists, or <code>undefined</code> if it doesn't\n     */\n    _assertSlideBar : function(callback)\n    {\n      if (this.hasChildControl(\"slidebar\")) {\n        return callback.call(this);\n      }\n\n      this.__onAfterSlideBarAdd = callback;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    // overridden\n    syncWidget : function(jobs)\n    {\n      this.getChildControl(\"slidebar\");\n      if (this.__onAfterSlideBarAdd)\n      {\n        this.__onAfterSlideBarAdd.call(this);\n        delete this.__onAfterSlideBarAdd;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Update position if the menu or the root is resized\n     */\n    _onResize : function()\n    {\n      if (this.isVisible())\n      {\n        var target = this._placementTarget;\n        if (!target) {\n          return;\n        } else if (target instanceof qx.ui.core.Widget) {\n          this.placeToWidget(target, true);\n        } else if (target.top !== undefined) {\n          this.placeToPoint(target);\n        } else {\n          throw new Error(\"Unknown target: \" + target);\n        }\n        this.__updateSlideBar();\n      }\n    },\n\n\n    /**\n     * Event listener for pointerover event.\n     *\n     * @param e {qx.event.type.Pointer} pointerover event\n     */\n    _onPointerOver : function(e)\n    {\n      // Cache manager\n      var mgr = qx.ui.menu.Manager.getInstance();\n\n      // Be sure this menu is kept\n      mgr.cancelClose(this);\n\n      // Change selection\n      var target = e.getTarget();\n      if (target.isEnabled() && target instanceof qx.ui.menu.AbstractButton)\n      {\n        // Select button directly\n        this.setSelectedButton(target);\n\n        var subMenu = target.getMenu && target.getMenu();\n        if (subMenu)\n        {\n          subMenu.setOpener(target);\n\n          // Finally schedule for opening\n          mgr.scheduleOpen(subMenu);\n\n          // Remember scheduled menu for opening\n          this.__scheduledOpen = subMenu;\n        }\n        else\n        {\n          var opened = this.getOpenedButton();\n          if (opened) {\n            mgr.scheduleClose(opened.getMenu());\n          }\n\n          if (this.__scheduledOpen)\n          {\n            mgr.cancelOpen(this.__scheduledOpen);\n            this.__scheduledOpen = null;\n          }\n        }\n      }\n      else if (!this.getOpenedButton())\n      {\n        // When no button is opened reset the selection\n        // Otherwise keep it\n        this.resetSelectedButton();\n      }\n    },\n\n\n    /**\n     * Event listener for pointerout event.\n     *\n     * @param e {qx.event.type.Pointer} pointerout event\n     */\n    _onPointerOut : function(e)\n    {\n      // Cache manager\n      var mgr = qx.ui.menu.Manager.getInstance();\n\n      // Detect whether the related target is out of the menu\n      if (!qx.ui.core.Widget.contains(this, e.getRelatedTarget()))\n      {\n        // Update selected property\n        // Force it to the open sub menu in cases where that is opened\n        // Otherwise reset it. Menus which are left by the cursor should\n        // not show any selection.\n        var opened = this.getOpenedButton();\n        opened ? this.setSelectedButton(opened) : this.resetSelectedButton();\n\n        // Cancel a pending close request for the currently\n        // opened sub menu\n        if (opened) {\n          mgr.cancelClose(opened.getMenu());\n        }\n\n        // When leaving this menu to the outside, stop\n        // all pending requests to open any other sub menu\n        if (this.__scheduledOpen) {\n          mgr.cancelOpen(this.__scheduledOpen);\n        }\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      qx.ui.menu.Manager.getInstance().remove(this);\n    }\n\n    this.getApplicationRoot().removeListener(\"resize\", this._onResize, this);\n    this._placementTarget = null;\n    this._disposeObjects(\"_blocker\");\n  }\n});\n"
  ]
}