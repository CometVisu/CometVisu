{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/basic/Label.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "construct",
    "value",
    "setValue",
    "locale",
    "Manager",
    "getInstance",
    "addListener",
    "_onChangeLocale",
    "properties",
    "rich",
    "check",
    "init",
    "event",
    "apply",
    "wrap",
    "breakWithinWords",
    "nullable",
    "buddy",
    "dereference",
    "textAlign",
    "themeable",
    "appearance",
    "refine",
    "selectable",
    "allowGrowX",
    "allowGrowY",
    "allowShrinkY",
    "members",
    "__font",
    "__invalidContentSize",
    "__tapListenerId",
    "__webfontListenerId",
    "_getContentHint",
    "__contentSize",
    "__computeContentSize",
    "width",
    "height",
    "_hasHeightForWidth",
    "getRich",
    "getWrap",
    "_applySelectable",
    "Environment",
    "get",
    "isRich",
    "_getContentHeightForWidth",
    "_createContentElement",
    "html",
    "Label",
    "_applyTextAlign",
    "old",
    "getContentElement",
    "setStyle",
    "_applyTextColor",
    "theme",
    "manager",
    "Color",
    "resolve",
    "removeStyle",
    "_applyFont",
    "removeListenerById",
    "styles",
    "Font",
    "bom",
    "webfonts",
    "WebFont",
    "_onWebFontStatusChange",
    "getStyles",
    "getDefaultStyles",
    "getTextColor",
    "setStyles",
    "queue",
    "Layout",
    "add",
    "font",
    "getFont",
    "content",
    "getValue",
    "__fixEllipsis",
    "getBreakWithinWords",
    "wordBreak",
    "getHtmlSize",
    "getTextSize",
    "parseInt",
    "domEl",
    "getDomElement",
    "innerHTML",
    "_applyBuddy",
    "removeRelatedBindings",
    "bind",
    "isFocusable",
    "focus",
    "toggleValue",
    "_applyRich",
    "setRich",
    "_applyWrap",
    "whiteSpace",
    "_applyBreakWithinWords",
    "e",
    "translate",
    "ev",
    "getData",
    "valid",
    "parseFloat",
    "window",
    "setTimeout",
    "_applyValue",
    "destruct",
    "removeListener",
    "basic"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The label class brings typical text content to the widget system.\n *\n * It supports simple text nodes and complex HTML (rich). The default\n * content mode is for text only. The mode is changeable through the property\n * {@link #rich}.\n *\n * The label supports heightForWidth when used in HTML mode. This means\n * that multi line HTML automatically computes the correct preferred height.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // a simple text label without wrapping and markup support\n *   var label1 = new qx.ui.basic.Label(\"Simple text label\");\n *   this.getRoot().add(label1, {left:20, top:10});\n *\n *   // a HTML label with automatic line wrapping\n *   var label2 = new qx.ui.basic.Label().set({\n *     value: \"A <b>long label</b> text with auto-wrapping. This also may contain <b style='color:red'>rich HTML</b> markup.\",\n *     rich : true,\n *     width: 120\n *   });\n *   this.getRoot().add(label2, {left:20, top:50});\n * </pre>\n *\n * The first label in this example is a basic text only label. As such no\n * automatic wrapping is supported. The second label is a long label containing\n * HTML markup with automatic line wrapping.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/label.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.ui.basic.Label\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [qx.ui.form.IStringForm],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} Text or HTML content to use\n   */\n  construct : function(value)\n  {\n    this.base(arguments);\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Switches between rich HTML and text content. The text mode (<code>false</code>) supports\n     * advanced features like ellipsis when the available space is not\n     * enough. HTML mode (<code>true</code>) supports multi-line content and all the\n     * markup features of HTML content.\n     */\n    rich :\n    {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeRich\",\n      apply : \"_applyRich\"\n    },\n\n\n    /**\n     * Controls whether text wrap is activated or not. But please note, that\n     * this property works only in combination with the property {@link #rich}.\n     * The {@link #wrap} has only an effect if the {@link #rich} property is\n     * set to <code>true</code>, otherwise {@link #wrap} has no effect.\n     */\n    wrap :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyWrap\"\n    },\n\n\n    /**\n     * Controls whether line wrapping can occur in the middle of a word; this is\n     * typically only useful when there is a restricted amount of horizontal space\n     * and words would otherwise overflow beyond the width of the element.  Words\n     * are typically considered as separated by spaces, so \"abc/def/ghi\" is a 11\n     * character word that would not be split without `breakWithWords` set to true.\n     */\n    breakWithinWords :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyBreakWithinWords\"\n    },\n\n\n    /**\n     * Contains the HTML or text content. Interpretation depends on the value\n     * of {@link #rich}. In text mode entities and other HTML special content\n     * is not supported. But it is possible to use unicode escape sequences\n     * to insert symbols and other non ASCII characters.\n     */\n    value :\n    {\n      check : \"String\",\n      apply : \"_applyValue\",\n      event : \"changeValue\",\n      nullable : true\n    },\n\n\n    /**\n     * The buddy property can be used to connect the label to another widget.\n     * That causes two things:\n     * <ul>\n     *   <li>The label will always take the same enabled state as the buddy\n     *       widget.\n     *   </li>\n     *   <li>A tap on the label will focus the buddy widget.</li>\n     * </ul>\n     * This is the behavior of the for attribute of HTML:\n     * http://www.w3.org/TR/html401/interact/forms.html#adef-for\n     */\n    buddy :\n    {\n      check : \"qx.ui.core.Widget\",\n      apply : \"_applyBuddy\",\n      nullable : true,\n      init : null,\n      dereference : true\n    },\n\n\n    /** Control the text alignment */\n    textAlign :\n    {\n      check : [\"left\", \"center\", \"right\", \"justify\"],\n      nullable : true,\n      themeable : true,\n      apply : \"_applyTextAlign\",\n      event : \"changeTextAlign\"\n    },\n\n\n    // overridden\n    appearance :\n    {\n      refine: true,\n      init: \"label\"\n    },\n\n\n    // overridden\n    selectable :\n    {\n      refine : true,\n      init : false\n    },\n\n\n    // overridden\n    allowGrowX :\n    {\n      refine : true,\n      init : false\n    },\n\n\n    // overridden\n    allowGrowY :\n    {\n      refine : true,\n      init : false\n    },\n\n    // overridden\n    allowShrinkY :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __font : null,\n    __invalidContentSize : null,\n    __tapListenerId : null,\n    __webfontListenerId : null,\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getContentHint : function()\n    {\n      if (this.__invalidContentSize)\n      {\n        this.__contentSize = this.__computeContentSize();\n        delete this.__invalidContentSize;\n      }\n\n      return {\n        width : this.__contentSize.width,\n        height : this.__contentSize.height\n      };\n    },\n\n\n    // overridden\n    _hasHeightForWidth : function() {\n      return this.getRich() && this.getWrap();\n    },\n\n\n    // overridden\n    _applySelectable : function(value)\n    {\n\n      // This is needed for all browsers not having text-overflow:ellipsis\n      // but supporting XUL (firefox < 4)\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=312156\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\"))\n      {\n        if (value && !this.isRich())\n        {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\"Only rich labels are selectable in browsers with Gecko engine!\");\n          }\n          return;\n        }\n      }\n\n      this.base(arguments, value);\n    },\n\n\n    // overridden\n    _getContentHeightForWidth : function(width)\n    {\n      if (!this.getRich() && !this.getWrap()) {\n        return null;\n      }\n      return this.__computeContentSize(width).height;\n    },\n\n\n    // overridden\n    _createContentElement : function() {\n      return new qx.html.Label;\n    },\n\n\n    // property apply\n    _applyTextAlign : function(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n\n    // overridden\n    _applyTextColor : function(value, old)\n    {\n      if (value) {\n        this.getContentElement().setStyle(\"color\", qx.theme.manager.Color.getInstance().resolve(value));\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LABEL ADDONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Internal fallback of label size when no font is defined\n     *\n     * @lint ignoreReferenceField(__contentSize)\n     */\n    __contentSize :\n    {\n      width : 0,\n      height : 0\n    },\n\n\n    // property apply\n    _applyFont : function(value, old)\n    {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n      // Apply\n      var styles;\n      if (value)\n      {\n        this.__font = qx.theme.manager.Font.getInstance().resolve(value);\n        if (this.__font instanceof qx.bom.webfonts.WebFont) {\n          this.__webfontListenerId = this.__font.addListener(\"changeStatus\", this._onWebFontStatusChange, this);\n        }\n        styles = this.__font.getStyles();\n      }\n      else\n      {\n        this.__font = null;\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      this.getContentElement().setStyles(styles);\n\n      // Invalidate text size\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    /**\n     * Internal utility to compute the content dimensions.\n     *\n     * @param width {Integer?null} Optional width constraint\n     * @return {Map} Map with <code>width</code> and <code>height</code> keys\n     */\n    __computeContentSize : function(width)\n    {\n      var Label = qx.bom.Label;\n      var font = this.getFont();\n\n      var styles = font ? this.__font.getStyles() : qx.bom.Font.getDefaultStyles();\n      var content = this.getValue() || \"A\";\n      var rich = this.getRich();\n\n      if (this.__webfontListenerId) {\n        this.__fixEllipsis();\n      }\n      if (rich && this.getBreakWithinWords()) {\n        styles.wordBreak = \"break-all\";\n      }\n\n      return rich ?\n        Label.getHtmlSize(content, styles, width) :\n        Label.getTextSize(content, styles);\n    },\n\n\n\n    /**\n    * Firefox > 9 on OS X will draw an ellipsis on top of the label content even\n    * though there is enough space for the text. Re-applying the content forces\n    * a recalculation and fixes the problem. See qx bug #6293\n    */\n    __fixEllipsis : function()\n    {\n      if (!this.getContentElement()) {\n        return;\n      }\n      if (qx.core.Environment.get(\"os.name\") == \"osx\" &&\n        qx.core.Environment.get(\"engine.name\") == \"gecko\" &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 16 &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) > 9)\n      {\n        var domEl = this.getContentElement().getDomElement();\n        if (domEl) {\n          domEl.innerHTML = domEl.innerHTML;\n        }\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLIER\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyBuddy : function(value, old)\n    {\n      if (old != null)\n      {\n        this.removeRelatedBindings(old);\n        this.removeListenerById(this.__tapListenerId);\n        this.__tapListenerId = null;\n      }\n\n      if (value != null)\n      {\n        value.bind(\"enabled\", this, \"enabled\");\n        this.__tapListenerId = this.addListener(\"tap\", function() {\n          // only focus focusable elements [BUG #3555]\n          if (value.isFocusable()) {\n            value.focus.apply(value);\n          }\n          // furthermore toggle if possible [BUG #6881]\n          if (\"toggleValue\" in value && typeof value.toggleValue === \"function\") {\n            value.toggleValue();\n          }\n        }, this);\n      }\n    },\n\n\n    // property apply\n    _applyRich : function(value)\n    {\n      // Sync with content element\n      this.getContentElement().setRich(value);\n\n      // Mark text size cache as invalid\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    // property apply\n     _applyWrap : function(value, old)\n    {\n      if (value && !this.isRich())\n      {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.warn(\"Only rich labels support wrap.\");\n        }\n      }\n\n      if (this.isRich()) {\n        // apply the white space style to the label to force it not\n        // to wrap if wrap is set to false [BUG #3732]\n        var whiteSpace = value ? \"normal\" : \"nowrap\";\n        this.getContentElement().setStyle(\"whiteSpace\", whiteSpace);\n      }\n    },\n\n    // property apply\n    _applyBreakWithinWords : function(value, old) {\n      if (this.isRich()) {\n        this.getContentElement().setStyle(\"wordBreak\", value ? \"break-all\" : \"normal\");\n      }\n    },\n\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale : qx.core.Environment.select(\"qx.dynlocale\",\n    {\n      \"true\" : function(e)\n      {\n        var content = this.getValue();\n        if (content && content.translate) {\n          this.setValue(content.translate());\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    /**\n     * Triggers layout recalculation after a web font was loaded\n     *\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\n     */\n    _onWebFontStatusChange : function(ev)\n    {\n      if (ev.getData().valid === true) {\n\n        // safari has trouble resizing, adding it again fixed the issue [BUG #8786]\n        if (qx.core.Environment.get(\"browser.name\") == \"safari\" &&\n          parseFloat(qx.core.Environment.get(\"browser.version\")) >= 8) {\n            window.setTimeout(function() {\n              this.__invalidContentSize = true;\n              qx.ui.core.queue.Layout.add(this);\n            }.bind(this), 0);\n        }\n\n        this.__invalidContentSize = true;\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n\n    // property apply\n    _applyValue : qx.core.Environment.select(\"qx.dynlocale\", {\n      \"true\" : function(value, old)\n      {\n        // Sync with content element\n        if (value && value.translate) {\n          this.getContentElement().setValue(value.translate());\n        }\n        else {\n          this.getContentElement().setValue(value);\n        }\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      },\n\n      \"false\" : function(value, old)\n      {\n        this.getContentElement().setValue(value);\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      }\n    })\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.__font = null;\n  }\n});\n"
  ]
}