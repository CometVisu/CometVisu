{
  "className": "qx.ui.form.validation.AsyncValidator",
  "packageName": "qx.ui.form.validation",
  "name": "AsyncValidator",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 43,
        "column": 0
      },
      "end": {
        "line": 149,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2009 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Martin Wittemann (martinwittemann)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>This class is responsible for validation in all asynchronous cases and\n should always be used with {@link qx.ui.form.validation.Manager}.\n It acts like a wrapper for asynchronous validation functions. These\n validation function must be set in the constructor. The form manager will\n invoke the validation and the validator function will be called with two\n arguments:\n </p>\n<ul>\n  <li>asyncValidator: A reference to the corresponding validator.</li>\n  <li>value: The value of the assigned input field.</li>\n </ul>\n<p>These two parameters are needed to set the validation status of the current\n validator. {@link #setValid} is responsible for doing that.\n<em>Warning:</em> Instances of this class can only be used with one input\n field at a time. Multi usage is not supported!\n<em>Warning:</em> Calling {@link #setValid} synchronously does not work. If you\n have an synchronous validator, please check\n {@link qx.ui.form.validation.Manager#add}. If you have both cases, you have\n to wrap the synchronous call in a timeout to make it asynchronous.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 51,
        "column": 14
      },
      "end": {
        "line": 56,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "validator {Function} The validator function, which has to be\n   asynchronous.",
          "paramName": "validator",
          "description": " The validator function, which has to be\n   asynchronous.",
          "type": "Function"
        }
      ]
    }
  },
  "members": {
    "__validatorFunction": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 30
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__item": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__manager": {
      "location": {
        "start": {
          "line": 62,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__usedForForm": {
      "location": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "validate": {
      "location": {
        "start": {
          "line": 81,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The validate function should only be called by\n {@link qx.ui.form.validation.Manager}.\n It stores the given information and calls the validation function set in\n the constructor. The method is used for form fields only. Validating a\n form itself will be invokes with {@link #validateForm}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The form item which should be validated.",
            "paramName": "item",
            "description": " The form item which should be validated.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "value {var} The value of the form item.",
            "paramName": "value",
            "description": " The value of the form item.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "manager {qx.ui.form.validation.Manager} A reference to the form\n   manager.",
            "paramName": "manager",
            "description": " A reference to the form\n   manager.",
            "type": "qx.ui.form.validation.Manager"
          },
          {
            "name": "@param",
            "body": "context {var?null} The context of the validator.",
            "paramName": "context",
            "description": " The context of the validator.",
            "optional": true,
            "defaultValue": "null",
            "type": "var"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "validateForm": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The validateForm function should only be called by\n {@link qx.ui.form.validation.Manager}.\n It stores the given information and calls the validation function set in\n the constructor. The method is used for forms only. Validating a\n form item will be invokes with {@link #validate}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "items {qx.ui.core.Widget[]} All form items of the form manager.",
            "paramName": "items",
            "description": " All form items of the form manager.",
            "type": "qx.ui.core.Widget[]"
          },
          {
            "name": "@param",
            "body": "manager {qx.ui.form.validation.Manager} A reference to the form\n   manager.",
            "paramName": "manager",
            "description": " A reference to the form\n   manager.",
            "type": "qx.ui.form.validation.Manager"
          },
          {
            "name": "@param",
            "body": "context {var?null} The context of the validator.",
            "paramName": "context",
            "description": " The context of the validator.",
            "optional": true,
            "defaultValue": "null",
            "type": "var"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setValid": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 136,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This method should be called within the asynchronous callback to tell the\n validator the result of the validation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "valid {Boolean} The boolean state of the validation.",
            "paramName": "valid",
            "description": " The boolean state of the validation.",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "message {String?} The invalidMessage of the validation.",
            "paramName": "message",
            "description": " The invalidMessage of the validation.",
            "optional": true,
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 146,
        "column": 13
      },
      "end": {
        "line": 148,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n  DESTRUCT\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "descendants": []
}