{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/Button.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "include",
    "core",
    "MExecutable",
    "implement",
    "form",
    "IExecutable",
    "construct",
    "label",
    "icon",
    "command",
    "setCommand",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onPointerDown",
    "_onPointerUp",
    "_onTap",
    "_onKeyDown",
    "_onKeyUp",
    "e",
    "stopPropagation",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "members",
    "_forwardStates",
    "focused",
    "hovered",
    "pressed",
    "disabled",
    "press",
    "hasState",
    "addState",
    "release",
    "removeState",
    "reset",
    "isEnabled",
    "getTarget",
    "isLeftPressed",
    "capture",
    "releaseCapture",
    "hasPressed",
    "hasAbandoned",
    "execute",
    "getKeyIdentifier",
    "Button"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A Button widget which supports various states and allows it to be used\n * via the mouse, touch, pen and the keyboard.\n *\n * If the user presses the button by clicking on it, or the <code>Enter</code> or\n * <code>Space</code> keys, the button fires an {@link qx.ui.core.MExecutable#execute} event.\n *\n * If the {@link qx.ui.core.MExecutable#command} property is set, the\n * command is executed as well.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var button = new qx.ui.form.Button(\"Hello World\");\n *\n *   button.addListener(\"execute\", function(e) {\n *     alert(\"Button was clicked\");\n *   }, this);\n *\n *   this.getRoot().add(button);\n * </pre>\n *\n * This example creates a button with the label \"Hello World\" and attaches an\n * event listener to the {@link #execute} event.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/button.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.form.Button\",\n{\n  extend : qx.ui.basic.Atom,\n  include : [qx.ui.core.MExecutable],\n  implement : [qx.ui.form.IExecutable],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} label of the atom\n   * @param icon {String?null} Icon URL of the atom\n   * @param command {qx.ui.command.Command?null} Command instance to connect with\n   */\n  construct : function(label, icon, command)\n  {\n    this.base(arguments, label, icon);\n\n    if (command != null) {\n      this.setCommand(command);\n    }\n\n    // Add listeners\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n    this.addListener(\"tap\", this._onTap);\n\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"keyup\", this._onKeyUp);\n\n    // Stop events\n    this.addListener(\"dblclick\", function(e) {\n      e.stopPropagation();\n    });\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"button\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      focused : true,\n      hovered : true,\n      pressed : true,\n      disabled : true\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Manually press the button\n     */\n    press : function()\n    {\n      if (this.hasState(\"abandoned\")) {\n        return;\n      }\n\n      this.addState(\"pressed\");\n    },\n\n\n    /**\n     * Manually release the button\n     */\n    release : function()\n    {\n      if (this.hasState(\"pressed\")) {\n        this.removeState(\"pressed\");\n      }\n    },\n\n\n    /**\n     * Completely reset the button (remove all states)\n     */\n    reset : function()\n    {\n      this.removeState(\"pressed\");\n      this.removeState(\"abandoned\");\n      this.removeState(\"hovered\");\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener method for \"pointerover\" event\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerOver : function(e)\n    {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      if (this.hasState(\"abandoned\"))\n      {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n\n      this.addState(\"hovered\");\n    },\n\n\n    /**\n     * Listener method for \"pointerout\" event\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerOut : function(e)\n    {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\"))\n      {\n        this.removeState(\"pressed\");\n        this.addState(\"abandoned\");\n      }\n    },\n\n\n    /**\n     * Listener method for \"pointerdown\" event\n     * <ul>\n     * <li>Removes \"abandoned\" state</li>\n     * <li>Adds \"pressed\" state</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerDown : function(e)\n    {\n      if (!e.isLeftPressed()) {\n        return;\n      }\n\n      e.stopPropagation();\n\n      // Activate capturing if the button get a pointerout while\n      // the button is pressed.\n      this.capture();\n\n      this.removeState(\"abandoned\");\n      this.addState(\"pressed\");\n    },\n\n\n    /**\n     * Listener method for \"pointerup\" event\n     * <ul>\n     * <li>Removes \"pressed\" state (if set)</li>\n     * <li>Removes \"abandoned\" state (if set)</li>\n     * <li>Adds \"hovered\" state (if \"abandoned\" state is not set)</li>\n     *</ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerUp : function(e)\n    {\n      this.releaseCapture();\n\n      // We must remove the states before executing the command\n      // because in cases were the window lost the focus while\n      // executing we get the capture phase back (mouseout).\n      var hasPressed = this.hasState(\"pressed\");\n      var hasAbandoned = this.hasState(\"abandoned\");\n\n      if (hasPressed) {\n        this.removeState(\"pressed\");\n      }\n\n      if (hasAbandoned) {\n        this.removeState(\"abandoned\");\n      }\n\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener method for \"tap\" event which stops the propagation.\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onTap : function(e) {\n      // \"execute\" is fired here so that the button can be dragged\n      // without executing it (e.g. in a TabBar with overflow)\n      this.execute();\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener method for \"keydown\" event.<br/>\n     * Removes \"abandoned\" and adds \"pressed\" state\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyDown : function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n          e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Listener method for \"keyup\" event.<br/>\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyUp : function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          if (this.hasState(\"pressed\"))\n          {\n            this.removeState(\"abandoned\");\n            this.removeState(\"pressed\");\n            this.execute();\n            e.stopPropagation();\n          }\n      }\n    }\n  }\n});\n"
  ]
}