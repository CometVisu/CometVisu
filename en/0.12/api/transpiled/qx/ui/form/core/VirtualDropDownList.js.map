{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/core/VirtualDropDownList.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "popup",
    "Popup",
    "construct",
    "target",
    "core",
    "Assert",
    "assertNotNull",
    "assertNotUndefined",
    "assertInterface",
    "form",
    "AbstractVirtualBox",
    "layout",
    "VBox",
    "_target",
    "_createChildControl",
    "addListener",
    "__onChangeVisibility",
    "__defaultSelection",
    "data",
    "Array",
    "initSelection",
    "properties",
    "autoHide",
    "refine",
    "init",
    "keepActive",
    "selection",
    "check",
    "event",
    "apply",
    "nullable",
    "deferredInit",
    "allowGrowDropDown",
    "events",
    "members",
    "_preselected",
    "__ignoreSelection",
    "__ignoreListSelection",
    "__cachedMaxListItemWidth",
    "open",
    "placeToWidget",
    "show",
    "close",
    "hide",
    "setPreselected",
    "modelItem",
    "listSelection",
    "getChildControl",
    "getSelection",
    "helper",
    "__synchronizeSelection",
    "dispose",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "list",
    "List",
    "set",
    "focusable",
    "keepFocus",
    "height",
    "width",
    "maxHeight",
    "getMaxListHeight",
    "selectionMode",
    "quickSelection",
    "_onListChangeSelection",
    "_handlePointer",
    "_onChangeModel",
    "_onChangeModelLength",
    "_onChangeDelegate",
    "add",
    "flex",
    "_handleKeyboard",
    "isVisible",
    "getKeyIdentifier",
    "__selectPreselected",
    "clone",
    "setTarget",
    "setBubbles",
    "dispatchEvent",
    "__onChangeSelection",
    "getItem",
    "_adjustSize",
    "getAllowGrowDropDown",
    "_recalculateMaxListItemWidth",
    "removeAll",
    "_applySelection",
    "value",
    "old",
    "removeListener",
    "splice",
    "source",
    "equals",
    "getLength",
    "spliceArg",
    "length",
    "concat",
    "toArray",
    "getBounds",
    "addListenerOnce",
    "_adjustWidth",
    "_adjustHeight",
    "uiList",
    "setWidth",
    "resetWidth",
    "availableHeight",
    "_getAvailableHeight",
    "itemsHeight",
    "getPane",
    "getRowConfig",
    "getTotalSize",
    "minHeight",
    "getMinHeight",
    "setMaxHeight",
    "distance",
    "getLayoutLocation",
    "viewPortHeight",
    "bom",
    "Viewport",
    "getHeight",
    "toTop",
    "top",
    "toBottom",
    "bottom",
    "maxWidth",
    "model",
    "getModel",
    "createWidget",
    "util",
    "Delegate",
    "getMethod",
    "getDelegate",
    "ListItem",
    "tempListItem",
    "syncAppearance",
    "styles",
    "font",
    "getFont",
    "theme",
    "manager",
    "Font",
    "getInstance",
    "resolve",
    "getStyles",
    "getDefaultStyles",
    "paddingX",
    "getPaddingLeft",
    "getPaddingRight",
    "getMarginLeft",
    "getMarginRight",
    "label",
    "forEach",
    "item",
    "content",
    "get",
    "getLabelPath",
    "Label",
    "getHtmlSize",
    "undefined",
    "_getMaxListItemWidth",
    "destruct",
    "VirtualDropDownList"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A drop-down (popup) widget which contains a virtual list for selection.\n *\n * @childControl list {qx.ui.list.List} The virtual list.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.form.core.VirtualDropDownList\",\n{\n  extend  : qx.ui.popup.Popup,\n\n\n  /**\n   * Creates the drop-down list.\n   *\n   * @param target {qx.ui.form.core.AbstractVirtualBox} The composite widget.\n   */\n  construct : function(target)\n  {\n    qx.core.Assert.assertNotNull(target, \"Invalid parameter 'target'!\");\n    qx.core.Assert.assertNotUndefined(target, \"Invalid parameter 'target'!\");\n    qx.core.Assert.assertInterface(target, qx.ui.form.core.AbstractVirtualBox,\n      \"Invalid parameter 'target'!\");\n\n    this.base(arguments, new qx.ui.layout.VBox());\n\n    this._target = target;\n\n    this._createChildControl(\"list\");\n    this.addListener(\"changeVisibility\", this.__onChangeVisibility, this);\n\n    this.__defaultSelection = new qx.data.Array();\n    this.initSelection(this.__defaultSelection);\n  },\n\n\n  properties :\n  {\n    // overridden\n    autoHide :\n    {\n      refine : true,\n      init : false\n    },\n\n\n    // overridden\n    keepActive :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    /** Current selected items. */\n    selection :\n    {\n      check : \"qx.data.Array\",\n      event : \"changeSelection\",\n      apply : \"_applySelection\",\n      nullable : false,\n      deferredInit : true\n    },\n\n\n    /**\n     * Allow the drop-down to grow wider than its parent.\n     */\n    allowGrowDropDown :\n    {\n      init : false,\n      nullable : false,\n      check : \"Boolean\",\n      apply : \"_adjustSize\",\n      event : \"changeAllowGrowDropDown\"\n    }\n  },\n\n\n  events : {\n    /**\n     * This event is fired as soon as the content of the selection property changes, but\n     * this is not equal to the change of the selection of the widget. If the selection\n     * of the widget changes, the content of the array stored in the selection property\n     * changes. This means you have to listen to the change event of the selection array\n     * to get an event as soon as the user changes the selected item.\n     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>\n     */\n    \"changeSelection\" : \"qx.event.type.Data\"\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.form.core.AbstractVirtualBox} The composite widget. */\n    _target : null,\n\n\n    /** @type {var} The pre-selected model item. */\n    _preselected : null,\n\n\n    /**\n     * @type {Boolean} Indicator to ignore selection changes from the\n     * {@link #selection} array.\n     */\n    __ignoreSelection : false,\n\n\n    /** @type {Boolean} Indicator to ignore selection changes from the list. */\n    __ignoreListSelection : false,\n\n\n    /** @type {qx.data.Array} The initial selection array. */\n    __defaultSelection : null,\n\n\n    /**\n     * When the drop-down is allowed to grow wider than its parent,\n     * this member variable will contain the cached maximum list item width in pixels.\n     * This variable gets updated whenever the model or model length changes.\n     *\n     * @type {Number}\n     */\n    __cachedMaxListItemWidth : 0,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Shows the drop-down.\n     */\n    open : function()\n    {\n      this.placeToWidget(this._target, true);\n      this.show();\n    },\n\n\n    /**\n     * Hides the drop-down.\n     */\n    close : function() {\n      this.hide();\n    },\n\n\n    /**\n     * Pre-selects the drop-down item corresponding to the given model object.\n     *\n     * @param modelItem {Object} Item to be pre-selected.\n     */\n    setPreselected : function(modelItem)\n    {\n      this._preselected = modelItem;\n      this.__ignoreListSelection = true;\n      var listSelection = this.getChildControl(\"list\").getSelection();\n      var helper = new qx.data.Array([modelItem]);\n      this.__synchronizeSelection(helper, listSelection);\n      helper.dispose();\n      this.__ignoreListSelection = false;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"list\":\n          control = new qx.ui.list.List().set({\n            focusable: false,\n            keepFocus: true,\n            keepActive: true,\n            height: null,\n            width: null,\n            maxHeight: this._target.getMaxListHeight(),\n            selectionMode: \"one\",\n            quickSelection: true\n          });\n\n          control.getSelection().addListener(\"change\", this._onListChangeSelection, this);\n          control.addListener(\"tap\", this._handlePointer, this);\n          control.addListener(\"changeModel\", this._onChangeModel, this);\n          control.addListener(\"changeModelLength\", this._onChangeModelLength, this);\n          control.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n\n          this.add(control, {flex: 1});\n          break;\n      }\n\n      return control || this.base(arguments, id, hash);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Handles the complete keyboard events dispatched on the widget.\n     *\n     * @param event {qx.event.type.KeySequence} The keyboard event.\n     */\n    _handleKeyboard : function(event)\n    {\n      if (this.isVisible() && event.getKeyIdentifier() === \"Enter\") {\n        this.__selectPreselected();\n        return;\n      }\n\n      var clone = event.clone();\n      clone.setTarget(this.getChildControl(\"list\"));\n      clone.setBubbles(false);\n\n      this.getChildControl(\"list\").dispatchEvent(clone);\n    },\n\n\n    /**\n     * Handles all mouse events dispatched on the widget.\n     *\n     * @param event {qx.event.type.Mouse} The mouse event.\n     */\n    _handlePointer : function(event) {\n      this.__selectPreselected();\n    },\n\n\n    /**\n     * Handler for the local selection change. The method is responsible for\n     * the synchronization between the own selection and the selection\n     * form the drop-down.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    __onChangeSelection : function(event)\n    {\n      if (this.__ignoreSelection) {\n        return;\n      }\n\n      var selection = this.getSelection();\n      var listSelection = this.getChildControl(\"list\").getSelection();\n\n      this.__ignoreListSelection = true;\n      this.__synchronizeSelection(selection, listSelection);\n      this.__ignoreListSelection = false;\n\n      this.__ignoreSelection = true;\n      this.__synchronizeSelection(listSelection, selection);\n      this.__ignoreSelection = false;\n    },\n\n\n    /**\n     * Handler for the selection change on the list. The method is responsible\n     * for the synchronization between the list selection and the own selection.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    _onListChangeSelection : function(event)\n    {\n      if (this.__ignoreListSelection) {\n        return;\n      }\n\n      var listSelection = this.getChildControl(\"list\").getSelection();\n\n      if (this.isVisible()) {\n        this.setPreselected(listSelection.getItem(0));\n      } else {\n        this.__ignoreSelection = true;\n        this.__synchronizeSelection(listSelection, this.getSelection());\n        this.__ignoreSelection = false;\n      }\n    },\n\n\n    /**\n     * Handler for the own visibility changes. The method is responsible that\n     * the list selects the current selected item.\n     *\n     * @param event {qx.event.type.Data} The event.\n     */\n    __onChangeVisibility : function(event)\n    {\n      if (this.isVisible())\n      {\n        if (this._preselected == null)\n        {\n          var selection = this.getSelection();\n          var listSelection = this.getChildControl(\"list\").getSelection();\n          this.__synchronizeSelection(selection, listSelection);\n        }\n        this._adjustSize();\n      } else {\n        this.setPreselected(null);\n      }\n    },\n\n\n    /**\n     * Handler for the model change event.\n     * Called when the whole model changes, not when its length changes.\n     *\n     * @param event {qx.event.type.Data} The change event.\n     * @protected\n     */\n    _onChangeModel : function(event) {\n      if (this.getAllowGrowDropDown()) {\n        this._recalculateMaxListItemWidth();\n      }\n\n      this._adjustSize();\n    },\n\n\n    /**\n     * Handler for the model length change event.\n     * Called whenever items get added or removed from the model,\n     * not when the model itself changes.\n     *\n     * @param event {qx.event.type.Data}\n     * @protected\n     */\n    _onChangeModelLength : function (event) {\n      if (this.getAllowGrowDropDown()) {\n        this._recalculateMaxListItemWidth();\n      }\n\n      this._adjustSize();\n    },\n\n\n    /**\n     * Handler for the delegate change event.\n     *\n     * @param event {qx.event.type.Data} The change event.\n     */\n    _onChangeDelegate : function(event) {\n      this.getSelection().removeAll();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applySelection : function(value, old)\n    {\n      value.addListener(\"change\", this.__onChangeSelection, this);\n\n      if (old != null) {\n        old.removeListener(\"change\", this.__onChangeSelection, this);\n      }\n\n      this.__synchronizeSelection(\n        value, this.getChildControl(\"list\").getSelection(value)\n      );\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Helper method to select the current preselected item, also closes the\n     * drop-down.\n     */\n    __selectPreselected : function()\n    {\n      if (this._preselected != null)\n      {\n        var selection = this.getSelection();\n        selection.splice(0, 1, this._preselected);\n        this._preselected = null;\n        this.close();\n      }\n    },\n\n\n    /**\n     * Helper method to synchronize both selection. The target selection has\n     * the same selection like the source selection after the synchronization.\n     *\n     * @param source {qx.data.Array} The source selection.\n     * @param target {qx.data.Array} The target selection.\n     */\n    __synchronizeSelection : function(source, target)\n    {\n      if (source.equals(target)) {\n        return;\n      }\n\n      if (source.getLength() <= 0) {\n        target.removeAll();\n      }\n      else\n      {\n        // build arguments array for splice(0, target.length, source[0], source[1], ...)\n        var spliceArg = [0, target.length];\n        spliceArg = spliceArg.concat(source.toArray());\n\n        // use apply since it allow to use an array as the argument array\n        // (calling splice directly with an array insert it in the array on which splice is called)\n        // don't forget to dispose the array created by splice\n        target.splice.apply(target, spliceArg).dispose();\n      }\n    },\n\n\n    /**\n     * Adjust the drop-down to the available width and height, by calling\n     * {@link #_adjustWidth} and {@link #_adjustHeight}.\n     */\n    _adjustSize : function()\n    {\n      if (!this._target.getBounds()) {\n        this.addListenerOnce(\"appear\", this._adjustSize, this);\n        return;\n      }\n\n      this._adjustWidth();\n      this._adjustHeight();\n    },\n\n\n    /**\n     * Adjust the drop-down to the available width. The width is limited by\n     * the current width from the _target, unless allowGrowDropDown is true.\n     */\n    _adjustWidth : function()\n    {\n      var width = this._target.getBounds().width;\n      var uiList = this.getChildControl('list');\n      if (this.getAllowGrowDropDown()) {\n        // Let the drop-down handle its own width.\n        this.setWidth(null);\n\n        if (this.__cachedMaxListItemWidth > 0) {\n          uiList.setWidth(this.__cachedMaxListItemWidth);\n        } else {\n          uiList.setWidth(width);\n        }\n      } else {\n        // Make the drop-down as wide as the virtual-box that it is owned by.\n        this.setWidth(width);\n        uiList.resetWidth();\n      }\n    },\n\n\n    /**\n     * Adjust the drop-down to the available height. Ensure that the list\n     * is never bigger that the max list height and the available space\n     * in the viewport.\n     */\n    _adjustHeight : function()\n    {\n      var availableHeight = this._getAvailableHeight();\n      if (availableHeight === null) {\n        return;\n      }\n\n      var maxHeight = this._target.getMaxListHeight();\n      var list = this.getChildControl(\"list\");\n      var itemsHeight = list.getPane().getRowConfig().getTotalSize();\n\n      if (maxHeight == null || itemsHeight < maxHeight) {\n        maxHeight = itemsHeight;\n      }\n\n      if (maxHeight > availableHeight) {\n        maxHeight = availableHeight;\n      }\n\n      var minHeight = list.getMinHeight();\n      if (null !== minHeight && minHeight > maxHeight) {\n        maxHeight = minHeight;\n      }\n\n      list.setMaxHeight(maxHeight);\n    },\n\n\n    /**\n     * Calculates the available height in the viewport.\n     *\n     * @return {Integer|null} Available height in the viewport.\n     */\n    _getAvailableHeight : function()\n    {\n      var distance = this.getLayoutLocation(this._target);\n      if (!distance) {\n        return null;\n      }\n\n      var viewPortHeight = qx.bom.Viewport.getHeight();\n\n      // distance to the bottom and top borders of the viewport\n      var toTop = distance.top;\n      var toBottom = viewPortHeight - distance.bottom;\n\n      return toTop > toBottom ? toTop : toBottom;\n    },\n\n\n    /**\n     * Loop over all model items to recalculate the maximum list item width.\n     *\n     * @protected\n     */\n    _recalculateMaxListItemWidth : function () {\n      var maxWidth = 0;\n      var list = this.getChildControl(\"list\");\n      var model = list.getModel();\n      if (model && model.length) {\n        var createWidget = qx.util.Delegate.getMethod(list.getDelegate(), \"createItem\");\n        if (!createWidget) {\n          createWidget = function () {\n            return new qx.ui.form.ListItem();\n          };\n        }\n\n        var tempListItem = createWidget();\n\n        // Make sure the widget has the correct padding properties.\n        tempListItem.syncAppearance();\n\n        var styles;\n        var font = tempListItem.getFont();\n        if (font) {\n          styles = qx.theme.manager.Font.getInstance().resolve(font).getStyles();\n        }\n        if (!styles) {\n          styles = qx.bom.Font.getDefaultStyles();\n        }\n\n        var paddingX =\n          list.getPaddingLeft() + list.getPaddingRight() +\n          tempListItem.getPaddingLeft() + tempListItem.getPaddingRight() +\n          tempListItem.getMarginLeft() + tempListItem.getMarginRight();\n\n        var label = tempListItem.getChildControl('label');\n        if (label) {\n          // Make sure the widget has the correct padding properties.\n          label.syncAppearance();\n\n          paddingX +=\n            label.getPaddingLeft() + label.getPaddingRight() +\n            label.getMarginLeft() + label.getMarginRight();\n        }\n\n        model.forEach(function (item) {\n          var width = 0;\n          var content;\n\n          if (typeof item === \"string\") {\n            content = item;\n          } else if (typeof item === \"object\" && item !== null) {\n            content = item.get(list.getLabelPath());\n          }\n\n          if (content) {\n            width = qx.bom.Label.getHtmlSize(content, styles, undefined).width + paddingX;\n\n            if (width > maxWidth) {\n              maxWidth = width;\n            }\n          }\n        });\n\n        tempListItem.dispose();\n      }\n\n      this.__cachedMaxListItemWidth = maxWidth;\n    },\n\n\n    /**\n     * Get the cached maximum list item width.\n     *\n     * @return {Number}\n     * @protected\n     */\n    _getMaxListItemWidth : function () {\n      return this.__cachedMaxListItemWidth;\n    }\n  },\n\n  destruct : function()\n  {\n    if (this.__defaultSelection) {\n      this.__defaultSelection.dispose();\n    }\n  }\n});\n"
  ]
}