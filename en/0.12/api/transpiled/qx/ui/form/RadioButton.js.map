{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/RadioButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "Button",
    "include",
    "MForm",
    "MModelProperty",
    "implement",
    "IRadioItem",
    "IForm",
    "IBooleanForm",
    "IModel",
    "construct",
    "label",
    "addListener",
    "_onExecute",
    "_onKeyPress",
    "properties",
    "group",
    "check",
    "nullable",
    "apply",
    "value",
    "event",
    "init",
    "appearance",
    "refine",
    "allowGrowX",
    "members",
    "_forwardStates",
    "checked",
    "focused",
    "invalid",
    "hovered",
    "_bindableProperties",
    "_applyValue",
    "old",
    "addState",
    "removeState",
    "_applyGroup",
    "remove",
    "add",
    "e",
    "grp",
    "getGroup",
    "getAllowEmptySelection",
    "toggleValue",
    "setValue",
    "getKeyIdentifier",
    "selectPrevious",
    "selectNext",
    "RadioButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Radio buttons can be used in radio groups to allow to the user to select\n * exactly one item from a list. Radio groups are established by adding\n * radio buttons to a radio manager {@link qx.ui.form.RadioGroup}.\n *\n * Example:\n * <pre class=\"javascript\">\n *   var container = new qx.ui.container.Composite(new qx.ui.layout.VBox);\n *\n *   var female = new qx.ui.form.RadioButton(\"female\");\n *   var male = new qx.ui.form.RadioButton(\"male\");\n *\n *   var mgr = new qx.ui.form.RadioGroup();\n *   mgr.add(female, male);\n *\n *   container.add(male);\n *   container.add(female);\n * </pre>\n */\nqx.Class.define(\"qx.ui.form.RadioButton\",\n{\n  extend : qx.ui.form.Button,\n  include : [\n    qx.ui.form.MForm,\n    qx.ui.form.MModelProperty\n  ],\n  implement : [\n    qx.ui.form.IRadioItem,\n    qx.ui.form.IForm,\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IModel\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String?null} An optional label for the radio button.\n   */\n  construct : function(label)\n  {\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertArgumentsCount(arguments, 0, 1);\n    }\n\n    this.base(arguments, label);\n\n    // Add listeners\n    this.addListener(\"execute\", this._onExecute);\n    this.addListener(\"keypress\", this._onKeyPress);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons */\n    group :\n    {\n      check  : \"qx.ui.form.RadioGroup\",\n      nullable : true,\n      apply : \"_applyGroup\"\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value :\n    {\n      check : \"Boolean\",\n      nullable : true,\n      event : \"changeValue\",\n      apply : \"_applyValue\",\n      init: false\n    },\n\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"radiobutton\"\n    },\n\n    // overridden\n    allowGrowX :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      checked : true,\n      focused : true,\n      invalid : true,\n      hovered : true\n    },\n\n    // overridden (from MExecutable to keep the icon out of the binding)\n    /**\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties :\n    [\n      \"enabled\",\n      \"label\",\n      \"toolTipText\",\n      \"value\",\n      \"menu\"\n    ],\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyValue : function(value, old)\n    {\n      value ?\n        this.addState(\"checked\") :\n        this.removeState(\"checked\");\n    },\n\n\n    /** The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons */\n    _applyGroup : function(value, old)\n    {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT-HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for the \"execute\" event.\n     *\n     * Sets the property \"checked\" to true.\n     *\n     * @param e {qx.event.type.Event} execute event\n     */\n    _onExecute : function(e) {\n      var grp = this.getGroup();\n      if (grp && grp.getAllowEmptySelection()) {\n        this.toggleValue();\n      } else {\n        this.setValue(true);\n      }\n    },\n\n\n    /**\n     * Event listener for the \"keyPress\" event.\n     *\n     * Selects the previous RadioButton when pressing \"Left\" or \"Up\" and\n     * Selects the next RadioButton when pressing \"Right\" and \"Down\"\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     */\n    _onKeyPress : function(e)\n    {\n\n      var grp = this.getGroup();\n      if (!grp) {\n        return;\n      }\n\n      switch(e.getKeyIdentifier())\n      {\n        case \"Left\":\n        case \"Up\":\n          grp.selectPrevious();\n          break;\n\n        case \"Right\":\n        case \"Down\":\n          grp.selectNext();\n          break;\n      }\n    }\n  }\n});\n"
  ]
}