{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/form/ToggleButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "include",
    "core",
    "MExecutable",
    "implement",
    "form",
    "IBooleanForm",
    "IExecutable",
    "IRadioItem",
    "construct",
    "label",
    "icon",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onPointerDown",
    "_onPointerUp",
    "_onKeyDown",
    "_onKeyUp",
    "_onExecute",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "value",
    "check",
    "nullable",
    "event",
    "apply",
    "group",
    "triState",
    "members",
    "_applyGroup",
    "old",
    "remove",
    "add",
    "_applyValue",
    "addState",
    "removeState",
    "isTriState",
    "_applyTriState",
    "getValue",
    "e",
    "toggleValue",
    "getTarget",
    "hasState",
    "isLeftPressed",
    "capture",
    "stopPropagation",
    "releaseCapture",
    "execute",
    "getKeyIdentifier",
    "ToggleButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A toggle Button widget\n *\n * If the user presses the button by tapping on it pressing the enter or\n * space key, the button toggles between the pressed an not pressed states.\n */\nqx.Class.define(\"qx.ui.form.ToggleButton\",\n{\n  extend : qx.ui.basic.Atom,\n  include : [\n    qx.ui.core.MExecutable\n  ],\n  implement : [\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IExecutable,\n    qx.ui.form.IRadioItem\n  ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a ToggleButton.\n   *\n   * @param label {String} The text on the button.\n   * @param icon {String} An URI to the icon of the button.\n   */\n  construct : function(label, icon)\n  {\n    this.base(arguments, label, icon);\n\n    // register pointer events\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n\n    // register keyboard events\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"keyup\", this._onKeyUp);\n\n    // register execute event\n    this.addListener(\"execute\", this._onExecute, this);\n\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties:\n  {\n    // overridden\n    appearance:\n    {\n      refine: true,\n      init: \"toggle-button\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value :\n    {\n      check : \"Boolean\",\n      nullable : true,\n      event : \"changeValue\",\n      apply : \"_applyValue\",\n      init : false\n    },\n\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons. */\n    group :\n    {\n      check  : \"qx.ui.form.RadioGroup\",\n      nullable : true,\n      apply : \"_applyGroup\"\n    },\n\n    /**\n    * Whether the button has a third state. Use this for tri-state checkboxes.\n    *\n    * When enabled, the value null of the property value stands for \"undetermined\",\n    * while true is mapped to \"enabled\" and false to \"disabled\" as usual. Note\n    * that the value property is set to false initially.\n    *\n    */\n    triState :\n    {\n      check : \"Boolean\",\n      apply : \"_applyTriState\",\n      nullable : true,\n      init : null\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /** The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons */\n    _applyGroup : function(value, old)\n    {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n\n    /**\n     * Changes the state of the button dependent on the checked value.\n     *\n     * @param value {Boolean} Current value\n     * @param old {Boolean} Previous value\n     */\n    _applyValue : function(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      if (this.isTriState()) {\n        if (value === null) {\n          this.addState(\"undetermined\");\n        } else if (old === null) {\n          this.removeState(\"undetermined\");\n        }\n      }\n    },\n\n    /**\n    * Apply value property when triState property is modified.\n    *\n    * @param value {Boolean} Current value\n    * @param old {Boolean} Previous value\n    */\n    _applyTriState : function(value, old) {\n      this._applyValue(this.getValue());\n    },\n\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute : function(e) {\n      this.toggleValue();\n    },\n\n\n    /**\n     * Listener method for \"pointerover\" event.\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver : function(e)\n    {\n      if (e.getTarget() !== this) {\n        return;\n      }\n\n      this.addState(\"hovered\");\n\n      if (this.hasState(\"abandoned\"))\n      {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n    },\n\n\n    /**\n     * Listener method for \"pointerout\" event.\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" state (if \"pressed\" state is set)</li>\n     * <li>Removes \"pressed\" state (if \"pressed\" state is set and button is not checked)\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerOut : function(e)\n    {\n      if (e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\"))\n      {\n        if (!this.getValue()) {\n          this.removeState(\"pressed\");\n        }\n\n        this.addState(\"abandoned\");\n      }\n    },\n\n\n    /**\n     * Listener method for \"pointerdown\" event.\n     * <ul>\n     * <li>Activates capturing</li>\n     * <li>Removes \"abandoned\" state</li>\n     * <li>Adds \"pressed\" state</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerDown : function(e)\n    {\n      if (!e.isLeftPressed()) {\n        return;\n      }\n\n      // Activate capturing if the button get a pointerout while\n      // the button is pressed.\n      this.capture();\n\n      this.removeState(\"abandoned\");\n      this.addState(\"pressed\");\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener method for \"pointerup\" event.\n     * <ul>\n     * <li>Releases capturing</li>\n     * <li>Removes \"pressed\" state (if not \"abandoned\" state is set and \"pressed\" state is set)</li>\n     * <li>Removes \"abandoned\" state (if set)</li>\n     * <li>Toggles {@link #value} (if state \"abandoned\" is not set and state \"pressed\" is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerUp : function(e)\n    {\n      this.releaseCapture();\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n      } else if (this.hasState(\"pressed\")) {\n        this.execute();\n      }\n\n      this.removeState(\"pressed\");\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener method for \"keydown\" event.<br/>\n     * Removes \"abandoned\" and adds \"pressed\" state\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyDown : function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n\n          e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Listener method for \"keyup\" event.<br/>\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n     * for the keys \"Enter\" or \"Space\". It also toggles the {@link #value} property.\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyUp : function(e)\n    {\n      if (!this.hasState(\"pressed\")) {\n        return;\n      }\n\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.execute();\n\n          this.removeState(\"pressed\");\n          e.stopPropagation();\n      }\n    }\n  }\n});\n"
  ]
}