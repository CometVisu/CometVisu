{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/RadioGroup.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "ISingleSelection",
    "form",
    "IField",
    "IForm",
    "IModelSelection",
    "include",
    "MSingleSelectionHandling",
    "MModelSelection",
    "construct",
    "varargs",
    "__items",
    "addListener",
    "__onChangeSelection",
    "add",
    "apply",
    "arguments",
    "properties",
    "groupedProperty",
    "check",
    "event",
    "init",
    "groupProperty",
    "enabled",
    "wrap",
    "allowEmptySelection",
    "valid",
    "required",
    "invalidMessage",
    "requiredInvalidMessage",
    "nullable",
    "members",
    "getItems",
    "items",
    "item",
    "getGroupedProperty",
    "groupedPropertyUp",
    "lang",
    "String",
    "firstUp",
    "i",
    "l",
    "length",
    "includes",
    "_onItemChangeChecked",
    "push",
    "set",
    "getGroupProperty",
    "get",
    "setSelection",
    "isAllowEmptySelection",
    "getSelection",
    "remove",
    "Array",
    "reset",
    "removeListener",
    "resetSelection",
    "getChildren",
    "e",
    "getTarget",
    "_applyGroupedProperty",
    "value",
    "old",
    "oldFirstUp",
    "newFirstUp",
    "_applyInvalidMessage",
    "setInvalidMessage",
    "_applyValid",
    "setValid",
    "_applyEnabled",
    "resetEnabled",
    "setEnabled",
    "_applyAllowEmptySelection",
    "isSelectionEmpty",
    "selectNext",
    "index",
    "indexOf",
    "getWrap",
    "Math",
    "min",
    "getEnabled",
    "selectPrevious",
    "max",
    "_getItems",
    "_isAllowEmptySelection",
    "_isItemSelectable",
    "getData",
    "getOldData",
    "destruct",
    "_disposeArray",
    "RadioGroup"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The radio group handles a collection of items from which only one item\n * can be selected. Selection another item will deselect the previously selected\n * item.\n *\n * This class is e.g. used to create radio groups or {@link qx.ui.form.RadioButton}\n * or {@link qx.ui.toolbar.RadioButton} instances.\n *\n * We also offer a widget for the same purpose which uses this class. So if\n * you like to act with a widget instead of a pure logic coupling of the\n * widgets, take a look at the {@link qx.ui.form.RadioButtonGroup} widget.\n */\nqx.Class.define(\"qx.ui.form.RadioGroup\",\n{\n  extend : qx.core.Object,\n  implement : [\n    qx.ui.core.ISingleSelection,\n    qx.ui.form.IField,\n    qx.ui.form.IForm,\n    qx.ui.form.IModelSelection\n  ],\n  include : [\n    qx.ui.core.MSingleSelectionHandling,\n    qx.ui.form.MModelSelection\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * @param varargs {qx.core.Object} A variable number of items, which are\n   *     initially added to the radio group, the first item will be selected.\n   */\n  construct : function(varargs)\n  {\n    this.base(arguments);\n\n    // create item array\n    this.__items = [];\n\n    // add listener before call add!!!\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n\n    if (varargs != null) {\n      this.add.apply(this, arguments);\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    /**\n     * The property name in each of the added widgets that is grouped\n     */\n    groupedProperty :\n    {\n      check : \"String\",\n      apply : \"_applyGroupedProperty\",\n      event : \"changeGroupedProperty\",\n      init  : \"value\"\n    },\n\n    /**\n     * The property name in each of the added widgets that is informed of the\n     * RadioGroup object it is a member of\n     */\n    groupProperty :\n    {\n      check : \"String\",\n      event : \"changeGroupProperty\",\n      init  : \"group\"\n    },\n\n    /**\n     * Whether the radio group is enabled\n     */\n    enabled :\n    {\n      check : \"Boolean\",\n      apply : \"_applyEnabled\",\n      event : \"changeEnabled\",\n      init: true\n    },\n\n    /**\n     * Whether the selection should wrap around. This means that the successor of\n     * the last item is the first item.\n     */\n    wrap :\n    {\n      check : \"Boolean\",\n      init: true\n    },\n\n    /**\n     * If is set to <code>true</code> the selection could be empty,\n     * otherwise is always one <code>RadioButton</code> selected.\n     */\n    allowEmptySelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyAllowEmptySelection\"\n    },\n\n    /**\n     * Flag signaling if the group at all is valid. All children will have the\n     * same state.\n     */\n    valid : {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyValid\",\n      event : \"changeValid\"\n    },\n\n    /**\n     * Flag signaling if the group is required.\n     */\n    required : {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeRequired\"\n    },\n\n    /**\n     * Message which is shown in an invalid tooltip.\n     */\n    invalidMessage : {\n      check : \"String\",\n      init: \"\",\n      event : \"changeInvalidMessage\",\n      apply : \"_applyInvalidMessage\"\n    },\n\n\n    /**\n     * Message which is shown in an invalid tooltip if the {@link #required} is\n     * set to true.\n     */\n    requiredInvalidMessage : {\n      check : \"String\",\n      nullable : true,\n      event : \"changeInvalidMessage\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {qx.ui.form.IRadioItem[]} The items of the radio group */\n    __items : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get all managed items\n     *\n     * @return {qx.ui.form.IRadioItem[]} All managed items.\n     */\n    getItems : function() {\n      return this.__items;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      REGISTRY\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Add the passed items to the radio group.\n     *\n     * @param varargs {qx.ui.form.IRadioItem} A variable number of items to add.\n     */\n    add : function(varargs)\n    {\n      var items = this.__items;\n      var item;\n      var groupedProperty = this.getGroupedProperty();\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\n\n      for (var i=0, l=arguments.length; i<l; i++)\n      {\n        item = arguments[i];\n\n        if (items.includes(item)) {\n          continue;\n        }\n\n        // Register listeners\n        item.addListener(\n          \"change\" + groupedPropertyUp, this._onItemChangeChecked, this);\n\n        // Push RadioButton to array\n        items.push(item);\n\n        // Inform radio button about new group\n        item.set(this.getGroupProperty(), this);\n\n        // Need to update internal value?\n        if (item.get(groupedProperty)) {\n          this.setSelection([item]);\n        }\n      }\n\n      // Select first item when only one is registered\n      if (!this.isAllowEmptySelection() && items.length > 0 && !this.getSelection()[0]) {\n        this.setSelection([items[0]]);\n      }\n    },\n\n    /**\n     * Remove an item from the radio group.\n     *\n     * @param item {qx.ui.form.IRadioItem} The item to remove.\n     */\n    remove : function(item)\n    {\n      var items = this.__items;\n      var groupedProperty = this.getGroupedProperty();\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\n\n      if (items.includes(item))\n      {\n        // Remove RadioButton from array\n        qx.lang.Array.remove(items, item);\n\n        // Inform radio button about new group\n        if (item.get(this.getGroupProperty()) === this) {\n          item.reset(this.getGroupProperty());\n        }\n\n        // Deregister listeners\n        item.removeListener(\n          \"change\" + groupedPropertyUp, this._onItemChangeChecked, this);\n\n        // if the radio was checked, set internal selection to null\n        if (item.get(groupedProperty)) {\n          this.resetSelection();\n        }\n      }\n    },\n\n\n    /**\n     * Returns an array containing the group's items.\n     *\n     * @return {qx.ui.form.IRadioItem[]} The item array\n     */\n    getChildren : function()\n    {\n      return this.__items;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LISTENER FOR ITEM CHANGES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event listener for <code>changeValue</code> event of every managed item.\n     *\n     * @param e {qx.event.type.Data} Data event\n     */\n    _onItemChangeChecked : function(e)\n    {\n      var item = e.getTarget();\n      var groupedProperty = this.getGroupedProperty();\n\n      if (item.get(groupedProperty)) {\n        this.setSelection([item]);\n      } else if (this.getSelection()[0] == item) {\n        this.resetSelection();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyGroupedProperty : function(value, old) {\n      var item;\n      var oldFirstUp = qx.lang.String.firstUp(old);\n      var newFirstUp = qx.lang.String.firstUp(value);\n\n      for (var i = 0; i < this.__items.length; i++) {\n        item = this.__items[i];\n\n        // remove the listener for the old change event\n        item.removeListener(\n          \"change\" + oldFirstUp, this._onItemChangeChecked, this);\n\n        // add the listener for the new change event\n        item.removeListener(\n          \"change\" + newFirstUp, this._onItemChangeChecked, this);\n      }\n    },\n\n    // property apply\n    _applyInvalidMessage : function(value, old) {\n      for (var i = 0; i < this.__items.length; i++) {\n        this.__items[i].setInvalidMessage(value);\n      }\n    },\n\n    // property apply\n    _applyValid: function(value, old) {\n      for (var i = 0; i < this.__items.length; i++) {\n        this.__items[i].setValid(value);\n      }\n    },\n\n    // property apply\n    _applyEnabled : function(value, old)\n    {\n      var items = this.__items;\n      if (value == null)\n      {\n        for (var i=0, l=items.length; i<l; i++) {\n          items[i].resetEnabled();\n        }\n      }\n      else\n      {\n        for (var i=0, l=items.length; i<l; i++) {\n          items[i].setEnabled(value);\n        }\n      }\n    },\n\n    // property apply\n    _applyAllowEmptySelection : function(value, old)\n    {\n      if (!value && this.isSelectionEmpty()) {\n        this.resetSelection();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Select the item following the given item.\n     */\n    selectNext : function()\n    {\n      var item = this.getSelection()[0];\n      var items = this.__items;\n      var index = items.indexOf(item);\n      if (index == -1) {\n        return;\n      }\n\n      var i = 0;\n      var length = items.length;\n\n      // Find next enabled item\n      if (this.getWrap()) {\n        index = (index + 1) % length;\n      } else {\n        index = Math.min(index + 1, length - 1);\n      }\n\n      while (i < length && !items[index].getEnabled())\n      {\n        index = (index + 1) % length;\n        i++;\n      }\n\n      this.setSelection([items[index]]);\n    },\n\n\n    /**\n     * Select the item previous the given item.\n     */\n    selectPrevious : function()\n    {\n      var item = this.getSelection()[0];\n      var items = this.__items;\n      var index = items.indexOf(item);\n      if (index == -1) {\n        return;\n      }\n\n      var i = 0;\n      var length = items.length;\n\n      // Find previous enabled item\n      if (this.getWrap()) {\n        index = (index - 1 + length) % length;\n      } else {\n        index = Math.max(index - 1, 0);\n      }\n\n      while (i < length && !items[index].getEnabled())\n      {\n        index = (index - 1 + length) % length;\n        i++;\n      }\n\n      this.setSelection([items[index]]);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the items for the selection.\n     *\n     * @return {qx.ui.form.IRadioItem[]} Items to select.\n     */\n    _getItems : function() {\n      return this.getItems();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection: function() {\n      return this.isAllowEmptySelection();\n    },\n\n\n    /**\n     * Returns whether the item is selectable. In opposite to the default\n     * implementation (which checks for visible items) every radio button\n     * which is part of the group is selected even if it is currently not visible.\n     *\n     * @param item {qx.ui.form.IRadioItem} The item to check if its selectable.\n     * @return {Boolean} <code>true</code> if the item is part of the radio group\n     *    <code>false</code> otherwise.\n     */\n    _isItemSelectable : function(item) {\n      return this.__items.indexOf(item) != -1;\n    },\n\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection : function(e)\n    {\n      var value = e.getData()[0];\n      var old = e.getOldData()[0];\n      var groupedProperty = this.getGroupedProperty();\n\n      if (old) {\n        old.set(groupedProperty, false);\n      }\n\n      if (value) {\n        value.set(groupedProperty, true);\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n\n  destruct : function() {\n    this._disposeArray(\"__items\");\n  }\n});\n"
  ]
}