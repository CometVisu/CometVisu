{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/form/AbstractField.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "IForm",
    "include",
    "MForm",
    "type",
    "statics",
    "__stylesheet",
    "__addPlaceholderRules",
    "engine",
    "Environment",
    "get",
    "browser",
    "colorManager",
    "theme",
    "manager",
    "Color",
    "getInstance",
    "color",
    "resolve",
    "selector",
    "parseFloat",
    "style",
    "Stylesheet",
    "addRule",
    "separator",
    "join",
    "construct",
    "value",
    "__useQxPlaceholder",
    "setValue",
    "getContentElement",
    "addListener",
    "_onChangeContent",
    "_syncPlaceholder",
    "AbstractField",
    "addClass",
    "locale",
    "Manager",
    "_onChangeLocale",
    "events",
    "properties",
    "textAlign",
    "check",
    "nullable",
    "themeable",
    "apply",
    "readOnly",
    "event",
    "init",
    "selectable",
    "refine",
    "focusable",
    "maxLength",
    "Infinity",
    "liveUpdate",
    "placeholder",
    "filter",
    "members",
    "__nullValue",
    "_placeholder",
    "__oldValue",
    "__oldInputValue",
    "__font",
    "__webfontListenerId",
    "getFocusElement",
    "el",
    "_createInputElement",
    "html",
    "Input",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "updateInsets",
    "_updateInsets",
    "changes",
    "inner",
    "size",
    "pixel",
    "local",
    "margin",
    "innerWidth",
    "innerHeight",
    "input",
    "insets",
    "getInsets",
    "_getPlaceholderElement",
    "setStyles",
    "paddingTop",
    "paddingRight",
    "right",
    "paddingBottom",
    "bottom",
    "paddingLeft",
    "_renderContentElement",
    "position",
    "element",
    "_createContentElement",
    "setSelectable",
    "getSelectable",
    "setEnabled",
    "getEnabled",
    "_onHtmlInput",
    "setAttribute",
    "backgroundImage",
    "util",
    "ResourceManager",
    "toUri",
    "_applyEnabled",
    "old",
    "_showPlaceholder",
    "_removePlaceholder",
    "getPlaceholder",
    "__textSize",
    "_getContentHint",
    "_applyFont",
    "removeListenerById",
    "styles",
    "Font",
    "bom",
    "webfonts",
    "WebFont",
    "_onWebFontStatusChange",
    "getStyles",
    "getDefaultStyles",
    "getTextColor",
    "Element",
    "flush",
    "Label",
    "getTextSize",
    "queue",
    "Layout",
    "add",
    "_applyTextColor",
    "setStyle",
    "removeStyle",
    "_applyMaxLength",
    "removeAttribute",
    "tabFocus",
    "selectAllText",
    "_getTextSize",
    "e",
    "getData",
    "fireEvents",
    "getFilter",
    "filteredValue",
    "_validateInput",
    "fireDataEvent",
    "getLiveUpdate",
    "__fireChangeValueEvent",
    "ev",
    "valid",
    "fireNonBubblingEvent",
    "Data",
    "isDisposed",
    "lang",
    "Type",
    "isString",
    "elem",
    "getValue",
    "oldValue",
    "data",
    "Error",
    "resetValue",
    "getTextSelection",
    "getTextSelectionLength",
    "getTextSelectionStart",
    "getTextSelectionEnd",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "setLayoutParent",
    "parent",
    "getLayoutParent",
    "getParent",
    "remove",
    "fieldValue",
    "hasState",
    "addState",
    "_onPointerDownPlaceholder",
    "window",
    "setTimeout",
    "focus",
    "bind",
    "removeState",
    "content",
    "translate",
    "setPlaceholder",
    "_onChangeTheme",
    "dispose",
    "removeSheet",
    "index",
    "search",
    "processedValue",
    "length",
    "charAt",
    "substring",
    "_applyPlaceholder",
    "removeListener",
    "getNodeName",
    "getDomElement",
    "addListenerOnce",
    "_applyTextAlign",
    "_applyReadOnly",
    "setFocusable",
    "defer",
    "css",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This is a basic form field with common functionality for\n * {@link TextArea} and {@link TextField}.\n *\n * On every keystroke the value is synchronized with the\n * value of the textfield. Value changes can be monitored by listening to the\n * {@link #input} or {@link #changeValue} events, respectively.\n */\nqx.Class.define(\"qx.ui.form.AbstractField\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.IStringForm,\n    qx.ui.form.IForm\n  ],\n  include : [\n    qx.ui.form.MForm\n  ],\n  type : \"abstract\",\n\n  statics : {\n    /** Stylesheet needed to style the native placeholder element. */\n    __stylesheet : null,\n\n\n    /**\n     * Adds the CSS rules needed to style the native placeholder element.\n     */\n    __addPlaceholderRules : function() {\n      var engine = qx.core.Environment.get(\"engine.name\");\n      var browser = qx.core.Environment.get(\"browser.name\");\n      var colorManager = qx.theme.manager.Color.getInstance();\n      var color = colorManager.resolve(\"text-placeholder\");\n      var selector;\n\n      if (engine == \"gecko\") {\n        // see https://developer.mozilla.org/de/docs/CSS/:-moz-placeholder for details\n       if (parseFloat(qx.core.Environment.get(\"engine.version\")) >= 19) {\n          selector = \"input::-moz-placeholder, textarea::-moz-placeholder\";\n        } else {\n          selector = \"input:-moz-placeholder, textarea:-moz-placeholder\";\n        }\n        qx.ui.style.Stylesheet.getInstance().addRule(selector, \"color: \" + color + \" !important\");\n      } else if (engine == \"webkit\" && browser != \"edge\") {\n        selector = \"input.qx-placeholder-color::-webkit-input-placeholder, textarea.qx-placeholder-color::-webkit-input-placeholder\";\n        qx.ui.style.Stylesheet.getInstance().addRule(selector, \"color: \" + color);\n      } else if (engine == \"mshtml\" || browser == \"edge\") {\n        var separator = browser == \"edge\" ? \"::\" : \":\";\n        selector = [\"input.qx-placeholder-color\", \"-ms-input-placeholder, textarea.qx-placeholder-color\", \"-ms-input-placeholder\"].join(separator);\n        qx.ui.style.Stylesheet.getInstance().addRule(selector, \"color: \" + color + \" !important\");\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} initial text value of the input field ({@link #setValue}).\n   */\n  construct : function(value)\n  {\n    this.base(arguments);\n\n    // shortcut for placeholder feature detection\n    this.__useQxPlaceholder = !qx.core.Environment.get(\"css.placeholder\");\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    this.getContentElement().addListener(\n      \"change\", this._onChangeContent, this\n    );\n\n    // use qooxdoo placeholder if no native placeholder is supported\n    if (this.__useQxPlaceholder) {\n      // assign the placeholder text after the appearance has been applied\n      this.addListener(\"syncAppearance\", this._syncPlaceholder, this);\n    } else {\n      // add rules for native placeholder color\n      qx.ui.form.AbstractField.__addPlaceholderRules();\n      // add a class to the input to restrict the placeholder color\n      this.getContentElement().addClass(\"qx-placeholder-color\");\n    }\n\n    // translation support\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\", this._onChangeLocale, this\n      );\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * The event is fired on every keystroke modifying the value of the field.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current value of the text field.\n     */\n    \"input\" : \"qx.event.type.Data\",\n\n\n    /**\n     * The event is fired each time the text field looses focus and the\n     * text field values has changed.\n     *\n     * If you change {@link #liveUpdate} to true, the changeValue event will\n     * be fired after every keystroke and not only after every focus loss. In\n     * that mode, the changeValue event is equal to the {@link #input} event.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current text value of the field.\n     */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Alignment of the text\n     */\n    textAlign :\n    {\n      check : [ \"left\", \"center\", \"right\" ],\n      nullable : true,\n      themeable : true,\n      apply : \"_applyTextAlign\"\n    },\n\n\n    /** Whether the field is read only */\n    readOnly :\n    {\n      check : \"Boolean\",\n      apply : \"_applyReadOnly\",\n      event : \"changeReadOnly\",\n      init : false\n    },\n\n\n    // overridden\n    selectable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    /** Maximal number of characters that can be entered in the TextArea. */\n    maxLength :\n    {\n      apply : \"_applyMaxLength\",\n      check : \"PositiveInteger\",\n      init : Infinity\n    },\n\n    /**\n     * Whether the {@link #changeValue} event should be fired on every key\n     * input. If set to true, the changeValue event is equal to the\n     * {@link #input} event.\n     */\n    liveUpdate :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder :\n    {\n      check : \"String\",\n      nullable : true,\n      apply : \"_applyPlaceholder\"\n    },\n\n\n    /**\n     * RegExp responsible for filtering the value of the textfield. the RegExp\n     * gives the range of valid values.\n     * Note: The regexp specified is applied to each character in turn, \n     * NOT to the entire string. So only regular expressions matching a \n     * single character make sense in the context.\n     * The following example only allows digits in the textfield.\n     * <pre class='javascript'>field.setFilter(/[0-9]/);</pre>\n     */\n    filter :\n    {\n      check : \"RegExp\",\n      nullable : true,\n      init : null\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __nullValue : true,\n    _placeholder : null,\n    __oldValue : null,\n    __oldInputValue : null,\n    __useQxPlaceholder : true,\n    __font : null,\n    __webfontListenerId : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getFocusElement : function() {\n      var el = this.getContentElement();\n      if (el) {\n        return el;\n      }\n    },\n\n\n    /**\n     * Creates the input element. Derived classes may override this\n     * method, to create different input elements.\n     *\n     * @return {qx.html.Input} a new input element.\n     */\n    _createInputElement : function() {\n      return new qx.html.Input(\"text\");\n    },\n\n\n    // overridden\n    renderLayout : function(left, top, width, height)\n    {\n      var updateInsets = this._updateInsets;\n      var changes = this.base(arguments, left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return;\n      }\n\n      var inner = changes.size || updateInsets;\n      var pixel = \"px\";\n\n      if (inner || changes.local || changes.margin) {\n        var innerWidth = width;\n        var innerHeight = height;\n      }\n\n      var input = this.getContentElement();\n\n      // we don't need to update positions on native placeholders\n      if (updateInsets && this.__useQxPlaceholder)\n      {\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            paddingTop : insets.top + pixel,\n            paddingRight : insets.right + pixel,\n            paddingBottom : insets.bottom + pixel,\n            paddingLeft : insets.left + pixel\n          });\n        }\n      }\n\n      if (inner || changes.margin)\n      {\n        // we don't need to update dimensions on native placeholders\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            \"width\": (innerWidth - insets.left - insets.right) + pixel,\n            \"height\": (innerHeight - insets.top - insets.bottom) + pixel\n          });\n        }\n\n        input.setStyles({\n          \"width\": innerWidth + pixel,\n          \"height\": innerHeight + pixel\n        });\n\n        this._renderContentElement(innerHeight, input);\n\n      }\n\n      if (changes.position) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyles({\n            \"left\": left + pixel,\n            \"top\": top + pixel\n          });\n        }\n      }\n    },\n\n\n    /**\n     * Hook into {@link qx.ui.form.AbstractField#renderLayout} method.\n     * Called after the contentElement has a width and an innerWidth.\n     *\n     * Note: This was introduced to fix BUG#1585\n     *\n     * @param innerHeight {Integer} The inner height of the element.\n     * @param element {Element} The element.\n     */\n    _renderContentElement : function(innerHeight, element) {\n      //use it in child classes\n    },\n\n\n    // overridden\n    _createContentElement : function()\n    {\n      // create and add the input element\n      var el = this._createInputElement();\n\n      // initialize the html input\n      el.setSelectable(this.getSelectable());\n      el.setEnabled(this.getEnabled());\n\n      // Add listener for input event\n      el.addListener(\"input\", this._onHtmlInput, this);\n\n      // Disable HTML5 spell checking\n      el.setAttribute(\"spellcheck\", \"false\");\n      el.addClass(\"qx-abstract-field\");\n\n      // IE8 in standard mode needs some extra love here to receive events.\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\") &&\n        (qx.core.Environment.get(\"browser.documentmode\") == 8)) {\n        el.setStyles({\n          backgroundImage: \"url(\" + qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\") + \")\"\n        });\n      }\n\n      return el;\n    },\n\n\n    // overridden\n    _applyEnabled : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      this.getContentElement().setEnabled(value);\n\n      if (this.__useQxPlaceholder) {\n        if (value) {\n          this._showPlaceholder();\n        } else {\n          this._removePlaceholder();\n        }\n      } else {\n        var input = this.getContentElement();\n        // remove the placeholder on disabled input elements\n        input.setAttribute(\"placeholder\", value ? this.getPlaceholder() : \"\");\n      }\n    },\n\n\n    // default text sizes\n    /**\n     * @lint ignoreReferenceField(__textSize)\n     */\n    __textSize :\n    {\n      width : 16,\n      height : 16\n    },\n\n\n    // overridden\n    _getContentHint : function()\n    {\n      return {\n        width : this.__textSize.width * 10,\n        height : this.__textSize.height || 16\n      };\n    },\n\n\n    // overridden\n    _applyFont : function(value, old)\n    {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n\n      // Apply\n      var styles;\n      if (value)\n      {\n        this.__font = qx.theme.manager.Font.getInstance().resolve(value);\n        if (this.__font instanceof qx.bom.webfonts.WebFont) {\n          this.__webfontListenerId = this.__font.addListener(\"changeStatus\", this._onWebFontStatusChange, this);\n        }\n        styles = this.__font.getStyles();\n      }\n      else\n      {\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      // apply the font to the content element\n      // IE 8 - 10 (but not 11 Preview) will ignore the lineHeight value\n      // unless it's applied directly.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 11)\n      {\n        qx.html.Element.flush();\n        this.getContentElement().setStyles(styles, true);\n      } else {\n        this.getContentElement().setStyles(styles);\n      }\n\n      // the font will adjust automatically on native placeholders\n      if (this.__useQxPlaceholder) {\n        // don't apply the color to the placeholder\n        delete styles[\"color\"];\n        // apply the font to the placeholder\n        this._getPlaceholderElement().setStyles(styles);\n      }\n\n      // Compute text size\n      if (value) {\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n      } else {\n        delete this.__textSize;\n      }\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    // overridden\n    _applyTextColor : function(value, old)\n    {\n      if (value) {\n        this.getContentElement().setStyle(\n          \"color\", qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n\n    // property apply\n    _applyMaxLength : function(value, old) {\n      if (value) {\n        this.getContentElement().setAttribute(\"maxLength\", value);\n      } else {\n        this.getContentElement().removeAttribute(\"maxLength\");\n      }\n    },\n\n\n    // overridden\n    tabFocus : function() {\n      this.base(arguments);\n\n      this.selectAllText();\n    },\n\n    /**\n     * Returns the text size.\n     * @return {Map} The text size.\n     */\n    _getTextSize : function() {\n      return this.__textSize;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for native input events. Redirects the event\n     * to the widget. Also checks for the filter and max length.\n     *\n     * @param e {qx.event.type.Data} Input event\n     */\n    _onHtmlInput : function(e)\n    {\n      var value = e.getData();\n      var fireEvents = true;\n\n      this.__nullValue = false;\n\n      // value unchanged; Firefox fires \"input\" when pressing ESC [BUG #5309]\n      if (this.__oldInputValue && this.__oldInputValue === value) {\n        fireEvents = false;\n      }\n\n      // check for the filter\n      if (this.getFilter() != null)\n      {\n        var filteredValue = this._validateInput(value);\n        if (filteredValue != value)\n        {\n          fireEvents = this.__oldInputValue !== filteredValue;\n          value = filteredValue;\n          this.getContentElement().setValue(value);\n        }\n      }\n      // fire the events, if necessary\n      if (fireEvents)\n      {\n        // store the old input value\n        this.fireDataEvent(\"input\", value, this.__oldInputValue);\n        this.__oldInputValue = value;\n\n        // check for the live change event\n        if (this.getLiveUpdate()) {\n          this.__fireChangeValueEvent(value);\n        }\n      }\n    },\n\n    /**\n     * Triggers text size recalculation after a web font was loaded\n     *\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\n     */\n    _onWebFontStatusChange : function(ev)\n    {\n      if (ev.getData().valid === true) {\n        var styles = this.__font.getStyles();\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n\n    /**\n     * Handles the firing of the changeValue event including the local cache\n     * for sending the old value in the event.\n     *\n     * @param value {String} The new value.\n     */\n    __fireChangeValueEvent : function(value) {\n      var old = this.__oldValue;\n      this.__oldValue = value;\n      if (old != value) {\n        this.fireNonBubblingEvent(\n          \"changeValue\", qx.event.type.Data, [value, old]\n        );\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD VALUE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the value of the textfield to the given value.\n     *\n     * @param value {String} The new value\n     */\n    setValue : function(value)\n    {\n      if (this.isDisposed()) {\n        return null;\n      }\n      \n      // handle null values\n      if (value === null) {\n        // just do nothing if null is already set\n        if (this.__nullValue) {\n          return value;\n        }\n        value = \"\";\n        this.__nullValue = true;\n      } else {\n        this.__nullValue = false;\n        // native placeholders will be removed by the browser\n        if (this.__useQxPlaceholder) {\n          this._removePlaceholder();\n        }\n      }\n\n      if (qx.lang.Type.isString(value))\n      {\n        var elem = this.getContentElement();\n        if (elem.getValue() != value)\n        {\n          var oldValue = elem.getValue();\n          elem.setValue(value);\n          var data = this.__nullValue ? null : value;\n          this.__oldValue = oldValue;\n          this.__fireChangeValueEvent(data);\n          // reset the input value on setValue calls [BUG #6892]\n          this.__oldInputValue = this.__oldValue;\n        }\n        // native placeholders will be shown by the browser\n        if (this.__useQxPlaceholder) {\n          this._showPlaceholder();\n        }\n        return value;\n      }\n      throw new Error(\"Invalid value type: \" + value);\n    },\n\n\n    /**\n     * Returns the current value of the textfield.\n     *\n     * @return {String|null} The current value\n     */\n    getValue : function() {\n      return (this.isDisposed() || this.__nullValue) ? null : this.getContentElement().getValue();\n    },\n\n\n    /**\n     * Resets the value to the default\n     */\n    resetValue : function() {\n      this.setValue(null);\n    },\n\n\n    /**\n     * Event listener for change event of content element\n     *\n     * @param e {qx.event.type.Data} Incoming change event\n     */\n    _onChangeContent : function(e)\n    {\n      this.__nullValue = e.getData() === null;\n      this.__fireChangeValueEvent(e.getData());\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {String|null}\n     */\n    getTextSelection : function() {\n      return this.getContentElement().getTextSelection();\n    },\n\n\n    /**\n     * Returns the current selection length.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength : function() {\n      return this.getContentElement().getTextSelectionLength();\n    },\n\n\n    /**\n     * Returns the start of the text selection\n     *\n     * @return {Integer|null} Start of selection or null if not available\n     */\n    getTextSelectionStart : function() {\n      return this.getContentElement().getTextSelectionStart();\n    },\n\n\n    /**\n     * Returns the end of the text selection\n     *\n     * @return {Integer|null} End of selection or null if not available\n     */\n    getTextSelectionEnd : function() {\n      return this.getContentElement().getTextSelectionEnd();\n    },\n\n\n    /**\n     * Set the selection to the given start and end (zero-based).\n     * If no end value is given the selection will extend to the\n     * end of the textfield's content.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} start of the selection (zero-based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection : function(start, end) {\n      this.getContentElement().setTextSelection(start, end);\n    },\n\n\n    /**\n     * Clears the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     */\n    clearTextSelection : function() {\n      this.getContentElement().clearTextSelection();\n    },\n\n\n    /**\n     * Selects the whole content\n     *\n     */\n    selectAllText : function() {\n      this.setTextSelection(0);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PLACEHOLDER HELPERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    setLayoutParent : function(parent)\n    {\n      this.base(arguments, parent);\n      if (this.__useQxPlaceholder) {\n        if (parent) {\n          this.getLayoutParent().getContentElement().add(this._getPlaceholderElement());\n        } else {\n          var placeholder = this._getPlaceholderElement();\n          placeholder.getParent().remove(placeholder);\n        }\n      }\n    },\n\n\n    /**\n     * Helper to show the placeholder text in the field. It checks for all\n     * states and possible conditions and shows the placeholder only if allowed.\n     */\n    _showPlaceholder : function()\n    {\n      var fieldValue = this.getValue() || \"\";\n      var placeholder = this.getPlaceholder();\n      if (\n        placeholder != null &&\n        fieldValue == \"\" &&\n        !this.hasState(\"focused\") &&\n        !this.hasState(\"disabled\")\n      )\n      {\n        if (this.hasState(\"showingPlaceholder\"))\n        {\n          this._syncPlaceholder();\n        }\n        else\n        {\n          // the placeholder will be set as soon as the appearance is applied\n          this.addState(\"showingPlaceholder\");\n        }\n      }\n    },\n\n\n    /**\n     * Remove the fake placeholder\n     */\n    _onPointerDownPlaceholder : function() {\n      window.setTimeout(function() {\n        this.focus();\n      }.bind(this), 0);\n    },\n\n\n    /**\n     * Helper to remove the placeholder. Deletes the placeholder text from the\n     * field and removes the state.\n     */\n    _removePlaceholder: function() {\n      if (this.hasState(\"showingPlaceholder\")) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyle(\"visibility\", \"hidden\");\n        }\n        this.removeState(\"showingPlaceholder\");\n      }\n    },\n\n\n    /**\n     * Updates the placeholder text with the DOM\n     */\n    _syncPlaceholder : function ()\n    {\n      if (this.hasState(\"showingPlaceholder\") && this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setStyle(\"visibility\", \"visible\");\n      }\n    },\n\n\n    /**\n     * Returns the placeholder label and creates it if necessary.\n     */\n    _getPlaceholderElement : function()\n    {\n      if (this._placeholder == null) {\n        // create the placeholder\n        this._placeholder = new qx.html.Label();\n        var colorManager = qx.theme.manager.Color.getInstance();\n        this._placeholder.setStyles({\n          \"zIndex\" : 11,\n          \"position\" : \"absolute\",\n          \"color\" : colorManager.resolve(\"text-placeholder\"),\n          \"whiteSpace\": \"normal\", // enable wrap by default\n          \"cursor\": \"text\",\n          \"visibility\" : \"hidden\"\n        });\n\n        this._placeholder.addListener(\"pointerdown\", this._onPointerDownPlaceholder, this);\n      }\n      return this._placeholder;\n    },\n\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale : qx.core.Environment.select(\"qx.dynlocale\",\n    {\n      \"true\" : function(e)\n      {\n        var content = this.getPlaceholder();\n        if (content && content.translate) {\n          this.setPlaceholder(content.translate());\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    _onChangeTheme : function() {\n      this.base(arguments);\n      if (this._placeholder) {\n        // delete the placeholder element because it uses a theme dependent color\n        this._placeholder.dispose();\n        this._placeholder = null;\n      }\n      if (!this.__useQxPlaceholder && qx.ui.form.AbstractField.__stylesheet) {\n        qx.bom.Stylesheet.removeSheet(qx.ui.form.AbstractField.__stylesheet);\n        qx.ui.form.AbstractField.__stylesheet = null;\n        qx.ui.form.AbstractField.__addPlaceholderRules();\n      }\n    },\n\n    /**\n     * Validates the the input value.\n     * \n     * @param value {Object} The value to check\n     * @returns The checked value\n     */\n    _validateInput : function(value) {\n      var filteredValue = value;\n      var filter = this.getFilter();\n\n      // If no filter is set return just the value\n      if (filter !== null) {\n        filteredValue = \"\";\n        var index = value.search(filter);\n        var processedValue = value;\n\n        while((index >= 0) && (processedValue.length > 0)) {\n          filteredValue = filteredValue + (processedValue.charAt(index));\n          processedValue = processedValue.substring(index + 1, processedValue.length);\n          index = processedValue.search(filter);\n        }\n      }\n\n      return filteredValue;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPlaceholder : function(value, old)\n    {\n      if (this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setValue(value);\n        if (value != null) {\n          this.addListener(\"focusin\", this._removePlaceholder, this);\n          this.addListener(\"focusout\", this._showPlaceholder, this);\n          this._showPlaceholder();\n        } else {\n          this.removeListener(\"focusin\", this._removePlaceholder, this);\n          this.removeListener(\"focusout\", this._showPlaceholder, this);\n          this._removePlaceholder();\n        }\n      } else {\n        // only apply if the widget is enabled\n        if (this.getEnabled()) {\n          this.getContentElement().setAttribute(\"placeholder\", value);\n\n          if (qx.core.Environment.get(\"browser.name\") === \"firefox\" &&\n              parseFloat(qx.core.Environment.get(\"browser.version\")) < 36 &&\n              this.getContentElement().getNodeName() === \"textarea\" &&\n              !this.getContentElement().getDomElement())\n          {\n            /* qx Bug #8870: Firefox 35 will not display a text area's\n               placeholder text if the attribute is set before the\n               element is added to the DOM. This is fixed in FF 36. */\n            this.addListenerOnce(\"appear\", function() {\n              this.getContentElement().getDomElement().removeAttribute(\"placeholder\");\n              this.getContentElement().getDomElement().setAttribute(\"placeholder\", value);\n            }, this);\n          }\n        }\n      }\n    },\n\n\n    // property apply\n    _applyTextAlign : function(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n\n    // property apply\n    _applyReadOnly : function(value, old)\n    {\n      var element = this.getContentElement();\n\n      element.setAttribute(\"readOnly\", value);\n\n      if (value)\n      {\n        this.addState(\"readonly\");\n        this.setFocusable(false);\n      }\n      else\n      {\n        this.removeState(\"readonly\");\n        this.setFocusable(true);\n      }\n    }\n\n  },\n\n\n  defer : function(statics) {\n    var css = \"border: none;\" +\n      \"padding: 0;\" +\n      \"margin: 0;\" +\n      \"display : block;\" +\n      \"background : transparent;\" +\n      \"outline: none;\" +\n      \"appearance: none;\" +\n      \"position: absolute;\" +\n      \"autoComplete: off;\" +\n      \"resize: none;\" +\n      \"border-radius: 0;\";\n\n    qx.ui.style.Stylesheet.getInstance().addRule(\".qx-abstract-field\", css);\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct : function()\n  {\n    if (this._placeholder) {\n      this._placeholder.removeListener(\"pointerdown\", this._onPointerDownPlaceholder, this);\n      var parent = this._placeholder.getParent();\n      if (parent) {\n        parent.remove(this._placeholder);\n      }\n      this._placeholder.dispose();\n    }\n\n    this._placeholder = this.__font = null;\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.getContentElement().removeListener(\"input\", this._onHtmlInput, this);\n  }\n});\n"
  ]
}