{
  "className": "qx.ui.website.Slider",
  "packageName": "qx.ui.website",
  "name": "Slider",
  "superClass": "qx.ui.website.Widget",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 62,
        "column": 0
      },
      "end": {
        "line": 647,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2013 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Martin Wittemann (wittemann)\n Daniel Wagner (danielwagner)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>The Slider control is used to select a numerical value from a given range.\n It supports custom minimum/maximum values, step sizes and offsets (which limit\n the knob's range).\n </p>\n<h2>Markup</h2>\n<p>The Slider contains a single button element (the knob), which will be\n created if it's not already present.\n </p>\n<h2>CSS Classes</h2>\n<table>\n   <thead>\n     <tr>\n       <td>Class Name</td>\n       <td>Applied to</td>\n       <td>Description</td>\n     </tr>\n   </thead>\n   <tbody>\n     <tr>\n       <td><code>qx-slider</code></td>\n       <td>Container element</td>\n       <td>Identifies the Slider widget</td>\n     </tr>\n     <tr>\n       <td><code>qx-slider-knob</code></td>\n       <td>Slider knob (button)</td>\n       <td>Identifies and styles the Slider's draggable knob</td>\n     </tr>\n   </tbody>\n </table>\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.module.event.Pointer"
        },
        {
          "name": "@require",
          "body": "qx.module.Transform"
        },
        {
          "name": "@require",
          "body": "qx.module.Template"
        },
        {
          "name": "@require",
          "body": "qx.module.util.Type"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Widget"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "_config": {
      "location": {
        "start": {
          "line": 100,
          "column": 4
        },
        "end": {
          "line": 105,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p><em>step</em>\n The steps can be either a number or an array of predefined steps. In the\n case of a number, it defines the amount of each step. In the case of an\n array, the values of the array will be used as step values.\n Default value: <pre>1</pre>\n<em>minimum</em>\n The minimum value of the slider. This will only be used if no explicit\n steps are given.\n Default value: <pre>0 </pre>\n<em>maximum</em>\n The maximum value of the slider. This will only be used if no explicit\n steps are given.\n Default value: <pre>100</pre>\n<em>offset</em>\n The amount of pixel the slider should be position away from its left and\n right border.\n Default value: <pre>0 </pre></p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_templates": {
      "location": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p><em>knobContent</em>\n The content of the knob element.\n Default value: <pre>{{value}}</pre></p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "slider": {
      "location": {
        "start": {
          "line": 130,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Factory method which converts the current collection into a collection of\n slider widgets.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number?} The initial value of each slider widget",
            "paramName": "value",
            "description": " The initial value of each slider widget",
            "optional": true,
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "step {Number|Array?} The step config value to configure the step\n width or the steps as array of numbers.",
            "paramName": "step",
            "description": " The step config value to configure the step\n width or the steps as array of numbers.",
            "optional": true,
            "type": [
              "Number",
              "Array"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.website.Slider} A new Slider collection.",
            "type": "qx.ui.website.Slider",
            "description": " A new Slider collection."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 146,
        "column": 14
      },
      "end": {
        "line": 148,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "events": {
    "changeValue": {
      "location": {
        "start": {
          "line": 153,
          "column": 4
        },
        "end": {
          "line": 153,
          "column": 28
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired at each value change</p>"
          }
        ]
      },
      "name": "changeValue",
      "type": "Number"
    },
    "changePosition": {
      "location": {
        "start": {
          "line": 156,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 31
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired with each pointer move event</p>"
          }
        ]
      },
      "name": "changePosition",
      "type": "Number"
    }
  },
  "members": {
    "__dragMode": {
      "location": {
        "start": {
          "line": 162,
          "column": 4
        },
        "end": {
          "line": 162,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_value": {
      "location": {
        "start": {
          "line": 163,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 14
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "init": {
      "location": {
        "start": {
          "line": 165,
          "column": 4
        },
        "end": {
          "line": 202,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.website.Widget",
      "appearsIn": [
        "qx.ui.website.Widget"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the widget has been initialized",
            "type": "Boolean",
            "description": " <code>true</code> if the widget has been initialized"
          }
        ]
      }
    },
    "getValue": {
      "location": {
        "start": {
          "line": 210,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current value of the slider</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} slider value",
            "type": "Integer",
            "description": " slider value"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setValue": {
      "location": {
        "start": {
          "line": 221,
          "column": 4
        },
        "end": {
          "line": 252,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the current value of the slider.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Integer} new value of the slider",
            "paramName": "value",
            "description": " new value of the slider",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.website.Slider} The collection for chaining",
            "type": "qx.ui.website.Slider",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "render": {
      "location": {
        "start": {
          "line": 255,
          "column": 4
        },
        "end": {
          "line": 273,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.website.Widget",
      "appearsIn": [
        "qx.ui.website.Widget"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.website.Widget} The widget collection for chaining.",
            "type": "qx.ui.website.Widget",
            "description": " The widget collection for chaining."
          }
        ]
      }
    },
    "_getKnobContent": {
      "location": {
        "start": {
          "line": 280,
          "column": 4
        },
        "end": {
          "line": 284,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the content that should be displayed in the knob</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} knob content",
            "type": "String",
            "description": " knob content"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getHalfKnobWidth": {
      "location": {
        "start": {
          "line": 291,
          "column": 4
        },
        "end": {
          "line": 294,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns half of the slider knob's width, used for positioning</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} half knob width",
            "type": "Integer",
            "description": " half knob width"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getDragBoundaries": {
      "location": {
        "start": {
          "line": 301,
          "column": 4
        },
        "end": {
          "line": 310,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the boundaries (in pixels) of the slider's range of motion</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} a map with the keys <code>min</code> and <code>max</code>",
            "type": "Map",
            "description": " a map with the keys <code>min</code> and <code>max</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getPixels": {
      "location": {
        "start": {
          "line": 319,
          "column": 4
        },
        "end": {
          "line": 354,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a lookup table to get the pixel values for each slider step\n and computes the \"breakpoint\" between two steps in pixel.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} list of pixel values",
            "type": "Integer[]",
            "description": " list of pixel values"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getNearestValue": {
      "location": {
        "start": {
          "line": 362,
          "column": 4
        },
        "end": {
          "line": 400,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the nearest existing slider value according to he position of the knob element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} The current knob position in pixels",
            "paramName": "position",
            "description": " The current knob position in pixels",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The next position to snap to",
            "type": "Integer",
            "description": " The next position to snap to"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onSliderPointerUp": {
      "location": {
        "start": {
          "line": 408,
          "column": 4
        },
        "end": {
          "line": 414,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reads the pointer's position and sets slider value to the nearest step.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.Emitter} Incoming event object",
            "paramName": "e",
            "description": " Incoming event object",
            "type": "qx.event.Emitter"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerDown": {
      "location": {
        "start": {
          "line": 422,
          "column": 4
        },
        "end": {
          "line": 435,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener for the pointerdown event. Initializes drag or tracking mode.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.Emitter} Incoming event object",
            "paramName": "e",
            "description": " Incoming event object",
            "type": "qx.event.Emitter"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onDocPointerUp": {
      "location": {
        "start": {
          "line": 444,
          "column": 4
        },
        "end": {
          "line": 455,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener for the pointerup event. Used for cleanup of previously\n initialized modes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.Emitter} Incoming event object",
            "paramName": "e",
            "description": " Incoming event object",
            "type": "qx.event.Emitter"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerMove": {
      "location": {
        "start": {
          "line": 463,
          "column": 4
        },
        "end": {
          "line": 481,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener for the pointermove event for the knob. Only used in drag mode.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.Emitter} Incoming event object",
            "paramName": "e",
            "description": " Incoming event object",
            "type": "qx.event.Emitter"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onDragStart": {
      "location": {
        "start": {
          "line": 488,
          "column": 4
        },
        "end": {
          "line": 491,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Prevents drag event propagation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} e drag start event",
            "paramName": "e",
            "description": " e drag start event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onSliderFocus": {
      "location": {
        "start": {
          "line": 498,
          "column": 4
        },
        "end": {
          "line": 500,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delegates the Slider's focus to the knob</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} focus event",
            "paramName": "e",
            "description": " focus event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKnobFocus": {
      "location": {
        "start": {
          "line": 507,
          "column": 4
        },
        "end": {
          "line": 510,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attaches the event listener for keyboard support to the knob on focus</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} focus event",
            "paramName": "e",
            "description": " focus event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKnobBlur": {
      "location": {
        "start": {
          "line": 517,
          "column": 4
        },
        "end": {
          "line": 520,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the event listener for keyboard support from the knob on blur</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} blur event",
            "paramName": "e",
            "description": " blur event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyDown": {
      "location": {
        "start": {
          "line": 527,
          "column": 4
        },
        "end": {
          "line": 564,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Moves the knob if the left or right arrow key is pressed</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} keydown event",
            "paramName": "e",
            "description": " keydown event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_setKnobPosition": {
      "location": {
        "start": {
          "line": 571,
          "column": 4
        },
        "end": {
          "line": 578,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Applies the horizontal position</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Integer} the position to move to",
            "paramName": "x",
            "description": " the position to move to",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onWindowResize": {
      "location": {
        "start": {
          "line": 585,
          "column": 4
        },
        "end": {
          "line": 590,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Listener for window resize events. This listener method resets the\n calculated values which are used to position the slider knob.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__valueToPosition": {
      "location": {
        "start": {
          "line": 599,
          "column": 4
        },
        "end": {
          "line": 620,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Positions the slider knob to the given value and fires the \"changePosition\"\n event with the current position as integer.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Integer} slider step value",
            "paramName": "value",
            "description": " slider step value",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "dispose": {
      "location": {
        "start": {
          "line": 623,
          "column": 4
        },
        "end": {
          "line": 639,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.website.Widget",
      "appearsIn": [
        "qx.ui.website.Widget",
        "qx.core.IDisposable"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} Plain qxWeb collection",
            "type": "qxWeb",
            "description": " Plain qxWeb collection"
          }
        ]
      }
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 644,
        "column": 10
      },
      "end": {
        "line": 646,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Make the slider widget available as a qxWeb module</p>"
        }
      ]
    }
  },
  "descendants": []
}