{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/website/Button.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "ui",
    "website",
    "Widget",
    "statics",
    "button",
    "label",
    "icon",
    "buttons",
    "Button",
    "init",
    "setLabel",
    "setIcon",
    "construct",
    "selector",
    "context",
    "members",
    "getChildren",
    "qxWeb",
    "create",
    "appendTo",
    "setStyle",
    "value",
    "setHtml",
    "getLabel",
    "getHtml",
    "src",
    "img",
    "setAttribute",
    "getIcon",
    "getAttribute",
    "setMenu",
    "menu",
    "on",
    "e",
    "getStyle",
    "placeTo",
    "show",
    "document",
    "once",
    "hide",
    "stopPropagation",
    "defer",
    "$attach"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,sBAApB,EAA4C;AAC1CC,IAAAA,MAAM,EAAGL,EAAE,CAACM,EAAH,CAAMC,OAAN,CAAcC,MADmB;AAG1CC,IAAAA,OAAO,EAAG;AACR;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,MAAM,EAAG,gBAASC,KAAT,EAAgBC,IAAhB,EAAsB;AAC7B,YAAIC,OAAO,GAAG,IAAIb,EAAE,CAACM,EAAH,CAAMC,OAAN,CAAcO,MAAlB,CAAyB,IAAzB,CAAd;AACAD,QAAAA,OAAO,CAACE,IAAR;;AACA,YAAIJ,KAAK,IAAI,IAAb,EAAmB;AACjBE,UAAAA,OAAO,CAACG,QAAR,CAAiBL,KAAjB;AACD;;AACD,YAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChBC,UAAAA,OAAO,CAACI,OAAR,CAAgBL,IAAhB;AACD;;AAED,eAAOC,OAAP;AACD;AAtBO,KAHgC;AA6B1CK,IAAAA,SAAS,EAAG,mBAASC,QAAT,EAAmBC,OAAnB,EAA4B;AACtC,kDAAqBD,QAArB,EAA+BC,OAA/B;AACD,KA/ByC;AAkC1CC,IAAAA,OAAO,EAAG;AACR;AACAN,MAAAA,IAAI,EAAG,gBAAW;AAChB,YAAI,oDAAJ,EAA2B;AACzB,iBAAO,KAAP;AACD;;AAED,YAAI,KAAKO,WAAL,CAAiB,MAAjB,KAA4B,CAAhC,EAAmC;AACjCC,UAAAA,KAAK,CAACC,MAAN,CAAa,QAAb,EAAuBC,QAAvB,CAAgC,IAAhC;AACD;;AAED,YAAI,KAAKH,WAAL,CAAiB,KAAjB,KAA2B,CAA/B,EAAkC;AAChCC,UAAAA,KAAK,CAACC,MAAN,CAAa,OAAb,EAAsBC,QAAtB,CAA+B,IAA/B,EAAqCC,QAArC,CAA8C,SAA9C,EAAyD,MAAzD;AACD;;AAED,eAAO,IAAP;AACD,OAhBO;;AAmBR;AACJ;AACA;AACA;AACA;AACA;AACIV,MAAAA,QAAQ,EAAG,kBAASW,KAAT,EAAgB;AACzB,aAAKL,WAAL,CAAiB,MAAjB,EAAyBM,OAAzB,CAAiCD,KAAjC;AACA,eAAO,IAAP;AACD,OA5BO;;AA+BR;AACJ;AACA;AACA;AACA;AACIE,MAAAA,QAAQ,EAAG,oBAAW;AACpB,eAAO,KAAKP,WAAL,CAAiB,MAAjB,EAAyBQ,OAAzB,EAAP;AACD,OAtCO;;AAyCR;AACJ;AACA;AACA;AACA;AACA;AACIb,MAAAA,OAAO,EAAG,iBAASc,GAAT,EAAc;AACtB,YAAIC,GAAG,GAAG,KAAKV,WAAL,CAAiB,KAAjB,CAAV;AACAU,QAAAA,GAAG,CAACC,YAAJ,CAAiB,KAAjB,EAAwBF,GAAxB;AACAC,QAAAA,GAAG,CAACN,QAAJ,CAAa,SAAb,EAAwBK,GAAG,GAAG,QAAH,GAAc,MAAzC;AAEA,eAAO,IAAP;AACD,OArDO;;AAwDR;AACJ;AACA;AACA;AACA;AACIG,MAAAA,OAAO,EAAG,mBAAW;AACnB,eAAO,KAAKZ,WAAL,CAAiB,KAAjB,EAAwBa,YAAxB,CAAqC,KAArC,CAAP;AACD,OA/DO;;AAkER;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAAO,EAAG,iBAASC,IAAT,EAAe;AACvB,aAAKC,EAAL,CAAQ,KAAR,EAAe,UAASC,CAAT,EAAY;AACzB,cAAIF,IAAI,CAACG,QAAL,CAAc,SAAd,MAA6B,MAAjC,EAAyC;AACvCH,YAAAA,IAAI,CAACI,OAAL,CAAa,IAAb,EAAmB,aAAnB;AACAJ,YAAAA,IAAI,CAACK,IAAL;AACAnB,YAAAA,KAAK,CAACoB,QAAD,CAAL,CAAgBC,IAAhB,CAAqB,KAArB,EAA4B,YAAW;AACrCP,cAAAA,IAAI,CAACQ,IAAL;AACD,aAFD;AAGD,WAND,MAMO;AACLR,YAAAA,IAAI,CAACQ,IAAL;AACD;;AACDN,UAAAA,CAAC,CAACO,eAAF;AACD,SAXD;AAaA,eAAO,IAAP;AACD;AAvFO,KAlCgC;AA6H1CC,IAAAA,KAAK,EAAG,eAAStC,OAAT,EAAkB;AACxBc,MAAAA,KAAK,CAACyB,OAAN,CAAc;AAACtC,QAAAA,MAAM,EAAGD,OAAO,CAACC;AAAlB,OAAd;AACD;AA/HyC,GAA5C;AAhDAV,EAAAA,EAAE,CAACM,EAAH,CAAMC,OAAN,CAAcO,MAAd,CAAqBX,aAArB,GAAqCA,aAArC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n/**\n * This is a simple button widget which takes care of setting the label\n * and icon of a button.\n *\n * <h2>Markup</h2>\n * The Button can contain a <code>span</code> element for the label and/or\n * an <code>img</code> element for the icon.\n *\n * <h2>CSS Classes</h2>\n * <table>\n *   <thead>\n *     <tr>\n *       <td>Class Name</td>\n *       <td>Applied to</td>\n *       <td>Description</td>\n *     </tr>\n *   </thead>\n *   <tbody>\n *     <tr>\n *       <td><code>qx-button</code></td>\n *       <td>Container element</td>\n *       <td>Identifies the Button widget</td>\n *     </tr>\n *   </tbody>\n * </table>\n *\n * <h2 class=\"widget-markup\">Generated DOM Structure</h2>\n *\n * @group (Widget)\n */\nqx.Bootstrap.define(\"qx.ui.website.Button\", {\n  extend : qx.ui.website.Widget,\n\n  statics : {\n    /**\n     * Factory method for the button widget which converts a standard\n     * collection into a collection of buttons.\n     *\n     * @param label {String?} The label of the button.\n     * @param icon {String?} The url for the button icon.\n     * @return {qx.ui.website.Button} A collection of buttons.\n     *\n     * @attach {qxWeb}\n     */\n    button : function(label, icon) {\n      var buttons = new qx.ui.website.Button(this);\n      buttons.init();\n      if (label != null) {\n        buttons.setLabel(label);\n      }\n      if (icon != null) {\n        buttons.setIcon(icon);\n      }\n\n      return buttons;\n    }\n  },\n\n\n  construct : function(selector, context) {\n    this.base(arguments, selector, context);\n  },\n\n\n  members : {\n    // overridden\n    init : function() {\n      if (!this.base(arguments)) {\n        return false;\n      }\n\n      if (this.getChildren(\"span\") == 0) {\n        qxWeb.create(\"<span>\").appendTo(this);\n      }\n\n      if (this.getChildren(\"img\") == 0) {\n        qxWeb.create(\"<img>\").appendTo(this).setStyle(\"display\", \"none\");\n      }\n\n      return true;\n    },\n\n\n    /**\n     * Sets the button's label text\n     *\n     * @param value {String} label text\n     * @return {qxWeb} The collection for chaining\n     */\n    setLabel : function(value) {\n      this.getChildren(\"span\").setHtml(value);\n      return this;\n    },\n\n\n    /**\n     * Returns the button's label text\n     *\n     * @return {String} label text\n     */\n    getLabel : function() {\n      return this.getChildren(\"span\").getHtml();\n    },\n\n\n    /**\n     * Sets the source of the button's icon\n     *\n     * @param src {String} source URI for the icon\n     * @return {qxWeb} The collection for chaining\n     */\n    setIcon : function(src) {\n      var img = this.getChildren(\"img\");\n      img.setAttribute(\"src\", src);\n      img.setStyle(\"display\", src ? \"inline\" : \"none\");\n\n      return this;\n    },\n\n\n    /**\n     * Returns the URI of the button's icon\n     *\n     * @return {String|null} Icon image URI\n     */\n    getIcon : function() {\n      return this.getChildren(\"img\").getAttribute(\"src\");\n    },\n\n\n    /**\n     * Sets the menu to be shown when the button is clicked or tapped\n     *\n     * @param menu {qxWeb} menu element wrapped in a collection\n     * @return {qxWeb} The collection for chaining\n     */\n    setMenu : function(menu) {\n      this.on(\"tap\", function(e) {\n        if (menu.getStyle(\"display\") === \"none\") {\n          menu.placeTo(this, \"bottom-left\");\n          menu.show();\n          qxWeb(document).once(\"tap\", function() {\n            menu.hide();\n          });\n        } else {\n          menu.hide();\n        }\n        e.stopPropagation();\n      });\n\n      return this;\n    }\n  },\n\n\n  defer : function(statics) {\n    qxWeb.$attach({button : statics.button});\n  }\n});\n"
  ]
}