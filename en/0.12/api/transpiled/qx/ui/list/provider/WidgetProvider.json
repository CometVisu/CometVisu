{
  "className": "qx.ui.list.provider.WidgetProvider",
  "packageName": "qx.ui.list.provider",
  "name": "WidgetProvider",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.virtual.core.IWidgetCellProvider",
    "qx.ui.list.provider.IListProvider"
  ],
  "mixins": [
    "qx.ui.list.core.MWidgetController"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 332,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2010 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Christian Hagendorn (chris_schmidt)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>The provider implements the {@link qx.ui.virtual.core.IWidgetCellProvider} API,\n which can be used as delegate for the widget cell rendering and it\n provides a API to bind the model with the rendered item.</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 43,
        "column": 14
      },
      "end": {
        "line": 55,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Creates the <code>WidgetProvider</code></p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "list {qx.ui.list.List} list to provide.",
          "paramName": "list",
          "description": " list to provide.",
          "type": "qx.ui.list.List"
        }
      ]
    }
  },
  "members": {
    "_itemRenderer": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 24
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.cell.WidgetCell} the used item renderer"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_groupRenderer": {
      "location": {
        "start": {
          "line": 65,
          "column": 4
        },
        "end": {
          "line": 65,
          "column": 25
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.cell.WidgetCell} the used group renderer"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "getCellWidget": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  PUBLIC API\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} The cell's row index.",
            "paramName": "row",
            "description": " The cell's row index.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "column {Integer} The cell's column index.",
            "paramName": "column",
            "description": " The cell's column index.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.LayoutItem} The configured widget for the given cell.",
            "type": "qx.ui.core.LayoutItem",
            "description": " The configured widget for the given cell."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.core.IWidgetCellProvider",
      "appearsIn": [
        "qx.ui.virtual.core.IWidgetCellProvider"
      ]
    },
    "poolCellWidget": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 113,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.LayoutItem} The cell widget to pool.",
            "paramName": "widget",
            "description": " The cell widget to pool.",
            "type": "qx.ui.core.LayoutItem"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.core.IWidgetCellProvider",
      "appearsIn": [
        "qx.ui.virtual.core.IWidgetCellProvider"
      ]
    },
    "createLayer": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.virtual.layer.Abstract} new layer.",
            "type": "qx.ui.virtual.layer.Abstract",
            "description": " new layer."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "appearsIn": [
        "qx.ui.list.provider.IListProvider"
      ]
    },
    "createItemRenderer": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 139,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} new item renderer.",
            "type": "var",
            "description": " new item renderer."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "appearsIn": [
        "qx.ui.list.provider.IListProvider"
      ]
    },
    "createGroupRenderer": {
      "location": {
        "start": {
          "line": 143,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} new group renderer.",
            "type": "var",
            "description": " new group renderer."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "appearsIn": [
        "qx.ui.list.provider.IListProvider"
      ]
    },
    "styleSelectabled": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 171,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "appearsIn": [
        "qx.ui.list.provider.IListProvider"
      ]
    },
    "styleUnselectabled": {
      "location": {
        "start": {
          "line": 175,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "appearsIn": [
        "qx.ui.list.provider.IListProvider"
      ]
    },
    "isSelectable": {
      "location": {
        "start": {
          "line": 183,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to select.",
            "paramName": "row",
            "description": " row to select.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the row can be selected,\n    <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> when the row can be selected,\n    <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "appearsIn": [
        "qx.ui.list.provider.IListProvider"
      ]
    },
    "_styleSelectabled": {
      "location": {
        "start": {
          "line": 211,
          "column": 4
        },
        "end": {
          "line": 213,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  INTERNAL API\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>Styles a selected item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to style.",
            "paramName": "widget",
            "description": " widget to style.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_styleUnselectabled": {
      "location": {
        "start": {
          "line": 221,
          "column": 4
        },
        "end": {
          "line": 223,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Styles a not selected item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to style.",
            "paramName": "widget",
            "description": " widget to style.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPool": {
      "location": {
        "start": {
          "line": 232,
          "column": 4
        },
        "end": {
          "line": 239,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calls the delegate <code>onPool</code> method when it is used in the\n {@link #delegate} property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to modify.",
            "paramName": "item",
            "description": " Item to modify.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onItemCreated": {
      "location": {
        "start": {
          "line": 254,
          "column": 4
        },
        "end": {
          "line": 258,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  EVENT HANDLERS\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>Event handler for the created item widget event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} fired event.",
            "paramName": "event",
            "description": " fired event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onGroupItemCreated": {
      "location": {
        "start": {
          "line": 266,
          "column": 4
        },
        "end": {
          "line": 270,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the created item widget event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} fired event.",
            "paramName": "event",
            "description": " fired event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onChangeDelegate": {
      "location": {
        "start": {
          "line": 278,
          "column": 4
        },
        "end": {
          "line": 288,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for the change delegate event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} fired event.",
            "paramName": "event",
            "description": " fired event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__getWidgetFrom": {
      "location": {
        "start": {
          "line": 304,
          "column": 4
        },
        "end": {
          "line": 306,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>---------------------------------------------------------------------------\n  HELPER METHODS\n---------------------------------------------------------------------------\n</code></pre>"
          },
          {
            "name": "@description",
            "body": "<p>Helper method to get the widget from the passed row.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to search.",
            "paramName": "row",
            "description": " row to search.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget|null} The found widget or <code>null</code> when no widget found.",
            "type": "qx.ui.core.Widget|null",
            "description": " The found widget or <code>null</code> when no widget found."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__updateStates": {
      "location": {
        "start": {
          "line": 315,
          "column": 4
        },
        "end": {
          "line": 322,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to update the states from a widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to set states.",
            "paramName": "widget",
            "description": " widget to set states.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "states {Map} the state to set.",
            "paramName": "states",
            "description": " the state to set.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "setLabelPath": {
      "type": "function",
      "name": "setLabelPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The path to the property which holds the information that should be\n shown as a label. This is only needed if objects are stored in the model.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} path to the property.",
            "paramName": "path",
            "description": " path to the property.",
            "type": "String"
          }
        ]
      }
    },
    "setIconPath": {
      "type": "function",
      "name": "setIconPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The path to the property which holds the information that should be\n shown as an icon. This is only needed if objects are stored in the model\n and if the icon should be shown.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} path to the property.",
            "paramName": "path",
            "description": " path to the property.",
            "type": "String"
          }
        ]
      }
    },
    "setLabelOptions": {
      "type": "function",
      "name": "setLabelOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>A map containing the options for the label binding. The possible keys\n can be found in the {@link qx.data.SingleValueBinding} documentation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "options {Map} options for the label binding.",
            "paramName": "options",
            "description": " options for the label binding.",
            "type": "Map"
          }
        ]
      }
    },
    "setIconOptions": {
      "type": "function",
      "name": "setIconOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>A map containing the options for the icon binding. The possible keys\n can be found in the {@link qx.data.SingleValueBinding} documentation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "options {Map} options for the icon binding.",
            "paramName": "options",
            "description": " options for the icon binding.",
            "type": "Map"
          }
        ]
      }
    },
    "setDelegate": {
      "type": "function",
      "name": "setDelegate",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delegation object, which can have one or more functions defined by the\n {@link qx.ui.list.core.IListDelegate} interface.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "delegate {Object} delegation object.",
            "paramName": "delegate",
            "description": " delegation object.",
            "type": "Object"
          }
        ]
      }
    },
    "removeBindings": {
      "type": "function",
      "name": "removeBindings",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.provider.IListProvider"
    },
    "bindDefaultProperties": {
      "type": "function",
      "name": "bindDefaultProperties",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper-Method for binding the default properties from\n the model to the target widget. The used default properties\n depends on the passed item. When the passed item is\n a list item the \"label\" and \"icon\" property is used.\n When the passed item is a group item the \"value\" property is\n used.\n This method should only be called in the\n {@link IListDelegate#bindItem} function\n implemented by the {@link #delegate} property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The internally created and used\n   list or group item.",
            "paramName": "item",
            "description": " The internally created and used\n   list or group item.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the item.",
            "paramName": "index",
            "description": " The index of the item.",
            "type": "Integer"
          }
        ]
      }
    },
    "bindProperty": {
      "type": "function",
      "name": "bindProperty",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper-Method for binding a given property from the model to the target\n widget.\n This method should only be called in the\n {@link IListDelegate#bindItem} function implemented by the\n {@link #delegate} property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "sourcePath {String | null} The path to the property in the model.\n   If you use an empty string, the whole model item will be bound.",
            "paramName": "sourcePath",
            "description": " The path to the property in the model.\n   If you use an empty string, the whole model item will be bound.",
            "type": [
              "String",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "targetProperty {String} The name of the property in the target widget.",
            "paramName": "targetProperty",
            "description": " The name of the property in the target widget.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Map | null} The options to use for the binding.",
            "paramName": "options",
            "description": " The options to use for the binding.",
            "type": [
              "Map",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "targetWidget {qx.ui.core.Widget} The target widget.",
            "paramName": "targetWidget",
            "description": " The target widget.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the current binding.",
            "paramName": "index",
            "description": " The index of the current binding.",
            "type": "Integer"
          }
        ]
      }
    },
    "bindPropertyReverse": {
      "type": "function",
      "name": "bindPropertyReverse",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper-Method for binding a given property from the target widget to\n the model.\n This method should only be called in the\n {@link IListDelegate#bindItem} function implemented by the\n {@link #delegate} property.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "targetPath {String | null} The path to the property in the model.",
            "paramName": "targetPath",
            "description": " The path to the property in the model.",
            "type": [
              "String",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "sourceProperty {String} The name of the property in the target.",
            "paramName": "sourceProperty",
            "description": " The name of the property in the target.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Map | null} The options to use for the binding.",
            "paramName": "options",
            "description": " The options to use for the binding.",
            "type": [
              "Map",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "sourceWidget {qx.ui.core.Widget} The source widget.",
            "paramName": "sourceWidget",
            "description": " The source widget.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the current binding.",
            "paramName": "index",
            "description": " The index of the current binding.",
            "type": "Integer"
          }
        ]
      }
    },
    "_configureItem": {
      "type": "function",
      "name": "_configureItem",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Configure the passed item if a delegate is set and the needed\n function {@link IListDelegate#configureItem} is available.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} item to configure.",
            "paramName": "item",
            "description": " item to configure.",
            "type": "qx.ui.core.Widget"
          }
        ]
      }
    },
    "_configureGroupItem": {
      "type": "function",
      "name": "_configureGroupItem",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Configure the passed item if a delegate is set and the needed\n function {@link IListDelegate#configureGroupItem} is available.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} item to configure.",
            "paramName": "item",
            "description": " item to configure.",
            "type": "qx.ui.core.Widget"
          }
        ]
      }
    },
    "_bindItem": {
      "type": "function",
      "name": "_bindItem",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets up the binding for the given item and index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The internally created and used item.",
            "paramName": "item",
            "description": " The internally created and used item.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the item.",
            "paramName": "index",
            "description": " The index of the item.",
            "type": "Integer"
          }
        ]
      }
    },
    "_bindGroupItem": {
      "type": "function",
      "name": "_bindGroupItem",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets up the binding for the given group item and index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The internally created and used item.",
            "paramName": "item",
            "description": " The internally created and used item.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the item.",
            "paramName": "index",
            "description": " The index of the item.",
            "type": "Integer"
          }
        ]
      }
    },
    "_removeBindingsFrom": {
      "type": "function",
      "name": "_removeBindingsFrom",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes the binding of the given item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The item which the binding should\n   be removed.",
            "paramName": "item",
            "description": " The item which the binding should\n   be removed.",
            "type": "qx.ui.core.Widget"
          }
        ]
      }
    },
    "__getBindPath": {
      "type": "function",
      "name": "__getBindPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to create the path for binding.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The index of the item.",
            "paramName": "index",
            "description": " The index of the item.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "path {String|null} The path to the property.",
            "paramName": "path",
            "description": " The path to the property.",
            "type": [
              "String",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "type {String} The type <code>[\"item\", \"group\"]</code>.",
            "paramName": "type",
            "description": " The type <code>[\"item\", \"group\"]</code>.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The binding path",
            "type": "String",
            "description": " The binding path"
          }
        ]
      }
    },
    "__addBinding": {
      "type": "function",
      "name": "__addBinding",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to save the binding for the widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to save binding.",
            "paramName": "widget",
            "description": " widget to save binding.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "id {var} the id from the binding.",
            "paramName": "id",
            "description": " the id from the binding.",
            "type": "var"
          }
        ]
      }
    },
    "__getBindings": {
      "type": "function",
      "name": "__getBindings",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method which returns all bound id from the widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to get all binding.",
            "paramName": "widget",
            "description": " widget to get all binding.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} all bound id's.",
            "type": "Array",
            "description": " all bound id's."
          }
        ]
      }
    },
    "getLabelPath": {
      "type": "function",
      "name": "getLabelPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>labelPath</code>.\n\nFor further details take a look at the property definition: {@link #labelPath}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for labelPath"
          }
        ]
      }
    },
    "resetLabelPath": {
      "type": "function",
      "name": "resetLabelPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "reset"
    },
    "getIconPath": {
      "type": "function",
      "name": "getIconPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>iconPath</code>.\n\nFor further details take a look at the property definition: {@link #iconPath}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for iconPath"
          }
        ]
      }
    },
    "resetIconPath": {
      "type": "function",
      "name": "resetIconPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "reset"
    },
    "getGroupLabelPath": {
      "type": "function",
      "name": "getGroupLabelPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>groupLabelPath</code>.\n\nFor further details take a look at the property definition: {@link #groupLabelPath}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for groupLabelPath"
          }
        ]
      }
    },
    "setGroupLabelPath": {
      "type": "function",
      "name": "setGroupLabelPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>groupLabelPath</code>.\n\nFor further details take a look at the property definition: {@link #groupLabelPath}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for groupLabelPath"
          }
        ]
      }
    },
    "resetGroupLabelPath": {
      "type": "function",
      "name": "resetGroupLabelPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "reset"
    },
    "getLabelOptions": {
      "type": "function",
      "name": "getLabelOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>labelOptions</code>.\n\nFor further details take a look at the property definition: {@link #labelOptions}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for labelOptions"
          }
        ]
      }
    },
    "resetLabelOptions": {
      "type": "function",
      "name": "resetLabelOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "reset"
    },
    "getIconOptions": {
      "type": "function",
      "name": "getIconOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>iconOptions</code>.\n\nFor further details take a look at the property definition: {@link #iconOptions}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for iconOptions"
          }
        ]
      }
    },
    "resetIconOptions": {
      "type": "function",
      "name": "resetIconOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "reset"
    },
    "getGroupLabelOptions": {
      "type": "function",
      "name": "getGroupLabelOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>groupLabelOptions</code>.\n\nFor further details take a look at the property definition: {@link #groupLabelOptions}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for groupLabelOptions"
          }
        ]
      }
    },
    "setGroupLabelOptions": {
      "type": "function",
      "name": "setGroupLabelOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>groupLabelOptions</code>.\n\nFor further details take a look at the property definition: {@link #groupLabelOptions}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for groupLabelOptions"
          }
        ]
      }
    },
    "resetGroupLabelOptions": {
      "type": "function",
      "name": "resetGroupLabelOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "reset"
    },
    "getDelegate": {
      "type": "function",
      "name": "getDelegate",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>delegate</code>.\n\nFor further details take a look at the property definition: {@link #delegate}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for delegate"
          }
        ]
      }
    },
    "resetDelegate": {
      "type": "function",
      "name": "resetDelegate",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.list.core.MWidgetController",
      "property": "reset"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 326,
        "column": 13
      },
      "end": {
        "line": 331,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}