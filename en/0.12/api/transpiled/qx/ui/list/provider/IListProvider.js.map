{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/list/provider/IListProvider.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "createLayer",
    "createItemRenderer",
    "createGroupRenderer",
    "styleSelectabled",
    "row",
    "styleUnselectabled",
    "isSelectable",
    "setLabelPath",
    "path",
    "setIconPath",
    "setLabelOptions",
    "options",
    "setIconOptions",
    "setDelegate",
    "delegate",
    "removeBindings",
    "ui",
    "list",
    "provider",
    "IListProvider"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;AAKAH,EAAAA,EAAE,CAACI,SAAH,CAAaC,MAAb,CAAoB,mCAApB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;;;;;AAKAC,MAAAA,WAAW,EAAG,uBAAW,CAAE,CAN7B;;AASE;;;;;AAKAC,MAAAA,kBAAkB,EAAG,8BAAW,CAAE,CAdpC;;AAiBE;;;;;AAKAC,MAAAA,mBAAmB,EAAG,+BAAW,CAAE,CAtBrC;;AAyBE;;;;;AAKAC,MAAAA,gBAAgB,EAAG,0BAASC,GAAT,EAAc,CAAE,CA9BrC;;AAiCE;;;;;AAKAC,MAAAA,kBAAkB,EAAG,4BAASD,GAAT,EAAc,CAAE,CAtCvC;;AAyCE;;;;;;;AAOAE,MAAAA,YAAY,EAAG,sBAASF,GAAT,EAAc,CAAE,CAhDjC;;AAmDE;;;;;;AAMAG,MAAAA,YAAY,EAAG,sBAASC,IAAT,EAAe,CAAE,CAzDlC;;AA4DE;;;;;;;AAOAC,MAAAA,WAAW,EAAG,qBAASD,IAAT,EAAe,CAAE,CAnEjC;;AAsEE;;;;;;AAMAE,MAAAA,eAAe,EAAG,yBAASC,OAAT,EAAkB,CAAE,CA5ExC;;AA+EE;;;;;;AAMAC,MAAAA,cAAc,EAAG,wBAASD,OAAT,EAAkB,CAAE,CArFvC;;AAwFE;;;;;;AAMAE,MAAAA,WAAW,EAAG,qBAASC,QAAT,EAAmB,CAAE,CA9FrC;;AAiGE;;;AAGAC,MAAAA,cAAc,EAAG,0BAAW,CAAE;AApGhC;AAFF,GADA;AAvBAtB,EAAAA,EAAE,CAACuB,EAAH,CAAMC,IAAN,CAAWC,QAAX,CAAoBC,aAApB,CAAkCvB,aAAlC,GAAkDA,aAAlD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This interface needs to implemented from all {@link qx.ui.list.List} providers.\n *\n * @internal\n */\nqx.Interface.define(\"qx.ui.list.provider.IListProvider\",\n{\n  members :\n  {\n    /**\n     * Creates a layer for item and group rendering.\n     *\n     * @return {qx.ui.virtual.layer.Abstract} new layer.\n     */\n    createLayer : function() {},\n\n\n    /**\n     * Creates a renderer for item rendering.\n     *\n     * @return {var} new item renderer.\n     */\n    createItemRenderer : function() {},\n\n\n    /**\n     * Creates a renderer for group rendering.\n     *\n     * @return {var} new group renderer.\n     */\n    createGroupRenderer : function() {},\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleSelectabled : function(row) {},\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleUnselectabled : function(row) {},\n\n\n    /**\n     * Returns if the passed row can be selected or not.\n     *\n     * @param row {Integer} row to select.\n     * @return {Boolean} <code>true</code> when the row can be selected,\n     *    <code>false</code> otherwise.\n     */\n    isSelectable : function(row) {},\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label. This is only needed if objects are stored in the model.\n     *\n     * @param path {String} path to the property.\n     */\n    setLabelPath : function(path) {},\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon. This is only needed if objects are stored in the model\n     * and if the icon should be shown.\n     *\n     * @param path {String} path to the property.\n     */\n    setIconPath : function(path) {},\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the label binding.\n     */\n    setLabelOptions : function(options) {},\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the icon binding.\n     */\n    setIconOptions : function(options) {},\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     *\n     * @param delegate {Object} delegation object.\n     */\n    setDelegate : function(delegate) {},\n\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings : function() {}\n  }\n});"
  ]
}