{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/core/scroll/ScrollPane.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "set",
    "minWidth",
    "minHeight",
    "_setLayout",
    "layout",
    "Grow",
    "addListener",
    "_onUpdate",
    "contentEl",
    "getContentElement",
    "_onScroll",
    "_onAppear",
    "events",
    "update",
    "scrollAnimationEnd",
    "properties",
    "scrollX",
    "check",
    "apply",
    "transform",
    "event",
    "init",
    "scrollY",
    "members",
    "__frame",
    "add",
    "widget",
    "old",
    "_getChildren",
    "_remove",
    "removeListener",
    "_add",
    "remove",
    "getChildren",
    "e",
    "fireEvent",
    "setScrollX",
    "getScrollX",
    "setScrollY",
    "getScrollY",
    "internalX",
    "domX",
    "scrollToX",
    "internalY",
    "domY",
    "scrollToY",
    "getItemTop",
    "item",
    "top",
    "getBounds",
    "getLayoutParent",
    "getItemBottom",
    "height",
    "getItemLeft",
    "left",
    "parent",
    "getInsets",
    "getItemRight",
    "width",
    "getScrollSize",
    "getScrollMaxX",
    "paneSize",
    "getInnerSize",
    "scrollSize",
    "Math",
    "max",
    "getScrollMaxY",
    "value",
    "duration",
    "stopScrollAnimation",
    "from",
    "bom",
    "AnimationFrame",
    "on",
    "timePassed",
    "newX",
    "parseInt",
    "startSequence",
    "newY",
    "scrollByX",
    "x",
    "scrollByY",
    "y",
    "cancelSequence",
    "_applyScrollX",
    "_transformScrollX",
    "round",
    "_applyScrollY",
    "_transformScrollY",
    "scroll",
    "ScrollPane"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class represents a scroll able pane. This means that this widget\n * may contain content which is bigger than the available (inner)\n * dimensions of this widget. The widget also offer methods to control\n * the scrolling position. It can only have exactly one child.\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollPane\",\n{\n  extend : qx.ui.core.Widget,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.set({\n      minWidth: 0,\n      minHeight: 0\n    });\n\n    // Automatically configure a \"fixed\" grow layout.\n    this._setLayout(new qx.ui.layout.Grow());\n\n    // Add resize listener to \"translate\" event\n    this.addListener(\"resize\", this._onUpdate);\n\n    var contentEl = this.getContentElement();\n\n    // Synchronizes the DOM scroll position with the properties\n    contentEl.addListener(\"scroll\", this._onScroll, this);\n\n    // Fixed some browser quirks e.g. correcting scroll position\n    // to the previous value on re-display of a pane\n    contentEl.addListener(\"appear\", this._onAppear, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired on resize of both the container or the content. */\n    update : \"qx.event.type.Event\",\n\n    /** Fired on scroll animation end invoked by 'scroll*' methods. */\n    scrollAnimationEnd : \"qx.event.type.Event\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The horizontal scroll position */\n    scrollX :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxX()\",\n      apply : \"_applyScrollX\",\n      transform: \"_transformScrollX\",\n      event : \"scrollX\",\n      init  : 0\n    },\n\n    /** The vertical scroll position */\n    scrollY :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxY()\",\n      apply : \"_applyScrollY\",\n      transform: \"_transformScrollY\",\n      event : \"scrollY\",\n      init  : 0\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __frame : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTENT MANAGEMENT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the content of the scroll pane. Replaces any existing child\n     * with the newly given one.\n     *\n     * @param widget {qx.ui.core.Widget?null} The content widget of the pane\n     */\n    add : function(widget)\n    {\n      var old = this._getChildren()[0];\n      if (old)\n      {\n        this._remove(old);\n        old.removeListener(\"resize\", this._onUpdate, this);\n      }\n\n      if (widget)\n      {\n        this._add(widget);\n        widget.addListener(\"resize\", this._onUpdate, this);\n      }\n    },\n\n\n    /**\n     * Removes the given widget from the content. The pane is empty\n     * afterwards as only one child is supported by the pane.\n     *\n     * @param widget {qx.ui.core.Widget?null} The content widget of the pane\n     */\n    remove : function(widget)\n    {\n      if (widget)\n      {\n        this._remove(widget);\n        widget.removeListener(\"resize\", this._onUpdate, this);\n      }\n    },\n\n\n    /**\n     * Returns an array containing the current content.\n     *\n     * @return {Object[]} The content array\n     */\n    getChildren : function() {\n      return this._getChildren();\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for resize event of content and container\n     *\n     * @param e {Event} Resize event object\n     */\n    _onUpdate : function(e) {\n      this.fireEvent(\"update\");\n    },\n\n\n    /**\n     * Event listener for scroll event of content\n     *\n     * @param e {qx.event.type.Event} Scroll event object\n     */\n    _onScroll : function(e)\n    {\n      var contentEl = this.getContentElement();\n\n      this.setScrollX(contentEl.getScrollX());\n      this.setScrollY(contentEl.getScrollY());\n    },\n\n\n    /**\n     * Event listener for appear event of content\n     *\n     * @param e {qx.event.type.Event} Appear event object\n     */\n    _onAppear : function(e)\n    {\n      var contentEl = this.getContentElement();\n\n      var internalX = this.getScrollX();\n      var domX = contentEl.getScrollX();\n\n      if (internalX != domX) {\n        contentEl.scrollToX(internalX);\n      }\n\n      var internalY = this.getScrollY();\n      var domY = contentEl.getScrollY();\n\n      if (internalY != domY) {\n        contentEl.scrollToY(internalY);\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ITEM LOCATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the top offset of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemTop : function(item)\n    {\n      var top = 0;\n\n      do\n      {\n        top += item.getBounds().top;\n        item = item.getLayoutParent();\n      }\n      while (item && item !== this);\n\n      return top;\n    },\n\n\n    /**\n     * Returns the top offset of the end of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemBottom : function(item) {\n      return this.getItemTop(item) + item.getBounds().height;\n    },\n\n\n    /**\n     * Returns the left offset of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemLeft : function(item)\n    {\n      var left = 0;\n      var parent;\n\n      do\n      {\n        left += item.getBounds().left;\n        parent = item.getLayoutParent();\n        if (parent) {\n          left += parent.getInsets().left;\n        }\n        item = parent;\n      }\n      while (item && item !== this);\n\n      return left;\n    },\n\n\n    /**\n     * Returns the left offset of the end of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Right offset\n     */\n    getItemRight : function(item) {\n      return this.getItemLeft(item) + item.getBounds().width;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The size (identical with the preferred size) of the content.\n     *\n     * @return {Map} Size of the content (keys: <code>width</code> and <code>height</code>)\n     */\n    getScrollSize : function() {\n      return this.getChildren()[0].getBounds();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The maximum horizontal scroll position.\n     *\n     * @return {Integer} Maximum horizontal scroll position.\n     */\n    getScrollMaxX : function()\n    {\n      var paneSize = this.getInnerSize();\n      var scrollSize = this.getScrollSize();\n\n      if (paneSize && scrollSize) {\n        return Math.max(0, scrollSize.width - paneSize.width);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * The maximum vertical scroll position.\n     *\n     * @return {Integer} Maximum vertical scroll position.\n     */\n    getScrollMaxY : function()\n    {\n      var paneSize = this.getInnerSize();\n      var scrollSize = this.getScrollSize();\n\n      if (paneSize && scrollSize) {\n        return Math.max(0, scrollSize.height - paneSize.height);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * Scrolls the element's content to the given left coordinate\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToX : function(value, duration)\n    {\n      var max = this.getScrollMaxX();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      this.stopScrollAnimation();\n\n      if (duration) {\n        var from = this.getScrollX();\n        this.__frame = new qx.bom.AnimationFrame();\n        this.__frame.on(\"end\", function() {\n          this.setScrollX(value);\n          this.__frame = null;\n          this.fireEvent(\"scrollAnimationEnd\");\n        }, this);\n        this.__frame.on(\"frame\", function(timePassed) {\n          var newX = parseInt(timePassed/duration * (value - from) + from);\n          this.setScrollX(newX);\n        }, this);\n        this.__frame.startSequence(duration);\n\n      } else {\n        this.setScrollX(value);\n      }\n    },\n\n\n    /**\n     * Scrolls the element's content to the given top coordinate\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToY : function(value, duration)\n    {\n      var max = this.getScrollMaxY();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      this.stopScrollAnimation();\n\n      if (duration) {\n        var from = this.getScrollY();\n        this.__frame = new qx.bom.AnimationFrame();\n        this.__frame.on(\"end\", function() {\n          this.setScrollY(value);\n          this.__frame = null;\n          this.fireEvent(\"scrollAnimationEnd\");\n        }, this);\n        this.__frame.on(\"frame\", function(timePassed) {\n          var newY = parseInt(timePassed/duration * (value - from) + from);\n          this.setScrollY(newY);\n        }, this);\n        this.__frame.startSequence(duration);\n\n      } else {\n        this.setScrollY(value);\n      }\n    },\n\n\n    /**\n     * Scrolls the element's content horizontally by the given amount.\n     *\n     * @param x {Integer?0} Amount to scroll\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByX : function(x, duration) {\n      this.scrollToX(this.getScrollX() + x, duration);\n    },\n\n\n    /**\n     * Scrolls the element's content vertically by the given amount.\n     *\n     * @param y {Integer?0} Amount to scroll\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByY : function(y, duration) {\n      this.scrollToY(this.getScrollY() + y, duration);\n    },\n\n\n    /**\n     * If an scroll animation is running, it will be stopped with that method.\n     */\n    stopScrollAnimation : function() {\n      if (this.__frame) {\n        this.__frame.cancelSequence();\n        this.__frame = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyScrollX : function(value) {\n      this.getContentElement().scrollToX(value);\n    },\n\n    /**\n     * Transform property\n     *\n     * @param value {Number} Value to transform\n     * @return {Number} Rounded value\n     */\n    _transformScrollX: function(value) {\n      return Math.round(value);\n    },\n    \n\n    // property apply\n    _applyScrollY : function(value) {\n      this.getContentElement().scrollToY(value);\n    },\n\n    /**\n     * Transform property\n     *\n     * @param value {Number} Value to transform\n     * @return {Number} Rounded value\n     */\n    _transformScrollY: function(value) {\n      return Math.round(value);\n    }\n  }\n});\n"
  ]
}