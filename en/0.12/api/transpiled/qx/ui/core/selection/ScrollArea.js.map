{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/core/selection/ScrollArea.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "selection",
    "Widget",
    "members",
    "_isSelectable",
    "item",
    "_isItemSelectable",
    "getLayoutParent",
    "_getWidget",
    "getChildrenContainer",
    "_getDimension",
    "getPaneSize",
    "_getScroll",
    "widget",
    "left",
    "getScrollX",
    "top",
    "getScrollY",
    "_scrollBy",
    "xoff",
    "yoff",
    "scrollByX",
    "scrollByY",
    "_getPage",
    "lead",
    "up",
    "selectables",
    "getSelectables",
    "length",
    "start",
    "indexOf",
    "Error",
    "scrollTop",
    "innerHeight",
    "getInnerSize",
    "height",
    "bottom",
    "found",
    "min",
    "i",
    "getItemTop",
    "first",
    "_getFirstSelectable",
    "getItemBottom",
    "max",
    "last",
    "_getLastSelectable",
    "ScrollArea"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n\n/**\n * A selection manager, which handles the selection in widgets extending\n * {@link qx.ui.core.scroll.AbstractScrollArea}.\n */\nqx.Class.define(\"qx.ui.core.selection.ScrollArea\",\n{\n  extend : qx.ui.core.selection.Widget,\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      BASIC SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _isSelectable : function(item)\n    {\n      return this._isItemSelectable(item) &&\n        item.getLayoutParent() === this._getWidget().getChildrenContainer();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSION AND LOCATION\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getDimension : function() {\n      return this._getWidget().getPaneSize();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getScroll : function()\n    {\n      var widget = this._getWidget();\n\n      return {\n        left : widget.getScrollX(),\n        top : widget.getScrollY()\n      };\n    },\n\n\n    // overridden\n    _scrollBy : function(xoff, yoff)\n    {\n      var widget = this._getWidget();\n\n      widget.scrollByX(xoff);\n      widget.scrollByY(yoff);\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      QUERY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getPage : function(lead, up)\n    {\n      var selectables = this.getSelectables();\n      var length = selectables.length;\n      var start = selectables.indexOf(lead);\n\n      // Given lead is not a selectable?!?\n      if (start === -1) {\n        throw new Error(\"Invalid lead item: \" + lead);\n      }\n\n      var widget = this._getWidget();\n      var scrollTop = widget.getScrollY();\n      var innerHeight = widget.getInnerSize().height;\n      var top, bottom, found;\n\n      if (up)\n      {\n        var min = scrollTop;\n        var i=start;\n\n        // Loop required to scroll pages up dynamically\n        while(1)\n        {\n          // Iterate through all selectables from start\n          for (; i>=0; i--)\n          {\n            top = widget.getItemTop(selectables[i]);\n\n            // This item is out of the visible block\n            if (top < min)\n            {\n              // Use previous one\n              found = i;\n              break;\n            }\n          }\n\n          // Nothing found. Return first item.\n          if (found == null)\n          {\n            var first = this._getFirstSelectable();\n            return first == lead ? null : first;\n          }\n\n          // Found item, but is identical to start or even before start item\n          // Update min position and try on previous page\n          if (found >= start)\n          {\n            // Reduce min by the distance of the lead item to the visible\n            // bottom edge. This is needed instead of a simple subtraction\n            // of the inner height to keep the last lead visible on page key\n            // presses. This is the behavior of native toolkits as well.\n            min -= innerHeight + scrollTop - widget.getItemBottom(lead);\n            found = null;\n            continue;\n          }\n\n          // Return selectable\n          return selectables[found];\n        }\n      }\n      else\n      {\n        var max = innerHeight + scrollTop;\n        var i=start;\n\n        // Loop required to scroll pages down dynamically\n        while(1)\n        {\n          // Iterate through all selectables from start\n          for (; i<length; i++)\n          {\n            bottom = widget.getItemBottom(selectables[i]);\n\n            // This item is out of the visible block\n            if (bottom > max)\n            {\n              // Use next one\n              found = i;\n              break;\n            }\n          }\n\n          // Nothing found. Return last item.\n          if (found == null)\n          {\n            var last = this._getLastSelectable();\n            return last == lead ? null : last;\n          }\n\n          // Found item, but is identical to start or even before start item\n          // Update max position and try on next page\n          if (found <= start)\n          {\n            // Extend max by the distance of the lead item to the visible\n            // top edge. This is needed instead of a simple addition\n            // of the inner height to keep the last lead visible on page key\n            // presses. This is the behavior of native toolkits as well.\n            max += widget.getItemTop(lead) - scrollTop;\n            found = null;\n            continue;\n          }\n\n          // Return selectable\n          return selectables[found];\n        }\n      }\n    }\n  }\n});\n"
  ]
}