{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/ui/virtual/layer/HtmlCellSpan.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "HtmlCell",
    "construct",
    "htmlCellProvider",
    "rowConfig",
    "columnConfig",
    "_spanManager",
    "CellSpanManager",
    "members",
    "setCellSpan",
    "row",
    "column",
    "rowSpan",
    "columnSpan",
    "id",
    "removeCell",
    "addCell",
    "core",
    "queue",
    "Widget",
    "add",
    "__renderCell",
    "htmlArr",
    "left",
    "top",
    "width",
    "height",
    "cellProperties",
    "_cellProvider",
    "getCellProperties",
    "insets",
    "push",
    "_getCellSizeStyle",
    "style",
    "classes",
    "attributes",
    "content",
    "_fullUpdate",
    "firstRow",
    "firstColumn",
    "rowSizes",
    "columnSizes",
    "html",
    "cells",
    "findCellsInWindow",
    "length",
    "bounds",
    "getCellBounds",
    "spanMap",
    "computeCellSpanMap",
    "i",
    "l",
    "cell",
    "cellBounds",
    "x",
    "y",
    "getContentElement",
    "setAttribute",
    "join",
    "destruct",
    "_disposeObjects",
    "HtmlCellSpan"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * An extended HtmlCell layer, which adds the possibility to specify row and\n * column spans for specific cells.\n */\nqx.Class.define(\"qx.ui.virtual.layer.HtmlCellSpan\",\n{\n  extend : qx.ui.virtual.layer.HtmlCell,\n\n\n  /**\n   * @param htmlCellProvider {qx.ui.virtual.core.IHtmlCellProvider} This class\n   *    provides the HTML markup for each cell.\n   * @param rowConfig {qx.ui.virtual.core.Axis} The row configuration of the pane\n   *    in which the cells will be rendered\n   * @param columnConfig {qx.ui.virtual.core.Axis} The column configuration of\n   *    the pane in which the cells will be rendered\n   */\n  construct : function(htmlCellProvider, rowConfig, columnConfig)\n  {\n    this.base(arguments, htmlCellProvider);\n    this._spanManager = new qx.ui.virtual.layer.CellSpanManager(\n      rowConfig, columnConfig\n    );\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Set the row and column span for a specific cell\n     *\n     * @param row {PositiveInteger} The cell's row\n     * @param column {PositiveInteger} The cell's column\n     * @param rowSpan {PositiveInteger} The number of rows the cells spans\n     * @param columnSpan {PositiveInteger} The number of columns the cells spans\n     */\n    setCellSpan : function(row, column, rowSpan, columnSpan)\n    {\n      var id = row + \"x\" + column;\n      this._spanManager.removeCell(id);\n      if (rowSpan > 1 || columnSpan > 1) {\n        this._spanManager.addCell(id, row, column, rowSpan, columnSpan);\n      }\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    /**\n     * Renders a cell\n     *\n     * @param htmlArr {String[]} the output array\n     * @param row {Integer} The cell's row index\n     * @param column {Integer} The cell's column index\n     * @param left {Integer} The cell's CSS left position (in pixel)\n     * @param top {Integer} The cell's CSS top position (in pixel)\n     * @param width {Integer} The cell's width\n     * @param height {Integer} The cell's height\n     */\n    __renderCell : function(htmlArr, row, column, left, top, width, height)\n    {\n      var cellProperties = this._cellProvider.getCellProperties(row, column);\n      var insets = cellProperties.insets || [0, 0];\n\n      htmlArr.push(\n        \"<div \",\n        \"style='\",\n        \"left:\", left, \"px;\",\n        \"top:\", top, \"px;\",\n        this._getCellSizeStyle(width, height, insets[0], insets[1]),\n        cellProperties.style || \"\", \"' \",\n        \"class='\", cellProperties.classes || \"\", \"' \",\n        cellProperties.attributes || \"\", \">\",\n        cellProperties.content || \"\",\n        \"</div>\"\n      );\n    },\n\n\n    // overridden\n    _fullUpdate : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      var html = [];\n\n      var cells = this._spanManager.findCellsInWindow(\n        firstRow, firstColumn,\n        rowSizes.length, columnSizes.length\n      );\n\n      if (cells.length > 0)\n      {\n        var bounds = this._spanManager.getCellBounds(cells, firstRow, firstColumn);\n        var spanMap = this._spanManager.computeCellSpanMap(\n          cells,\n          firstRow, firstColumn,\n          rowSizes.length, columnSizes.length\n        );\n\n        // render spanning cells\n        for (var i=0, l=cells.length; i<l; i++)\n        {\n          var cell = cells[i];\n          var cellBounds = bounds[i];\n          this.__renderCell(\n            html,\n            cell.firstRow, cell.firstColumn,\n            cellBounds.left, cellBounds.top,\n            cellBounds.width, cellBounds.height\n          );\n        }\n      }\n      else\n      {\n        // create empty dummy map\n        spanMap = [];\n        for (var i=0; i<rowSizes.length; i++) {\n          spanMap[firstRow+i] = [];\n        }\n      }\n\n      // render non spanning cells\n      var left = 0;\n      var top = 0;\n      var row = firstRow;\n      var column = firstColumn;\n      for (var x=0; x<rowSizes.length; x++)\n      {\n        var left = 0;\n        var column = firstColumn;\n        var height = rowSizes[x];\n        for(var y=0; y<columnSizes.length; y++)\n        {\n          var width = columnSizes[y];\n\n          if (!spanMap[row][column])\n          {\n            this.__renderCell(\n              html,\n              row, column,\n              left, top,\n              width, height\n            );\n          }\n\n          column++;\n          left += width;\n        }\n        top += height;\n        row++;\n      }\n\n      this.getContentElement().setAttribute(\"html\", html.join(\"\"));\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._disposeObjects(\"_spanManager\");\n  }\n});"
  ]
}