{
  "className": "qx.ui.virtual.core.Axis",
  "packageName": "qx.ui.virtual.core",
  "name": "Axis",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 427,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2009 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>The axis maps virtual screen coordinates to item indexes. By default all\n items have the same size but it is also possible to give specific items\n a different size.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 14
      },
      "end": {
        "line": 41,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "defaultItemSize {Integer} The default size of the items.",
          "paramName": "defaultItemSize",
          "description": " The default size of the items.",
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "itemCount {Integer} The number of item on the axis.",
          "paramName": "itemCount",
          "description": " The number of item on the axis.",
          "type": "Integer"
        }
      ]
    }
  },
  "events": {
    "change": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 36
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Every change to the axis configuration triggers this event.</p>"
          }
        ]
      },
      "name": "change",
      "type": "qx.event.type.Event"
    }
  },
  "members": {
    "__ranges": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getDefaultItemSize": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the default size of the items.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The default item size.",
            "type": "Integer",
            "description": " The default item size."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setDefaultItemSize": {
      "location": {
        "start": {
          "line": 71,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the default size the items.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "defaultItemSize {Integer} The default size of the items.",
            "paramName": "defaultItemSize",
            "description": " The default size of the items.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getItemCount": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the number of items in the axis.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The number of items.",
            "type": "Integer",
            "description": " The number of items."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setItemCount": {
      "location": {
        "start": {
          "line": 97,
          "column": 4
        },
        "end": {
          "line": 105,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the number of items in the axis.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "itemCount {Integer} The new item count.",
            "paramName": "itemCount",
            "description": " The new item count.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setItemSize": {
      "location": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 136,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the size of a specific item. This allow item, which have a size\n different from the default size.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} Index of the item to change.",
            "paramName": "index",
            "description": " Index of the item to change.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "size {Integer} New size of the item.",
            "paramName": "size",
            "description": " New size of the item.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getItemSize": {
      "location": {
        "start": {
          "line": 145,
          "column": 4
        },
        "end": {
          "line": 149,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the size of the item at the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} Index of the item to get the size for.",
            "paramName": "index",
            "description": " Index of the item to get the size for.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Size of the item.",
            "type": "Integer",
            "description": " Size of the item."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetItemSizes": {
      "location": {
        "start": {
          "line": 155,
          "column": 4
        },
        "end": {
          "line": 160,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset all custom sizes set with {@link #setItemSize}.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__getRanges": {
      "location": {
        "start": {
          "line": 172,
          "column": 4
        },
        "end": {
          "line": 250,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Split the position range into disjunct intervals. Each interval starts\n with a custom sized cell. Each position is contained in exactly one range.\n The ranges are sorted according to their start position.\n Complexity: O(n log n) (n = number of custom sized cells)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} The sorted list of ranges.",
            "type": "Map[]",
            "description": " The sorted list of ranges."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__findRangeByPosition": {
      "location": {
        "start": {
          "line": 261,
          "column": 4
        },
        "end": {
          "line": 282,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the range, which contains the position\n Complexity: O(log n) (n = number of custom sized cells)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} The position.",
            "paramName": "position",
            "description": " The position.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The range, which contains the given position.",
            "type": "Map",
            "description": " The range, which contains the given position."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getItemAtPosition": {
      "location": {
        "start": {
          "line": 294,
          "column": 4
        },
        "end": {
          "line": 321,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the item and the offset into the item at the given position.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer|null} The position to get the item for.",
            "paramName": "position",
            "description": " The position to get the item for.",
            "type": [
              "Integer",
              "null"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map with the keys <code>index</code> and\n    <code>offset</code>. The index is the index of the item containing the\n    position and offsets specifies offset into this item. If the position\n    is outside of the range, <code>null</code> is returned.",
            "type": "Map",
            "description": " A map with the keys <code>index</code> and\n    <code>offset</code>. The index is the index of the item containing the\n    position and offsets specifies offset into this item. If the position\n    is outside of the range, <code>null</code> is returned."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__findRangeByIndex": {
      "location": {
        "start": {
          "line": 332,
          "column": 4
        },
        "end": {
          "line": 353,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the range, which contains the position.\n Complexity: O(log n) (n = number of custom sized cells)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The index of the item to get the range for.",
            "paramName": "index",
            "description": " The index of the item to get the range for.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The range for the index.",
            "type": "Map",
            "description": " The range for the index."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getItemPosition": {
      "location": {
        "start": {
          "line": 363,
          "column": 4
        },
        "end": {
          "line": 375,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the start position of the item with the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The item's index.",
            "paramName": "index",
            "description": " The item's index.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer|null} The start position of the item. If the index is outside\n    of the axis range <code>null</code> is returned.",
            "type": "Integer|null",
            "description": " The start position of the item. If the index is outside\n    of the axis range <code>null</code> is returned."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTotalSize": {
      "location": {
        "start": {
          "line": 383,
          "column": 4
        },
        "end": {
          "line": 387,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the sum of all cell sizes.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The sum of all item sizes.",
            "type": "Integer",
            "description": " The sum of all item sizes."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getItemSizes": {
      "location": {
        "start": {
          "line": 400,
          "column": 4
        },
        "end": {
          "line": 420,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get an array of item sizes starting with the item at \"startIndex\". The\n sum of all sizes in the returned array is at least \"minSizeSum\".</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startIndex {Integer} The index of the first item.",
            "paramName": "startIndex",
            "description": " The index of the first item.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "minSizeSum {Integer} The minimum sum of the item sizes.",
            "paramName": "minSizeSum",
            "description": " The minimum sum of the item sizes.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} List of item sizes starting with the size of the item\n    at index <code>startIndex</code>. The sum of the item sizes is at least\n    <code>minSizeSum</code>.",
            "type": "Integer[]",
            "description": " List of item sizes starting with the size of the item\n    at index <code>startIndex</code>. The sum of the item sizes is at least\n    <code>minSizeSum</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 424,
        "column": 13
      },
      "end": {
        "line": 426,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}