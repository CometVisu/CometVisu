{
  "className": "qx.ui.virtual.cell.CellStylesheet",
  "packageName": "qx.ui.virtual.cell",
  "name": "CellStylesheet",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 126,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2004-2009 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Singleton wrapper for the stylesheet containing the CSS rules for HTML cells.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 29,
        "column": 14
      },
      "end": {
        "line": 53,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "members": {
    "__stylesheet": {
      "location": {
        "start": {
          "line": 58,
          "column": 4
        },
        "end": {
          "line": 58,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__classes": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__styles": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getStylesheet": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the DOM stylesheet element</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{StyleSheet} The DOM stylesheet element",
            "type": "StyleSheet",
            "description": " The DOM stylesheet element"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCssClass": {
      "location": {
        "start": {
          "line": 80,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the CSS class stored under the given key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The key under which the class name is stored",
            "paramName": "key",
            "description": " The key under which the class name is stored",
            "type": "qx.ui.virtual.cell.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} The CSS class stored under the given key or\n   <code>null</code>.",
            "type": "String|null",
            "description": " The CSS class stored under the given key or\n   <code>null</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "computeClassForStyles": {
      "location": {
        "start": {
          "line": 94,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Dynamically create a CSS rule for the given style string. The selector is\n an unique class name, which is returned. The class is stored under the\n given key name and can be queried using {@link #getCssClass}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The key under which the class name should be stored",
            "paramName": "key",
            "description": " The key under which the class name should be stored",
            "type": "qx.ui.virtual.cell.String"
          },
          {
            "name": "@param",
            "body": "styleString {String} A compiled string of CSS rules.",
            "paramName": "styleString",
            "description": " A compiled string of CSS rules.",
            "type": "qx.ui.virtual.cell.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The CSS class name.",
            "type": "qx.ui.virtual.cell.String",
            "description": " The CSS class name."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__getNextClassname": {
      "location": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the next unique CSS class name</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The next unique CSS class name",
            "type": "qx.ui.virtual.cell.String",
            "description": " The next unique CSS class name"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__classCounter": {
      "location": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 118,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 123,
        "column": 13
      },
      "end": {
        "line": 125,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}