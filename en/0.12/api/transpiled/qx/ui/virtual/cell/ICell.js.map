{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/ICell.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "getCellProperties",
    "data",
    "states",
    "ui",
    "virtual",
    "cell",
    "ICell"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;AAIAH,EAAAA,EAAE,CAACI,SAAH,CAAaC,MAAb,CAAoB,0BAApB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;;;;;;;;;;;;;;;;;AAiBAC,MAAAA,iBAAiB,EAAG,2BAASC,IAAT,EAAeC,MAAf,EAAuB,CAAE;AAlB/C;AAFF,GADA;AAvBAT,EAAAA,EAAE,CAACU,EAAH,CAAMC,OAAN,CAAcC,IAAd,CAAmBC,KAAnB,CAAyBV,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A HTML cell provider provides the {@link qx.ui.virtual.layer.HtmlCell}\n * with HTML fragments to render the cells.\n */\nqx.Interface.define(\"qx.ui.virtual.cell.ICell\",\n{\n  members :\n  {\n    /**\n     * Returns all relevant properties of the cell:\n     * <ul>\n     * <li>classes (String): Space separated class names</li>\n     * <li>style (String): CSS styles</li>\n     * <li>attributes (String): Space separated attributes</li>\n     * <li>content (String): HTML fragment of the innerHTML of the cell</li>\n     * <li>insets (Array): insets (padding + border) of the cell as\n     * two-dimensional array.</li>\n     * </ul>\n     *\n     * @param data {var} Data needed for the cell to render.\n     * @param states {Map} The states set on the cell (e.g. <i>selected</i>,\n     * <i>focused</i>, <i>editable</i>).\n     *\n     * @return {Map} Cell properties (see above.)\n     */\n    getCellProperties : function(data, states) {}\n  }\n});"
  ]
}