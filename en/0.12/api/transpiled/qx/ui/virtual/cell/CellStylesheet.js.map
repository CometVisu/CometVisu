{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/CellStylesheet.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "stylesheet",
    "bom",
    "element",
    "Style",
    "compile",
    "position",
    "overflow",
    "cursor",
    "textOverflow",
    "userSelect",
    "Environment",
    "get",
    "BoxSizing",
    "__stylesheet",
    "Stylesheet",
    "createElement",
    "__classes",
    "__styles",
    "members",
    "getStylesheet",
    "getCssClass",
    "key",
    "computeClassForStyles",
    "styleString",
    "cssClass",
    "__getNextClassname",
    "addRule",
    "toHashCode",
    "__classCounter",
    "destruct",
    "ui",
    "virtual",
    "cell",
    "CellStylesheet"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Singleton wrapper for the stylesheet containing the CSS rules for HTML cells.\n *\n */\nqx.Class.define(\"qx.ui.virtual.cell.CellStylesheet\",\n{\n  extend : qx.core.Object,\n  type : \"singleton\",\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    var stylesheet =\n      \".qx-cell {\" +\n      qx.bom.element.Style.compile(\n      {\n        position : \"absolute\",\n        overflow: \"hidden\",\n        cursor : \"default\",\n        textOverflow : \"ellipsis\",\n        userSelect : \"none\"\n      }) +\n      \"} \";\n\n    if (qx.core.Environment.get(\"css.boxsizing\")) {\n      stylesheet += \".qx-cell {\" + qx.bom.element.BoxSizing.compile(\"content-box\") + \"}\";\n    }\n\n    this.__stylesheet = qx.bom.Stylesheet.createElement(stylesheet);\n\n    this.__classes = {};\n    this.__styles = {};\n  },\n\n\n  members :\n  {\n    __stylesheet : null,\n    __classes : null,\n    __styles : null,\n\n\n    /**\n     * Get the DOM stylesheet element\n     *\n     * @return {StyleSheet} The DOM stylesheet element\n     */\n    getStylesheet : function() {\n      return this.__stylesheet;\n    },\n\n\n    /**\n     * Get the CSS class stored under the given key\n     *\n     * @param key {String} The key under which the class name is stored\n     * @return {String|null} The CSS class stored under the given key or\n     *   <code>null</code>.\n     */\n    getCssClass : function(key) {\n      return this.__classes[key] || null;\n    },\n\n\n    /**\n     * Dynamically create a CSS rule for the given style string. The selector is\n     * an unique class name, which is returned. The class is stored under the\n     * given key name and can be queried using {@link #getCssClass}.\n     *\n     * @param key {String} The key under which the class name should be stored\n     * @param styleString {String} A compiled string of CSS rules.\n     * @return {String} The CSS class name.\n     */\n    computeClassForStyles : function(key, styleString)\n    {\n      var cssClass = this.__styles[styleString];\n      if (!cssClass)\n      {\n        // generate stylesheet rule\n        var cssClass = this.__getNextClassname();\n        qx.bom.Stylesheet.addRule(this.__stylesheet, \".\" + cssClass, styleString);\n        this.__styles[styleString] = cssClass;\n      }\n\n      this.__classes[key] = cssClass;\n      return cssClass;\n    },\n\n\n    /**\n     * Get the next unique CSS class name\n     *\n     * @return {String} The next unique CSS class name\n     */\n    __getNextClassname : function() {\n      return \"qx-cell-\" + this.toHashCode() + \"-\" + (this.__classCounter++);\n    },\n    __classCounter : 0\n\n  },\n\n\n  destruct : function() {\n    this.__stylesheet = this.__classes = this.__styles = null;\n  }\n});"
  ]
}