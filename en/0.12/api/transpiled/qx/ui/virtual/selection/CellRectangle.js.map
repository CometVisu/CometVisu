{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/CellRectangle.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "selection",
    "Abstract",
    "members",
    "_getItemCount",
    "_pane",
    "getRowConfig",
    "getItemCount",
    "getColumnConfig",
    "_getSelectableFromPointerEvent",
    "event",
    "cell",
    "getCellAtPosition",
    "getDocumentLeft",
    "getDocumentTop",
    "_isSelectable",
    "getSelectables",
    "all",
    "selectables",
    "rowCount",
    "columnCount",
    "row",
    "column",
    "push",
    "_getSelectableRange",
    "item1",
    "item2",
    "minRow",
    "Math",
    "min",
    "maxRow",
    "max",
    "minColumn",
    "maxColumn",
    "_getFirstSelectable",
    "_getLastSelectable",
    "_getRelatedSelectable",
    "item",
    "relation",
    "_getPage",
    "lead",
    "up",
    "_selectableToHashCode",
    "_scrollItemIntoView",
    "_autoScrollIntoView",
    "scrollCellIntoView",
    "_getSelectableLocationX",
    "columnConfig",
    "itemLeft",
    "getItemPosition",
    "itemRight",
    "getItemSize",
    "left",
    "right",
    "_getSelectableLocationY",
    "rowConfig",
    "itemTop",
    "itemBottom",
    "top",
    "bottom",
    "CellRectangle"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Cell selection manager\n */\nqx.Class.define(\"qx.ui.virtual.selection.CellRectangle\",\n{\n  extend : qx.ui.virtual.selection.Abstract,\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Returns the number of all items in the pane. This number may contain\n     * unselectable items as well.\n     *\n     * @return {Integer} number of items\n     */\n    _getItemCount : function() {\n      return this._pane.getRowConfig().getItemCount() * this._pane.getColumnConfig().getItemCount();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getSelectableFromPointerEvent : function(event)\n    {\n      var cell = this._pane.getCellAtPosition(\n        event.getDocumentLeft(),\n        event.getDocumentTop()\n      );\n\n      if (!cell) {\n        return null;\n      }\n\n      return this._isSelectable(cell) ? cell : null;\n    },\n\n\n    // overridden\n    getSelectables : function(all)\n    {\n      var selectables = [];\n\n      var rowCount = this._pane.getRowConfig().getItemCount();\n      var columnCount = this._pane.getColumnConfig().getItemCount();\n\n      for (var row=0; row<rowCount; row++)\n      {\n        for (var column=0; column<columnCount; column++)\n        {\n          var cell = {\n              row: row,\n              column: column\n          };\n          if (this._isSelectable(cell)) {\n            selectables.push(cell);\n          }\n        }\n      }\n\n      return selectables;\n    },\n\n\n    // overridden\n    _getSelectableRange : function(item1, item2)\n    {\n      var selectables = [];\n\n      var minRow = Math.min(item1.row, item2.row);\n      var maxRow = Math.max(item1.row, item2.row);\n      var minColumn = Math.min(item1.column, item2.column);\n      var maxColumn = Math.max(item1.column, item2.column);\n\n      for (var row=minRow; row<=maxRow; row++)\n      {\n        for (var column=minColumn; column<=maxColumn; column++)\n        {\n          var cell = {\n              row: row,\n              column: column\n          };\n          if (this._isSelectable(cell)) {\n            selectables.push(cell);\n          }\n        }\n      }\n      return selectables;\n    },\n\n\n    // overridden\n    _getFirstSelectable : function()\n    {\n      var rowCount = this._pane.getRowConfig().getItemCount();\n      var columnCount = this._pane.getColumnConfig().getItemCount();\n\n      for (var row=0; row<rowCount; row++)\n      {\n        for (var column=0; column<columnCount; column++)\n        {\n          var cell = {\n              row: row,\n              column: column\n          };\n          if (this._isSelectable(cell)) {\n            return cell;\n          }\n        }\n      }\n\n      return null;\n    },\n\n\n    // overridden\n    _getLastSelectable : function()\n    {\n      var rowCount = this._pane.getRowConfig().getItemCount();\n      var columnCount = this._pane.getColumnConfig().getItemCount();\n\n      for (var column=columnCount-1; column>=0; column--)\n      {\n        for (var row=rowCount-1; row>=0; row--)\n        {\n          var cell = {\n              row: row,\n              column: column\n          };\n          if (this._isSelectable(cell)) {\n            return cell;\n          }\n        }\n      }\n\n      return null;\n    },\n\n\n    // overridden\n    _getRelatedSelectable : function(item, relation)\n    {\n      var cell = {\n        row: item.row,\n        column: item.column\n      };\n\n      switch(relation)\n      {\n        case \"above\":\n          for (var row=item.row-1; row>=0; row--)\n          {\n            cell.row = row;\n            if (this._isSelectable(cell)) {\n              return cell;\n            }\n          }\n          break;\n\n        case \"under\":\n          var rowCount = this._pane.getRowConfig().getItemCount();\n          for (var row=item.row+1; row<rowCount; row++)\n          {\n            cell.row = row;\n            if (this._isSelectable(cell)) {\n              return cell;\n            }\n          }\n          break;\n\n        case \"left\":\n          for (var column=item.column-1; column>=0; column--)\n          {\n            cell.column = column;\n            if (this._isSelectable(cell)) {\n              return cell;\n            }\n          }\n          break;\n\n        case \"right\":\n          var columnCount = this._pane.getColumnConfig().getItemCount();\n          for (var column=item.column+1; column<columnCount; column++)\n          {\n            cell.column = column;\n            if (this._isSelectable(cell)) {\n              return cell;\n            }\n          }\n          break;\n      }\n      return null;\n    },\n\n\n    // overridden\n    _getPage : function(lead, up)\n    {\n      if (up) {\n        return this._getFirstSelectable();\n      } else {\n        return this._getLastSelectable();\n      }\n    },\n\n\n    // overridden\n    _selectableToHashCode : function(item) {\n      return item.column + \"x\" + item.row;\n    },\n\n\n    // overridden\n    _scrollItemIntoView : function(item) {\n      if (this._autoScrollIntoView) {\n        this._pane.scrollCellIntoView(item.column, item.row);\n      }\n    },\n\n\n    // overridden\n    _getSelectableLocationX : function(item)\n    {\n      var columnConfig = this._pane.getColumnConfig();\n\n      var itemLeft = columnConfig.getItemPosition(item.column);\n      var itemRight = itemLeft + columnConfig.getItemSize(item.column) - 1;\n\n      return {\n        left: itemLeft,\n        right: itemRight\n      };\n    },\n\n\n    // overridden\n    _getSelectableLocationY : function(item)\n    {\n      var rowConfig = this._pane.getRowConfig();\n\n      var itemTop = rowConfig.getItemPosition(item.row);\n      var itemBottom = itemTop + rowConfig.getItemSize(item.row) - 1;\n\n      return {\n        top: itemTop,\n        bottom: itemBottom\n      };\n    }\n  }\n});\n"
  ]
}