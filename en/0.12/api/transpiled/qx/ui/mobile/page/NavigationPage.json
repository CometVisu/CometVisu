{
  "className": "qx.ui.mobile.page.NavigationPage",
  "packageName": "qx.ui.mobile.page",
  "name": "NavigationPage",
  "superClass": "qx.ui.mobile.page.Page",
  "interfaces": [
    "qx.ui.mobile.container.INavigation"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 53,
        "column": 0
      },
      "end": {
        "line": 559,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2011 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Tino Butz (tbtz)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Specialized page. This page includes already a {@link qx.ui.mobile.navigationbar.NavigationBar}\n and and a {@link qx.ui.mobile.container.Scroll} container.\n The NavigationPage can only be used with a page manager {@link qx.ui.mobile.page.Manager}.\n<em>Example</em>\n Here is a little example of how to use the widget.\n </p>\n<pre class='javascript'>\n  var manager = new qx.ui.mobile.page.Manager();\n  var page = new qx.ui.mobile.page.NavigationPage();\n  page.setTitle(\"Page Title\");\n  page.setShowBackButton(true);\n  page.setBackButtonText(\"Back\")\n  page.addListener(\"initialize\", function()\n  {\n    var button = new qx.ui.mobile.form.Button(\"Next Page\");\n    page.getContent().add(button);\n  },this);\n  page.addListener(\"back\", function()\n  {\n    otherPage.show({animation:\"cube\", reverse:true});\n  },this);\n  manager.addDetail(page);\n  page.show();\n </pre>\n<p>This example creates a NavigationPage with a title and a back button. In the\n <code>initialize</code> lifecycle method a button is added.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 69,
        "column": 14
      },
      "end": {
        "line": 76,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "wrapContentByGroup {Boolean} Defines whether a group box should wrap the content. This can be used for defining a page margin.",
          "paramName": "wrapContentByGroup",
          "description": " Defines whether a group box should wrap the content. This can be used for defining a page margin.",
          "type": "Boolean"
        },
        {
          "name": "@param",
          "body": "layout {qx.ui.mobile.layout.Abstract} The layout of this page.",
          "paramName": "layout",
          "description": " The layout of this page.",
          "type": "qx.ui.mobile.layout.Abstract"
        }
      ]
    }
  },
  "events": {
    "action": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 34
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the user tapped on the navigation button</p>"
          }
        ]
      },
      "name": "action",
      "type": "qx.event.type.Event"
    }
  },
  "properties": {
    "title": {
      "location": {
        "start": {
          "line": 100,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The title of the page</p>"
          }
        ]
      },
      "name": "title",
      "propertyType": "new",
      "event": "changeTitle",
      "apply": "_applyTitle",
      "init": "",
      "check": "String",
      "defaultValue": ""
    },
    "backButtonText": {
      "location": {
        "start": {
          "line": 110,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The back button text</p>"
          }
        ]
      },
      "name": "backButtonText",
      "propertyType": "new",
      "apply": "_applyBackButtonText",
      "init": "",
      "check": "String",
      "defaultValue": ""
    },
    "buttonText": {
      "location": {
        "start": {
          "line": 119,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The action button text</p>"
          }
        ]
      },
      "name": "buttonText",
      "propertyType": "new",
      "apply": "_applyActionButtonText",
      "init": "",
      "check": "String",
      "defaultValue": ""
    },
    "buttonIcon": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The action button icon</p>"
          }
        ]
      },
      "name": "buttonIcon",
      "propertyType": "new",
      "apply": "_applyActionButtonIcon",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "showBackButton": {
      "location": {
        "start": {
          "line": 140,
          "column": 4
        },
        "end": {
          "line": 145,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to show the back button.</p>"
          }
        ]
      },
      "name": "showBackButton",
      "propertyType": "new",
      "apply": "_applyShowBackButton",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "showBackButtonOnTablet": {
      "location": {
        "start": {
          "line": 151,
          "column": 4
        },
        "end": {
          "line": 155,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Indicates whether the back button should be shown on tablet.</p>"
          }
        ]
      },
      "name": "showBackButtonOnTablet",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "showButton": {
      "location": {
        "start": {
          "line": 161,
          "column": 4
        },
        "end": {
          "line": 166,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to show the action button.</p>"
          }
        ]
      },
      "name": "showButton",
      "propertyType": "new",
      "apply": "_applyShowButton",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "navigationBarHidden": {
      "location": {
        "start": {
          "line": 173,
          "column": 4
        },
        "end": {
          "line": 177,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Toggles visibility of NavigationBar in\n wrapping container {@link qx.ui.mobile.container.Navigation}</p>"
          }
        ]
      },
      "name": "navigationBarHidden",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "navigationBarToggleDuration": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 188,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the transition duration (in seconds) for the effect when hiding/showing\n the NavigationBar through boolean property navigationBarHidden.</p>"
          }
        ]
      },
      "name": "navigationBarToggleDuration",
      "propertyType": "new",
      "init": 0.8,
      "check": "Number",
      "defaultValue": 0.8
    },
    "contentCssClass": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 200,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The CSS class to add to the content per default.</p>"
          }
        ]
      },
      "name": "contentCssClass",
      "propertyType": "new",
      "apply": "_applyContentCssClass",
      "nullable": true,
      "init": "content",
      "allowNull": true,
      "check": "String",
      "defaultValue": "content"
    },
    "fireDomUpdatedOnResize": {
      "type": "property",
      "name": "fireDomUpdatedOnResize",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.core.MResize"
    }
  },
  "members": {
    "_isTablet": {
      "location": {
        "start": {
          "line": 212,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 21
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_wrapContentByGroup": {
      "location": {
        "start": {
          "line": 213,
          "column": 4
        },
        "end": {
          "line": 213,
          "column": 30
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__backButton": {
      "location": {
        "start": {
          "line": 214,
          "column": 4
        },
        "end": {
          "line": 214,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__actionButton": {
      "location": {
        "start": {
          "line": 215,
          "column": 4
        },
        "end": {
          "line": 215,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__content": {
      "location": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 216,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__scrollContainer": {
      "location": {
        "start": {
          "line": 217,
          "column": 4
        },
        "end": {
          "line": 217,
          "column": 28
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__title": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 218,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__leftContainer": {
      "location": {
        "start": {
          "line": 219,
          "column": 4
        },
        "end": {
          "line": 219,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__rightContainer": {
      "location": {
        "start": {
          "line": 220,
          "column": 4
        },
        "end": {
          "line": 220,
          "column": 27
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getTitleWidget": {
      "location": {
        "start": {
          "line": 224,
          "column": 4
        },
        "end": {
          "line": 229,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.navigationbar.Title} The title of the navigation bar",
            "type": "qx.ui.mobile.navigationbar.Title",
            "description": " The title of the navigation bar"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.INavigation",
      "appearsIn": [
        "qx.ui.mobile.container.INavigation"
      ]
    },
    "_createTitleWidget": {
      "location": {
        "start": {
          "line": 237,
          "column": 4
        },
        "end": {
          "line": 240,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the navigation bar title.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.navigationbar.Title} The created title widget",
            "type": "qx.ui.mobile.navigationbar.Title",
            "description": " The created title widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyTitle": {
      "location": {
        "start": {
          "line": 244,
          "column": 4
        },
        "end": {
          "line": 248,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "title"
      ]
    },
    "getLeftContainer": {
      "location": {
        "start": {
          "line": 252,
          "column": 4
        },
        "end": {
          "line": 257,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} The left container of the navigation bar",
            "type": "qx.ui.mobile.container.Composite",
            "description": " The left container of the navigation bar"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.INavigation",
      "appearsIn": [
        "qx.ui.mobile.container.INavigation"
      ]
    },
    "getRightContainer": {
      "location": {
        "start": {
          "line": 261,
          "column": 4
        },
        "end": {
          "line": 266,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} The right container of the navigation bar",
            "type": "qx.ui.mobile.container.Composite",
            "description": " The right container of the navigation bar"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.INavigation",
      "appearsIn": [
        "qx.ui.mobile.container.INavigation"
      ]
    },
    "_createLeftContainer": {
      "location": {
        "start": {
          "line": 274,
          "column": 4
        },
        "end": {
          "line": 283,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the left container for the navigation bar.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} Creates the left container for the navigation bar.",
            "type": "qx.ui.mobile.container.Composite",
            "description": " Creates the left container for the navigation bar."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createRightContainer": {
      "location": {
        "start": {
          "line": 291,
          "column": 4
        },
        "end": {
          "line": 300,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the right container for the navigation bar.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} Creates the right container for the navigation bar.",
            "type": "qx.ui.mobile.container.Composite",
            "description": " Creates the right container for the navigation bar."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createBackButton": {
      "location": {
        "start": {
          "line": 309,
          "column": 4
        },
        "end": {
          "line": 311,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the navigation bar back button.\n Creates the scroll container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.navigationbar.BackButton} The created back button widget",
            "type": "qx.ui.mobile.navigationbar.BackButton",
            "description": " The created back button widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createButton": {
      "location": {
        "start": {
          "line": 321,
          "column": 4
        },
        "end": {
          "line": 323,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the navigation bar button.\n Creates the content container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.navigationbar.Button} The created button widget",
            "type": "qx.ui.mobile.navigationbar.Button",
            "description": " The created button widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getContent": {
      "location": {
        "start": {
          "line": 331,
          "column": 4
        },
        "end": {
          "line": 334,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the content container. Add all your widgets to this container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} The content container",
            "type": "qx.ui.mobile.container.Composite",
            "description": " The content container"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_getBackButton": {
      "location": {
        "start": {
          "line": 342,
          "column": 4
        },
        "end": {
          "line": 345,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the back button widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.navigationbar.BackButton} The back button widget",
            "type": "qx.ui.mobile.navigationbar.BackButton",
            "description": " The back button widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getButton": {
      "location": {
        "start": {
          "line": 353,
          "column": 4
        },
        "end": {
          "line": 356,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the action button widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.navigationbar.Button} The action button widget",
            "type": "qx.ui.mobile.navigationbar.Button",
            "description": " The action button widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setIsTablet": {
      "location": {
        "start": {
          "line": 363,
          "column": 4
        },
        "end": {
          "line": 365,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the isTablet flag.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "isTablet {Boolean} value of the isTablet flag.",
            "paramName": "isTablet",
            "description": " value of the isTablet flag.",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isTablet": {
      "location": {
        "start": {
          "line": 372,
          "column": 4
        },
        "end": {
          "line": 374,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the isTablet flag.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} the isTablet flag of this page.",
            "type": "Boolean",
            "description": " the isTablet flag of this page."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_getScrollContainer": {
      "location": {
        "start": {
          "line": 382,
          "column": 4
        },
        "end": {
          "line": 385,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the scroll container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Scroll} The scroll container",
            "type": "qx.ui.mobile.container.Scroll",
            "description": " The scroll container"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "addAfterNavigationBar": {
      "location": {
        "start": {
          "line": 393,
          "column": 4
        },
        "end": {
          "line": 397,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a widget, below the NavigationBar.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The widget to add, after NavigationBar.",
            "paramName": "widget",
            "description": " The widget to add, after NavigationBar.",
            "type": "qx.ui.mobile.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyBackButtonText": {
      "location": {
        "start": {
          "line": 401,
          "column": 4
        },
        "end": {
          "line": 406,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "backButtonText"
      ]
    },
    "_applyActionButtonText": {
      "location": {
        "start": {
          "line": 410,
          "column": 4
        },
        "end": {
          "line": 415,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "buttonText"
      ]
    },
    "_applyActionButtonIcon": {
      "location": {
        "start": {
          "line": 419,
          "column": 4
        },
        "end": {
          "line": 424,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "buttonIcon"
      ]
    },
    "_applyShowBackButton": {
      "location": {
        "start": {
          "line": 428,
          "column": 4
        },
        "end": {
          "line": 431,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "showBackButton"
      ]
    },
    "_applyShowButton": {
      "location": {
        "start": {
          "line": 435,
          "column": 4
        },
        "end": {
          "line": 438,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "showButton"
      ]
    },
    "_applyContentCssClass": {
      "location": {
        "start": {
          "line": 442,
          "column": 4
        },
        "end": {
          "line": 447,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "contentCssClass"
      ]
    },
    "_showBackButton": {
      "location": {
        "start": {
          "line": 453,
          "column": 4
        },
        "end": {
          "line": 463,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to show the back button.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_showButton": {
      "location": {
        "start": {
          "line": 469,
          "column": 4
        },
        "end": {
          "line": 479,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method to show the button.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_initialize": {
      "location": {
        "start": {
          "line": 483,
          "column": 4
        },
        "end": {
          "line": 496,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.mobile.page.Page",
      "appearsIn": [
        "qx.ui.mobile.page.Page"
      ]
    },
    "_createScrollContainer": {
      "location": {
        "start": {
          "line": 504,
          "column": 4
        },
        "end": {
          "line": 507,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the scroll container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Scroll} The created scroll container",
            "type": "qx.ui.mobile.container.Scroll",
            "description": " The created scroll container"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createContent": {
      "location": {
        "start": {
          "line": 515,
          "column": 4
        },
        "end": {
          "line": 525,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the content container.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.container.Composite} The created content container",
            "type": "qx.ui.mobile.container.Composite",
            "description": " The created content container"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onBackButtonTap": {
      "location": {
        "start": {
          "line": 533,
          "column": 4
        },
        "end": {
          "line": 536,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the tap event occurs on the back button.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Tap} The tap event",
            "paramName": "evt",
            "description": " The tap event",
            "type": "qx.event.type.Tap"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onButtonTap": {
      "location": {
        "start": {
          "line": 544,
          "column": 4
        },
        "end": {
          "line": 547,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the tap event occurs on the button.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Tap} The tap event",
            "paramName": "evt",
            "description": " The tap event",
            "type": "qx.event.type.Tap"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "releaseFixedSize": {
      "type": "function",
      "name": "releaseFixedSize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.core.MResize"
    },
    "fixSize": {
      "type": "function",
      "name": "fixSize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.core.MResize"
    },
    "_setHeight": {
      "type": "function",
      "name": "_setHeight",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.mobile.core.MResize",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the height of the container element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "height {Integer} The height to set",
            "paramName": "height",
            "description": " The height to set",
            "type": "Integer"
          }
        ]
      }
    },
    "_setWidth": {
      "type": "function",
      "name": "_setWidth",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.mobile.core.MResize",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the width of the container element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} The width to set",
            "paramName": "width",
            "description": " The width to set",
            "type": "Integer"
          }
        ]
      }
    },
    "getFireDomUpdatedOnResize": {
      "type": "function",
      "name": "getFireDomUpdatedOnResize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.core.MResize",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>fireDomUpdatedOnResize</code>.\n\nFor further details take a look at the property definition: {@link #fireDomUpdatedOnResize}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for fireDomUpdatedOnResize"
          }
        ]
      }
    },
    "isFireDomUpdatedOnResize": {
      "type": "function",
      "name": "isFireDomUpdatedOnResize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.core.MResize",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>fireDomUpdatedOnResize</code>.\n\nFor further details take a look at the property definition: {@link #fireDomUpdatedOnResize}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for fireDomUpdatedOnResize"
          }
        ]
      }
    },
    "setFireDomUpdatedOnResize": {
      "type": "function",
      "name": "setFireDomUpdatedOnResize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.core.MResize",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>fireDomUpdatedOnResize</code>.\n\nFor further details take a look at the property definition: {@link #fireDomUpdatedOnResize}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for fireDomUpdatedOnResize"
          }
        ]
      }
    },
    "resetFireDomUpdatedOnResize": {
      "type": "function",
      "name": "resetFireDomUpdatedOnResize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.core.MResize",
      "property": "reset"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getDefaultCssClass": {
      "type": "function",
      "name": "getDefaultCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultCssClass</code>.\n\nFor further details take a look at the property definition: {@link #defaultCssClass}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultCssClass"
          }
        ]
      }
    },
    "setDefaultCssClass": {
      "type": "function",
      "name": "setDefaultCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultCssClass</code>.\n\nFor further details take a look at the property definition: {@link #defaultCssClass}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultCssClass"
          }
        ]
      }
    },
    "resetDefaultCssClass": {
      "type": "function",
      "name": "resetDefaultCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getName": {
      "type": "function",
      "name": "getName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for name"
          }
        ]
      }
    },
    "setName": {
      "type": "function",
      "name": "setName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for name"
          }
        ]
      }
    },
    "resetName": {
      "type": "function",
      "name": "resetName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getAnonymous": {
      "type": "function",
      "name": "getAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>anonymous</code>.\n\nFor further details take a look at the property definition: {@link #anonymous}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for anonymous"
          }
        ]
      }
    },
    "isAnonymous": {
      "type": "function",
      "name": "isAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>anonymous</code>.\n\nFor further details take a look at the property definition: {@link #anonymous}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for anonymous"
          }
        ]
      }
    },
    "setAnonymous": {
      "type": "function",
      "name": "setAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>anonymous</code>.\n\nFor further details take a look at the property definition: {@link #anonymous}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for anonymous"
          }
        ]
      }
    },
    "resetAnonymous": {
      "type": "function",
      "name": "resetAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getId": {
      "type": "function",
      "name": "getId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>id</code>.\n\nFor further details take a look at the property definition: {@link #id}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for id"
          }
        ]
      }
    },
    "setId": {
      "type": "function",
      "name": "setId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>id</code>.\n\nFor further details take a look at the property definition: {@link #id}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for id"
          }
        ]
      }
    },
    "resetId": {
      "type": "function",
      "name": "resetId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getVisibility": {
      "type": "function",
      "name": "getVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for visibility"
          }
        ]
      }
    },
    "setVisibility": {
      "type": "function",
      "name": "setVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for visibility"
          }
        ]
      }
    },
    "resetVisibility": {
      "type": "function",
      "name": "resetVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getActivatable": {
      "type": "function",
      "name": "getActivatable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>activatable</code>.\n\nFor further details take a look at the property definition: {@link #activatable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for activatable"
          }
        ]
      }
    },
    "isActivatable": {
      "type": "function",
      "name": "isActivatable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>activatable</code>.\n\nFor further details take a look at the property definition: {@link #activatable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for activatable"
          }
        ]
      }
    },
    "setActivatable": {
      "type": "function",
      "name": "setActivatable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>activatable</code>.\n\nFor further details take a look at the property definition: {@link #activatable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for activatable"
          }
        ]
      }
    },
    "resetActivatable": {
      "type": "function",
      "name": "resetActivatable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getRotation": {
      "type": "function",
      "name": "getRotation",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rotation</code>.\n\nFor further details take a look at the property definition: {@link #rotation}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for rotation"
          }
        ]
      }
    },
    "setRotation": {
      "type": "function",
      "name": "setRotation",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rotation</code>.\n\nFor further details take a look at the property definition: {@link #rotation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for rotation"
          }
        ]
      }
    },
    "resetRotation": {
      "type": "function",
      "name": "resetRotation",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getTransformUnit": {
      "type": "function",
      "name": "getTransformUnit",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>transformUnit</code>.\n\nFor further details take a look at the property definition: {@link #transformUnit}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for transformUnit"
          }
        ]
      }
    },
    "setTransformUnit": {
      "type": "function",
      "name": "setTransformUnit",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>transformUnit</code>.\n\nFor further details take a look at the property definition: {@link #transformUnit}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for transformUnit"
          }
        ]
      }
    },
    "resetTransformUnit": {
      "type": "function",
      "name": "resetTransformUnit",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getScaleX": {
      "type": "function",
      "name": "getScaleX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>scaleX</code>.\n\nFor further details take a look at the property definition: {@link #scaleX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for scaleX"
          }
        ]
      }
    },
    "setScaleX": {
      "type": "function",
      "name": "setScaleX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>scaleX</code>.\n\nFor further details take a look at the property definition: {@link #scaleX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for scaleX"
          }
        ]
      }
    },
    "resetScaleX": {
      "type": "function",
      "name": "resetScaleX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getScaleY": {
      "type": "function",
      "name": "getScaleY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>scaleY</code>.\n\nFor further details take a look at the property definition: {@link #scaleY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for scaleY"
          }
        ]
      }
    },
    "setScaleY": {
      "type": "function",
      "name": "setScaleY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>scaleY</code>.\n\nFor further details take a look at the property definition: {@link #scaleY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for scaleY"
          }
        ]
      }
    },
    "resetScaleY": {
      "type": "function",
      "name": "resetScaleY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getTranslateX": {
      "type": "function",
      "name": "getTranslateX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>translateX</code>.\n\nFor further details take a look at the property definition: {@link #translateX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for translateX"
          }
        ]
      }
    },
    "setTranslateX": {
      "type": "function",
      "name": "setTranslateX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>translateX</code>.\n\nFor further details take a look at the property definition: {@link #translateX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for translateX"
          }
        ]
      }
    },
    "resetTranslateX": {
      "type": "function",
      "name": "resetTranslateX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getTranslateY": {
      "type": "function",
      "name": "getTranslateY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>translateY</code>.\n\nFor further details take a look at the property definition: {@link #translateY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for translateY"
          }
        ]
      }
    },
    "setTranslateY": {
      "type": "function",
      "name": "setTranslateY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>translateY</code>.\n\nFor further details take a look at the property definition: {@link #translateY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for translateY"
          }
        ]
      }
    },
    "resetTranslateY": {
      "type": "function",
      "name": "resetTranslateY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getTranslateZ": {
      "type": "function",
      "name": "getTranslateZ",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>translateZ</code>.\n\nFor further details take a look at the property definition: {@link #translateZ}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for translateZ"
          }
        ]
      }
    },
    "setTranslateZ": {
      "type": "function",
      "name": "setTranslateZ",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>translateZ</code>.\n\nFor further details take a look at the property definition: {@link #translateZ}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for translateZ"
          }
        ]
      }
    },
    "resetTranslateZ": {
      "type": "function",
      "name": "resetTranslateZ",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.container.Composite",
      "property": "reset"
    },
    "getLifeCycleState": {
      "type": "function",
      "name": "getLifeCycleState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>lifeCycleState</code>.\n\nFor further details take a look at the property definition: {@link #lifeCycleState}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for lifeCycleState"
          }
        ]
      }
    },
    "setLifeCycleState": {
      "type": "function",
      "name": "setLifeCycleState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>lifeCycleState</code>.\n\nFor further details take a look at the property definition: {@link #lifeCycleState}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for lifeCycleState"
          }
        ]
      }
    },
    "resetLifeCycleState": {
      "type": "function",
      "name": "resetLifeCycleState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>lifeCycleState</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #lifeCycleState}."
          }
        ]
      }
    },
    "getTitle": {
      "type": "function",
      "name": "getTitle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for title"
          }
        ]
      }
    },
    "setTitle": {
      "type": "function",
      "name": "setTitle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for title"
          }
        ]
      }
    },
    "resetTitle": {
      "type": "function",
      "name": "resetTitle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>title</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ]
      }
    },
    "getBackButtonText": {
      "type": "function",
      "name": "getBackButtonText",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>backButtonText</code>.\n\nFor further details take a look at the property definition: {@link #backButtonText}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for backButtonText"
          }
        ]
      }
    },
    "setBackButtonText": {
      "type": "function",
      "name": "setBackButtonText",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>backButtonText</code>.\n\nFor further details take a look at the property definition: {@link #backButtonText}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for backButtonText"
          }
        ]
      }
    },
    "resetBackButtonText": {
      "type": "function",
      "name": "resetBackButtonText",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>backButtonText</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #backButtonText}."
          }
        ]
      }
    },
    "getButtonText": {
      "type": "function",
      "name": "getButtonText",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>buttonText</code>.\n\nFor further details take a look at the property definition: {@link #buttonText}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for buttonText"
          }
        ]
      }
    },
    "setButtonText": {
      "type": "function",
      "name": "setButtonText",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>buttonText</code>.\n\nFor further details take a look at the property definition: {@link #buttonText}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for buttonText"
          }
        ]
      }
    },
    "resetButtonText": {
      "type": "function",
      "name": "resetButtonText",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>buttonText</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #buttonText}."
          }
        ]
      }
    },
    "getButtonIcon": {
      "type": "function",
      "name": "getButtonIcon",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>buttonIcon</code>.\n\nFor further details take a look at the property definition: {@link #buttonIcon}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for buttonIcon"
          }
        ]
      }
    },
    "setButtonIcon": {
      "type": "function",
      "name": "setButtonIcon",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>buttonIcon</code>.\n\nFor further details take a look at the property definition: {@link #buttonIcon}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for buttonIcon"
          }
        ]
      }
    },
    "resetButtonIcon": {
      "type": "function",
      "name": "resetButtonIcon",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>buttonIcon</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #buttonIcon}."
          }
        ]
      }
    },
    "getShowBackButton": {
      "type": "function",
      "name": "getShowBackButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showBackButton</code>.\n\nFor further details take a look at the property definition: {@link #showBackButton}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showBackButton"
          }
        ]
      }
    },
    "isShowBackButton": {
      "type": "function",
      "name": "isShowBackButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showBackButton</code>.\n\nFor further details take a look at the property definition: {@link #showBackButton}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showBackButton"
          }
        ]
      }
    },
    "setShowBackButton": {
      "type": "function",
      "name": "setShowBackButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showBackButton</code>.\n\nFor further details take a look at the property definition: {@link #showBackButton}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showBackButton"
          }
        ]
      }
    },
    "resetShowBackButton": {
      "type": "function",
      "name": "resetShowBackButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>showBackButton</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #showBackButton}."
          }
        ]
      }
    },
    "getShowBackButtonOnTablet": {
      "type": "function",
      "name": "getShowBackButtonOnTablet",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showBackButtonOnTablet</code>.\n\nFor further details take a look at the property definition: {@link #showBackButtonOnTablet}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showBackButtonOnTablet"
          }
        ]
      }
    },
    "isShowBackButtonOnTablet": {
      "type": "function",
      "name": "isShowBackButtonOnTablet",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showBackButtonOnTablet</code>.\n\nFor further details take a look at the property definition: {@link #showBackButtonOnTablet}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showBackButtonOnTablet"
          }
        ]
      }
    },
    "setShowBackButtonOnTablet": {
      "type": "function",
      "name": "setShowBackButtonOnTablet",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showBackButtonOnTablet</code>.\n\nFor further details take a look at the property definition: {@link #showBackButtonOnTablet}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showBackButtonOnTablet"
          }
        ]
      }
    },
    "resetShowBackButtonOnTablet": {
      "type": "function",
      "name": "resetShowBackButtonOnTablet",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>showBackButtonOnTablet</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #showBackButtonOnTablet}."
          }
        ]
      }
    },
    "getShowButton": {
      "type": "function",
      "name": "getShowButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showButton</code>.\n\nFor further details take a look at the property definition: {@link #showButton}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showButton"
          }
        ]
      }
    },
    "isShowButton": {
      "type": "function",
      "name": "isShowButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showButton</code>.\n\nFor further details take a look at the property definition: {@link #showButton}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showButton"
          }
        ]
      }
    },
    "setShowButton": {
      "type": "function",
      "name": "setShowButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showButton</code>.\n\nFor further details take a look at the property definition: {@link #showButton}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showButton"
          }
        ]
      }
    },
    "resetShowButton": {
      "type": "function",
      "name": "resetShowButton",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>showButton</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #showButton}."
          }
        ]
      }
    },
    "getNavigationBarHidden": {
      "type": "function",
      "name": "getNavigationBarHidden",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>navigationBarHidden</code>.\n\nFor further details take a look at the property definition: {@link #navigationBarHidden}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for navigationBarHidden"
          }
        ]
      }
    },
    "isNavigationBarHidden": {
      "type": "function",
      "name": "isNavigationBarHidden",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>navigationBarHidden</code>.\n\nFor further details take a look at the property definition: {@link #navigationBarHidden}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for navigationBarHidden"
          }
        ]
      }
    },
    "setNavigationBarHidden": {
      "type": "function",
      "name": "setNavigationBarHidden",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>navigationBarHidden</code>.\n\nFor further details take a look at the property definition: {@link #navigationBarHidden}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for navigationBarHidden"
          }
        ]
      }
    },
    "resetNavigationBarHidden": {
      "type": "function",
      "name": "resetNavigationBarHidden",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>navigationBarHidden</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #navigationBarHidden}."
          }
        ]
      }
    },
    "getNavigationBarToggleDuration": {
      "type": "function",
      "name": "getNavigationBarToggleDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>navigationBarToggleDuration</code>.\n\nFor further details take a look at the property definition: {@link #navigationBarToggleDuration}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for navigationBarToggleDuration"
          }
        ]
      }
    },
    "setNavigationBarToggleDuration": {
      "type": "function",
      "name": "setNavigationBarToggleDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>navigationBarToggleDuration</code>.\n\nFor further details take a look at the property definition: {@link #navigationBarToggleDuration}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for navigationBarToggleDuration"
          }
        ]
      }
    },
    "resetNavigationBarToggleDuration": {
      "type": "function",
      "name": "resetNavigationBarToggleDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>navigationBarToggleDuration</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #navigationBarToggleDuration}."
          }
        ]
      }
    },
    "getContentCssClass": {
      "type": "function",
      "name": "getContentCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>contentCssClass</code>.\n\nFor further details take a look at the property definition: {@link #contentCssClass}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for contentCssClass"
          }
        ]
      }
    },
    "setContentCssClass": {
      "type": "function",
      "name": "setContentCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>contentCssClass</code>.\n\nFor further details take a look at the property definition: {@link #contentCssClass}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for contentCssClass"
          }
        ]
      }
    },
    "resetContentCssClass": {
      "type": "function",
      "name": "resetContentCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>contentCssClass</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #contentCssClass}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 551,
        "column": 13
      },
      "end": {
        "line": 558,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}