{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/core/MResize.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "fireDomUpdatedOnResize",
    "check",
    "init",
    "members",
    "__lastHeight",
    "__lastWidth",
    "releaseFixedSize",
    "parent",
    "getLayoutParent",
    "getContainerElement",
    "element",
    "bom",
    "Style",
    "set",
    "fixSize",
    "height",
    "offsetHeight",
    "width",
    "offsetWidth",
    "getFireDomUpdatedOnResize",
    "_setHeight",
    "_setWidth",
    "_domUpdated",
    "core",
    "Environment",
    "get",
    "ui",
    "mobile",
    "MResize"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;AAKAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACE;;;;;AAMAC,IAAAA,UAAU,EACV;AACE;;;;;AAKAC,MAAAA,sBAAsB,EAAG;AACvBC,QAAAA,KAAK,EAAG,SADe;AAEvBC,QAAAA,IAAI,EAAG;AAFgB;AAN3B,KARF;;AAqBE;;;;;AAMAC,IAAAA,OAAO,EACP;AACEC,MAAAA,SAAY,EAAG,IADjB;AAEEC,MAAAA,SAAW,EAAG,IAFhB;;AAKE;;;AAGAC,MAAAA,gBAAgB,EAAG,4BAAW;AAC5B,YAAIC,MAAM,GAAG,KAAKC,eAAL,EAAb;;AAEA,YAAID,MAAM,IAAIA,MAAM,CAACE,mBAAP,EAAd,EAA4C;AAC1C,cAAIC,OAAO,GAAG,KAAKD,mBAAL,EAAd;AACAhB,UAAAA,EAAE,CAACkB,GAAH,CAAOD,OAAP,CAAeE,KAAf,CAAqBC,GAArB,CAAyBH,OAAzB,EAAkC,QAAlC,EAA4C,MAA5C;AACAjB,UAAAA,EAAE,CAACkB,GAAH,CAAOD,OAAP,CAAeE,KAAf,CAAqBC,GAArB,CAAyBH,OAAzB,EAAkC,OAAlC,EAA2C,MAA3C;AACD;AACF,OAhBH;;AAmBE;;;AAGAI,MAAAA,OAAO,EAAG,mBACV;AACE,YAAIP,MAAM,GAAG,KAAKC,eAAL,EAAb;;AAEA,YAAID,MAAM,IAAIA,MAAM,CAACE,mBAAP,EAAd,EAA4C;AAC1C,cAAIM,MAAM,GAAGR,MAAM,CAACE,mBAAP,GAA6BO,YAA1C;AACA,cAAIC,KAAK,GAAGV,MAAM,CAACE,mBAAP,GAA6BS,WAAzC,CAF0C,CAI1C;;AACA,cAAGH,MAAM,KAAK,CAAX,IAAgBE,KAAK,KAAK,CAA7B,EAAgC;AAC9B;AACD;;AAED,cAAI,CAAC,KAAKE,yBAAL,EAAL,EAAuC;AACrC,iBAAKC,UAAL,CAAgBL,MAAhB;;AACA,iBAAKM,SAAL,CAAeJ,KAAf;AACD,WAHD,MAGO,IAAI,KAAKb,SAAL,IAAqBW,MAArB,IAA+B,KAAKV,SAAL,IAAoBY,KAAvD,EAA8D;AACnE,iBAAKG,UAAL,CAAgBL,MAAhB;;AACA,iBAAKM,SAAL,CAAeJ,KAAf;;AACA,iBAAKZ,SAAL,GAAmBY,KAAnB;AACA,iBAAKb,SAAL,GAAoBW,MAApB;;AACA,iBAAKO,WAAL;AACD;AACF;AACF,OA9CH;;AAiDE;;;;;AAKAF,MAAAA,UAAU,EAAG,oBAASL,MAAT,EACb;AACE,YAAIL,OAAO,GAAG,KAAKD,mBAAL,EAAd;;AACA,YAAIhB,EAAE,CAAC8B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,wBAAxB,CAAJ,EACA;AACEhC,UAAAA,EAAE,CAACkB,GAAH,CAAOD,OAAP,CAAeE,KAAf,CAAqBC,GAArB,CAAyBH,OAAzB,EAAkC,WAAlC,EAA+CK,MAAM,GAAG,IAAxD;AACD,SAHD,MAGO;AACLtB,UAAAA,EAAE,CAACkB,GAAH,CAAOD,OAAP,CAAeE,KAAf,CAAqBC,GAArB,CAAyBH,OAAzB,EAAkC,QAAlC,EAA4CK,MAAM,GAAG,IAArD;AACD;AACF,OA/DH;;AAmEE;;;;;AAKAM,MAAAA,SAAS,EAAG,mBAASJ,KAAT,EACZ;AACE,YAAIP,OAAO,GAAG,KAAKD,mBAAL,EAAd;;AACA,YAAIhB,EAAE,CAAC8B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,wBAAxB,CAAJ,EACA;AACEhC,UAAAA,EAAE,CAACkB,GAAH,CAAOD,OAAP,CAAeE,KAAf,CAAqBC,GAArB,CAAyBH,OAAzB,EAAkC,UAAlC,EAA8CO,KAAK,GAAG,IAAtD;AACD,SAHD,MAGO;AACLxB,UAAAA,EAAE,CAACkB,GAAH,CAAOD,OAAP,CAAeE,KAAf,CAAqBC,GAArB,CAAyBH,OAAzB,EAAkC,OAAlC,EAA2CO,KAAK,GAAG,IAAnD;AACD;AACF;AAjFH;AA5BF,GADA;AAxBAxB,EAAAA,EAAE,CAACiC,EAAH,CAAMC,MAAN,CAAaJ,IAAb,CAAkBK,OAAlB,CAA0BhC,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\n/**\n * This mixin resizes the container element to the height of the parent element.\n * Use this when the height can not be set by CSS.\n *\n */\nqx.Mixin.define(\"qx.ui.mobile.core.MResize\",\n{\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Whether the resize should fire the \"domupdated\" event. Set this to \"true\"\n     *  whenever other elements should react on this size change (e.g. when the size\n     *  change does not infect the size of the application, but other widgets should\n     *  react).\n     */\n    fireDomUpdatedOnResize : {\n      check : \"Boolean\",\n      init : false\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __lastHeight : null,\n    __lastWidth : null,\n\n\n    /**\n     * Removes fixed size from container.\n     */\n    releaseFixedSize : function() {\n      var parent = this.getLayoutParent();\n\n      if (parent && parent.getContainerElement()) {\n        var element = this.getContainerElement();\n        qx.bom.element.Style.set(element, \"height\", \"auto\");\n        qx.bom.element.Style.set(element, \"width\", \"auto\");\n      }\n    },\n\n\n    /**\n     * Resizes the container element to the height of the parent element.\n     */\n    fixSize : function()\n    {\n      var parent = this.getLayoutParent();\n\n      if (parent && parent.getContainerElement()) {\n        var height = parent.getContainerElement().offsetHeight;\n        var width = parent.getContainerElement().offsetWidth;\n\n        // Only fix size, when value are above zero.\n        if(height === 0 || width === 0) {\n          return;\n        }\n\n        if (!this.getFireDomUpdatedOnResize()) {\n          this._setHeight(height);\n          this._setWidth(width);\n        } else if (this.__lastHeight != height && this.__lastWidth != width) {\n          this._setHeight(height);\n          this._setWidth(width);\n          this.__lastWidth = width;\n          this.__lastHeight = height;\n          this._domUpdated();\n        }\n      }\n    },\n\n\n    /**\n     * Sets the height of the container element.\n     *\n     * @param height {Integer} The height to set\n     */\n    _setHeight : function(height)\n    {\n      var element = this.getContainerElement();\n      if (qx.core.Environment.get(\"qx.mobile.nativescroll\"))\n      {\n        qx.bom.element.Style.set(element, \"minHeight\", height + \"px\");\n      } else {\n        qx.bom.element.Style.set(element, \"height\", height + \"px\");\n      }\n    },\n\n\n\n    /**\n     * Sets the width of the container element.\n     *\n     * @param width {Integer} The width to set\n     */\n    _setWidth : function(width)\n    {\n      var element = this.getContainerElement();\n      if (qx.core.Environment.get(\"qx.mobile.nativescroll\"))\n      {\n        qx.bom.element.Style.set(element, \"minWidth\", width + \"px\");\n      } else {\n        qx.bom.element.Style.set(element, \"width\", width + \"px\");\n      }\n    }\n  }\n});"
  ]
}