{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/layout/CardAnimation.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "_cardAnimationsMap",
    "util",
    "Animation",
    "SLIDE_LEFT_IN",
    "SLIDE_LEFT_OUT",
    "SLIDE_RIGHT_IN",
    "SLIDE_RIGHT_OUT",
    "FADE_IN",
    "FADE_OUT",
    "POP_IN",
    "POP_OUT",
    "SLIDE_UP_IN",
    "SLIDE_UP_OUT",
    "SLIDE_DOWN_IN",
    "SLIDE_DOWN_OUT",
    "FLIP_LEFT_IN",
    "FLIP_LEFT_OUT",
    "FLIP_RIGHT_IN",
    "FLIP_RIGHT_OUT",
    "SWAP_LEFT_IN",
    "SWAP_LEFT_OUT",
    "SWAP_RIGHT_IN",
    "SWAP_RIGHT_OUT",
    "CUBE_LEFT_IN",
    "CUBE_LEFT_OUT",
    "CUBE_RIGHT_IN",
    "CUBE_RIGHT_OUT",
    "members",
    "getAnimation",
    "animationName",
    "direction",
    "reverse",
    "animation",
    "animationObject",
    "getMap",
    "destruct",
    "ui",
    "mobile",
    "layout",
    "CardAnimation"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n * Christopher Zuendorf (czuendorf)\n\n ************************************************************************ */\n\n/**\n * Contains all animations which are needed for page transitions on {@link qx.ui.mobile.layout.Card}.\n * Provides a convenience method {@link qx.ui.mobile.layout.CardAnimation#getAnimation} which\n * makes it possibility to resolve the right animation for a pageTransition out of the cardAnimationMap.\n */\nqx.Class.define(\"qx.ui.mobile.layout.CardAnimation\",\n{\n  extend : qx.core.Object,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct : function()\n  {\n    this.base(arguments);\n\n    this._cardAnimationsMap = {\n      \"none\": null,\n      \"slide\": {\n        \"in\": qx.util.Animation.SLIDE_LEFT_IN,\n        \"out\": qx.util.Animation.SLIDE_LEFT_OUT,\n        \"reverse\": {\n          \"in\": qx.util.Animation.SLIDE_RIGHT_IN,\n          \"out\": qx.util.Animation.SLIDE_RIGHT_OUT\n        }\n      },\n      \"fade\": {\n        \"in\": qx.util.Animation.FADE_IN,\n        \"out\": qx.util.Animation.FADE_OUT,\n        \"reverse\": {\n          \"in\": qx.util.Animation.FADE_IN,\n          \"out\": qx.util.Animation.FADE_OUT\n        }\n      },\n      \"pop\": {\n        \"in\": qx.util.Animation.POP_IN,\n        \"out\": qx.util.Animation.POP_OUT,\n        \"reverse\": {\n          \"in\": qx.util.Animation.POP_IN,\n          \"out\": qx.util.Animation.POP_OUT\n        }\n      },\n      \"slideup\": {\n        \"in\": qx.util.Animation.SLIDE_UP_IN,\n        \"out\": qx.util.Animation.SLIDE_UP_OUT,\n        \"reverse\": {\n          \"in\": qx.util.Animation.SLIDE_DOWN_IN,\n          \"out\": qx.util.Animation.SLIDE_DOWN_OUT\n        }\n      },\n      \"flip\": {\n        \"in\": qx.util.Animation.FLIP_LEFT_IN,\n        \"out\": qx.util.Animation.FLIP_LEFT_OUT,\n        \"reverse\": {\n          \"in\": qx.util.Animation.FLIP_RIGHT_IN,\n          \"out\": qx.util.Animation.FLIP_RIGHT_OUT\n        }\n      },\n      \"swap\": {\n        \"in\": qx.util.Animation.SWAP_LEFT_IN,\n        \"out\": qx.util.Animation.SWAP_LEFT_OUT,\n        \"reverse\": {\n          \"in\": qx.util.Animation.SWAP_RIGHT_IN,\n          \"out\": qx.util.Animation.SWAP_RIGHT_OUT\n        }\n      },\n      \"cube\": {\n        \"in\": qx.util.Animation.CUBE_LEFT_IN,\n        \"out\": qx.util.Animation.CUBE_LEFT_OUT,\n        \"reverse\": {\n          \"in\": qx.util.Animation.CUBE_RIGHT_IN,\n          \"out\": qx.util.Animation.CUBE_RIGHT_OUT\n        }\n      }\n    };\n  },\n\n\n  members :\n  {\n    _cardAnimationsMap : null,\n\n\n    /**\n    * Returns a map with properties for {@link qx.bom.element.Animation} according to the given input parameters.\n    * @param animationName {String} the animation key\n    * @param direction {String} the animation direction (\"in\" | \"out\")\n    * @param reverse {Boolean} flag which indicates whether it is a reverse animation.\n    * @return {Map} animation property map, intended for the usage with {@link qx.bom.element.Animation}\n    */\n    getAnimation : function(animationName, direction, reverse)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!reverse) {\n          this.assertNotUndefined(this._cardAnimationsMap[animationName], \"Animation '\" + animationName + \"' is not defined.\");\n          this.assertNotUndefined(this._cardAnimationsMap[animationName][direction], \"Animation '\" + animationName + \" \" + direction + \"' is not defined.\");\n        } else {\n          this.assertNotUndefined(this._cardAnimationsMap[animationName], \"Animation Reverse'\" + animationName + \"' is not defined.\");\n          this.assertNotUndefined(this._cardAnimationsMap[animationName][\"reverse\"], \"Animation Reverse'\" + animationName + \"' is not defined.\");\n          this.assertNotUndefined(this._cardAnimationsMap[animationName][\"reverse\"][direction], \"Animation Reverse'\" + animationName + \" \" + direction + \"' is not defined.\");\n        }\n      }\n\n      var animation = this._cardAnimationsMap[animationName];\n      var animationObject = {};\n\n      if (!reverse) {\n        animationObject = animation[direction];\n      } else {\n        animationObject = animation[\"reverse\"][direction];\n      }\n\n      return animationObject;\n    },\n\n\n    /**\n     * Getter for the cardAnimationsMap.\n     * @return {Map} the cardAnimationsMap.\n     */\n    getMap : function() {\n      return this._cardAnimationsMap;\n    }\n  },\n\n\n  destruct : function() {\n    this._cardAnimationsMap = null;\n  }\n});\n"
  ]
}