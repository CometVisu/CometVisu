{
  "className": "qx.ui.mobile.layout.Card",
  "packageName": "qx.ui.mobile.layout",
  "name": "Card",
  "superClass": "qx.ui.mobile.layout.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 45,
        "column": 0
      },
      "end": {
        "line": 368,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2011 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Tino Butz (tbtz)\n Christopher Zuendorf (czuendorf)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>A card layout.\n The card layout lays out widgets in a stack. Call show to display a widget.\n Only the widget which show method is called is displayed. All other widgets are excluded.\n<em>Example</em>\n Here is a little example of how to use the Card layout.\n </p>\n<pre class=\"javascript\">\n var layout = new qx.ui.mobile.layout.Card());\n var container = new qx.ui.mobile.container.Composite(layout);\n var label1 = new qx.ui.mobile.basic.Label(\"1\");\n container.add(label1);\n var label2 = new qx.ui.mobile.basic.Label(\"2\");\n container.add(label2);\n label2.show();\n </pre>"
        }
      ],
      "@use": [
        {
          "name": "@use",
          "body": "qx.event.handler.Transition"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 55,
        "column": 14
      },
      "end": {
        "line": 60,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "events": {
    "animationStart": {
      "location": {
        "start": {
          "line": 72,
          "column": 4
        },
        "end": {
          "line": 72,
          "column": 41
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the animation of a page transition starts</p>"
          }
        ]
      },
      "name": "animationStart",
      "type": "qx.event.type.Data"
    },
    "animationEnd": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 75,
          "column": 39
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the animation of a page transition ends</p>"
          }
        ]
      },
      "name": "animationEnd",
      "type": "qx.event.type.Data"
    }
  },
  "properties": {
    "defaultAnimation": {
      "location": {
        "start": {
          "line": 88,
          "column": 4
        },
        "end": {
          "line": 92,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The default animation to use for page transition</p>"
          }
        ]
      },
      "name": "defaultAnimation",
      "propertyType": "new",
      "init": "slide",
      "check": "String",
      "defaultValue": "slide"
    },
    "showAnimation": {
      "location": {
        "start": {
          "line": 96,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Flag which indicates, whether animation is needed, or widgets should only swap.</p>"
          }
        ]
      },
      "name": "showAnimation",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "animationDuration": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transition duration of each animation.</p>"
          }
        ]
      },
      "name": "animationDuration",
      "propertyType": "new",
      "init": 350,
      "check": "Integer",
      "defaultValue": 350
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "__nextWidget": {
      "location": {
        "start": {
          "line": 120,
          "column": 4
        },
        "end": {
          "line": 120,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__currentWidget": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 121,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__inAnimation": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 122,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__animation": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__reverse": {
      "location": {
        "start": {
          "line": 124,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__cardAnimation": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_getCssClasses": {
      "location": {
        "start": {
          "line": 129,
          "column": 4
        },
        "end": {
          "line": 131,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The css classes that the layout is using",
            "type": "Array",
            "description": " The css classes that the layout is using"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "appearsIn": [
        "qx.ui.mobile.layout.Abstract"
      ]
    },
    "connectToChildWidget": {
      "location": {
        "start": {
          "line": 135,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The widget to connect to",
            "paramName": "widget",
            "description": " The widget to connect to",
            "type": "qx.ui.mobile.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "appearsIn": [
        "qx.ui.mobile.layout.Abstract"
      ]
    },
    "disconnectFromChildWidget": {
      "location": {
        "start": {
          "line": 147,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The widget to connect to",
            "paramName": "widget",
            "description": " The widget to connect to",
            "type": "qx.ui.mobile.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "appearsIn": [
        "qx.ui.mobile.layout.Abstract"
      ]
    },
    "updateLayout": {
      "location": {
        "start": {
          "line": 155,
          "column": 4
        },
        "end": {
          "line": 162,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The target widget",
            "paramName": "widget",
            "description": " The target widget",
            "type": "qx.ui.mobile.core.Widget"
          },
          {
            "name": "@param",
            "body": "action {String} The causing action that triggered the layout update.",
            "paramName": "action",
            "description": " The causing action that triggered the layout update.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "properties {Map} The animation properties to set. Key / value pairs.",
            "paramName": "properties",
            "description": " The animation properties to set. Key / value pairs.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "appearsIn": [
        "qx.ui.mobile.layout.Abstract"
      ]
    },
    "setCardAnimation": {
      "location": {
        "start": {
          "line": 169,
          "column": 4
        },
        "end": {
          "line": 171,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setter for this.__cardAnimation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {qx.ui.mobile.layout.CardAnimation} the new CardAnimation object.",
            "paramName": "value",
            "description": " the new CardAnimation object.",
            "type": "qx.ui.mobile.layout.CardAnimation"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCardAnimation": {
      "location": {
        "start": {
          "line": 178,
          "column": 4
        },
        "end": {
          "line": 180,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for this.__cardAnimation.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.mobile.layout.CardAnimation} the current CardAnimation object.",
            "type": "qx.ui.mobile.layout.CardAnimation",
            "description": " the current CardAnimation object."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_showWidget": {
      "location": {
        "start": {
          "line": 189,
          "column": 4
        },
        "end": {
          "line": 226,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the widget with the given properties.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The target widget",
            "paramName": "widget",
            "description": " The target widget",
            "type": "qx.ui.mobile.core.Widget"
          },
          {
            "name": "@param",
            "body": "properties {Map} The layout properties to set. Key / value pairs.",
            "paramName": "properties",
            "description": " The layout properties to set. Key / value pairs.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_swapWidget": {
      "location": {
        "start": {
          "line": 232,
          "column": 4
        },
        "end": {
          "line": 239,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Excludes the current widget and sets the next widget to the current widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_fixWidgetSize": {
      "location": {
        "start": {
          "line": 248,
          "column": 4
        },
        "end": {
          "line": 256,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fix size, only if widget has mixin MResize set,\n and nextWidget is set.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The target widget which should have a fixed size.",
            "paramName": "widget",
            "description": " The target widget which should have a fixed size.",
            "type": "qx.ui.mobile.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_releaseWidgetSize": {
      "location": {
        "start": {
          "line": 265,
          "column": 4
        },
        "end": {
          "line": 273,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Releases recently fixed widget size (width/height). This is needed for allowing further\n flexbox layouting.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The target widget which should have a flexible size.",
            "paramName": "widget",
            "description": " The target widget which should have a flexible size.",
            "type": "qx.ui.mobile.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__startAnimation": {
      "location": {
        "start": {
          "line": 281,
          "column": 4
        },
        "end": {
          "line": 309,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the animation for the page transition.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.mobile.core.Widget} The target widget",
            "paramName": "widget",
            "description": " The target widget",
            "type": "qx.ui.mobile.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onAnimationEnd": {
      "location": {
        "start": {
          "line": 317,
          "column": 4
        },
        "end": {
          "line": 321,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the animation of the page transition ends.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Event} The causing event",
            "paramName": "evt",
            "description": " The causing event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__stopAnimation": {
      "location": {
        "start": {
          "line": 327,
          "column": 4
        },
        "end": {
          "line": 344,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops the animation for the page transition.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getAnimationClasses": {
      "location": {
        "start": {
          "line": 354,
          "column": 4
        },
        "end": {
          "line": 361,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the animation CSS classes for a given direction. The direction\n can be <code>in</code> or <code>out</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "direction {String} The direction of the animation. <code>in</code> or <code>out</code>.",
            "paramName": "direction",
            "description": " The direction of the animation. <code>in</code> or <code>out</code>.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} The CSS classes for the set animation.",
            "type": "String[]",
            "description": " The CSS classes for the set animation."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.mobile.layout.Abstract",
      "property": "reset"
    },
    "getDefaultAnimation": {
      "type": "function",
      "name": "getDefaultAnimation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultAnimation</code>.\n\nFor further details take a look at the property definition: {@link #defaultAnimation}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultAnimation"
          }
        ]
      }
    },
    "setDefaultAnimation": {
      "type": "function",
      "name": "setDefaultAnimation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultAnimation</code>.\n\nFor further details take a look at the property definition: {@link #defaultAnimation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultAnimation"
          }
        ]
      }
    },
    "resetDefaultAnimation": {
      "type": "function",
      "name": "resetDefaultAnimation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultAnimation</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultAnimation}."
          }
        ]
      }
    },
    "getShowAnimation": {
      "type": "function",
      "name": "getShowAnimation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showAnimation</code>.\n\nFor further details take a look at the property definition: {@link #showAnimation}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showAnimation"
          }
        ]
      }
    },
    "isShowAnimation": {
      "type": "function",
      "name": "isShowAnimation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showAnimation</code>.\n\nFor further details take a look at the property definition: {@link #showAnimation}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showAnimation"
          }
        ]
      }
    },
    "setShowAnimation": {
      "type": "function",
      "name": "setShowAnimation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showAnimation</code>.\n\nFor further details take a look at the property definition: {@link #showAnimation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showAnimation"
          }
        ]
      }
    },
    "resetShowAnimation": {
      "type": "function",
      "name": "resetShowAnimation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>showAnimation</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #showAnimation}."
          }
        ]
      }
    },
    "getAnimationDuration": {
      "type": "function",
      "name": "getAnimationDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>animationDuration</code>.\n\nFor further details take a look at the property definition: {@link #animationDuration}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for animationDuration"
          }
        ]
      }
    },
    "setAnimationDuration": {
      "type": "function",
      "name": "setAnimationDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>animationDuration</code>.\n\nFor further details take a look at the property definition: {@link #animationDuration}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for animationDuration"
          }
        ]
      }
    },
    "resetAnimationDuration": {
      "type": "function",
      "name": "resetAnimationDuration",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>animationDuration</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #animationDuration}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 365,
        "column": 13
      },
      "end": {
        "line": 367,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}