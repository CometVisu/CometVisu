{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/SelectBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "core",
    "Widget",
    "include",
    "form",
    "MValue",
    "MForm",
    "MText",
    "MState",
    "implement",
    "IForm",
    "IField",
    "IModel",
    "construct",
    "_setAttribute",
    "setReadOnly",
    "addListener",
    "blur",
    "_onTap",
    "__selectionDialog",
    "_createSelectionDialog",
    "addCssClass",
    "_onChangeSelection",
    "events",
    "changeSelection",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "activatable",
    "nullable",
    "check",
    "apply",
    "model",
    "event",
    "selection",
    "validate",
    "members",
    "_getTagName",
    "menu",
    "dialog",
    "Menu",
    "setSelectedItemClass",
    "setUnselectedItemClass",
    "setHideOnBlockerTap",
    "getSelectionDialog",
    "setDialogTitle",
    "title",
    "setTitle",
    "setClearButtonLabel",
    "value",
    "_setValue",
    "getModel",
    "isNullable",
    "setSelection",
    "indexOf",
    "_getValue",
    "_getAttribute",
    "_render",
    "length",
    "selectedItem",
    "getItem",
    "getSelection",
    "_domUpdated",
    "_applyModel",
    "old",
    "removeListener",
    "__showSelectionDialog",
    "isEnabled",
    "setSelectedIndex",
    "setItems",
    "show",
    "evt",
    "getData",
    "index",
    "getOriginalTarget",
    "focus",
    "_validateSelection",
    "lang",
    "Type",
    "isNumber",
    "ValidationError",
    "getLength",
    "_applySelection",
    "fireDataEvent",
    "item",
    "_applyNullable",
    "setNullable",
    "destruct",
    "_disposeObjects",
    "SelectBox"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Gabriel Munteanu (gabios)\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\n/**\n * The SelectBox\n *\n * an example, how to use the SelectBox:\n * *Example*\n *\n * <pre class='javascript'>\n *    var page1 = new qx.ui.mobile.page.Page();\n *    page1.addListener(\"initialize\", function()\n *    {\n *      var sel = new qx.ui.mobile.form.SelectBox();\n *      page1.add(sel);\n *      var model = new qx.data.Array([\"item1\",\"item2\"]);\n *      sel.setModel(model);\n *      model.push(\"item3\");\n *\n *      var but = new qx.ui.mobile.form.Button(\"setSelection\");\n *      page1.add(but);\n *      but.addListener(\"tap\", function(){\n *        sel.setSelection(\"item3\");\n *      }, this);\n *\n *      sel.addListener(\"changeSelection\", function(evt) {\n *        console.log(evt.getData());\n *      }, this);\n *\n *      var title = new qx.ui.mobile.form.Title(\"item2\");\n *      title.bind(\"value\",sel,\"value\");\n *      sel.bind(\"value\",title,\"value\");\n *      page1.add(title);\n *   },this);\n *\n *   page1.show();\n *  </pre>\n */\nqx.Class.define(\"qx.ui.mobile.form.SelectBox\",\n{\n  extend : qx.ui.mobile.core.Widget,\n  include : [\n    qx.ui.mobile.form.MValue,\n    qx.ui.form.MForm,\n    qx.ui.mobile.form.MText,\n    qx.ui.mobile.form.MState\n  ],\n  implement : [\n    qx.ui.form.IForm,\n    qx.ui.form.IField,\n    qx.ui.form.IModel\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct : function()\n  {\n    this.base(arguments);\n\n    // This text node is for compatibility reasons, because Firefox can not\n    // change appearance of SelectBoxes.\n    this._setAttribute(\"type\",\"text\");\n    this.setReadOnly(true);\n\n    this.addListener(\"focus\", this.blur);\n    this.addListener(\"tap\", this._onTap, this);\n\n    // Selection dialog creation.\n    this.__selectionDialog = this._createSelectionDialog();\n\n    this.addCssClass(\"gap\");\n\n    // When selectionDialogs changes selection, get chosen selectedIndex from it.\n    this.__selectionDialog.addListener(\"changeSelection\", this._onChangeSelection, this);\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n  events :\n  {\n    /**\n     * Fired when user selects an item.\n     */\n    changeSelection : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n\n    // overridden\n    defaultCssClass :\n    {\n      refine : true,\n      init : \"selectbox\"\n    },\n\n\n    // overridden\n    activatable :\n    {\n      refine :true,\n      init : true\n    },\n\n\n    /**\n     * Defines if the SelectBox has a clearButton, which resets the selection.\n     */\n    nullable :\n    {\n      init : true,\n      check : \"Boolean\",\n      apply : \"_applyNullable\"\n    },\n\n\n    /**\n     * The model to use to render the list.\n     */\n    model :\n    {\n      check : \"qx.data.Array\",\n      apply : \"_applyModel\",\n      event : \"changeModel\",\n      nullable : true,\n      init : null\n    },\n\n\n    /**\n     * The selected index of this SelectBox.\n     */\n    selection :\n    {\n      init : null,\n      validate : \"_validateSelection\",\n      apply : \"_applySelection\",\n      nullable : true\n    }\n  },\n\n\n  members :\n  {\n    __selectionDialog : null,\n\n\n    // overridden\n    _getTagName : function()\n    {\n      // No select here, see BUG #6054\n      return \"input\";\n    },\n\n\n    /**\n     * Creates the menu dialog. Override this to customize the widget.\n     *\n     * @return {qx.ui.mobile.dialog.Menu} A dialog, containing a selection list.\n     */\n    _createSelectionDialog : function() {\n      var menu = new qx.ui.mobile.dialog.Menu();\n\n      // Special appearance for SelectBox menu items.\n      menu.setSelectedItemClass(\"selectbox-selected\");\n      menu.setUnselectedItemClass(\"selectbox-unselected\");\n\n      // Hide selectionDialog on tap on blocker.\n      menu.setHideOnBlockerTap(true);\n\n      return menu;\n    },\n\n\n    /**\n     * Returns the SelectionDialog.\n     * @return {qx.ui.mobile.dialog.Menu} the SelectionDialog.\n     */\n    getSelectionDialog : function() {\n      return this.__selectionDialog;\n    },\n\n\n    /**\n     * Sets the dialog title on the selection dialog.\n     * @param title {String} the title to set on selection dialog.\n     */\n    setDialogTitle : function(title) {\n      this.__selectionDialog.setTitle(title);\n    },\n\n\n    /**\n     * Set the ClearButton label of the selection dialog.\n     * @param value {String} the value to set on the ClearButton at selection dialog.\n     */\n    setClearButtonLabel : function(value) {\n      this.__selectionDialog.setClearButtonLabel(value);\n    },\n\n\n    /**\n     * Sets the selected text value of this SelectBox.\n     * @param value {String} the text value which should be selected.\n     */\n    _setValue : function(value) {\n      if(this.getModel() == null) {\n        return;\n      }\n\n      if (value == \"\") {\n        if (this.isNullable()) {\n          this.setSelection(null);\n        } else {\n          this.setSelection(0);\n        }\n      } else if (value != null) {\n        this.setSelection(this.getModel().indexOf(value));\n      } else {\n        this.setSelection(null);\n      }\n    },\n\n\n    /**\n     * Get the text value of this\n     * It is called by setValue method of qx.ui.mobile.form.MValue mixin.\n     * @return {Number} the new selected index of the SelectBox.\n     */\n    _getValue : function() {\n      return this._getAttribute(\"value\");\n    },\n\n\n    /**\n     * Renders this SelectBox. Override this if you would like to display the\n     * values of the SelectBox in a different way than the default.\n     */\n    _render : function() {\n      if(this.getModel() != null && this.getModel().length > 0) {\n        var selectedItem = this.getModel().getItem(this.getSelection());\n        this._setAttribute(\"value\", selectedItem);\n      }\n\n      this._domUpdated();\n    },\n\n\n    /**\n     * Sets the model property to the new value\n     * @param value {qx.data.Array}, the new model\n     * @param old {qx.data.Array?}, the old model\n     */\n    _applyModel : function(value, old){\n      value.addListener(\"change\", this._render, this);\n      if (old != null) {\n        old.removeListener(\"change\", this._render, this);\n      }\n\n      this._render();\n    },\n\n\n    /**\n     * Refreshs selection dialogs model, and shows it.\n     */\n    __showSelectionDialog : function () {\n      if(this.isEnabled() == true) {\n        // Set index before items, because setItems() triggers rendering.\n        this.__selectionDialog.setSelectedIndex(this.getSelection());\n        this.__selectionDialog.setItems(this.getModel());\n        this.__selectionDialog.show();\n      }\n    },\n\n\n    /**\n     * Gets the selectedIndex out of change selection event and renders view.\n     * @param evt {qx.event.type.Data} data event.\n     */\n    _onChangeSelection : function (evt) {\n      this.setSelection(evt.getData().index);\n      this._render();\n    },\n\n\n    /**\n    * Handler for <code>tap</code> event on this widget.\n    * @param evt {qx.event.type.Tap} the handling tap event.\n    */\n    _onTap : function(evt) {\n      this.__showSelectionDialog();\n\n      // request focus so that it leaves previous widget\n      // such as text field and hide virtual keyboard.\n      evt.getOriginalTarget().focus();\n    },\n\n\n    /**\n     * Validates the selection value.\n     * @param value {Integer} the selection value to validate.\n     */\n    _validateSelection : function(value) {\n      if(value != null && qx.lang.Type.isNumber(value) == false)\n      {\n        throw new qx.core.ValidationError(\n          \"Validation Error: Input value is not a number\"\n        );\n      }\n\n      if(this.getModel() === null) {\n        throw new qx.core.ValidationError(\n          \"Validation Error: Please apply model before selection\"\n        );\n      }\n\n      if(!this.isNullable() && value === null ) {\n        throw new qx.core.ValidationError(\n          \"Validation Error: SelectBox is not nullable\"\n        );\n      }\n\n      if(value != null && (value < 0 || value >= this.getModel().getLength())) {\n        throw new qx.core.ValidationError(\n          \"Validation Error: Input value is out of model range\"\n        );\n      }\n    },\n\n\n    // property apply\n    _applySelection : function(value, old) {\n      var selectedItem = this.getModel().getItem(value);\n      this.fireDataEvent(\"changeSelection\", {index: value, item: selectedItem});\n\n      this._render();\n    },\n\n\n    // property apply\n    _applyNullable : function(value, old) {\n      // Delegate nullable property.\n      this.__selectionDialog.setNullable(value);\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__selectionDialog.removeListener(\"changeSelection\", this._onChangeSelection, this);\n\n    this._disposeObjects(\"__selectionDialog\",\"__selectionDialogTitle\");\n\n    this.removeListener(\"focus\", this.blur);\n    this.removeListener(\"tap\", this._onTap, this);\n  }\n});\n"
  ]
}