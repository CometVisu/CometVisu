{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/RadioButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "form",
    "Input",
    "include",
    "MValue",
    "implement",
    "IField",
    "construct",
    "value",
    "addListener",
    "_onTap",
    "events",
    "changeValue",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "group",
    "check",
    "nullable",
    "apply",
    "members",
    "_state",
    "_getTagName",
    "_getType",
    "fireDataEvent",
    "setValue",
    "_applyGroup",
    "old",
    "remove",
    "add",
    "_setValue",
    "addCssClass",
    "removeCssClass",
    "_getValue",
    "destruct",
    "event",
    "Registration",
    "removeListener",
    "RadioButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Gabriel Munteanu (gabios)\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\n/**\n * The Radio button for mobile.\n *\n * *Example*\n *\n * <pre class='javascript'>\n *    var form = new qx.ui.mobile.form.Form();\n *\n *    var radio1 = new qx.ui.mobile.form.RadioButton();\n *    var radio2 = new qx.ui.mobile.form.RadioButton();\n *    var radio3 = new qx.ui.mobile.form.RadioButton();\n *\n *    var group = new qx.ui.mobile.form.RadioGroup(radio1, radio2, radio3);\n\n *    form.add(radio1, \"Germany\");\n *    form.add(radio2, \"UK\");\n *    form.add(radio3, \"USA\");\n *\n *    this.getRoot.add(new qx.ui.mobile.form.renderer.Single(form));\n * </pre>\n *\n *\n */\nqx.Class.define(\"qx.ui.mobile.form.RadioButton\",\n{\n  extend : qx.ui.mobile.form.Input,\n  include : [qx.ui.mobile.form.MValue],\n  implement: [qx.ui.form.IField],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {Boolean?null} The value of the checkbox.\n   */\n  construct : function(value)\n  {\n    this.base(arguments);\n    this.addListener(\"tap\", this._onTap, this);\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n  events :\n  {\n    /**\n     * Fired when the selection value is changed.\n     */\n    changeValue : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    // overridden\n    defaultCssClass :\n    {\n      refine : true,\n      init : \"radio\"\n    },\n\n\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons */\n    group :\n    {\n      check  : \"qx.ui.mobile.form.RadioGroup\",\n      nullable : true,\n      apply : \"_applyGroup\"\n    }\n  },\n\n\n  members :\n  {\n    _state : null,\n\n    // overridden\n    _getTagName : function()\n    {\n      return \"span\";\n    },\n\n\n    // overridden\n    _getType : function()\n    {\n      return null;\n    },\n\n\n    /**\n     * Reacts on tap on radio button.\n     */\n    _onTap : function() {\n      this.fireDataEvent(\"changeValue\", {});\n\n      // Toggle State.\n      this.setValue(true);\n    },\n\n\n    /**\n     * The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons\n     * @param value {qx.ui.form.RadioGroup} the new radio group to which this radio button belongs.\n     * @param old {qx.ui.form.RadioGroup} the old radio group of this radio button.\n     */\n    _applyGroup : function(value, old)\n    {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n\n    /**\n     * Sets the value [true/false] of this radio button.\n     * It is called by setValue method of qx.ui.mobile.form.MValue mixin\n     * @param value {Boolean} the new value of the radio button\n     */\n    _setValue : function(value) {\n      if(value == true) {\n        this.addCssClass(\"checked\");\n      } else {\n        this.removeCssClass(\"checked\");\n      }\n\n      this._state = value;\n    },\n\n\n    /**\n     * Gets the value [true/false] of this radio button.\n     * It is called by getValue method of qx.ui.mobile.form.MValue mixin\n     * @return {Boolean} the value of the radio button\n     */\n    _getValue : function() {\n      return this._state;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n      DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct : function()\n  {\n    qx.event.Registration.removeListener(this, \"tap\", this._onTap, this);\n  }\n});\n"
  ]
}