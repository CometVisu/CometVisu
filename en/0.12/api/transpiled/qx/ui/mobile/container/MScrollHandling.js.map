{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/container/MScrollHandling.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "_getParentScrollContainer",
    "scroll",
    "ui",
    "mobile",
    "container",
    "Scroll",
    "getLayoutParent",
    "layoutParent",
    "core",
    "Root",
    "MScrollHandling"
  ],
  "mappings": ";;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,wCAAhB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACA;AACIC,MAAAA,yBAAyB,EAAE,qCAAW;AACpC,YAAIC,MAAM,GAAG,IAAb;;AACA,eAAO,EAAEA,MAAM,YAAYR,EAAE,CAACS,EAAH,CAAMC,MAAN,CAAaC,SAAb,CAAuBC,MAA3C,CAAP,EAA2D;AACzD,cAAIJ,MAAM,CAACK,eAAX,EAA4B;AAC1B,gBAAIC,YAAY,GAAGN,MAAM,CAACK,eAAP,EAAnB;;AACA,gBAAIC,YAAY,KAAK,IAAjB,IAAyBA,YAAY,YAAYd,EAAE,CAACS,EAAH,CAAMC,MAAN,CAAaK,IAAb,CAAkBC,IAAvE,EAA6E;AAC3E,qBAAO,IAAP;AACD;;AACDR,YAAAA,MAAM,GAAGM,YAAT;AACD,WAND,MAMO;AACL,mBAAO,IAAP;AACD;AACF;;AACD,eAAON,MAAP;AACD;AAnBH;AAFF,GADA;AAvBAR,EAAAA,EAAE,CAACS,EAAH,CAAMC,MAAN,CAAaC,SAAb,CAAuBM,eAAvB,CAAuCd,aAAvC,GAAuDA,aAAvD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\n/**\n * The mixin contains all functionality to provide methods\n * for scroll container handling: determine the parent scroll container.\n *\n */\nqx.Mixin.define(\"qx.ui.mobile.container.MScrollHandling\",\n{\n  members :\n  {\n    /**\n     * Returns the parent scroll container of this widget.\n     * @return {qx.ui.mobile.container.Scroll} the parent scroll container or <code>null</code>\n     */\n    _getParentScrollContainer: function() {\n      var scroll = this;\n      while (!(scroll instanceof qx.ui.mobile.container.Scroll)) {\n        if (scroll.getLayoutParent) {\n          var layoutParent = scroll.getLayoutParent();\n          if (layoutParent === null || layoutParent instanceof qx.ui.mobile.core.Root) {\n            return null;\n          }\n          scroll = layoutParent;\n        } else {\n          return null;\n        }\n      }\n      return scroll;\n    }\n  }\n});"
  ]
}