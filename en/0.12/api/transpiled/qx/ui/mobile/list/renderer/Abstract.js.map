{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/list/renderer/Abstract.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "container",
    "Composite",
    "type",
    "construct",
    "layout",
    "initSelectable",
    "initRemovable",
    "initShowArrow",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "selected",
    "check",
    "apply",
    "selectable",
    "removable",
    "showArrow",
    "activatable",
    "members",
    "reset",
    "_getTagName",
    "getRowIndexFromEvent",
    "evt",
    "getRowIndex",
    "getOriginalTarget",
    "element",
    "tagName",
    "parentNode",
    "getAttribute",
    "_applyShowArrow",
    "value",
    "old",
    "addCssClass",
    "removeCssClass",
    "_applyRemovable",
    "_applySelected",
    "list",
    "renderer",
    "Abstract"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * Base class for all list item renderer.\n */\nqx.Class.define(\"qx.ui.mobile.list.renderer.Abstract\",\n{\n  extend : qx.ui.mobile.container.Composite,\n  type : \"abstract\",\n\n\n /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function(layout)\n  {\n    this.base(arguments, layout);\n    this.initSelectable();\n    this.initRemovable();\n    this.initShowArrow();\n  },\n\n\n /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    defaultCssClass :\n    {\n      refine : true,\n      init : \"list-item\"\n    },\n\n\n    /**\n     * Whether the row is selected.\n     */\n    selected :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applySelected\"\n    },\n\n\n    /**\n     * Whether the row is selectable.\n     */\n    selectable :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyAttribute\"\n    },\n\n\n    /**\n     * Whether the row is removable.\n     */\n    removable :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyRemovable\"\n    },\n\n\n    /**\n     * Whether to show an arrow in the row.\n     */\n    showArrow :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyShowArrow\"\n    },\n\n\n    //overridden\n    activatable :\n    {\n      refine :true,\n      init : true\n    }\n  },\n\n\n /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // abstract method\n    /**\n     * Resets all defined child widgets. Override this method in your custom\n     * list item renderer and reset all widgets displaying data. Needed as the\n     * renderer is used for every row and otherwise data of a different row\n     * might be displayed, when not all data displaying widgets are used for the row.\n     * Gets called automatically by the {@link qx.ui.mobile.list.provider.Provider}.\n     *\n     */\n    reset : function() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        throw new Error(\"Abstract method call\");\n      }\n    },\n\n    // overridden\n    _getTagName : function()\n    {\n      return \"li\";\n    },\n\n\n    /**\n     * Returns the row index of a certain DOM element in the list from the given event.\n     *\n     * @param evt {qx.event.type.Event} The causing event.\n     * @return {Integer} the index of the row.\n     */\n    getRowIndexFromEvent : function(evt) {\n      return this.getRowIndex(evt.getOriginalTarget());\n    },\n\n\n    /**\n     * Returns the row index of a certain DOM element in the list.\n     *\n     * @param element {Element} DOM element to retrieve the index from.\n     * @return {Integer} the index of the row.\n     */\n    getRowIndex : function(element)\n    {\n      while (element.tagName != \"LI\") {\n        element = element.parentNode;\n      }\n\n      return element.getAttribute(\"data-row\");\n    },\n\n\n    // property apply\n    _applyShowArrow : function(value, old)\n    {\n      if (value) {\n        this.addCssClass(\"arrow\");\n      } else {\n        this.removeCssClass(\"arrow\");\n      }\n    },\n\n\n    // property apply\n    _applyRemovable : function(value, old)\n    {\n      if (value) {\n        this.addCssClass(\"removable\");\n      } else {\n        this.removeCssClass(\"removable\");\n      }\n    },\n\n\n    // property apply\n    _applySelected : function(value, old)\n    {\n      if (value) {\n        this.addCssClass(\"selected\");\n      } else {\n        this.removeCssClass(\"selected\");\n      }\n    }\n  }\n});"
  ]
}