{
  "className": "qx.ui.decoration.MBorderImage",
  "packageName": "qx.ui.decoration",
  "name": "MBorderImage",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 302,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2013 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Martin Wittemann (martinwittemann)\n Daniel Wagner (danielwagner)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Decorator which uses the CSS3 border image properties.</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "properties": {
    "borderImage": {
      "location": {
        "start": {
          "line": 30,
          "column": 4
        },
        "end": {
          "line": 35,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Base image URL.</p>"
          }
        ]
      },
      "name": "borderImage",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "sliceTop": {
      "location": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The top slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "name": "sliceTop",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "sliceRight": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The right slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "name": "sliceRight",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "sliceBottom": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The bottom slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "name": "sliceBottom",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "sliceLeft": {
      "location": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The left slice line of the base image. The slice properties divide the\n image into nine regions, which define the corner, edge and the center\n images.</p>"
          }
        ]
      },
      "name": "sliceLeft",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "slice": {
      "location": {
        "start": {
          "line": 97,
          "column": 4
        },
        "end": {
          "line": 101,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The slice properties divide the image into nine regions, which define the\n corner, edge and the center images.</p>"
          }
        ]
      },
      "name": "slice",
      "propertyType": "new",
      "group": [
        "sliceTop",
        "sliceRight",
        "sliceBottom",
        "sliceLeft"
      ]
    },
    "repeatX": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 122,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This property specifies how the images for the sides and the middle part\n of the border image are scaled and tiled horizontally.\n Values have the following meanings:\n </p>\n<ul>\n   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n    fill the area with a whole number of tiles, the image is rescaled so\n    that it does.</li>\n </ul>"
          }
        ]
      },
      "name": "repeatX",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "init": "stretch",
      "possibleValues": [
        "stretch",
        "repeat",
        "round"
      ],
      "defaultValue": "stretch"
    },
    "repeatY": {
      "location": {
        "start": {
          "line": 138,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This property specifies how the images for the sides and the middle part\n of the border image are scaled and tiled vertically.\n Values have the following meanings:\n </p>\n<ul>\n   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n    fill the area with a whole number of tiles, the image is rescaled so\n    that it does.</li>\n </ul>"
          }
        ]
      },
      "name": "repeatY",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "init": "stretch",
      "possibleValues": [
        "stretch",
        "repeat",
        "round"
      ],
      "defaultValue": "stretch"
    },
    "repeat": {
      "location": {
        "start": {
          "line": 150,
          "column": 4
        },
        "end": {
          "line": 154,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This property specifies how the images for the sides and the middle part\n of the border image are scaled and tiled.</p>"
          }
        ]
      },
      "name": "repeat",
      "propertyType": "new",
      "group": [
        "repeatX",
        "repeatY"
      ]
    },
    "fill": {
      "location": {
        "start": {
          "line": 161,
          "column": 4
        },
        "end": {
          "line": 166,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If set to <code>false</code>, the center image will be omitted and only\n the border will be drawn.</p>"
          }
        ]
      },
      "name": "fill",
      "propertyType": "new",
      "apply": "_applyBorderImage",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "borderImageMode": {
      "location": {
        "start": {
          "line": 177,
          "column": 4
        },
        "end": {
          "line": 181,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Configures the border image mode. Supported values:\n </p>\n<ul>\n   <li>horizontal: left and right border images</li>\n   <li>vertical: top and bottom border images</li>\n   <li>grid: border images for all edges</li>\n </ul>"
          }
        ]
      },
      "name": "borderImageMode",
      "propertyType": "new",
      "init": "grid",
      "possibleValues": [
        "horizontal",
        "vertical",
        "grid"
      ],
      "defaultValue": "grid"
    }
  },
  "members": {
    "_styleBorderImage": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 226,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the border-image styles to the given map</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} CSS style map",
            "paramName": "styles",
            "description": " CSS style map",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getDefaultInsetsForBorderImage": {
      "location": {
        "start": {
          "line": 235,
          "column": 4
        },
        "end": {
          "line": 255,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the inset values based on the border image slices (defined in the\n decoration theme or computed from the fallback image sizes).</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the top, right, bottom and left insets",
            "type": "Map",
            "description": " Map with the top, right, bottom and left insets"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyBorderImage": {
      "location": {
        "start": {
          "line": 258,
          "column": 4
        },
        "end": {
          "line": 266,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "borderImage",
        "sliceTop",
        "sliceRight",
        "sliceBottom",
        "sliceLeft",
        "repeatX",
        "repeatY",
        "fill"
      ]
    },
    "__getSlices": {
      "location": {
        "start": {
          "line": 275,
          "column": 4
        },
        "end": {
          "line": 300,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the slice sizes from the fallback border images.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "baseImage {String} Resource Id of the base border image",
            "paramName": "baseImage",
            "description": " Resource Id of the base border image",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} Array with the top, right, bottom and left slice widths",
            "type": "Integer[]",
            "description": " Array with the top, right, bottom and left slice widths"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getBorderImage": {
      "type": "function",
      "name": "getBorderImage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>borderImage</code>.\n\nFor further details take a look at the property definition: {@link #borderImage}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for borderImage"
          }
        ]
      }
    },
    "setBorderImage": {
      "type": "function",
      "name": "setBorderImage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>borderImage</code>.\n\nFor further details take a look at the property definition: {@link #borderImage}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for borderImage"
          }
        ]
      }
    },
    "resetBorderImage": {
      "type": "function",
      "name": "resetBorderImage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>borderImage</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #borderImage}."
          }
        ]
      }
    },
    "getSliceTop": {
      "type": "function",
      "name": "getSliceTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sliceTop</code>.\n\nFor further details take a look at the property definition: {@link #sliceTop}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for sliceTop"
          }
        ]
      }
    },
    "setSliceTop": {
      "type": "function",
      "name": "setSliceTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sliceTop</code>.\n\nFor further details take a look at the property definition: {@link #sliceTop}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for sliceTop"
          }
        ]
      }
    },
    "resetSliceTop": {
      "type": "function",
      "name": "resetSliceTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sliceTop</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sliceTop}."
          }
        ]
      }
    },
    "getSliceRight": {
      "type": "function",
      "name": "getSliceRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sliceRight</code>.\n\nFor further details take a look at the property definition: {@link #sliceRight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for sliceRight"
          }
        ]
      }
    },
    "setSliceRight": {
      "type": "function",
      "name": "setSliceRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sliceRight</code>.\n\nFor further details take a look at the property definition: {@link #sliceRight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for sliceRight"
          }
        ]
      }
    },
    "resetSliceRight": {
      "type": "function",
      "name": "resetSliceRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sliceRight</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sliceRight}."
          }
        ]
      }
    },
    "getSliceBottom": {
      "type": "function",
      "name": "getSliceBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sliceBottom</code>.\n\nFor further details take a look at the property definition: {@link #sliceBottom}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for sliceBottom"
          }
        ]
      }
    },
    "setSliceBottom": {
      "type": "function",
      "name": "setSliceBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sliceBottom</code>.\n\nFor further details take a look at the property definition: {@link #sliceBottom}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for sliceBottom"
          }
        ]
      }
    },
    "resetSliceBottom": {
      "type": "function",
      "name": "resetSliceBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sliceBottom</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sliceBottom}."
          }
        ]
      }
    },
    "getSliceLeft": {
      "type": "function",
      "name": "getSliceLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sliceLeft</code>.\n\nFor further details take a look at the property definition: {@link #sliceLeft}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for sliceLeft"
          }
        ]
      }
    },
    "setSliceLeft": {
      "type": "function",
      "name": "setSliceLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sliceLeft</code>.\n\nFor further details take a look at the property definition: {@link #sliceLeft}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for sliceLeft"
          }
        ]
      }
    },
    "resetSliceLeft": {
      "type": "function",
      "name": "resetSliceLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sliceLeft</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sliceLeft}."
          }
        ]
      }
    },
    "getSlice": {
      "type": "function",
      "name": "getSlice",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>slice</code>.\n\nFor further details take a look at the property definition: {@link #slice}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for slice"
          }
        ]
      }
    },
    "setSlice": {
      "type": "function",
      "name": "setSlice",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>slice</code>.\n\nFor further details take a look at the property definition: {@link #slice}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for slice"
          }
        ]
      }
    },
    "resetSlice": {
      "type": "function",
      "name": "resetSlice",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>slice</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #slice}."
          }
        ]
      }
    },
    "getRepeatX": {
      "type": "function",
      "name": "getRepeatX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>repeatX</code>.\n\nFor further details take a look at the property definition: {@link #repeatX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for repeatX"
          }
        ]
      }
    },
    "setRepeatX": {
      "type": "function",
      "name": "setRepeatX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>repeatX</code>.\n\nFor further details take a look at the property definition: {@link #repeatX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for repeatX"
          }
        ]
      }
    },
    "resetRepeatX": {
      "type": "function",
      "name": "resetRepeatX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>repeatX</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #repeatX}."
          }
        ]
      }
    },
    "getRepeatY": {
      "type": "function",
      "name": "getRepeatY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>repeatY</code>.\n\nFor further details take a look at the property definition: {@link #repeatY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for repeatY"
          }
        ]
      }
    },
    "setRepeatY": {
      "type": "function",
      "name": "setRepeatY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>repeatY</code>.\n\nFor further details take a look at the property definition: {@link #repeatY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for repeatY"
          }
        ]
      }
    },
    "resetRepeatY": {
      "type": "function",
      "name": "resetRepeatY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>repeatY</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #repeatY}."
          }
        ]
      }
    },
    "getRepeat": {
      "type": "function",
      "name": "getRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for repeat"
          }
        ]
      }
    },
    "setRepeat": {
      "type": "function",
      "name": "setRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for repeat"
          }
        ]
      }
    },
    "resetRepeat": {
      "type": "function",
      "name": "resetRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>repeat</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ]
      }
    },
    "getFill": {
      "type": "function",
      "name": "getFill",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>fill</code>.\n\nFor further details take a look at the property definition: {@link #fill}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for fill"
          }
        ]
      }
    },
    "isFill": {
      "type": "function",
      "name": "isFill",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>fill</code>.\n\nFor further details take a look at the property definition: {@link #fill}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for fill"
          }
        ]
      }
    },
    "setFill": {
      "type": "function",
      "name": "setFill",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>fill</code>.\n\nFor further details take a look at the property definition: {@link #fill}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for fill"
          }
        ]
      }
    },
    "resetFill": {
      "type": "function",
      "name": "resetFill",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>fill</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #fill}."
          }
        ]
      }
    },
    "getBorderImageMode": {
      "type": "function",
      "name": "getBorderImageMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>borderImageMode</code>.\n\nFor further details take a look at the property definition: {@link #borderImageMode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for borderImageMode"
          }
        ]
      }
    },
    "setBorderImageMode": {
      "type": "function",
      "name": "setBorderImageMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>borderImageMode</code>.\n\nFor further details take a look at the property definition: {@link #borderImageMode}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for borderImageMode"
          }
        ]
      }
    },
    "resetBorderImageMode": {
      "type": "function",
      "name": "resetBorderImageMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>borderImageMode</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #borderImageMode}."
          }
        ]
      }
    }
  },
  "descendants": []
}