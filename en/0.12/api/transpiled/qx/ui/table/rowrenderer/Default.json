{
  "className": "qx.ui.table.rowrenderer.Default",
  "packageName": "qx.ui.table.rowrenderer",
  "name": "Default",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.table.IRowRenderer"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 276,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2007 Visionet GmbH, http://www.visionet.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Til Schneider (til132) STZ-IDA\n Dietrich Streifert (level420) Visionet\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>The default data row renderer.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 14
      },
      "end": {
        "line": 50,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "properties": {
    "highlightFocusRow": {
      "location": {
        "start": {
          "line": 64,
          "column": 4
        },
        "end": {
          "line": 68,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the focused row should be highlighted.</p>"
          }
        ]
      },
      "name": "highlightFocusRow",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "_colors": {
      "location": {
        "start": {
          "line": 81,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 18
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_fontStyle": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 21
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_fontStyleString": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 27
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "initThemeValues": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the colors from the color theme.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_insetY": {
      "location": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 15
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>the sum of the vertical insets. This is needed to compute the box model\n independent size</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_renderFont": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 136,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>borderBottom</p>"
          },
          {
            "name": "@description",
            "body": "<p>Render the new font and update the table pane content\n to reflect the font change.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "font {qx.bom.Font} The font to use for the table row",
            "paramName": "font",
            "description": " The font to use for the table row",
            "type": "qx.bom.Font"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "updateDataRowElement": {
      "location": {
        "start": {
          "line": 140,
          "column": 4
        },
        "end": {
          "line": 166,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowInfo {Map} A map containing the information about the row to\n      update.",
            "paramName": "rowInfo",
            "description": " A map containing the information about the row to\n      update.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "rowElement {Element} the DOM element that renders the data row.",
            "paramName": "rowElement",
            "description": " the DOM element that renders the data row.",
            "type": "Element"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.IRowRenderer",
      "appearsIn": [
        "qx.ui.table.IRowRenderer"
      ]
    },
    "getRowHeightStyle": {
      "location": {
        "start": {
          "line": 175,
          "column": 4
        },
        "end": {
          "line": 182,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the row's height CSS style taking the box model into account</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "height {Integer} The row's (border-box) height in pixel",
            "paramName": "height",
            "description": " The row's (border-box) height in pixel",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} CSS rule for the row height",
            "type": "String",
            "description": " CSS rule for the row height"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.IRowRenderer",
      "appearsIn": [
        "qx.ui.table.IRowRenderer"
      ]
    },
    "createRowStyle": {
      "location": {
        "start": {
          "line": 186,
          "column": 4
        },
        "end": {
          "line": 215,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowInfo {Map} A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "paramName": "rowInfo",
            "description": " A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.IRowRenderer",
      "appearsIn": [
        "qx.ui.table.IRowRenderer"
      ]
    },
    "getRowClass": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 220,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.IRowRenderer",
      "appearsIn": [
        "qx.ui.table.IRowRenderer"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "rowInfo {Map} A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "paramName": "rowInfo",
            "description": " A map containing the information about the row to\n      update. See {@link #updateDataRowElement} for more information.",
            "type": "Map"
          }
        ]
      }
    },
    "getRowAttributes": {
      "location": {
        "start": {
          "line": 251,
          "column": 4
        },
        "end": {
          "line": 254,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add extra attributes to each row.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowInfo {Object}\n   The following members are available in rowInfo:\n   <dl>\n     <dt>table {qx.ui.table.Table}</dt>\n     <dd>The table object</dd>\n     <dt>styleHeight {Integer}</dt>\n     <dd>The height of this (and every) row</dd>\n     <dt>row {Integer}</dt>\n     <dd>The number of the row being added</dd>\n     <dt>selected {Boolean}</dt>\n     <dd>Whether the row being added is currently selected</dd>\n     <dt>focusedRow {Boolean}</dt>\n     <dd>Whether the row being added is currently focused</dd>\n     <dt>rowData {Array}</dt>\n     <dd>The array row from the data model of the row being added</dd>\n   </dl>",
            "paramName": "rowInfo",
            "description": "\n   The following members are available in rowInfo:\n   <dl>\n     <dt>table {qx.ui.table.Table}</dt>\n     <dd>The table object</dd>\n     <dt>styleHeight {Integer}</dt>\n     <dd>The height of this (and every) row</dd>\n     <dt>row {Integer}</dt>\n     <dd>The number of the row being added</dd>\n     <dt>selected {Boolean}</dt>\n     <dd>Whether the row being added is currently selected</dd>\n     <dt>focusedRow {Boolean}</dt>\n     <dd>Whether the row being added is currently focused</dd>\n     <dt>rowData {Array}</dt>\n     <dd>The array row from the data model of the row being added</dd>\n   </dl>",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   Any additional attributes and their values that should be added to the\n   div tag for the row.",
            "type": "String",
            "description": "\n   Any additional attributes and their values that should be added to the\n   div tag for the row."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getHighlightFocusRow": {
      "type": "function",
      "name": "getHighlightFocusRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>highlightFocusRow</code>.\n\nFor further details take a look at the property definition: {@link #highlightFocusRow}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for highlightFocusRow"
          }
        ]
      }
    },
    "isHighlightFocusRow": {
      "type": "function",
      "name": "isHighlightFocusRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>highlightFocusRow</code>.\n\nFor further details take a look at the property definition: {@link #highlightFocusRow}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for highlightFocusRow"
          }
        ]
      }
    },
    "setHighlightFocusRow": {
      "type": "function",
      "name": "setHighlightFocusRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>highlightFocusRow</code>.\n\nFor further details take a look at the property definition: {@link #highlightFocusRow}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for highlightFocusRow"
          }
        ]
      }
    },
    "resetHighlightFocusRow": {
      "type": "function",
      "name": "resetHighlightFocusRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>highlightFocusRow</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #highlightFocusRow}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 266,
        "column": 13
      },
      "end": {
        "line": 275,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n DESTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "descendants": [
    "qx.ui.treevirtual.SimpleTreeDataRowRenderer"
  ]
}