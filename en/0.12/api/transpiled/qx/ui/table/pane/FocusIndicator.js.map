{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/ui/table/pane/FocusIndicator.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "construct",
    "scroller",
    "layout",
    "Grow",
    "__scroller",
    "setKeepActive",
    "addListener",
    "_onKeyPress",
    "properties",
    "visibility",
    "refine",
    "init",
    "row",
    "check",
    "nullable",
    "column",
    "members",
    "e",
    "iden",
    "getKeyIdentifier",
    "stopPropagation",
    "moveToCell",
    "col",
    "getShowCellFocusIndicator",
    "getTable",
    "getTableModel",
    "isColumnEditable",
    "exclude",
    "show",
    "hide",
    "setRow",
    "setColumn",
    "xPos",
    "getTablePaneModel",
    "getX",
    "table",
    "columnModel",
    "getTableColumnModel",
    "paneModel",
    "firstRow",
    "getTablePane",
    "getFirstVisibleRow",
    "rowHeight",
    "getRowHeight",
    "setUserBounds",
    "getColumnLeft",
    "getColumnWidth",
    "destruct",
    "pane",
    "FocusIndicator"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The focus indicator widget\n */\nqx.Class.define(\"qx.ui.table.pane.FocusIndicator\",\n{\n  extend : qx.ui.container.Composite,\n\n  /**\n   * @param scroller {qx.ui.table.pane.Scroller} The scroller, which contains this focus indicator\n   */\n  construct : function(scroller)\n  {\n    // use the grow layout to make sure that the editing control\n    // always fills the focus indicator box.\n    this.base(arguments, new qx.ui.layout.Grow());\n    this.__scroller = scroller;\n\n    this.setKeepActive(true);\n    this.addListener(\"keypress\", this._onKeyPress, this);\n  },\n\n  properties :\n  {\n    // overridden\n    visibility :\n    {\n      refine : true,\n      init : \"excluded\"\n    },\n\n    /** Table row, where the indicator is placed. */\n    row : {\n      check : \"Integer\",\n      nullable : true\n    },\n\n    /** Table column, where the indicator is placed. */\n    column : {\n      check : \"Integer\",\n      nullable : true\n    }\n  },\n\n  members :\n  {\n    __scroller : null,\n\n\n    /**\n     * Keypress handler. Suppress all key events but \"Enter\" and \"Escape\"\n     *\n     * @param e {qx.event.type.KeySequence} key event\n     */\n    _onKeyPress : function(e)\n    {\n      var iden = e.getKeyIdentifier();\n      if (iden !== \"Escape\" && iden !== \"Enter\") {\n        e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Move the focus indicator to the given table cell.\n     *\n     * @param col {Integer?null} The table column\n     * @param row {Integer?null} The table row\n     */\n    moveToCell : function(col, row)\n    {\n      // check if the focus indicator is shown and if the new column is\n      // editable. if not, just exclude the indicator because the pointer events\n      // should go to the cell itself linked with HTML links [BUG #4250]\n      if (\n        !this.__scroller.getShowCellFocusIndicator() &&\n        !this.__scroller.getTable().getTableModel().isColumnEditable(col)\n      ) {\n        this.exclude();\n        return;\n      } else {\n        this.show();\n      }\n\n      if (col == null)\n      {\n        this.hide();\n        this.setRow(null);\n        this.setColumn(null);\n      }\n      else\n      {\n        var xPos = this.__scroller.getTablePaneModel().getX(col);\n\n        if (xPos == -1)\n        {\n          this.hide();\n          this.setRow(null);\n          this.setColumn(null);\n        }\n        else\n        {\n          var table = this.__scroller.getTable();\n          var columnModel = table.getTableColumnModel();\n          var paneModel = this.__scroller.getTablePaneModel();\n\n          var firstRow = this.__scroller.getTablePane().getFirstVisibleRow();\n          var rowHeight = table.getRowHeight();\n\n          this.setUserBounds(\n              paneModel.getColumnLeft(col) - 2,\n              (row - firstRow) * rowHeight - 2,\n              columnModel.getColumnWidth(col) + 3,\n              rowHeight + 3\n          );\n          this.show();\n\n          this.setRow(row);\n          this.setColumn(col);\n        }\n      }\n    }\n  },\n\n  destruct : function () {\n     this.__scroller = null;\n  }\n});\n"
  ]
}