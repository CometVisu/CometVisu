{
  "className": "qx.ui.table.cellrenderer.AbstractImage",
  "packageName": "qx.ui.table.cellrenderer",
  "name": "AbstractImage",
  "superClass": "qx.ui.table.cellrenderer.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 281,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Til Schneider (til132)\n Carsten Lergenmueller (carstenl)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>A template class for cell renderer, which display images. Concrete\n implementations must implement the method {@link #_identifyImage}.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 37,
        "column": 14
      },
      "end": {
        "line": 51,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "properties": {
    "repeat": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 91,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to repeat or scale the image.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "repeat {String}\n   One of\n     <code>scale</code>,\n     <code>scale-x</code>,\n     <code>scale-y</code>,\n     <code>repeat</code>,\n     <code>repeat-x</code>,\n     <code>repeat-y</code>,\n     <code>no-repeat</code>",
            "paramName": "repeat",
            "description": "\n   One of\n     <code>scale</code>,\n     <code>scale-x</code>,\n     <code>scale-y</code>,\n     <code>repeat</code>,\n     <code>repeat-x</code>,\n     <code>repeat-y</code>,\n     <code>no-repeat</code>",
            "type": "qx.ui.table.cellrenderer.String"
          }
        ]
      },
      "name": "repeat",
      "propertyType": "new",
      "init": "no-repeat",
      "defaultValue": "no-repeat"
    }
  },
  "members": {
    "__defaultWidth": {
      "location": {
        "start": {
          "line": 103,
          "column": 4
        },
        "end": {
          "line": 103,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__defaultHeight": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 104,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__imageData": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 105,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_insetY": {
      "location": {
        "start": {
          "line": 108,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 15
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_identifyImage": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 133,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Identifies the Image to show. This is a template method, which must be\n implemented by sub classes.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map having the following attributes:\n           <ul>\n           <li>\n             \"url\": (type string) must be the URL of the image to show.\n             The url given must either be managed by the {@link qx.util.ResourceManager}\n             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n             the renderer knows the dimensions and the format of the image.\n           </li>\n           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>",
            "type": "Map",
            "description": " A map having the following attributes:\n           <ul>\n           <li>\n             \"url\": (type string) must be the URL of the image to show.\n             The url given must either be managed by the {@link qx.util.ResourceManager}\n             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n             the renderer knows the dimensions and the format of the image.\n           </li>\n           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} the abstract function warning.",
            "type": "Error",
            "description": " the abstract function warning."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getImageInfos": {
      "location": {
        "start": {
          "line": 146,
          "column": 4
        },
        "end": {
          "line": 180,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieves the image infos.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "type string) being the tooltip text (or null if none was specified"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__getImageSize": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 214,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compute the size of the given image</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "source {String} the image URL",
            "paramName": "source",
            "description": " the image URL",
            "type": "qx.ui.table.cellrenderer.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map containing the image's <code>width</code> and\n    <code>height</code>",
            "type": "Map",
            "description": " A map containing the image's <code>width</code> and\n    <code>height</code>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "createDataCellHtml": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 222,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} A map containing the information about the cell to\n     create.",
            "paramName": "cellInfo",
            "description": " A map containing the information about the cell to\n     create.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "htmlArr {String[]} Target string container. The HTML of the data\n     cell should be appended to this array.",
            "paramName": "htmlArr",
            "description": " Target string container. The HTML of the data\n     cell should be appended to this array.",
            "type": "String[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean|undefined}\n   A return value of <i>true</i> specifies that no additional cells in\n   the row shall be rendered. This may be used, for example, for\n   separator rows or for other special rendering purposes. Traditional\n   cell renderers had no defined return value, so returned nothing\n   (undefined). If this method returns either false or nothing, then\n   rendering continues with the next cell in the row, which the normal\n   mode of operation.",
            "type": "Boolean|undefined",
            "description": "\n   A return value of <i>true</i> specifies that no additional cells in\n   the row shall be rendered. This may be used, for example, for\n   separator rows or for other special rendering purposes. Traditional\n   cell renderers had no defined return value, so returned nothing\n   (undefined). If this method returns either false or nothing, then\n   rendering continues with the next cell in the row, which the normal\n   mode of operation."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract",
        "qx.ui.table.ICellRenderer"
      ]
    },
    "_getCellClass": {
      "location": {
        "start": {
          "line": 226,
          "column": 4
        },
        "end": {
          "line": 228,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} cellInfo of the cell",
            "paramName": "cellInfo",
            "description": " cellInfo of the cell",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The table cell HTML classes as string.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " The table cell HTML classes as string."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "_getContentHtml": {
      "location": {
        "start": {
          "line": 232,
          "column": 4
        },
        "end": {
          "line": 255,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the inner HTML of the cell.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " the inner HTML of the cell."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "_getCellAttributes": {
      "location": {
        "start": {
          "line": 259,
          "column": 4
        },
        "end": {
          "line": 268,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\n   The extra attributes to be applied to this cell.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": "\n   The extra attributes to be applied to this cell."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "reset"
    },
    "getDefaultCellStyle": {
      "type": "function",
      "name": "getDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultCellStyle"
          }
        ]
      }
    },
    "setDefaultCellStyle": {
      "type": "function",
      "name": "setDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultCellStyle"
          }
        ]
      }
    },
    "resetDefaultCellStyle": {
      "type": "function",
      "name": "resetDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "reset"
    },
    "getRepeat": {
      "type": "function",
      "name": "getRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for repeat"
          }
        ]
      }
    },
    "setRepeat": {
      "type": "function",
      "name": "setRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for repeat"
          }
        ]
      }
    },
    "resetRepeat": {
      "type": "function",
      "name": "resetRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>repeat</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 277,
        "column": 13
      },
      "end": {
        "line": 280,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n DESTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "descendants": [
    "qx.ui.table.cellrenderer.Boolean",
    "qx.ui.table.cellrenderer.Image"
  ]
}