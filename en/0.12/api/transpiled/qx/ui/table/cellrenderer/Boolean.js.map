{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Boolean.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "cellrenderer",
    "AbstractImage",
    "construct",
    "__aliasManager",
    "util",
    "AliasManager",
    "getInstance",
    "initIconTrue",
    "initIconFalse",
    "theme",
    "manager",
    "Meta",
    "addListener",
    "_onChangeTheme",
    "properties",
    "iconTrue",
    "check",
    "init",
    "apply",
    "iconFalse",
    "members",
    "__iconUrlTrue",
    "__iconUrlFalse",
    "_applyIconTrue",
    "getIconTrue",
    "_applyIconFalse",
    "getIconFalse",
    "value",
    "resolve",
    "_insetY",
    "_getCellStyle",
    "cellInfo",
    "_identifyImage",
    "w",
    "h",
    "rm",
    "id",
    "ids",
    "imageHints",
    "ResourceManager",
    "getIds",
    "getImageWidth",
    "getImageHeight",
    "imageWidth",
    "Math",
    "min",
    "imageHeight",
    "url",
    "destruct",
    "removeListener",
    "Boolean"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Carsten Lergenmueller (carstenl)\n\n************************************************************************ */\n\n/**\n * A data cell renderer for boolean values.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Boolean\",\n{\n  extend : qx.ui.table.cellrenderer.AbstractImage,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__aliasManager = qx.util.AliasManager.getInstance();\n\n    this.initIconTrue();\n    this.initIconFalse();\n\n    // dynamic theme switch\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().addListener(\n        \"changeTheme\", this._onChangeTheme, this\n      );\n    }\n  },\n\n\n  /*\n   *****************************************************************************\n     PROPERTIES\n   *****************************************************************************\n   */\n\n  properties :\n  {\n    /**\n     * The icon used to indicate the true state\n     */\n    iconTrue :\n    {\n      check : \"String\",\n      init : \"decoration/table/boolean-true.png\",\n      apply : \"_applyIconTrue\"\n    },\n\n    /**\n    * The icon used to indicate the false state\n    */\n    iconFalse :\n    {\n      check : \"String\",\n      init : \"decoration/table/boolean-false.png\",\n      apply : \"_applyIconFalse\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __iconUrlTrue : null,\n    __iconUrlFalse : false,\n    __aliasManager : null,\n\n\n    /**\n     * Handler for theme changes.\n     * @signature function()\n     */\n    _onChangeTheme : qx.core.Environment.select(\"qx.dyntheme\",\n    {\n      \"true\" : function() {\n        this._applyIconTrue(this.getIconTrue());\n        this._applyIconFalse(this.getIconFalse());\n      },\n      \"false\" : null\n    }),\n\n    // property apply\n    _applyIconTrue : function(value) {\n      this.__iconUrlTrue = this.__aliasManager.resolve(value);\n    },\n\n\n    // property apply\n    _applyIconFalse : function(value) {\n      this.__iconUrlFalse = this.__aliasManager.resolve(value);\n    },\n\n\n    // overridden\n    _insetY : 5,\n\n    // overridden\n    _getCellStyle : function(cellInfo) {\n      return this.base(arguments, cellInfo) + \";padding-top:4px;\";\n    },\n\n\n    // overridden\n    _identifyImage : function(cellInfo)\n    {\n      var w;\n      var h;\n      var rm;\n      var id;\n      var ids;\n      var imageHints;\n\n      // Retrieve the ID\n      rm = qx.util.ResourceManager.getInstance();\n      ids = rm.getIds(this.__iconUrlTrue);\n\n      // If ID was found, we'll use its first (likely only) element here.\n      if (ids)\n      {\n        id = ids[0];\n\n        // Get the natural size of the image\n        w = rm.getImageWidth(id);\n        h = rm.getImageHeight(id);\n      }\n\n      // Create the size portion of the hint.\n      //\n      // The traditional (fixed) size of the image was 11x11px. Use that if we\n      // weren't able to retrieve the actual size of the image, and never\n      // exceed that size.\n      imageHints =\n      {\n        imageWidth  : w ? Math.min(w, 11) : 11,\n        imageHeight : h ? Math.min(h, 11) : 11\n      };\n\n      // Add the URL portion of the hint\n      switch(cellInfo.value)\n      {\n        case true:\n          imageHints.url = this.__iconUrlTrue;\n          break;\n\n        case false:\n          imageHints.url = this.__iconUrlFalse;\n          break;\n\n        default:\n          imageHints.url = null;\n          break;\n      }\n\n      return imageHints;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__aliasManager = null;\n    // remove dynamic theme listener\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().removeListener(\n        \"changeTheme\", this._onChangeTheme, this\n      );\n    }\n  }\n});\n"
  ]
}