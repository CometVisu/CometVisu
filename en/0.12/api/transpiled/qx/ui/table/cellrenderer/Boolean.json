{
  "className": "qx.ui.table.cellrenderer.Boolean",
  "packageName": "qx.ui.table.cellrenderer",
  "name": "Boolean",
  "superClass": "qx.ui.table.cellrenderer.AbstractImage",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 201,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Til Schneider (til132)\n Carsten Lergenmueller (carstenl)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>A data cell renderer for boolean values.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 14
      },
      "end": {
        "line": 51,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "properties": {
    "iconTrue": {
      "location": {
        "start": {
          "line": 65,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The icon used to indicate the true state</p>"
          }
        ]
      },
      "name": "iconTrue",
      "propertyType": "new",
      "apply": "_applyIconTrue",
      "init": "decoration/table/boolean-true.png",
      "check": "String",
      "defaultValue": "decoration/table/boolean-true.png"
    },
    "iconFalse": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The icon used to indicate the false state</p>"
          }
        ]
      },
      "name": "iconFalse",
      "propertyType": "new",
      "apply": "_applyIconFalse",
      "init": "decoration/table/boolean-false.png",
      "check": "String",
      "defaultValue": "decoration/table/boolean-false.png"
    }
  },
  "members": {
    "__iconUrlTrue": {
      "location": {
        "start": {
          "line": 92,
          "column": 4
        },
        "end": {
          "line": 92,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__iconUrlFalse": {
      "location": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 93,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__aliasManager": {
      "location": {
        "start": {
          "line": 94,
          "column": 4
        },
        "end": {
          "line": 94,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_onChangeTheme": {
      "location": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for theme changes.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "_applyIconTrue": {
      "location": {
        "start": {
          "line": 111,
          "column": 4
        },
        "end": {
          "line": 113,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "iconTrue"
      ]
    },
    "_applyIconFalse": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "iconFalse"
      ]
    },
    "_insetY": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 15
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_getCellStyle": {
      "location": {
        "start": {
          "line": 126,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the CSS styles of the main div.",
            "type": "var",
            "description": " the CSS styles of the main div."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "_identifyImage": {
      "location": {
        "start": {
          "line": 132,
          "column": 4
        },
        "end": {
          "line": 183,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map having the following attributes:\n           <ul>\n           <li>\n             \"url\": (type string) must be the URL of the image to show.\n             The url given must either be managed by the {@link qx.util.ResourceManager}\n             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n             the renderer knows the dimensions and the format of the image.\n           </li>\n           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>",
            "type": "Map",
            "description": " A map having the following attributes:\n           <ul>\n           <li>\n             \"url\": (type string) must be the URL of the image to show.\n             The url given must either be managed by the {@link qx.util.ResourceManager}\n             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n             the renderer knows the dimensions and the format of the image.\n           </li>\n           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "appearsIn": [
        "qx.ui.table.cellrenderer.AbstractImage"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "reset"
    },
    "getDefaultCellStyle": {
      "type": "function",
      "name": "getDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultCellStyle"
          }
        ]
      }
    },
    "setDefaultCellStyle": {
      "type": "function",
      "name": "setDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultCellStyle"
          }
        ]
      }
    },
    "resetDefaultCellStyle": {
      "type": "function",
      "name": "resetDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "reset"
    },
    "getRepeat": {
      "type": "function",
      "name": "getRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for repeat"
          }
        ]
      }
    },
    "setRepeat": {
      "type": "function",
      "name": "setRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for repeat"
          }
        ]
      }
    },
    "resetRepeat": {
      "type": "function",
      "name": "resetRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.AbstractImage",
      "property": "reset"
    },
    "getIconTrue": {
      "type": "function",
      "name": "getIconTrue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>iconTrue</code>.\n\nFor further details take a look at the property definition: {@link #iconTrue}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for iconTrue"
          }
        ]
      }
    },
    "setIconTrue": {
      "type": "function",
      "name": "setIconTrue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>iconTrue</code>.\n\nFor further details take a look at the property definition: {@link #iconTrue}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for iconTrue"
          }
        ]
      }
    },
    "resetIconTrue": {
      "type": "function",
      "name": "resetIconTrue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>iconTrue</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #iconTrue}."
          }
        ]
      }
    },
    "getIconFalse": {
      "type": "function",
      "name": "getIconFalse",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>iconFalse</code>.\n\nFor further details take a look at the property definition: {@link #iconFalse}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for iconFalse"
          }
        ]
      }
    },
    "setIconFalse": {
      "type": "function",
      "name": "setIconFalse",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>iconFalse</code>.\n\nFor further details take a look at the property definition: {@link #iconFalse}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for iconFalse"
          }
        ]
      }
    },
    "resetIconFalse": {
      "type": "function",
      "name": "resetIconFalse",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>iconFalse</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #iconFalse}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 192,
        "column": 13
      },
      "end": {
        "line": 200,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n DESTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "descendants": []
}