{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/celleditor/SelectBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "table",
    "ICellEditorFactory",
    "properties",
    "validationFunction",
    "check",
    "nullable",
    "init",
    "listData",
    "members",
    "createCellEditor",
    "cellInfo",
    "cellEditor",
    "form",
    "SelectBox",
    "set",
    "appearance",
    "value",
    "originalValue",
    "cellRenderer",
    "getTableColumnModel",
    "getDataCellRenderer",
    "col",
    "label",
    "_getContentHtml",
    "list",
    "getListData",
    "item",
    "i",
    "l",
    "length",
    "row",
    "Array",
    "ListItem",
    "setUserData",
    "add",
    "itemToSelect",
    "getChildrenContainer",
    "findItem",
    "setSelection",
    "resetSelection",
    "addListener",
    "open",
    "getCellEditorValue",
    "selection",
    "getSelection",
    "userValue",
    "getUserData",
    "undefined",
    "getLabel",
    "validationFunc",
    "getValidationFunction",
    "parseFloat",
    "celleditor"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A cell editor factory creating select boxes.\n */\nqx.Class.define(\"qx.ui.table.celleditor.SelectBox\",\n{\n  extend : qx.core.Object,\n  implement : qx.ui.table.ICellEditorFactory,\n\n\n  properties :\n  {\n    /**\n     * function that validates the result\n     * the function will be called with the new value and the old value and is\n     * supposed to return the value that is set as the table value.\n     **/\n    validationFunction :\n    {\n      check : \"Function\",\n      nullable : true,\n      init : null\n    },\n\n    /** array of data to construct ListItem widgets with */\n    listData :\n    {\n      check : \"Array\",\n      init : null,\n      nullable : true\n    }\n\n  },\n\n\n  members :\n  {\n    // interface implementation\n    createCellEditor : function(cellInfo)\n    {\n      var cellEditor = new qx.ui.form.SelectBox().set({\n        appearance: \"table-editor-selectbox\"\n      });\n\n      var value = cellInfo.value;\n      cellEditor.originalValue = value;\n\n      // check if renderer does something with value\n      var cellRenderer = cellInfo.table.getTableColumnModel().getDataCellRenderer(cellInfo.col);\n      var label = cellRenderer._getContentHtml(cellInfo);\n      if ( value != label ) {\n        value = label;\n      }\n\n      // replace null values\n      if ( value === null ) {\n        value = \"\";\n      }\n\n      var list = this.getListData();\n      if (list)\n      {\n        var item;\n\n        for (var i=0,l=list.length; i<l; i++)\n        {\n          var row = list[i];\n          if ( row instanceof Array ) {\n            item = new qx.ui.form.ListItem(row[0], row[1]);\n            item.setUserData(\"row\", row[2]);\n            if (value == row[2]) {\n              label = row[0];\n            }\n          } else {\n            item = new qx.ui.form.ListItem(row, null);\n            item.setUserData(\"row\", row);\n          }\n          cellEditor.add(item);\n        };\n      }\n\n      if (label != null) {\n        var itemToSelect = cellEditor.getChildrenContainer().findItem(label + \"\");\n      }\n\n      if (itemToSelect) {\n        cellEditor.setSelection([itemToSelect]);\n      } else {\n        cellEditor.resetSelection();\n      }\n      cellEditor.addListener(\"appear\", function() {\n        cellEditor.open();\n      });\n\n      return cellEditor;\n    },\n\n\n    // interface implementation\n    getCellEditorValue : function(cellEditor)\n    {\n      var selection = cellEditor.getSelection();\n      var value = \"\";\n\n      if (selection && selection[0]) {\n        var userValue = selection[0].getUserData(\"row\");\n        value = userValue === undefined ? selection[0].getLabel() : userValue;\n      }\n\n      // validation function will be called with new and old value\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc ) {\n         value = validationFunc( value, cellEditor.originalValue );\n      }\n\n      if (typeof cellEditor.originalValue == \"number\") {\n        value = parseFloat(value);\n      }\n\n      return value;\n    }\n  }\n});\n"
  ]
}