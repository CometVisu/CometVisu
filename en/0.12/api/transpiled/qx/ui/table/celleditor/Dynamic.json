{
  "className": "qx.ui.table.celleditor.Dynamic",
  "packageName": "qx.ui.table.celleditor",
  "name": "Dynamic",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.table.ICellEditorFactory"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 152,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2006 Christian Boulanger\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Christian Boulanger (cboulanger)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>A cell editor factory which can dynamically exchange the cell editor\n based on information retrieved at runtime. This is useful when different\n rows in a column should have different cellEditors based on cell content\n or row meta data. A typical example would be a spreadsheet that has different\n kind of data in one column.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 43,
        "column": 14
      },
      "end": {
        "line": 52,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "cellEditorFactoryFunction {Function?null} the factory function\n    {@link #cellEditorFactoryFunction}.",
          "paramName": "cellEditorFactoryFunction",
          "description": " the factory function\n    {@link #cellEditorFactoryFunction}.",
          "optional": true,
          "defaultValue": "null",
          "type": "Function"
        }
      ]
    }
  },
  "properties": {
    "cellEditorFactoryFunction": {
      "location": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 84,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Function that returns a cellEditorFactory instance which will be\n used for the row that is currently being edited. The function is\n defined like this:\n </p>\n<pre class=\"javascript\">\n myTable.getTableColumnModel().setCellEditorFactory(function(cellInfo){\n\n\n   if (cellInfo.row == 5)\n     return new qx.ui.table.celleditor.CheckBox;\n   else\n     return new qx.ui.table.celleditor.TextField;\n });\n </pre>"
          }
        ]
      },
      "name": "cellEditorFactoryFunction",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Function"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "__cellEditorFactory": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 30
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__infos": {
      "location": {
        "start": {
          "line": 96,
          "column": 4
        },
        "end": {
          "line": 96,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "createCellEditor": {
      "location": {
        "start": {
          "line": 108,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the cell editor based on the cellEditorFactory instance\n returned by the function stored in the cellEditorFactoryFunction\n property. Passes the cellInfo map to the function.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} A map containing the information about the cell to\n      create.",
            "paramName": "cellInfo",
            "description": " A map containing the information about the cell to\n      create.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget}",
            "type": "qx.ui.core.Widget",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.ICellEditorFactory",
      "appearsIn": [
        "qx.ui.table.ICellEditorFactory"
      ]
    },
    "getCellEditorValue": {
      "location": {
        "start": {
          "line": 127,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>interface implementation</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellEditor {qx.ui.core.Widget} The cell editor formally created by\n      {@link #createCellEditor}.",
            "paramName": "cellEditor",
            "description": " The cell editor formally created by\n      {@link #createCellEditor}.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the current value from the editor.",
            "type": "var",
            "description": " the current value from the editor."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.ICellEditorFactory",
      "appearsIn": [
        "qx.ui.table.ICellEditorFactory"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getCellEditorFactoryFunction": {
      "type": "function",
      "name": "getCellEditorFactoryFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>cellEditorFactoryFunction</code>.\n\nFor further details take a look at the property definition: {@link #cellEditorFactoryFunction}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for cellEditorFactoryFunction"
          }
        ]
      }
    },
    "setCellEditorFactoryFunction": {
      "type": "function",
      "name": "setCellEditorFactoryFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>cellEditorFactoryFunction</code>.\n\nFor further details take a look at the property definition: {@link #cellEditorFactoryFunction}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for cellEditorFactoryFunction"
          }
        ]
      }
    },
    "resetCellEditorFactoryFunction": {
      "type": "function",
      "name": "resetCellEditorFactoryFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>cellEditorFactoryFunction</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #cellEditorFactoryFunction}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 149,
        "column": 13
      },
      "end": {
        "line": 151,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n DESTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "descendants": []
}