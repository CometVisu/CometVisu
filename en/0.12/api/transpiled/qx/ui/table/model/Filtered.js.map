{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/model/Filtered.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "model",
    "Simple",
    "construct",
    "__filterTypes",
    "__applyingFilters",
    "Filters",
    "members",
    "__fullArr",
    "getFullArray",
    "_js_in_array",
    "the_needle",
    "the_haystack",
    "the_hay",
    "toString",
    "the_pattern",
    "RegExp",
    "matched",
    "test",
    "addBetweenFilter",
    "filter",
    "value1",
    "value2",
    "target",
    "temp",
    "Array",
    "push",
    "Error",
    "addNumericFilter",
    "addRegex",
    "regex",
    "ignorecase",
    "regexarg",
    "addNotRegex",
    "applyFilters",
    "i",
    "filter_test",
    "compareValue",
    "rowArr",
    "getData",
    "rowLength",
    "length",
    "rowsToHide",
    "row",
    "getValueById",
    "slice",
    "index",
    "includes",
    "_rowArr",
    "data",
    "firstRow",
    "lastRow",
    "firstColumn",
    "lastColumn",
    "getColumnCount",
    "fireDataEvent",
    "hideRows",
    "rowNum",
    "numOfRows",
    "dispatchEvent",
    "kludge",
    "removeRows",
    "resetHiddenRows",
    "setData",
    "lang",
    "clone",
    "clearSorting",
    "destruct",
    "Filtered"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,4BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,KAAZ,CAAkBC,MAD7B;AAIEC,IAAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAKC,SAAL,GAAqB;AACnB,cAAO,SADY;AAEnB,cAAO,SAFY;AAGnB,aAAM,SAHa;AAInB,aAAM,SAJa;AAKnB,cAAO,SALY;AAMnB,cAAO,SANY;AAOnB,mBAAW,SAPQ;AAQnB,oBAAY;AARO,OAArB;AAWA,WAAKC,SAAL,GAAyB,KAAzB;AACA,WAAKC,OAAL,GAAe,EAAf;AAED,KAtBH;AAyBEC,IAAAA,OAAO,EACP;AACEC,MAAAA,SAAS,EAAG,IADd;AAEEH,MAAAA,SAAiB,EAAG,IAFtB;AAGED,MAAAA,SAAa,EAAG,IAHlB;;AAKE;AACJ;AACA;AACA;AACIK,MAAAA,YAAY,EAAE,wBACd;AACI,eAAO,KAAKD,SAAZ;AACH,OAZH;;AAcE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,MAAAA,YAAY,EAAG,sBAASC,UAAT,EAAqBC,YAArB,EACf;AACE,YAAIC,OAAO,GAAGD,YAAY,CAACE,QAAb,EAAd;;AAEA,YAAID,OAAO,IAAI,EAAf,EAAmB;AACjB,iBAAO,KAAP;AACD;;AAED,YAAIE,WAAW,GAAG,IAAIC,MAAJ,CAAWL,UAAX,EAAuB,GAAvB,CAAlB;AACA,YAAIM,OAAO,GAAGF,WAAW,CAACG,IAAZ,CAAiBN,YAAjB,CAAd;AACA,eAAOK,OAAP;AACD,OAjCH;;AAoCE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,MAAAA,gBAAgB,EAAG,0BAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EACnB;AACE,YAAI,KAAKnB,SAAL,CAAmBgB,MAAnB,MAA+B,SAA/B,IAA4CG,MAAM,IAAI,IAA1D,EACA;AACE,cAAIF,MAAM,IAAI,IAAV,IAAkBC,MAAM,IAAI,IAAhC,EAAsC;AACpC,gBAAIE,IAAI,GAAG,IAAIC,KAAJ,CAAUL,MAAV,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,MAAlC,CAAX;AACD;AACF;;AAED,YAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChB,eAAKlB,OAAL,CAAaoB,IAAb,CAAkBF,IAAlB;AACD,SAFD,MAEO;AACL,gBAAM,IAAIG,KAAJ,CAAU,iDAAV,CAAN;AACD;AACF,OAtEH;;AAyEE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,gBAAgB,EAAG,0BAASR,MAAT,EAAiBC,MAAjB,EAAyBE,MAAzB,EACnB;AACE,YAAIC,IAAI,GAAG,IAAX;;AAEA,YAAI,KAAKpB,SAAL,CAAmBgB,MAAnB,MAA+B,SAA/B,IAA4CG,MAAM,IAAI,IAA1D,EACA;AACE,cAAIF,MAAM,IAAI,IAAd,EAAoB;AAClBG,YAAAA,IAAI,GAAG,CAACJ,MAAD,EAASC,MAAT,EAAiBE,MAAjB,CAAP;AACD;AACF;;AAED,YAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChB,eAAKlB,OAAL,CAAaoB,IAAb,CAAkBF,IAAlB;AACD,SAFD,MAEO;AACL,gBAAM,IAAIG,KAAJ,CAAU,iDAAV,CAAN;AACD;AACF,OA1GH;;AA6GE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,MAAAA,QAAQ,EAAG,kBAASC,KAAT,EAAgBP,MAAhB,EAAwBQ,UAAxB,EACX;AACE,YAAIC,QAAJ;;AACA,YAAID,UAAJ,EAAgB;AACdC,UAAAA,QAAQ,GAAE,IAAV;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,GAAE,GAAV;AACD;;AAED,YAAIF,KAAK,IAAI,IAAT,IAAiBP,MAAM,IAAI,IAA/B,EAAqC;AACnC,cAAIC,IAAI,GAAG,IAAIC,KAAJ,CAAU,OAAV,EAAmBK,KAAnB,EAA0BP,MAA1B,EAAkCS,QAAlC,CAAX;AACD;;AAED,YAAIR,IAAI,IAAI,IAAZ,EAAkB;AAChB,eAAKlB,OAAL,CAAaoB,IAAb,CAAkBF,IAAlB;AACD,SAFD,MAEO;AACL,gBAAM,IAAIG,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,OA/IH;;AAkJE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIM,MAAAA,WAAW,EAAG,qBAASH,KAAT,EAAgBP,MAAhB,EAAwBQ,UAAxB,EACd;AACE,YAAIC,QAAJ;;AACA,YAAID,UAAJ,EAAgB;AACdC,UAAAA,QAAQ,GAAE,IAAV;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,GAAE,GAAV;AACD;;AAED,YAAIF,KAAK,IAAI,IAAT,IAAiBP,MAAM,IAAI,IAA/B,EAAqC;AACnC,cAAIC,IAAI,GAAG,IAAIC,KAAJ,CAAU,UAAV,EAAsBK,KAAtB,EAA6BP,MAA7B,EAAqCS,QAArC,CAAX;AACD;;AAED,YAAIR,IAAI,IAAI,IAAZ,EAAkB;AAChB,eAAKlB,OAAL,CAAaoB,IAAb,CAAkBF,IAAlB;AACD,SAFD,MAEO;AACL,gBAAM,IAAIG,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,OApLH;;AAuLG;AACL;AACA;AACIO,MAAAA,YAAY,EAAG,wBACf;AACE,YAAIC,CAAJ;AACA,YAAIC,WAAJ;AACA,YAAIC,YAAJ;AACA,YAAIC,MAAM,GAAG,KAAKC,OAAL,EAAb;AACA,YAAIC,SAAS,GAAGF,MAAM,CAACG,MAAvB;AACA,YAAIC,UAAU,GAAG,EAAjB;;AAEA,aAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,SAAxB,EAAmCG,GAAG,EAAtC,EACA;AACEP,UAAAA,WAAW,GAAG,KAAd;;AACA,eAAKD,CAAL,IAAU,KAAK7B,OAAf,EACA;AAEE,gBAAI,KAAKF,SAAL,CAAmB,KAAKE,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAnB,MAA2C,SAA/C,EACA;AACEE,cAAAA,YAAY,GAAG,KAAKO,YAAL,CAAkB,KAAKtC,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAlB,EAAsCQ,GAAtC,CAAf;;AACA,sBAAO,KAAKrC,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAP;AAEA,qBAAK,IAAL;AACE,sBAAIE,YAAY,IAAI,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAApB,EAAwC;AACtCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;;AAEF,qBAAK,IAAL;AACE,sBAAIC,YAAY,IAAI,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAApB,EAAwC;AACtCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;;AAEF,qBAAK,GAAL;AACE,sBAAIC,YAAY,GAAG,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAnB,EAAuC;AACrCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;;AAEF,qBAAK,GAAL;AACE,sBAAIC,YAAY,GAAG,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAnB,EAAuC;AACrCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;;AAEF,qBAAK,IAAL;AACE,sBAAIC,YAAY,IAAI,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAApB,EAAwC;AACtCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;;AAEF,qBAAK,IAAL;AACE,sBAAIC,YAAY,IAAI,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAApB,EAAwC;AACtCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;AA1CF;AA4CD,aA/CD,MAgDK,IAAI,KAAKhC,SAAL,CAAmB,KAAKE,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAnB,MAA2C,SAA/C,EACL;AACEE,cAAAA,YAAY,GAAG,KAAKO,YAAL,CAAkB,KAAKtC,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAlB,EAAsCQ,GAAtC,CAAf;;AAEA,sBAAO,KAAKrC,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAP;AAEA,qBAAK,SAAL;AACE,sBAAIE,YAAY,IAAI,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAhB,IACAE,YAAY,IAAI,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CADpB,EACwC;AACtCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;;AAEF,qBAAK,UAAL;AACE,sBAAIC,YAAY,GAAG,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAf,IACAE,YAAY,GAAG,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CADnB,EACuC;AACrCC,oBAAAA,WAAW,GAAG,IAAd;AACD;;AAED;AAhBF;AAkBD,aAtBI,MAuBA,IAAI,KAAK9B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,MAAuB,OAA3B,EACL;AACEE,cAAAA,YAAY,GAAG,KAAKO,YAAL,CAAkB,KAAKtC,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAlB,EAAsCQ,GAAtC,CAAf;AAEA,kBAAI5B,WAAW,GAAG,IAAIC,MAAJ,CAAW,KAAKV,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAX,EAA+B,KAAK7B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAA/B,CAAlB;AACAC,cAAAA,WAAW,GAAGrB,WAAW,CAACG,IAAZ,CAAiBmB,YAAjB,CAAd;AACD,aANI,MAOA,IAAI,KAAK/B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,MAAuB,UAA3B,EACL;AACEE,cAAAA,YAAY,GAAG,KAAKO,YAAL,CAAkB,KAAKtC,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAlB,EAAsCQ,GAAtC,CAAf;AAEA,kBAAI5B,WAAW,GAAG,IAAIC,MAAJ,CAAW,KAAKV,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAAX,EAA+B,KAAK7B,OAAL,CAAa6B,CAAb,EAAgB,CAAhB,CAA/B,CAAlB;AACAC,cAAAA,WAAW,GAAG,CAACrB,WAAW,CAACG,IAAZ,CAAiBmB,YAAjB,CAAf;AACD;;AAED,gBAAID,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;AACF,WA9FH,CAgGE;;;AACA,cAAIA,WAAW,KAAK,IAApB,EAA0B;AACxBM,YAAAA,UAAU,CAAChB,IAAX,CAAgBiB,GAAhB;AACD;AACF;;AAED,YAAI,CAAC,KAAKtC,SAAV,EAA6B;AAC3B,eAAKG,SAAL,GAAiB8B,MAAM,CAACO,KAAP,CAAa,CAAb,CAAjB;AACA,eAAKxC,SAAL,GAAyB,IAAzB;AACD;;AAEDiC,QAAAA,MAAM,GAAGA,MAAM,CAAClB,MAAP,CAAc,UAASuB,GAAT,EAAcG,KAAd,EAAqB;AAC1C,iBAAO,CAACJ,UAAU,CAACK,QAAX,CAAoBD,KAApB,CAAR;AACD,SAFQ,CAAT;AAIA,aAAKE,OAAL,GAAeV,MAAf;AAEC,YAAIW,IAAI,GAAG;AACTC,UAAAA,QAAQ,EAAM,CADL;AAETC,UAAAA,OAAO,EAAO,KAAKH,OAAL,CAAaP,MAAb,GAAsB,CAF3B;AAGTW,UAAAA,WAAW,EAAG,CAHL;AAITC,UAAAA,UAAU,EAAI,KAAKC,cAAL,KAAwB;AAJ7B,SAAX,CA1HH,CAiIG;;AACA,aAAKC,aAAL,CAAmB,aAAnB,EAAkCN,IAAlC;AACF,OA9TH;;AAiUE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIO,MAAAA,QAAQ,EAAG,kBAASC,MAAT,EAAiBC,SAAjB,EAA4BC,aAA5B,EACX;AACE,YAAIrB,MAAM,GAAG,KAAKC,OAAL,EAAb;AAEAoB,QAAAA,aAAa,GAAIA,aAAa,IAAI,IAAjB,GAAwBA,aAAxB,GAAwC,IAAzD;;AACA,YAAI,CAAC,KAAKtD,SAAV,EAA6B;AAC3B,eAAKG,SAAL,GAAiB8B,MAAM,CAACO,KAAP,CAAa,CAAb,CAAjB;AACA,eAAKxC,SAAL,GAAyB,IAAzB;AACD;;AAED,YAAIqD,SAAS,IAAI,IAAb,IAAqBA,SAAS,GAAG,CAArC,EAAwC;AACtCA,UAAAA,SAAS,GAAG,CAAZ;AACD;;AAED,aAAK,IAAIE,MAAM,GAAGH,MAAlB,EACKG,MAAM,GAAEtB,MAAM,CAACG,MAAP,GAAgBiB,SAD7B,EAEKE,MAAM,EAFX,EAEe;AACbtB,UAAAA,MAAM,CAACsB,MAAD,CAAN,GAAiBtB,MAAM,CAACsB,MAAM,GAAGF,SAAV,CAAvB;AACD;;AACD,aAAKG,UAAL,CAAgBD,MAAhB,EAAwBF,SAAxB,EAlBF,CAoBE;;AACA,YAAIC,aAAJ,EACA;AACE,cAAIV,IAAI,GACR;AACEC,YAAAA,QAAQ,EAAM,CADhB;AAEEC,YAAAA,OAAO,EAAOb,MAAM,CAACG,MAAP,GAAgB,CAFhC;AAGEW,YAAAA,WAAW,EAAG,CAHhB;AAIEC,YAAAA,UAAU,EAAI,KAAKC,cAAL,KAAwB;AAJxC,WADA;AAQA,eAAKC,aAAL,CAAmB,aAAnB,EAAkCN,IAAlC;AACD;AACF,OAhXH;;AAmXE;AACJ;AACA;AACA;AACA;AACIa,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAI,CAAC,KAAKtD,SAAV,EAAqB;AACnB;AACA;AACD;;AACD,aAAKF,OAAL,GAAe,EAAf;AAEA,aAAKyD,OAAL,CAAavE,EAAE,CAACwE,IAAH,CAAQvC,KAAR,CAAcwC,KAAd,CAAoB,KAAKzD,SAAzB,CAAb;AACD,OAjYH;AAoYE;AACAuD,MAAAA,OAAO,EAAG,iBAASzB,MAAT,EAAiB4B,YAAjB,EACV;AACE,aAAK1D,SAAL,GAAiBhB,EAAE,CAACwE,IAAH,CAAQvC,KAAR,CAAcwC,KAAd,CAAoB3B,MAApB,CAAjB;AACA,aAAKhC,OAAL,GAAe,EAAf;AACA,qEAAqBgC,MAArB,EAA6B4B,YAA7B;AACD;AA1YH,KA1BF;AAwaEC,IAAAA,QAAQ,EAAG,oBACX;AACE,WAAK3D,SAAL,GAAiB,KAAKJ,SAAL,GAAqB,KAAKE,OAAL,GAAe,IAArD;AACD;AA3aH,GADA;AA3EAd,EAAAA,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,KAAZ,CAAkBmE,QAAlB,CAA2BzE,aAA3B,GAA2CA,aAA3C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 by Tartan Solutions, Inc, http://www.tartansolutions.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Dan Hummon\n\n************************************************************************ */\n\n/**\n * A filtered table model to provide support for hiding and filtering table\n * rows. Any rows that match any applied filters will be hidden.\n\n<pre class='javascript'>\nvar model = new qx.ui.table.model.Filtered();\nmodel.setColumns([\"Login\", \"Name\", \"Email\"], [\"login\", \"name\", \"email\"]);\n\nvar table = new qx.ui.table.Table(model);\n\nvar data = [{\n  login : \"darthvader\",\n  name : \"Darth Vader\",\n  email : \"darthvader@tatooine.org\"\n}, {\n  login : \"anakin\",\n  name : \"Anakin Skywalker\",\n  email : \"anakin@skywalker.org\"\n}, {\n  login : \"luke\",\n  name : \"Luke Skywalker\",\n  email : \"luke@tatooine.org\"\n}, {\n  login : \"obi-wan\",\n  name : \"Obi-Wan Kenobi\",\n  email : \"obiwan@jedi.org\"\n}, {\n  login : \"rey\",\n  name : \"Rey\",\n  email : \"rey@jakku.sw\"\n}];\n\nmodel.setDataAsMapArray(data);\n\nthis.getRoot().add(table);\n\nvar search = new qx.ui.form.TextField();\nsearch.set({\n  liveUpdate : true,\n  placeholder : \"Search login\"\n});\n\nsearch.addListener(\"changeValue\", function(e) {\n  var value = e.getData();\n\n  model.resetHiddenRows();\n  model.addNotRegex(value, \"login\", true);\n  model.applyFilters();\n});\n\nthis.getRoot().add(search, {top : 500, left : 10});\n</pre>\n *\n * @deprecated {6.0} You should use\n * <a href='http://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter' target='_blank'>Array.filter</a>\n * method to filter the table model\n */\nqx.Class.define(\"qx.ui.table.model.Filtered\",\n{\n  extend : qx.ui.table.model.Simple,\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__filterTypes = {\n      \"==\" : \"numeric\",\n      \"!=\" : \"numeric\",\n      \">\" : \"numeric\",\n      \"<\" : \"numeric\",\n      \"<=\" : \"numeric\",\n      \">=\" : \"numeric\",\n      \"between\": \"between\",\n      \"!between\": \"between\"\n    };\n\n    this.__applyingFilters = false;\n    this.Filters = [];\n\n  },\n\n\n  members :\n  {\n    __fullArr : null,\n    __applyingFilters : null,\n    __filterTypes : null,\n\n    /**\n     * Function to get the full array of the filtered model\n     * @return {Array} the full array of model (with no changes)\n     */\n    getFullArray: function ()\n    {\n        return this.__fullArr;\n    },\n\n    /**\n     * Whether the given string (needle) is in the array (haystack)\n     *\n     * @param the_needle {String} String to search\n     * @param the_haystack {Array} Array, which should be searched\n     * @return {Boolean} whether the search string was found.\n     * @deprecated {6.0}\n     */\n    _js_in_array : function(the_needle, the_haystack)\n    {\n      var the_hay = the_haystack.toString();\n\n      if (the_hay == '') {\n        return false;\n      }\n\n      var the_pattern = new RegExp(the_needle, 'g');\n      var matched = the_pattern.test(the_haystack);\n      return matched;\n    },\n\n\n    /**\n     * The addBetweenFilter method is used to add a between filter to the\n     * table model.\n     *\n     * @param filter {String}\n     *    The type of filter. Accepted strings are \"between\" and \"!between\".\n     *\n     * @param value1 {Integer}\n     *    The first value to compare against.\n     *\n     * @param value2 {Integer}\n     *    The second value to compare against.\n     *\n     * @param target {String}\n     *    The text value of the column to compare against.\n     *\n     *\n     * @throws {Error} If the filter can not recognized or one of the values\n     * is null.\n     */\n    addBetweenFilter : function(filter, value1, value2, target)\n    {\n      if (this.__filterTypes[filter] === \"between\" && target != null)\n      {\n        if (value1 != null && value2 != null) {\n          var temp = new Array(filter, value1, value2, target);\n        }\n      }\n\n      if (temp != null) {\n        this.Filters.push(temp);\n      } else {\n        throw new Error(\"Filter not recognized or value1/value2 is null!\");\n      }\n    },\n\n\n    /**\n     * The addNumericFilter method is used to add a basic numeric filter to\n     * the table model.\n     *\n     * @param filter {String}\n     *    The type of filter. Accepted strings are:\n     *    \"==\", \"!=\", \">\", \"<\", \">=\", and \"<=\".\n     *\n     * @param value1 {Integer}\n     *    The value to compare against.\n     *\n     * @param target {String}\n     *    The text value of the column to compare against.\n     *\n     *\n     * @throws {Error} If the filter can not recognized or the target is null.\n     */\n    addNumericFilter : function(filter, value1, target)\n    {\n      var temp = null;\n\n      if (this.__filterTypes[filter] === \"numeric\" && target != null)\n      {\n        if (value1 != null) {\n          temp = [filter, value1, target];\n        }\n      }\n\n      if (temp != null) {\n        this.Filters.push(temp);\n      } else {\n        throw new Error(\"Filter not recognized: value or target is null!\");\n      }\n    },\n\n\n    /**\n     * The addRegex method is used to add a regular expression filter to the\n     * table model.\n     *\n     * @param regex {String}\n     *    The regular expression to match against.\n     *\n     * @param target {String}\n     *    The text value of the column to compare against.\n     *\n     * @param ignorecase {Boolean}\n     *    If true, the regular expression will ignore case.\n     *\n     *\n     * @throws {Error} If the regex is not valid.\n     */\n    addRegex : function(regex, target, ignorecase)\n    {\n      var regexarg;\n      if (ignorecase) {\n        regexarg ='gi';\n      } else {\n        regexarg ='g';\n      }\n\n      if (regex != null && target != null) {\n        var temp = new Array(\"regex\", regex, target, regexarg);\n      }\n\n      if (temp != null) {\n        this.Filters.push(temp);\n      } else {\n        throw new Error(\"regex cannot be null!\");\n      }\n    },\n\n\n    /**\n     * The addNotRegex method is used to add a regular expression filter to the\n     * table model and filter cells that do not match.\n     *\n     * @param regex {String}\n     *    The regular expression to match against.\n     *\n     * @param target {String}\n     *    The text value of the column to compare against.\n     *\n     * @param ignorecase {Boolean}\n     *    If true, the regular expression will ignore case.\n     *\n     *\n     * @throws {Error} If the regex is null.\n     */\n    addNotRegex : function(regex, target, ignorecase)\n    {\n      var regexarg;\n      if (ignorecase) {\n        regexarg ='gi';\n      } else {\n        regexarg ='g';\n      }\n\n      if (regex != null && target != null) {\n        var temp = new Array(\"notregex\", regex, target, regexarg);\n      }\n\n      if (temp != null) {\n        this.Filters.push(temp);\n      } else {\n        throw new Error(\"notregex cannot be null!\");\n      }\n    },\n\n\n     /**\n     * The applyFilters method is called to apply filters to the table model.\n     */\n    applyFilters : function()\n    {\n      var i;\n      var filter_test;\n      var compareValue;\n      var rowArr = this.getData();\n      var rowLength = rowArr.length;\n      var rowsToHide = [];\n\n      for (var row = 0; row < rowLength; row++)\n      {\n        filter_test = false;\n        for (i in this.Filters)\n        {\n\n          if (this.__filterTypes[this.Filters[i][0]] === \"numeric\")\n          {\n            compareValue = this.getValueById(this.Filters[i][2], row);\n            switch(this.Filters[i][0])\n            {\n            case \"==\":\n              if (compareValue == this.Filters[i][1]) {\n                filter_test = true;\n              }\n\n              break;\n\n            case \"!=\":\n              if (compareValue != this.Filters[i][1]) {\n                filter_test = true;\n              }\n\n              break;\n\n            case \">\":\n              if (compareValue > this.Filters[i][1]) {\n                filter_test = true;\n              }\n\n              break;\n\n            case \"<\":\n              if (compareValue < this.Filters[i][1]) {\n                filter_test = true;\n              }\n\n              break;\n\n            case \">=\":\n              if (compareValue >= this.Filters[i][1]) {\n                filter_test = true;\n              }\n\n              break;\n\n            case \"<=\":\n              if (compareValue <= this.Filters[i][1]) {\n                filter_test = true;\n              }\n\n              break;\n            }\n          }\n          else if (this.__filterTypes[this.Filters[i][0]] === \"between\")\n          {\n            compareValue = this.getValueById(this.Filters[i][3], row);\n\n            switch(this.Filters[i][0])\n            {\n            case \"between\":\n              if (compareValue >= this.Filters[i][1] &&\n                  compareValue <= this.Filters[i][2]) {\n                filter_test = true;\n              }\n\n              break;\n\n            case \"!between\":\n              if (compareValue < this.Filters[i][1] ||\n                  compareValue > this.Filters[i][2]) {\n                filter_test = true;\n              }\n\n              break;\n            }\n          }\n          else if (this.Filters[i][0] === \"regex\")\n          {\n            compareValue = this.getValueById(this.Filters[i][2], row);\n\n            var the_pattern = new RegExp(this.Filters[i][1], this.Filters[i][3]);\n            filter_test = the_pattern.test(compareValue);\n          }\n          else if (this.Filters[i][0] === \"notregex\")\n          {\n            compareValue = this.getValueById(this.Filters[i][2], row);\n\n            var the_pattern = new RegExp(this.Filters[i][1], this.Filters[i][3]);\n            filter_test = !the_pattern.test(compareValue);\n          }\n\n          if (filter_test === true) {\n            break;\n          }\n        }\n\n        // instead of hiding a single row, push it into the hiding-store for later hiding.\n        if (filter_test === true) {\n          rowsToHide.push(row);\n        }\n      }\n\n      if (!this.__applyingFilters) {\n        this.__fullArr = rowArr.slice(0);\n        this.__applyingFilters = true;\n      }\n\n      rowArr = rowArr.filter(function(row, index) {\n        return !rowsToHide.includes(index);\n      });\n\n      this._rowArr = rowArr;\n\n       var data = {\n         firstRow    : 0,\n         lastRow     : this._rowArr.length - 1,\n         firstColumn : 0,\n         lastColumn  : this.getColumnCount() - 1\n       };\n\n       // Inform the listeners\n       this.fireDataEvent(\"dataChanged\", data);\n    },\n\n\n    /**\n     * Hides a specified number of rows.\n     *\n     * @param rowNum {Integer}\n     *    Index of the first row to be hidden in the table.\n     *\n     * @param numOfRows {Integer}\n     *    The number of rows to be hidden sequentially after rowNum.\n     *\n     * @param dispatchEvent {Boolean?true} Whether a model change event should\n     *    be fired.\n     *\n     */\n    hideRows : function(rowNum, numOfRows, dispatchEvent)\n    {\n      var rowArr = this.getData();\n\n      dispatchEvent = (dispatchEvent != null ? dispatchEvent : true);\n      if (!this.__applyingFilters) {\n        this.__fullArr = rowArr.slice(0);\n        this.__applyingFilters = true;\n      }\n\n      if (numOfRows == null || numOfRows < 1) {\n        numOfRows = 1;\n      }\n\n      for (var kludge = rowNum;\n           kludge<(rowArr.length - numOfRows);\n           kludge++) {\n        rowArr[kludge] = rowArr[kludge + numOfRows];\n      }\n      this.removeRows(kludge, numOfRows);\n\n      // Inform the listeners\n      if (dispatchEvent)\n      {\n        var data =\n        {\n          firstRow    : 0,\n          lastRow     : rowArr.length - 1,\n          firstColumn : 0,\n          lastColumn  : this.getColumnCount() - 1\n        };\n\n        this.fireDataEvent(\"dataChanged\", data);\n      }\n    },\n\n\n    /**\n     * Return the table to the original state with all rows shown and clears\n     * all filters.\n     *\n     */\n    resetHiddenRows : function()\n    {\n      if (!this.__fullArr) {\n        // nothing to reset\n        return;\n      }\n      this.Filters = [];\n\n      this.setData(qx.lang.Array.clone(this.__fullArr));\n    },\n\n\n    // overridden\n    setData : function(rowArr, clearSorting)\n    {\n      this.__fullArr = qx.lang.Array.clone(rowArr);\n      this.Filters = [];\n      this.base(arguments, rowArr, clearSorting);\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__fullArr = this.__filterTypes = this.Filters = null;\n  }\n});\n"
  ]
}