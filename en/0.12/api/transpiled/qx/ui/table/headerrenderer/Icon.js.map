{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/table/headerrenderer/Icon.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "headerrenderer",
    "Default",
    "construct",
    "iconUrl",
    "tooltip",
    "setIconUrl",
    "setToolTip",
    "properties",
    "check",
    "init",
    "members",
    "updateHeaderCell",
    "cellInfo",
    "cellWidget",
    "setIcon",
    "getIconUrl",
    "Icon"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;AAIAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,cAAZ,CAA2BC,OADtC;;AAME;;;;;;AAOA;;;;;AAKAC,IAAAA,SAAS,EAAG,mBAASC,OAAT,EAAkBC,OAAlB,EACZ;AACE;;AAEA,UAAID,OAAO,IAAI,IAAf,EAAqB;AACnBA,QAAAA,OAAO,GAAG,EAAV;AACD;;AACD,WAAKE,UAAL,CAAgBF,OAAhB;;AAEA,UAAIC,OAAJ,EAAa;AACX,aAAKE,UAAL,CAAgBF,OAAhB;AACD;AACF,KA9BH;;AAmCE;;;;;AAMAG,IAAAA,UAAU,EACV;AACE;;;AAGAJ,MAAAA,OAAO,EACP;AACEK,QAAAA,KAAK,EAAG,QADV;AAEEC,QAAAA,IAAI,EAAG;AAFT;AALF,KA1CF;;AAwDE;;;;;AAMAC,IAAAA,OAAO,EACP;AACE;AACAC,MAAAA,gBAAgB,EAAG,0BAASC,QAAT,EAAmBC,UAAnB,EACnB;AACE,mFAAqBD,QAArB,EAA+BC,UAA/B;AACAA,QAAAA,UAAU,CAACC,OAAX,CAAmB,KAAKC,UAAL,EAAnB;AACD;AANH;AA/DF,GADA;AAvBAxB,EAAAA,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,cAAZ,CAA2BgB,IAA3B,CAAgCtB,aAAhC,GAAgDA,aAAhD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Carsten Lergenmueller (carstenl)\n\n************************************************************************ */\n\n/**\n * A header cell renderer which renders an icon (only). The icon cannot be combined\n * with text.\n */\nqx.Class.define(\"qx.ui.table.headerrenderer.Icon\",\n{\n  extend : qx.ui.table.headerrenderer.Default,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * @param iconUrl {String} URL to the icon to show\n   * @param tooltip {String ? \"\"} Text of the tooltip to show if the pointer hovers over the\n   *                             icon\n   */\n  construct : function(iconUrl, tooltip)\n  {\n    this.base(arguments);\n\n    if (iconUrl == null) {\n      iconUrl = \"\";\n    }\n    this.setIconUrl(iconUrl);\n\n    if (tooltip) {\n      this.setToolTip(tooltip);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * URL of the icon to show\n     */\n    iconUrl :\n    {\n      check : \"String\",\n      init : \"\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    updateHeaderCell : function(cellInfo, cellWidget)\n    {\n      this.base(arguments, cellInfo, cellWidget);\n      cellWidget.setIcon(this.getIconUrl());\n    }\n  }\n});\n"
  ]
}