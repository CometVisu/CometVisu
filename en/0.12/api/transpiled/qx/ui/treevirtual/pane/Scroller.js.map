{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/treevirtual/pane/Scroller.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "pane",
    "Scroller",
    "include",
    "core",
    "scroll",
    "MScrollBarFactory",
    "members",
    "_onDbltapPane",
    "e",
    "pageX",
    "getDocumentLeft",
    "pageY",
    "getDocumentTop",
    "col",
    "_getColumnForPageX",
    "row",
    "_getRowForPagePos",
    "tree",
    "getTable",
    "tableModel",
    "getTableModel",
    "treevirtual",
    "SimpleTreeDataModel",
    "getTreeColumn",
    "x",
    "getViewportLeft",
    "latitude",
    "node",
    "getDataModel",
    "getNode",
    "buttonPos",
    "getOpenCloseButtonPosition",
    "left",
    "width"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,IAAZ,CAAiBC,QAD5B;AAEEC,IAAAA,OAAO,EAAG,CAACX,EAAE,CAACO,EAAH,CAAMK,IAAN,CAAWC,MAAX,CAAkBC,iBAAnB,CAFZ;;AAIE;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACA;AACA;AACIC,MAAAA,aAAa,EAAG,uBAASC,CAAT,EAChB;AACE,YAAIC,KAAK,GAAGD,CAAC,CAACE,eAAF,EAAZ;AACA,YAAIC,KAAK,GAAGH,CAAC,CAACI,cAAF,EAAZ;;AACA,YAAIC,GAAG,GAAG,KAAKC,kBAAL,CAAwBL,KAAxB,CAAV;;AACA,YAAIM,GAAG,GAAG,KAAKC,iBAAL,CAAuBP,KAAvB,EAA8BE,KAA9B,CAAV;;AAEA,YAAIE,GAAG,KAAK,IAAR,IAAgBE,GAAG,KAAK,IAA5B,EAAkC;AAChC;AACA,cAAIE,IAAI,GAAG,KAAKC,QAAL,EAAX;AACA,cAAIC,UAAU,GAAGF,IAAI,CAACG,aAAL,EAAjB;;AAEA,cAAID,UAAU,YAAY5B,EAAE,CAACO,EAAH,CAAMuB,WAAN,CAAkBC,mBAAxC,IAA+DT,GAAG,KAAKM,UAAU,CAACI,aAAX,EAA3E,EAAuG;AACrG;AACA;AACA,gBAAIC,CAAC,GAAGhB,CAAC,CAACiB,eAAF,EAAR;AACA,gBAAIC,QAAQ,GAAG,CAAf,CAJqG,CAMrG;;AACA,gBAAIC,IAAI,GAAGV,IAAI,CAACW,YAAL,GAAoBC,OAApB,CAA4Bd,GAA5B,CAAX;AAEA,gBAAIe,SAAS,GAAGb,IAAI,CAACc,0BAAL,CAAgCJ,IAAhC,CAAhB;;AACA,gBAAIH,CAAC,IAAIM,SAAS,CAACE,IAAV,GAAiBN,QAAtB,IAAkCF,CAAC,IAAIM,SAAS,CAACE,IAAV,GAAiBF,SAAS,CAACG,KAA3B,GAAmCP,QAA9E,EAAwF;AACtF;AACD;AACF;AACF;;AACD,gFAAqBlB,CAArB;AACD;AAlCH;AAXF,GADA;AAxBAjB,EAAAA,EAAE,CAACO,EAAH,CAAMuB,WAAN,CAAkBrB,IAAlB,CAAuBC,QAAvB,CAAgCP,aAAhC,GAAgDA,aAAhD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2020 Tartan Solutions, Inc, http://www.tartansolutions.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Patrick Buxton\n\n************************************************************************ */\n\n/**\n * An overridden pane Scroller for the treevirtual to allow capture of\n * the mouse dblclick event in the tree column. To prevent starting an\n * edit when the tree node editing is turned on and the open/close button\n * is tapped quickly\n */\nqx.Class.define(\"qx.ui.treevirtual.pane.Scroller\",\n{\n  extend : qx.ui.table.pane.Scroller,\n  include : [qx.ui.core.scroll.MScrollBarFactory],\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Event handler. Called when the user double tapped a pointer button over the pane.\n     *\n     * @param e {Map} the event.\n     */\n    _onDbltapPane : function(e)\n    {\n      var pageX = e.getDocumentLeft();\n      var pageY = e.getDocumentTop();\n      var col = this._getColumnForPageX(pageX);\n      var row = this._getRowForPagePos(pageX, pageY);\n\n      if (col !== null && row !== null) {\n        // check if the user is tapping on the open/close button of the tree\n        var tree = this.getTable();\n        var tableModel = tree.getTableModel();\n\n        if (tableModel instanceof qx.ui.treevirtual.SimpleTreeDataModel && col === tableModel.getTreeColumn()) {\n          // Was the click on the open/close button? We get the position and add a bit of\n          // latitude to that\n          var x = e.getViewportLeft();\n          var latitude = 2;\n\n          // Get the node to which this event applies\n          var node = tree.getDataModel().getNode(row);\n\n          var buttonPos = tree.getOpenCloseButtonPosition(node);\n          if (x >= buttonPos.left - latitude && x <= buttonPos.left + buttonPos.width + latitude) {\n            return;\n          }\n        }\n      }\n      this.base(arguments, e);\n    }\n  }\n});\n"
  ]
}