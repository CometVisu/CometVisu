{
  "className": "qx.ui.treevirtual.SelectionManager",
  "packageName": "qx.ui.treevirtual",
  "name": "SelectionManager",
  "superClass": "qx.ui.table.selection.Manager",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 223,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2007 Derrell Lipman\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Derrell Lipman (derrell)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>A selection manager. This is a helper class that handles all selection\n related events and updates a SelectionModel.\n <p>\n This Selection Manager differs from its superclass in that we do not want\n rows to be selected when moving around with the keyboard.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 37,
        "column": 14
      },
      "end": {
        "line": 42,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "table {qx.ui.table.Table}\n    The table whose selections are being managed",
          "paramName": "table",
          "description": "\n    The table whose selections are being managed",
          "type": "qx.ui.table.Table"
        }
      ]
    }
  },
  "members": {
    "__table": {
      "location": {
        "start": {
          "line": 48,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getTable": {
      "location": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for the table being managed</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.table.Table}\n   Table being managed",
            "type": "qx.ui.table.Table",
            "description": "\n   Table being managed"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_handleSelectEvent": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 189,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles a select event.  First we determine if the click was on the\n open/close button and toggle the opened/closed state as necessary.\n Then, if the click was not on the open/close button or if the table's\n \"openCloseClickSelectsRow\" property so indicates, call our superclass to\n handle the actual row selection.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index the event is pointing at.",
            "paramName": "index",
            "description": " the index the event is pointing at.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "evt {Map} the mouse event.",
            "paramName": "evt",
            "description": " the mouse event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "appearsIn": [
        "qx.ui.table.selection.Manager"
      ]
    },
    "_handleExtendedClick": {
      "location": {
        "start": {
          "line": 214,
          "column": 4
        },
        "end": {
          "line": 217,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle a mouse click event that is not normally handled by the simple\n tree.  This is intended for more sophisticated trees where clicks in\n different places, e.g. on various icons or on the label itself, should\n be handled specially.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "tree {qx.ui.treevirtual.TreeVirtual}\n   The tree on which the event has occurred.",
            "paramName": "tree",
            "description": "\n   The tree on which the event has occurred.",
            "type": "qx.ui.treevirtual.TreeVirtual"
          },
          {
            "name": "@param",
            "body": "evt {Map}\n   The mouse event.  Of particular interest is evt.getViewportLeft()\n   which is the horizontal offset from the left border of the click.",
            "paramName": "evt",
            "description": "\n   The mouse event.  Of particular interest is evt.getViewportLeft()\n   which is the horizontal offset from the left border of the click.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "node {Map}\n   The node which the tree row is displaying",
            "paramName": "node",
            "description": "\n   The node which the tree row is displaying",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "left {Integer}\n   The offset from the left, of the beginning of the tree column.",
            "paramName": "left",
            "description": "\n   The offset from the left, of the beginning of the tree column.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}\n   <i>true</i> if the row should be prevented from being selected;\n   <i>false</i> otherwise.",
            "type": "Boolean",
            "description": "\n   <i>true</i> if the row should be prevented from being selected;\n   <i>false</i> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "reset"
    },
    "getSelectionModel": {
      "type": "function",
      "name": "getSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>selectionModel</code>.\n\nFor further details take a look at the property definition: {@link #selectionModel}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.table.selection.Model",
            "desc": "Returns the value for selectionModel"
          }
        ]
      }
    },
    "setSelectionModel": {
      "type": "function",
      "name": "setSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>selectionModel</code>.\n\nFor further details take a look at the property definition: {@link #selectionModel}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.table.selection.Model",
            "paramName": "value",
            "desc": "Value for selectionModel"
          }
        ]
      }
    },
    "resetSelectionModel": {
      "type": "function",
      "name": "resetSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.selection.Manager",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 220,
        "column": 13
      },
      "end": {
        "line": 222,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}