{
  "className": "qx.ui.treevirtual.TreeVirtual",
  "packageName": "qx.ui.treevirtual",
  "name": "TreeVirtual",
  "superClass": "qx.ui.table.Table",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 896,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2007 Derrell Lipman\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Derrell Lipman (derrell)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>A \"virtual\" tree\n </p>\n<p>\n   A number of convenience methods are available in the following mixins:\n   <ul>\n     <li>{@link qx.ui.treevirtual.MNode}</li>\n     <li>{@link qx.ui.treevirtual.MFamily}</li>\n   </ul>\n </p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 100,
        "column": 14
      },
      "end": {
        "line": 223,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "headings {Array | String}\n   An array containing a list of strings, one for each column, representing\n   the headings for each column.  As a special case, if only one column is\n   to exist, the string representing its heading need not be enclosed in an\n   array.",
          "paramName": "headings",
          "description": "\n   An array containing a list of strings, one for each column, representing\n   the headings for each column.  As a special case, if only one column is\n   to exist, the string representing its heading need not be enclosed in an\n   array.",
          "type": [
            "Array",
            "String"
          ]
        },
        {
          "name": "@param",
          "body": "custom {Map ? null}\n   A map provided (typically) by subclasses, to override the various\n   supplemental classes allocated within this constructor.  For normal\n   usage, this parameter may be omitted.  Each property must be an object\n   instance or a function which returns an object instance, as indicated by\n   the defaults listed here:\n   <dl>\n     <dt>initiallyHiddenColumns</dt>\n       <dd>\n         {Array?}\n         A list of column numbers that should be initially invisible. Any\n         column not mentioned will be initially visible, and if no array\n         is provided, all columns will be initially visible.\n       </dd>\n     <dt>dataModel</dt>\n       <dd>new qx.ui.treevirtual.SimpleTreeDataModel()</dd>\n     <dt>treeDataCellRenderer</dt>\n       <dd>\n         Instance of {@link qx.ui.treevirtual.SimpleTreeDataCellRenderer}.\n         Custom data cell renderer for the tree column.\n       </dd>\n     <dt>treeColumn</dt>\n       <dd>\n         The column number in which the tree is to reside, i.e., which\n         column uses the SimpleTreeDataCellRenderer or a subclass of it.\n       </dd>\n     <dt>defaultDataCellRenderer</dt>\n       <dd>\n         Instance of {@link qx.ui.treevirtual.DefaultDataCellRenderer}.\n         Custom data cell renderer for all columns other than the tree\n         column.\n       </dd>\n     <dt>dataRowRenderer</dt>\n       <dd>new qx.ui.treevirtual.SimpleTreeDataRowRenderer()</dd>\n     <dt>selectionManager</dt>\n       <dd><pre class='javascript'>\n         function(obj)\n         {\n           return new qx.ui.treevirtual.SelectionManager(obj);\n         }\n       </pre></dd>\n     <dt>tableColumnModel</dt>\n       <dd><pre class='javascript'>\n         function(obj)\n         {\n           return new qx.ui.table.columnmodel.Resize(obj);\n         }\n       </pre></dd>\n   </dl>",
          "paramName": "custom",
          "description": "\n   A map provided (typically) by subclasses, to override the various\n   supplemental classes allocated within this constructor.  For normal\n   usage, this parameter may be omitted.  Each property must be an object\n   instance or a function which returns an object instance, as indicated by\n   the defaults listed here:\n   <dl>\n     <dt>initiallyHiddenColumns</dt>\n       <dd>\n         {Array?}\n         A list of column numbers that should be initially invisible. Any\n         column not mentioned will be initially visible, and if no array\n         is provided, all columns will be initially visible.\n       </dd>\n     <dt>dataModel</dt>\n       <dd>new qx.ui.treevirtual.SimpleTreeDataModel()</dd>\n     <dt>treeDataCellRenderer</dt>\n       <dd>\n         Instance of {@link qx.ui.treevirtual.SimpleTreeDataCellRenderer}.\n         Custom data cell renderer for the tree column.\n       </dd>\n     <dt>treeColumn</dt>\n       <dd>\n         The column number in which the tree is to reside, i.e., which\n         column uses the SimpleTreeDataCellRenderer or a subclass of it.\n       </dd>\n     <dt>defaultDataCellRenderer</dt>\n       <dd>\n         Instance of {@link qx.ui.treevirtual.DefaultDataCellRenderer}.\n         Custom data cell renderer for all columns other than the tree\n         column.\n       </dd>\n     <dt>dataRowRenderer</dt>\n       <dd>new qx.ui.treevirtual.SimpleTreeDataRowRenderer()</dd>\n     <dt>selectionManager</dt>\n       <dd><pre class='javascript'>\n         function(obj)\n         {\n           return new qx.ui.treevirtual.SelectionManager(obj);\n         }\n       </pre></dd>\n     <dt>tableColumnModel</dt>\n       <dd><pre class='javascript'>\n         function(obj)\n         {\n           return new qx.ui.table.columnmodel.Resize(obj);\n         }\n       </pre></dd>\n   </dl>",
          "optional": true,
          "defaultValue": "null",
          "type": "Map"
        }
      ]
    }
  },
  "events": {
    "treeOpenWithContent": {
      "location": {
        "start": {
          "line": 243,
          "column": 4
        },
        "end": {
          "line": 243,
          "column": 48
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a tree branch which already has content is opened.\n Event data: the node object from the data model (of the node\n being opened) as described in\n {@link qx.ui.treevirtual.SimpleTreeDataModel}</p>"
          }
        ]
      },
      "name": "treeOpenWithContent",
      "type": "qx.event.type.Data"
    },
    "treeOpenWhileEmpty": {
      "location": {
        "start": {
          "line": 252,
          "column": 4
        },
        "end": {
          "line": 252,
          "column": 48
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an empty tree branch is opened.\n Event data: the node object from the data model (of the node\n being opened) as described in\n {@link qx.ui.treevirtual.SimpleTreeDataModel}</p>"
          }
        ]
      },
      "name": "treeOpenWhileEmpty",
      "type": "qx.event.type.Data"
    },
    "treeClose": {
      "location": {
        "start": {
          "line": 261,
          "column": 4
        },
        "end": {
          "line": 261,
          "column": 48
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a tree branch is closed.\n Event data: the node object from the data model (of the node\n being closed) as described in\n {@link qx.ui.treevirtual.SimpleTreeDataModel}</p>"
          }
        ]
      },
      "name": "treeClose",
      "type": "qx.event.type.Data"
    },
    "changeSelection": {
      "location": {
        "start": {
          "line": 270,
          "column": 4
        },
        "end": {
          "line": 270,
          "column": 48
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the selected rows change.\n Event data: An array of node objects (the selected rows' nodes)\n from the data model.  Each node object is described in\n {@link qx.ui.treevirtual.SimpleTreeDataModel}</p>"
          }
        ]
      },
      "name": "changeSelection",
      "type": "qx.event.type.Data"
    }
  },
  "statics": {
    "SelectionMode": {
      "location": {
        "start": {
          "line": 302,
          "column": 4
        },
        "end": {
          "line": 314,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selection Modes {int}\n   NONE\n     Nothing can ever be selected.\n   SINGLE\n     Allow only one selected item.\n   SINGLE<em>INTERVAL\n     Allow one contiguous interval of selected items.\n   MULTIPLE</em>INTERVAL\n     Allow any set of selected items, whether contiguous or not.\n   MULTIPLE<em>INTERVAL</em>TOGGLE\n     Like MULTIPLE_INTERVAL, but clicking on an item toggles its selection state.</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "properties": {
    "openCloseClickSelectsRow": {
      "location": {
        "start": {
          "line": 332,
          "column": 4
        },
        "end": {
          "line": 336,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether a click on the open/close button should also cause selection of\n the row.</p>"
          }
        ]
      },
      "name": "openCloseClickSelectsRow",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "appearance": {
      "location": {
        "start": {
          "line": 338,
          "column": 4
        },
        "end": {
          "line": 342,
          "column": 5
        }
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "init": "treevirtual",
      "defaultValue": "treevirtual",
      "overriddenFrom": "qx.ui.table.Table",
      "appearsIn": {
        "qx.ui.table.Table": "class",
        "qx.ui.core.Widget": "class"
      }
    }
  },
  "members": {
    "getDataModel": {
      "location": {
        "start": {
          "line": 361,
          "column": 4
        },
        "end": {
          "line": 364,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the data model for this tree.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.table.ITableModel} The data model.",
            "type": "qx.ui.table.ITableModel",
            "description": " The data model."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setUseTreeLines": {
      "location": {
        "start": {
          "line": 378,
          "column": 4
        },
        "end": {
          "line": 398,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set whether lines linking tree children shall be drawn on the tree.\n Note that not all themes support tree lines.  As of the time of this\n writing, the Classic theme supports tree lines (and uses +/- icons\n which lend themselves to tree lines), while the Modern theme, which\n uses right-facing and downward-facing arrows instead of +/-, does not.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "b {Boolean}\n   <i>true</i> if tree lines should be shown; <i>false</i> otherwise.",
            "paramName": "b",
            "description": "\n   <i>true</i> if tree lines should be shown; <i>false</i> otherwise.",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getUseTreeLines": {
      "location": {
        "start": {
          "line": 408,
          "column": 4
        },
        "end": {
          "line": 413,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get whether lines linking tree children shall be drawn on the tree.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}\n   <i>true</i> if tree lines are in use;\n   <i>false</i> otherwise.",
            "type": "Boolean",
            "description": "\n   <i>true</i> if tree lines are in use;\n   <i>false</i> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setAlwaysShowOpenCloseSymbol": {
      "location": {
        "start": {
          "line": 425,
          "column": 4
        },
        "end": {
          "line": 445,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set whether the open/close button should be displayed on a branch,\n even if the branch has no children.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "b {Boolean}\n   <i>true</i> if the open/close button should be shown;\n   <i>false</i> otherwise.",
            "paramName": "b",
            "description": "\n   <i>true</i> if the open/close button should be shown;\n   <i>false</i> otherwise.",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setExcludeFirstLevelTreeLines": {
      "location": {
        "start": {
          "line": 457,
          "column": 4
        },
        "end": {
          "line": 477,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set whether drawing of first-level tree-node lines are disabled even\n if drawing of tree lines is enabled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "b {Boolean}\n   <i>true</i> if first-level tree lines should be disabled;\n   <i>false</i> for normal operation.",
            "paramName": "b",
            "description": "\n   <i>true</i> if first-level tree lines should be disabled;\n   <i>false</i> for normal operation.",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getExcludeFirstLevelTreeLines": {
      "location": {
        "start": {
          "line": 489,
          "column": 4
        },
        "end": {
          "line": 494,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get whether drawing of first-level tree lines should be disabled even\n if drawing of tree lines is enabled.\n (See also {@link #getUseTreeLines})</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}\n   <i>true</i> if tree lines are in use;\n   <i>false</i> otherwise.",
            "type": "Boolean",
            "description": "\n   <i>true</i> if tree lines are in use;\n   <i>false</i> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAlwaysShowOpenCloseSymbol": {
      "location": {
        "start": {
          "line": 505,
          "column": 4
        },
        "end": {
          "line": 510,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set whether the open/close button should be displayed on a branch,\n even if the branch has no children.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}\n   <i>true</i> if tree lines are in use;\n   <i>false</i> otherwise.",
            "type": "Boolean",
            "description": "\n   <i>true</i> if tree lines are in use;\n   <i>false</i> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setSelectionMode": {
      "location": {
        "start": {
          "line": 533,
          "column": 4
        },
        "end": {
          "line": 536,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the selection mode.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "mode {Integer}\n   The selection mode to be used.  It may be any of:\n     <pre>\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.NONE:\n          Nothing can ever be selected.\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.SINGLE\n          Allow only one selected item.\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.SINGLE_INTERVAL\n          Allow one contiguous interval of selected items.\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.MULTIPLE_INTERVAL\n          Allow any selected items, whether contiguous or not.\n     </pre>",
            "paramName": "mode",
            "description": "\n   The selection mode to be used.  It may be any of:\n     <pre>\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.NONE:\n          Nothing can ever be selected.\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.SINGLE\n          Allow only one selected item.\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.SINGLE_INTERVAL\n          Allow one contiguous interval of selected items.\n       qx.ui.treevirtual.TreeVirtual.SelectionMode.MULTIPLE_INTERVAL\n          Allow any selected items, whether contiguous or not.\n     </pre>",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectionMode": {
      "location": {
        "start": {
          "line": 545,
          "column": 4
        },
        "end": {
          "line": 548,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the selection mode currently in use.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer}\n   One of the values documented in {@link #setSelectionMode}",
            "type": "Integer",
            "description": "\n   One of the values documented in {@link #setSelectionMode}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getHierarchy": {
      "location": {
        "start": {
          "line": 568,
          "column": 4
        },
        "end": {
          "line": 610,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Obtain the entire hierarchy of labels from the root down to the\n specified node.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nodeReference {Object | Integer}\n   The node for which the hierarchy is desired.  The node can be\n   represented either by the node object, or the node id (as would have\n   been returned by addBranch(), addLeaf(), etc.)",
            "paramName": "nodeReference",
            "description": "\n   The node for which the hierarchy is desired.  The node can be\n   represented either by the node object, or the node id (as would have\n   been returned by addBranch(), addLeaf(), etc.)",
            "type": [
              "Object",
              "Integer"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array}\n   The returned array contains one string for each label in the\n   hierarchy of the node specified by the parameter.  Element 0 of the\n   array contains the label of the root node, element 1 contains the\n   label of the node immediately below root in the specified node's\n   hierarchy, etc., down to the last element in the array contain the\n   label of the node referenced by the parameter.",
            "type": "Array",
            "description": "\n   The returned array contains one string for each label in the\n   hierarchy of the node specified by the parameter.  Element 0 of the\n   array contains the label of the root node, element 1 contains the\n   label of the node immediately below root in the specified node's\n   hierarchy, etc., down to the last element in the array contain the\n   label of the node referenced by the parameter."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectedNodes": {
      "location": {
        "start": {
          "line": 619,
          "column": 4
        },
        "end": {
          "line": 622,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the nodes that are currently selected.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array}\n   An array containing the nodes that are currently selected.",
            "type": "Array",
            "description": "\n   An array containing the nodes that are currently selected."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onKeyPress": {
      "location": {
        "start": {
          "line": 635,
          "column": 4
        },
        "end": {
          "line": 809,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when a key was pressed.\n We handle the Enter key to toggle opened/closed tree state.  All\n other keydown events are passed to our superclass.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {Map}\n   The event.",
            "paramName": "evt",
            "description": "\n   The event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.Table",
      "appearsIn": [
        "qx.ui.table.Table"
      ]
    },
    "_onSelectionChanged": {
      "location": {
        "start": {
          "line": 819,
          "column": 4
        },
        "end": {
          "line": 836,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the selection has changed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {Map}\n   The event.",
            "paramName": "evt",
            "description": "\n   The event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.Table",
      "appearsIn": [
        "qx.ui.table.Table"
      ]
    },
    "_calculateSelectedNodes": {
      "location": {
        "start": {
          "line": 851,
          "column": 4
        },
        "end": {
          "line": 874,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculate and return the set of nodes which are currently selected by\n the user, on the screen.  In the process of calculating which nodes\n are selected, the nodes corresponding to the selected rows on the\n screen are marked as selected by setting their <i>bSelected</i>\n property to true, and all previously-selected nodes have their\n <i>bSelected</i> property reset to false.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array}\n   An array of nodes matching the set of rows which are selected on the\n   screen.",
            "type": "Array",
            "description": "\n   An array of nodes matching the set of rows which are selected on the\n   screen."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setOverflow": {
      "location": {
        "start": {
          "line": 887,
          "column": 4
        },
        "end": {
          "line": 894,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the overflow mode.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "s {String}\n   Overflow mode.  The only allowable mode is \"hidden\".",
            "paramName": "s",
            "description": "\n   Overflow mode.  The only allowable mode is \"hidden\".",
            "type": "String"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error}\n   Error if tree overflow mode is other than \"hidden\"",
            "type": "Error",
            "description": "\n   Error if tree overflow mode is other than \"hidden\""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDragScrollThresholdX": {
      "type": "function",
      "name": "getDragScrollThresholdX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dragScrollThresholdX</code>.\n\nFor further details take a look at the property definition: {@link #dragScrollThresholdX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for dragScrollThresholdX"
          }
        ]
      }
    },
    "setDragScrollThresholdX": {
      "type": "function",
      "name": "setDragScrollThresholdX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dragScrollThresholdX</code>.\n\nFor further details take a look at the property definition: {@link #dragScrollThresholdX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for dragScrollThresholdX"
          }
        ]
      }
    },
    "resetDragScrollThresholdX": {
      "type": "function",
      "name": "resetDragScrollThresholdX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getDragScrollThresholdY": {
      "type": "function",
      "name": "getDragScrollThresholdY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dragScrollThresholdY</code>.\n\nFor further details take a look at the property definition: {@link #dragScrollThresholdY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for dragScrollThresholdY"
          }
        ]
      }
    },
    "setDragScrollThresholdY": {
      "type": "function",
      "name": "setDragScrollThresholdY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dragScrollThresholdY</code>.\n\nFor further details take a look at the property definition: {@link #dragScrollThresholdY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for dragScrollThresholdY"
          }
        ]
      }
    },
    "resetDragScrollThresholdY": {
      "type": "function",
      "name": "resetDragScrollThresholdY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getDragScrollSlowDownFactor": {
      "type": "function",
      "name": "getDragScrollSlowDownFactor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dragScrollSlowDownFactor</code>.\n\nFor further details take a look at the property definition: {@link #dragScrollSlowDownFactor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Float",
            "desc": "Returns the value for dragScrollSlowDownFactor"
          }
        ]
      }
    },
    "setDragScrollSlowDownFactor": {
      "type": "function",
      "name": "setDragScrollSlowDownFactor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dragScrollSlowDownFactor</code>.\n\nFor further details take a look at the property definition: {@link #dragScrollSlowDownFactor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Float",
            "paramName": "value",
            "desc": "Value for dragScrollSlowDownFactor"
          }
        ]
      }
    },
    "resetDragScrollSlowDownFactor": {
      "type": "function",
      "name": "resetDragScrollSlowDownFactor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMinWidth": {
      "type": "function",
      "name": "getMinWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>minWidth</code>.\n\nFor further details take a look at the property definition: {@link #minWidth}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for minWidth"
          }
        ]
      }
    },
    "setMinWidth": {
      "type": "function",
      "name": "setMinWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>minWidth</code>.\n\nFor further details take a look at the property definition: {@link #minWidth}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for minWidth"
          }
        ]
      }
    },
    "resetMinWidth": {
      "type": "function",
      "name": "resetMinWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getWidth": {
      "type": "function",
      "name": "getWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>width</code>.\n\nFor further details take a look at the property definition: {@link #width}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for width"
          }
        ]
      }
    },
    "setWidth": {
      "type": "function",
      "name": "setWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>width</code>.\n\nFor further details take a look at the property definition: {@link #width}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for width"
          }
        ]
      }
    },
    "resetWidth": {
      "type": "function",
      "name": "resetWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMaxWidth": {
      "type": "function",
      "name": "getMaxWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxWidth</code>.\n\nFor further details take a look at the property definition: {@link #maxWidth}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for maxWidth"
          }
        ]
      }
    },
    "setMaxWidth": {
      "type": "function",
      "name": "setMaxWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxWidth</code>.\n\nFor further details take a look at the property definition: {@link #maxWidth}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for maxWidth"
          }
        ]
      }
    },
    "resetMaxWidth": {
      "type": "function",
      "name": "resetMaxWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMinHeight": {
      "type": "function",
      "name": "getMinHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>minHeight</code>.\n\nFor further details take a look at the property definition: {@link #minHeight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for minHeight"
          }
        ]
      }
    },
    "setMinHeight": {
      "type": "function",
      "name": "setMinHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>minHeight</code>.\n\nFor further details take a look at the property definition: {@link #minHeight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for minHeight"
          }
        ]
      }
    },
    "resetMinHeight": {
      "type": "function",
      "name": "resetMinHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getHeight": {
      "type": "function",
      "name": "getHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>height</code>.\n\nFor further details take a look at the property definition: {@link #height}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for height"
          }
        ]
      }
    },
    "setHeight": {
      "type": "function",
      "name": "setHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>height</code>.\n\nFor further details take a look at the property definition: {@link #height}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for height"
          }
        ]
      }
    },
    "resetHeight": {
      "type": "function",
      "name": "resetHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMaxHeight": {
      "type": "function",
      "name": "getMaxHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxHeight</code>.\n\nFor further details take a look at the property definition: {@link #maxHeight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for maxHeight"
          }
        ]
      }
    },
    "setMaxHeight": {
      "type": "function",
      "name": "setMaxHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxHeight</code>.\n\nFor further details take a look at the property definition: {@link #maxHeight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for maxHeight"
          }
        ]
      }
    },
    "resetMaxHeight": {
      "type": "function",
      "name": "resetMaxHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAllowGrowX": {
      "type": "function",
      "name": "getAllowGrowX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowGrowX</code>.\n\nFor further details take a look at the property definition: {@link #allowGrowX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowGrowX"
          }
        ]
      }
    },
    "isAllowGrowX": {
      "type": "function",
      "name": "isAllowGrowX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowGrowX</code>.\n\nFor further details take a look at the property definition: {@link #allowGrowX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowGrowX"
          }
        ]
      }
    },
    "setAllowGrowX": {
      "type": "function",
      "name": "setAllowGrowX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>allowGrowX</code>.\n\nFor further details take a look at the property definition: {@link #allowGrowX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for allowGrowX"
          }
        ]
      }
    },
    "resetAllowGrowX": {
      "type": "function",
      "name": "resetAllowGrowX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAllowShrinkX": {
      "type": "function",
      "name": "getAllowShrinkX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowShrinkX</code>.\n\nFor further details take a look at the property definition: {@link #allowShrinkX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowShrinkX"
          }
        ]
      }
    },
    "isAllowShrinkX": {
      "type": "function",
      "name": "isAllowShrinkX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowShrinkX</code>.\n\nFor further details take a look at the property definition: {@link #allowShrinkX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowShrinkX"
          }
        ]
      }
    },
    "setAllowShrinkX": {
      "type": "function",
      "name": "setAllowShrinkX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>allowShrinkX</code>.\n\nFor further details take a look at the property definition: {@link #allowShrinkX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for allowShrinkX"
          }
        ]
      }
    },
    "resetAllowShrinkX": {
      "type": "function",
      "name": "resetAllowShrinkX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAllowGrowY": {
      "type": "function",
      "name": "getAllowGrowY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowGrowY</code>.\n\nFor further details take a look at the property definition: {@link #allowGrowY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowGrowY"
          }
        ]
      }
    },
    "isAllowGrowY": {
      "type": "function",
      "name": "isAllowGrowY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowGrowY</code>.\n\nFor further details take a look at the property definition: {@link #allowGrowY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowGrowY"
          }
        ]
      }
    },
    "setAllowGrowY": {
      "type": "function",
      "name": "setAllowGrowY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>allowGrowY</code>.\n\nFor further details take a look at the property definition: {@link #allowGrowY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for allowGrowY"
          }
        ]
      }
    },
    "resetAllowGrowY": {
      "type": "function",
      "name": "resetAllowGrowY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAllowShrinkY": {
      "type": "function",
      "name": "getAllowShrinkY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowShrinkY</code>.\n\nFor further details take a look at the property definition: {@link #allowShrinkY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowShrinkY"
          }
        ]
      }
    },
    "isAllowShrinkY": {
      "type": "function",
      "name": "isAllowShrinkY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowShrinkY</code>.\n\nFor further details take a look at the property definition: {@link #allowShrinkY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowShrinkY"
          }
        ]
      }
    },
    "setAllowShrinkY": {
      "type": "function",
      "name": "setAllowShrinkY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>allowShrinkY</code>.\n\nFor further details take a look at the property definition: {@link #allowShrinkY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for allowShrinkY"
          }
        ]
      }
    },
    "resetAllowShrinkY": {
      "type": "function",
      "name": "resetAllowShrinkY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAllowStretchX": {
      "type": "function",
      "name": "getAllowStretchX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowStretchX</code>.\n\nFor further details take a look at the property definition: {@link #allowStretchX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for allowStretchX"
          }
        ]
      }
    },
    "setAllowStretchX": {
      "type": "function",
      "name": "setAllowStretchX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>allowStretchX</code>.\n\nFor further details take a look at the property definition: {@link #allowStretchX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for allowStretchX"
          }
        ]
      }
    },
    "resetAllowStretchX": {
      "type": "function",
      "name": "resetAllowStretchX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAllowStretchY": {
      "type": "function",
      "name": "getAllowStretchY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowStretchY</code>.\n\nFor further details take a look at the property definition: {@link #allowStretchY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for allowStretchY"
          }
        ]
      }
    },
    "setAllowStretchY": {
      "type": "function",
      "name": "setAllowStretchY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>allowStretchY</code>.\n\nFor further details take a look at the property definition: {@link #allowStretchY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for allowStretchY"
          }
        ]
      }
    },
    "resetAllowStretchY": {
      "type": "function",
      "name": "resetAllowStretchY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMarginTop": {
      "type": "function",
      "name": "getMarginTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>marginTop</code>.\n\nFor further details take a look at the property definition: {@link #marginTop}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for marginTop"
          }
        ]
      }
    },
    "setMarginTop": {
      "type": "function",
      "name": "setMarginTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>marginTop</code>.\n\nFor further details take a look at the property definition: {@link #marginTop}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for marginTop"
          }
        ]
      }
    },
    "resetMarginTop": {
      "type": "function",
      "name": "resetMarginTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMarginRight": {
      "type": "function",
      "name": "getMarginRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>marginRight</code>.\n\nFor further details take a look at the property definition: {@link #marginRight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for marginRight"
          }
        ]
      }
    },
    "setMarginRight": {
      "type": "function",
      "name": "setMarginRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>marginRight</code>.\n\nFor further details take a look at the property definition: {@link #marginRight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for marginRight"
          }
        ]
      }
    },
    "resetMarginRight": {
      "type": "function",
      "name": "resetMarginRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMarginBottom": {
      "type": "function",
      "name": "getMarginBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>marginBottom</code>.\n\nFor further details take a look at the property definition: {@link #marginBottom}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for marginBottom"
          }
        ]
      }
    },
    "setMarginBottom": {
      "type": "function",
      "name": "setMarginBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>marginBottom</code>.\n\nFor further details take a look at the property definition: {@link #marginBottom}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for marginBottom"
          }
        ]
      }
    },
    "resetMarginBottom": {
      "type": "function",
      "name": "resetMarginBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMarginLeft": {
      "type": "function",
      "name": "getMarginLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>marginLeft</code>.\n\nFor further details take a look at the property definition: {@link #marginLeft}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for marginLeft"
          }
        ]
      }
    },
    "setMarginLeft": {
      "type": "function",
      "name": "setMarginLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>marginLeft</code>.\n\nFor further details take a look at the property definition: {@link #marginLeft}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for marginLeft"
          }
        ]
      }
    },
    "resetMarginLeft": {
      "type": "function",
      "name": "resetMarginLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMargin": {
      "type": "function",
      "name": "getMargin",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>margin</code>.\n\nFor further details take a look at the property definition: {@link #margin}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for margin"
          }
        ]
      }
    },
    "setMargin": {
      "type": "function",
      "name": "setMargin",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>margin</code>.\n\nFor further details take a look at the property definition: {@link #margin}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for margin"
          }
        ]
      }
    },
    "resetMargin": {
      "type": "function",
      "name": "resetMargin",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAlignX": {
      "type": "function",
      "name": "getAlignX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>alignX</code>.\n\nFor further details take a look at the property definition: {@link #alignX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for alignX"
          }
        ]
      }
    },
    "setAlignX": {
      "type": "function",
      "name": "setAlignX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>alignX</code>.\n\nFor further details take a look at the property definition: {@link #alignX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for alignX"
          }
        ]
      }
    },
    "resetAlignX": {
      "type": "function",
      "name": "resetAlignX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAlignY": {
      "type": "function",
      "name": "getAlignY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>alignY</code>.\n\nFor further details take a look at the property definition: {@link #alignY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for alignY"
          }
        ]
      }
    },
    "setAlignY": {
      "type": "function",
      "name": "setAlignY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>alignY</code>.\n\nFor further details take a look at the property definition: {@link #alignY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for alignY"
          }
        ]
      }
    },
    "resetAlignY": {
      "type": "function",
      "name": "resetAlignY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getPaddingTop": {
      "type": "function",
      "name": "getPaddingTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingTop</code>.\n\nFor further details take a look at the property definition: {@link #paddingTop}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingTop"
          }
        ]
      }
    },
    "setPaddingTop": {
      "type": "function",
      "name": "setPaddingTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingTop</code>.\n\nFor further details take a look at the property definition: {@link #paddingTop}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingTop"
          }
        ]
      }
    },
    "resetPaddingTop": {
      "type": "function",
      "name": "resetPaddingTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getPaddingRight": {
      "type": "function",
      "name": "getPaddingRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingRight</code>.\n\nFor further details take a look at the property definition: {@link #paddingRight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingRight"
          }
        ]
      }
    },
    "setPaddingRight": {
      "type": "function",
      "name": "setPaddingRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingRight</code>.\n\nFor further details take a look at the property definition: {@link #paddingRight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingRight"
          }
        ]
      }
    },
    "resetPaddingRight": {
      "type": "function",
      "name": "resetPaddingRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getPaddingBottom": {
      "type": "function",
      "name": "getPaddingBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingBottom</code>.\n\nFor further details take a look at the property definition: {@link #paddingBottom}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingBottom"
          }
        ]
      }
    },
    "setPaddingBottom": {
      "type": "function",
      "name": "setPaddingBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingBottom</code>.\n\nFor further details take a look at the property definition: {@link #paddingBottom}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingBottom"
          }
        ]
      }
    },
    "resetPaddingBottom": {
      "type": "function",
      "name": "resetPaddingBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getPaddingLeft": {
      "type": "function",
      "name": "getPaddingLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingLeft</code>.\n\nFor further details take a look at the property definition: {@link #paddingLeft}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingLeft"
          }
        ]
      }
    },
    "setPaddingLeft": {
      "type": "function",
      "name": "setPaddingLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingLeft</code>.\n\nFor further details take a look at the property definition: {@link #paddingLeft}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingLeft"
          }
        ]
      }
    },
    "resetPaddingLeft": {
      "type": "function",
      "name": "resetPaddingLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getPadding": {
      "type": "function",
      "name": "getPadding",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>padding</code>.\n\nFor further details take a look at the property definition: {@link #padding}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for padding"
          }
        ]
      }
    },
    "setPadding": {
      "type": "function",
      "name": "setPadding",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>padding</code>.\n\nFor further details take a look at the property definition: {@link #padding}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for padding"
          }
        ]
      }
    },
    "resetPadding": {
      "type": "function",
      "name": "resetPadding",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getZIndex": {
      "type": "function",
      "name": "getZIndex",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>zIndex</code>.\n\nFor further details take a look at the property definition: {@link #zIndex}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for zIndex"
          }
        ]
      }
    },
    "setZIndex": {
      "type": "function",
      "name": "setZIndex",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>zIndex</code>.\n\nFor further details take a look at the property definition: {@link #zIndex}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for zIndex"
          }
        ]
      }
    },
    "resetZIndex": {
      "type": "function",
      "name": "resetZIndex",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getDecorator": {
      "type": "function",
      "name": "getDecorator",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>decorator</code>.\n\nFor further details take a look at the property definition: {@link #decorator}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Decorator",
            "desc": "Returns the value for decorator"
          }
        ]
      }
    },
    "setDecorator": {
      "type": "function",
      "name": "setDecorator",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>decorator</code>.\n\nFor further details take a look at the property definition: {@link #decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Decorator",
            "paramName": "value",
            "desc": "Value for decorator"
          }
        ]
      }
    },
    "resetDecorator": {
      "type": "function",
      "name": "resetDecorator",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getBackgroundColor": {
      "type": "function",
      "name": "getBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>backgroundColor</code>.\n\nFor further details take a look at the property definition: {@link #backgroundColor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for backgroundColor"
          }
        ]
      }
    },
    "setBackgroundColor": {
      "type": "function",
      "name": "setBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>backgroundColor</code>.\n\nFor further details take a look at the property definition: {@link #backgroundColor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for backgroundColor"
          }
        ]
      }
    },
    "resetBackgroundColor": {
      "type": "function",
      "name": "resetBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getTextColor": {
      "type": "function",
      "name": "getTextColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>textColor</code>.\n\nFor further details take a look at the property definition: {@link #textColor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for textColor"
          }
        ]
      }
    },
    "setTextColor": {
      "type": "function",
      "name": "setTextColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>textColor</code>.\n\nFor further details take a look at the property definition: {@link #textColor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for textColor"
          }
        ]
      }
    },
    "resetTextColor": {
      "type": "function",
      "name": "resetTextColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getFont": {
      "type": "function",
      "name": "getFont",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>font</code>.\n\nFor further details take a look at the property definition: {@link #font}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Font",
            "desc": "Returns the value for font"
          }
        ]
      }
    },
    "setFont": {
      "type": "function",
      "name": "setFont",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>font</code>.\n\nFor further details take a look at the property definition: {@link #font}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Font",
            "paramName": "value",
            "desc": "Value for font"
          }
        ]
      }
    },
    "resetFont": {
      "type": "function",
      "name": "resetFont",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getOpacity": {
      "type": "function",
      "name": "getOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>opacity</code>.\n\nFor further details take a look at the property definition: {@link #opacity}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for opacity"
          }
        ]
      }
    },
    "setOpacity": {
      "type": "function",
      "name": "setOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>opacity</code>.\n\nFor further details take a look at the property definition: {@link #opacity}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for opacity"
          }
        ]
      }
    },
    "resetOpacity": {
      "type": "function",
      "name": "resetOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getCursor": {
      "type": "function",
      "name": "getCursor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>cursor</code>.\n\nFor further details take a look at the property definition: {@link #cursor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for cursor"
          }
        ]
      }
    },
    "setCursor": {
      "type": "function",
      "name": "setCursor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>cursor</code>.\n\nFor further details take a look at the property definition: {@link #cursor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for cursor"
          }
        ]
      }
    },
    "resetCursor": {
      "type": "function",
      "name": "resetCursor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getToolTip": {
      "type": "function",
      "name": "getToolTip",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>toolTip</code>.\n\nFor further details take a look at the property definition: {@link #toolTip}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.tooltip.ToolTip",
            "desc": "Returns the value for toolTip"
          }
        ]
      }
    },
    "setToolTip": {
      "type": "function",
      "name": "setToolTip",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>toolTip</code>.\n\nFor further details take a look at the property definition: {@link #toolTip}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.tooltip.ToolTip",
            "paramName": "value",
            "desc": "Value for toolTip"
          }
        ]
      }
    },
    "resetToolTip": {
      "type": "function",
      "name": "resetToolTip",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getToolTipText": {
      "type": "function",
      "name": "getToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>toolTipText</code>.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for toolTipText"
          }
        ]
      }
    },
    "setToolTipText": {
      "type": "function",
      "name": "setToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>toolTipText</code>.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for toolTipText"
          }
        ]
      }
    },
    "resetToolTipText": {
      "type": "function",
      "name": "resetToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getToolTipIcon": {
      "type": "function",
      "name": "getToolTipIcon",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>toolTipIcon</code>.\n\nFor further details take a look at the property definition: {@link #toolTipIcon}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for toolTipIcon"
          }
        ]
      }
    },
    "setToolTipIcon": {
      "type": "function",
      "name": "setToolTipIcon",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>toolTipIcon</code>.\n\nFor further details take a look at the property definition: {@link #toolTipIcon}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for toolTipIcon"
          }
        ]
      }
    },
    "resetToolTipIcon": {
      "type": "function",
      "name": "resetToolTipIcon",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getBlockToolTip": {
      "type": "function",
      "name": "getBlockToolTip",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>blockToolTip</code>.\n\nFor further details take a look at the property definition: {@link #blockToolTip}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for blockToolTip"
          }
        ]
      }
    },
    "isBlockToolTip": {
      "type": "function",
      "name": "isBlockToolTip",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>blockToolTip</code>.\n\nFor further details take a look at the property definition: {@link #blockToolTip}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for blockToolTip"
          }
        ]
      }
    },
    "setBlockToolTip": {
      "type": "function",
      "name": "setBlockToolTip",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>blockToolTip</code>.\n\nFor further details take a look at the property definition: {@link #blockToolTip}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for blockToolTip"
          }
        ]
      }
    },
    "resetBlockToolTip": {
      "type": "function",
      "name": "resetBlockToolTip",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getShowToolTipWhenDisabled": {
      "type": "function",
      "name": "getShowToolTipWhenDisabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showToolTipWhenDisabled</code>.\n\nFor further details take a look at the property definition: {@link #showToolTipWhenDisabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showToolTipWhenDisabled"
          }
        ]
      }
    },
    "isShowToolTipWhenDisabled": {
      "type": "function",
      "name": "isShowToolTipWhenDisabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showToolTipWhenDisabled</code>.\n\nFor further details take a look at the property definition: {@link #showToolTipWhenDisabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showToolTipWhenDisabled"
          }
        ]
      }
    },
    "setShowToolTipWhenDisabled": {
      "type": "function",
      "name": "setShowToolTipWhenDisabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showToolTipWhenDisabled</code>.\n\nFor further details take a look at the property definition: {@link #showToolTipWhenDisabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showToolTipWhenDisabled"
          }
        ]
      }
    },
    "resetShowToolTipWhenDisabled": {
      "type": "function",
      "name": "resetShowToolTipWhenDisabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getVisibility": {
      "type": "function",
      "name": "getVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for visibility"
          }
        ]
      }
    },
    "setVisibility": {
      "type": "function",
      "name": "setVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for visibility"
          }
        ]
      }
    },
    "resetVisibility": {
      "type": "function",
      "name": "resetVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAnonymous": {
      "type": "function",
      "name": "getAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>anonymous</code>.\n\nFor further details take a look at the property definition: {@link #anonymous}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for anonymous"
          }
        ]
      }
    },
    "isAnonymous": {
      "type": "function",
      "name": "isAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>anonymous</code>.\n\nFor further details take a look at the property definition: {@link #anonymous}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for anonymous"
          }
        ]
      }
    },
    "setAnonymous": {
      "type": "function",
      "name": "setAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>anonymous</code>.\n\nFor further details take a look at the property definition: {@link #anonymous}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for anonymous"
          }
        ]
      }
    },
    "resetAnonymous": {
      "type": "function",
      "name": "resetAnonymous",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getTabIndex": {
      "type": "function",
      "name": "getTabIndex",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>tabIndex</code>.\n\nFor further details take a look at the property definition: {@link #tabIndex}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for tabIndex"
          }
        ]
      }
    },
    "setTabIndex": {
      "type": "function",
      "name": "setTabIndex",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>tabIndex</code>.\n\nFor further details take a look at the property definition: {@link #tabIndex}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for tabIndex"
          }
        ]
      }
    },
    "resetTabIndex": {
      "type": "function",
      "name": "resetTabIndex",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getFocusable": {
      "type": "function",
      "name": "getFocusable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>focusable</code>.\n\nFor further details take a look at the property definition: {@link #focusable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for focusable"
          }
        ]
      }
    },
    "isFocusable": {
      "type": "function",
      "name": "isFocusable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>focusable</code>.\n\nFor further details take a look at the property definition: {@link #focusable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for focusable"
          }
        ]
      }
    },
    "setFocusable": {
      "type": "function",
      "name": "setFocusable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>focusable</code>.\n\nFor further details take a look at the property definition: {@link #focusable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for focusable"
          }
        ]
      }
    },
    "resetFocusable": {
      "type": "function",
      "name": "resetFocusable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getKeepFocus": {
      "type": "function",
      "name": "getKeepFocus",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepFocus</code>.\n\nFor further details take a look at the property definition: {@link #keepFocus}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepFocus"
          }
        ]
      }
    },
    "isKeepFocus": {
      "type": "function",
      "name": "isKeepFocus",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepFocus</code>.\n\nFor further details take a look at the property definition: {@link #keepFocus}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepFocus"
          }
        ]
      }
    },
    "setKeepFocus": {
      "type": "function",
      "name": "setKeepFocus",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>keepFocus</code>.\n\nFor further details take a look at the property definition: {@link #keepFocus}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for keepFocus"
          }
        ]
      }
    },
    "resetKeepFocus": {
      "type": "function",
      "name": "resetKeepFocus",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getKeepActive": {
      "type": "function",
      "name": "getKeepActive",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepActive</code>.\n\nFor further details take a look at the property definition: {@link #keepActive}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepActive"
          }
        ]
      }
    },
    "isKeepActive": {
      "type": "function",
      "name": "isKeepActive",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepActive</code>.\n\nFor further details take a look at the property definition: {@link #keepActive}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepActive"
          }
        ]
      }
    },
    "setKeepActive": {
      "type": "function",
      "name": "setKeepActive",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>keepActive</code>.\n\nFor further details take a look at the property definition: {@link #keepActive}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for keepActive"
          }
        ]
      }
    },
    "resetKeepActive": {
      "type": "function",
      "name": "resetKeepActive",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getDraggable": {
      "type": "function",
      "name": "getDraggable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>draggable</code>.\n\nFor further details take a look at the property definition: {@link #draggable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for draggable"
          }
        ]
      }
    },
    "isDraggable": {
      "type": "function",
      "name": "isDraggable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>draggable</code>.\n\nFor further details take a look at the property definition: {@link #draggable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for draggable"
          }
        ]
      }
    },
    "setDraggable": {
      "type": "function",
      "name": "setDraggable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>draggable</code>.\n\nFor further details take a look at the property definition: {@link #draggable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for draggable"
          }
        ]
      }
    },
    "resetDraggable": {
      "type": "function",
      "name": "resetDraggable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getDroppable": {
      "type": "function",
      "name": "getDroppable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>droppable</code>.\n\nFor further details take a look at the property definition: {@link #droppable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for droppable"
          }
        ]
      }
    },
    "isDroppable": {
      "type": "function",
      "name": "isDroppable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>droppable</code>.\n\nFor further details take a look at the property definition: {@link #droppable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for droppable"
          }
        ]
      }
    },
    "setDroppable": {
      "type": "function",
      "name": "setDroppable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>droppable</code>.\n\nFor further details take a look at the property definition: {@link #droppable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for droppable"
          }
        ]
      }
    },
    "resetDroppable": {
      "type": "function",
      "name": "resetDroppable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getSelectable": {
      "type": "function",
      "name": "getSelectable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>selectable</code>.\n\nFor further details take a look at the property definition: {@link #selectable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for selectable"
          }
        ]
      }
    },
    "isSelectable": {
      "type": "function",
      "name": "isSelectable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>selectable</code>.\n\nFor further details take a look at the property definition: {@link #selectable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for selectable"
          }
        ]
      }
    },
    "setSelectable": {
      "type": "function",
      "name": "setSelectable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>selectable</code>.\n\nFor further details take a look at the property definition: {@link #selectable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for selectable"
          }
        ]
      }
    },
    "resetSelectable": {
      "type": "function",
      "name": "resetSelectable",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getContextMenu": {
      "type": "function",
      "name": "getContextMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>contextMenu</code>.\n\nFor further details take a look at the property definition: {@link #contextMenu}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.menu.Menu",
            "desc": "Returns the value for contextMenu"
          }
        ]
      }
    },
    "setContextMenu": {
      "type": "function",
      "name": "setContextMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>contextMenu</code>.\n\nFor further details take a look at the property definition: {@link #contextMenu}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.menu.Menu",
            "paramName": "value",
            "desc": "Value for contextMenu"
          }
        ]
      }
    },
    "resetContextMenu": {
      "type": "function",
      "name": "resetContextMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNativeContextMenu": {
      "type": "function",
      "name": "getNativeContextMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>nativeContextMenu</code>.\n\nFor further details take a look at the property definition: {@link #nativeContextMenu}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for nativeContextMenu"
          }
        ]
      }
    },
    "isNativeContextMenu": {
      "type": "function",
      "name": "isNativeContextMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>nativeContextMenu</code>.\n\nFor further details take a look at the property definition: {@link #nativeContextMenu}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for nativeContextMenu"
          }
        ]
      }
    },
    "setNativeContextMenu": {
      "type": "function",
      "name": "setNativeContextMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>nativeContextMenu</code>.\n\nFor further details take a look at the property definition: {@link #nativeContextMenu}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for nativeContextMenu"
          }
        ]
      }
    },
    "resetNativeContextMenu": {
      "type": "function",
      "name": "resetNativeContextMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAppearance": {
      "type": "function",
      "name": "getAppearance",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>appearance</code>.\n\nFor further details take a look at the property definition: {@link #appearance}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for appearance"
          }
        ]
      }
    },
    "setAppearance": {
      "type": "function",
      "name": "setAppearance",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>appearance</code>.\n\nFor further details take a look at the property definition: {@link #appearance}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for appearance"
          }
        ]
      }
    },
    "resetAppearance": {
      "type": "function",
      "name": "resetAppearance",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getInitiallyHiddenColumns": {
      "type": "function",
      "name": "getInitiallyHiddenColumns",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>initiallyHiddenColumns</code>.\n\nFor further details take a look at the property definition: {@link #initiallyHiddenColumns}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for initiallyHiddenColumns"
          }
        ]
      }
    },
    "setInitiallyHiddenColumns": {
      "type": "function",
      "name": "setInitiallyHiddenColumns",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>initiallyHiddenColumns</code>.\n\nFor further details take a look at the property definition: {@link #initiallyHiddenColumns}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for initiallyHiddenColumns"
          }
        ]
      }
    },
    "resetInitiallyHiddenColumns": {
      "type": "function",
      "name": "resetInitiallyHiddenColumns",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getSelectionModel": {
      "type": "function",
      "name": "getSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>selectionModel</code>.\n\nFor further details take a look at the property definition: {@link #selectionModel}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.table.selection.Model",
            "desc": "Returns the value for selectionModel"
          }
        ]
      }
    },
    "setSelectionModel": {
      "type": "function",
      "name": "setSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>selectionModel</code>.\n\nFor further details take a look at the property definition: {@link #selectionModel}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.table.selection.Model",
            "paramName": "value",
            "desc": "Value for selectionModel"
          }
        ]
      }
    },
    "resetSelectionModel": {
      "type": "function",
      "name": "resetSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getTableModel": {
      "type": "function",
      "name": "getTableModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>tableModel</code>.\n\nFor further details take a look at the property definition: {@link #tableModel}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.table.ITableModel",
            "desc": "Returns the value for tableModel"
          }
        ]
      }
    },
    "setTableModel": {
      "type": "function",
      "name": "setTableModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>tableModel</code>.\n\nFor further details take a look at the property definition: {@link #tableModel}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.table.ITableModel",
            "paramName": "value",
            "desc": "Value for tableModel"
          }
        ]
      }
    },
    "resetTableModel": {
      "type": "function",
      "name": "resetTableModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getRowHeight": {
      "type": "function",
      "name": "getRowHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rowHeight</code>.\n\nFor further details take a look at the property definition: {@link #rowHeight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for rowHeight"
          }
        ]
      }
    },
    "setRowHeight": {
      "type": "function",
      "name": "setRowHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rowHeight</code>.\n\nFor further details take a look at the property definition: {@link #rowHeight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for rowHeight"
          }
        ]
      }
    },
    "resetRowHeight": {
      "type": "function",
      "name": "resetRowHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getForceLineHeight": {
      "type": "function",
      "name": "getForceLineHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>forceLineHeight</code>.\n\nFor further details take a look at the property definition: {@link #forceLineHeight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for forceLineHeight"
          }
        ]
      }
    },
    "isForceLineHeight": {
      "type": "function",
      "name": "isForceLineHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>forceLineHeight</code>.\n\nFor further details take a look at the property definition: {@link #forceLineHeight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for forceLineHeight"
          }
        ]
      }
    },
    "setForceLineHeight": {
      "type": "function",
      "name": "setForceLineHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>forceLineHeight</code>.\n\nFor further details take a look at the property definition: {@link #forceLineHeight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for forceLineHeight"
          }
        ]
      }
    },
    "resetForceLineHeight": {
      "type": "function",
      "name": "resetForceLineHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getHeaderCellsVisible": {
      "type": "function",
      "name": "getHeaderCellsVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>headerCellsVisible</code>.\n\nFor further details take a look at the property definition: {@link #headerCellsVisible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for headerCellsVisible"
          }
        ]
      }
    },
    "isHeaderCellsVisible": {
      "type": "function",
      "name": "isHeaderCellsVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>headerCellsVisible</code>.\n\nFor further details take a look at the property definition: {@link #headerCellsVisible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for headerCellsVisible"
          }
        ]
      }
    },
    "setHeaderCellsVisible": {
      "type": "function",
      "name": "setHeaderCellsVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>headerCellsVisible</code>.\n\nFor further details take a look at the property definition: {@link #headerCellsVisible}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for headerCellsVisible"
          }
        ]
      }
    },
    "resetHeaderCellsVisible": {
      "type": "function",
      "name": "resetHeaderCellsVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getHeaderCellHeight": {
      "type": "function",
      "name": "getHeaderCellHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>headerCellHeight</code>.\n\nFor further details take a look at the property definition: {@link #headerCellHeight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for headerCellHeight"
          }
        ]
      }
    },
    "setHeaderCellHeight": {
      "type": "function",
      "name": "setHeaderCellHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>headerCellHeight</code>.\n\nFor further details take a look at the property definition: {@link #headerCellHeight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for headerCellHeight"
          }
        ]
      }
    },
    "resetHeaderCellHeight": {
      "type": "function",
      "name": "resetHeaderCellHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getStatusBarVisible": {
      "type": "function",
      "name": "getStatusBarVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>statusBarVisible</code>.\n\nFor further details take a look at the property definition: {@link #statusBarVisible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for statusBarVisible"
          }
        ]
      }
    },
    "isStatusBarVisible": {
      "type": "function",
      "name": "isStatusBarVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>statusBarVisible</code>.\n\nFor further details take a look at the property definition: {@link #statusBarVisible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for statusBarVisible"
          }
        ]
      }
    },
    "setStatusBarVisible": {
      "type": "function",
      "name": "setStatusBarVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>statusBarVisible</code>.\n\nFor further details take a look at the property definition: {@link #statusBarVisible}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for statusBarVisible"
          }
        ]
      }
    },
    "resetStatusBarVisible": {
      "type": "function",
      "name": "resetStatusBarVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAdditionalStatusBarText": {
      "type": "function",
      "name": "getAdditionalStatusBarText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>additionalStatusBarText</code>.\n\nFor further details take a look at the property definition: {@link #additionalStatusBarText}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for additionalStatusBarText"
          }
        ]
      }
    },
    "setAdditionalStatusBarText": {
      "type": "function",
      "name": "setAdditionalStatusBarText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>additionalStatusBarText</code>.\n\nFor further details take a look at the property definition: {@link #additionalStatusBarText}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for additionalStatusBarText"
          }
        ]
      }
    },
    "resetAdditionalStatusBarText": {
      "type": "function",
      "name": "resetAdditionalStatusBarText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getColumnVisibilityButtonVisible": {
      "type": "function",
      "name": "getColumnVisibilityButtonVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>columnVisibilityButtonVisible</code>.\n\nFor further details take a look at the property definition: {@link #columnVisibilityButtonVisible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for columnVisibilityButtonVisible"
          }
        ]
      }
    },
    "isColumnVisibilityButtonVisible": {
      "type": "function",
      "name": "isColumnVisibilityButtonVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>columnVisibilityButtonVisible</code>.\n\nFor further details take a look at the property definition: {@link #columnVisibilityButtonVisible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for columnVisibilityButtonVisible"
          }
        ]
      }
    },
    "setColumnVisibilityButtonVisible": {
      "type": "function",
      "name": "setColumnVisibilityButtonVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>columnVisibilityButtonVisible</code>.\n\nFor further details take a look at the property definition: {@link #columnVisibilityButtonVisible}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for columnVisibilityButtonVisible"
          }
        ]
      }
    },
    "resetColumnVisibilityButtonVisible": {
      "type": "function",
      "name": "resetColumnVisibilityButtonVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getMetaColumnCounts": {
      "type": "function",
      "name": "getMetaColumnCounts",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>metaColumnCounts</code>.\n\nFor further details take a look at the property definition: {@link #metaColumnCounts}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for metaColumnCounts"
          }
        ]
      }
    },
    "setMetaColumnCounts": {
      "type": "function",
      "name": "setMetaColumnCounts",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>metaColumnCounts</code>.\n\nFor further details take a look at the property definition: {@link #metaColumnCounts}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for metaColumnCounts"
          }
        ]
      }
    },
    "resetMetaColumnCounts": {
      "type": "function",
      "name": "resetMetaColumnCounts",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getFocusCellOnPointerMove": {
      "type": "function",
      "name": "getFocusCellOnPointerMove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>focusCellOnPointerMove</code>.\n\nFor further details take a look at the property definition: {@link #focusCellOnPointerMove}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for focusCellOnPointerMove"
          }
        ]
      }
    },
    "isFocusCellOnPointerMove": {
      "type": "function",
      "name": "isFocusCellOnPointerMove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>focusCellOnPointerMove</code>.\n\nFor further details take a look at the property definition: {@link #focusCellOnPointerMove}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for focusCellOnPointerMove"
          }
        ]
      }
    },
    "setFocusCellOnPointerMove": {
      "type": "function",
      "name": "setFocusCellOnPointerMove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>focusCellOnPointerMove</code>.\n\nFor further details take a look at the property definition: {@link #focusCellOnPointerMove}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for focusCellOnPointerMove"
          }
        ]
      }
    },
    "resetFocusCellOnPointerMove": {
      "type": "function",
      "name": "resetFocusCellOnPointerMove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getRowFocusChangeModifiesSelection": {
      "type": "function",
      "name": "getRowFocusChangeModifiesSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rowFocusChangeModifiesSelection</code>.\n\nFor further details take a look at the property definition: {@link #rowFocusChangeModifiesSelection}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for rowFocusChangeModifiesSelection"
          }
        ]
      }
    },
    "isRowFocusChangeModifiesSelection": {
      "type": "function",
      "name": "isRowFocusChangeModifiesSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rowFocusChangeModifiesSelection</code>.\n\nFor further details take a look at the property definition: {@link #rowFocusChangeModifiesSelection}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for rowFocusChangeModifiesSelection"
          }
        ]
      }
    },
    "setRowFocusChangeModifiesSelection": {
      "type": "function",
      "name": "setRowFocusChangeModifiesSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rowFocusChangeModifiesSelection</code>.\n\nFor further details take a look at the property definition: {@link #rowFocusChangeModifiesSelection}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for rowFocusChangeModifiesSelection"
          }
        ]
      }
    },
    "resetRowFocusChangeModifiesSelection": {
      "type": "function",
      "name": "resetRowFocusChangeModifiesSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getShowCellFocusIndicator": {
      "type": "function",
      "name": "getShowCellFocusIndicator",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showCellFocusIndicator</code>.\n\nFor further details take a look at the property definition: {@link #showCellFocusIndicator}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showCellFocusIndicator"
          }
        ]
      }
    },
    "isShowCellFocusIndicator": {
      "type": "function",
      "name": "isShowCellFocusIndicator",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showCellFocusIndicator</code>.\n\nFor further details take a look at the property definition: {@link #showCellFocusIndicator}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showCellFocusIndicator"
          }
        ]
      }
    },
    "setShowCellFocusIndicator": {
      "type": "function",
      "name": "setShowCellFocusIndicator",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showCellFocusIndicator</code>.\n\nFor further details take a look at the property definition: {@link #showCellFocusIndicator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showCellFocusIndicator"
          }
        ]
      }
    },
    "resetShowCellFocusIndicator": {
      "type": "function",
      "name": "resetShowCellFocusIndicator",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getContextMenuFromDataCellsOnly": {
      "type": "function",
      "name": "getContextMenuFromDataCellsOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>contextMenuFromDataCellsOnly</code>.\n\nFor further details take a look at the property definition: {@link #contextMenuFromDataCellsOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for contextMenuFromDataCellsOnly"
          }
        ]
      }
    },
    "isContextMenuFromDataCellsOnly": {
      "type": "function",
      "name": "isContextMenuFromDataCellsOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>contextMenuFromDataCellsOnly</code>.\n\nFor further details take a look at the property definition: {@link #contextMenuFromDataCellsOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for contextMenuFromDataCellsOnly"
          }
        ]
      }
    },
    "setContextMenuFromDataCellsOnly": {
      "type": "function",
      "name": "setContextMenuFromDataCellsOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>contextMenuFromDataCellsOnly</code>.\n\nFor further details take a look at the property definition: {@link #contextMenuFromDataCellsOnly}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for contextMenuFromDataCellsOnly"
          }
        ]
      }
    },
    "resetContextMenuFromDataCellsOnly": {
      "type": "function",
      "name": "resetContextMenuFromDataCellsOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getKeepFirstVisibleRowComplete": {
      "type": "function",
      "name": "getKeepFirstVisibleRowComplete",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepFirstVisibleRowComplete</code>.\n\nFor further details take a look at the property definition: {@link #keepFirstVisibleRowComplete}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepFirstVisibleRowComplete"
          }
        ]
      }
    },
    "isKeepFirstVisibleRowComplete": {
      "type": "function",
      "name": "isKeepFirstVisibleRowComplete",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepFirstVisibleRowComplete</code>.\n\nFor further details take a look at the property definition: {@link #keepFirstVisibleRowComplete}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepFirstVisibleRowComplete"
          }
        ]
      }
    },
    "setKeepFirstVisibleRowComplete": {
      "type": "function",
      "name": "setKeepFirstVisibleRowComplete",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>keepFirstVisibleRowComplete</code>.\n\nFor further details take a look at the property definition: {@link #keepFirstVisibleRowComplete}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for keepFirstVisibleRowComplete"
          }
        ]
      }
    },
    "resetKeepFirstVisibleRowComplete": {
      "type": "function",
      "name": "resetKeepFirstVisibleRowComplete",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getAlwaysUpdateCells": {
      "type": "function",
      "name": "getAlwaysUpdateCells",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>alwaysUpdateCells</code>.\n\nFor further details take a look at the property definition: {@link #alwaysUpdateCells}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for alwaysUpdateCells"
          }
        ]
      }
    },
    "isAlwaysUpdateCells": {
      "type": "function",
      "name": "isAlwaysUpdateCells",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>alwaysUpdateCells</code>.\n\nFor further details take a look at the property definition: {@link #alwaysUpdateCells}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for alwaysUpdateCells"
          }
        ]
      }
    },
    "setAlwaysUpdateCells": {
      "type": "function",
      "name": "setAlwaysUpdateCells",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>alwaysUpdateCells</code>.\n\nFor further details take a look at the property definition: {@link #alwaysUpdateCells}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for alwaysUpdateCells"
          }
        ]
      }
    },
    "resetAlwaysUpdateCells": {
      "type": "function",
      "name": "resetAlwaysUpdateCells",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getResetSelectionOnHeaderTap": {
      "type": "function",
      "name": "getResetSelectionOnHeaderTap",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resetSelectionOnHeaderTap</code>.\n\nFor further details take a look at the property definition: {@link #resetSelectionOnHeaderTap}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resetSelectionOnHeaderTap"
          }
        ]
      }
    },
    "isResetSelectionOnHeaderTap": {
      "type": "function",
      "name": "isResetSelectionOnHeaderTap",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resetSelectionOnHeaderTap</code>.\n\nFor further details take a look at the property definition: {@link #resetSelectionOnHeaderTap}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for resetSelectionOnHeaderTap"
          }
        ]
      }
    },
    "setResetSelectionOnHeaderTap": {
      "type": "function",
      "name": "setResetSelectionOnHeaderTap",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resetSelectionOnHeaderTap</code>.\n\nFor further details take a look at the property definition: {@link #resetSelectionOnHeaderTap}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for resetSelectionOnHeaderTap"
          }
        ]
      }
    },
    "resetResetSelectionOnHeaderTap": {
      "type": "function",
      "name": "resetResetSelectionOnHeaderTap",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getDataRowRenderer": {
      "type": "function",
      "name": "getDataRowRenderer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataRowRenderer</code>.\n\nFor further details take a look at the property definition: {@link #dataRowRenderer}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.table.IRowRenderer",
            "desc": "Returns the value for dataRowRenderer"
          }
        ]
      }
    },
    "setDataRowRenderer": {
      "type": "function",
      "name": "setDataRowRenderer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dataRowRenderer</code>.\n\nFor further details take a look at the property definition: {@link #dataRowRenderer}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.table.IRowRenderer",
            "paramName": "value",
            "desc": "Value for dataRowRenderer"
          }
        ]
      }
    },
    "resetDataRowRenderer": {
      "type": "function",
      "name": "resetDataRowRenderer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getModalCellEditorPreOpenFunction": {
      "type": "function",
      "name": "getModalCellEditorPreOpenFunction",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>modalCellEditorPreOpenFunction</code>.\n\nFor further details take a look at the property definition: {@link #modalCellEditorPreOpenFunction}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for modalCellEditorPreOpenFunction"
          }
        ]
      }
    },
    "setModalCellEditorPreOpenFunction": {
      "type": "function",
      "name": "setModalCellEditorPreOpenFunction",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>modalCellEditorPreOpenFunction</code>.\n\nFor further details take a look at the property definition: {@link #modalCellEditorPreOpenFunction}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for modalCellEditorPreOpenFunction"
          }
        ]
      }
    },
    "resetModalCellEditorPreOpenFunction": {
      "type": "function",
      "name": "resetModalCellEditorPreOpenFunction",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getExcludeScrollerScrollbarsIfNotNeeded": {
      "type": "function",
      "name": "getExcludeScrollerScrollbarsIfNotNeeded",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>excludeScrollerScrollbarsIfNotNeeded</code>.\n\nFor further details take a look at the property definition: {@link #excludeScrollerScrollbarsIfNotNeeded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for excludeScrollerScrollbarsIfNotNeeded"
          }
        ]
      }
    },
    "isExcludeScrollerScrollbarsIfNotNeeded": {
      "type": "function",
      "name": "isExcludeScrollerScrollbarsIfNotNeeded",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>excludeScrollerScrollbarsIfNotNeeded</code>.\n\nFor further details take a look at the property definition: {@link #excludeScrollerScrollbarsIfNotNeeded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for excludeScrollerScrollbarsIfNotNeeded"
          }
        ]
      }
    },
    "setExcludeScrollerScrollbarsIfNotNeeded": {
      "type": "function",
      "name": "setExcludeScrollerScrollbarsIfNotNeeded",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>excludeScrollerScrollbarsIfNotNeeded</code>.\n\nFor further details take a look at the property definition: {@link #excludeScrollerScrollbarsIfNotNeeded}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for excludeScrollerScrollbarsIfNotNeeded"
          }
        ]
      }
    },
    "resetExcludeScrollerScrollbarsIfNotNeeded": {
      "type": "function",
      "name": "resetExcludeScrollerScrollbarsIfNotNeeded",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewColumnMenu": {
      "type": "function",
      "name": "getNewColumnMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newColumnMenu</code>.\n\nFor further details take a look at the property definition: {@link #newColumnMenu}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newColumnMenu"
          }
        ]
      }
    },
    "setNewColumnMenu": {
      "type": "function",
      "name": "setNewColumnMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newColumnMenu</code>.\n\nFor further details take a look at the property definition: {@link #newColumnMenu}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newColumnMenu"
          }
        ]
      }
    },
    "resetNewColumnMenu": {
      "type": "function",
      "name": "resetNewColumnMenu",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewSelectionManager": {
      "type": "function",
      "name": "getNewSelectionManager",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newSelectionManager</code>.\n\nFor further details take a look at the property definition: {@link #newSelectionManager}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newSelectionManager"
          }
        ]
      }
    },
    "setNewSelectionManager": {
      "type": "function",
      "name": "setNewSelectionManager",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newSelectionManager</code>.\n\nFor further details take a look at the property definition: {@link #newSelectionManager}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newSelectionManager"
          }
        ]
      }
    },
    "resetNewSelectionManager": {
      "type": "function",
      "name": "resetNewSelectionManager",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewSelectionModel": {
      "type": "function",
      "name": "getNewSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newSelectionModel</code>.\n\nFor further details take a look at the property definition: {@link #newSelectionModel}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newSelectionModel"
          }
        ]
      }
    },
    "setNewSelectionModel": {
      "type": "function",
      "name": "setNewSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newSelectionModel</code>.\n\nFor further details take a look at the property definition: {@link #newSelectionModel}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newSelectionModel"
          }
        ]
      }
    },
    "resetNewSelectionModel": {
      "type": "function",
      "name": "resetNewSelectionModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewTableColumnModel": {
      "type": "function",
      "name": "getNewTableColumnModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newTableColumnModel</code>.\n\nFor further details take a look at the property definition: {@link #newTableColumnModel}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newTableColumnModel"
          }
        ]
      }
    },
    "setNewTableColumnModel": {
      "type": "function",
      "name": "setNewTableColumnModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newTableColumnModel</code>.\n\nFor further details take a look at the property definition: {@link #newTableColumnModel}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newTableColumnModel"
          }
        ]
      }
    },
    "resetNewTableColumnModel": {
      "type": "function",
      "name": "resetNewTableColumnModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewTablePane": {
      "type": "function",
      "name": "getNewTablePane",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newTablePane</code>.\n\nFor further details take a look at the property definition: {@link #newTablePane}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newTablePane"
          }
        ]
      }
    },
    "setNewTablePane": {
      "type": "function",
      "name": "setNewTablePane",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newTablePane</code>.\n\nFor further details take a look at the property definition: {@link #newTablePane}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newTablePane"
          }
        ]
      }
    },
    "resetNewTablePane": {
      "type": "function",
      "name": "resetNewTablePane",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewTablePaneHeader": {
      "type": "function",
      "name": "getNewTablePaneHeader",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newTablePaneHeader</code>.\n\nFor further details take a look at the property definition: {@link #newTablePaneHeader}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newTablePaneHeader"
          }
        ]
      }
    },
    "setNewTablePaneHeader": {
      "type": "function",
      "name": "setNewTablePaneHeader",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newTablePaneHeader</code>.\n\nFor further details take a look at the property definition: {@link #newTablePaneHeader}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newTablePaneHeader"
          }
        ]
      }
    },
    "resetNewTablePaneHeader": {
      "type": "function",
      "name": "resetNewTablePaneHeader",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewTablePaneScroller": {
      "type": "function",
      "name": "getNewTablePaneScroller",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newTablePaneScroller</code>.\n\nFor further details take a look at the property definition: {@link #newTablePaneScroller}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newTablePaneScroller"
          }
        ]
      }
    },
    "setNewTablePaneScroller": {
      "type": "function",
      "name": "setNewTablePaneScroller",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newTablePaneScroller</code>.\n\nFor further details take a look at the property definition: {@link #newTablePaneScroller}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newTablePaneScroller"
          }
        ]
      }
    },
    "resetNewTablePaneScroller": {
      "type": "function",
      "name": "resetNewTablePaneScroller",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getNewTablePaneModel": {
      "type": "function",
      "name": "getNewTablePaneModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>newTablePaneModel</code>.\n\nFor further details take a look at the property definition: {@link #newTablePaneModel}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for newTablePaneModel"
          }
        ]
      }
    },
    "setNewTablePaneModel": {
      "type": "function",
      "name": "setNewTablePaneModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>newTablePaneModel</code>.\n\nFor further details take a look at the property definition: {@link #newTablePaneModel}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for newTablePaneModel"
          }
        ]
      }
    },
    "resetNewTablePaneModel": {
      "type": "function",
      "name": "resetNewTablePaneModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.Table",
      "property": "reset"
    },
    "getOpenCloseClickSelectsRow": {
      "type": "function",
      "name": "getOpenCloseClickSelectsRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>openCloseClickSelectsRow</code>.\n\nFor further details take a look at the property definition: {@link #openCloseClickSelectsRow}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for openCloseClickSelectsRow"
          }
        ]
      }
    },
    "isOpenCloseClickSelectsRow": {
      "type": "function",
      "name": "isOpenCloseClickSelectsRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>openCloseClickSelectsRow</code>.\n\nFor further details take a look at the property definition: {@link #openCloseClickSelectsRow}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for openCloseClickSelectsRow"
          }
        ]
      }
    },
    "setOpenCloseClickSelectsRow": {
      "type": "function",
      "name": "setOpenCloseClickSelectsRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>openCloseClickSelectsRow</code>.\n\nFor further details take a look at the property definition: {@link #openCloseClickSelectsRow}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for openCloseClickSelectsRow"
          }
        ]
      }
    },
    "resetOpenCloseClickSelectsRow": {
      "type": "function",
      "name": "resetOpenCloseClickSelectsRow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>openCloseClickSelectsRow</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #openCloseClickSelectsRow}."
          }
        ]
      }
    }
  },
  "descendants": []
}