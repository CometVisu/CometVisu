{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/treevirtual/SimpleTreeDataRowRenderer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "rowrenderer",
    "Default",
    "construct",
    "members",
    "updateDataRowElement",
    "rowInfo",
    "rowElem",
    "tree",
    "rowData",
    "tableModel",
    "getTableModel",
    "treeCol",
    "getTreeColumn",
    "node",
    "selected",
    "bSelected",
    "row",
    "selModel",
    "getSelectionModel",
    "isSelectedIndex",
    "_addSelectionInterval",
    "treevirtual",
    "SimpleTreeDataRowRenderer"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,6CAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,WAAZ,CAAwBC,OADnC;;AAME;AACF;AACA;AACA;AACA;AAEEC,IAAAA,SAAS,EAAG,qBAAW;AACrB;AACD,KAdH;;AAmBE;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EACP;AACE;AACAC,MAAAA,oBAAoB,EAAG,8BAASC,OAAT,EAAkBC,OAAlB,EACvB;AACE;AACA,YAAIC,IAAI,GAAGF,OAAO,CAACN,KAAnB;AACA,YAAIS,OAAO,GAAGH,OAAO,CAACG,OAAtB;AACA,YAAIC,UAAU,GAAGF,IAAI,CAACG,aAAL,EAAjB;AACA,YAAIC,OAAO,GAAGF,UAAU,CAACG,aAAX,EAAd;AACA,YAAIC,IAAI,GAAGL,OAAO,CAACG,OAAD,CAAlB,CANF,CAQE;;AACAN,QAAAA,OAAO,CAACS,QAAR,GAAmBD,IAAI,CAACE,SAAxB;;AAEA,YAAIF,IAAI,CAACE,SAAT,EACA;AACE;AACA,cAAIC,GAAG,GAAGX,OAAO,CAACW,GAAlB;AACA,cAAIC,QAAQ,GAAGV,IAAI,CAACW,iBAAL,EAAf;;AACA,cAAI,CAACD,QAAQ,CAACE,eAAT,CAAyBH,GAAzB,CAAL,EAAoC;AAClCC,YAAAA,QAAQ,CAACG,qBAAT,CAA+BJ,GAA/B,EAAoCA,GAApC;AACD;AACF,SAnBH,CAqBE;;;AACA,mGAAqBX,OAArB,EAA8BC,OAA9B;AACD;AA1BH;AA1BF,GADA;AArBAf,EAAAA,EAAE,CAACO,EAAH,CAAMuB,WAAN,CAAkBC,yBAAlB,CAA4C5B,aAA5C,GAA4DA,aAA5D",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * A data row renderer for a simple tree row\n */\nqx.Class.define(\"qx.ui.treevirtual.SimpleTreeDataRowRenderer\",\n{\n  extend : qx.ui.table.rowrenderer.Default,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function() {\n    this.base(arguments);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    updateDataRowElement : function(rowInfo, rowElem)\n    {\n      // If the node is selected, select the row\n      var tree = rowInfo.table;\n      var rowData = rowInfo.rowData;\n      var tableModel = tree.getTableModel();\n      var treeCol = tableModel.getTreeColumn();\n      var node = rowData[treeCol];\n\n      // Set the row's selected state based on the data model\n      rowInfo.selected = node.bSelected;\n\n      if (node.bSelected)\n      {\n        // Ensure that the selection model knows it's selected\n        var row = rowInfo.row;\n        var selModel = tree.getSelectionModel();\n        if (!selModel.isSelectedIndex(row)) {\n          selModel._addSelectionInterval(row, row);\n        }\n      }\n\n      // Now call our superclass\n      this.base(arguments, rowInfo, rowElem);\n    }\n  }\n});\n"
  ]
}