{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/popup/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "__objects",
    "event",
    "Registration",
    "addListener",
    "document",
    "documentElement",
    "__onPointerDown",
    "bom",
    "Element",
    "window",
    "hideAll",
    "members",
    "add",
    "obj",
    "push",
    "__updateIndexes",
    "remove",
    "lang",
    "Array",
    "l",
    "length",
    "current",
    "getAutoHide",
    "exclude",
    "min",
    "i",
    "setZIndex",
    "e",
    "target",
    "ui",
    "Widget",
    "getWidgetByElement",
    "getTarget",
    "reg",
    "contains",
    "destruct",
    "removeListener",
    "_disposeArray",
    "popup",
    "Manager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * This singleton is used to manager multiple instances of popups and their\n * state.\n */\nqx.Class.define(\"qx.ui.popup.Manager\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Create data structure, use an array because order matters [BUG #4323]\n    this.__objects = [];\n\n    // Register pointerdown handler\n    qx.event.Registration.addListener(document.documentElement, \"pointerdown\",\n                                      this.__onPointerDown, this, true);\n\n    // Hide all popups on window blur\n    qx.bom.Element.addListener(window, \"blur\", this.hideAll, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __objects : null,\n\n\n    /**\n     * Registers a visible popup.\n     *\n     * @param obj {qx.ui.popup.Popup} The popup to register\n     */\n    add : function(obj)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(obj instanceof qx.ui.popup.Popup)) {\n          throw new Error(\"Object is no popup: \" + obj);\n        }\n      }\n\n      this.__objects.push(obj);\n      this.__updateIndexes();\n    },\n\n\n    /**\n     * Removes a popup from the registry\n     *\n     * @param obj {qx.ui.popup.Popup} The popup which was excluded\n     */\n    remove : function(obj)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(obj instanceof qx.ui.popup.Popup)) {\n          throw new Error(\"Object is no popup: \" + obj);\n        }\n      }\n\n      qx.lang.Array.remove(this.__objects, obj);\n      this.__updateIndexes();\n    },\n\n\n    /**\n     * Excludes all currently open popups,\n     * except those with {@link qx.ui.popup.Popup#autoHide} set to false.\n     */\n    hideAll : function()\n    {\n      var l = this.__objects.length, current = {};\n\n      while (l--) {\n        current = this.__objects[l];\n        if (current.getAutoHide()) {\n          current.exclude();\n        }\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL HELPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Updates the zIndex of all registered items to push\n     * newly added ones on top of existing ones\n     *\n     */\n    __updateIndexes : function()\n    {\n      var min = 1e7;\n      for (var i = 0; i < this.__objects.length; i++) {\n        this.__objects[i].setZIndex(min++);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for pointer down events\n     *\n     * @param e {qx.event.type.Pointer} Pointer event object\n     */\n    __onPointerDown : function(e)\n    {\n      // Get the corresponding widget of the target since we are dealing with\n      // DOM elements here. This is necessary because we have to be aware of\n      // Inline applications which are not covering the whole document and\n      // therefore are not able to get all pointer events when only the\n      // application root is monitored.\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n\n      var reg = this.__objects;\n      for (var i = 0; i < reg.length; i++)\n      {\n        var obj = reg[i];\n\n        if (!obj.getAutoHide() || target == obj || qx.ui.core.Widget.contains(obj, target)) {\n          continue;\n        }\n\n        obj.exclude();\n      }\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    qx.event.Registration.removeListener(document.documentElement, \"pointerdown\",\n                                         this.__onPointerDown, this, true);\n\n    this._disposeArray(\"__objects\");\n  }\n});\n"
  ]
}