{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/Annotation.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__getOwnAnnos",
    "clazz",
    "name",
    "group",
    "annoClass",
    "$$annotations",
    "undefined",
    "annos",
    "match",
    "filter",
    "anno",
    "__getAnnos",
    "result",
    "tmp",
    "superclass",
    "src",
    "lang",
    "Array",
    "append",
    "getOwnClass",
    "getClass",
    "getOwnConstructor",
    "getConstructor",
    "getOwnDestructor",
    "getDestructor",
    "getOwnMember",
    "getMember",
    "getOwnProperty",
    "getProperty",
    "getPropertiesByAnnotation",
    "annotation",
    "properties",
    "Class",
    "getProperties",
    "forEach",
    "property",
    "Annotation",
    "includes",
    "push",
    "getStatic"
  ],
  "mappings": ";;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,eAApB,EAAqC;AACnCC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,QAAa,EAAE,kBAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwC;AACrD,YAAIH,KAAK,CAACI,aAAN,KAAwBC,SAA5B,EAAuC;AACrC,iBAAO,EAAP;AACD;;AACD,YAAIC,KAAK,GAAGJ,KAAK,GAAGF,KAAK,CAACI,aAAN,CAAoBF,KAApB,CAAH,GAAgCF,KAAK,CAACI,aAAvD;AACA,YAAIG,KAAK,GAAGD,KAAK,IAAIA,KAAK,CAACL,IAAD,CAA1B;;AACA,YAAI,CAACM,KAAL,EAAY;AACV,iBAAO,EAAP;AACD;;AACD,YAAIJ,SAAJ,EAAe;AACbI,UAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,UAASC,IAAT,EAAe;AAClC,mBAAOA,IAAI,YAAYN,SAAvB;AACD,WAFO,CAAR;AAGD;;AACD,eAAOI,KAAP;AACD,OAxBM;;AA2BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIG,MAAAA,QAAU,EAAE,kBAASV,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,SAA7B,E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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2016 Zenesis Limited (http://www.zenesis.com)\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com)\n\n************************************************************************ */\n\n/**\n * This class provides static API methods that allow the annotations of a class\n * to be inspected at runtime.\n * \n * Annotations are added to a class when the class is defined and is an array of\n * zero or more objects; annotations are always seen to be an array, but the contents\n * of that array is not type checked and is never changed (you should not change\n * the array at runtime).\n * \n * Annotations in the class definition are easily recognisable by the \"@\" symbol,\n * either as a prefix to a special keyword such as \"construct\", or as the prefix\n * to the name of the member which is being annotated.  The only exception to this\n * is that classes and properties don't need to be named, they just need a \"@\" \n * property.\n * \n * For example:\n * \n * <pre class='javascript'>\n * qx.Class.define(\"foo.MyClass\", {\n *  \"@\": [ \"my-class-annotation\" ], // Class annotations,\n *  \"@construct\": [ \"my-constructor-annotation\" ], // Constructor annotations,\n *  \"@destruct\": [ \"my-destructor-annotation\" ], // Destructor annotations,\n *  \n *  properties: {\n *    myProperty: {\n *      \"@\": [ \"some-property-anno\" ],\n *      init: null,\n *      nullable: true\n *    }\n *  },\n *  \n *  members: {\n *    \"@myMethod\": [ new foo.annotations.MyAnnotation(1, \"test\") ],\n *    myMethod: function() {\n *      // ... snip ...\n *    }\n *  },\n *  \n *  statics: {\n *    \"@myStatic\": [ \"a static anno\" ],\n *    myStatic: function() {\n *      // ... snip ... \n *    }\n *  }\n * });\n * </pre>\n * \n * Note that the annotation can be anything - a string can be easy and quick, but an\n * instance of a class may be appropriate for sophisticated needs (see the myMethod \n * example above).\n * \n * The static methods in this class allow you to programmatically get the annotations\n * that were defined; getClass() returns the class annotations, getMethod returns the \n * annotions for the named method, etc.\n * \n * When classes derive from each other, the default methods get the annotations for\n * the class and for the super classes as well; the array will be populated so that\n * the class's annotations are at the start, followed by it's super class, and so\n * on.  If you only want the annotations of the class and not those from the superclass,\n * use one of the getOwnXxxx methods instead.\n * \n */\nqx.Bootstrap.define(\"qx.Annotation\", {\n  statics: {\n    /**\n     * Returns a list of annotations, exclusively from this class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} the name (eg method name) to look for\n     * @param group {String} the group to look in if applicable (eg \"methods\")\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    __getOwnAnnos: function(clazz, name, group, annoClass) {\n      if (clazz.$$annotations === undefined) {\n        return [];\n      }\n      var annos = group ? clazz.$$annotations[group] : clazz.$$annotations;\n      var match = annos && annos[name];\n      if (!match) {\n        return [];\n      }\n      if (annoClass) {\n        match = match.filter(function(anno) {\n          return anno instanceof annoClass;\n        });\n      }\n      return match;\n    },\n\n    \n    /**\n     * Returns a list of annotations, from this class and superclasses\n     * @param clazz {Class} the starting class to inspect\n     * @param name {String} the name (eg method name) to look for\n     * @param group {String} the group to look in if applicable (eg \"methods\")\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    __getAnnos: function(clazz, name, group, annoClass) {\n      var result = [];\n      for (var tmp = clazz; tmp; tmp = tmp.superclass) {\n        if (tmp.$$annotations !== undefined) {\n          var annos = group ? tmp.$$annotations[group] : tmp.$$annotations;\n          var src = annos && annos[name];\n          if (src) {\n            if (annoClass) {\n              src = src.filter(function(anno) {\n                return anno instanceof annoClass;\n              });\n            }\n            qx.lang.Array.append(result, src);\n          }\n        }\n      }\n      return result;\n    },\n\n    \n    /**\n     * Returns the class annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getOwnClass: function(clazz, annoClass) {\n      return this.__getOwnAnnos(clazz, \"@\", null, annoClass);\n    },\n\n    \n    /**\n     * Returns the class annotations, from this class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getClass: function(clazz, annoClass) {\n      return this.__getAnnos(clazz, \"@\", null, annoClass);\n    },\n\n    \n    /**\n     * Returns the class constructor's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getOwnConstructor: function(clazz, annoClass) {\n      return this.__getOwnAnnos(clazz, \"@construct\", null, annoClass);\n    },\n\n    \n    /**\n     * Returns the class constructor's annotations, from the class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getConstructor: function(clazz, annoClass) {\n      return this.__getAnnos(clazz, \"@construct\", null, annoClass);\n    },\n\n    \n    /**\n     * Returns the class destructor's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getOwnDestructor: function(clazz, annoClass) {\n      return this.__getOwnAnnos(clazz, \"@destruct\", null, annoClass);\n    },\n\n    \n    /**\n     * Returns the class destructor's annotations, from the class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getDestructor: function(clazz, annoClass) {\n      return this.__getAnnos(clazz, \"@destruct\", null, annoClass);\n    },\n\n    \n    /**\n     * Returns the class member's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} member name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getOwnMember: function(clazz, name, annoClass) {\n      return this.__getOwnAnnos(clazz, name, \"members\", annoClass);\n    },\n\n\n    /**\n     * Returns the class member's annotations, from the class and superclass\n     * @param clazz {Class} the class to inspect\n     * @param name {String} member name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getMember: function(clazz, name, annoClass) {\n      return this.__getAnnos(clazz, name, \"members\", annoClass);\n    },\n    \n    /**\n     * Returns the class property's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} property name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getOwnProperty: function(clazz, name, annoClass) {\n      return this.__getOwnAnnos(clazz, name, \"properties\", annoClass);\n    },\n    \n    /**\n     * Returns the class property's annotations, from the class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param name {String} property name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getProperty: function(clazz, name, annoClass) {\n      return this.__getAnnos(clazz, name, \"properties\", annoClass);\n    },\n\n    /**\n     * Returns a list of property names that implement a given annotation.\n     * @param clazz {Class} the class to inspect\n     * @param annotation {String|Object} annotation to look for\n     * @return {String[]} the property names, never null\n     */\n    getPropertiesByAnnotation : function(clazz, annotation) {\n      var properties = [];\n\n      qx.Class.getProperties(clazz).forEach(function(property) {\n        if (qx.Annotation.getProperty(clazz, property).includes(annotation)) {\n          properties.push(property);\n        }\n      });\n\n      return properties;\n    },\n    \n    /**\n     * Returns the class static's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} static name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement \n     * @return {Object[]} the annotations, never null\n     */\n    getStatic: function(clazz, name, annoClass) {\n      return this.__getOwnAnnos(clazz, name, \"statics\", annoClass);\n    }\n  }\n});\n"
  ]
}