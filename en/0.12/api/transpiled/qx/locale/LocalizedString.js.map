{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/locale/LocalizedString.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "type",
    "BaseString",
    "construct",
    "translation",
    "messageId",
    "args",
    "localized",
    "__messageId",
    "__localized",
    "__args",
    "members",
    "translate",
    "locale",
    "Manager",
    "getInstance",
    "localize",
    "getMessageId",
    "LocalizedString"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAIAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,UADnB;;AAGE;;;;;;AAMAC,IAAAA,SAAS,EAAG,mBAASC,WAAT,EAAsBC,SAAtB,EAAiCC,IAAjC,EAAuCC,SAAvC,EACZ;AACE,gDAAqBH,WAArB;AAEA,WAAKI,WAAL,GAAmBH,SAAnB;AACA,WAAKI,WAAL,GAAmB,CAAC,CAACF,SAArB;AACA,WAAKG,MAAL,GAAcJ,IAAd;AACD,KAhBH;AAkBEK,IAAAA,OAAO,EACP;AACEF,MAAAA,WAAW,EAAG,IADhB;AAEED,MAAAA,WAAW,EAAG,IAFhB;AAGEE,MAAAA,MAAM,EAAG,IAHX;;AAKE;;;;;;AAMAE,MAAAA,SAAS,EAAG,qBAAW;AACrB,YAAI,KAAKH,WAAT,EAAsB;AACpB,iBAAOf,EAAE,CAACmB,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyC,KAAKR,WAA9C,EAA2D,KAAKE,MAAhE,CAAP;AACD;;AAED,eAAOhB,EAAE,CAACmB,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCH,SAAhC,CAA0C,KAAKJ,WAA/C,EAA4D,KAAKE,MAAjE,CAAP;AACD,OAjBH;;AAmBE;;;;;AAKAO,MAAAA,YAAY,EAAG,wBAAW;AACxB,eAAO,KAAKT,WAAZ;AACD;AA1BH;AAnBF,GADA;AAtBAd,EAAAA,EAAE,CAACmB,MAAH,CAAUK,eAAV,CAA0BrB,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class contains the translation of a message and all information\n * to translate it again into a different language.\n */\nqx.Class.define(\"qx.locale.LocalizedString\",\n{\n  extend : qx.type.BaseString,\n\n  /**\n   * @param translation {String} The translated message\n   * @param messageId {String} The messageId to translate\n   * @param args {Array} list of arguments passed used as values for format strings\n   * @param localized {Boolean} True if the string uses localize instead of translate\n   */\n  construct : function(translation, messageId, args, localized)\n  {\n    this.base(arguments, translation);\n\n    this.__messageId = messageId;\n    this.__localized = !!localized;\n    this.__args = args;\n  },\n\n  members :\n  {\n    __localized : null,\n    __messageId : null,\n    __args : null,\n\n    /**\n     * Get a translation of the string using the current locale.\n     *\n     * @return {qx.locale.LocalizedString|String} This string translated using the current\n     *    locale.\n     */\n    translate : function() {\n      if (this.__localized) {\n        return qx.locale.Manager.getInstance().localize(this.__messageId, this.__args);\n      }\n\n      return qx.locale.Manager.getInstance().translate(this.__messageId, this.__args);\n    },\n\n    /**\n     * Returns the messageId.\n     *\n     * @return {String} The messageId of this localized String\n     */\n    getMessageId : function() {\n      return this.__messageId;\n    }\n  }\n});\n"
  ]
}