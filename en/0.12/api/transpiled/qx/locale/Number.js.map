{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/locale/Number.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "getDecimalSeparator",
    "locale",
    "Manager",
    "getInstance",
    "localize",
    "getGroupSeparator",
    "getPercentFormat",
    "Number"
  ],
  "mappings": ";;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;AAOAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kBAAhB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;;;;;;AAMAC,MAAAA,mBAAmB,EAAG,6BAASC,MAAT,EAAiB;AACrC,eAAOR,EAAE,CAACQ,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyC,+BAAzC,EAA0E,EAA1E,EAA8EH,MAA9E,CAAP;AACD,OATH;;AAYE;;;;;;AAMAI,MAAAA,iBAAiB,EAAG,2BAASJ,MAAT,EAAiB;AACnC,eAAOR,EAAE,CAACQ,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyC,6BAAzC,EAAwE,EAAxE,EAA4EH,MAA5E,CAAP;AACD,OApBH;;AAuBE;;;;;;AAMAK,MAAAA,gBAAgB,EAAG,0BAASL,MAAT,EAAiB;AAClC,eAAOR,EAAE,CAACQ,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyC,4BAAzC,EAAuE,EAAvE,EAA2EH,MAA3E,CAAP;AACD;AA/BH;AAFF,GADA;AA3BAR,EAAAA,EAAE,CAACQ,MAAH,CAAUM,MAAV,CAAiBX,aAAjB,GAAiCA,aAAjC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Provides information about locale-dependent number formatting (like the decimal\n * separator).\n *\n * @cldr()\n */\n\nqx.Class.define(\"qx.locale.Number\",\n{\n  statics :\n  {\n    /**\n     * Get decimal separator for number formatting\n     *\n     * @param locale {String} optional locale to be used\n     * @return {String} decimal separator.\n     */\n    getDecimalSeparator : function(locale) {\n      return qx.locale.Manager.getInstance().localize(\"cldr_number_decimal_separator\", [], locale);\n    },\n\n\n    /**\n     * Get thousand grouping separator for number formatting\n     *\n     * @param locale {String} optional locale to be used\n     * @return {String} group separator.\n     */\n    getGroupSeparator : function(locale) {\n      return qx.locale.Manager.getInstance().localize(\"cldr_number_group_separator\", [], locale);\n    },\n\n\n    /**\n     * Get percent format string\n     *\n     * @param locale {String} optional locale to be used\n     * @return {String} percent format string.\n     */\n    getPercentFormat : function(locale) {\n      return qx.locale.Manager.getInstance().localize(\"cldr_number_percent_format\", [], locale);\n    }\n  }\n});\n"
  ]
}