{
  "className": "qx.locale.Manager",
  "packageName": "qx.locale",
  "name": "Manager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0
      },
      "end": {
        "line": 474,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Sebastian Werner (wpbasti)\n Andreas Ecker (ecker)\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>The qx.locale.Manager provides static translation methods (like tr()) and\n general locale information.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.event.dispatch.Direct"
        },
        {
          "name": "@require",
          "body": "qx.locale.LocalizedString"
        }
      ],
      "@cldr": [
        {
          "name": "@cldr",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 45,
        "column": 14
      },
      "end": {
        "line": 54,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "statics": {
    "tr": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 78,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a message</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)",
            "paramName": "messageId",
            "description": " message id (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "varargs {Object} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "qx.lang.String.format"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "trn": {
      "location": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a plural message\n Depending on the third argument the plural or the singular form is chosen.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "singularMessageId {String} message id of the singular form (may contain format strings)",
            "paramName": "singularMessageId",
            "description": " message id of the singular form (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "pluralMessageId {String} message id of the plural form (may contain format strings)",
            "paramName": "pluralMessageId",
            "description": " message id of the plural form (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "count {Integer} singular form if equals 1, otherwise plural",
            "paramName": "count",
            "description": " singular form if equals 1, otherwise plural",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "varargs {Object} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "qx.lang.String.format"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "trc": {
      "location": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a message with translation hint (from developer addressed to translator).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hint {String} hint for the translator of the message. Will be included in the .po file.",
            "paramName": "hint",
            "description": " hint for the translator of the message. Will be included in the .po file.",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)",
            "paramName": "messageId",
            "description": " message id (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "varargs {Object} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "qx.lang.String.format"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "trnc": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 150,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a plural message with translation hint (from developer addressed to translator).\n Depending on the third argument the plural or the singular form is chosen.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hint {String} hint for the translator of the message. Will be included in the .po file.",
            "paramName": "hint",
            "description": " hint for the translator of the message. Will be included in the .po file.",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "singularMessageId {String} message id of the singular form (may contain format strings)",
            "paramName": "singularMessageId",
            "description": " message id of the singular form (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "pluralMessageId {String} message id of the plural form (may contain format strings)",
            "paramName": "pluralMessageId",
            "description": " message id of the plural form (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "count {Integer} singular form if equals 1, otherwise plural",
            "paramName": "count",
            "description": " singular form if equals 1, otherwise plural",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "varargs {Object} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "qx.lang.String.format"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "marktr": {
      "location": {
        "start": {
          "line": 158,
          "column": 4
        },
        "end": {
          "line": 160,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Mark the message for translation but return the original message.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} the message ID",
            "paramName": "messageId",
            "description": " the message ID",
            "type": "qx.locale.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} messageId",
            "type": "qx.locale.String",
            "description": " messageId"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "properties": {
    "locale": {
      "location": {
        "start": {
          "line": 175,
          "column": 4
        },
        "end": {
          "line": 190,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>current locale. locale is an language code like de, de<em>AT, en, en</em>GB, fr, …</p>"
          }
        ]
      },
      "name": "locale",
      "propertyType": "new",
      "event": "changeLocale",
      "apply": "_applyLocale",
      "check": "String"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "__defaultLocale": {
      "location": {
        "start": {
          "line": 205,
          "column": 4
        },
        "end": {
          "line": 205,
          "column": 63
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__locale": {
      "location": {
        "start": {
          "line": 206,
          "column": 4
        },
        "end": {
          "line": 206,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__language": {
      "location": {
        "start": {
          "line": 207,
          "column": 4
        },
        "end": {
          "line": 207,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__translations": {
      "location": {
        "start": {
          "line": 208,
          "column": 4
        },
        "end": {
          "line": 208,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__locales": {
      "location": {
        "start": {
          "line": 209,
          "column": 4
        },
        "end": {
          "line": 209,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__clientLocale": {
      "location": {
        "start": {
          "line": 210,
          "column": 4
        },
        "end": {
          "line": 210,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getLanguage": {
      "location": {
        "start": {
          "line": 219,
          "column": 4
        },
        "end": {
          "line": 221,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the language code of the current locale\n This is the first part of a locale definition. The language for \"de_DE\" would be \"de\"</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} language code",
            "type": "qx.locale.String",
            "description": " language code"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTerritory": {
      "location": {
        "start": {
          "line": 231,
          "column": 4
        },
        "end": {
          "line": 233,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the territory code of the current locale\n This is the second part of a locale definition. The territory for \"de_DE\" would be \"DE\"</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} territory code",
            "type": "qx.locale.String",
            "description": " territory code"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAvailableLocales": {
      "location": {
        "start": {
          "line": 248,
          "column": 4
        },
        "end": {
          "line": 263,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the available application locales\n This corresponds to the LOCALES setting in config.json. Without argument,\n it only returns the currently loaded locales, with an argument of true\n all locales that went into the build. This is particularly interesting if\n locales were generated as dedicated I18N parts, and have to be loaded\n explicitly before being available.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "includeNonloaded {Boolean?null} include locales not yet loaded",
            "paramName": "includeNonloaded",
            "description": " include locales not yet loaded",
            "optional": true,
            "defaultValue": "null",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} array of available locales",
            "type": "String[]",
            "description": " array of available locales"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__extractLanguage": {
      "location": {
        "start": {
          "line": 272,
          "column": 4
        },
        "end": {
          "line": 287,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Extract the language part from a locale.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "locale {String} locale to be used",
            "paramName": "locale",
            "description": " locale to be used",
            "type": "qx.locale.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} language",
            "type": "qx.locale.String",
            "description": " language"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_applyLocale": {
      "location": {
        "start": {
          "line": 291,
          "column": 4
        },
        "end": {
          "line": 301,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>property apply</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "locale"
      ]
    },
    "addTranslation": {
      "location": {
        "start": {
          "line": 316,
          "column": 4
        },
        "end": {
          "line": 329,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a translation to the translation manager.\n If <code>languageCode</code> already exists, its map will be updated with\n <code>translationMap</code> (new keys will be added, existing keys will be\n overwritten).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "languageCode {String} language code of the translation like <i>de, de_AT, en, en_GB, fr, ...</i>",
            "paramName": "languageCode",
            "description": " language code of the translation like <i>de, de_AT, en, en_GB, fr, ...</i>",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "translationMap {Map} mapping of message identifiers to message strings in the target\n                             language, e.g. <i>{\"greeting_short\" : \"Hello\"}</i>. Plural forms\n                             are separate keys.",
            "paramName": "translationMap",
            "description": " mapping of message identifiers to message strings in the target\n                             language, e.g. <i>{\"greeting_short\" : \"Hello\"}</i>. Plural forms\n                             are separate keys.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addLocale": {
      "location": {
        "start": {
          "line": 342,
          "column": 4
        },
        "end": {
          "line": 355,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a localization to the localization manager.\n If <code>localeCode</code> already exists, its map will be updated with\n <code>localeMap</code> (new keys will be added, existing keys will be overwritten).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "localeCode {String} locale code of the translation like <i>de, de_AT, en, en_GB, fr, ...</i>",
            "paramName": "localeCode",
            "description": " locale code of the translation like <i>de, de_AT, en, en_GB, fr, ...</i>",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "localeMap {Map} mapping of locale keys to the target locale values, e.g.\n                        <i>{\"cldr_date_format_short\" : \"M/d/yy\"}</i>.",
            "paramName": "localeMap",
            "description": " mapping of locale keys to the target locale values, e.g.\n                        <i>{\"cldr_date_format_short\" : \"M/d/yy\"}</i>.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "translate": {
      "location": {
        "start": {
          "line": 371,
          "column": 4
        },
        "end": {
          "line": 375,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a message using the current locale and apply format string to the arguments.\n Implements the lookup chain locale (e.g. en_US) -&gt; language (e.g. en) -&gt;\n default locale (e.g. C). Localizes the arguments if possible and splices\n them into the message. If qx.dynlocale is on, returns a {@link\n LocalizedString}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)",
            "paramName": "messageId",
            "description": " message id (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "args {Object[]} array of objects, which are inserted into the format string",
            "paramName": "args",
            "description": " array of objects, which are inserted into the format string",
            "type": "Object[]"
          },
          {
            "name": "@param",
            "body": "locale {String ? #locale} locale to be used; if not given, defaults to the value of {@link #locale}",
            "paramName": "locale",
            "description": " locale to be used; if not given, defaults to the value of {@link #locale}",
            "optional": true,
            "defaultValue": "#locale",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} translated message or localized string",
            "type": "String | LocalizedString",
            "description": " translated message or localized string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "localize": {
      "location": {
        "start": {
          "line": 390,
          "column": 4
        },
        "end": {
          "line": 394,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Provide localization (CLDR) data.\n Implements the lookup chain locale (e.g. en_US) -&gt; language (e.g. en) -&gt;\n default locale (e.g. C). Localizes the arguments if possible and splices\n them into the message. If qx.dynlocale is on, returns a {@link\n LocalizedString}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)",
            "paramName": "messageId",
            "description": " message id (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "args {Object[]} array of objects, which are inserted into the format string",
            "paramName": "args",
            "description": " array of objects, which are inserted into the format string",
            "type": "Object[]"
          },
          {
            "name": "@param",
            "body": "locale {String ? #locale} locale to be used; if not given, defaults to the value of {@link #locale}",
            "paramName": "locale",
            "description": " locale to be used; if not given, defaults to the value of {@link #locale}",
            "optional": true,
            "defaultValue": "#locale",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} translated message or localized string",
            "type": "String | LocalizedString",
            "description": " translated message or localized string"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__lookupAndExpand": {
      "location": {
        "start": {
          "line": 411,
          "column": 4
        },
        "end": {
          "line": 472,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Look up an I18N key in a catalog and expand format strings.\n Implements the lookup chain locale (e.g. en_US) -&gt; language (e.g. en) -&gt;\n default locale (e.g. C). Localizes the arguments if possible and splices\n them into the message. If qx.dynlocale is on, returns a {@link\n LocalizedString}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "catalog {Map} map of I18N keys and their values",
            "paramName": "catalog",
            "description": " map of I18N keys and their values",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)",
            "paramName": "messageId",
            "description": " message id (may contain format strings)",
            "type": "qx.locale.String"
          },
          {
            "name": "@param",
            "body": "args {Object[]} array of objects, which are inserted into the format string",
            "paramName": "args",
            "description": " array of objects, which are inserted into the format string",
            "type": "Object[]"
          },
          {
            "name": "@param",
            "body": "locale {String ? #locale} locale to be used; if not given, defaults to the value of {@link #locale}",
            "paramName": "locale",
            "description": " locale to be used; if not given, defaults to the value of {@link #locale}",
            "optional": true,
            "defaultValue": "#locale",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} translated message or localized string",
            "type": "String | LocalizedString",
            "description": " translated message or localized string"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getLocale": {
      "type": "function",
      "name": "getLocale",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>locale</code>.\n\nFor further details take a look at the property definition: {@link #locale}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for locale"
          }
        ]
      }
    },
    "setLocale": {
      "type": "function",
      "name": "setLocale",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>locale</code>.\n\nFor further details take a look at the property definition: {@link #locale}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for locale"
          }
        ]
      }
    },
    "resetLocale": {
      "type": "function",
      "name": "resetLocale",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>locale</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #locale}."
          }
        ]
      }
    }
  },
  "descendants": []
}