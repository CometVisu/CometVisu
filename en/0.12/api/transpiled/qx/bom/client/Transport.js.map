{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Transport.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getMaxConcurrentRequestCount",
    "maxConcurrentRequestCount",
    "versionParts",
    "bom",
    "client",
    "Engine",
    "getVersion",
    "split",
    "versionMain",
    "versionMajor",
    "versionMinor",
    "window",
    "maxConnectionsPerServer",
    "getName",
    "getSsl",
    "location",
    "protocol",
    "getXmlHttpRequest",
    "supports",
    "ActiveXObject",
    "XMLHttpRequest",
    "noXhr",
    "noActiveX",
    "defer",
    "core",
    "Environment",
    "add",
    "Transport"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,yBAApB,EACA;AACE;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,4BAA4B,EAAE,wCAC9B;AACE,YAAIC,yBAAJ,CADF,CAGE;;AACA,YAAIC,YAAY,GAAGR,EAAE,CAACS,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBC,UAArB,GAAkCC,KAAlC,CAAwC,GAAxC,CAAnB;AACA,YAAIC,WAAW,GAAG,CAAlB;AACA,YAAIC,YAAY,GAAG,CAAnB;AACA,YAAIC,YAAY,GAAG,CAAnB,CAPF,CASE;;AACA,YAAIR,YAAY,CAAC,CAAD,CAAhB,EAAqB;AACnBM,UAAAA,WAAW,GAAGN,YAAY,CAAC,CAAD,CAA1B;AACD,SAZH,CAcE;;;AACA,YAAIA,YAAY,CAAC,CAAD,CAAhB,EAAqB;AACnBO,UAAAA,YAAY,GAAGP,YAAY,CAAC,CAAD,CAA3B;AACD,SAjBH,CAmBE;;;AACA,YAAIA,YAAY,CAAC,CAAD,CAAhB,EAAqB;AACnBQ,UAAAA,YAAY,GAAGR,YAAY,CAAC,CAAD,CAA3B;AACD,SAtBH,CAwBE;AACA;;;AACA,YAAIS,MAAM,CAACC,uBAAX,EAAmC;AACjCX,UAAAA,yBAAyB,GAAGU,MAAM,CAACC,uBAAnC;AAED,SAHD,MAGO,IAAIlB,EAAE,CAACS,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBQ,OAArB,MAAkC,OAAtC,EAA+C;AACpD;AACA;AACAZ,UAAAA,yBAAyB,GAAG,CAA5B;AAED,SALM,MAKA,IAAIP,EAAE,CAACS,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBQ,OAArB,MAAkC,QAAtC,EAAgD;AACrD;AACA;AAEA;AACA;AACA;AAEAZ,UAAAA,yBAAyB,GAAG,CAA5B;AAED,SAVM,MAUA,IAAIP,EAAE,CAACS,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBQ,OAArB,MAAkC,OAAlC,KACML,WAAW,GAAE,CAAd,IACKA,WAAW,IAAI,CAAhB,IAAuBC,YAAY,GAAG,CAD1C,IAEKD,WAAW,IAAI,CAAhB,IAAuBC,YAAY,IAAI,CAAvC,IAA8CC,YAAY,IAAI,CAHvE,CAAJ,EAGgF;AACnF;AACA;AACAT,UAAAA,yBAAyB,GAAG,CAA5B;AAEH,SARM,MAQA;AACL;AACA;AACAA,UAAAA,yBAAyB,GAAG,CAA5B;AACD;;AAED,eAAOA,yBAAP;AACD,OA7EH;;AAgFE;AACJ;AACA;AACA;AACA;AACA;AACIa,MAAAA,MAAM,EAAG,kBAAW;AAClB,eAAOH,MAAM,CAACI,QAAP,CAAgBC,QAAhB,KAA6B,QAApC;AACD,OAxFH;;AA0FE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,iBAAiB,EAAG,6BAAW;AAC7B;AACA;AACA;AACA,YAAIC,QAAQ,GAAGP,MAAM,CAACQ,aAAP,GACZ,YAAW;AACV,cAAKR,MAAM,CAACI,QAAP,CAAgBC,QAAhB,KAA6B,OAAlC,EAA4C;AAC1C,gBAAI;AACF,kBAAIL,MAAM,CAACS,cAAX;AACA,qBAAO,KAAP;AACD,aAHD,CAGE,OAAMC,KAAN,EAAa,CAAE;AAClB;;AAED,cAAI;AACF,gBAAIV,MAAM,CAACQ,aAAX,CAAyB,mBAAzB;AACA,mBAAO,SAAP;AACD,WAHD,CAGE,OAAMG,SAAN,EAAiB,CAAE;AACtB,SAZD,EADa,GAeZ,YAAW;AACV,cAAI;AACF,gBAAIX,MAAM,CAACS,cAAX;AACA,mBAAO,KAAP;AACD,WAHD,CAGE,OAAMC,KAAN,EAAa,CAAE;AAClB,SALD,EAfF;AAsBA,eAAOH,QAAQ,IAAI,EAAnB;AACD;AAjIH,KARF;AA4IEK,IAAAA,KAAK,EAAG,eAASxB,OAAT,EAAkB;AACxBL,MAAAA,EAAE,CAAC8B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,EAA0C3B,OAAO,CAACC,4BAAlD;AACAN,MAAAA,EAAE,CAAC8B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,QAAxB,EAAkC3B,OAAO,CAACe,MAA1C;AACApB,MAAAA,EAAE,CAAC8B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,QAAxB,EAAkC3B,OAAO,CAACkB,iBAA1C;AACD;AAhJH,GADA;AA5BAvB,EAAAA,EAAE,CAACS,GAAH,CAAOC,MAAP,CAAcuB,SAAd,CAAwB9B,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Carsten Lergenmueller (carstenl)\n     * Fabian Jakobs (fbjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Determines browser-dependent information about the transport layer.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.Transport\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Returns the maximum number of parallel requests the current browser\n     * supports per host addressed.\n     *\n     * Note that this assumes one connection can support one request at a time\n     * only. Technically, this is not correct when pipelining is enabled (which\n     * it currently is only for IE 8 and Opera). In this case, the number\n     * returned will be too low, as one connection supports multiple pipelined\n     * requests. This is accepted for now because pipelining cannot be\n     * detected from JavaScript and because modern browsers have enough\n     * parallel connections already - it's unlikely an app will require more\n     * than 4 parallel XMLHttpRequests to one server at a time.\n     *\n     * @internal\n     * @return {Integer} Maximum number of parallel requests\n     */\n    getMaxConcurrentRequestCount: function()\n    {\n      var maxConcurrentRequestCount;\n\n      // Parse version numbers.\n      var versionParts = qx.bom.client.Engine.getVersion().split(\".\");\n      var versionMain = 0;\n      var versionMajor = 0;\n      var versionMinor = 0;\n\n      // Main number\n      if (versionParts[0]) {\n        versionMain = versionParts[0];\n      }\n\n      // Major number\n      if (versionParts[1]) {\n        versionMajor = versionParts[1];\n      }\n\n      // Minor number\n      if (versionParts[2]) {\n        versionMinor = versionParts[2];\n      }\n\n      // IE 8 gives the max number of connections in a property\n      // see http://msdn.microsoft.com/en-us/library/cc197013(VS.85).aspx\n      if (window.maxConnectionsPerServer){\n        maxConcurrentRequestCount = window.maxConnectionsPerServer;\n\n      } else if (qx.bom.client.Engine.getName() == \"opera\") {\n        // Opera: 8 total\n        // see http://operawiki.info/HttpProtocol\n        maxConcurrentRequestCount = 8;\n\n      } else if (qx.bom.client.Engine.getName() == \"webkit\") {\n        // Safari: 4\n        // http://www.stevesouders.com/blog/2008/03/20/roundup-on-parallel-connections/\n\n        // Bug #6917: Distinguish Chrome from Safari, Chrome has 6 connections\n        //       according to\n        //      http://stackoverflow.com/questions/561046/how-many-concurrent-ajax-xmlhttprequest-requests-are-allowed-in-popular-browser\n\n        maxConcurrentRequestCount = 4;\n\n      } else if (qx.bom.client.Engine.getName() == \"gecko\"\n                 && ( (versionMain >1)\n                      || ((versionMain == 1) && (versionMajor > 9))\n                      || ((versionMain == 1) && (versionMajor == 9) && (versionMinor >= 1)))){\n          // FF 3.5 (== Gecko 1.9.1): 6 Connections.\n          // see  http://gemal.dk/blog/2008/03/18/firefox_3_beta_5_will_have_improved_connection_parallelism/\n          maxConcurrentRequestCount = 6;\n\n      } else {\n        // Default is 2, as demanded by RFC 2616\n        // see http://blogs.msdn.com/ie/archive/2005/04/11/407189.aspx\n        maxConcurrentRequestCount = 2;\n      }\n\n      return maxConcurrentRequestCount;\n    },\n\n\n    /**\n     * Checks whether the app is loaded with SSL enabled which means via https.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code>, if the app runs on https\n     */\n    getSsl : function() {\n      return window.location.protocol === \"https:\";\n    },\n\n    /**\n     * Checks what kind of XMLHttpRequest object the browser supports\n     * for the current protocol, if any.\n     *\n     * The standard XMLHttpRequest is preferred over ActiveX XMLHTTP.\n     *\n     * @internal\n     * @return {String}\n     *  <code>\"xhr\"</code>, if the browser provides standard XMLHttpRequest.<br/>\n     *  <code>\"activex\"</code>, if the browser provides ActiveX XMLHTTP.<br/>\n     *  <code>\"\"</code>, if there is not XHR support at all.\n     */\n    getXmlHttpRequest : function() {\n      // Standard XHR can be disabled in IE's security settings,\n      // therefore provide ActiveX as fallback. Additionally,\n      // standard XHR in IE7 is broken for file protocol.\n      var supports = window.ActiveXObject ?\n        (function() {\n          if ( window.location.protocol !== \"file:\" ) {\n            try {\n              new window.XMLHttpRequest();\n              return \"xhr\";\n            } catch(noXhr) {}\n          }\n\n          try {\n            new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n            return \"activex\";\n          } catch(noActiveX) {}\n        })()\n        :\n        (function() {\n          try {\n            new window.XMLHttpRequest();\n            return \"xhr\";\n          } catch(noXhr) {}\n        })();\n\n      return supports || \"\";\n    }\n  },\n\n  defer : function(statics) {\n    qx.core.Environment.add(\"io.maxrequests\", statics.getMaxConcurrentRequestCount);\n    qx.core.Environment.add(\"io.ssl\", statics.getSsl);\n    qx.core.Environment.add(\"io.xhr\", statics.getXmlHttpRequest);\n  }\n});\n"
  ]
}