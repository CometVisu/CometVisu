{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/bom/Window.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__blocker",
    "__blockerWindow",
    "__timer",
    "__modalOptions",
    "left",
    "width",
    "height",
    "scrollbars",
    "resizable",
    "__modelessOptions",
    "dependent",
    "status",
    "location",
    "menubar",
    "toolbar",
    "__isCapableToOpenModalWindows",
    "window",
    "showModalDialog",
    "open",
    "url",
    "name",
    "options",
    "modal",
    "useNativeModalDialog",
    "listener",
    "self",
    "newWindow",
    "Date",
    "getTime",
    "configurationString",
    "__generateConfigurationString",
    "getBlocker",
    "block",
    "event",
    "Timer",
    "addListener",
    "__checkForUnblocking",
    "restart",
    "Function",
    "context",
    "onLoadFunction",
    "lang",
    "bind",
    "onNativeLoad",
    "bom",
    "Event",
    "removeNativeListener",
    "addNativeListener",
    "modality",
    "value",
    "configuration",
    "key",
    "Window",
    "suffix",
    "push",
    "log",
    "Logger",
    "warn",
    "join",
    "Type",
    "isBoolean",
    "isClosed",
    "unblock",
    "stop",
    "Blocker",
    "close",
    "win",
    "closed",
    "ex",
    "moveTo",
    "top",
    "error",
    "resizeTo"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * Includes library functions to work with browser windows\n */\nqx.Class.define(\"qx.bom.Window\",\n{\n  statics :\n  {\n    /** Internal blocker instance for all browsers which need an additional\n     * blocker for modal windows because they do not support it natively.\n     */\n    __blocker : null,\n\n    /** Window handle which is currently blocked. */\n    __blockerWindow : null,\n\n    /** Timer instance to poll for unblocking if the modal window was closed */\n    __timer : null,\n\n    /** Supported options and their mapping to window options */\n    __modalOptions :\n    {\n      \"top\"      : \"dialogTop\",\n      left       : \"dialogLeft\",\n      width      : \"dialogWidth\",\n      height     : \"dialogHeight\",\n      scrollbars : \"scroll\",\n      resizable  : \"resizable\"\n    },\n\n    /** Supported options for modeless windows */\n    __modelessOptions :\n    {\n      \"top\"      : 1,\n      left       : 1,\n      width      : 1,\n      height     : 1,\n      dependent  : 1,\n      resizable  : 1,\n      status     : 1,\n      location   : 1,\n      menubar    : 1,\n      scrollbars : 1,\n      toolbar    : 1\n    },\n\n\n    /**\n     * Whether the browser can open native modal window.\n     *\n     * @return {Boolean} Capability of open modal windows\n     */\n    __isCapableToOpenModalWindows : function() {\n      return window.showModalDialog != null;\n    },\n\n\n    /**\n     * Opens a native window with the given options.\n     *\n     * Modal windows can have the following options:\n     *\n     *   * top\n     *\n     *   * left\n     *\n     *   * width\n     *\n     *   * height\n     *\n     *   * scrollbars\n     *\n     *   * resizable\n     *\n     * Modeless windows have the following options:\n     *\n     *   * top\n     *\n     *   * left\n     *\n     *   * width\n     *\n     *   * height\n     *\n     *   * dependent\n     *\n     *   * resizable\n     *\n     *   * status\n     *\n     *   * location\n     *\n     *   * menubar\n     *\n     *   * scrollbars\n     *\n     *   * toolbar\n     *\n     * Except of dimension and location options all other options are boolean\n     * values.\n     *\n     * *Important infos for native modal windows*\n     *\n     * If you want to reference the opened window from within the native modal\n     * window you need to use\n     *\n     * <pre class='javascript'>\n     * var opener = window.dialogArguments[0];\n     * </pre>\n     *\n     * since a reference to the opener is passed automatically to the modal window.\n     *\n     * *Passing window arguments*\n     *\n     * This is only working if the page of the modal window is from the same origin.\n     * This is at least true for Firefox browsers.\n     *\n     * @param url {String} URL of the window\n     * @param name {String} Name of the window\n     * @param options {Map} Window options\n     * @param modal {Boolean} Whether the window should be opened modal\n     * @param useNativeModalDialog {Boolean} controls if modal windows are opened\n     *                                       using the native method or a blocker\n     *                                       should be used to fake modality.\n     *                                       Default is <b>true</b>\n     * @param listener {Function ?} listener function for onload event on the new window\n     * @param self {Object ?} Reference to the 'this' variable inside\n     *         the event listener. When not given, 'this' variable will be the new window\n     * @return {Window} native window object\n     */\n    open : function(url, name, options, modal, useNativeModalDialog, listener, self)\n    {\n      var newWindow = null;\n      if (url == null) {\n        url = \"javascript:/\";\n      }\n\n      if (name == null) {\n        name = \"qxNativeWindow\" + new Date().getTime();\n      }\n\n      if (useNativeModalDialog == null) {\n        useNativeModalDialog = true;\n      }\n\n      var configurationString = this.__generateConfigurationString(options, modal && useNativeModalDialog);\n\n      if (modal)\n      {\n        if (this.__isCapableToOpenModalWindows() && useNativeModalDialog) {\n          newWindow = window.showModalDialog(url, [ window.self ], configurationString);\n        }\n        else\n        {\n          this.getBlocker().block();\n\n          if (this.__timer == null)\n          {\n            this.__timer = new qx.event.Timer(500);\n            this.__timer.addListener(\"interval\", this.__checkForUnblocking, this);\n          }\n\n          this.__blockerWindow = window.open(url, name, configurationString);\n          this.__timer.restart();\n\n          newWindow = this.__blockerWindow;\n        }\n      } else {\n        newWindow = window.open(url, name, configurationString);\n      }\n\n      if(newWindow && listener && (listener instanceof Function)){\n        var context = self || newWindow;\n        var onLoadFunction = qx.lang.Function.bind(listener, context);\n        var onNativeLoad = function(){\n          onLoadFunction();\n          qx.bom.Event.removeNativeListener(newWindow, 'load', onNativeLoad);\n        }\n        qx.bom.Event.addNativeListener(newWindow, 'load', onNativeLoad);\n      }\n      return newWindow;\n    },\n\n\n    /**\n     * Returns the given config as string for direct use for the \"window.open\" method\n     *\n     * @param options {Array} Array with all configuration options\n     * @param modality {Boolean} whether the config should be for a modal window\n     *\n     * @return {String} configuration as string representation\n     */\n    __generateConfigurationString : function(options, modality)\n    {\n      var configurationString;\n      var value;\n      var configuration = [];\n\n      if (modality && this.__isCapableToOpenModalWindows())\n      {\n        for (var key in options)\n        {\n          if (qx.bom.Window.__modalOptions[key])\n          {\n            var suffix = \"\";\n            if (key != \"scrollbars\" && key != \"resizable\") {\n              suffix = \"px\";\n            }\n\n            value = qx.bom.Window.__modalOptions[key] + \":\" + options[key] + suffix;\n            configuration.push(value);\n          }\n          else {\n            qx.log.Logger.warn(\"Option '\" + key + \"' is not supported for modal windows.\");\n          }\n        }\n\n        configurationString = configuration.join(\";\");\n      }\n      else\n      {\n        for (var key in options)\n        {\n          if (qx.bom.Window.__modelessOptions[key])\n          {\n            if (qx.lang.Type.isBoolean(options[key])) {\n              value = key + \"=\" + (options[key] ? \"yes\" : \"no\");\n            }\n            else {\n              value = key + \"=\" + options[key];\n            }\n            configuration.push(value);\n          }\n          else {\n            qx.log.Logger.warn(\"Option '\" + key + \"' is not supported for native windows.\");\n          }\n        }\n\n        configurationString = configuration.join(\",\");\n      }\n\n      return configurationString;\n    },\n\n\n    /**\n     * Interval method which checks if the native window was closed to also\n     * stop the associated timer.\n     */\n    __checkForUnblocking : function()\n    {\n      if (this.isClosed(this.__blockerWindow))\n      {\n        this.getBlocker().unblock();\n        this.__timer.stop();\n      }\n    },\n\n\n    /**\n     * If a modal window is opened with the option\n     *\n     * <pre class='javascript'>\n     * useNativeModalWindow = false;\n     * </pre>\n     *\n     * an instance of <b>qx.bom.Blocker</b> is used to fake modality. This method\n     * can be used to get a reference to the blocker to style it.\n     *\n     * @return {qx.bom.Blocker?null} Blocker instance or null if no blocker is used\n     */\n    getBlocker : function()\n    {\n      if (this.__blocker == null) {\n        this.__blocker = new qx.bom.Blocker;\n      }\n\n      return this.__blocker;\n    },\n\n\n    /**\n     * Closes the given window\n     *\n     * @param win {Window} Native window object\n     * @return {var} The return value (if any) of the window's native\n     * <code>close</code> method\n     */\n    close : function(win)\n    {\n      if (win) {\n        return win.close();\n      }\n    },\n\n\n    /**\n     * Checks if the window is closed\n     *\n     * @param win {Window} Native window object\n     * @return {Boolean} Closed state\n     */\n    isClosed : function(win)\n    {\n      var closed = true;\n\n      if (win)\n      {\n        try {\n          closed = win.closed;\n        } catch(ex) {}\n      }\n\n      return closed;\n    },\n\n\n    /**\n     * Moving an opened window is not allowed in the most browsers anymore.\n     *\n     * @param win {Window} Native window object\n     * @param top {Integer} Y-coordinate\n     * @param left {Integer} X-coordinate\n     */\n    moveTo : function(win, top, left)\n    {\n      /*\n        http://www.microsoft.com/technet/prodtechnol/winxppro/maintain/sp2brows.mspx\n        Changes to Functionality in Microsoft Windows XP Service Pack 2\n        Part 5: Enhanced Browsing Security\n        URLACTION_FEATURE_WINDOW_RESTRICTIONS\n        Allow script-initiated windows without size or position constraints\n        Code: 2102\n      */\n\n      if (!qx.bom.Window.isClosed(win))\n      {\n        try {\n          win.moveTo(left, top);\n        } catch(ex) {\n          qx.log.Logger.error(\"Cross-Domain Scripting problem: Could not move window!\", ex);\n        }\n      }\n    },\n\n\n    /**\n     * Resizing an opened window is not allowed in the most browsers anymore.\n     *\n     * @param win {Window} Native window object\n     * @param width {Integer} New width\n     * @param height {Integer} New height\n     */\n    resizeTo : function(win, width, height)\n    {\n      /*\n        http://www.microsoft.com/technet/prodtechnol/winxppro/maintain/sp2brows.mspx\n        Changes to Functionality in Microsoft Windows XP Service Pack 2\n        Part 5: Enhanced Browsing Security\n        URLACTION_FEATURE_WINDOW_RESTRICTIONS\n        Allow script-initiated windows without size or position constraints\n        Code: 2102\n      */\n\n      if (!qx.bom.Window.isClosed(win))\n      {\n        try {\n          win.resizeTo(width, height);\n        } catch(ex) {\n          qx.log.Logger.error(\"Cross-Domain Scripting problem: Could not resize window!\", ex);\n        }\n      }\n    }\n  }\n});\n"
  ]
}