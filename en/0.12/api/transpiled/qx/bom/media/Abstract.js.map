{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/media/Abstract.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "type",
    "construct",
    "media",
    "_media",
    "_hasLoop",
    "loop",
    "Function",
    "lang",
    "_handlePlayEventBound",
    "bind",
    "_handlePlayEvent",
    "_handlePauseEventBound",
    "_handlePauseEvent",
    "_handleTimeUpdateEventBound",
    "_handleTimeUpdateEvent",
    "_handleEndedEventBound",
    "_handleEndedEvent",
    "_handleVolumeChangeEventBound",
    "_handleVolumeChangeEvent",
    "_handleLoadedDataEventBound",
    "_handleLoadedDataEvent",
    "_handleLoadedMetaDataEventBound",
    "_handleLoadedMetaDataEvent",
    "Event",
    "bom",
    "addNativeListener",
    "preload",
    "events",
    "members",
    "_loopId",
    "getMediaObject",
    "play",
    "event",
    "Timer",
    "once",
    "pause",
    "isPaused",
    "paused",
    "isEnded",
    "ended",
    "setId",
    "id",
    "getId",
    "canPlayType",
    "setVolume",
    "volume",
    "getVolume",
    "setMuted",
    "muted",
    "isMuted",
    "getDuration",
    "duration",
    "setCurrentTime",
    "value",
    "currentTime",
    "getCurrentTime",
    "setSource",
    "source",
    "src",
    "getSource",
    "setSourceObject",
    "sourceObject",
    "srcObject",
    "getSourceObject",
    "hasControls",
    "controls",
    "showControls",
    "hideControls",
    "setAutoplay",
    "autoplay",
    "getAutoplay",
    "setPreload",
    "getPreload",
    "setLoop",
    "addListener",
    "removeListenerById",
    "isLoop",
    "fireEvent",
    "destruct",
    "removeNativeListener",
    "ex",
    "Abstract"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n\n/**\n *\n * Media element. Other media types can derive from this class.\n * \n * NOTE: Instances of this class must be disposed of to free resources\n */\nqx.Class.define(\"qx.bom.media.Abstract\",\n{\n  extend: qx.core.Object,\n  implement: [ qx.core.IDisposable ],\n  type: \"abstract\",\n\n\n  /**\n   * @param media {var} the media element.\n   */\n  construct: function(media)\n  {\n    this.base(arguments);\n    this._media = media;\n    this._hasLoop = !!this._media.loop;\n\n    var Function = qx.lang.Function;\n    this._handlePlayEventBound = Function.bind(this._handlePlayEvent, this);\n    this._handlePauseEventBound = Function.bind(this._handlePauseEvent, this);\n    this._handleTimeUpdateEventBound = Function.bind(this._handleTimeUpdateEvent, this);\n    this._handleEndedEventBound = Function.bind(this._handleEndedEvent, this);\n    this._handleVolumeChangeEventBound = Function.bind(this._handleVolumeChangeEvent, this);\n    this._handleLoadedDataEventBound = Function.bind(this._handleLoadedDataEvent, this);\n    this._handleLoadedMetaDataEventBound = Function.bind(this._handleLoadedMetaDataEvent, this);\n\n    var Event = qx.bom.Event;\n    Event.addNativeListener(this._media, \"play\", this._handlePlayEventBound);\n    Event.addNativeListener(this._media, \"pause\", this._handlePauseEventBound);\n    Event.addNativeListener(this._media, \"timeupdate\", this._handleTimeUpdateEventBound);\n    Event.addNativeListener(this._media, \"ended\", this._handleEndedEventBound);\n    Event.addNativeListener(this._media, \"volumechange\", this._handleVolumeChangeEventBound);\n    Event.addNativeListener(this._media, \"loadeddata\", this._handleLoadedDataEventBound);\n    Event.addNativeListener(this._media, \"loadedmetadata\", this._handleLoadedMetaDataEventBound);\n\n    // set default value\n    this._media.preload = \"auto\";\n  },\n\n\n  //MORE HERE:\n  //http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#mediaevents\n  events:\n  {\n    /** Fired when the media starts to play */\n    \"play\": \"qx.event.type.Event\",\n\n    /** Fired when the media is paused */\n    \"pause\": \"qx.event.type.Event\",\n\n    /** Fired when the current time of the media has changed */\n    \"timeupdate\": \"qx.event.type.Event\",\n\n    /** Fired when the media has finished to play */\n    \"ended\": \"qx.event.type.Event\",\n\n    /** Fired when the volume property is changed */\n    \"volumechange\": \"qx.event.type.Event\",\n\n    /** Fired when the media is loaded enough to start play*/\n    \"loadeddata\": \"qx.event.type.Event\",\n\n    /** Fired when the media is loaded enough to start play*/\n    \"loadedmetadata\": \"qx.event.type.Event\"\n  },\n\n\n  members:\n  {\n    _media: null,\n    _hasLoop: false,\n    _loopId: null,\n\n    /**\n     * Returns the media object, so that you can add it to the DOM.\n     *\n     * @return {Object} the native media object\n     */\n    getMediaObject: function()\n    {\n      return this._media;\n    },\n\n\n    /**\n     * Starts playback of the media.\n     */\n    play: function()\n    {\n      // Force asynchronous event firing for IE e.g.\n      qx.event.Timer.once(function() {\n        this._media.play();\n      }, this, 0);\n    },\n\n\n    /**\n     * Pauses playback of the media.\n     */\n    pause: function()\n    {\n      this._media.pause();\n    },\n\n\n    /**\n     * Checks if the media is paused or not.\n     *\n     * @return {Boolean}\n     */\n    isPaused: function()\n    {\n      return this._media.paused;\n    },\n\n\n    /**\n     * Checks if the media is ended or not.\n     *\n     * @return {Boolean}\n     */\n    isEnded: function()\n    {\n      return this._media.ended;\n    },\n\n\n    /**\n     * Sets the id of the media.\n     *\n     * @param id {String} The new value of id\n     */\n    setId: function(id)\n    {\n      this._media.id = id;\n    },\n\n    /**\n     * Gets the id of the media.\n     *\n     * @return {String} the id of the media element\n     */\n    getId: function()\n    {\n      return this._media.id;\n    },\n\n\n    /**\n     * Whether the browser can play the file format.\n     *\n     * @param type {String} the file format\n     * @return {Boolean}\n     */\n    canPlayType: function(type)\n    {\n      return this._media.canPlayType(type);\n    },\n\n\n    /**\n     * Sets the current playback volume, as a number in the range 0.0 to 1.0,\n     * where 0.0 is the quietest and 1.0 the loudest.\n     *\n     * @param volume {Number} 0.0 - 1.0\n     */\n    setVolume: function(volume)\n    {\n      this._media.volume = volume;\n    },\n\n\n    /**\n     * Gets the current playback volume, as a number in the range 0.0 to 1.0,\n     * where 0.0 is the quietest and 1.0 the loudest.\n     *\n     * @return {Number} 0.0 - 1.0\n     */\n    getVolume: function()\n    {\n      return this._media.volume;\n    },\n\n\n    /**\n     * Sets the media element to mute.\n     *\n     * @param muted {Boolean} new value for mute\n     */\n    setMuted: function(muted)\n    {\n      this._media.muted = muted;\n    },\n\n\n    /**\n     * Checks if the media element is muted or not\n     *\n     * @return {Boolean}\n     */\n    isMuted: function()\n    {\n      return this._media.muted;\n    },\n\n\n    /**\n     * Gets the duration of the loaded media file.\n     *\n     * @return {Number} the duration\n     */\n    getDuration: function()\n    {\n      return this._media.duration;\n    },\n\n\n    /**\n     * Sets the value of current time.\n     *\n     * @param value {Number} the new value of current time\n     */\n    setCurrentTime: function(value)\n    {\n      this._media.currentTime = value;\n    },\n\n\n    /**\n     * Gets current time of the playback.\n     *\n     * @return {Number} the current time\n     */\n    getCurrentTime: function()\n    {\n      return this._media.currentTime;\n    },\n\n    /**\n     * Sets the source url of the media file.\n     *\n     * @param source {String} the source url to the media file.\n     */\n    setSource: function(source)\n    {\n      this._media.src = source;\n    },\n\n\n    /**\n     * Gets the source url of the media file.\n     *\n     * @return {String} the source url to the media file.\n     */\n    getSource: function()\n    {\n      return this._media.src;\n    },\n\n\n    /**\n     * Sets the source object of the media file.\n     *\n     * @param sourceObject {MediaStream} the source media stream.\n     */\n    setSourceObject: function (sourceObject)\n    {\n      this._media.srcObject = sourceObject;\n    },\n\n    \n    /**\n     * Gets the source object of the media file.\n     *\n     * @return {MediaStream|null} the source stream object to the media file, if it exists.\n     */\n    getSourceObject: function ()\n    {\n      return this._media.srcObject;\n    },\n\n\n    /**\n     * Checks if the media element shows its controls.\n     *\n     * @return {Boolean}\n     */\n    hasControls: function()\n    {\n      return this._media.controls;\n    },\n\n\n    /**\n     * Shows the controls of the media element.\n     */\n    showControls: function()\n    {\n      this._media.controls = true;\n    },\n\n\n    /**\n     * Hides the controls of the media element.\n     */\n    hideControls: function()\n    {\n      this._media.controls = false;\n    },\n\n\n    /**\n     * Plays the media directly when it is loaded / the page is loaded.\n     *\n     *  @param autoplay {Boolean} To autoplay or not\n     */\n    setAutoplay: function(autoplay)\n    {\n      this._media.autoplay = autoplay;\n    },\n\n\n    /**\n     * Whether the media is played directly when it is loaded / the page is loaded.\n     *\n     *  @return {Boolean} if autoplay is on or not\n     */\n    getAutoplay: function()\n    {\n      return this._media.autoplay;\n    },\n\n    /**\n     * Hints how much buffering the media resource will likely need.\n     *\n     * @param preload {String} One of the following values:\n     *  \"none\": Hints to the user agent that either the author does not expect\n     *  the user to need the media resource, or that the server wants to minimize\n     *  unnecessary traffic.\n     *  \"metadata\": Hints to the user agent that the author does not expect the\n     *  user to need the media resource, but that fetching the resource metadata\n     *  (dimensions, first frame, track list, duration, etc) is reasonable.\n     *  \"auto\": Hints to the user agent that the user agent can put the user's needs\n     *  first without risk to the server, up to and including optimistically\n     *  downloading the entire resource.\n     */\n    setPreload: function(preload)\n    {\n      if (preload == \"none\" || preload == \"metadata\" || preload == \"auto\") {\n        this._media.preload = preload;\n      } else {\n        // Set auto as default\n        this._media.preload = \"auto\";\n      }\n    },\n\n\n    /**\n     * Returns how much buffering the media resource will likely need.\n     *\n     * @return {String} hint how much buffering the media resource needs\n     */\n    getPreload: function()\n    {\n      return this._media.preload;\n    },\n\n\n    /**\n     * Indicates that the media element is to seek back to the start of the media resource upon reaching the end.\n     *\n     * @param value {Boolean} To loop or not.\n     */\n    setLoop: function(value)\n    {\n      //ff doesn't have loop\n      if (!this._hasLoop) {\n        if (value === true) {\n          this._loopId = this.addListener('ended', this.play, this);\n        } else if (value === false && this._loopId) {\n          this.removeListenerById(this._loopId);\n          this._loopId = null;\n        }\n      }\n      this._media.loop = value;\n    },\n\n\n    /**\n     * Whether the media element is to seek back to the start of the media resource upon reaching the end.\n     *\n     * @return {Boolean} if loop is on or not\n     */\n    isLoop: function()\n    {\n      return !!this._media.loop;\n    },\n\n\n    /**\n     * Play event handler.\n     */\n    _handlePlayEvent: function()\n    {\n      this.fireEvent(\"play\");\n    },\n\n\n    /**\n     * Pause event handler.\n     */\n    _handlePauseEvent: function()\n    {\n      this.fireEvent(\"pause\");\n    },\n\n\n    /**\n     * Time Update event handler.\n     */\n    _handleTimeUpdateEvent: function()\n    {\n      this.fireEvent(\"timeupdate\");\n    },\n\n\n    /**\n     * Ended event handler.\n     */\n    _handleEndedEvent: function()\n    {\n      this.fireEvent(\"ended\");\n    },\n\n\n    /**\n     * Volume Change event handler.\n     */\n    _handleVolumeChangeEvent: function()\n    {\n      this.fireEvent(\"volumechange\");\n    },\n\n    /**\n     * Loaded Data event handler.\n     */\n    _handleLoadedDataEvent: function()\n    {\n      this.fireEvent(\"loadeddata\");\n    },\n\n    /**\n     * Loaded Metadata event handler.\n     */\n    _handleLoadedMetaDataEvent: function()\n    {\n      this.fireEvent(\"loadedmetadata\");\n    }\n  },\n\n\n  destruct: function()\n  {\n    var Event = qx.bom.Event;\n\n    Event.removeNativeListener(this._media, \"play\", this._handlePlayEventBound);\n    Event.removeNativeListener(this._media, \"pause\", this._handlePauseEventBound);\n    Event.removeNativeListener(this._media, \"timeupdate\", this._handleTimeUpdateEventBound);\n    Event.removeNativeListener(this._media, \"ended\", this._handleEndedEventBound);\n    Event.removeNativeListener(this._media, \"volumechange\", this._handleVolumeChangeEventBound);\n    Event.removeNativeListener(this._media, \"loadeddata\", this._handleLoadedDataEventBound);\n    Event.removeNativeListener(this._media, \"loadedmetadata\", this._handleLoadedMetaDataEventBound);\n\n    try {\n      // IE9 sometimes throws an can't access error\n      this.pause();\n    } catch(ex) {}\n\n    this.setSource(\"\");\n    this._media = null;\n  }\n});\n"
  ]
}