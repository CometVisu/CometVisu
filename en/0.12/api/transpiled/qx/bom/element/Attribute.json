{
  "className": "qx.bom.element.Attribute",
  "packageName": "qx.bom.element",
  "name": "Attribute",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 70,
        "column": 0
      },
      "end": {
        "line": 350,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Attribute/Property handling for DOM HTML elements.\n Also includes support for HTML properties like <code>checked</code>\n or <code>value</code>. This feature set is supported cross-browser\n through one common interface and is independent of the differences between\n the multiple implementations.\n Supports applying text and HTML content using the attribute names\n <code>text</code> and <code>html</code>.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "__hints": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 195,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal map of attribute conversions</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "compile": {
      "location": {
        "start": {
          "line": 208,
          "column": 4
        },
        "end": {
          "line": 221,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compiles an incoming attribute map to a string which\n could be used when building HTML blocks using innerHTML.\n This method silently ignores runtime attributes like\n <code>html</code> or <code>text</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "map {Map} Map of attributes. The key is the name of the attribute.",
            "paramName": "map",
            "description": " Map of attributes. The key is the name of the attribute.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Returns a compiled string ready for usage.",
            "type": "String",
            "description": " Returns a compiled string ready for usage."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "get": {
      "location": {
        "start": {
          "line": 231,
          "column": 4
        },
        "end": {
          "line": 269,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the value of the given HTML attribute</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} The DOM element to query",
            "paramName": "element",
            "description": " The DOM element to query",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "name {String} Name of the attribute",
            "paramName": "name",
            "description": " Name of the attribute",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The value of the attribute",
            "type": "var",
            "description": " The value of the attribute"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "set": {
      "location": {
        "start": {
          "line": 279,
          "column": 4
        },
        "end": {
          "line": 333,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets an HTML attribute on the given DOM element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} The DOM element to modify",
            "paramName": "element",
            "description": " The DOM element to modify",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "name {String} Name of the attribute",
            "paramName": "name",
            "description": " Name of the attribute",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {var} New value of the attribute",
            "paramName": "value",
            "description": " New value of the attribute",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "reset": {
      "location": {
        "start": {
          "line": 342,
          "column": 4
        },
        "end": {
          "line": 348,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets an HTML attribute on the given DOM element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} The DOM element to modify",
            "paramName": "element",
            "description": " The DOM element to modify",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "name {String} Name of the attribute",
            "paramName": "name",
            "description": " Name of the attribute",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}