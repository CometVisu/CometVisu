{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/bom/Lifecycle.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "onReady",
    "callback",
    "context",
    "Registration",
    "event",
    "appHandler",
    "getManager",
    "window",
    "getHandler",
    "handler",
    "Application",
    "isApplicationReady",
    "call",
    "addListener",
    "onShutdown",
    "bom",
    "Lifecycle"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kBAAhB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAAO,EAAG,iBAASC,QAAT,EAAmBC,OAAnB,EACV;AACE,YAAIC,YAAY,GAAGV,EAAE,CAACW,KAAH,CAASD,YAA5B;AACA,YAAIE,UAAU,GAAGF,YAAY,CAACG,UAAb,CAAwBC,MAAxB,EAAgCC,UAAhC,CAA2Cf,EAAE,CAACW,KAAH,CAASK,OAAT,CAAiBC,WAA5D,CAAjB,CAFF,CAIE;AACA;;AACA,YAAIL,UAAU,IAAIA,UAAU,CAACM,kBAAX,EAAlB,EAAmD;AACjDV,UAAAA,QAAQ,CAACW,IAAT,CAAcV,OAAd;AACD,SAFD,MAEO;AACLC,UAAAA,YAAY,CAACU,WAAb,CAAyBN,MAAzB,EAAiC,OAAjC,EAA0CN,QAA1C,EAAoDC,OAApD;AACD;AACF,OApBH;;AAuBE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIY,MAAAA,UAAU,EAAG,oBAASb,QAAT,EAAmBC,OAAnB,EAA4B;AACvCT,QAAAA,EAAE,CAACW,KAAH,CAASD,YAAT,CAAsBU,WAAtB,CAAkCN,MAAlC,EAA0C,UAA1C,EAAsDN,QAAtD,EAAgEC,OAAhE;AACD;AAnCH;AAFF,GADA;AA5BAT,EAAAA,EAAE,CAACsB,GAAH,CAAOC,SAAP,CAAiBpB,aAAjB,GAAiCA,aAAjC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * Low-level application life-cycle management.\n *\n * One can use the static methods {@link #onReady} and {@link #onShutdown} to\n * add callback functions, in order to get informed about the ready state or\n * the shutdown of the low-level application, respectively.\n *\n * @require(qx.event.Registration)\n * @require(qx.event.handler.Application)\n */\nqx.Class.define(\"qx.bom.Lifecycle\",\n{\n  statics :\n  {\n    /**\n     * Register a callback function, which is called in the optionally provided\n     * context, when the application is ready.\n     *\n     * @param callback {Function} callback function\n     * @param context {Object?window} context in which the callback is called\n     */\n    onReady : function(callback, context)\n    {\n      var Registration = qx.event.Registration;\n      var appHandler = Registration.getManager(window).getHandler(qx.event.handler.Application);\n\n      // If the application is already available, execute the callback\n      // immediately. Otherwise listen to the \"ready\" event to call it later.\n      if (appHandler && appHandler.isApplicationReady()) {\n        callback.call(context);\n      } else {\n        Registration.addListener(window, \"ready\", callback, context);\n      }\n    },\n\n\n    /**\n     * Register a callback function, which is called in the optionally provided\n     * context, when the application is shutdown.\n     * <b>IMPORTANT NOTE</b>: Since it is <i>not</i> guaranteed that a\n     * <code>shutdown</code> event is fired, you <i>cannot</i> fully rely on\n     * getting informed.\n     *\n     * @param callback {Function} callback function\n     * @param context {Object?window} context in which the callback is called\n     */\n    onShutdown : function(callback, context) {\n      qx.event.Registration.addListener(window, \"shutdown\", callback, context);\n    }\n  }\n});\n"
  ]
}