{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/bom/request/Script.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "__initXhrProperties",
    "__onNativeLoadBound",
    "bind",
    "_onNativeLoad",
    "__onNativeErrorBound",
    "_onNativeError",
    "__onTimeoutBound",
    "_onTimeout",
    "__headElement",
    "document",
    "head",
    "getElementsByTagName",
    "documentElement",
    "_emitter",
    "event",
    "Emitter",
    "timeout",
    "__supportsErrorHandler",
    "events",
    "members",
    "readyState",
    "status",
    "statusText",
    "__determineSuccess",
    "on",
    "name",
    "listener",
    "ctx",
    "open",
    "method",
    "url",
    "__disposed",
    "__abort",
    "__url",
    "__environmentGet",
    "debug",
    "bom",
    "request",
    "Script",
    "_readyStateChange",
    "setRequestHeader",
    "key",
    "value",
    "param",
    "Error",
    "util",
    "Uri",
    "appendParamsToUrl",
    "send",
    "script",
    "__createScriptElement",
    "that",
    "__timeoutId",
    "window",
    "setTimeout",
    "insertBefore",
    "firstChild",
    "abort",
    "__disposeScriptElement",
    "_emit",
    "emit",
    "onreadystatechange",
    "onload",
    "onloadend",
    "onerror",
    "onabort",
    "ontimeout",
    "getResponseHeader",
    "getAllResponseHeaders",
    "setDetermineSuccess",
    "check",
    "dispose",
    "__scriptElement",
    "clearTimeout",
    "isDisposed",
    "_getUrl",
    "_getScriptElement",
    "__failure",
    "determineSuccess",
    "test",
    "_success",
    "isLegacyIe",
    "isOpera",
    "createElement",
    "src",
    "parentNode",
    "removeChild",
    "Environment",
    "get",
    "client",
    "Engine",
    "getName",
    "Browser",
    "getDocumentMode",
    "defer",
    "add"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * Script loader with interface similar to\n * <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>.\n *\n * The script loader can be used to load scripts from arbitrary sources.\n * <span class=\"desktop\">\n * For JSONP requests, consider the {@link qx.bom.request.Jsonp} transport\n * that derives from the script loader.\n * </span>\n *\n * <div class=\"desktop\">\n * Example:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.Script();\n *  req.onload = function() {\n *    // Script is loaded and parsed and\n *    // globals set are available\n *  }\n *\n *  req.open(\"GET\", url);\n *  req.send();\n * </pre>\n * </div>\n *\n * @ignore(qx.core, qx.core.Environment.*)\n * @require(qx.bom.request.Script#_success)\n * @require(qx.bom.request.Script#abort)\n * @require(qx.bom.request.Script#dispose)\n * @require(qx.bom.request.Script#isDisposed)\n * @require(qx.bom.request.Script#getAllResponseHeaders)\n * @require(qx.bom.request.Script#getResponseHeader)\n * @require(qx.bom.request.Script#setDetermineSuccess)\n * @require(qx.bom.request.Script#setRequestHeader)\n *\n * @group (IO)\n */\n\nqx.Bootstrap.define(\"qx.bom.request.Script\",\n{\n\timplement: [ qx.core.IDisposable ],\n\n  construct : function()\n  {\n    this.__initXhrProperties();\n\n    this.__onNativeLoadBound = qx.Bootstrap.bind(this._onNativeLoad, this);\n    this.__onNativeErrorBound = qx.Bootstrap.bind(this._onNativeError, this);\n    this.__onTimeoutBound = qx.Bootstrap.bind(this._onTimeout, this);\n\n    this.__headElement = document.head || document.getElementsByTagName( \"head\" )[0] ||\n                         document.documentElement;\n\n    this._emitter = new qx.event.Emitter();\n\n    // BUGFIX: Browsers not supporting error handler\n    // Set default timeout to capture network errors\n    //\n    // Note: The script is parsed and executed, before a \"load\" is fired.\n    this.timeout = this.__supportsErrorHandler() ? 0 : 15000;\n  },\n\n\n  events : {\n    /** Fired at ready state changes. */\n    \"readystatechange\" : \"qx.bom.request.Script\",\n\n    /** Fired on error. */\n    \"error\" : \"qx.bom.request.Script\",\n\n    /** Fired at loadend. */\n    \"loadend\" : \"qx.bom.request.Script\",\n\n    /** Fired on timeouts. */\n    \"timeout\" : \"qx.bom.request.Script\",\n\n    /** Fired when the request is aborted. */\n    \"abort\" : \"qx.bom.request.Script\",\n\n    /** Fired on successful retrieval. */\n    \"load\" : \"qx.bom.request.Script\"\n  },\n\n\n  members :\n  {\n\n    /**\n     * @type {Number} Ready state.\n     *\n     * States can be:\n     * UNSENT:           0,\n     * OPENED:           1,\n     * LOADING:          2,\n     * LOADING:          3,\n     * DONE:             4\n     *\n     * Contrary to {@link qx.bom.request.Xhr#readyState}, the script transport\n     * does not receive response headers. For compatibility, another LOADING\n     * state is implemented that replaces the HEADERS_RECEIVED state.\n     */\n    readyState: null,\n\n    /**\n     * @type {Number} The status code.\n     *\n     * Note: The script transport cannot determine the HTTP status code.\n     */\n    status: null,\n\n    /**\n     * @type {String} The status text.\n     *\n     * The script transport does not receive response headers. For compatibility,\n     * the statusText property is set to the status casted to string.\n     */\n    statusText: null,\n\n    /**\n     * @type {Number} Timeout limit in milliseconds.\n     *\n     * 0 (default) means no timeout.\n     */\n    timeout: null,\n\n    /**\n     * @type {Function} Function that is executed once the script was loaded.\n     */\n    __determineSuccess: null,\n\n\n    /**\n     * Add an event listener for the given event name.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Script} Self for chaining.\n     */\n    on: function(name, listener, ctx) {\n      this._emitter.on(name, listener, ctx);\n      return this;\n    },\n\n\n    /**\n     * Initializes (prepares) request.\n     *\n     * @param method {String}\n     *   The HTTP method to use.\n     *   This parameter exists for compatibility reasons. The script transport\n     *   does not support methods other than GET.\n     * @param url {String}\n     *   The URL to which to send the request.\n     */\n    open: function(method, url) {\n      if (this.__disposed) {\n        return;\n      }\n\n      // Reset XHR properties that may have been set by previous request\n      this.__initXhrProperties();\n\n      this.__abort = null;\n      this.__url = url;\n\n      if (this.__environmentGet(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(qx.bom.request.Script, \"Open native request with \" +\n          \"url: \" + url);\n      }\n\n      this._readyStateChange(1);\n    },\n\n    /**\n     * Appends a query parameter to URL.\n     *\n     * This method exists for compatibility reasons. The script transport\n     * does not support request headers. However, many services parse query\n     * parameters like request headers.\n     *\n     * Note: The request must be initialized before using this method.\n     *\n     * @param key {String}\n     *  The name of the header whose value is to be set.\n     * @param value {String}\n     *  The value to set as the body of the header.\n     * @return {qx.bom.request.Script} Self for chaining.\n     */\n    setRequestHeader: function(key, value) {\n      if (this.__disposed) {\n        return null;\n      }\n\n      var param = {};\n\n      if (this.readyState !== 1) {\n        throw new Error(\"Invalid state\");\n      }\n\n      param[key] = value;\n      this.__url = qx.util.Uri.appendParamsToUrl(this.__url, param);\n      return this;\n    },\n\n    /**\n     * Sends request.\n     * @return {qx.bom.request.Script} Self for chaining.\n     */\n    send: function() {\n      if (this.__disposed) {\n        return null;\n      }\n\n      var script = this.__createScriptElement(),\n          head = this.__headElement,\n          that = this;\n\n      if (this.timeout > 0) {\n        this.__timeoutId = window.setTimeout(this.__onTimeoutBound, this.timeout);\n      }\n\n      if (this.__environmentGet(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(qx.bom.request.Script, \"Send native request\");\n      }\n\n      // Attach script to DOM\n      head.insertBefore(script, head.firstChild);\n\n      // The resource is loaded once the script is in DOM.\n      // Assume HEADERS_RECEIVED and LOADING and dispatch async.\n      window.setTimeout(function() {\n        that._readyStateChange(2);\n        that._readyStateChange(3);\n      });\n      return this;\n    },\n\n    /**\n     * Aborts request.\n     * @return {qx.bom.request.Script} Self for chaining.\n     */\n    abort: function() {\n      if (this.__disposed) {\n        return null;\n      }\n\n      this.__abort = true;\n      this.__disposeScriptElement();\n      this._emit(\"abort\");\n      return this;\n    },\n\n\n    /**\n     * Helper to emit events and call the callback methods.\n     * @param event {String} The name of the event.\n     */\n    _emit: function(event) {\n      this[\"on\" + event]();\n      this._emitter.emit(event, this);\n    },\n\n\n    /**\n     * Event handler for an event that fires at every state change.\n     *\n     * Replace with custom method to get informed about the communication progress.\n     */\n    onreadystatechange: function() {},\n\n    /**\n     * Event handler for XHR event \"load\" that is fired on successful retrieval.\n     *\n     * Note: This handler is called even when an invalid script is returned.\n     *\n     * Warning: Internet Explorer < 9 receives a false \"load\" for invalid URLs.\n     * This \"load\" is fired about 2 seconds after sending the request. To\n     * distinguish from a real \"load\", consider defining a custom check\n     * function using {@link #setDetermineSuccess} and query the status\n     * property. However, the script loaded needs to have a known impact on\n     * the global namespace. If this does not work for you, you may be able\n     * to set a timeout lower than 2 seconds, depending on script size,\n     * complexity and execution time.\n     *\n     * Replace with custom method to listen to the \"load\" event.\n     */\n    onload: function() {},\n\n    /**\n     * Event handler for XHR event \"loadend\" that is fired on retrieval.\n     *\n     * Note: This handler is called even when a network error (or similar)\n     * occurred.\n     *\n     * Replace with custom method to listen to the \"loadend\" event.\n     */\n    onloadend: function() {},\n\n    /**\n     * Event handler for XHR event \"error\" that is fired on a network error.\n     *\n     * Note: Some browsers do not support the \"error\" event.\n     *\n     * Replace with custom method to listen to the \"error\" event.\n     */\n    onerror: function() {},\n\n    /**\n    * Event handler for XHR event \"abort\" that is fired when request\n    * is aborted.\n    *\n    * Replace with custom method to listen to the \"abort\" event.\n    */\n    onabort: function() {},\n\n    /**\n    * Event handler for XHR event \"timeout\" that is fired when timeout\n    * interval has passed.\n    *\n    * Replace with custom method to listen to the \"timeout\" event.\n    */\n    ontimeout: function() {},\n\n    /**\n     * Get a single response header from response.\n     *\n     * Note: This method exists for compatibility reasons. The script\n     * transport does not receive response headers.\n     *\n     * @param key {String}\n     *  Key of the header to get the value from.\n     * @return {String|null} Warning message or <code>null</code> if the request\n     * is disposed\n     */\n    getResponseHeader: function(key) {\n      if (this.__disposed) {\n        return null;\n      }\n\n      if (this.__environmentGet(\"qx.debug\")) {\n        qx.Bootstrap.debug(\"Response header cannot be determined for \" +\n          \"requests made with script transport.\");\n      }\n      return \"unknown\";\n    },\n\n    /**\n     * Get all response headers from response.\n     *\n     * Note: This method exists for compatibility reasons. The script\n     * transport does not receive response headers.\n     * @return {String|null} Warning message or <code>null</code> if the request\n     * is disposed\n     */\n    getAllResponseHeaders: function() {\n      if (this.__disposed) {\n        return null;\n      }\n\n      if (this.__environmentGet(\"qx.debug\")) {\n        qx.Bootstrap.debug(\"Response headers cannot be determined for\" +\n          \"requests made with script transport.\");\n      }\n\n      return \"Unknown response headers\";\n    },\n\n    /**\n     * Determine if loaded script has expected impact on global namespace.\n     *\n     * The function is called once the script was loaded and must return a\n     * boolean indicating if the response is to be considered successful.\n     *\n     * @param check {Function} Function executed once the script was loaded.\n     *\n     */\n    setDetermineSuccess: function(check) {\n      this.__determineSuccess = check;\n    },\n\n    /**\n     * Dispose object.\n     */\n    dispose: function() {\n      var script = this.__scriptElement;\n\n      if (!this.__disposed) {\n\n        // Prevent memory leaks\n        if (script) {\n          script.onload = script.onreadystatechange = null;\n          this.__disposeScriptElement();\n        }\n\n        if (this.__timeoutId) {\n          window.clearTimeout(this.__timeoutId);\n        }\n\n        this.__disposed = true;\n      }\n    },\n\n\n    /**\n     * Check if the request has already beed disposed.\n     * @return {Boolean} <code>true</code>, if the request has been disposed.\n     */\n    isDisposed : function() {\n      return !!this.__disposed;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get URL of request.\n     *\n     * @return {String} URL of request.\n     */\n    _getUrl: function() {\n      return this.__url;\n    },\n\n    /**\n     * Get script element used for request.\n     *\n     * @return {Element} Script element.\n     */\n    _getScriptElement: function() {\n      return this.__scriptElement;\n    },\n\n    /**\n     * Handle timeout.\n     */\n    _onTimeout: function() {\n      this.__failure();\n\n      if (!this.__supportsErrorHandler()) {\n        this._emit(\"error\");\n      }\n\n      this._emit(\"timeout\");\n\n      if (!this.__supportsErrorHandler()) {\n        this._emit(\"loadend\");\n      }\n    },\n\n    /**\n     * Handle native load.\n     */\n    _onNativeLoad: function() {\n      var script = this.__scriptElement,\n          determineSuccess = this.__determineSuccess,\n          that = this;\n\n      // Aborted request must not fire load\n      if (this.__abort) {\n        return;\n      }\n\n      // BUGFIX: IE < 9\n      // When handling \"readystatechange\" event, skip if readyState\n      // does not signal loaded script\n      if (this.__environmentGet(\"engine.name\") === \"mshtml\" &&\n          this.__environmentGet(\"browser.documentmode\") < 9) {\n        if (!(/loaded|complete/).test(script.readyState)) {\n          return;\n        } else {\n          if (this.__environmentGet(\"qx.debug.io\")) {\n            qx.Bootstrap.debug(qx.bom.request.Script, \"Received native readyState: loaded\");\n          }\n        }\n      }\n\n      if (this.__environmentGet(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(qx.bom.request.Script, \"Received native load\");\n      }\n\n      // Determine status by calling user-provided check function\n      if (determineSuccess) {\n\n        // Status set before has higher precedence\n        if (!this.status) {\n          this.status = determineSuccess() ? 200 : 500;\n        }\n\n      }\n\n      if (this.status === 500) {\n        if (this.__environmentGet(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(qx.bom.request.Script, \"Detected error\");\n        }\n      }\n\n      if (this.__timeoutId) {\n        window.clearTimeout(this.__timeoutId);\n      }\n\n      window.setTimeout(function() {\n        that._success();\n        that._readyStateChange(4);\n        that._emit(\"load\");\n        that._emit(\"loadend\");\n      });\n    },\n\n    /**\n     * Handle native error.\n     */\n    _onNativeError: function() {\n      this.__failure();\n      this._emit(\"error\");\n      this._emit(\"loadend\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Element} Script element\n     */\n    __scriptElement: null,\n\n    /**\n     * @type {Element} Head element\n     */\n    __headElement: null,\n\n    /**\n     * @type {String} URL\n     */\n    __url: \"\",\n\n    /**\n     * @type {Function} Bound _onNativeLoad handler.\n     */\n    __onNativeLoadBound: null,\n\n    /**\n     * @type {Function} Bound _onNativeError handler.\n     */\n    __onNativeErrorBound: null,\n\n    /**\n     * @type {Function} Bound _onTimeout handler.\n     */\n    __onTimeoutBound: null,\n\n    /**\n     * @type {Number} Timeout timer iD.\n     */\n    __timeoutId: null,\n\n    /**\n     * @type {Boolean} Whether request was aborted.\n     */\n    __abort: null,\n\n    /**\n     * @type {Boolean} Whether request was disposed.\n     */\n    __disposed: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Initialize properties.\n     */\n    __initXhrProperties: function() {\n      this.readyState = 0;\n      this.status = 0;\n      this.statusText = \"\";\n    },\n\n    /**\n     * Change readyState.\n     *\n     * @param readyState {Number} The desired readyState\n     */\n    _readyStateChange: function(readyState) {\n      this.readyState = readyState;\n      this._emit(\"readystatechange\");\n    },\n\n    /**\n     * Handle success.\n     */\n    _success: function() {\n      this.__disposeScriptElement();\n      this.readyState = 4;\n\n      // By default, load is considered successful\n      if (!this.status) {\n        this.status = 200;\n      }\n\n      this.statusText = \"\" + this.status;\n    },\n\n    /**\n     * Handle failure.\n     */\n    __failure: function() {\n      this.__disposeScriptElement();\n      this.readyState = 4;\n      this.status = 0;\n      this.statusText = null;\n    },\n\n    /**\n     * Looks up whether browser supports error handler.\n     *\n     * @return {Boolean} Whether browser supports error handler.\n     */\n    __supportsErrorHandler: function() {\n      var isLegacyIe = this.__environmentGet(\"engine.name\") === \"mshtml\" &&\n        this.__environmentGet(\"browser.documentmode\") < 9;\n\n      var isOpera = this.__environmentGet(\"engine.name\") === \"opera\";\n\n      return !(isLegacyIe || isOpera);\n    },\n\n    /**\n     * Create and configure script element.\n     *\n     * @return {Element} Configured script element.\n     */\n    __createScriptElement: function() {\n      var script = this.__scriptElement = document.createElement(\"script\");\n\n      script.src = this.__url;\n      script.onerror = this.__onNativeErrorBound;\n      script.onload = this.__onNativeLoadBound;\n\n      // BUGFIX: IE < 9\n      // Legacy IEs do not fire the \"load\" event for script elements.\n      // Instead, they support the \"readystatechange\" event\n      if (this.__environmentGet(\"engine.name\") === \"mshtml\" &&\n          this.__environmentGet(\"browser.documentmode\") < 9) {\n        script.onreadystatechange = this.__onNativeLoadBound;\n      }\n\n      return script;\n    },\n\n    /**\n     * Remove script element from DOM.\n     */\n    __disposeScriptElement: function() {\n      var script = this.__scriptElement;\n\n      if (script && script.parentNode) {\n        this.__headElement.removeChild(script);\n      }\n    },\n\n    /**\n     * Proxy Environment.get to guard against env not being present yet.\n     *\n     * @param key {String} Environment key.\n     * @return {var} Value of the queried environment key\n     * @lint environmentNonLiteralKey(key)\n     */\n    __environmentGet: function(key) {\n      if (qx && qx.core && qx.core.Environment) {\n        return qx.core.Environment.get(key);\n      } else {\n        if (key === \"engine.name\") {\n          return qx.bom.client.Engine.getName();\n        }\n\n        if (key === \"browser.documentmode\") {\n          return qx.bom.client.Browser.getDocumentMode();\n        }\n\n        if (key == \"qx.debug.io\") {\n          return false;\n        }\n\n        throw new Error(\"Unknown environment key at this phase\");\n      }\n    }\n  },\n\n  defer: function() {\n    if (qx && qx.core && qx.core.Environment) {\n      qx.core.Environment.add(\"qx.debug.io\", false);\n    }\n  }\n});\n"
  ]
}