{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/bom/FullScreen.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "event",
    "Emitter",
    "statics",
    "getInstance",
    "$$instance",
    "bom",
    "FullScreen",
    "construct",
    "element",
    "__doc",
    "window",
    "document",
    "__checkAttributeNames",
    "self",
    "Event",
    "addNativeListener",
    "__eventName",
    "e",
    "emit",
    "events",
    "members",
    "__fullscreenElementAttr",
    "__requestMethodName",
    "__cancelMethodName",
    "prefix",
    "Style",
    "VENDOR_PREFIXES",
    "i",
    "length",
    "pfix",
    "toLowerCase",
    "undefined",
    "isFullScreen",
    "request",
    "documentElement",
    "cancel"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,mBAApB,EACA;AACEC,IAAAA,MAAM,EAAGL,EAAE,CAACM,KAAH,CAASC,OADpB;AAGEC,IAAAA,OAAO,EAAG;AAER;;;;AAIAC,MAAAA,WAAW,EAAG,uBAAW;AACvB,YAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,eAAKA,UAAL,GAAkB,IAAIV,EAAE,CAACW,GAAH,CAAOC,UAAX,EAAlB;AACD;;AACD,eAAO,KAAKF,UAAZ;AACD;AAXO,KAHZ;;AAmBE;;;AAGAG,IAAAA,SAAS,EAAG,mBAASC,OAAT,EAAkB;AAC5B,WAAKC,KAAL,GAAaD,OAAO,IAAIE,MAAM,CAACC,QAA/B;;AAEA,WAAKC,qBAAL;;AAEA,UAAIC,IAAI,GAAG,IAAX,CAL4B,CAM5B;;AACAnB,MAAAA,EAAE,CAACW,GAAH,CAAOS,KAAP,CAAaC,iBAAb,CAA+B,KAAKN,KAApC,EAA2C,KAAKO,WAAhD,EAA6D,UAASC,CAAT,EAAY;AACvEJ,QAAAA,IAAI,CAACK,IAAL,CAAU,QAAV,EAAoBD,CAApB;AACD,OAFD;AAGD,KAhCH;AAmCEE,IAAAA,MAAM,EAAG;AACP;;;AAGA,gBAAW;AAJJ,KAnCX;AA2CEC,IAAAA,OAAO,EACP;AACEX,MAAAA,KAAK,EAAG,IADV;AAEEY,MAAAA,uBAAuB,EAAG,mBAF5B;AAGEC,MAAAA,mBAAmB,EAAG,mBAHxB;AAIEC,MAAAA,kBAAkB,EAAG,kBAJvB;AAKEP,MAAAA,WAAW,EAAG,kBALhB;;AAQE;;;;;AAKAJ,MAAAA,qBAAqB,EAAG,iCAAW;AACjC,YAAIY,MAAM,GAAG9B,EAAE,CAACW,GAAH,CAAOoB,KAAP,CAAaC,eAA1B,CADiC,CAGjC;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGH,MAAM,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,cAAIE,IAAI,GAAGL,MAAM,CAACG,CAAD,CAAN,CAAUG,WAAV,EAAX;;AAEA,cAAI,KAAKrB,KAAL,CAAWoB,IAAI,GAAG,mBAAlB,MAA2CE,SAA3C,IACA,KAAKtB,KAAL,CAAWoB,IAAI,GAAG,mBAAlB,MAA2CE,SAD/C,EAC0D;AACxD,iBAAKf,WAAL,GAAmBa,IAAI,GAAG,kBAA1B;;AAEA,gBAAIA,IAAI,IAAI,KAAZ,EAAmB;AACjB,mBAAKR,uBAAL,GAA+BQ,IAAI,GAAG,mBAAtC;AACA,mBAAKP,mBAAL,GAA4BO,IAAI,GAAG,mBAAnC;AACD,aAHD,MAGO;AACL,mBAAKR,uBAAL,GAA+BQ,IAAI,GAAG,mBAAtC;AACA,mBAAKP,mBAAL,GAA4BO,IAAI,GAAG,mBAAnC;AACD;;AAED;AACD;AACF,SArBgC,CAuBjC;;;AACA,YAAI,KAAKpB,KAAL,CAAWoB,IAAI,GAAG,kBAAlB,CAAJ,EAA2C;AACzC,eAAKN,kBAAL,GAA2BM,IAAI,GAAG,kBAAlC;AACD,SAFD,MAEO,IAAI,KAAKpB,KAAL,CAAWoB,IAAI,GAAG,kBAAlB,CAAJ,EAA2C;AAChD,eAAKN,kBAAL,GAA2BM,IAAI,GAAG,kBAAlC;AACD,SAFM,MAEA,IAAI,KAAKpB,KAAL,CAAWoB,IAAI,GAAG,gBAAlB,CAAJ,EAAyC;AAC9C,eAAKN,kBAAL,GAA2BM,IAAI,GAAG,gBAAlC;AACD,SAFM,MAEA,IAAI,KAAKpB,KAAL,CAAWoB,IAAI,GAAG,gBAAlB,CAAJ,EAAyC;AAC9C,eAAKN,kBAAL,GAA2BM,IAAI,GAAG,gBAAlC;AACD,SAFM,MAEA,IAAI,KAAKpB,KAAL,CAAW,gBAAX,CAAJ,EAAkC;AACvC,eAAKc,kBAAL,GAA0B,gBAA1B;AACD;AAEF,OAjDH;;AAoDE;;;;;;AAMAS,MAAAA,YAAY,EAAG,wBAAW;AACxB,eAAO,KAAKvB,KAAL,CAAW,KAAKY,uBAAhB,MAA6CU,SAA7C,GACA,CAAC,CAAC,KAAKtB,KAAL,CAAW,KAAKY,uBAAhB,CADF,GAC6C,KADpD;AAED,OA7DH;;AAgEE;;;;;;;;AAQAY,MAAAA,OAAO,EAAG,mBAAW;AACnB,YAAI,KAAKxB,KAAL,CAAWyB,eAAX,CAA2B,KAAKZ,mBAAhC,CAAJ,EAA0D;AACxD,eAAKb,KAAL,CAAWyB,eAAX,CAA2B,KAAKZ,mBAAhC;AACD;AACF,OA5EH;;AA+EE;;;AAGAa,MAAAA,MAAM,EAAG,kBAAW;AAClB,YAAI,KAAK1B,KAAL,CAAW,KAAKc,kBAAhB,CAAJ,EAAyC;AACvC,eAAKd,KAAL,CAAW,KAAKc,kBAAhB;AACD;AACF;AAtFH;AA5CF,GADA;AAlDA7B,EAAAA,EAAE,CAACW,GAAH,CAAOC,UAAP,CAAkBT,aAAlB,GAAkCA,aAAlC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Cajus Pollmeier (cajus)\n\n************************************************************************ */\n\n/**\n *\n * This class offers a constant API over the Fullscreen Spec:\n * http://www.w3.org/TR/fullscreen/\n *\n * It forwards all the browsers support if supported.\n *\n * *Example*\n *\n * <pre class=\"javascript\">\n * var fs = qx.bom.FullScreen.getInstance();\n *\n * var button = new qx.ui.form.Button(\"Toggle fullscreen\");\n * button.addListener(\"execute\", function() {\n *   if (fs.isFullScreen()) {\n *     fs.cancel();\n *   } else {\n *     fs.request();\n *   }\n * });\n *\n * // Enable button if toggling is supported\n * button.setEnabled(qx.core.Environment.get(\"html.fullscreen\"));\n *\n * </pre>\n *\n * *Note*\n *\n * A fullscreen request will only be handled from within an interactive\n * event handler. So there is most likely a mouse or key event involved\n * to trigger it properly.\n */\nqx.Bootstrap.define(\"qx.bom.FullScreen\",\n{\n  extend : qx.event.Emitter,\n\n  statics : {\n\n    /**\n     * Get an instance of the FullScreen object using the default document.\n     * @return {qx.bom.FullScreen} An instance of this class.\n     */\n    getInstance : function() {\n      if (!this.$$instance) {\n        this.$$instance = new qx.bom.FullScreen();\n      }\n      return this.$$instance;\n    }\n\n  },\n\n\n  /**\n   * @param element {Element?} Optional element to show fullscreen.\n   */\n  construct : function(element) {\n    this.__doc = element || window.document;\n\n    this.__checkAttributeNames();\n\n    var self = this;\n    // forward the event\n    qx.bom.Event.addNativeListener(this.__doc, this.__eventName, function(e) {\n      self.emit(\"change\", e);\n    });\n  },\n\n\n  events : {\n    /**\n     * The change event for the fullscreen mode.\n     */\n    \"change\" : \"Event\"\n  },\n\n\n  members :\n  {\n    __doc : null,\n    __fullscreenElementAttr : \"fullscreenElement\",\n    __requestMethodName : \"requestFullscreen\",\n    __cancelMethodName : \"cancelFullscreen\",\n    __eventName : \"fullscreenchange\",\n\n\n    /**\n     * Internal helper to feature check the attribute names and the event name.\n     * As the event can not be detected using the on<name> attribute, we need\n     * to guess the event name by checking for the hidden attribute.\n     */\n    __checkAttributeNames : function() {\n      var prefix = qx.bom.Style.VENDOR_PREFIXES;\n\n      // check for the hidden attribute name\n      for (var i=0; i < prefix.length; i++) {\n        var pfix = prefix[i].toLowerCase();\n\n        if (this.__doc[pfix + \"FullScreenElement\"] !== undefined ||\n            this.__doc[pfix + \"FullscreenElement\"] !== undefined) {\n          this.__eventName = pfix + \"fullscreenchange\";\n\n          if (pfix == \"moz\") {\n            this.__fullscreenElementAttr = pfix + \"FullScreenElement\";\n            this.__requestMethodName =  pfix + \"RequestFullScreen\";\n          } else {\n            this.__fullscreenElementAttr = pfix + \"FullscreenElement\";\n            this.__requestMethodName =  pfix + \"RequestFullscreen\";\n          }\n\n          break;\n        }\n      }\n\n      // Doh. This needs some upstream consistency though...\n      if (this.__doc[pfix + \"CancelFullScreen\"]) {\n        this.__cancelMethodName =  pfix + \"CancelFullScreen\";\n      } else if (this.__doc[pfix + \"CancelFullscreen\"]) {\n        this.__cancelMethodName =  pfix + \"CancelFullscreen\";\n      } else if (this.__doc[pfix + \"ExitFullScreen\"]) {\n        this.__cancelMethodName =  pfix + \"ExitFullScreen\";\n      } else if (this.__doc[pfix + \"ExitFullscreen\"]) {\n        this.__cancelMethodName =  pfix + \"ExitFullscreen\";\n      } else if (this.__doc[\"exitFullscreen\"]) {\n        this.__cancelMethodName = \"exitFullscreen\";\n      }\n\n    },\n\n\n    /**\n     * Returns whether the page is shown in fullscreen mode or not. If we\n     * can not detect it, <code>false</code> will always be returned.\n     *\n     * @return {Boolean} <code>true</code>, if the page is shown fullscreen\n     */\n    isFullScreen : function() {\n      return this.__doc[this.__fullscreenElementAttr] !== undefined ?\n             !!this.__doc[this.__fullscreenElementAttr] : false;\n    },\n\n\n    /**\n     * Request the page to be shown in fullscreen mode. Note that this\n     * is only possible when called from within an interactive event\n     * handler.\n     *\n     * It's also worth a note that the user may deny fullscreen mode,\n     * so there is no guarantee that it really worked.\n     */\n    request : function() {\n      if (this.__doc.documentElement[this.__requestMethodName]) {\n        this.__doc.documentElement[this.__requestMethodName]();\n      }\n    },\n\n\n    /**\n     * End the fullscreen mode.\n     */\n    cancel : function() {\n      if (this.__doc[this.__cancelMethodName]) {\n        this.__doc[this.__cancelMethodName]();\n      }\n    }\n  }\n});\n"
  ]
}