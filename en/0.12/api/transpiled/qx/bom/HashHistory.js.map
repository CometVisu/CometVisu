{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/bom/HashHistory.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "bom",
    "History",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "_baseUrl",
    "__initIframe",
    "members",
    "__checkOnHashChange",
    "__iframe",
    "__iframeReady",
    "addToHistory",
    "state",
    "newTitle",
    "lang",
    "Type",
    "isString",
    "setTitle",
    "_titles",
    "getState",
    "_writeState",
    "__createIframe",
    "document",
    "body",
    "appendChild",
    "__waitForIFrame",
    "contentWindow",
    "location",
    "href",
    "__attachListeners",
    "iframe",
    "Iframe",
    "create",
    "src",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "style",
    "visibility",
    "position",
    "left",
    "top",
    "callback",
    "context",
    "retry",
    "Error",
    "event",
    "Timer",
    "once",
    "call",
    "window",
    "Idle",
    "addListener",
    "__onHashChange",
    "__detatchListeners",
    "removeListener",
    "currentState",
    "_readState",
    "_onHistoryLoad",
    "hash",
    "_getHash",
    "substr",
    "_decode",
    "_setHash",
    "_encode",
    "value",
    "destruct",
    "HashHistory"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * History manager implementation for IE greater 7. IE reloads iframe\n * content on history actions even just hash value changed. This\n * implementation forwards history states (hashes) to a helper iframe.\n *\n * This class must be disposed of after use\n *\n * @internal\n */\nqx.Class.define(\"qx.bom.HashHistory\",\n{\n  extend : qx.bom.History,\n  implement: [ qx.core.IDisposable ],\n\n  construct : function()\n  {\n    this.base(arguments);\n    this._baseUrl = null;\n    this.__initIframe();\n  },\n\n\n  members :\n  {\n    __checkOnHashChange : null,\n    __iframe : null,\n    __iframeReady : false,\n\n\n    //overridden\n    addToHistory : function(state, newTitle)\n    {\n      if (!qx.lang.Type.isString(state)) {\n        state = state + \"\";\n      }\n\n      if (qx.lang.Type.isString(newTitle))\n      {\n        this.setTitle(newTitle);\n        this._titles[state] = newTitle;\n      }\n\n      if (this.getState() !== state) {\n        this._writeState(state);\n      }\n    },\n\n\n    /**\n     * Initializes the iframe\n     *\n     */\n    __initIframe : function()\n    {\n      this.__iframe = this.__createIframe();\n      document.body.appendChild(this.__iframe);\n\n      this.__waitForIFrame(function()\n      {\n        this._baseUrl = this.__iframe.contentWindow.document.location.href;\n        this.__attachListeners();\n      }, this);\n    },\n\n\n    /**\n     * IMPORTANT NOTE FOR IE:\n     * Setting the source before adding the iframe to the document.\n     * Otherwise IE will bring up a \"Unsecure items ...\" warning in SSL mode\n     *\n     * @return {Element}\n     */\n    __createIframe : function ()\n    {\n      var iframe = qx.bom.Iframe.create({\n        src : qx.util.ResourceManager.getInstance().toUri(qx.core.Environment.get(\"qx.blankpage\")) + \"#\"\n      });\n\n      iframe.style.visibility = \"hidden\";\n      iframe.style.position = \"absolute\";\n      iframe.style.left = \"-1000px\";\n      iframe.style.top = \"-1000px\";\n\n      return iframe;\n    },\n\n\n    /**\n     * Waits for the IFrame being loaded. Once the IFrame is loaded\n     * the callback is called with the provided context.\n     *\n     * @param callback {Function} This function will be called once the iframe is loaded\n     * @param context {Object?window} The context for the callback.\n     * @param retry {Integer} number of tries to initialize the iframe\n     */\n    __waitForIFrame : function(callback, context, retry)\n    {\n      if (typeof retry === \"undefined\") {\n        retry = 0;\n      }\n\n      if ( !this.__iframe.contentWindow || !this.__iframe.contentWindow.document )\n      {\n        if (retry > 20) {\n          throw new Error(\"can't initialize iframe\");\n        }\n\n        qx.event.Timer.once(function() {\n          this.__waitForIFrame(callback, context, ++retry);\n        }, this, 10);\n\n        return;\n      }\n\n      this.__iframeReady = true;\n      callback.call(context || window);\n    },\n\n\n    /**\n     * Attach hash change listeners\n     */\n    __attachListeners : function()\n    {\n      qx.event.Idle.getInstance().addListener(\"interval\", this.__onHashChange, this);\n    },\n\n\n    /**\n     * Remove hash change listeners\n     */\n    __detatchListeners : function()\n    {\n      qx.event.Idle.getInstance().removeListener(\"interval\", this.__onHashChange, this);\n    },\n\n\n    /**\n     * hash change event handler\n     */\n    __onHashChange : function()\n    {\n      var currentState = this._readState();\n\n      if (qx.lang.Type.isString(currentState) && currentState != this.getState()) {\n        this._onHistoryLoad(currentState);\n      }\n    },\n\n\n    /**\n     * Browser dependent function to read the current state of the history\n     *\n     * @return {String} current state of the browser history\n     */\n    _readState : function() {\n      var hash = !this._getHash() ? \"\" : this._getHash().substr(1);\n      return this._decode(hash);\n    },\n\n\n    /**\n     * Returns the fragment identifier of the top window URL. For gecko browsers we\n     * have to use a regular expression to avoid encoding problems.\n     *\n     * @return {String|null} the fragment identifier or <code>null</code> if the\n     * iframe isn't ready yet\n     */\n    _getHash : function()\n    {\n      if (!this.__iframeReady){\n        return null;\n      }\n      return this.__iframe.contentWindow.document.location.hash;\n    },\n\n\n    /**\n     * Save a state into the browser history.\n     *\n     * @param state {String} state to save\n     */\n    _writeState : function(state)\n    {\n      this._setHash(this._encode(state));\n    },\n\n\n    /**\n     * Sets the fragment identifier of the window URL\n     *\n     * @param value {String} the fragment identifier\n     */\n    _setHash : function (value)\n    {\n      if (!this.__iframe || !this._baseUrl){\n        return;\n      }\n      var hash = !this.__iframe.contentWindow.document.location.hash ? \"\" : this.__iframe.contentWindow.document.location.hash.substr(1);\n      if (value != hash) {\n        this.__iframe.contentWindow.document.location.hash = value;\n      }\n    }\n  },\n\n\n  destruct : function() {\n    this.__detatchListeners();\n    this.__iframe = null;\n  }\n});\n"
  ]
}