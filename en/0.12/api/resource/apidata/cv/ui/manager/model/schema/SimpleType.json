{
  "className": "cv.ui.manager.model.schema.SimpleType",
  "packageName": "cv.ui.manager.model.schema",
  "name": "SimpleType",
  "superClass": "cv.ui.manager.model.schema.Base",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 283,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>a single SimpleType from the schema.\n Should be useable for SimpleContent, too.\n Is usable for attributes, too.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 14,
        "column": 13
      },
      "end": {
        "line": 21,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "type": {
      "location": {
        "start": {
          "line": 29,
          "column": 4
        },
        "end": {
          "line": 32,
          "column": 5
        }
      },
      "name": "type",
      "propertyType": "new",
      "refine": true,
      "init": "simpleType",
      "defaultValue": "simpleType",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": {
        "cv.ui.manager.model.schema.Base": "class"
      }
    },
    "optional": {
      "location": {
        "start": {
          "line": 33,
          "column": 4
        },
        "end": {
          "line": 36,
          "column": 5
        }
      },
      "name": "optional",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "baseType": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 45,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>the baseType of this element, which is one of the xsd-namespaced types (like 'string')</p>"
          }
        ],
        "@var": [
          {
            "name": "@var",
            "body": "string"
          }
        ]
      },
      "name": "baseType",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    }
  },
  "members": {
    "__pattern": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__enumerations": {
      "location": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__bases": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 56,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__regexCache": {
      "location": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "parse": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "appearsIn": [
        "cv.ui.manager.model.schema.Base"
      ]
    },
    "__fillNodeData": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>parse a node, find it's data (restrictions, extensions, bases â€¦ whatever)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node    DOMNode the node to parse"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "isValueValid": {
      "location": {
        "start": {
          "line": 133,
          "column": 4
        },
        "end": {
          "line": 258,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>check if a given value is valid for this type</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value   mixed   the value to check"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean         if the value is valid"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getEnumeration": {
      "location": {
        "start": {
          "line": 265,
          "column": 4
        },
        "end": {
          "line": 272,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get this elements enumeration (if there is any)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "array   list of allowed values (if there are any)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getType": {
      "type": "function",
      "name": "getType",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for type"
          }
        ]
      }
    },
    "setType": {
      "type": "function",
      "name": "setType",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for type"
          }
        ]
      }
    },
    "resetType": {
      "type": "function",
      "name": "resetType",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>type</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ]
      }
    },
    "getElementsHaveOrder": {
      "type": "function",
      "name": "getElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>elementsHaveOrder</code>.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for elementsHaveOrder"
          }
        ]
      }
    },
    "isElementsHaveOrder": {
      "type": "function",
      "name": "isElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>elementsHaveOrder</code>.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for elementsHaveOrder"
          }
        ]
      }
    },
    "setElementsHaveOrder": {
      "type": "function",
      "name": "setElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>elementsHaveOrder</code>.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for elementsHaveOrder"
          }
        ]
      }
    },
    "resetElementsHaveOrder": {
      "type": "function",
      "name": "resetElementsHaveOrder",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>elementsHaveOrder</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #elementsHaveOrder}."
          }
        ]
      }
    },
    "getSchema": {
      "type": "function",
      "name": "getSchema",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>schema</code>.\n\nFor further details take a look at the property definition: {@link #schema}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "cv.ui.manager.model.Schema",
            "desc": "Returns the value for schema"
          }
        ]
      }
    },
    "setSchema": {
      "type": "function",
      "name": "setSchema",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>schema</code>.\n\nFor further details take a look at the property definition: {@link #schema}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "cv.ui.manager.model.Schema",
            "paramName": "value",
            "desc": "Value for schema"
          }
        ]
      }
    },
    "resetSchema": {
      "type": "function",
      "name": "resetSchema",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>schema</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #schema}."
          }
        ]
      }
    },
    "getNode": {
      "type": "function",
      "name": "getNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>node</code>.\n\nFor further details take a look at the property definition: {@link #node}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Node",
            "desc": "Returns the value for node"
          }
        ]
      }
    },
    "setNode": {
      "type": "function",
      "name": "setNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>node</code>.\n\nFor further details take a look at the property definition: {@link #node}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Node",
            "paramName": "value",
            "desc": "Value for node"
          }
        ]
      }
    },
    "resetNode": {
      "type": "function",
      "name": "resetNode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>node</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #node}."
          }
        ]
      }
    },
    "getSubGroupings": {
      "type": "function",
      "name": "getSubGroupings",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>subGroupings</code>.\n\nFor further details take a look at the property definition: {@link #subGroupings}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for subGroupings"
          }
        ]
      }
    },
    "setSubGroupings": {
      "type": "function",
      "name": "setSubGroupings",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>subGroupings</code>.\n\nFor further details take a look at the property definition: {@link #subGroupings}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for subGroupings"
          }
        ]
      }
    },
    "resetSubGroupings": {
      "type": "function",
      "name": "resetSubGroupings",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.manager.model.schema.Base",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>subGroupings</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #subGroupings}."
          }
        ]
      }
    },
    "getOptional": {
      "type": "function",
      "name": "getOptional",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>optional</code>.\n\nFor further details take a look at the property definition: {@link #optional}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for optional"
          }
        ]
      }
    },
    "isOptional": {
      "type": "function",
      "name": "isOptional",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>optional</code>.\n\nFor further details take a look at the property definition: {@link #optional}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for optional"
          }
        ]
      }
    },
    "setOptional": {
      "type": "function",
      "name": "setOptional",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>optional</code>.\n\nFor further details take a look at the property definition: {@link #optional}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for optional"
          }
        ]
      }
    },
    "resetOptional": {
      "type": "function",
      "name": "resetOptional",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>optional</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #optional}."
          }
        ]
      }
    },
    "getBaseType": {
      "type": "function",
      "name": "getBaseType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>baseType</code>.\n\nFor further details take a look at the property definition: {@link #baseType}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for baseType"
          }
        ]
      }
    },
    "setBaseType": {
      "type": "function",
      "name": "setBaseType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>baseType</code>.\n\nFor further details take a look at the property definition: {@link #baseType}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for baseType"
          }
        ]
      }
    },
    "resetBaseType": {
      "type": "function",
      "name": "resetBaseType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>baseType</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #baseType}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 280,
        "column": 12
      },
      "end": {
        "line": 282,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}