{
  "className": "cv.ui.NotificationCenter",
  "packageName": "cv.ui",
  "name": "NotificationCenter",
  "superClass": "qx.core.Object",
  "interfaces": [
    "cv.core.notifications.IHandler"
  ],
  "mixins": [
    "cv.ui.MHandleMessage"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 51,
        "column": 0
      },
      "end": {
        "line": 386,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The NotificationCenter shows messages in a list. Messages are Maps which can have the following structure:\n </p>\n<pre>\n {\n   topic: {String} Topic of the message\n   title: {String} Title of the message\n   message: {String} The message content\n   icon: {String} icon name (KNX-UF icon)\n   iconClasses: {String} CSS classes that should be added to the icon element\n   deletable: {Boolean} Flag to determine if the user can delete the message\n   severity: {String} one of \"low\", \"normal\", \"high\", \"urgent\"\n   tooltip: {String} Tooltip for the message\n   progress: {Integer} indicates a progress state in percent of some long running process.\n   action: {\n     actionType {String}: {\n      action: {Function} Called when the action gets executed (when the user clicks on the message)\n      params: {Array?} Additional parameters for the callback\n      needsConfirmation: {Boolean} If true the execution of the action must be confirmed by the user\n      deleteMessageAfterExecution: {Boolean} If true the message gets deleted after action execution\n   }\n   unique: {Boolean} If true there can be only one message of that topic at once\n   condition: {Boolean|Function} if true this unique message gets removed\n }\n </pre><div class=\"authors\"><label>Author:</label> Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 0.11.0</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "0.11.0"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 62,
        "column": 13
      },
      "end": {
        "line": 95,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "statics": {
    "SLIDE": {
      "location": {
        "start": {
          "line": 103,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 5
        }
      },
      "type": "variable",
      "access": "public"
    },
    "BLINK": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 132,
          "column": 5
        }
      },
      "type": "variable",
      "access": "public"
    },
    "deleteMessage": {
      "location": {
        "start": {
          "line": 140,
          "column": 4
        },
        "end": {
          "line": 142,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shortcut to {@link cv.ui.NotificationCenter#deleteMessage}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number}"
          },
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "cv.ui.NotificationCenter#deleteMessage"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "clear": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shortcut to {@link cv.ui.NotificationCenter#clear}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "force {Boolean}"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "cv.ui.NotificationCenter#clear"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hide": {
      "location": {
        "start": {
          "line": 157,
          "column": 4
        },
        "end": {
          "line": 159,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shortcut to {@link cv.ui.NotificationCenter#hide}</p>"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "cv.ui.NotificationCenter#hide"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "performAction": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 169,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shortcut to {@link cv.ui.NotificationCenter#performAction}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {Number}"
          },
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "cv.ui.NotificationCenter#performAction"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "members": {
    "_list": {
      "location": {
        "start": {
          "line": 178,
          "column": 4
        },
        "end": {
          "line": 178,
          "column": 15
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__element": {
      "location": {
        "start": {
          "line": 179,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__messagesContainer": {
      "location": {
        "start": {
          "line": 180,
          "column": 4
        },
        "end": {
          "line": 180,
          "column": 29
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__visible": {
      "location": {
        "start": {
          "line": 181,
          "column": 4
        },
        "end": {
          "line": 181,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__blocker": {
      "location": {
        "start": {
          "line": 182,
          "column": 4
        },
        "end": {
          "line": 182,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__badge": {
      "location": {
        "start": {
          "line": 183,
          "column": 4
        },
        "end": {
          "line": 183,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__favico": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 184,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_openCommand": {
      "location": {
        "start": {
          "line": 185,
          "column": 4
        },
        "end": {
          "line": 185,
          "column": 22
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "disableBadge": {
      "location": {
        "start": {
          "line": 187,
          "column": 4
        },
        "end": {
          "line": 193,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "_onResize": {
      "location": {
        "start": {
          "line": 195,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_init": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 271,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attach to dom element and style it</p>"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__updateBadge": {
      "location": {
        "start": {
          "line": 273,
          "column": 4
        },
        "end": {
          "line": 306,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "_onSeverityChange": {
      "location": {
        "start": {
          "line": 308,
          "column": 4
        },
        "end": {
          "line": 321,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected"
    },
    "show": {
      "location": {
        "start": {
          "line": 326,
          "column": 4
        },
        "end": {
          "line": 341,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Show the NotificationCenter</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "toggleVisibility": {
      "location": {
        "start": {
          "line": 346,
          "column": 4
        },
        "end": {
          "line": 352,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Toggle the NotificationCenter visibility</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hide": {
      "location": {
        "start": {
          "line": 357,
          "column": 4
        },
        "end": {
          "line": 372,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Hide the NotificationCenter</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "handleMessage": {
      "type": "function",
      "name": "handleMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.core.notifications.IHandler",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle messages from {@link cv.core.notifications.Router}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {Map}"
          },
          {
            "name": "@param",
            "body": "config {Map?} optional configuration of this message for the handler",
            "paramName": "config",
            "description": " optional configuration of this message for the handler",
            "optional": true,
            "type": "Map"
          }
        ]
      }
    },
    "getIdCounter": {
      "type": "function",
      "name": "getIdCounter",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getSeverities": {
      "type": "function",
      "name": "getSeverities",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "_updateHighestSeverity": {
      "type": "function",
      "name": "_updateHighestSeverity",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getSeverityColor": {
      "type": "function",
      "name": "getSeverityColor",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "_applyMaxEntries": {
      "type": "function",
      "name": "_applyMaxEntries",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {}
    },
    "getMessageIdFromEvent": {
      "type": "function",
      "name": "getMessageIdFromEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Finds the message the tap event has been triggered on an returns\n an array [messageId, action], where action can be one of \"delete\", \"action\".</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} [messageId, action]",
            "type": "Array",
            "description": " [messageId, action]"
          }
        ]
      }
    },
    "_onListTap": {
      "type": "function",
      "name": "_onListTap",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "_getTooltip": {
      "type": "function",
      "name": "_getTooltip",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "clear": {
      "type": "function",
      "name": "clear",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delete all messages.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "force {Boolean} if false: only delete \"deletable\" messages, if true: delete all messages",
            "paramName": "force",
            "description": " if false: only delete \"deletable\" messages, if true: delete all messages",
            "type": "Boolean"
          }
        ]
      }
    },
    "getMessage": {
      "type": "function",
      "name": "getMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getMessages": {
      "type": "function",
      "name": "getMessages",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "deleteMessage": {
      "type": "function",
      "name": "deleteMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delete a message by index</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          },
          {
            "name": "@param",
            "body": "index {Number}"
          }
        ]
      }
    },
    "performAction": {
      "type": "function",
      "name": "performAction",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.MHandleMessage"
    },
    "getMaxEntries": {
      "type": "function",
      "name": "getMaxEntries",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxEntries</code>.\n\nFor further details take a look at the property definition: {@link #maxEntries}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for maxEntries"
          }
        ]
      }
    },
    "setMaxEntries": {
      "type": "function",
      "name": "setMaxEntries",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxEntries</code>.\n\nFor further details take a look at the property definition: {@link #maxEntries}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for maxEntries"
          }
        ]
      }
    },
    "resetMaxEntries": {
      "type": "function",
      "name": "resetMaxEntries",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxEntries</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxEntries}."
          }
        ]
      }
    },
    "getCounter": {
      "type": "function",
      "name": "getCounter",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>counter</code>.\n\nFor further details take a look at the property definition: {@link #counter}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for counter"
          }
        ]
      }
    },
    "setCounter": {
      "type": "function",
      "name": "setCounter",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>counter</code>.\n\nFor further details take a look at the property definition: {@link #counter}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for counter"
          }
        ]
      }
    },
    "resetCounter": {
      "type": "function",
      "name": "resetCounter",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>counter</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #counter}."
          }
        ]
      }
    },
    "getGlobalSeverity": {
      "type": "function",
      "name": "getGlobalSeverity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>globalSeverity</code>.\n\nFor further details take a look at the property definition: {@link #globalSeverity}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for globalSeverity"
          }
        ]
      }
    },
    "setGlobalSeverity": {
      "type": "function",
      "name": "setGlobalSeverity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>globalSeverity</code>.\n\nFor further details take a look at the property definition: {@link #globalSeverity}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for globalSeverity"
          }
        ]
      }
    },
    "resetGlobalSeverity": {
      "type": "function",
      "name": "resetGlobalSeverity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>globalSeverity</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #globalSeverity}."
          }
        ]
      }
    },
    "getRootElementId": {
      "type": "function",
      "name": "getRootElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rootElementId</code>.\n\nFor further details take a look at the property definition: {@link #rootElementId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for rootElementId"
          }
        ]
      }
    },
    "setRootElementId": {
      "type": "function",
      "name": "setRootElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rootElementId</code>.\n\nFor further details take a look at the property definition: {@link #rootElementId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for rootElementId"
          }
        ]
      }
    },
    "resetRootElementId": {
      "type": "function",
      "name": "resetRootElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>rootElementId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #rootElementId}."
          }
        ]
      }
    },
    "getMessageElementId": {
      "type": "function",
      "name": "getMessageElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>messageElementId</code>.\n\nFor further details take a look at the property definition: {@link #messageElementId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for messageElementId"
          }
        ]
      }
    },
    "setMessageElementId": {
      "type": "function",
      "name": "setMessageElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>messageElementId</code>.\n\nFor further details take a look at the property definition: {@link #messageElementId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for messageElementId"
          }
        ]
      }
    },
    "resetMessageElementId": {
      "type": "function",
      "name": "resetMessageElementId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>messageElementId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #messageElementId}."
          }
        ]
      }
    },
    "getDelegate": {
      "type": "function",
      "name": "getDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>delegate</code>.\n\nFor further details take a look at the property definition: {@link #delegate}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for delegate"
          }
        ]
      }
    },
    "setDelegate": {
      "type": "function",
      "name": "setDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>delegate</code>.\n\nFor further details take a look at the property definition: {@link #delegate}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for delegate"
          }
        ]
      }
    },
    "resetDelegate": {
      "type": "function",
      "name": "resetDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>delegate</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #delegate}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 380,
        "column": 77
      },
      "end": {
        "line": 385,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}