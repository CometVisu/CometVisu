{
  "className": "qx.ui.core.MNativeOverflow",
  "packageName": "qx.ui.core",
  "name": "MNativeOverflow",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 85,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This mixin is included by all widgets which supports native overflowing.</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "properties": {
    "overflowX": {
      "location": {
        "start": {
          "line": 37,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the widget should have horizontal scrollbars.</p>"
          }
        ]
      },
      "name": "overflowX",
      "propertyType": "new",
      "apply": "_applyOverflowX",
      "nullable": true,
      "allowNull": true,
      "possibleValues": [
        "hidden",
        "visible",
        "scroll",
        "auto"
      ]
    },
    "overflowY": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the widget should have vertical scrollbars.</p>"
          }
        ]
      },
      "name": "overflowY",
      "propertyType": "new",
      "apply": "_applyOverflowY",
      "nullable": true,
      "allowNull": true,
      "possibleValues": [
        "hidden",
        "visible",
        "scroll",
        "auto"
      ]
    },
    "overflow": {
      "location": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Overflow group property</p>"
          }
        ]
      },
      "name": "overflow",
      "propertyType": "new",
      "group": [
        "overflowX",
        "overflowY"
      ]
    }
  },
  "members": {
    "_applyOverflowX": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 5
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "overflowX"
      ]
    },
    "_applyOverflowY": {
      "location": {
        "start": {
          "line": 81,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 5
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "overflowY"
      ]
    },
    "getOverflowX": {
      "type": "function",
      "name": "getOverflowX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>overflowX</code>.\n\nFor further details take a look at the property definition: {@link #overflowX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for overflowX"
          }
        ]
      }
    },
    "setOverflowX": {
      "type": "function",
      "name": "setOverflowX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>overflowX</code>.\n\nFor further details take a look at the property definition: {@link #overflowX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for overflowX"
          }
        ]
      }
    },
    "resetOverflowX": {
      "type": "function",
      "name": "resetOverflowX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>overflowX</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #overflowX}."
          }
        ]
      }
    },
    "getOverflowY": {
      "type": "function",
      "name": "getOverflowY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>overflowY</code>.\n\nFor further details take a look at the property definition: {@link #overflowY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for overflowY"
          }
        ]
      }
    },
    "setOverflowY": {
      "type": "function",
      "name": "setOverflowY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>overflowY</code>.\n\nFor further details take a look at the property definition: {@link #overflowY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for overflowY"
          }
        ]
      }
    },
    "resetOverflowY": {
      "type": "function",
      "name": "resetOverflowY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>overflowY</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #overflowY}."
          }
        ]
      }
    },
    "setOverflow": {
      "type": "function",
      "name": "setOverflow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>overflow</code>.\n\nFor further details take a look at the property definition: {@link #overflow}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for overflow"
          }
        ]
      }
    },
    "resetOverflow": {
      "type": "function",
      "name": "resetOverflow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>overflow</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #overflow}."
          }
        ]
      }
    }
  },
  "descendants": []
}