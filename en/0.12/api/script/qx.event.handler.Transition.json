{"attributes": {"name": "Transition", "packageName": "qx.event.handler", "superClass": "qx.core.Object", "fullName": "qx.event.handler.Transition", "type": "class", "interfaces": "qx.event.IEventHandler,qx.core.IDisposable"}, "type": "class", "children": [{"attributes": {"text": "<p><span class=\"caps\">EXPERIMENTAL</span> &#8211; <span class=\"caps\">NOT</span> <span class=\"caps\">READY</span> <span class=\"caps\">FOR</span> <span class=\"caps\">PRODUCTION</span></p>\n\n<p>This class provides support for HTML5 transition and animation events.\nCurrently only WebKit and Firefox are supported.</p>\n\n<p><span class=\"caps\">NOTE</span>: Instances of this class must be disposed of after use</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 62, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "manager"}, "type": "param", "children": [{"attributes": {"text": "<p>Event manager for the window to use</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.Manager"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Create a new instance</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "TARGET_CHECK"}, "type": "constant", "children": [{"attributes": {"text": "<p>Which target check to use</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "SUPPORTED_TYPES"}, "type": "constant", "children": [{"attributes": {"text": "<p>Supported event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "PRIORITY"}, "type": "constant", "children": [{"attributes": {"text": "<p>Priority of this handler</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"type": "Null", "name": "NATIVE_TO_TYPE", "value": "null"}, "type": "constant", "children": [{"attributes": {"text": "<p>Mapping of native event types to supported event types</p>"}, "type": "desc"}]}, {"attributes": {"type": "Boolean", "name": "IGNORE_CAN_HANDLE", "value": "true"}, "type": "constant", "children": [{"attributes": {"text": "<p>Whether the method &#8220;canHandleEvent&#8221; must be called</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"type": "Null", "name": "TYPE_TO_NATIVE", "value": "null"}, "type": "constant", "children": [{"attributes": {"text": "<p>Mapping of supported event types to native event types</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 1, "name": "_onNative"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "domEvent"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Global handler for the transition event.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.event.IEventHandler", "line": 129, "name": "canHandleEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}]}]}, {"attributes": {"line": 1, "name": "registerEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The target to, which the event handler should be attached</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether to attach the event to the capturing phase or the bubbling phase of the event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This method is called each time an event listener, for one of the\nsupported events, is added using {@link qx.event.Manager#addListener}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1, "name": "unregisterEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The target from, which the event handler should be removed</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether to attach the event to the capturing phase or the bubbling phase of the event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This method is called each time an event listener, for one of the\nsupported events, is removed by using {@link qx.event.Manager#removeListener}\nand no other event listener is listening on this type.</p>"}, "type": "desc"}]}]}]}