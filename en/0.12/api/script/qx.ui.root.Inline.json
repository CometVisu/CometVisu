{"attributes": {"name": "Inline", "packageName": "qx.ui.root", "mixins": "qx.ui.core.MLayoutHandling", "superClass": "qx.ui.root.Abstract", "fullName": "qx.ui.root.Inline", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>This classes could be used to insert qooxdoo islands into existing\nweb pages. You can use the isles to place any qooxdoo powered widgets\ninside a layout made using traditional <span class=\"caps\">HTML</span> markup and <span class=\"caps\">CSS</span>.</p>\n\n<p>The size of the widget in each dimension can either be determined by the\nsize hint of the inline&#8217;s children or by the size of the root <span class=\"caps\">DOM</span> element. If\n<code>dynamicX</code>/<code>dynamicY</code> is true the width/height of the <span class=\"caps\">DOM</span>\nelement is used.</p>\n\n<p>This class uses {@link qx.ui.layout.Basic} as default layout. The layout\ncan be changed using the {@link #setLayout} method.</p>\n\n<p>To position popups and tooltips please have a look at {@link qx.ui.root.Page}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 62, "isCtor": true, "overriddenFrom": "qx.ui.root.Abstract", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to use as isle for qooxdoo content. Please note that existing content gets removed on the first layout flush.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "dynamicX"}, "type": "param", "children": [{"attributes": {"text": "<p>If <code>true</code> the widget&#8217;s width is determined by the <span class=\"caps\">DOM</span> element&#8217;s width. Otherwise the children&#8217;s size hint is used.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "dynamicY"}, "type": "param", "children": [{"attributes": {"text": "<p>If <code>true</code> the widget&#8217;s height is determined by the <span class=\"caps\">DOM</span> element&#8217;s height. Otherwise the children&#8217;s size hint is used.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 124, "name": "__initDynamicMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Performs several checks for dynamic mode and adds the &#8220;resize&#8221; listener</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.LayoutItem", "line": 222, "overriddenFrom": "qx.ui.core.Widget", "name": "_computeSizeHint"}, "type": "method"}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 157, "overriddenFrom": "qx.ui.core.Widget", "name": "_createContentElement"}, "type": "method"}, {"attributes": {"access": "protected", "line": 193, "name": "_onResize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener for the element&#8217;s resize event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 208, "name": "_onWindowResize"}, "type": "method", "children": [{"attributes": {"text": "<p>Listener for the window&#8217;s resize event.</p>"}, "type": "desc"}]}]}]}