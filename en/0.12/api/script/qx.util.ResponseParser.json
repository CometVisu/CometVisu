{"attributes": {"packageName": "qx.util", "type": "bootstrap", "fullName": "qx.util.ResponseParser", "name": "ResponseParser"}, "type": "class", "children": [{"attributes": {"text": "<p>Parsers for parsing response strings (especially for <span class=\"caps\">XHR</span>).</p>\n\n<p>Known parsers are: <code>&#8220;json&#8221;</code> and <code>&#8220;xml&#8221;</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 32, "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "parser"}, "type": "param", "children": [{"attributes": {"text": "<p>See {@link #setParser}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "PARSER"}, "type": "constant", "children": [{"attributes": {"text": "<p>Map of parser functions. Parsers defined here can be referenced symbolically, e.g. with {@link #setParser}. Known parsers are: <code>&#8220;json&#8221;</code> and <code>&#8220;xml&#8221;</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 133, "name": "_getParser"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "contentType"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets the parser.</p>\n\n<p>If not defined explicitly using {@link #setParser},\nthe parser is inferred from the content type.</p>\n\n<p>Override this method to extend the list of content types\nbeing handled.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parser function or <code>null</code> if the content type is undetermined.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 64, "name": "parse"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "response"}, "type": "param", "children": [{"attributes": {"text": "<p>response (e.g <span class=\"caps\">JSON</span>/XML string)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "contentType"}, "type": "param", "children": [{"attributes": {"text": "<p>contentType (e.g. &#8216;application/json&#8217;)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns given response parsed with parser\ndetermined by {@link #_getParser}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parsed response of the request.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 104, "name": "setParser"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "parser"}, "type": "param", "children": [{"attributes": {"text": "<p>Can be: <ul> <li>A parser defined in {@link qx.util.ResponseParser#PARSER}, referenced by string.</li> <li>The function to invoke. Receives the raw response as argument.</li> </ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set parser used to parse response once request has\ncompleted successfully.</p>\n\n<p>Usually, the parser is correctly inferred from the\ncontent type of the response. This method allows to force the\nparser being used, e.g. if the content type returned from\nthe backend is wrong or the response needs special parsing.</p>\n\n<p>Parser most typically used can be referenced symbolically.\nTo cover edge cases, a function can be given. When parsing\nthe response, this function is called with the raw response as\nfirst argument.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parser function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}]}]}