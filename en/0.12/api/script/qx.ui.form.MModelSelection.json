{"attributes": {"fullName": "qx.ui.form.MModelSelection", "packageName": "qx.ui.form", "type": "mixin", "name": "MModelSelection", "includer": "qx.ui.form.RadioGroup,qx.ui.tree.Tree,qx.ui.form.List,qx.ui.form.RadioButtonGroup,qx.ui.form.SelectBox,cv.ui.manager.viewer.Folder"}, "type": "class", "children": [{"attributes": {"text": "<p>This mixin offers the selection of the model properties.\nIt can only be included if the object including it implements the\n{@link qx.ui.core.ISingleSelection} interface and the selectables implement\nthe {@link qx.ui.form.IModel} interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 27, "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeModelSelection"}, "type": "event", "children": [{"attributes": {"text": "<p>Pseudo event. It will never be fired because the array itself can not\nbe changed. But the event description is needed for the data binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 89, "isMixin": true, "name": "__onModelSelectionArrayChange"}, "type": "method", "children": [{"attributes": {"text": "<p>Listener for the change of the internal model selection data array.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 59, "isMixin": true, "name": "__onModelSelectionChange"}, "type": "method", "children": [{"attributes": {"text": "<p>Handler for the selection change of the including class e.g. SelectBox,\nList, ...\nIt sets the new modelSelection via {@link #setModelSelection}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 128, "isMixin": true, "name": "getModelSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns always an array of the models of the selected items. If no\nitem is selected or no model is given, the array will be empty.</p>\n\n<p><strong><span class=\"caps\">CAREFUL</span>!</strong> The model selection can only work if every item item in the\nselection providing widget has a model property!</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An array of the models of the selected items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 147, "isMixin": true, "name": "setModelSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "modelSelection"}, "type": "param", "children": [{"attributes": {"text": "<p>An array of models, which should be selected.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Takes the given models in the array and searches for the corresponding\nselectables. If an selectable does have that model attached, it will be\nselected.</p>\n\n<p><strong>Attention:</strong> This method can have a time complexity of O(n^2)!</p>\n\n<p><strong><span class=\"caps\">CAREFUL</span>!</strong> The model selection can only work if every item item in the\nselection providing widget has a model property!</p>"}, "type": "desc"}]}]}]}