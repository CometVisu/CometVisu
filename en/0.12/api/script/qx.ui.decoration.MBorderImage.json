{"attributes": {"fullName": "qx.ui.decoration.MBorderImage", "packageName": "qx.ui.decoration", "type": "mixin", "name": "MBorderImage", "includer": "qx.ui.decoration.Decorator"}, "type": "class", "children": [{"attributes": {"text": "<p>Decorator which uses the CSS3 border image properties.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 275, "isMixin": true, "name": "__getSlices"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "baseImage"}, "type": "param", "children": [{"attributes": {"text": "<p>Resource Id of the base border image</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets the slice sizes from the fallback border images.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Array with the top, right, bottom and left slice widths</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 258, "isMixin": true, "name": "_applyBorderImage"}, "type": "method", "children": [{"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.decoration.MBorderImage#sliceBottom"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.decoration.MBorderImage#sliceRight"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.decoration.MBorderImage#sliceLeft"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.decoration.MBorderImage#sliceTop"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.decoration.MBorderImage#repeatX"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.decoration.MBorderImage#repeatY"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.decoration.MBorderImage#borderImage"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.decoration.MBorderImage#fill"}, "type": "entry"}]}, {"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the properties <code>borderImage</code>, <code>fill</code>, <code>repeatX</code>, <code>repeatY</code>, <code>sliceBottom</code>, <code>sliceLeft</code>, <code>sliceRight</code> and <code>sliceTop</code>.</p>\n\n<p>For further details take a look at the property definitions: {@link #borderImage}, {@link #fill}, {@link #repeatX}, {@link #repeatY}, {@link #sliceBottom}, {@link #sliceLeft}, {@link #sliceRight} and {@link #sliceTop}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 235, "isMixin": true, "name": "_getDefaultInsetsForBorderImage"}, "type": "method", "children": [{"attributes": {"text": "<p>Computes the inset values based on the border image slices (defined in the\ndecoration theme or computed from the fallback image sizes).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map with the top, right, bottom and left insets</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 190, "isMixin": true, "name": "_styleBorderImage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "styles"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> style map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds the border-image styles to the given map</p>"}, "type": "desc"}]}, {"attributes": {"name": "getBorderImage", "fromProperty": "borderImage"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>borderImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>borderImage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getBorderImageMode", "fromProperty": "borderImageMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>borderImageMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImageMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>borderImageMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getFill", "fromProperty": "fill"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>fill</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #fill}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>fill</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getRepeatX", "fromProperty": "repeatX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>repeatX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>repeatX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getRepeatY", "fromProperty": "repeatY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>repeatY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>repeatY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSliceBottom", "fromProperty": "sliceBottom"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>sliceBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceBottom}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>sliceBottom</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSliceLeft", "fromProperty": "sliceLeft"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>sliceLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceLeft}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>sliceLeft</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSliceRight", "fromProperty": "sliceRight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>sliceRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceRight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>sliceRight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSliceTop", "fromProperty": "sliceTop"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>sliceTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceTop}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>sliceTop</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initBorderImage", "fromProperty": "borderImage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>borderImage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>borderImage</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initBorderImageMode", "fromProperty": "borderImageMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>borderImageMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>borderImageMode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImageMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initFill", "fromProperty": "fill"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>fill</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>fill</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #fill}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initRepeatX", "fromProperty": "repeatX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>repeatX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>repeatX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initRepeatY", "fromProperty": "repeatY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>repeatY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>repeatY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSliceBottom", "fromProperty": "sliceBottom"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>sliceBottom</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>sliceBottom</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceBottom}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSliceLeft", "fromProperty": "sliceLeft"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>sliceLeft</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>sliceLeft</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceLeft}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSliceRight", "fromProperty": "sliceRight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>sliceRight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>sliceRight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceRight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSliceTop", "fromProperty": "sliceTop"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>sliceTop</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>sliceTop</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceTop}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isFill", "fromProperty": "fill"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>fill</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #fill}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetBorderImage", "fromProperty": "borderImage"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>borderImage</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImage}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetBorderImageMode", "fromProperty": "borderImageMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>borderImageMode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImageMode}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetFill", "fromProperty": "fill"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>fill</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #fill}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetRepeat", "fromProperty": "repeat"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>repeat</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #repeat}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetRepeatX", "fromProperty": "repeatX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>repeatX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatX}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetRepeatY", "fromProperty": "repeatY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>repeatY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatY}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSlice", "fromProperty": "slice"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>slice</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #slice}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSliceBottom", "fromProperty": "sliceBottom"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>sliceBottom</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceBottom}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSliceLeft", "fromProperty": "sliceLeft"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>sliceLeft</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceLeft}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSliceRight", "fromProperty": "sliceRight"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>sliceRight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceRight}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSliceTop", "fromProperty": "sliceTop"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>sliceTop</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceTop}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setBorderImage", "fromProperty": "borderImage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>borderImage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>borderImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBorderImageMode", "fromProperty": "borderImageMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>borderImageMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>borderImageMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #borderImageMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setFill", "fromProperty": "fill"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>fill</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>fill</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #fill}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 11, "name": "setRepeat", "fromProperty": "repeat"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "repeatX"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #repeatX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "repeatY"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #repeatY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the values of the property group <code>repeat</code>.</p>\n\n<p>This setter supports a shorthand mode compatible with the way margins and paddins are set in <span class=\"caps\">CSS</span>.</p>\n\n<p>For further details take a look at the property definition: {@link #repeat}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setRepeatX", "fromProperty": "repeatX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>repeatX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>repeatX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setRepeatY", "fromProperty": "repeatY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>repeatY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>repeatY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #repeatY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 13, "name": "setSlice", "fromProperty": "slice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "sliceTop"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #sliceTop}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "sliceRight"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #sliceRight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "sliceBottom"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #sliceBottom}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "sliceLeft"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #sliceLeft}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the values of the property group <code>slice</code>.</p>\n\n<p>This setter supports a shorthand mode compatible with the way margins and paddins are set in <span class=\"caps\">CSS</span>.</p>\n\n<p>For further details take a look at the property definition: {@link #slice}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setSliceBottom", "fromProperty": "sliceBottom"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>sliceBottom</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>sliceBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceBottom}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSliceLeft", "fromProperty": "sliceLeft"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>sliceLeft</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>sliceLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceLeft}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSliceRight", "fromProperty": "sliceRight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>sliceRight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>sliceRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceRight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSliceTop", "fromProperty": "sliceTop"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>sliceTop</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>sliceTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sliceTop}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleFill", "fromProperty": "fill"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>fill</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #fill}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "borderImage", "allowNull": "true", "propertyType": "new", "apply": "_applyBorderImage", "isMixin": true, "check": "String"}, "type": "property", "children": [{"attributes": {"text": "<p>Base image <span class=\"caps\">URL</span>.</p>"}, "type": "desc"}]}, {"attributes": {"possibleValues": "\"horizontal\",\"vertical\",\"grid\"", "defaultValue": "\"grid\"", "isMixin": true, "name": "borderImageMode", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Configures the border image mode. Supported values:\n<ul>\n  <li>horizontal: left and right border images</li>\n  <li>vertical: top and bottom border images</li>\n  <li>grid: border images for all edges</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"name": "fill", "defaultValue": "true", "propertyType": "new", "apply": "_applyBorderImage", "isMixin": true, "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>If set to <code>false</code>, the center image will be omitted and only\nthe border will be drawn.</p>"}, "type": "desc"}]}, {"attributes": {"group": "\"repeatX\",\"repeatY\"", "mode": "shorthand", "isMixin": true, "name": "repeat", "propertyType": "group"}, "type": "property", "children": [{"attributes": {"text": "<p>This property specifies how the images for the sides and the middle part\nof the border image are scaled and tiled.</p>"}, "type": "desc"}]}, {"attributes": {"name": "repeatX", "defaultValue": "\"stretch\"", "propertyType": "new", "apply": "_applyBorderImage", "possibleValues": "\"stretch\",\"repeat\",\"round\"", "isMixin": true}, "type": "property", "children": [{"attributes": {"text": "<p>This property specifies how the images for the sides and the middle part\nof the border image are scaled and tiled horizontally.</p>\n\n<p>Values have the following meanings:\n<ul>\n  <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n  <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n  <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n   fill the area with a whole number of tiles, the image is rescaled so\n   that it does.</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"name": "repeatY", "defaultValue": "\"stretch\"", "propertyType": "new", "apply": "_applyBorderImage", "possibleValues": "\"stretch\",\"repeat\",\"round\"", "isMixin": true}, "type": "property", "children": [{"attributes": {"text": "<p>This property specifies how the images for the sides and the middle part\nof the border image are scaled and tiled vertically.</p>\n\n<p>Values have the following meanings:\n<ul>\n  <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n  <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n  <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n   fill the area with a whole number of tiles, the image is rescaled so\n   that it does.</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"group": "\"sliceTop\",\"sliceRight\",\"sliceBottom\",\"sliceLeft\"", "mode": "shorthand", "isMixin": true, "name": "slice", "propertyType": "group"}, "type": "property", "children": [{"attributes": {"text": "<p>The slice properties divide the image into nine regions, which define the\ncorner, edge and the center images.</p>"}, "type": "desc"}]}, {"attributes": {"name": "sliceBottom", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyBorderImage", "isMixin": true, "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>The bottom slice line of the base image. The slice properties divide the\nimage into nine regions, which define the corner, edge and the center\nimages.</p>"}, "type": "desc"}]}, {"attributes": {"name": "sliceLeft", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyBorderImage", "isMixin": true, "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>The left slice line of the base image. The slice properties divide the\nimage into nine regions, which define the corner, edge and the center\nimages.</p>"}, "type": "desc"}]}, {"attributes": {"name": "sliceRight", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyBorderImage", "isMixin": true, "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>The right slice line of the base image. The slice properties divide the\nimage into nine regions, which define the corner, edge and the center\nimages.</p>"}, "type": "desc"}]}, {"attributes": {"name": "sliceTop", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyBorderImage", "isMixin": true, "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>The top slice line of the base image. The slice properties divide the\nimage into nine regions, which define the corner, edge and the center\nimages.</p>"}, "type": "desc"}]}]}]}