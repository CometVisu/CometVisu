{"attributes": {"fullName": "qx.ui.layout.Grid", "packageName": "qx.ui.layout", "type": "class", "name": "Grid", "superClass": "qx.ui.layout.Abstract"}, "type": "class", "children": [{"attributes": {"text": "<p>The grid layout manager arranges the items in a two dimensional\ngrid. Widgets can be placed into the grid&#8217;s cells and may span multiple rows\nand columns.</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li>Flex values for rows and columns</li>\n<li>Minimal and maximal column and row sizes</li>\n<li>Manually setting of column and row sizes</li>\n<li>Horizontal and vertical alignment</li>\n<li>Horizontal and vertical spacing</li>\n<li>Column and row spans</li>\n<li>Auto-sizing</li>\n</ul>\n\n<p><strong>Item Properties</strong></p>\n\n<ul>\n<li><strong>row</strong> <em>(Integer)</em>: The row of the cell the\n  widget should occupy. Each cell can only containing one widget. This layout\n  property is mandatory.\n</li>\n<li><strong>column</strong> <em>(Integer)</em>: The column of the cell the\n  widget should occupy. Each cell can only containing one widget. This layout\n  property is mandatory.\n</li>\n<li><strong>rowSpan</strong> <em>(Integer)</em>: The number of rows, the\n  widget should span, starting from the row specified in the <code>row</code>\n  property. The cells in the spanned rows must be empty as well.\n</li>\n<li><strong>colSpan</strong> <em>(Integer)</em>: The number of columns, the\n  widget should span, starting from the column specified in the <code>column</code>\n  property. The cells in the spanned columns must be empty as well.\n</li>\n</ul>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the grid layout.</p>\n\n<pre class=\"javascript\">\nvar layout = new qx.ui.layout.Grid();\nlayout.setRowFlex(0, 1); // make row 0 flexible\nlayout.setColumnWidth(1, 200); // set with of column 1 to 200 pixel\n\nvar container = new qx.ui.container.Composite(layout);\ncontainer.add(new qx.ui.core.Widget(), {row: 0, column: 0});\ncontainer.add(new qx.ui.core.Widget(), {row: 0, column: 1});\ncontainer.add(new qx.ui.core.Widget(), {row: 1, column: 0, rowSpan: 2});\n</pre>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://manual.qooxdoo.org/6.0.0-alpha/pages/layout/grid.html\">\nExtended documentation</a> and links to demos of this layout in the qooxdoo manual."}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 97, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "0", "optional": true, "name": "spacingX"}, "type": "param", "children": [{"attributes": {"text": "<p>The horizontal spacing between grid cells. Sets {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "optional": true, "name": "spacingY"}, "type": "param", "children": [{"attributes": {"text": "<p>The vertical spacing between grid cells. Sets {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 198, "name": "__buildGrid"}, "type": "method", "children": [{"attributes": {"text": "<p>Rebuild the internal representation of the grid</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 798, "name": "__getOuterSize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>The widget to get the size for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.LayoutItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the widget&#8217;s size hint including the widget&#8217;s margins</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a size hint map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.layout.Abstract", "line": 1379, "overriddenFrom": "qx.ui.layout.Abstract", "name": "_computeSizeHint"}, "type": "method"}, {"attributes": {"access": "protected", "line": 830, "name": "_fixHeightsRowSpan"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "rowHeights"}, "type": "param", "children": [{"attributes": {"text": "<p>The current row height array as computed by {@link #_getRowHeights}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether all row spans fit with their preferred height into the\npreferred row heights. If there is not enough space, the preferred\nrow sizes are increased. The distribution respects the flex and max\nvalues of the rows.</p>\n\n<p>The same is true for the min sizes.</p>\n\n<p>The height array is modified in place.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 951, "name": "_fixWidthsColSpan"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "colWidths"}, "type": "param", "children": [{"attributes": {"text": "<p>The current column width array as computed by {@link #_getColWidths}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether all col spans fit with their preferred width into the\npreferred column widths. If there is not enough space the preferred\ncolumn sizes are increased. The distribution respects the flex and max\nvalues of the columns.</p>\n\n<p>The same is true for the min sizes.</p>\n\n<p>The width array is modified in place.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1178, "name": "_getColumnFlexOffsets"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "width"}, "type": "param", "children": [{"attributes": {"text": "<p>The grid width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes for each column by how many pixels it must grow or shrink, taking\nthe column flex values and min/max widths into account.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Sparse array of offsets to add to each column width. If an array entry is empty nothing should be added to the column.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 1107, "name": "_getColWidths"}, "type": "method", "children": [{"attributes": {"text": "<p>Compute the min/pref/max column widths.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An array containing width information for each column. The entries have the keys <code>minWidth</code>, <code>maxWidth</code> and <code>width</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 1224, "name": "_getRowFlexOffsets"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "height"}, "type": "param", "children": [{"attributes": {"text": "<p>The grid height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes for each row by how many pixels it must grow or shrink, taking\nthe row flex values and min/max heights into account.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Sparse array of offsets to add to each row height. If an array entry is empty nothing should be added to the row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 1033, "name": "_getRowHeights"}, "type": "method", "children": [{"attributes": {"text": "<p>Compute the min/pref/max row heights.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An array containing height information for each row. The entries have the keys <code>minHeight</code>, <code>maxHeight</code> and <code>height</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 314, "name": "_setColumnData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key under which the data should be stored</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>data to store</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Stores data for a grid column</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 291, "name": "_setRowData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key under which the data should be stored</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>data to store</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Stores data for a grid row</p>"}, "type": "desc"}]}, {"attributes": {"line": 511, "name": "getCellAlign"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell&#8217;s row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell&#8217;s column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get a map of the cell&#8217;s alignment. For vertical alignment the row alignment\ntakes precedence over the column alignment. For horizontal alignment it is\nthe over way round. If an alignment is set on the cell widget using\n{@link qx.ui.core.LayoutItem#setLayoutProperties}, this alignment takes\nalways precedence over row or column alignment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A map with the keys <code>vAlign</code> and <code>hAlign</code> containing the vertical and horizontal cell alignment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 458, "name": "getCellWidget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell&#8217;s row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell&#8217;s column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the widget located in the cell. If a the cell is empty or the widget\nhas a {@link qx.ui.core.Widget#visibility} value of <code>exclude</code>,\n<code>null</code> is returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The cell&#8217;s widget. The value may be null.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 386, "name": "getColumnAlign"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get a map of the column&#8217;s alignment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A map with the keys <code>vAlign</code> and <code>hAlign</code> containing the vertical and horizontal column alignment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 489, "name": "getColumnCount"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the number of columns in the grid layout.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The number of columns in the layout</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 581, "name": "getColumnFlex"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the flex value of a grid column.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The column&#8217;s flex value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 640, "name": "getColumnMaxWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the maximum width of a grid column.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The column&#8217;s maximum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 698, "name": "getColumnMinWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the minimum width of a grid column.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The column&#8217;s minimum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 669, "name": "getColumnWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the preferred width of a grid column.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The column&#8217;s width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 438, "name": "getRowAlign"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The Row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get a map of the row&#8217;s alignment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A map with the keys <code>vAlign</code> and <code>hAlign</code> containing the vertical and horizontal row alignment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 474, "name": "getRowCount"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the number of rows in the grid layout.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The number of rows in the layout</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 610, "name": "getRowFlex"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the flex value of a grid row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The row&#8217;s flex value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 756, "name": "getRowHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the preferred height of a grid row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The row&#8217;s width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 727, "name": "getRowMaxHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the maximum height of a grid row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The row&#8217;s maximum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 785, "name": "getRowMinHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the minimum height of a grid row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The row&#8217;s minimum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>spacingX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>spacingX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>spacingY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>spacingY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>spacingX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>spacingX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>spacingY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>spacingY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.layout.Abstract", "line": 1369, "overriddenFrom": "qx.ui.layout.Abstract", "name": "invalidateLayoutCache"}, "type": "method"}, {"attributes": {"docFrom": "qx.ui.layout.Abstract", "line": 1263, "overriddenFrom": "qx.ui.layout.Abstract", "name": "renderLayout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "availWidth"}, "type": "param"}, {"attributes": {"name": "availHeight"}, "type": "param"}, {"attributes": {"name": "padding"}, "type": "param"}]}]}, {"attributes": {"name": "resetSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>spacingX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>spacingY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 361, "name": "setColumnAlign"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>Column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "hAlign"}, "type": "param", "children": [{"attributes": {"text": "<p>The horizontal alignment. Valid values are &#8220;left&#8221;, &#8220;center&#8221; and &#8220;right&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "vAlign"}, "type": "param", "children": [{"attributes": {"text": "<p>The vertical alignment. Valid values are &#8220;top&#8221;, &#8220;middle&#8221;, &#8220;bottom&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the default cell alignment for a column. This alignment can be\noverridden on a per cell basis by setting the cell&#8217;s content widget&#8217;s\n<code>alignX</code> and <code>alignY</code> properties.</p>\n\n<p>If on a grid cell both row and a column alignment is set, the horizontal\nalignment is taken from the column and the vertical alignment is taken\nfrom the row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 567, "name": "setColumnFlex"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "flex"}, "type": "param", "children": [{"attributes": {"text": "<p>The column&#8217;s flex value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the flex value for a grid column.\nBy default the column flex value is <code>0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 626, "name": "setColumnMaxWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "maxWidth"}, "type": "param", "children": [{"attributes": {"text": "<p>The column&#8217;s maximum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the maximum width of a grid column.\nThe default value is <code>Infinity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 684, "name": "setColumnMinWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "minWidth"}, "type": "param", "children": [{"attributes": {"text": "<p>The column&#8217;s minimum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the minimum width of a grid column.\nThe default value is <code>0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 655, "name": "setColumnWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "width"}, "type": "param", "children": [{"attributes": {"text": "<p>The column&#8217;s width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the preferred width of a grid column.\nThe default value is <code>Infinity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 413, "name": "setRowAlign"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>Row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "hAlign"}, "type": "param", "children": [{"attributes": {"text": "<p>The horizontal alignment. Valid values are &#8220;left&#8221;, &#8220;center&#8221; and &#8220;right&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "vAlign"}, "type": "param", "children": [{"attributes": {"text": "<p>The vertical alignment. Valid values are &#8220;top&#8221;, &#8220;middle&#8221;, &#8220;bottom&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the default cell alignment for a row. This alignment can be\noverridden on a per cell basis by setting the cell&#8217;s content widget&#8217;s\n<code>alignX</code> and <code>alignY</code> properties.</p>\n\n<p>If on a grid cell both row and a column alignment is set, the horizontal\nalignment is taken from the column and the vertical alignment is taken\nfrom the row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 596, "name": "setRowFlex"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "flex"}, "type": "param", "children": [{"attributes": {"text": "<p>The row&#8217;s flex value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the flex value for a grid row.\nBy default the row flex value is <code>0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 742, "name": "setRowHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "height"}, "type": "param", "children": [{"attributes": {"text": "<p>The row&#8217;s width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the preferred height of a grid row.\nThe default value is <code>Infinity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 713, "name": "setRowMaxHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "maxHeight"}, "type": "param", "children": [{"attributes": {"text": "<p>The row&#8217;s maximum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the maximum height of a grid row.\nThe default value is <code>Infinity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 771, "name": "setRowMinHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "minHeight"}, "type": "param", "children": [{"attributes": {"text": "<p>The row&#8217;s minimum width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the minimum height of a grid row.\nThe default value is <code>0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"line": 337, "name": "setSpacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "spacing"}, "type": "param", "children": [{"attributes": {"text": "<p>new horizontal and vertical spacing</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Shortcut to set both horizontal and vertical spacing between grid cells\nto the same value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Grid"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>spacingX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>spacingX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>spacingY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>spacingY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Integer", "apply": "_applyLayoutChange", "defaultValue": "0", "name": "spacingX", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The horizontal spacing between grid cells.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "apply": "_applyLayoutChange", "defaultValue": "0", "name": "spacingY", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The vertical spacing between grid cells.</p>"}, "type": "desc"}]}]}]}