{"attributes": {"name": "FileHandlerRegistry", "hasWarning": true, "packageName": "cv.ui.manager.control", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "cv.ui.manager.control.FileHandlerRegistry", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Central registry for all available file editors/viewers.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 13, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 189, "hasError": true, "name": "__canHandle"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "config"}, "type": "param"}, {"attributes": {"name": "file"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'config'", "column": 18, "line": 189}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'file'", "column": 18, "line": 189}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 18, "line": 189}, "type": "error"}]}]}, {"attributes": {"access": "protected", "line": 177, "hasError": true, "name": "_onChangesDefaultConfigEditor"}, "type": "method", "children": [{"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Documentation is missing.", "column": 36, "line": 177}, "type": "error"}]}]}, {"attributes": {"line": 208, "hasError": true, "name": "getAllFileHandlers"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "file"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'file'", "column": 25, "line": 208}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'type'", "column": 25, "line": 208}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 25, "line": 208}, "type": "error"}]}]}, {"attributes": {"line": 95, "hasError": true, "name": "getFileHandler"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "file"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'file'", "column": 21, "line": 95}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'type'", "column": 21, "line": 95}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 21, "line": 95}, "type": "error"}]}]}, {"attributes": {"line": 146, "hasError": true, "name": "getFileHandlerById"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "handlerId"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'handlerId'", "column": 25, "line": 146}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 25, "line": 146}, "type": "error"}]}]}, {"attributes": {"line": 150, "hasError": true, "name": "hasFileHandler"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "file"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'file'", "column": 21, "line": 150}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'type'", "column": 21, "line": 150}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 21, "line": 150}, "type": "error"}]}]}, {"attributes": {"line": 56, "name": "registerFileHandler"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>filename-/path or regular expression. If null this is a special handler that must be loaded manually (like cv.ui.manager.Start)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}, {"attributes": {"type": "Class"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>widget class that handles those type of files</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>additional options to store in the registry</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers an editor for a specific file, that is identified by the given selector.</p>"}, "type": "desc"}]}, {"attributes": {"line": 164, "name": "setDefault"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.Class"}, "type": "entry"}]}]}, {"attributes": {"name": "noTemporaryFiles"}, "type": "param", "children": [{"attributes": {"text": "<p>flag to prevent this default editor from being used to open temporary files.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "noReadOnlyFiles"}, "type": "param", "children": [{"attributes": {"text": "<p>fleag to prevent this default editor from being used to open file that are not writeable</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Mark the handler with the given classname as default for the selector-id and all others with the same selector id not,</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 11, "isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "cv.ui.manager.control.FileHandlerRegistry"}, "type": "entry"}]}]}]}]}]}