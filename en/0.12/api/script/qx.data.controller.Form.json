{"attributes": {"name": "Form", "packageName": "qx.data.controller", "superClass": "qx.core.Object", "fullName": "qx.data.controller.Form", "type": "class", "interfaces": "qx.core.IDisposable"}, "type": "class", "children": [{"attributes": {"text": "<h2>Form Controller</h2>\n\n<p><strong>General idea</strong></p>\n\n<p>The form controller is responsible for connecting a form with a model. If no\nmodel is given, a model can be created. This created model will fit exactly\nto the given form and can be used for serialization. All the connections\nbetween the form items and the model are handled by an internal\n{@link qx.data.controller.Object}.</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li>Connect a form to a model (bidirectional)</li>\n<li>Create a model for a given form</li>\n</ul>\n\n<p><strong>Usage</strong></p>\n\n<p>The controller only works if both a controller and a model are set.\nCreating a model will automatically set the created model.</p>\n\n<p><strong>Cross reference</strong></p>\n\n<ul>\n<li>If you want to bind single values, use {@link qx.data.controller.Object}</li>\n<li>If you want to bind a list like widget, use {@link qx.data.controller.List}</li>\n<li>If you want to bind a tree widget, use {@link qx.data.controller.Tree}</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 60, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model to bind the target to. The given object will be set as {@link #model} property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The form which contains the form items. The given form will be set as {@link #target} property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.Form"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "selfUpdate"}, "type": "param", "children": [{"attributes": {"text": "<p>If set to true, you need to call the {@link #updateModel} method to get the data in the form to the model. Otherwise, the data will be synced automatically on every change of the form.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeModel"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #model}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeTarget"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #target}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 370, "name": "__isModelSelectable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The form item to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.IForm"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns whether the given item implements\n{@link qx.ui.core.ISingleSelection} and\n{@link qx.ui.form.IModelSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true, if given item fits.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 299, "name": "__setUpBinding"}, "type": "method", "children": [{"attributes": {"text": "<p>Internal helper for setting up the bindings using\n{@link qx.data.controller.Object#addTarget}. All bindings are set\nup bidirectional.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 342, "name": "__tearDownBinding"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "oldTarget"}, "type": "param", "children": [{"attributes": {"text": "<p>The form which has been removed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.Form"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for removing all set up bindings using\n{@link qx.data.controller.Object#removeTarget}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 254, "name": "_applyModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.Form#model"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 235, "name": "_applyTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.Form"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.Form"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.Form#target"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>target</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 124, "name": "addBindingOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the form item for which the options should be used.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "model2target"}, "type": "param", "children": [{"attributes": {"text": "<p>Options map used for the binding from model to target. The possible options can be found in the {@link qx.data.SingleValueBinding} class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "target2model"}, "type": "param", "children": [{"attributes": {"text": "<p>Options map used for the binding from target to model. The possible options can be found in the {@link qx.data.SingleValueBinding} class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The form controller uses for setting up the bindings the fundamental\nbinding layer, the {@link qx.data.SingleValueBinding}. To achieve a\nbinding in both directions, two bindings are needed. With this method,\nyou have the opportunity to set the options used for the bindings.</p>"}, "type": "desc"}]}, {"attributes": {"line": 157, "name": "createModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "includeBubbleEvents"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the model should support the bubbling of change events or not.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates and sets a model using the {@link qx.data.marshal.Json} object.\nRemember that this method can only work if the form is set. The created\nmodel will fit exactly that form. Changing the form or adding an item to\nthe form will need a new model creation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The created model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>target</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>target</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>model</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>target</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>target</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>model</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>target</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>target</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>target</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 212, "name": "updateModel"}, "type": "method", "children": [{"attributes": {"text": "<p>Responsible for syncing the data from entered in the form to the model.\nPlease keep in mind that this method only works if you create the form\nwith <code>selfUpdate</code> set to true. Otherwise, this method will\ndo nothing because updates will be synced automatically on every\nchange.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "model", "check": "qx.core.Object", "allowNull": "true", "propertyType": "new", "apply": "_applyModel", "event": "changeModel"}, "type": "property", "children": [{"attributes": {"text": "<p>Data object containing the data which should be shown in the target.</p>"}, "type": "desc"}]}, {"attributes": {"name": "target", "defaultValue": "null", "event": "changeTarget", "allowNull": "true", "propertyType": "new", "apply": "_applyTarget", "check": "qx.ui.form.Form"}, "type": "property", "children": [{"attributes": {"text": "<p>The target widget which should show the data.</p>"}, "type": "desc"}]}]}]}