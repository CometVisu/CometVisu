{"attributes": {"name": "Input", "packageName": "qx.event.handler", "superClass": "qx.core.Object", "fullName": "qx.event.handler.Input", "type": "class", "interfaces": "qx.event.IEventHandler"}, "type": "class", "children": [{"attributes": {"text": "<p>This handler provides an &#8220;change&#8221; event for all form fields and an\n&#8220;input&#8221; event for form fields of type &#8220;text&#8221; and &#8220;textarea&#8221;.</p>\n\n<p>To let these events work it is needed to create the elements using\n{@link qx.bom.Input}</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 67, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "PRIORITY"}, "type": "constant", "children": [{"attributes": {"text": "<p>Priority of this handler</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "TARGET_CHECK"}, "type": "constant", "children": [{"attributes": {"text": "<p>Which target check to use</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"type": "Boolean", "name": "IGNORE_CAN_HANDLE", "value": "false"}, "type": "constant", "children": [{"attributes": {"text": "<p>Whether the method &#8220;canHandleEvent&#8221; must be called</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "SUPPORTED_TYPES"}, "type": "constant", "children": [{"attributes": {"text": "<p>Supported event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 1, "name": "_inputFix"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The event target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for fixing the different behavior when pressing the backspace or\ndelete key.</p>\n\n<p>The other browsers fire a &#8220;input&#8221; event if the user presses the backspace\nor delete key.\nIE fire the event only for other keys.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onChangeChecked"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Native <span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal function called by input elements created using {@link qx.bom.Input}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onChangeValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Native <span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal function called by input elements created using {@link qx.bom.Input}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onInput"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Native <span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal function called by input elements created using {@link qx.bom.Input}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onKeyDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Key event listener for opera which recognizes if the enter key has been\npressed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onKeyPress"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The event target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for fixing the different behavior when pressing the enter key.</p>\n\n<p>FF and Safari fire a &#8220;change&#8221; event if the user presses the enter key.\nIE and Opera fire the event only if the focus is changed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onKeyUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Key event listener for opera which recognizes if the enter key has been\npressed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onProperty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Native <span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal function called by input elements created using {@link qx.bom.Input}.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.event.IEventHandler", "line": 142, "name": "canHandleEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}]}]}, {"attributes": {"docFrom": "qx.event.IEventHandler", "line": 159, "name": "registerEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}, {"attributes": {"name": "capture"}, "type": "param"}]}]}, {"attributes": {"docFrom": "qx.event.IEventHandler", "line": 261, "name": "unregisterEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}]}]}]}]}