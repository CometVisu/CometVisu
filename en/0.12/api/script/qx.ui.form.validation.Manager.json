{"attributes": {"fullName": "qx.ui.form.validation.Manager", "packageName": "qx.ui.form.validation", "type": "class", "name": "Manager", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>This validation manager is responsible for validation of forms.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 28, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeValid"}, "type": "event", "children": [{"attributes": {"text": "<p>Change event for the valid state.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "complete"}, "type": "event", "children": [{"attributes": {"text": "<p>Signals that the validation is done. This is not needed on synchronous\nvalidation (validation is done right after the call) but very important\nin the case an asynchronous validator will be used.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 649, "name": "__checkValidationComplete"}, "type": "method", "children": [{"attributes": {"text": "<p>Checks if all asynchronous validators have validated so the result\nis final and the {@link #complete} event can be fired. If that&#8217;s not\nthe case, nothing will happen in the method.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 412, "name": "__isAsyncValidator"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "validator"}, "type": "param", "children": [{"attributes": {"text": "<p>The validator to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "qx.ui.form.validation.AsyncValidator"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper function which checks, if the given validator is synchronous\nor asynchronous.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>True, if the given validator is asynchronous.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 459, "name": "__supportsDataBindingSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "formItem"}, "type": "param", "children": [{"attributes": {"text": "<p>The item to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns true, if the given item implements the\n{@link qx.data.controller.ISelection} interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true, if the given item implements the necessary interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 431, "name": "__supportsInvalid"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "formItem"}, "type": "param", "children": [{"attributes": {"text": "<p>The item to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns true, if the given item implements the {@link qx.ui.form.IForm}\ninterface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true, if the given item implements the necessary interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 445, "name": "__supportsSingleSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "formItem"}, "type": "param", "children": [{"attributes": {"text": "<p>The item to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns true, if the given item implements the\n{@link qx.ui.core.ISingleSelection} interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true, if the given item implements the necessary interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 364, "name": "__validateForm"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "items"}, "type": "param", "children": [{"attributes": {"text": "<p>An array of all form items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Validates the form. It checks for asynchronous validation and handles\nthe differences to synchronous validation. If no form validator is given,\ntrue will be returned. If a synchronous validator is given, the\nvalidation result will be returned. In asynchronous cases, null will be\nreturned cause the result is not available.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>description</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 471, "name": "_setValid"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new valid state of the manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the valid state of the manager. It generates the event if\nnecessary and stores the new value.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 487, "name": "_showToolTip"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "valid"}, "type": "param", "children": [{"attributes": {"text": "<code>false</code>, if the tooltip should be shown"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Responsible for showing a tooltip in case the validation is done for\nwidgets based on qx.ui.core.Widget.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 312, "name": "_validateItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "dataEntry"}, "type": "param", "children": [{"attributes": {"text": "<p>The map stored in {@link #add}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The currently set value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Validates a form item. This method handles the differences of\nsynchronous and asynchronous validation and returns the result of the\nvalidation if possible (synchronous cases). If the validation is\nasynchronous, null will be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Validation result or <code>null</code> for async validation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 277, "name": "_validateRequired"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "formItem"}, "type": "param", "children": [{"attributes": {"text": "<p>The form item to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the form item is required. If so, the value is checked\nand the result will be returned. If the form item is not required, true\nwill be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Validation result</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 146, "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "formItem"}, "type": "param", "children": [{"attributes": {"text": "<p>The form item to add.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"name": "validator"}, "type": "param", "children": [{"attributes": {"text": "<p>The validator.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "qx.ui.form.validation.AsyncValidator"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>The context of the validator.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a form item to the validation manager.</p>\n\n<p>The form item has to implement at least two interfaces:\n<ol>\n  <li>The {@link qx.ui.form.IForm} Interface</li>\n  <li>One of the following interfaces:\n    <ul>\n      <li>{@link qx.ui.form.IBooleanForm}</li>\n      <li>{@link qx.ui.form.IColorForm}</li>\n      <li>{@link qx.ui.form.IDateForm}</li>\n      <li>{@link qx.ui.form.INumberForm}</li>\n      <li>{@link qx.ui.form.IStringForm}</li>\n    </ul>\n  </li>\n</ol>\nThe validator can be a synchronous or asynchronous validator. In\nboth cases the validator can either returns a boolean or fire an\n{@link qx.core.ValidationError}. For synchronous validation, a plain\nJavaScript function should be used. For all asynchronous validations,\na {@link qx.ui.form.validation.AsyncValidator} is needed to wrap the\nplain function.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getContext", "fromProperty": "context"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>context</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #context}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>context</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 578, "name": "getInvalidFormItems"}, "type": "method", "children": [{"attributes": {"text": "<p>Selects invalid form items</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>invalid form items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getInvalidMessage", "fromProperty": "invalidMessage"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>invalidMessage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #invalidMessage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>invalidMessage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 555, "name": "getInvalidMessages"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns an array of all invalid messages of the invalid form items and\nthe form manager itself.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>All invalid messages.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"line": 199, "name": "getItems"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns registered form items from the validation manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The form items which will be validated.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getRequiredFieldMessage", "fromProperty": "requiredFieldMessage"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>requiredFieldMessage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #requiredFieldMessage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>requiredFieldMessage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 534, "name": "getValid"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the valid state of the manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The valid state of the manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getValidator", "fromProperty": "validator"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>validator</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #validator}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>validator</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initContext", "fromProperty": "context"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>context</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>context</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #context}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initInvalidMessage", "fromProperty": "invalidMessage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>invalidMessage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>invalidMessage</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #invalidMessage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initRequiredFieldMessage", "fromProperty": "requiredFieldMessage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>requiredFieldMessage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>requiredFieldMessage</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #requiredFieldMessage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initValidator", "fromProperty": "validator"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>validator</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>validator</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #validator}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 544, "name": "isValid"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the valid state of the manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The valid state of the manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 177, "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "formItem"}, "type": "param", "children": [{"attributes": {"text": "<p>The form item to remove.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove a form item from the validation manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The removed form item or <code>null</code> if the item could not be found.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"line": 594, "name": "reset"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the validator.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetContext", "fromProperty": "context"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>context</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #context}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetInvalidMessage", "fromProperty": "invalidMessage"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>invalidMessage</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #invalidMessage}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetRequiredFieldMessage", "fromProperty": "requiredFieldMessage"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>requiredFieldMessage</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #requiredFieldMessage}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetValidator", "fromProperty": "validator"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>validator</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #validator}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setContext", "fromProperty": "context"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>context</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>context</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #context}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 638, "name": "setFormValid"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "valid"}, "type": "param", "children": [{"attributes": {"text": "<p>The valid state for the form manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper method to set the form manager to valid for asynchronous\nvalidation calls. This indirection is used to determinate if the\nvalidation process is completed or if other asynchronous validators\nare still validating. {@link #__checkValidationComplete} checks if the\nvalidation is complete and will be called at the end of this method.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setInvalidMessage", "fromProperty": "invalidMessage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>invalidMessage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>invalidMessage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #invalidMessage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 619, "name": "setItemValid"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "formItem"}, "type": "param", "children": [{"attributes": {"text": "<p>The form item to set the valid state.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"name": "valid"}, "type": "param", "children": [{"attributes": {"text": "<p>The valid state for the form item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper method to set the given item to valid for asynchronous\nvalidation calls. This indirection is used to determinate if the\nvalidation process is completed or if other asynchronous validators\nare still validating. {@link #__checkValidationComplete} checks if the\nvalidation is complete and will be called at the end of this method.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setRequiredFieldMessage", "fromProperty": "requiredFieldMessage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>requiredFieldMessage</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>requiredFieldMessage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #requiredFieldMessage}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setValidator", "fromProperty": "validator"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>validator</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>validator</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #validator}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 220, "name": "validate"}, "type": "method", "children": [{"attributes": {"text": "<p>Invokes the validation. If only synchronous validators are set, the\nresult of the whole validation is available at the end of the method\nand can be returned. If an asynchronous validator is set, the result\nis still unknown at the end of this method so nothing will be returned.\nIn both cases, a {@link #complete} event will be fired if the validation\nhas ended. The result of the validation can then be accessed with the\n{@link #getValid} method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The validation result, if available.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "undefined"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"allowNull": "true", "name": "context", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The context for the form validation.</p>"}, "type": "desc"}]}, {"attributes": {"check": "String", "defaultValue": "\"\"", "name": "invalidMessage", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The invalid message should store the message why the form validation\nfailed. It will be added to the array returned by\n{@link #getInvalidMessages}.</p>"}, "type": "desc"}]}, {"attributes": {"check": "String", "defaultValue": "\"\"", "name": "requiredFieldMessage", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>This message will be shown if a required field is empty and no individual\n{@link qx.ui.form.MForm#requiredInvalidMessage} is given.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Custom check function.", "allowNull": "true", "defaultValue": "null", "name": "validator", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The validator of the form itself. You can set a function (for\nsynchronous validation) or a {@link qx.ui.form.validation.AsyncValidator}.\nIn both cases, the function can have all added form items as first\nargument and the manager as a second argument. The manager should be used\nto set the {@link #invalidMessage}.</p>\n\n<p>Keep in mind that the validator is optional if you don&#8217;t need the\nvalidation in the context of the whole form.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "AsyncValidator"}, "type": "entry"}]}]}]}]}