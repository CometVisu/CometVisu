{"attributes": {"group": "Core", "name": "qxWeb", "packageName": "", "superClass": "qx.type.BaseArray", "childClasses": "q,qx.ui.website.Widget", "fullName": "qxWeb", "type": "bootstrap"}, "type": "class", "children": [{"attributes": {"text": "<p>The Core module&#8217;s responsibility is to query the <span class=\"caps\">DOM</span> for elements and offer\nthese elements as a collection. The Core module itself does not offer any methods to\nwork with the collection. These methods are added by the other included modules,\nsuch as Manipulating or Attributes.</p>\n\n<p>Core also provides the plugin <span class=\"caps\">API</span> which allows modules to attach either\nstatic functions to the global <code>q</code> object or define methods on the\ncollection it returns.</p>\n\n<p>By default, the core module is assigned to a global module named <code>q</code>.\nIn case <code>q</code> is already defined, the name <code>qxWeb</code>\nis used instead.</p>\n\n<p>For further details, take a look at the documentation in the\n<a href=\"http://manual.qooxdoo.org/6.0.0-beta/pages/website.html\" target=\"_blank\">user manual</a>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 100, "isStatic": true, "name": "$attach"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "module"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the methods to attach.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "override"}, "type": "param", "children": [{"attributes": {"text": "<p>Force to override</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 149, "isStatic": true, "name": "$attachAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>the qooxdoo class definition calling this method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "undefined", "optional": true, "name": "staticsNamespace"}, "type": "param", "children": [{"attributes": {"text": "<p>Specifies the namespace under which statics are attached to {@link q}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q} during runtime according to the following conventions:</p>\n\n<p>Public members of the module are attached to the collection similar to\n<code>qxWeb.$attach</code>. Members beginning with &#8217;$&#8217; or &#8216;_&#8217; are ignored.</p>\n\n<p>Statics of the module are attached to {@link q} similar to\n<code>qxWeb.$attachStatic</code>. Statics beginning with &#8217;$&#8217; or &#8216;_&#8217;, as well as constants\n(all upper case) and some qooxdoo-internal statics of the module are ignored.</p>\n\n<p>If more fine-grained control outside if these conventions is needed,\nsimply use <code>qxWeb.$attach</code> or <code>qxWeb$attachStatic</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 180, "isStatic": true, "name": "$attachInit"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "init"}, "type": "param", "children": [{"attributes": {"text": "<p>The initialization method for a module.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new initialization\nmethods to {@link q} which will be called when a new collection is\ncreated.</p>"}, "type": "desc"}]}, {"attributes": {"line": 120, "isStatic": true, "name": "$attachStatic"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "module"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the methods to attach.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "override"}, "type": "param", "children": [{"attributes": {"text": "<p>Force to override</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 59, "isStatic": true, "name": "$init"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arg"}, "type": "param", "children": [{"attributes": {"text": "<p>An array of Elements which will be initialized as {@link q}. All items in the array which are not either a window object, a <span class=\"caps\">DOM</span> element node or a <span class=\"caps\">DOM</span> document node will be ignored.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>The class of the new collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper to initialize collections.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new initialized collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 209, "isStatic": true, "name": "define"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the class. If null, the class will not be attached to a namespace.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "config"}, "type": "param", "children": [{"attributes": {"text": "<p>Class definition structure. The configuration map has the following keys: <table> <thead> <tr><th>Name</th><th>Type</th><th>Description</th></tr> </thead> <tr><td>extend</td><td>Class</td><td>The super class the current class inherits from.</td></tr> <tr><td>construct</td><td>Function</td><td>The constructor of the class.</td></tr> <tr><td>statics</td><td>Map</td><td>Map of static values / functions of the class.</td></tr> <tr><td>members</td><td>Map</td><td>Map of instance members of the class.</td></tr> <tr><td>defer</td><td>Function</td><td>Function that is called at the end of processing the class declaration.</td></tr> </table> <strong>Important hint:</strong> Please do not initialize reference types (<code>Object</code> or <code>Array</code>) directly inside the <strong>members</strong> section. Only list and initialize it with <code>null</code>. Initialize your reference type inside the <code>construct</code>. Check out one of the samples below to get the idea.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Define a new class using the qooxdoo class system.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The defined class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "set", "isStatic": true, "sourceClass": "qx.module.Cookie", "name": "set"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "expires"}, "type": "param", "children": [{"attributes": {"text": "<p>Expires directive value in days starting from now, or <code>null</code> if the cookie should be deleted when the browser is closed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "path"}, "type": "param", "children": [{"attributes": {"text": "<p>Path value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "domain"}, "type": "param", "children": [{"attributes": {"text": "<p>Domain value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "secure"}, "type": "param", "children": [{"attributes": {"text": "<p>Secure flag.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the string value of a cookie.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "cookie.set", "targetClass": "qxWeb", "sourceMethod": "set", "sourceClass": "qx.module.Cookie"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "removeAll", "sourceMethod": "removeAll", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove all elements from the array</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.removeAll", "targetClass": "qxWeb", "sourceMethod": "removeAll", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>empty array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "$getEventNormalizationRegistry", "sourceMethod": "$getEventNormalizationRegistry", "line": 168, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all registered event normalizers</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$getEventNormalizationRegistry", "targetClass": "qxWeb", "sourceMethod": "$getEventNormalizationRegistry", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of event types/normalizer functions</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "fromArguments", "sourceMethod": "fromArguments", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>arguments object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "optional": true, "name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>position to start from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert an arguments object into an array.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.fromArguments", "targetClass": "qxWeb", "sourceMethod": "fromArguments", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a newly created array (copy) with the content of the arguments object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "startsWith", "sourceMethod": "startsWith", "line": 82, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fullstr"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to search in</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "substr"}, "type": "param", "children": [{"attributes": {"text": "<p>the substring to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the string starts with the given substring.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.startsWith", "targetClass": "qxWeb", "sourceMethod": "startsWith", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the string starts with the given substring</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "get", "sourceMethod": "get", "line": 50, "sourceClass": "qx.module.Environment"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key to check for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the value stored for the given key.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "env.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.Environment"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The value stored for the given key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Widget", "name": "initWidgets", "sourceMethod": "initWidgets", "line": 74, "sourceClass": "qx.ui.website.Widget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression or filter function to restrict the list of elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fetches elements with a data attribute named <code>data-qx-class</code>\ncontaining the class name of the desired widget and initializes them as\nwidgets.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "initWidgets", "sourceClass": "qx.ui.website.Widget"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "escapeHtml", "sourceMethod": "escapeHtml", "line": 1, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the String to escape</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Escapes the characters in a <code>String</code> using <span class=\"caps\">HTML</span> entities.\nSupports all known <span class=\"caps\">HTML</span> 4.0 entities, including funky accents.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.escapeHtml", "targetClass": "qxWeb", "sourceMethod": "escapeHtml", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a new escaped String</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isNode", "sourceMethod": "isNode", "line": 193, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isNode", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM node"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "remove", "sourceMethod": "remove", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>element to be removed from the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove an element from the array.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.remove", "targetClass": "qxWeb", "sourceMethod": "remove", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the removed element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "removeResponse", "sourceMethod": "removeResponse", "line": 69, "sourceClass": "qx.module.dev.FakeServer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "method"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTTP</span> method of the response</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">URL</span> of the response</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes a response that was configured with {@link #configure}</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "dev.fakeServer.removeResponse", "targetClass": "qxWeb", "sourceMethod": "removeResponse", "sourceClass": "qx.module.dev.FakeServer"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "addFilter", "sourceMethod": "addFilter", "line": 85, "sourceClass": "qx.module.dev.FakeServer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">URL</span> filter function. Will be called with the following arguments: <code>method</code>, <code>url</code>, <code>async</code>, <code>username</code>, <code>password</code>. Must return <code>true</code> if the request should not be faked.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a <span class=\"caps\">URL</span> filtering function to decide whether a request should be handled\nby the FakeServer or passed to the regular XMLHttp implementation.\nSee <a href=\"http://sinonjs.org/docs/#filtered-requests\">Sinon.JS: Filtered Requests</a>\nfor details.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "dev.fakeServer.addFilter", "targetClass": "qxWeb", "sourceMethod": "addFilter", "sourceClass": "qx.module.dev.FakeServer"}, "type": "attachStatic"}]}, {"attributes": {"line": 180, "sourceMethod": "forEachSession", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "forEachSession"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>A function which will be called for every item. The function will have two arguments, first the key and second the value of the stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper to access every stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.forEach", "targetClass": "qxWeb", "sourceMethod": "forEachSession", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "throttle", "sourceMethod": "throttle", "line": 1, "sourceClass": "qx.module.util.Function"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>the callback which should be executed in the given interval</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "interval"}, "type": "param", "children": [{"attributes": {"text": "<p>Interval in milliseconds</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>the keys are <code>leading</code> and <code>trailing</code> to control the executing of the callback precisely. Default values are <code>true</code> for both options.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a throttled version of the given callback. The execution of the callback\nis throttled which means it is only executed in the given interval.\nThis mechanism is very useful for event handling: only in specified intervals\nthe event should be handled (e.g. at resize of the browser window) to prevent flooding\nthe handler with a large amounts of events.\nAs default the <code>leading</code> and <code>trailing</code> calls are executed.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "func.throttle", "targetClass": "qxWeb", "sourceMethod": "throttle", "sourceClass": "qx.module.util.Function"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a wrapper function which <em>shields</em> the given callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "merge", "sourceMethod": "merge", "line": 88, "sourceClass": "qx.module.util.Object"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>target object to merge into</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>As many items as you want to merge.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Merges one or more objects into the &#8216;target&#8217; object.\n<strong>The objects are merged by overwriting existing keys.</strong></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "object.merge", "targetClass": "qxWeb", "sourceMethod": "merge", "sourceClass": "qx.module.util.Object"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the merged object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 58, "sourceMethod": "removeLocalItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "removeLocalItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes an item form the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.removeItem", "targetClass": "qxWeb", "sourceMethod": "removeLocalItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "getFakeServer", "sourceMethod": "getFakeServer", "line": 121, "sourceClass": "qx.module.dev.FakeServer"}, "type": "method", "children": [{"attributes": {"text": "<p>Creates and configures a FakeServer if necessary and returns it.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "dev.fakeServer.getFakeServer", "targetClass": "qxWeb", "sourceMethod": "getFakeServer", "sourceClass": "qx.module.dev.FakeServer"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>FakeServer object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 136, "sourceMethod": "removeSessionItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "removeSessionItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes an item form the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.removeItem", "targetClass": "qxWeb", "sourceMethod": "removeSessionItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "hyphenate", "sourceMethod": "hyphenate", "line": 46, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>camelcased string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a camelcased string to a hyphenated (separated by &#8217;-&#8217;) string.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.hyphenate", "targetClass": "qxWeb", "sourceMethod": "hyphenate", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>hyphenated string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 126, "sourceMethod": "getSessionItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getSessionItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier to get the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.getItem", "targetClass": "qxWeb", "sourceMethod": "getSessionItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "unique", "sourceMethod": "unique", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Incoming array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Recreates an array which is free of all duplicate elements from the original.\nThis method do not modifies the original array!\nKeep in mind that this methods deletes undefined indexes.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.unique", "targetClass": "qxWeb", "sourceMethod": "unique", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a copy with no duplicates or the original array if no duplicates were found.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "insertBefore", "sourceMethod": "insertBefore", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be inserted</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "obj2"}, "type": "param", "children": [{"attributes": {"text": "<p>insert obj1 before this object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element into the array before a given second element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.insertBefore", "targetClass": "qxWeb", "sourceMethod": "insertBefore", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The given array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "$registerEventNormalization", "sourceMethod": "$registerEventNormalization", "line": 122, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types to be normalized. Use an asterisk (<code>*</code>) to normalize all event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "normalizer"}, "type": "param", "children": [{"attributes": {"text": "<p>Normalizer function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a normalization function for the given event types. Listener\ncallbacks for these types will be called with the return value of the\nnormalization function instead of the regular event object.</p>\n\n<p>The normalizer will be called with two arguments: The original event\nobject and the element on which the event was triggered</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$registerEventNormalization", "targetClass": "qxWeb", "sourceMethod": "$registerEventNormalization", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "clone", "sourceMethod": "clone", "line": 1, "sourceClass": "qx.module.util.Object"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to copy</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "deep"}, "type": "param", "children": [{"attributes": {"text": "<p>If the clone should be a deep clone.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return a copy of an Object</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "object.clone", "targetClass": "qxWeb", "sourceMethod": "clone", "sourceClass": "qx.module.util.Object"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A copy of the object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "equalNodes", "sourceMethod": "equalNodes", "line": 340, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node1"}, "type": "param", "children": [{"attributes": {"text": "<p>first object to compare</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"name": "node2"}, "type": "param", "children": [{"attributes": {"text": "<p>second object to compare</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Determines if two <span class=\"caps\">DOM</span> nodes are equal as defined in the\n<a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isEqualNode\"><span class=\"caps\">DOM</span> Level 3 isEqualNode spec</a>.\nAlso works in legacy browsers without native <em>isEqualNode</em> support.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "equalNodes", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the nodes are equal"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "includeStylesheet", "sourceMethod": "includeStylesheet", "line": 236, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "uri"}, "type": "param", "children": [{"attributes": {"text": "<p>The stylesheet&#8217;s <span class=\"caps\">URI</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "doc"}, "type": "param", "children": [{"attributes": {"text": "<p>Document to modify</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Includes a Stylesheet file</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "includeStylesheet", "sourceClass": "qx.module.Css"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "getWindow", "sourceMethod": "getWindow", "line": 250, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to inspect</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the DOM2 <code>defaultView</code> (window) for the given node.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getWindow", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <code>defaultView</code> for the given node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"line": 62, "sourceMethod": "render", "isStatic": true, "sourceClass": "qx.module.Template", "name": "render"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "template"}, "type": "param", "children": [{"attributes": {"text": "<p>The String containing the template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "view"}, "type": "param", "children": [{"attributes": {"text": "<p>The object holding the data to render.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "partials"}, "type": "param", "children": [{"attributes": {"text": "<p>Object holding parts of a template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Original and only template method of mustache.js. For further\ndocumentation, please visit <a href=\"https://github.com/janl/mustache.js\">mustache.js</a>.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "template.render", "targetClass": "qxWeb", "sourceMethod": "render", "sourceClass": "qx.module.Template"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parsed template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "$registerEventHook", "isInternal": true, "sourceMethod": "$registerEventHook", "access": "internal", "line": 183, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "registerHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event registration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "unregisterHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event deregistration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers an event hook for the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$registerEventHook", "targetClass": "qxWeb", "sourceMethod": "$registerEventHook", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "endsWith", "sourceMethod": "endsWith", "line": 96, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fullstr"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to search in</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "substr"}, "type": "param", "children": [{"attributes": {"text": "<p>the substring to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the string ends with the given substring.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.endsWith", "targetClass": "qxWeb", "sourceMethod": "endsWith", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the string ends with the given substring</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isDocument", "sourceMethod": "isDocument", "line": 219, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check. If the value is a qxWeb collection, isDocument will check the first item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> document object</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isDocument", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM document"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 114, "sourceMethod": "setSessionItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "setSessionItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The data, which will be stored as <span class=\"caps\">JSON</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Store an item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.setItem", "targetClass": "qxWeb", "sourceMethod": "setSessionItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 146, "sourceMethod": "getSessionLength", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getSessionLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the amount of key-value pairs stored.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.getLength", "targetClass": "qxWeb", "sourceMethod": "getSessionLength", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The length of the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "get", "isStatic": true, "sourceClass": "qx.module.Cookie", "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the saved string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the string value of a cookie.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "cookie.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.Cookie"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns the saved string value if the cookie contains a value for the key, otherwise <code>null</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "script", "sourceMethod": "script", "line": 74, "sourceClass": "qx.module.Io"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a predefined script tag wrapper which can be used to load data\nfrom cross-domain origins.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "io.script", "targetClass": "qxWeb", "sourceMethod": "script", "sourceClass": "qx.module.Io"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The request object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.request.Script"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isTextNode", "sourceMethod": "isTextNode", "line": 261, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>the object to be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks whether the given object is a <span class=\"caps\">DOM</span> text node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isTextNode", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a textNode"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 102, "sourceMethod": "forEachLocal", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "forEachLocal"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>A function which will be called for every item. The function will have two arguments, first the key and second the value of the stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper to access every stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.forEach", "targetClass": "qxWeb", "sourceMethod": "forEachLocal", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "getValues", "sourceMethod": "getValues", "line": 1, "sourceClass": "qx.module.util.Object"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the values of a map as array</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "object.getValues", "targetClass": "qxWeb", "sourceMethod": "getValues", "sourceClass": "qx.module.util.Object"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>array of the values of the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "contains", "sourceMethod": "contains", "line": 1, "sourceClass": "qx.module.util.Object"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>Map to search for the value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the map contains the given value.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "object.contains", "targetClass": "qxWeb", "sourceMethod": "contains", "sourceClass": "qx.module.util.Object"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the value was found in the map.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 53, "sourceMethod": "update", "isStatic": true, "sourceClass": "qx.module.Placeholder", "name": "update"}, "type": "method", "children": [{"attributes": {"text": "<p>Queries for all input and textarea elements on the page and updates\ntheir placeholder.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "placeholder.update", "targetClass": "qxWeb", "sourceMethod": "update", "sourceClass": "qx.module.Placeholder"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "insertAfter", "sourceMethod": "insertAfter", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be inserted</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "obj2"}, "type": "param", "children": [{"attributes": {"text": "<p>insert obj1 after this object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element into the array after a given second element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.insertAfter", "targetClass": "qxWeb", "sourceMethod": "insertAfter", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The given array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "$getEventHookRegistry", "isInternal": true, "sourceMethod": "$getEventHookRegistry", "access": "internal", "line": 255, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all registered event hooks</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$getEventHookRegistry", "targetClass": "qxWeb", "sourceMethod": "$getEventHookRegistry", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of event types/registration hook functions</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "firstUp", "sourceMethod": "firstUp", "line": 1, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to upper case.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.firstUp", "targetClass": "qxWeb", "sourceMethod": "firstUp", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with an upper case first character</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "getDocument", "sourceMethod": "getDocument", "line": 289, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to get the document for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the owner document of the given node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getDocument", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The document of the given <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "remove", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the registered listener.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes a registered listener by the given id.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.remove", "targetClass": "qxWeb", "sourceMethod": "remove", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "camelCase", "sourceMethod": "camelCase", "line": 34, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>hyphenated string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a hyphenated string (separated by &#8217;-&#8217;) to camel case.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.camelCase", "targetClass": "qxWeb", "sourceMethod": "camelCase", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>camelcase string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "get", "sourceMethod": "get", "line": 1, "sourceClass": "qx.module.util.Type"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to get the class for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the internal class of the value. The following classes are possible:</p>\n\n<pre>\n<code>\"String\"</code>,\n<code>\"Array\"</code>,\n<code>\"Object\"</code>,\n<code>\"RegExp\"</code>,\n<code>\"Number\"</code>,\n<code>\"Boolean\"</code>,\n<code>\"Date\"</code>,\n<code>\"Function\"</code>,\n<code>\"Error\"</code>\n</pre>"}, "type": "desc"}, {"attributes": {"targetMethod": "type.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.util.Type"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The internal class of the value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 79, "sourceMethod": "getLocalKey", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getLocalKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index in the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the named key at the given index.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.getKey", "targetClass": "qxWeb", "sourceMethod": "getLocalKey", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The key stored at the given index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "jsonp", "sourceMethod": "jsonp", "line": 95, "sourceClass": "qx.module.Io"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "settings"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional settings map which may contain one of the following settings: * <code>callbackName</code>: The name of the callback which will be called by the loaded script. * <code>callbackParam</code>: The name of the callback expected by the server</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a predefined script tag wrapper which can be used to load data\nfrom cross-domain origins via <span class=\"caps\">JSONP</span>.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "io.jsonp", "targetClass": "qxWeb", "sourceMethod": "jsonp", "sourceClass": "qx.module.Io"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The request object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.request.Jsonp"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "restore", "sourceMethod": "restore", "line": 131, "sourceClass": "qx.module.dev.FakeServer"}, "type": "method", "children": [{"attributes": {"text": "<p>Stops the FakeServer and removes all configured responses and/or filters.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "dev.fakeServer.restore", "targetClass": "qxWeb", "sourceMethod": "restore", "sourceClass": "qx.module.dev.FakeServer"}, "type": "attachStatic"}]}, {"attributes": {"line": 80, "sourceMethod": "renderToNode", "isStatic": true, "sourceClass": "qx.module.Template", "name": "renderToNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "template"}, "type": "param", "children": [{"attributes": {"text": "<p>The String containing the template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "view"}, "type": "param", "children": [{"attributes": {"text": "<p>The object holding the data to render.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "partials"}, "type": "param", "children": [{"attributes": {"text": "<p>Object holding parts of a template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Combines {@link #render} and {@link #get}. Input is equal to {@link #render}\nand output is equal to {@link #get}. The advantage over {@link #get}\nis that you don&#8217;t need a <span class=\"caps\">HTML</span> template but can use a template\nstring and still get a collection. Keep in mind that templates\ncan only have one root element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "template.renderToNode", "targetClass": "qxWeb", "sourceMethod": "renderToNode", "sourceClass": "qx.module.Template"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing a single <span class=\"caps\">DOM</span> element with the parsed template data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "on", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "on"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "channel"}, "type": "param", "children": [{"attributes": {"text": "<p>The channel of the message.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>The type, used for checking if the executed path matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "handler"}, "type": "param", "children": [{"attributes": {"text": "<p>The handler to call if the route matches the executed path.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the handler.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a route handler for the given channel. The route is called\nif the {@link #emit} method finds a match.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.on", "targetClass": "qxWeb", "sourceMethod": "on", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The id of the route used to remove the route.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "onAny", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "onAny"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>The route, used for checking if the executed path matches</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "handler"}, "type": "param", "children": [{"attributes": {"text": "<p>The handler to call if the route matches the executed path</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the handler.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a handler for the &#8220;any&#8221; channel. The &#8220;any&#8221; channel is called\nbefore all other channels.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.onAny", "targetClass": "qxWeb", "sourceMethod": "onAny", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The id of the route used to remove the route.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "firstLow", "sourceMethod": "firstLow", "line": 1, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to lower case.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.firstLow", "targetClass": "qxWeb", "sourceMethod": "firstLow", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with a lower case first character</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "create", "sourceMethod": "create", "line": 149, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "html"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string or <span class=\"caps\">DOM</span> element(s)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "document", "optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context in which the elements should be created</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new collection from the given argument. This can either be an\n<span class=\"caps\">HTML</span> string, a single <span class=\"caps\">DOM</span> element or an array of elements</p>\n\n<p>When no <code>context</code> is given the global document is used to\ncreate new <span class=\"caps\">DOM</span> elements.</p>\n\n<strong>Note:</strong> When a complex HTML string is provided the <code>innerHTML</code>\nmechanism of the browser is used. Some browsers do filter out elements like <code>&lt;html&gt;</code>,\n<code>&lt;head&gt;</code> or <code>&lt;body&gt;</code>. The better approach is to create\na single element and the appending the child nodes."}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "create", "sourceClass": "qx.module.Manipulating"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection of elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isElement", "sourceMethod": "isElement", "line": 181, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isElement", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM element"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "escapeRegexpChars", "sourceMethod": "escapeRegexpChars", "line": 1, "sourceClass": "qx.module.util.String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string where to escape the chars.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Escapes all chars that have a special meaning in regular expressions.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.escapeRegexpChars", "targetClass": "qxWeb", "sourceMethod": "escapeRegexpChars", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with the escaped chars.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "configure", "sourceMethod": "configure", "line": 57, "sourceClass": "qx.module.dev.FakeServer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "responseData"}, "type": "param", "children": [{"attributes": {"text": "<p>An array of response description maps.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Configures a set of fake <span class=\"caps\">HTTP</span> responses. Each response is defined as a map\nthat must provide the following keys:\n<ul>\n  <li><code>method</code> <span class=\"caps\">HTTP</span> method to respond to, e.g. <code><span class=\"caps\">PUT</span></code></li>\n  <li><code>url</code> <span class=\"caps\">URL</span> used to match requests to fake responses. Can be\n  a RegExp or a String. <span class=\"caps\">REST</span>-style parameter placeholders in curly braces\n  will be replaced with wildcards, e.g. the string &#8221;/resource/{resourceId}&#8221;\n  is interpreted as the RegExp <code>/\\/resource\\/\\{.*?\\}/</code>\n  <li><code>response</code> This can be either:\n    <ul>\n      <li>a string: This will be the response body, status code will be 200</li>\n      <li>an array containing the status code, a map of response headers and\n        the response text, e.g. <code>[200, { &#8220;Content-Type&#8221;: &#8220;text/html&#8221; }, &#8220;OK&#8221;]</code>\n      </li>\n      <li>a function: This will be called with a FakeXMLHttpRequest object as\n      the only argument. Its <code>respond</code> method must be called to send a response.\n      See <a href=\"http://sinonjs.org/docs/#respond\">Sinon.JS: Respond</a> for details.\n      </li>\n    </ul>\n  </li>\n</ul></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "dev.fakeServer.configure", "targetClass": "qxWeb", "sourceMethod": "configure", "sourceClass": "qx.module.dev.FakeServer"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "max", "sourceMethod": "max", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Array to process.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the highest value in the given array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.max", "targetClass": "qxWeb", "sourceMethod": "max", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The highest of all values or undefined if array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "undefined"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "getNodeName", "sourceMethod": "getNodeName", "line": 300, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> Node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the <span class=\"caps\">DOM</span> node&#8217;s name as a lowercase string</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNodeName", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>node name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "getNodeText", "sourceMethod": "getNodeText", "line": 314, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>the node from where the search should start. If the node has subnodes the text contents are recursively retrieved and joined</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the text content of a node where the node type may be one of\nNODE_ELEMENT, NODE_ATTRIBUTE, NODE_TEXT, NODE_CDATA</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNodeText", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the joined text content of the given node or null if not appropriate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "cast", "sourceMethod": "cast", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>any array-like object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "constructor"}, "type": "param", "children": [{"attributes": {"text": "<p>constructor of the new instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "optional": true, "name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>position to start from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts an array like object to any other array like\nobject.</p>\n\n<p>Attention: The returned array may be same\ninstance as the incoming one if the constructor is identical!</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.cast", "targetClass": "qxWeb", "sourceMethod": "cast", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the converted array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "resource", "sourceMethod": "resource", "line": 38, "sourceClass": "qx.module.Rest"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "description"}, "type": "param", "children": [{"attributes": {"text": "<p>Each key of the map is interpreted as <code>action</code> name. The value associated to the key must be a map with the properties <code>method</code> and <code>url</code>. <code>check</code> is optional. Also see {@link qx.bom.rest.Resource#map}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}, {"attributes": {"targetMethod": "rest.resource", "targetClass": "qxWeb", "sourceMethod": "resource", "sourceClass": "qx.module.Rest"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The resource object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.rest.Resource"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isDocumentFragment", "sourceMethod": "isDocumentFragment", "line": 235, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check. If the value is a qxWeb collection, isDocumentFragment will check the first item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> document fragment object</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isDocumentFragment", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM document fragment"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "add", "sourceMethod": "add", "line": 62, "sourceClass": "qx.module.Environment"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key to store the value for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to store.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a new environment setting which can be queried via {@link #get}.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "env.add", "targetClass": "qxWeb", "sourceMethod": "add", "sourceClass": "qx.module.Environment"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "min", "sourceMethod": "min", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Array to process.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the lowest value in the given array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.min", "targetClass": "qxWeb", "sourceMethod": "min", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The lowest of all values or undefined if array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "undefined"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isWindow", "sourceMethod": "isWindow", "line": 274, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>the object to be tested. If the value is a qxWeb collection, isDocument will check the first item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the given object is a browser window object.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isWindow", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a window object"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "emit", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "emit"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "channel"}, "type": "param", "children": [{"attributes": {"text": "<p>The channel of the message.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "path"}, "type": "param", "children": [{"attributes": {"text": "<p>The path to execute</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>The given parameters that should be propagated</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "customData"}, "type": "param", "children": [{"attributes": {"text": "<p>The given custom data that should be propagated</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sends a message on the given channel and informs all matching route handlers.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.emit", "targetClass": "qxWeb", "sourceMethod": "emit", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "invert", "sourceMethod": "invert", "line": 1, "sourceClass": "qx.module.util.Object"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>Map to invert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inverts a map by exchanging the keys with the values.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "object.invert", "targetClass": "qxWeb", "sourceMethod": "invert", "sourceClass": "qx.module.util.Object"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>inverted Map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "ready", "sourceMethod": "ready", "line": 58, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the given function once the document is ready.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "ready", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 88, "sourceMethod": "clearLocal", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "clearLocal"}, "type": "method", "children": [{"attributes": {"text": "<p>Deletes every stored item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.clear", "targetClass": "qxWeb", "sourceMethod": "clearLocal", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 1, "sourceMethod": "del", "isStatic": true, "sourceClass": "qx.module.Cookie", "name": "del"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "path"}, "type": "param", "children": [{"attributes": {"text": "<p>Path value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "domain"}, "type": "param", "children": [{"attributes": {"text": "<p>Domain value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Deletes the string value of a cookie.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "cookie.del", "targetClass": "qxWeb", "sourceMethod": "del", "sourceClass": "qx.module.Cookie"}, "type": "attachStatic"}]}, {"attributes": {"line": 157, "sourceMethod": "getSessionKey", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getSessionKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index in the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the named key at the given index.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.getKey", "targetClass": "qxWeb", "sourceMethod": "getSessionKey", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The key stored at the given index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 166, "sourceMethod": "clearSession", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "clearSession"}, "type": "method", "children": [{"attributes": {"text": "<p>Deletes every stored item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.clear", "targetClass": "qxWeb", "sourceMethod": "clearSession", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 48, "sourceMethod": "getLocalItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getLocalItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier to get the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.getItem", "targetClass": "qxWeb", "sourceMethod": "getLocalItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "$unregisterEventNormalization", "sourceMethod": "$unregisterEventNormalization", "line": 147, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "normalizer"}, "type": "param", "children": [{"attributes": {"text": "<p>Normalizer function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters a normalization function from the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$unregisterEventNormalization", "targetClass": "qxWeb", "sourceMethod": "$unregisterEventNormalization", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "removeFilter", "sourceMethod": "removeFilter", "line": 96, "sourceClass": "qx.module.dev.FakeServer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>filter function to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove a filter that was added with {@link #addFilter}</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "dev.fakeServer.removeFilter", "targetClass": "qxWeb", "sourceMethod": "removeFilter", "sourceClass": "qx.module.dev.FakeServer"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isBlockNode", "sourceMethod": "isBlockNode", "line": 325, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>the node to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given node is a block node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isBlockNode", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the node is a block node"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "equals", "sourceMethod": "equals", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr1"}, "type": "param", "children": [{"attributes": {"text": "<p>first array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "arr2"}, "type": "param", "children": [{"attributes": {"text": "<p>second array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the two arrays have the same content. Checks only the\nequality of the arrays&#8217; content.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.equals", "targetClass": "qxWeb", "sourceMethod": "equals", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the two arrays are equal</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "respondWith", "sourceMethod": "respondWith", "line": 110, "sourceClass": "qx.module.dev.FakeServer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "method"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTTP</span> method to respond to, e.g. &#8220;GET&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "urlRegExp"}, "type": "param", "children": [{"attributes": {"text": "<p>Request <span class=\"caps\">URL</span> must match match this expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "response"}, "type": "param", "children": [{"attributes": {"text": "<p>Response to send. See <a href=\"http://sinonjs.org/docs/#fakeServer\">Sinon.JS: Fake Server</a> for details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Defines a fake <span class=\"caps\">XHR</span> response to a matching request.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "dev.fakeServer.respondWith", "targetClass": "qxWeb", "sourceMethod": "respondWith", "sourceClass": "qx.module.dev.FakeServer"}, "type": "attachStatic"}]}, {"attributes": {"line": 54, "sourceMethod": "addSizeClasses", "isStatic": true, "sourceClass": "qx.module.MatchMedia", "name": "addSizeClasses"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds screen size classes (e.g. small-only or medium-up) by pre-defined media queries using em.\nThe range goes from small to medium, large and xlarge up to xxlarge:</p>\n\n<p>small: 0em &#8211; 40em\nmedium: 40.063em &#8211; 64em\nlarge: 64.063em &#8211; 90em\nxlarge: 90.063em &#8211; 120em\nxxlarge: > 120.063em</p>\n\n<p>The suffix of the class name indicates either that the current screen\nis larger than this size (<strong>-up) or in that range (</strong>-only).</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "addSizeClasses", "sourceClass": "qx.module.MatchMedia"}, "type": "attachStatic"}]}, {"attributes": {"line": 36, "sourceMethod": "setLocalItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "setLocalItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The data, which will be stored as <span class=\"caps\">JSON</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Store an item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.setItem", "targetClass": "qxWeb", "sourceMethod": "setLocalItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "range", "sourceMethod": "range", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "start"}, "type": "param", "children": [{"attributes": {"text": "<p>start of the new array, defaults to 0</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "stop"}, "type": "param", "children": [{"attributes": {"text": "<p>stop of the new array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "step"}, "type": "param", "children": [{"attributes": {"text": "<p>increment / decrement &#8211; depends whether you use positive or negative values</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a new array with integers from start to stop incremented or decremented by step.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.range", "targetClass": "qxWeb", "sourceMethod": "range", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a new array with integers</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "exclude", "sourceMethod": "exclude", "line": 1, "sourceClass": "qx.module.util.Array"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr1"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "arr2"}, "type": "param", "children": [{"attributes": {"text": "<p>the elements of this array will be excluded from the other one</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Modifies the first array as it removes all elements\nwhich are listed in the second array as well.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.exclude", "targetClass": "qxWeb", "sourceMethod": "exclude", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The modified array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Utilities", "name": "debounce", "sourceMethod": "debounce", "line": 1, "sourceClass": "qx.module.util.Function"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>the callback which should be executed after the given delay if the wrapper method is <strong>not</strong> called during this delay.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "delay"}, "type": "param", "children": [{"attributes": {"text": "<p>Delay in milliseconds</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "immediate"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to run the callback at the beginning and then debounce, default is <code>false</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a debounced version of the given callback. The execution of the callback\nis delayed by the given delay and after no events were triggered anymore.\nThis mechanism is very useful for event handling: only after a specified delay\nthe event should be handled (e.g. at keyboard input by the user) to prevent flooding\nthe handler with a large amounts of events.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "func.debounce", "targetClass": "qxWeb", "sourceMethod": "debounce", "sourceClass": "qx.module.util.Function"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a wrapper function which <em>shields</em> the given callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"line": 68, "sourceMethod": "getLocalLength", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getLocalLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the amount of key-value pairs stored.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.getLength", "targetClass": "qxWeb", "sourceMethod": "getLocalLength", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The length of the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 46, "sourceMethod": "get", "isStatic": true, "sourceClass": "qx.module.Template", "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the <span class=\"caps\">HTML</span> template in the <span class=\"caps\">DOM</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "view"}, "type": "param", "children": [{"attributes": {"text": "<p>The object holding the data to render.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "partials"}, "type": "param", "children": [{"attributes": {"text": "<p>Object holding parts of a template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method which provides direct access to templates stored as <span class=\"caps\">HTML</span> in\nthe <span class=\"caps\">DOM</span>. The <span class=\"caps\">DOM</span> node with the given ID will be treated as a template,\nparsed and a new <span class=\"caps\">DOM</span> element will be returned containing the parsed data.\nKeep in mind that templates can only have one root element.\nAdditionally, you should not put the template into a regular, hidden\n<span class=\"caps\">DOM</span> element because the template may not be valid <span class=\"caps\">HTML</span> due to the containing\nmustache tags. We suggest to put it into a script tag with the type\n<code>text/template</code>.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "template.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.Template"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing a single <span class=\"caps\">DOM</span> element with the parsed template data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 34, "sourceMethod": "matchMedia", "isStatic": true, "sourceClass": "qx.module.MatchMedia", "name": "matchMedia"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "query"}, "type": "param", "children": [{"attributes": {"text": "<p>the media query to evaluate</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Evaluates the specified mediaquery list</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The media query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.MediaQuery"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "matchMedia", "targetClass": "qxWeb", "sourceMethod": "matchMedia", "sourceClass": "qx.module.MatchMedia"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "IO", "name": "xhr", "sourceMethod": "xhr", "line": 50, "sourceClass": "qx.module.Io"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "settings"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional settings map which may contain one of the following settings: <ul> <li><code>method</code> The method of the request. Default: <code><span class=\"caps\">GET</span></code></li> <li><code>async</code> flag to mark the request as asynchronous. Default: <code>true</code></li> <li><code>header</code> A map of request headers.</li> </ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a configured XMLHttpRequest object. Using the send method will\nfinally send the request.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "io.xhr", "targetClass": "qxWeb", "sourceMethod": "xhr", "sourceClass": "qx.module.Io"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The request object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.request.Xhr"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "$unregisterEventHook", "isInternal": true, "sourceMethod": "$unregisterEventHook", "access": "internal", "line": 223, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "registerHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event registration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "unregisterHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event deregistration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters a hook from the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$unregisterEventHooks", "targetClass": "qxWeb", "sourceMethod": "$unregisterEventHook", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"isStatic": true, "group": "Core", "name": "isNodeName", "sourceMethod": "isNodeName", "line": 206, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>the node to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"name": "nodeName"}, "type": "param", "children": [{"attributes": {"text": "<p>the node name to check for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the node has the given node name</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isNodeName", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the node has the given name"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "type": "Array", "name": "__init", "value": "[]"}, "type": "constant"}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 238, "isCtor": true, "overriddenFrom": "qx.type.BaseArray", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Valid selector (CSS3 + extensions), window object, <span class=\"caps\">DOM</span> element/document or Array of <span class=\"caps\">DOM</span> Elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Only the children of this element are considered.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Primary usage:\nAccepts a selector string and returns a collection of found items. The optional context\nelement can be used to reduce the amount of found elements to children of the\ncontext element. If the context object is a collection, its first item is used.</p>\n\n<p>Secondary usage:\nCreates a collection from an existing <span class=\"caps\">DOM</span> element, document node or window object\n(or an Array containing any such objects)</p>\n\n<a href=\"http://sizzlejs.com/\" target=\"_blank\">Sizzle</a> is used as selector engine.\nCheck out the <a href=\"https://github.com/jquery/sizzle/wiki/Sizzle-Home\" target=\"_blank\">documentation</a>\nfor more details."}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A collection of <span class=\"caps\">DOM</span> elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 460, "name": "_forEachElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function. Will be called with three arguments: The element, the element&#8217;s index within the collection and the collection itself.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "ctx"}, "type": "param", "children": [{"attributes": {"text": "<p>The context for the callback function (default: The collection)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls a function for each <span class=\"caps\">DOM</span> element  or document fragment in the\ncollection. This is used for <span class=\"caps\">DOM</span> manipulations which can&#8217;t be\napplied to document nodes or window objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 480, "name": "_forEachElementWrapped"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function. Will be called with three arguments: The element wrappend in a collection, the element&#8217;s index within the collection and the collection itself.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "ctx"}, "type": "param", "children": [{"attributes": {"text": "<p>The context for the callback function (default: The collection)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls a function for each <span class=\"caps\">DOM</span> element node in the collection. Each node is wrapped\nin a collection before the function is called.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 345, "overriddenFrom": "qx.type.BaseArray", "name": "concat"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>As many items as you want to add.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a copy of the collection including the given elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing all items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 408, "name": "debug"}, "type": "method", "children": [{"attributes": {"text": "<p>Calls the browser&#8217;s native debugger to easily allow debugging within\nchained calls.</p>\n\n<p>Unlike the <a href=\"#.logThis\">logThis</a> method this implementation blocks the further processing.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 275, "overriddenFrom": "qx.type.BaseArray", "name": "filter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a new collection containing only those elements that passed the\ngiven filter. This can be either a selector expression or a filter\nfunction.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the elements that passed the filter</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 365, "overriddenFrom": "qx.type.BaseArray", "name": "indexOf"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p>Element or collection of elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"name": "fromIndex"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to start the search at</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the index of the given element within the current\ncollection or -1 if the element is not in the collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The element&#8217;s index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 426, "name": "logThis"}, "type": "method", "children": [{"attributes": {"text": "<p>Logs information about the current collection, its <span class=\"caps\">DOM</span> elements and the\nlength. Very useful during development to easily check the current state of\nyour collection and avoid common pitfalls like an empty collection.</p>\n\n<p>Unlike the <a href=\"#.debug\">debug</a> method this implementation works non-blocking.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 334, "overriddenFrom": "qx.type.BaseArray", "name": "map"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Function which produces the new element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "thisarg"}, "type": "param", "children": [{"attributes": {"text": "<p>Context of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a new collection containing the modified elements. For more details, check out the\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map\" target=\"_blank\"><span class=\"caps\">MDN</span> documentation</a>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the elements that passed the filter</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 301, "overriddenFrom": "qx.type.BaseArray", "name": "slice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "begin"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to begin.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "end"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to end.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a copy of the collection within the given range.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing a slice of the original collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 321, "overriddenFrom": "qx.type.BaseArray", "name": "splice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to begin.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "howMany"}, "type": "param", "children": [{"attributes": {"text": "<p>the amount of items to remove.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>As many items as you want to add.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given number of items and returns the removed items as a new collection.\nThis method can also add items. Take a look at the\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice\" target=\"_blank\">documentation of <span class=\"caps\">MDN</span></a> for more details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing the removed items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 288, "name": "unique"}, "type": "method", "children": [{"attributes": {"text": "<p>Recreates a collection which is free of all duplicate elements from the original.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a copy with no duplicates</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "rating", "sourceMethod": "rating", "line": 98, "sourceClass": "qx.ui.website.Rating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "0", "optional": true, "name": "initValue"}, "type": "param", "children": [{"attributes": {"text": "<p>The initial value of the rating.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"\u2605\"", "optional": true, "name": "symbol"}, "type": "param", "children": [{"attributes": {"text": "<p>The symbol which should be used for each rating item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "5", "optional": true, "name": "length"}, "type": "param", "children": [{"attributes": {"text": "<p>The length of the rating widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\nrating widgets. Therefore, an initialization process needs to be done which\ncan be configured with some parameter.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new rating collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Rating"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "rating", "sourceClass": "qx.ui.website.Rating"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getOffsetParent", "sourceMethod": "getOffsetParent", "line": 898, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {"text": "<p>Gets a new collection containing the offset parent of each item in the\ncurrent set.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getOffsetParent", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing offset parents</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "show", "sourceMethod": "show", "line": 298, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {"text": "<p>Shows any elements with &#8220;display: none&#8221; in the collection. If an element\nwas hidden by using the {@link #hide} method, its previous\n&#8220;display&#8221; style value will be re-applied. Otherwise, the\ndefault &#8220;display&#8221; value for the element type will be applied.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "show", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 150, "sourceMethod": "setTransformStyle", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformStyle"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Either <code>flat</code> or <code>preserve-3d</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the transform-style property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-style-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformStyle", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 139, "sourceMethod": "updatePlaceholder", "isStatic": false, "sourceClass": "qx.module.Placeholder", "name": "updatePlaceholder"}, "type": "method", "children": [{"attributes": {"text": "<p>Updates the placeholders for input&#8217;s and textarea&#8217;s in the collection.\nThis includes positioning, styles and <span class=\"caps\">DOM</span> positioning.\nIn case the browser supports native placeholders, this methods simply\ndoes nothing.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "updatePlaceholder", "sourceClass": "qx.module.Placeholder"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "focus", "sourceMethod": "focus", "line": 553, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {"text": "<p>Focuses the first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "focus", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setStyle", "sourceMethod": "setStyle", "line": 397, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the style property to modify</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Modifies the given style property on all elements in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setStyle", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getChildren", "sourceMethod": "getChildren", "line": 444, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all of the unique immediate children of\neach of the matched set of elements.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getChildren", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the child elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 179, "sourceMethod": "unblock", "isStatic": false, "sourceClass": "qx.module.Blocker", "name": "unblock"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes the blockers from all items in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "unblock", "sourceClass": "qx.module.Blocker"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 268, "sourceMethod": "getTransformBackfaceVisibility", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformBackfaceVisibility"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the backface-visibility property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\">http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformBackfaceVisibility", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if the backface is visible."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "find", "sourceMethod": "find", "line": 603, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression to match the child elements against</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Searches the child elements of each item in the collection and returns\na new collection containing the children that match the provided selector</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "find", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the matching child elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "before", "sourceMethod": "before", "line": 373, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "content"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string(s), <span class=\"caps\">DOM</span> element(s) or collection to insert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts content before each element in the collection. This can either\nbe an <span class=\"caps\">HTML</span> string, an array of <span class=\"caps\">HTML</span> strings, a single <span class=\"caps\">DOM</span> element or an\narray of elements.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "before", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 201, "sourceMethod": "pause", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "pause"}, "type": "method", "children": [{"attributes": {"text": "<p>Manipulates the play state of the animation.\nThis can be used to pause an animation when running.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "pause", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getPrevUntil", "sourceMethod": "getPrevUntil", "line": 837, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the preceding sibling elements of each\nitem in the current set up to but not including any element that matches\nthe given selector.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPrevUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing preceding siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "allOff", "sourceMethod": "allOff", "line": 435, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type. All listeners will be removed if this is undefined.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all event listeners (or all listeners for a given type) from the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "allOff", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getClosest", "sourceMethod": "getClosest", "line": 571, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set containing the closest matching ancestor for each item in\nthe collection.\nIf the item itself matches, it is added to the new set. Otherwise, the\nitem&#8217;s parent chain will be traversed until a match is found.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getClosest", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the closest matching ancestors</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getContentHeight", "sourceMethod": "getContentHeight", "line": 273, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the content height of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the content height of the first element in the collection.\nThis is the maximum height the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getContentHeight", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Computed content height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getStyles", "sourceMethod": "getStyles", "line": 450, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of style property names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the values of multiple style properties for each item in the\ncollection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getStyles", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of style property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "replaceClass", "sourceMethod": "replaceClass", "line": 590, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "oldName"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "newName"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Replaces a class name on each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "replaceClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 104, "sourceMethod": "getTextSelectionStart", "isStatic": false, "sourceClass": "qx.module.TextSelection", "name": "getTextSelectionStart"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the start of the text selection of the first element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTextSelectionStart", "sourceClass": "qx.module.TextSelection"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "__getElementArray", "isInternal": true, "sourceMethod": "__getElementArray", "access": "internal", "line": 119, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arg"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns an array from a selector expression or a single element</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__getElementArray", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Array of elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getAncestors", "sourceMethod": "getAncestors", "line": 538, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all ancestors of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAncestors", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "has", "sourceMethod": "has", "line": 687, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing only the elements that have descendants\nmatching the given selector</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "has", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a new collection containing only elements with matching descendants</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "addClass", "sourceMethod": "addClass", "line": 466, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a class name to each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "addClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 170, "sourceMethod": "clearTextSelection", "isStatic": false, "sourceClass": "qx.module.TextSelection", "name": "clearTextSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Clears the text selection of all elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "clearTextSelection", "sourceClass": "qx.module.TextSelection"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "hover", "sourceMethod": "hover", "line": 602, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callbackIn"}, "type": "param", "children": [{"attributes": {"text": "<p>callback when hovering over</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "callbackOut"}, "type": "param", "children": [{"attributes": {"text": "<p>callback when hovering out</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Bind one or two callbacks to the collection.\nIf only the first callback is defined the collection\ndoes react on &#8216;pointerover&#8217; only.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hover", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 283, "sourceMethod": "fadeOut", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "fadeOut"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fades out all elements in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "fadeOut", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "removeClass", "sourceMethod": "removeClass", "line": 496, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>The class name to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes a class name from each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 218, "sourceMethod": "stop", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "stop"}, "type": "method", "children": [{"attributes": {"text": "<p>Stops a running animation.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "stop", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getScrollLeft", "sourceMethod": "getScrollLeft", "line": 437, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the left scroll position of the first element in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getScrollLeft", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Current left scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 219, "sourceMethod": "setTransformPerspectiveOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformPerspectiveOrigin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> position values like <code>50% 50%</code> or <code>left top</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the perspective-origin property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformPerspectiveOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "forEach", "sourceMethod": "forEach", "line": 470, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fn"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function which is called with two parameters <ul> <li>current item &#8211; <span class=\"caps\">DOM</span> node</li> <li>current index &#8211; Number</li> </ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "ctx"}, "type": "param", "children": [{"attributes": {"text": "<p>Context object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the provided callback function once for each item in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "forEach", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "not", "sourceMethod": "not", "line": 877, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove elements from the collection that do not pass the given filter.\nThis can be either a selector expression or a filter function</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "not", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Reduced collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getNextUntil", "sourceMethod": "getNextUntil", "line": 777, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the following sibling elements of each\nitem in the current set up to but not including any element that matches\nthe given selector.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNextUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing following siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setAttributes", "sourceMethod": "setAttributes", "line": 111, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "attributes"}, "type": "param", "children": [{"attributes": {"text": "<p>A map of attribute name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets multiple attributes for each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setAttributes", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 172, "sourceMethod": "animateReverse", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "animateReverse"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "desc"}, "type": "param", "children": [{"attributes": {"text": "<p>The animation&#8220;s description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds of the animation, which will override the duration given in the description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Starts an animation in reversed order. For further details, take a look at\nthe {@link #animate} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "animateReverse", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 88, "sourceMethod": "rotate", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "rotate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to rotate e.g. <code>&#8220;90deg&#8221;</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Rotates by the given value. For further details, take\na look at the {@link #transform} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "rotate", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "button", "sourceMethod": "button", "line": 63, "sourceClass": "qx.ui.website.Button"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "label"}, "type": "param", "children": [{"attributes": {"text": "<p>The label of the button.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "icon"}, "type": "param", "children": [{"attributes": {"text": "<p>The url for the button icon.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method for the button widget which converts a standard\ncollection into a collection of buttons.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A collection of buttons.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Button"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "button", "sourceClass": "qx.ui.website.Button"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "isChildOf", "sourceMethod": "isChildOf", "line": 510, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "parent"}, "type": "param", "children": [{"attributes": {"text": "<p>Collection or selector of the parent collection to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if any element of the current collection is child of any element of a given\nparent collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isChildOf", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if at least one element of the current collection is child of the parent collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "remove", "sourceMethod": "remove", "line": 337, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes each element in the current collection from the <span class=\"caps\">DOM</span></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "remove", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 67, "sourceMethod": "getAllData", "isStatic": false, "sourceClass": "qx.module.Dataset", "name": "getAllData"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a map containing all the <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attributes of the specified element</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAllData", "sourceClass": "qx.module.Dataset"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The map containing the &#8220;data-*&#8221; attributes</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 201, "sourceMethod": "getTransformPerspective", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformPerspective"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the perspective property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformPerspective", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, e.g. <code>500</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getAttributes", "sourceMethod": "getAttributes", "line": 126, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of attribute names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the values of multiple attributes for the first item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAttributes", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of attribute name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getPrev", "sourceMethod": "getPrev", "line": 803, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the previous sibling element of each item in\nthe current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPrev", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing previous siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "addClasses", "sourceMethod": "addClasses", "line": 481, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of class names to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds multiple class names to each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "addClasses", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getContentWidth", "sourceMethod": "getContentWidth", "line": 285, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the content width of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the content width of the first element in the collection.\nThis is the maximum width the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getContentWidth", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Computed content width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getClass", "sourceMethod": "getClass", "line": 541, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the class name of the first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Class name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 92, "sourceMethod": "removeData", "isStatic": false, "sourceClass": "qx.module.Dataset", "name": "removeData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the attribute</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove an <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attribute on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeData", "sourceClass": "qx.module.Dataset"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setHtml", "sourceMethod": "setHtml", "line": 48, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "html"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the <span class=\"caps\">HTML</span> content of each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setHtml", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 201, "sourceMethod": "getBlocker", "isStatic": false, "sourceClass": "qx.module.Blocker", "name": "getBlocker"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all blocker elements as collection.</p>\n\n<strong>Note:</strong> This will only return elements if\nthe <code>block</code> method was called at least once,\nsince the blocker elements are created on-demand."}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getBlocker", "sourceClass": "qx.module.Blocker"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>collection with all blocker elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 157, "sourceMethod": "animate", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "animate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "desc"}, "type": "param", "children": [{"attributes": {"text": "<p>The animation&#8220;s description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds of the animation, which will override the duration given in the description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Starts the animation with the given description.</p>\n\n<p><strong>duration</strong> is the time in milliseconds one animation cycle should take.</p>\n\n<p><strong>keep</strong> is the key frame to apply at the end of the animation. (optional)</p>\n\n<p><strong>keyFrames</strong> is a map of separate frames. Each frame is defined by a\n  number which is the percentage value of time in the animation. The value\n  is a map itself which holds css properties or transforms\n  (Transforms only for <span class=\"caps\">CSS</span> Animations).</p>\n\n<p><strong>origin</strong> maps to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin\">transform origin</a>\n(Only for <span class=\"caps\">CSS</span> animations).</p>\n\n<p><strong>repeat</strong> is the amount of time the animation should be run in\n  sequence. You can also use &#8220;infinite&#8221;.</p>\n\n<p><strong>timing</strong> takes one of these predefined values:\n  <code>ease</code> | <code>linear</code> | <code>ease-in</code>\n  | <code>ease-out</code> | <code>ease-in-out</code> |\n  <code>cubic-bezier(&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;)</code>\n  (cubic-bezier only available for <span class=\"caps\">CSS</span> animations)</p>\n\n<p><strong>alternate</strong> defines if every other animation should be run in reverse order.</p>\n\n<p><strong>delay</strong> is the time in milliseconds the animation should wait before start.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "animate", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getValue", "sourceMethod": "getValue", "line": 252, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the currently configured value for the first item in the collection.\nWorks with simple input fields as well as with select boxes or option\nelements. Returns an array for select boxes with multi selection. In all\nother cases, a string is returned.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getValue", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>String value or Array of string values (for multiselect)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setScrollTop", "sourceMethod": "setScrollTop", "line": 519, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Top scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional: Duration in ms for animated scrolling</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the elements of the collection to the given coordinate.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setScrollTop", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "append", "sourceMethod": "append", "line": 190, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "html"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string or <span class=\"caps\">DOM</span> element(s) to append</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Appends content to each element in the current set. Accepts an <span class=\"caps\">HTML</span> string,\na single <span class=\"caps\">DOM</span> element or an array of elements</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "append", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getContents", "sourceMethod": "getContents", "line": 619, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {"text": "<p>Gets a new set of elements containing the child nodes of each item in the\ncurrent set.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getContents", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the child nodes</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 75, "sourceMethod": "scale", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "scale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to scale.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scales by the given value. For further details, take\na look at the {@link #transform} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "scale", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "hide", "sourceMethod": "hide", "line": 328, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {"text": "<p>Hides all elements in the collection by setting their &#8220;display&#8221;\nstyle to &#8220;none&#8221;. The previous value is stored so it can be re-applied\nwhen {@link #show} is called.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hide", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "removeProperties", "sourceMethod": "removeProperties", "line": 204, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>An array of property names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes multiple properties for each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeProperties", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "_getContentHeight", "sourceMethod": "_getContentHeight", "access": "protected", "line": 111, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the content height of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p><span class=\"caps\">INTERNAL</span></p>\n\n<p>Returns the content height of the first element in the collection.\nThis is the maximum height the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "_getContentHeight", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Computed content height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 252, "sourceMethod": "setTransformBackfaceVisibility", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformBackfaceVisibility"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<code>true</code> if the backface should be visible."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the backface-visibility property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\">http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformBackfaceVisibility", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "blur", "sourceMethod": "blur", "line": 570, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {"text": "<p>Blurs each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "blur", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "widget", "sourceMethod": "widget", "line": 46, "sourceClass": "qx.ui.website.Widget"}, "type": "method", "children": [{"attributes": {"text": "<p>Factory method for the widget which converts a standard\ncollection into a collection of widgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Widget"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "widget", "sourceClass": "qx.ui.website.Widget"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setValue", "sourceMethod": "setValue", "line": 275, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies the given value to each element in the collection.\nNormally the value is given as a string/number value and applied to the\nfield content (textfield, textarea) or used to detect whether the field\nis checked (checkbox, radiobutton).\nSupports array values for selectboxes (multiple selection) and checkboxes\nor radiobuttons (for convenience).</p>\n\n<p>Please note: To modify the value attribute of a checkbox or radiobutton\nuse {@link #setAttribute} instead and manipulate the <code>checked</code> attribute.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setValue", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getSiblings", "sourceMethod": "getSiblings", "line": 863, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all sibling elements of the items in the\ncurrent set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getSiblings", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing sibling elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "toggleClasses", "sourceMethod": "toggleClasses", "line": 574, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>Class names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Toggles the given list of class names on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "toggleClasses", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "add", "sourceMethod": "add", "line": 419, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to add to the collection. If a collection is given, only the first element will be added</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an element to the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "add", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "removeProperty", "sourceMethod": "removeProperty", "line": 235, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Property name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Deletes a property from each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeProperty", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 235, "sourceMethod": "isPlaying", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "isPlaying"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns whether an animation is running or not.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isPlaying", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if an animation is running."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "onMatchTarget", "sourceMethod": "onMatchTarget", "line": 628, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "eventType"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event to watch out for (attached to the document object)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>function to call if the selector matches. The callback will get the target as qxWeb collection and the event as arguments</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>optional context object to call the callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a listener for the given type and checks if the target fulfills the selector check.\nIf the check is successful the callback is executed with the target and event as arguments.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "onMatchTarget", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "on", "sourceMethod": "on", "line": 277, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event to listen for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "useCapture"}, "type": "param", "children": [{"attributes": {"text": "<p>Attach the listener to the capturing phase if true</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a listener for the given event type on each item in the\ncollection. This can be either native or custom events.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "on", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 97, "sourceMethod": "mediaQueryToClass", "isStatic": false, "sourceClass": "qx.module.MatchMedia", "name": "mediaQueryToClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "queryString"}, "type": "param", "children": [{"attributes": {"text": "<p>the media query to evaluate</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "className"}, "type": "param", "children": [{"attributes": {"text": "<p>css class name that gets bind to an element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listens for media query updates and applies/removes the css class.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "mediaQueryToClass", "sourceClass": "qx.module.MatchMedia"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Self instance for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "name": "__isInput", "sourceMethod": "__isInput", "access": "private", "line": 32, "sourceClass": "qx.module.TextSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p>The node to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given <span class=\"caps\">DOM</span> node is a text input field or textarea</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the given node is an input field"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__isInput", "sourceClass": "qx.module.TextSelection"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "accordion", "sourceMethod": "accordion", "line": 99, "sourceClass": "qx.ui.website.Accordion"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "preselected"}, "type": "param", "children": [{"attributes": {"text": "<p>The (zero-based) index of the panel that should initially be opened</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\naccordion widgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new Accordion collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Accordion"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "accordion", "sourceClass": "qx.ui.website.Accordion"}, "type": "attach"}]}, {"attributes": {"line": 159, "sourceMethod": "block", "isStatic": false, "sourceClass": "qx.module.Blocker", "name": "block"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "transparent", "optional": true, "name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>The color for the blocker element (any <span class=\"caps\">CSS</span> color value)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "optional": true, "name": "opacity"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">CSS</span> opacity value for the blocker (floating point number from 0 to 1)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "10000", "optional": true, "name": "zIndex"}, "type": "param", "children": [{"attributes": {"text": "<p>The zIndex value for the blocker</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an overlay to all items in the collection that intercepts mouse\nevents.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "block", "sourceClass": "qx.module.Blocker"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "datepicker", "sourceMethod": "datepicker", "line": 139, "sourceClass": "qx.ui.website.DatePicker"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>The initial Date of the calendar.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\nDate Picker widgets. Therefore, an initialization process needs to be done which\ncan be configured with some parameter.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new date picker collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.DatePicker"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "datepicker", "sourceClass": "qx.ui.website.DatePicker"}, "type": "attach"}]}, {"attributes": {"line": 84, "sourceMethod": "getTextSelectionLength", "isStatic": false, "sourceClass": "qx.module.TextSelection", "name": "getTextSelectionLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the length of the text selection of the first element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTextSelectionLength", "sourceClass": "qx.module.TextSelection"}, "type": "attach"}]}, {"attributes": {"line": 185, "sourceMethod": "setTransformPerspective", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformPerspective"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The perspective layer. Numbers between 100 and 5000 give the best results.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the perspective property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformPerspective", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "removeAttribute", "sourceMethod": "removeAttribute", "line": 96, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given attribute from all elements in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeAttribute", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getAttribute", "sourceMethod": "getAttribute", "line": 81, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the value of the given attribute for the first item in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAttribute", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Attribute value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "hasListener", "sourceMethod": "hasListener", "line": 503, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type, e.g. <code>mousedown</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Event listener to check for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context object listener to check for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if one or more listeners for the given event type are attached to\nthe first element in the collection.</p>\n\n<p><strong>Important:</strong> Make sure you are handing in the <strong>identical</strong> context object to get\nthe correct result. Especially when using a collection instance this is a common pitfall.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hasListener", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if one or more listeners are attached"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getWidth", "sourceMethod": "getWidth", "line": 261, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the width of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the rendered width of the first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getWidth", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The first item&#8217;s rendered width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "wrap", "sourceMethod": "wrap", "line": 313, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "wrapper"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">HTML</span> string, <span class=\"caps\">DOM</span> element or list of <span class=\"caps\">DOM</span> elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Wraps each element in the collection in a copy of an <span class=\"caps\">HTML</span> structure.\nElements will be appended to the deepest nested element in the structure\nas determined by a depth-first search.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "wrap", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "table", "sourceMethod": "table", "line": 166, "sourceClass": "qx.ui.website.Table"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model of the widgets in the collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\ntable widgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new table collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Table"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "table", "sourceClass": "qx.ui.website.Table"}, "type": "attach"}]}, {"attributes": {"line": 124, "sourceMethod": "getTextSelectionEnd", "isStatic": false, "sourceClass": "qx.module.TextSelection", "name": "getTextSelectionEnd"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the end of the text selection of the first element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTextSelectionEnd", "sourceClass": "qx.module.TextSelection"}, "type": "attach"}]}, {"attributes": {"line": 101, "sourceMethod": "skew", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "skew"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to skew e.g. <code>&#8220;90deg&#8221;</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Skews by the given value. For further details, take\na look at the {@link #transform} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "skew", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "contains", "sourceMethod": "contains", "line": 710, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to check for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a new collection containing only those nodes that\ncontain the given element. Also accepts a qxWeb\ncollection or an Array of elements. In those cases, the first element\nin the list is used.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "contains", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection with matching items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 46, "sourceMethod": "transform", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "transform"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "transforms"}, "type": "param", "children": [{"attributes": {"text": "<p>The map containing the transforms and value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Method to apply multiple transforms at once to the given element. It\ntakes a map containing the transforms you want to apply plus the values\ne.g.<code>{scale: 2, rotate: &#8220;5deg&#8221;}</code>.\nThe values can be either singular, which means a single value will\nbe added to the <span class=\"caps\">CSS</span>. If you give an array, the values will be split up\nand each array entry will be used for the X, Y or Z dimension in that\norder e.g. <code>{scale: [2, 0.5]}</code> will result in a element\ndouble the size in X direction and half the size in Y direction.\nMake sure your browser supports all transformations you apply.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "transform", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 167, "sourceMethod": "getTransformStyle", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformStyle"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the transform-style property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-style-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformStyle", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, either <code>flat</code> or <code>preserve-3d</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 148, "sourceMethod": "setTextSelection", "isStatic": false, "sourceClass": "qx.module.TextSelection", "name": "setTextSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "start"}, "type": "param", "children": [{"attributes": {"text": "<p>start of the selection (zero based)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "end"}, "type": "param", "children": [{"attributes": {"text": "<p>end of the selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the text selection of the first element in the collection\nwith the given start and end value.\nIf no end value is passed the selection will extend to the end.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTextSelection", "sourceClass": "qx.module.TextSelection"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "offMatchTarget", "sourceMethod": "offMatchTarget", "line": 682, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "eventType"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event to remove for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>function to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>optional context object to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes a listener for the given type and selector check.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "offMatchTarget", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "name": "__getTextNode", "sourceMethod": "__getTextNode", "access": "private", "line": 46, "sourceClass": "qx.module.TextSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the first text child node of the given element</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>text node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__getTextNode", "sourceClass": "qx.module.TextSelection"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "toggleClass", "sourceMethod": "toggleClass", "line": 556, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Toggles the given class name on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "toggleClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "insertAfter", "sourceMethod": "insertAfter", "line": 280, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts the current collection after each target item. The collection\nitems are moved after the first target. For subsequent targets,\nclones of the collection items are created and inserted.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "insertAfter", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 62, "sourceMethod": "translate", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "translate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to translate e.g. <code>&#8220;10px&#8221;</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Translates by the given value. For further details, take\na look at the {@link #transform} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "translate", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 133, "sourceMethod": "getTransformOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformOrigin"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the transform-origin property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, e.g. <code>50% 50%</code> or null, of the collection is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "is", "sourceMethod": "is", "line": 637, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if at least one element in the collection passes the provided\nfilter. This can be either a selector expression or a filter\nfunction</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "is", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if at least one element matches"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "empty", "sourceMethod": "empty", "line": 351, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all content from the elements in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "empty", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "__getAncestors", "isInternal": true, "sourceMethod": "__getAncestors", "access": "internal", "line": 58, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector that indicates where to stop including ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for getAncestors and getAncestorsUntil</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__getAncestors", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 49, "sourceMethod": "carousel", "isStatic": false, "sourceClass": "qx.ui.website.Carousel", "name": "carousel"}, "type": "method", "children": [{"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\nCarousel widgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new carousel collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Carousel"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "carousel", "sourceClass": "qx.ui.website.Carousel"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getPrevAll", "sourceMethod": "getPrevAll", "line": 822, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all preceding sibling elements of each\nitem in the current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPrevAll", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing preceding siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 116, "sourceMethod": "setTransformOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformOrigin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> position values like <code>50% 50%</code> or <code>left top</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the transform-origin property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "removeClasses", "sourceMethod": "removeClasses", "line": 512, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of class names to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes multiple class names from each element in the collection.\nUse {@link qx.module.Attribute#removeAttribute} to remove all classes.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeClasses", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setProperty", "sourceMethod": "setProperty", "line": 158, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Property name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Property value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets a property on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setProperty", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getPosition", "sourceMethod": "getPosition", "line": 349, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the distance between the first element in the collection and its\noffset parent</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPosition", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a map with the keys <code>left</code> and <code>top</code> containing the distance between the elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getOffset", "sourceMethod": "getOffset", "line": 378, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "box", "optional": true, "name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>A supported option. See comment above.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the computed location of the given element in the context of the\ndocument dimensions.</p>\n\n<p>Supported modes:</p>\n\n<ul>\n<li><code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)</li>\n<li><code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)</li>\n<li><code>border</code>: Calculate the border box (useful to align to border edges of two elements).</li>\n<li><code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).</li>\n<li><code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).</li>\n</ul>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getOffset", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A map with the keys <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code> which contains the distance of the element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setScrollLeft", "sourceMethod": "setScrollLeft", "line": 483, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Left scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional: Duration in ms for animated scrolling</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the elements of the collection to the given coordinate.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setScrollLeft", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setAttribute", "sourceMethod": "setAttribute", "line": 65, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets an <span class=\"caps\">HTML</span> attribute on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setAttribute", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getParents", "sourceMethod": "getParents", "line": 488, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing the parent of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getParents", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the parent elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 235, "sourceMethod": "getTransformPerspectiveOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformPerspectiveOrigin"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the perspective-origin property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformPerspectiveOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, e.g. <code>50% 50%</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "__hierarchyHelper", "isInternal": true, "sourceMethod": "__hierarchyHelper", "access": "internal", "line": 153, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "collection"}, "type": "param", "children": [{"attributes": {"text": "<p>Collection to iterate over (any Array-like object)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "method"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the qx.dom.Hierarchy method to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector that elements to be included must match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper function that iterates over a set of items and applies the given\nqx.dom.Hierarchy method to each entry, storing the results in a new Array.\nDuplicates are removed and the items are filtered if a selector is\nprovided.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__hierarchyHelper", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Result array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getProperties", "sourceMethod": "getProperties", "line": 219, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of property names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the values of multiple properties for the first item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getProperties", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "removeAttributes", "sourceMethod": "removeAttributes", "line": 142, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "attributes"}, "type": "param", "children": [{"attributes": {"text": "<p>List of attribute names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes multiple attributes from each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeAttributes", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "emit", "sourceMethod": "emit", "line": 458, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional data that will be passed to the listener callback function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fire an event of the given type.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "emit", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getAncestorsUntil", "sourceMethod": "getAncestorsUntil", "line": 556, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector that indicates where to stop including ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all ancestors of each element in the\ncollection, up to (but not including) the element matched by the provided\nselector.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAncestorsUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getNext", "sourceMethod": "getNext", "line": 743, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the next sibling element of each item in\nthe current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNext", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing next siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getScrollTop", "sourceMethod": "getScrollTop", "line": 459, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the top scroll position of the first element in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getScrollTop", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Current top scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "_getHeight", "sourceMethod": "_getHeight", "access": "protected", "line": 33, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the height of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p><span class=\"caps\">INTERNAL</span></p>\n\n<p>Returns the rendered height of the first element in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "_getHeight", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The first item&#8217;s rendered height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getNextAll", "sourceMethod": "getNextAll", "line": 762, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all following sibling elements of each\nitem in the current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNextAll", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing following siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "_getContentWidth", "sourceMethod": "_getContentWidth", "access": "protected", "line": 145, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the content width of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p><span class=\"caps\">INTERNAL</span></p>\n\n<p>Returns the content width of the first element in the collection.\nThis is the maximum width the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "_getContentWidth", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Computed content width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "calendar", "sourceMethod": "calendar", "line": 258, "sourceClass": "qx.ui.website.Calendar"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>The initial Date of the calendar.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\nCalendar widgets. Therefore, an initialization process needs to be done which\ncan be configured with some parameter.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new calendar collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Calendar"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "calendar", "sourceClass": "qx.ui.website.Calendar"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getHtml", "sourceMethod": "getHtml", "line": 33, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the <span class=\"caps\">HTML</span> content of the first item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getHtml", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> content or null if the collection is empty</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "eq", "sourceMethod": "eq", "line": 652, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The position of the element in the collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Reduce the set of matched elements to a single element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "eq", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getHeight", "sourceMethod": "getHeight", "line": 250, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the height of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the rendered height of the first element in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getHeight", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The first item&#8217;s rendered height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setStyles", "sourceMethod": "setStyles", "line": 434, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "styles"}, "type": "param", "children": [{"attributes": {"text": "<p>A map of style property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets multiple style properties for each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setStyles", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "_getWidth", "sourceMethod": "_getWidth", "access": "protected", "line": 71, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "force"}, "type": "param", "children": [{"attributes": {"text": "<p>When true also get the width of a <em>non displayed</em> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p><span class=\"caps\">INTERNAL</span></p>\n\n<p>Returns the rendered width of the first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "_getWidth", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The first item&#8217;s rendered width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "appendTo", "sourceMethod": "appendTo", "line": 220, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "parent"}, "type": "param", "children": [{"attributes": {"text": "<p>Parent selector expression or list of parent elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Appends all items in the collection to the specified parents. If multiple\nparents are given, the items will be moved to the first parent, while\nclones of the items will be appended to subsequent parents.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "appendTo", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 270, "sourceMethod": "fadeIn", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "fadeIn"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fades in all elements in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "fadeIn", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "setProperties", "sourceMethod": "setProperties", "line": 189, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A map of property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets multiple properties for each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setProperties", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 53, "sourceMethod": "getData", "isStatic": false, "sourceClass": "qx.module.Dataset", "name": "getData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the attribute [CamelCase variant]</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the value of the given <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attribute for the first item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getData", "sourceClass": "qx.module.Dataset"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The value of the attribute</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 34, "sourceMethod": "setData", "isStatic": false, "sourceClass": "qx.module.Dataset", "name": "setData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the attribute [CamelCase variant]</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value of the attribute</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets an <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attribute on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setData", "sourceClass": "qx.module.Dataset"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 184, "sourceMethod": "play", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "play"}, "type": "method", "children": [{"attributes": {"text": "<p>Manipulates the play state of the animation.\nThis can be used to continue an animation when paused.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "play", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getLast", "sourceMethod": "getLast", "line": 674, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {"text": "<p>Reduces the collection to the last element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getLast", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "insertBefore", "sourceMethod": "insertBefore", "line": 249, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts the current collection before each target item. The collection\nitems are moved before the first target. For subsequent targets,\nclones of the collection items are created and inserted.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "insertBefore", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "clone", "sourceMethod": "clone", "line": 165, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "events"}, "type": "param", "children": [{"attributes": {"text": "<p>clone event listeners. Default: <code>false</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clones the items in the current collection and returns them in a new set.\nEvent listeners can also be cloned.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "clone", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection with clones</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "after", "sourceMethod": "after", "line": 407, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "content"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string(s), <span class=\"caps\">DOM</span> element(s) or collection to insert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts content after each element in the collection. This can either\nbe an <span class=\"caps\">HTML</span> string, an array of <span class=\"caps\">HTML</span> strings, a single <span class=\"caps\">DOM</span> element or an\narray of elements.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "after", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "tabs", "sourceMethod": "tabs", "line": 128, "sourceClass": "qx.ui.website.Tabs"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "align"}, "type": "param", "children": [{"attributes": {"text": "<p>Tab button alignment. Default: <code>left</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "preselected"}, "type": "param", "children": [{"attributes": {"text": "<p>The (zero-based) index of the tab that should initially be selected. Default: <code>0</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "orientation"}, "type": "param", "children": [{"attributes": {"text": "<code>horizontal</code> (default) or <code>vertical</code>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\ntabs widgets.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "tabs", "sourceClass": "qx.ui.website.Tabs"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Tabs"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getStyle", "sourceMethod": "getStyle", "line": 416, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Style property name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the value of the given style property for the first item in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getStyle", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Style property value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getFirst", "sourceMethod": "getFirst", "line": 663, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {"text": "<p>Reduces the collection to the first element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getFirst", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "off", "sourceMethod": "off", "line": 357, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback context</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "useCapture"}, "type": "param", "children": [{"attributes": {"text": "<p>Attach the listener to the capturing phase if true</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters event listeners for the given type from each element in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "off", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "slider", "sourceMethod": "slider", "line": 130, "sourceClass": "qx.ui.website.Slider"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The initial value of each slider widget</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "step"}, "type": "param", "children": [{"attributes": {"text": "<p>The step config value to configure the step width or the steps as array of numbers.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\nslider widgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new Slider collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Slider"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "slider", "sourceClass": "qx.ui.website.Slider"}, "type": "attach"}]}, {"attributes": {"isStatic": false, "group": "Widget", "name": "toWidgetCollection", "sourceMethod": "toWidgetCollection", "line": 93, "sourceClass": "qx.ui.website.Widget"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a wrapper Array that maps the widget <span class=\"caps\">API</span> available on\nthe first item in the current collection to all items in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "toWidgetCollection", "sourceClass": "qx.ui.website.Widget"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection of widgets</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "isRendered", "sourceMethod": "isRendered", "line": 911, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the first element in the collection is inserted into\nthe document for which it was created.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isRendered", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> when the element is inserted into the document."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "hasClass", "sourceMethod": "hasClass", "line": 527, "sourceClass": "qx.module.Css"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name to check for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the first element in the collection has the given class name</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hasClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the first item has the given class name"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "getProperty", "sourceMethod": "getProperty", "line": 174, "sourceClass": "qx.module.Attribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Property name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the value of the given property for the first item in the\ncollection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getProperty", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Property value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 252, "sourceMethod": "isEnded", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "isEnded"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns whether an animation has ended or not.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isEnded", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if an animation has ended."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 191, "sourceMethod": "placeTo", "isStatic": false, "sourceClass": "qx.module.Placement", "name": "placeTo"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Placement target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "position"}, "type": "param", "children": [{"attributes": {"text": "<p>Alignment of the object with the target, any of <code>&#8220;top-left&#8221;</code>, <code>&#8220;top-center&#8221;</code>, <code>&#8220;top-right&#8221;</code>, <code>&#8220;bottom-left&#8221;</code>, <code>&#8220;bottom-center&#8221;</code>, <code>&#8220;bottom-right&#8221;</code>, <code>&#8220;left-top&#8221;</code>, <code>&#8220;left-middle&#8221;</code>, <code>&#8220;left-bottom&#8221;</code>, <code>&#8220;right-top&#8221;</code>, <code>&#8220;right-middle&#8221;</code>, <code>&#8220;right-bottom&#8221;</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "offsets"}, "type": "param", "children": [{"attributes": {"text": "<p>Map with the desired offsets between the two elements. Must contain the keys <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"direct\"", "optional": true, "name": "modeX"}, "type": "param", "children": [{"attributes": {"text": "<p>Horizontal placement mode. Valid values are: <ul> <li><code>direct</code>: place the element directly at the given location.</li> <li><code>keep-align</code>: if the element is partially outside of the visible area, it is moved to the best fitting &#8216;edge&#8217; and &#8216;alignment&#8217; of the target. It is guaranteed the the new position attaches the object to one of the target edges and that it is aligned with a target edge.</li> <li><code>best-fit</code>: If the element is partially outside of the visible area, it is moved into the view port, ignoring any offset and position values.</li> </ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"direct\"", "optional": true, "name": "modeY"}, "type": "param", "children": [{"attributes": {"text": "<p>Vertical placement mode. Accepts the same values as the &#8216;modeX&#8217; argument.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Moves the first element in the collection, aligning it with the given\ntarget.</p>\n\n<div>\n<strong>NOTE:</strong> The <code>placeTo</code> method also works for hidden\nelements. However, the visibility / display styles are only manipulated during\nthe placement operation. As a result a previously hidden element <strong>stays hidden</strong>\n</div>\n\n<div>\n<strong>NOTE:</strong> If the target is changing its position due e.g. a DOM manipulation the\nplaced element <strong>is not</strong> updated automatically. You have to call <code>placeTo</code>\nagain to place the element to the target. The element is <strong>always</strong> positioned by using\n<code>position:absolute</code> independently on the chosen <code>position</code> and <code>mode</code>.\n</div>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "placeTo", "sourceClass": "qx.module.Placement"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "group": "Core", "name": "once", "sourceMethod": "once", "line": 479, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event to listen for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Attaches a listener for the given event that will be executed only once.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "once", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}]}]}