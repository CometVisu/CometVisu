{"attributes": {"name": "Notification", "packageName": "qx.bom", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "qx.bom.Notification", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>This class offers a constant <span class=\"caps\">API</span> over the Notification Spec:\n<a href=\"http://www.w3.org/TR/notifications/\">http://www.w3.org/TR/notifications/</a></p>\n\n<p>It forwards all the browsers support if supported.</p>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nvar notifications = qx.bom.Notification.getInstance();\n\nvar button = new qx.ui.form.Button(\"Notify me!\");\nbutton.addListener(\"execute\", function() {\n  notifications.show(\"Information\", \"Hey there!\", \"icon/64/status/dialog-information.png\", 5000);\n});\n\n// Enable button if supported\nbutton.setEnabled(qx.core.Environment.get(\"html.notification\"));\n\n</pre>\n\n<p><b>Note</b></p>\n\n<p>A notification can only be sent if the user allows these notifications to\nbe shown. <code>qx.bom.Notification</code> automatically tries to\ntrigger a browser dialog which asks the user for permission.</p>\n\n<p>But there is a restriction: the dialog will only show up if it is triggered\nby code that is running inside a request handler for an interactive browser\nevent like a mouse click or a keyboard interaction.</p>\n\n<p>For real life applications this means that you may add a <code>request()</code>\ncall i.e. to your applications login button to let the browser ask for\npermission initially. After that happened and the user decided to\naccept these notifications, they can be sent any time without the\nneed to be inside of event handlers.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 11, "isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.Notification"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 73, "isStatic": true, "name": "getNotification"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the client supports the desktop notification <span class=\"caps\">API</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if notification API is supported"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 89, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {"text": "<p>This is a singleton. Use <code>getInstance()</code> to get an instance.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "appear"}, "type": "event", "children": [{"attributes": {"text": "<p>Event fired when a notification with data <code>tag</code> appeared.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Data"}, "type": "entry"}]}]}, {"attributes": {"name": "click"}, "type": "event", "children": [{"attributes": {"text": "<p>Event fired when a notification with data <code>tag</code> has been\nclicked by the user.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Data"}, "type": "entry"}]}]}, {"attributes": {"name": "close"}, "type": "event", "children": [{"attributes": {"text": "<p>Event fired when a notification with data <code>tag</code> has been\nclosed. This may happen either interactively or due to a timeout\ndefined by the instance displaying the notification.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "internal", "isInternal": true, "line": 197, "name": "_show"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "tag"}, "type": "param", "children": [{"attributes": {"text": "<p>Notification tag</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "title"}, "type": "param", "children": [{"attributes": {"text": "<p>The notification title</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>The message body</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "icon"}, "type": "param", "children": [{"attributes": {"text": "<p>Resource string or icon <span class=\"caps\">URL</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "expire"}, "type": "param", "children": [{"attributes": {"text": "<p>Number of milliseconds after the message is automatically destroyed. Leave empty for no timeout. Note that some notification systems tend to remove timeout-less messages after some time.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Unsigned"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Display a desktop notification using a <em>title</em>, <em>message</em> and <em>icon</em>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 264, "name": "close"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "tag"}, "type": "param", "children": [{"attributes": {"text": "<p>Notification tag</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Actively close an active notification.</p>"}, "type": "desc"}]}, {"attributes": {"line": 296, "name": "getPermission"}, "type": "method", "children": [{"attributes": {"text": "<p>Check if we&#8217;ve the permission to send notifications.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns either &#8220;default&#8221;, &#8220;denied&#8221; or &#8220;granted&#8221;. &#8220;default&#8221; indicates that we need to call <code>request()</code>  before a notification can be sent.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 278, "name": "request"}, "type": "method", "children": [{"attributes": {"text": "<p>Tell the browser to request permission to display notifications.</p>\n\n<p><b>Note:</b></p>\n\n<p>This needs to be called from within an interactive event handler.</p>"}, "type": "desc"}]}, {"attributes": {"line": 149, "name": "show"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "title"}, "type": "param", "children": [{"attributes": {"text": "<p>The notification title</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>The message body</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "icon"}, "type": "param", "children": [{"attributes": {"text": "<p>Resource string or icon <span class=\"caps\">URL</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "expire"}, "type": "param", "children": [{"attributes": {"text": "<p>Number of milliseconds after the message is automatically destroyed. Leave empty for no timeout. Note that some notification systems tend to remove timeout-less messages after some time.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "tag"}, "type": "param", "children": [{"attributes": {"text": "<p>Multiple messages with the same tag replace each other. Leave blank for automatic tag handling.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Display a desktop notification using a <em>title</em>, <em>message</em> and <em>icon</em>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Notification tag</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}]}