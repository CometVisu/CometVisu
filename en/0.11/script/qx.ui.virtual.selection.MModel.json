{"attributes": {"name": "MModel", "isInternal": true, "packageName": "qx.ui.virtual.selection", "includer": "qx.ui.list.List,qx.ui.tree.VirtualTree", "access": "internal", "fullName": "qx.ui.virtual.selection.MModel", "type": "mixin"}, "type": "class", "children": [{"attributes": {"text": "<p>Implements the different selection modes single, multi, additive and one\nselection with there drag and quick selection.</p>\n\n<p>Example how to use selection:</p>\n\n<pre class=\"javascript\">\nvar rawData = [];\nfor (var i = 0; i < 2500; i++) {\n rawData[i] = \"Item No \" + i;\n}\n\nvar model = qx.data.marshal.Json.createModel(rawData);\nvar list = new qx.ui.list.List(model);\n\n// Pre-Select \"Item No 20\"\nlist.getSelection().push(model.getItem(20));\n\n// log change selection\nlist.getSelection().addListener(\"change\", function(e) {\n  this.debug(\"Selection: \" + list.getSelection().getItem(0));\n}, this);\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 46, "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 423, "isMixin": true, "name": "__isSelectionEquals"}, "type": "method", "children": [{"attributes": {"text": "<p>Checks whether the local and the manager selection are equal.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the selections are equal, <code>false</code> otherwise."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 401, "isMixin": true, "name": "__replaceSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "newSelection"}, "type": "param", "children": [{"attributes": {"text": "<p>The new selection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Replace the current selection with the passed selection Array.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 374, "isMixin": true, "name": "__synchronizeSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Synchronized the selection form the manager with the local one.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 454, "isMixin": true, "name": "_applyDefaultSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper Method to select default item.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 275, "isMixin": true, "name": "_applyDragSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.virtual.selection.MModel#dragSelection"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>dragSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dragSelection}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 281, "isMixin": true, "name": "_applyQuickSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.virtual.selection.MModel#quickSelection"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>quickSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #quickSelection}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 256, "isMixin": true, "name": "_applySelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.virtual.selection.MModel#selection"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>selection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #selection}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 269, "isMixin": true, "name": "_applySelectionMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.virtual.selection.MModel#selectionMode"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>selectionMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #selectionMode}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 179, "isMixin": true, "name": "_initSelectionManager"}, "type": "method", "children": [{"attributes": {"text": "<p>Initialize the selection manager with his delegate.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 298, "isMixin": true, "name": "_onChangeSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>the change event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the internal selection change {@link #selection}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 355, "isMixin": true, "name": "_onManagerChangeSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>the change event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the selection change from the <code>_manager</code>.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 238, "isMixin": true, "name": "_updateSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Method to update the selection, this method can be used when the model has\nchanges.</p>"}, "type": "desc"}]}, {"attributes": {"line": 228, "isMixin": true, "name": "getAutoScrollIntoView"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns true, if automatically scrolling of selected item is active.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns <code>false</code> if auto scrolling is suspended.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDragSelection", "fromProperty": "dragSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>dragSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dragSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>dragSelection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQuickSelection", "fromProperty": "quickSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>quickSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #quickSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>quickSelection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSelection", "fromProperty": "selection"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>selection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #selection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>selection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSelectionMode", "fromProperty": "selectionMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>selectionMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #selectionMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>selectionMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 163, "isMixin": true, "name": "getValue"}, "type": "method", "children": [{"attributes": {"text": "<p>getValue implements part of the {@link qx.ui.form.IField} interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The current selection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.IListData"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDragSelection", "fromProperty": "dragSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>dragSelection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>dragSelection</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #dragSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initQuickSelection", "fromProperty": "quickSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>quickSelection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>quickSelection</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #quickSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSelection", "fromProperty": "selection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>selection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>selection</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #selection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSelectionMode", "fromProperty": "selectionMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>selectionMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>selectionMode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #selectionMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isDragSelection", "fromProperty": "dragSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>dragSelection</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dragSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isQuickSelection", "fromProperty": "quickSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>quickSelection</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #quickSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetDragSelection", "fromProperty": "dragSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>dragSelection</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #dragSelection}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetQuickSelection", "fromProperty": "quickSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>quickSelection</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #quickSelection}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSelection", "fromProperty": "selection"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>selection</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #selection}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSelectionMode", "fromProperty": "selectionMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>selectionMode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #selectionMode}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 171, "isMixin": true, "name": "resetValue"}, "type": "method", "children": [{"attributes": {"text": "<p>resetValue implements part of the {@link qx.ui.form.IField} interface.</p>"}, "type": "desc"}]}, {"attributes": {"line": 217, "isMixin": true, "name": "setAutoScrollIntoView"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Set <code>false</code> to suspend auto scrolling.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Determines, if automatically scrolling of selected item is active.\nSet <code>false</code> to suspend auto scrolling.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setDragSelection", "fromProperty": "dragSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>dragSelection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>dragSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dragSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setQuickSelection", "fromProperty": "quickSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>quickSelection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>quickSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #quickSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSelection", "fromProperty": "selection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>selection</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>selection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #selection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSelectionMode", "fromProperty": "selectionMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>selectionMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>selectionMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #selectionMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 147, "isMixin": true, "name": "setValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selection"}, "type": "param", "children": [{"attributes": {"text": "<p>List data to select as value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.IListData"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>setValue implements part of the {@link qx.ui.form.IField} interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The status of this operation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleDragSelection", "fromProperty": "dragSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>dragSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dragSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleQuickSelection", "fromProperty": "quickSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>quickSelection</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #quickSelection}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "dragSelection", "defaultValue": "false", "propertyType": "new", "apply": "_applyDragSelection", "isMixin": true, "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Enable drag selection (multi selection of items through\ndragging the pointer in pressed states).</p>\n\n<p>Only possible for the selection modes <code>multi</code> and <code>additive</code></p>"}, "type": "desc"}]}, {"attributes": {"name": "quickSelection", "defaultValue": "false", "propertyType": "new", "apply": "_applyQuickSelection", "isMixin": true, "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Enable quick selection mode, where no tap is needed to change the selection.</p>\n\n<p>Only possible for the modes <code>single</code> and <code>one</code>.</p>"}, "type": "desc"}]}, {"attributes": {"name": "selection", "event": "changeSelection", "allowNull": "false", "propertyType": "new", "apply": "_applySelection", "isMixin": true, "check": "qx.data.Array"}, "type": "property", "children": [{"attributes": {"text": "<p>Current selected items</p>"}, "type": "desc"}]}, {"attributes": {"name": "selectionMode", "defaultValue": "\"single\"", "propertyType": "new", "apply": "_applySelectionMode", "possibleValues": "\"single\",\"multi\",\"additive\",\"one\"", "isMixin": true}, "type": "property", "children": [{"attributes": {"text": "<p>The selection mode to use.</p>\n\n<p>For further details please have a look at:\n{@link qx.ui.core.selection.Abstract#mode}</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeSelection"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #selection}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeSelection"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is fired as soon as the content of the selection property changes, but\nthis is not equal to the change of the selection of the widget. If the selection\nof the widget changes, the content of the array stored in the selection property\nchanges. This means you have to listen to the change event of the selection array\nto get an event as soon as the user changes the selected item.</p>\n\n<pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeValue"}, "type": "event", "children": [{"attributes": {"text": "<p>Fires after the value was modified</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}]}