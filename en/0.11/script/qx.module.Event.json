{"attributes": {"fullName": "qx.module.Event", "type": "bootstrap", "packageName": "qx.module", "group": "Core", "name": "Event"}, "type": "class", "children": [{"attributes": {"text": "<p>Support for native and custom events.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "type": "Boolean", "name": "__isReady", "value": "false"}, "type": "constant"}, {"attributes": {"access": "internal", "isInternal": true, "name": "__hooks"}, "type": "constant", "children": [{"attributes": {"text": "<p>Registry of event hooks</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "name": "__normalizations"}, "type": "constant", "children": [{"attributes": {"text": "<p>Event normalization registry</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "internal", "isInternal": true, "line": 255, "isStatic": true, "name": "$getEventHookRegistry"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all registered event hooks</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$getEventHookRegistry", "targetClass": "qxWeb", "sourceMethod": "$getEventHookRegistry", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of event types/registration hook functions</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 168, "isStatic": true, "name": "$getEventNormalizationRegistry"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all registered event normalizers</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$getEventNormalizationRegistry", "targetClass": "qxWeb", "sourceMethod": "$getEventNormalizationRegistry", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of event types/normalizer functions</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 183, "isStatic": true, "name": "$registerEventHook"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "registerHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event registration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "unregisterHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event deregistration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers an event hook for the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$registerEventHook", "targetClass": "qxWeb", "sourceMethod": "$registerEventHook", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 122, "isStatic": true, "name": "$registerEventNormalization"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types to be normalized. Use an asterisk (<code>*</code>) to normalize all event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "normalizer"}, "type": "param", "children": [{"attributes": {"text": "<p>Normalizer function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a normalization function for the given event types. Listener\ncallbacks for these types will be called with the return value of the\nnormalization function instead of the regular event object.</p>\n\n<p>The normalizer will be called with two arguments: The original event\nobject and the element on which the event was triggered</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$registerEventNormalization", "targetClass": "qxWeb", "sourceMethod": "$registerEventNormalization", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 223, "isStatic": true, "name": "$unregisterEventHook"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "registerHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event registration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "unregisterHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event deregistration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters a hook from the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$unregisterEventHooks", "targetClass": "qxWeb", "sourceMethod": "$unregisterEventHook", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 147, "isStatic": true, "name": "$unregisterEventNormalization"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "normalizer"}, "type": "param", "children": [{"attributes": {"text": "<p>Normalizer function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters a normalization function from the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$unregisterEventNormalization", "targetClass": "qxWeb", "sourceMethod": "$unregisterEventNormalization", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 58, "isStatic": true, "name": "ready"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the given function once the document is ready.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "ready", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 435, "name": "allOff"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type. All listeners will be removed if this is undefined.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all event listeners (or all listeners for a given type) from the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "allOff", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 545, "name": "copyEventsTo"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Element to attach the copied listeners to</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Copies any event listeners that are attached to the elements in the\ncollection to the provided target element</p>"}, "type": "desc"}]}, {"attributes": {"line": 458, "name": "emit"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional data that will be passed to the listener callback function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fire an event of the given type.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "emit", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 503, "name": "hasListener"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type, e.g. <code>mousedown</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Event listener to check for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context object listener to check for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if one or more listeners for the given event type are attached to\nthe first element in the collection.</p>\n\n<p><strong>Important:</strong> Make sure you are handing in the <strong>identical</strong> context object to get\nthe correct result. Especially when using a collection instance this is a common pitfall.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hasListener", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if one or more listeners are attached"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 602, "name": "hover"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callbackIn"}, "type": "param", "children": [{"attributes": {"text": "<p>callback when hovering over</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "callbackOut"}, "type": "param", "children": [{"attributes": {"text": "<p>callback when hovering out</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Bind one or two callbacks to the collection.\nIf only the first callback is defined the collection\ndoes react on &#8216;pointerover&#8217; only.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hover", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 357, "name": "off"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback context</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "useCapture"}, "type": "param", "children": [{"attributes": {"text": "<p>Attach the listener to the capturing phase if true</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters event listeners for the given type from each element in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "off", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 444, "name": "offById"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the listener to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the listener with the given id.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 682, "name": "offMatchTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "eventType"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event to remove for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>function to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>optional context object to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes a listener for the given type and selector check.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "offMatchTarget", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 277, "name": "on"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event to listen for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "useCapture"}, "type": "param", "children": [{"attributes": {"text": "<p>Attach the listener to the capturing phase if true</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a listener for the given event type on each item in the\ncollection. This can be either native or custom events.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "on", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 479, "name": "once"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event to listen for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Attaches a listener for the given event that will be executed only once.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "once", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 628, "name": "onMatchTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "eventType"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event to watch out for (attached to the document object)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>function to call if the selector matches. The callback will get the target as qxWeb collection and the event as arguments</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>optional context object to call the callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a listener for the given type and checks if the target fulfills the selector check.\nIf the check is successful the callback is executed with the target and event as arguments.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "onMatchTarget", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}]}]}