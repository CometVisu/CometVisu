{"attributes": {"name": "OpenCloseController", "hasWarning": true, "packageName": "qx.ui.tree.core", "superClass": "qx.core.Object", "fullName": "qx.ui.tree.core.OpenCloseController", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Because of the virtual nature of the VirtualTree, and the fact that\nrendering occurs asynchronously, it is not a simple matter to bind a\nproperty in the model that will open or close branches in the\ntree. Instead, this controller listens to both the model and the tree, and\nsynchronizes the openness of branches in the tree.</p>\n\n<p>To use this controller, simply instantiate it with the requisite\nconstructor arguments.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 43, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "tree"}, "type": "param", "children": [{"attributes": {"text": "<p>The tree whose branch open or closed state is to be synchronized to a model property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.tree.VirtualTree"}, "type": "entry"}]}]}, {"attributes": {"name": "rootModel"}, "type": "param", "children": [{"attributes": {"text": "<p>The tree root model wherein a property is to be synchronized to the tree branches&#8217; open or closed states</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 100, "hasError": true, "name": "_onChangeBubble"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "ev"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'ev'", "column": 22, "line": 100}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 22, "line": 100}, "type": "error"}]}]}, {"attributes": {"access": "protected", "line": 94, "hasError": true, "name": "_onClose"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "ev"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'ev'", "column": 15, "line": 94}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 15, "line": 94}, "type": "error"}]}]}, {"attributes": {"access": "protected", "line": 88, "hasError": true, "name": "_onOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "ev"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'ev'", "column": 14, "line": 88}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 14, "line": 88}, "type": "error"}]}]}]}]}