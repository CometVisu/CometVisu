{"attributes": {"group": "Widget", "name": "DatePicker", "packageName": "qx.ui.website", "superClass": "qx.ui.website.Widget", "fullName": "qx.ui.website.DatePicker", "type": "bootstrap"}, "type": "class", "children": [{"attributes": {"text": "<p>This is a date picker widget used to combine an input element with a calendar widget\nto select a date. The calendar itself is opened as popup to save visual space.</p>\n\n<h2>Markup</h2>\nEach Date Picker widget is connected to an existing input element.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-datepicker</code></td>\n      <td>Input element</td>\n      <td>Identifies the date picker widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-datepicker-icon</code></td>\n      <td>Icon element</td>\n      <td>Identifies the (if configured) image element to open the date picker</td>\n    </tr>\n  </tbody>\n</table>"}, "type": "desc"}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "type": "Null", "name": "__validPositions", "value": "null"}, "type": "constant", "children": [{"attributes": {"text": "<p>List of valid positions to check against</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_config"}, "type": "constant", "children": [{"attributes": {"text": "<p><strong>format</strong></p>\n\n<p>Function which is provided with a JavaScript Date object instance. You can provide\nan own format function to manipulate the value which is set to the associated input element.</p>\n\n<p>Default value:</p>\n\n<pre>function(date) {\n   return date.toLocaleDateString();\n }</pre>\n\n<p><strong>readonly</strong></p>\n\n<p>Boolean value to control if the connected input element is read-only.</p>\n\n<p>Default value:</p>\n\n<pre>true</pre>\n\n<p><strong>icon</strong></p>\n\n<p>Path to an icon which will be placed next to the input element as additional opener. If configured\na necessary <code>img</code> element is created and equipped with the <code>qx-datepicker-icon</code>\n<span class=\"caps\">CSS</span> class to style it.</p>\n\n<p>Default value:</p>\n\n<pre>null</pre>\n\n<p><strong>mode</strong></p>\n\n<p>Which control should trigger showing the date picker.\nPossible values are <code>input</code>, <code>icon</code>, <code>both</code>.</p>\n\n<p>Default value:</p>\n\n<pre>input</pre>\n\n<p><strong>position</strong></p>\n\n<p>Position of the calendar popup from the point of view of the <code><span class=\"caps\">INPUT</span></code> element.\nPossible values are</p>\n\n<ul>\n<li><code>top-left</code></li>\n<li><code>top-center</code></li>\n<li><code>top-right</code></li>\n<li><code>bottom-left</code></li>\n<li><code>bottom-center</code></li>\n<li><code>bottom-right</code></li>\n<li><code>left-top</code></li>\n<li><code>left-middle</code></li>\n<li><code>left-bottom</code></li>\n<li><code>right-top</code></li>\n<li><code>right-middle</code></li>\n<li><code>right-bottom</code></li>\n</ul>\n\n<p>Default value:</p>\n\n<pre>bottom-left</pre>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 139, "isStatic": true, "name": "datepicker"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>The initial Date of the calendar.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\nDate Picker widgets. Therefore, an initialization process needs to be done which\ncan be configured with some parameter.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new date picker collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.DatePicker"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "datepicker", "sourceClass": "qx.ui.website.DatePicker"}, "type": "attach"}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qxWeb", "line": 147, "isCtor": true, "overriddenFrom": "qx.ui.website.Widget", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param"}, {"attributes": {"name": "context"}, "type": "param"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 382, "name": "__addInputListener"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "collection"}, "type": "param", "children": [{"attributes": {"text": "<p>collection to work on</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to add a listener to the connected input element\nif the configured mode is set.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 339, "name": "__setIcon"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "collection"}, "type": "param", "children": [{"attributes": {"text": "<p>collection to work on</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to add / remove an icon next to the input element</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 326, "name": "__setReadOnly"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "collection"}, "type": "param", "children": [{"attributes": {"text": "<p>collection to work on</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to set the readonly status on the input element</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 314, "name": "_calendarChangeValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>selected date value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listens to value selection of the calendar, Whenever the user selected a day\nwe write it back to the input element and hide the calendar.</p>\n\n<p>The format of the date can be controlled with the &#8216;format&#8217; config function</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 277, "name": "_onBodyTap"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>tap event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener to the body element to be able to hide the calendar if the user clicks\nor taps outside the calendar.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 267, "name": "_onCalendarTap"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Tap event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Stop tap events from reaching the body so the calendar won&#8217;t close</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 246, "name": "_onTap"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>tap event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener which handles clicks/taps on the associated input element and\nopens / hides the calendar.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.core.IDisposable", "line": 393, "overriddenFrom": "qx.ui.website.Widget", "name": "dispose"}, "type": "method"}, {"attributes": {"line": 161, "name": "getCalendar"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the associated calendar widget</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>calendar widget instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Calendar"}, "type": "entry"}]}]}]}, {"attributes": {"line": 175, "overriddenFrom": "qx.ui.website.Widget", "name": "init"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>A JavaScript Date object to set the current date</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Initializes the date picker widget</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the widget has been initialized"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.website.Widget", "line": 211, "overriddenFrom": "qx.ui.website.Widget", "name": "render"}, "type": "method"}, {"attributes": {"docFrom": "qx.ui.website.Widget", "line": 224, "overriddenFrom": "qx.ui.website.Widget", "name": "setConfig"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param"}, {"attributes": {"name": "config"}, "type": "param"}]}]}]}]}