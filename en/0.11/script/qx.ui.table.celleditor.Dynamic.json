{"attributes": {"name": "Dynamic", "packageName": "qx.ui.table.celleditor", "superClass": "qx.core.Object", "fullName": "qx.ui.table.celleditor.Dynamic", "type": "class", "interfaces": "qx.ui.table.ICellEditorFactory"}, "type": "class", "children": [{"attributes": {"text": "<p>A cell editor factory which can dynamically exchange the cell editor\nbased on information retrieved at runtime. This is useful when different\nrows in a column should have different cellEditors based on cell content\nor row meta data. A typical example would be a spreadsheet that has different\nkind of data in one column.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 43, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "cellEditorFactoryFunction"}, "type": "param", "children": [{"attributes": {"text": "<p>the factory function {@link #cellEditorFactoryFunction}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 108, "name": "createCellEditor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "cellInfo"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the information about the cell to create.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the cell editor based on the cellEditorFactory instance\nreturned by the function stored in the cellEditorFactoryFunction\nproperty. Passes the cellInfo map to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCellEditorFactoryFunction", "fromProperty": "cellEditorFactoryFunction"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>cellEditorFactoryFunction</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cellEditorFactoryFunction}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>cellEditorFactoryFunction</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.table.ICellEditorFactory", "line": 127, "name": "getCellEditorValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "cellEditor"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "name": "initCellEditorFactoryFunction", "fromProperty": "cellEditorFactoryFunction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>cellEditorFactoryFunction</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>cellEditorFactoryFunction</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #cellEditorFactoryFunction}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetCellEditorFactoryFunction", "fromProperty": "cellEditorFactoryFunction"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>cellEditorFactoryFunction</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #cellEditorFactoryFunction}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setCellEditorFactoryFunction", "fromProperty": "cellEditorFactoryFunction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>cellEditorFactoryFunction</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>cellEditorFactoryFunction</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cellEditorFactoryFunction}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Function", "allowNull": "true", "defaultValue": "null", "name": "cellEditorFactoryFunction", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Function that returns a cellEditorFactory instance which will be\nused for the row that is currently being edited. The function is\ndefined like this:</p>\n\n<pre class=\"javascript\">\nmyTable.getTableColumnModel().setCellEditorFactory(function(cellInfo){\n  // based on the cellInfo map or other information, return the\n  // appropriate cellEditorFactory\n  if (cellInfo.row == 5)\n    return new qx.ui.table.celleditor.CheckBox;\n  else\n    return new qx.ui.table.celleditor.TextField;\n});\n</pre>"}, "type": "desc"}]}]}]}