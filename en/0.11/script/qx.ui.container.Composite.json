{"attributes": {"name": "Composite", "packageName": "qx.ui.container", "mixins": "qx.ui.core.MChildrenHandling,qx.ui.core.MLayoutHandling", "superClass": "qx.ui.core.Widget", "childClasses": "qx.ui.container.Resizer,qx.ui.indicator.ProgressBar,qx.ui.popup.Popup,qx.ui.progressive.Progressive,qx.ui.progressive.headfoot.Abstract,qx.ui.table.headerrenderer.HeaderCell,qx.ui.table.pane.Clipper,qx.ui.table.pane.FocusIndicator,qx.ui.tabview.Page,qx.ui.toolbar.PartContainer", "fullName": "qx.ui.container.Composite", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>The Composite is a generic container widget.</p>\n\n<p>It exposes all methods to set layouts and to manage child widgets\nas public methods. You must configure this widget with a layout manager to\ndefine the way the widget&#8217;s children are positioned.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget.</p>\n\n<pre class=\"javascript\">\n  // create the composite\n  var composite = new qx.ui.container.Composite()\n\n  // configure it with a horizontal box layout with a spacing of '5'\n  composite.setLayout(new qx.ui.layout.HBox(5));\n\n  // add some children\n  composite.add(new qx.ui.basic.Label(\"Name: \"));\n  composite.add(new qx.ui.form.TextField());\n\n  this.getRoot().add(composite);\n</pre>\n\n<p>This example horizontally groups a label and text field by using a\nComposite configured with a horizontal box layout as a container.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://manual.qooxdoo.org/6.0.0-alpha/pages/widget/composite.html\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo manual.</a>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 71, "isCtor": true, "overriddenFrom": "qx.ui.core.Widget", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "layout"}, "type": "param", "children": [{"attributes": {"text": "<p>A layout instance to use to place widgets on the screen.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.layout.Abstract"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "addChildWidget"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is fired after a child widget was added to this widget. The\n{@link qx.event.type.Data#getData} method of the event returns the\nadded child.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "removeChildWidget"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is fired after a child widget has been removed from this widget.\nThe {@link qx.event.type.Data#getData} method of the event returns the\nremoved child.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 117, "overriddenFrom": "qx.ui.core.Widget", "name": "_afterAddChild"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "child"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 123, "overriddenFrom": "qx.ui.core.Widget", "name": "_afterRemoveChild"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "child"}, "type": "param"}]}]}]}]}