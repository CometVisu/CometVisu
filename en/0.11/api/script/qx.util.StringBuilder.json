{"attributes": {"fullName": "qx.util.StringBuilder", "packageName": "qx.util", "type": "class", "name": "StringBuilder", "superClass": "qx.type.BaseArray"}, "type": "class", "children": [{"attributes": {"text": "<p>A string builder class</p>\n\n<p>+= operator is faster in Firefox and Opera.\nArray push/join is faster in Internet Explorer</p>\n\n<p>Even with this wrapper, which costs some time, this is\nfaster in Firefox than the alternative Array concat in\nall browsers (which is in relation to IE&#8217;s performance issues\nonly marginal). The IE performance loss caused by this\nwrapper is not relevant.</p>\n\n<p>So this class seems to be the best compromise to handle\nstring concatenation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 61, "isCtor": true, "overriddenFrom": "qx.type.BaseArray", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "length_or_items"}, "type": "param", "children": [{"attributes": {"text": "<p>The initial length of the StringBuilder OR an argument list of values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new StringBuilder with the given length or as a concatenation of the given arguments substrings.</p>\n\n<pre class=\"javascript\">\nvar sb1 = new qx.util.StringBuilder(length);\nvar sb2 = new qx.util.StringBuilder(item0, item1, ..., itemN);\n</pre>\n\n<ul>\n<li><code>length</code>: The initial length of the StringBuilder.</li>\n<li><code>itemN</code>:  A substring that will make up the newly created StringBuilder.<br />\nThe StringBuilder&#8217;s length property is set to the number of arguments.</li>\n</ul>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 1, "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The separate strings to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds new strings. Supports multiple arguments.</p>"}, "type": "desc"}]}, {"attributes": {"line": 77, "name": "clear"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all content</p>"}, "type": "desc"}]}, {"attributes": {"line": 87, "name": "get"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the concatted strings.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Concatted strings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 106, "name": "isEmpty"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the string builder is empty</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> when the builder is empty"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 116, "name": "size"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the size of the strings</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The string length</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}]}]}