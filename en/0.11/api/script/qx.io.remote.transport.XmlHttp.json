{"attributes": {"name": "XmlHttp", "hasWarning": true, "interfaces": "qx.core.IDisposable", "superClass": "qx.io.remote.transport.Abstract", "fullName": "qx.io.remote.transport.XmlHttp", "type": "class", "packageName": "qx.io.remote.transport"}, "type": "class", "children": [{"attributes": {"text": "<p>Transports requests to a server using the native XmlHttpRequest object.</p>\n\n<p>This class should not be used directly by client programmers.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 1, "isStatic": true, "name": "createRequestObject"}, "type": "method", "children": [{"attributes": {"text": "<p>Return a new XMLHttpRequest object suitable for the client browser.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>native XMLHttpRequest object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "hasError": true, "line": 121, "name": "getTimeout"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the timeout for requests</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Missing documentation for return value.", "column": 17, "line": 121}, "type": "error"}]}]}, {"attributes": {"line": 97, "isStatic": true, "name": "isSupported"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the transport type is supported by the client.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>supported or not</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "hasError": true, "line": 113, "name": "setTimeout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "timeout"}, "type": "param"}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>This method is deprecated from the start because synchronous I/O itself is deprecated in the W3C spec {@link <a href=\"https://xhr.spec.whatwg.org/\">https://xhr.spec.whatwg.org/</a>} and timeouts are indicative of synchronous I/O and/or other server issues.  However, this <span class=\"caps\">API</span> is still supported by many browsers and this <span class=\"caps\">API</span> is useful for code which has not made the transition to asynchronous I/O</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Sets the timeout for requests</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'timeout'", "column": 17, "line": 113}, "type": "error"}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "type": "Number", "name": "__timeout", "value": "0"}, "type": "constant", "children": [{"attributes": {"text": "<p>The timeout for Xhr requests</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "name": "handles"}, "type": "constant", "children": [{"attributes": {"text": "<p>Capabilities of this transport type.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 921, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "_applyState"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Current value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>Previous value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply method for the &#8220;state&#8221; property.\nFires an event for each state value to inform the listeners.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.io.remote.transport.Abstract#state"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 1, "name": "_onreadystatechange"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>native event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for change of the &#8220;readystate&#8221;.\nSets the internal state and informs the transport layer.</p>"}, "type": "desc"}]}, {"attributes": {"line": 411, "name": "failedLocally"}, "type": "method", "children": [{"attributes": {"text": "<p>Force the transport into the failed state (&#8220;failed&#8221;).</p>\n\n<p>This method should be used only if the requests <span class=\"caps\">URI</span> was local\naccess. I.e. it started with &#8220;file://&#8221;.</p>"}, "type": "desc"}]}, {"attributes": {"line": 767, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "getFetchedLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the length of the content as fetched thus far</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Length of the response text.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getParseJson", "fromProperty": "parseJson"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>parseJson</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #parseJson}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>parseJson</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 507, "name": "getReadyState"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the ready state of this transports request.</p>\n\n<p>For qx.io.remote.transport.XmlHttp, ready state is a number between 1 to 4.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>ready state number</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 174, "name": "getRequest"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the native request object</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>native XmlHTTPRequest object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 779, "name": "getResponseContent"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the content of the response</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Response content if available</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "null"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 563, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "getResponseHeader"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "vLabel"}, "type": "param", "children": [{"attributes": {"text": "<p>Response header name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a specific header provided by the server upon sending a request,\nwith header name determined by the argument headerName.</p>\n\n<p>Only available at readyState 3 and 4 universally and in readyState 2\nin Gecko.</p>\n\n<p>Please note: Some servers/proxies (such as Selenium RC) will capitalize\nresponse header names. This is in accordance with <span class=\"caps\">RFC</span> 2616<sup class=\"footnote\"><a href=\"#fn1\">1</a></sup>, which\nstates that <span class=\"caps\">HTTP</span> 1.1 header names are case-insensitive, so your\napplication should be case-agnostic when dealing with response headers.</p>\n\n<p>[1]<a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\"><span class=\"caps\">RFC</span> 2616: <span class=\"caps\">HTTP</span> Message Headers</a></p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Response header value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 603, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "getResponseHeaders"}, "type": "method", "children": [{"attributes": {"text": "<p>Provides a hash of all response headers.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>hash of all response headers</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 691, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "getResponseText"}, "type": "method", "children": [{"attributes": {"text": "<p>Provides the response text from the request when available and null\notherwise.  By passing true as the &#8220;partial&#8221; parameter of this method,\nincomplete data will be made available to the caller.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Content of the response as string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 716, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "getResponseXml"}, "type": "method", "children": [{"attributes": {"text": "<p>Provides the <span class=\"caps\">XML</span> provided by the response if any and null otherwise.  By\npassing true as the &#8220;partial&#8221; parameter of this method, incomplete data will\nbe made available to the caller.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Content of the response as <span class=\"caps\">XML</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If an error within the response occurs.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 639, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "getStatusCode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the current status code of the request if available or -1 if not.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>current status code</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 664, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "getStatusText"}, "type": "method", "children": [{"attributes": {"text": "<p>Provides the status text for the current request if available and null\notherwise.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>current status code text</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 580, "name": "getStringResponseHeaders"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all response headers of the request.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>response headers</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initParseJson", "fromProperty": "parseJson"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>parseJson</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>parseJson</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #parseJson}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isParseJson", "fromProperty": "parseJson"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>parseJson</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #parseJson}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetParseJson", "fromProperty": "parseJson"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>parseJson</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #parseJson}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 198, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "send"}, "type": "method", "children": [{"attributes": {"text": "<p>Implementation for sending the request</p>"}, "type": "desc"}]}, {"attributes": {"name": "setParseJson", "fromProperty": "parseJson"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>parseJson</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>parseJson</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #parseJson}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 533, "overriddenFrom": "qx.io.remote.transport.Abstract", "name": "setRequestHeader"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "vLabel"}, "type": "param", "children": [{"attributes": {"text": "<p>Request header name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "vValue"}, "type": "param", "children": [{"attributes": {"text": "<p>Request header value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set a request header to this transports request.</p>"}, "type": "desc"}]}, {"attributes": {"name": "toggleParseJson", "fromProperty": "parseJson"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>parseJson</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #parseJson}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Boolean", "defaultValue": "true", "name": "parseJson", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>If true and the responseType property is set to &#8220;application/json&#8221;, getResponseContent() will\nreturn a Javascript map containing the <span class=\"caps\">JSON</span> contents, i. e. the result qx.lang.Json.parse().\nIf false, the raw string data will be returned and the parsing must be done manually.\nThis is useful for special <span class=\"caps\">JSON</span> dialects / extensions which are not supported by\nqx.lang.Json.</p>"}, "type": "desc"}]}]}]}