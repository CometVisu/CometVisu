{"attributes": {"fullName": "qx.dom.Node", "packageName": "qx.dom", "isStatic": true, "type": "bootstrap", "name": "Node"}, "type": "class", "children": [{"attributes": {"text": "<p>Basic node creation and type detection</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 139, "isStatic": true, "name": "getBodyElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>node to inspect</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the body element. (Visual root node)</p>\n\n<p>This normally only makes sense for <span class=\"caps\">HTML</span> documents. It returns\nthe content area of the <span class=\"caps\">HTML</span> document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>document body of the given node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 84, "isStatic": true, "name": "getDocument"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node which should be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the owner document of the given node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The document of the given <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 125, "isStatic": true, "name": "getDocumentElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>node to inspect</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the document element. (Logical root node)</p>\n\n<p>This is a convenience attribute that allows direct access to the child\nnode that is the root element of the document. For <span class=\"caps\">HTML</span> documents,\nthis is the element with the tagName &#8220;HTML&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>document element of the given node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 251, "isStatic": true, "name": "getName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the node name as lower case string</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the node name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 270, "isStatic": true, "name": "getText"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node from where the search should start. If the node has subnodes the text contents are recursively retreived and joined.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the text content of an node where the node may be of node type\nNODE_ELEMENT, NODE_ATTRIBUTE, NODE_TEXT or NODE_CDATA</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the joined text content of the given node or null if not appropriate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 98, "isStatic": true, "name": "getWindow"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>node to inspect</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the DOM2 <code>defaultView</code> (window).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <code>defaultView</code> of the given node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"line": 302, "isStatic": true, "name": "isBlockNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given node is a block node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether it is a block node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 182, "isStatic": true, "name": "isDocument"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node which should be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given object is a <span class=\"caps\">DOM</span> document node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true when the node is a <span class=\"caps\">DOM</span> document</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 193, "isStatic": true, "name": "isDocumentFragment"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node which should be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given object is a <span class=\"caps\">DOM</span> document fragment node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true when the node is a <span class=\"caps\">DOM</span> document fragment</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 171, "isStatic": true, "name": "isElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node which should be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given object is a <span class=\"caps\">DOM</span> element node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true if the node is a <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 160, "isStatic": true, "name": "isNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node which should be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given object is a <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true if the node is a <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 227, "isStatic": true, "name": "isNodeName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}, {"attributes": {"name": "nodeName"}, "type": "param", "children": [{"attributes": {"text": "<p>the node name to check for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the node has the given node name</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the node has the given node name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 204, "isStatic": true, "name": "isText"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node which should be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given object is a <span class=\"caps\">DOM</span> text node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true if the node is a <span class=\"caps\">DOM</span> text node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 215, "isStatic": true, "name": "isWindow"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>the object which should be tested</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the given object is a browser window object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true if the object is a window object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"type": "Number", "name": "NOTATION", "value": "12"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "TEXT", "value": "3"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "ENTITY", "value": "6"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "DOCUMENT_TYPE", "value": "10"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "COMMENT", "value": "8"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "ENTITY_REFERENCE", "value": "5"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "DOCUMENT_FRAGMENT", "value": "11"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "DOCUMENT", "value": "9"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "ELEMENT", "value": "1"}, "type": "constant", "children": [{"attributes": {"text": "<p>Node type: * <span class=\"caps\">ELEMENT</span> * <span class=\"caps\">ATTRIBUTE</span> * <span class=\"caps\">TEXT</span> * CDATA_SECTION * ENTITY_REFERENCE * <span class=\"caps\">ENTITY</span> * PROCESSING_INSTRUCTION * <span class=\"caps\">COMMENT</span> * <span class=\"caps\">DOCUMENT</span> * DOCUMENT_TYPE * DOCUMENT_FRAGMENT * <span class=\"caps\">NOTATION</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"type": "Number", "name": "PROCESSING_INSTRUCTION", "value": "7"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "ATTRIBUTE", "value": "2"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "CDATA_SECTION", "value": "4"}, "type": "constant"}]}]}