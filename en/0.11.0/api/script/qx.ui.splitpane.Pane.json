{"attributes": {"fullName": "qx.ui.splitpane.Pane", "packageName": "qx.ui.splitpane", "type": "class", "name": "Pane", "superClass": "qx.ui.core.Widget"}, "type": "class", "children": [{"attributes": {"text": "<p>A split panes divides an area into two panes. The ratio between the two\npanes is configurable by the user using the splitter.</p>"}, "type": "desc"}, {"attributes": {}, "type": "childControls", "children": [{"attributes": {"name": "slider"}, "type": "childControl", "children": [{"attributes": {"text": "<p>shown during resizing the splitpane</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.splitpane.Slider"}, "type": "entry"}]}]}, {"attributes": {"name": "splitter"}, "type": "childControl", "children": [{"attributes": {"text": "<p>splitter to resize the splitpane</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.splitpane.Splitter"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 47, "isCtor": true, "overriddenFrom": "qx.ui.core.Widget", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "orientation"}, "type": "param", "children": [{"attributes": {"text": "<p>The orientation of the split pane control. Allowed values are &#8220;horizontal&#8221; (default) and &#8220;vertical&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new instance of a SplitPane. It allows the user to dynamically\nresize the areas dropping the border between.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"splitpane\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"check": "Integer", "apply": "_applyOffset", "defaultValue": "6", "name": "offset", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Distance between pointer and splitter when the cursor should change\nand enable resizing.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_applyOrientation", "defaultValue": "\"horizontal\"", "name": "orientation", "possibleValues": "\"horizontal\",\"vertical\"", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The orientation of the splitpane control.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 555, "name": "__computeSizes"}, "type": "method", "children": [{"attributes": {"text": "<p>Computes widgets&#8217; sizes based on the pointer coordinate.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 174, "name": "__createBlocker"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "orientation"}, "type": "param", "children": [{"attributes": {"text": "<p>The orientation of the pane.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a blocker for the splitter which takes all bouse events and\nalso handles the offset and cursor.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 163, "name": "__onSplitterMove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>The data even of move.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Move handler for the splitter which takes care of the external\ntriggered resize of children.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 280, "name": "__setBlockerPosition"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "bounds"}, "type": "param", "children": [{"attributes": {"text": "<p>If the bounds of the splitter are known, they can be added.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper for setting the blocker to the right position, which depends on\nthe offset, orientation and the current position of the splitter.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 268, "name": "_applyOffset"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.splitpane.Pane#offset"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>offset</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 227, "name": "_applyOrientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new value of the orientation property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old value of the orientation property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply routine for the orientation property.</p>\n\n<p>Sets the pane&#8217;s layout to vertical or horizontal split layout.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.splitpane.Pane#orientation"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 132, "overriddenFrom": "qx.ui.core.Widget", "name": "_createChildControlImpl"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param"}, {"attributes": {"name": "hash"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "line": 510, "name": "_finalizeSizes"}, "type": "method", "children": [{"attributes": {"text": "<p>Updates widgets&#8217; sizes based on the slider position.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 609, "name": "_isActiveDragSession"}, "type": "method", "children": [{"attributes": {"text": "<p>Determines whether this is an active drag session</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>True if active drag session, otherwise false.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 395, "name": "_onPointerDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointerdown event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for pointerdown event.</p>\n\n<p>Shows slider widget and starts drag session if pointer is near/on splitter widget.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 435, "name": "_onPointerMove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointermove event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for pointermove event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 467, "name": "_onPointerOut"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointerout event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for pointerout event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 480, "name": "_onPointerUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointerup event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for pointerup event</p>\n\n<p>Sets widget sizes if dragging session has been active.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 620, "name": "_setLastPointerPosition"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "x"}, "type": "param", "children": [{"attributes": {"text": "<p>the x position of the pointer.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "y"}, "type": "param", "children": [{"attributes": {"text": "<p>the y position of the pointer.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the last pointer position.</p>"}, "type": "desc"}]}, {"attributes": {"line": 349, "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>The widget to be inserted into pane.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"name": "flex"}, "type": "param", "children": [{"attributes": {"text": "<p>The (optional) layout property for the widget&#8217;s flex value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a widget to the pane.</p>\n\n<p>Sets the pane&#8217;s layout to vertical or horizontal split layout. Depending on the\npane&#8217;s layout the first widget will be the left or top widget, the second one\nthe bottom or right widget. Adding more than two widgets will overwrite the\nexisting ones.</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 207, "name": "getBlocker"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the blocker used over the splitter. this could be used for\nadding event listeners like tap or dbltap.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The used blocker element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.splitpane.Blocker"}, "type": "entry"}]}]}]}, {"attributes": {"line": 377, "name": "getChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns an array containing the pane&#8217;s content.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The pane&#8217;s child widgets</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOffset", "fromProperty": "offset"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>offset</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>offset</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOffset", "fromProperty": "offset"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>offset</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>offset</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>orientation</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 365, "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>The widget to be removed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given widget from the pane.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOffset", "fromProperty": "offset"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>offset</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>orientation</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setOffset", "fromProperty": "offset"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>offset</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>offset</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}]}