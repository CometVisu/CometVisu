{"attributes": {"fullName": "qx.bom.IdleCallback", "packageName": "qx.bom", "type": "bootstrap", "name": "IdleCallback", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>This is a cross browser wrapper for requestIdleCallback. For further\ninformation about the feature, take a look at spec:\n<a href=\"https://www.w3.org/TR/requestidlecallback/\">https://www.w3.org/TR/requestidlecallback/</a></p>\n\n<p>Here is a sample usage:</p>\n\n<pre class=\"javascript\">var cb = function(deadline) {\n  while (deadline.timeRemaining() > 0) {\n    // ... do some last tasks\n  }\n};\n\nqx.bom.IdleCallback.request(cb, this);\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 103, "isStatic": true, "name": "cancel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "handle"}, "type": "param", "children": [{"attributes": {"text": "<p>Handle acquired by <code>qx.bom.IdleCallback.request()</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Cancel a requested <span class=\"caps\">IDLE</span> callback.</p>"}, "type": "desc"}]}, {"attributes": {"line": 69, "isStatic": true, "name": "request"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The callback function which will get a deadline object. It contains a <code>timeRemaining()</code> call which returns the remaining milliseconds and the <code>didTimeout</code> flag which indicates whether the callback was fired due to a timeout. The latter is always false in case of the emulation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>The context of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "timeout"}, "type": "param", "children": [{"attributes": {"text": "<p>Timeout in milliseconds.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Request for an <span class=\"caps\">IDLE</span> callback. If the native <code>requestIdleCallback</code>\nmethod is supported, it will be used. Otherwise, we use timeouts with a\n30ms delay. The HighResolutionTime will be used if supported but the time given\nto the callback will still be a timestamp starting at 1 January 1970 00:00:00 <span class=\"caps\">UTC</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Handle for that request</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"type": "Number", "name": "REMAINING", "value": "250"}, "type": "constant", "children": [{"attributes": {"text": "<p>The default remaining time in ms the timeout fallback implementation uses. Since we\ncannot know how much time is available, this is a hard coded time bucket available\nfor actions done in the callback.</p>"}, "type": "desc"}]}, {"attributes": {"type": "Number", "name": "TIMEOUT", "value": "0"}, "type": "constant", "children": [{"attributes": {"text": "<p>The default time in ms the setTimeout() fallback implementation uses. There is no\nway to detect if the browser has some spare <span class=\"caps\">IDLE</span> time, it defaults to zero &#8211; meaning\nthat the callback will be called as soon as possible.</p>"}, "type": "desc"}]}]}]}