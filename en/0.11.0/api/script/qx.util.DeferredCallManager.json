{"attributes": {"name": "DeferredCallManager", "packageName": "qx.util", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "qx.util.DeferredCallManager", "type": "class", "interfaces": "qx.core.IDisposable"}, "type": "class", "children": [{"attributes": {"text": "<p>This class manages the timer used for deferred calls. All\n{@link qx.util.DeferredCall} instances use the single timer from this class.</p>\n\n<p><span class=\"caps\">NOTE</span>: Instances of this class must be disposed of after use</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 40, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 1, "name": "__timeout"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper function for the timer.</p>"}, "type": "desc"}]}, {"attributes": {"line": 107, "name": "cancel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "deferredCall"}, "type": "param", "children": [{"attributes": {"text": "<p>The call to schedule</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.util.DeferredCall"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Cancel a scheduled deferred call</p>"}, "type": "desc"}]}, {"attributes": {"line": 96, "name": "refreshTimeout"}, "type": "method", "children": [{"attributes": {"text": "<p>Refresh the timeout if the current one is not active anymore.\nThis is a very special case which can happen in unit tests using\nfakeTimers, which overrides the window.setTimeout function (amongst others)\nafter restoring the sinon sandbox the timeout must be refreshed otherwise\nDeferredCalls would never fire.</p>"}, "type": "desc"}]}, {"attributes": {"line": 70, "name": "schedule"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "deferredCall"}, "type": "param", "children": [{"attributes": {"text": "<p>The call to schedule</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.util.DeferredCall"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Schedule a deferred call</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 11, "isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.util.DeferredCallManager"}, "type": "entry"}]}]}]}]}]}