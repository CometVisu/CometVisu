{"attributes": {"name": "Event", "packageName": "qx.event.type", "superClass": "qx.core.Object", "childClasses": "qx.event.type.Data,qx.event.type.Drag,qx.event.type.Focus,qx.event.type.GeoPosition,qx.event.type.Native,qx.event.type.Orientation,qx.io.remote.Response", "fullName": "qx.event.type.Event", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Basic event object.</p>\n\n<p>Please note:\nEvent objects are only valid during the event dispatch. After the dispatch\nevent objects are pooled or disposed. If you want to safe a reference to an\nevent instance use the {@link #clone} method.</p>\n\n<p>The interface is modeled after the <span class=\"caps\">DOM</span> level 2 event interface:\n<a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface\">http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface</a></p>"}, "type": "desc"}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"type": "Number", "name": "CAPTURING_PHASE", "value": "1"}, "type": "constant", "children": [{"attributes": {"text": "<p>The current event phase is the capturing phase.</p>"}, "type": "desc"}]}, {"attributes": {"type": "Number", "name": "AT_TARGET", "value": "2"}, "type": "constant", "children": [{"attributes": {"text": "<p>The event is currently being evaluated at the target</p>"}, "type": "desc"}]}, {"attributes": {"type": "Number", "name": "BUBBLING_PHASE", "value": "3"}, "type": "constant", "children": [{"attributes": {"text": "<p>The current event phase is the bubbling phase.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 130, "overriddenFrom": "qx.core.Object", "name": "clone"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "embryo"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional event class, which will be configured using the data of this event instance. The event must be an instance of this event class. If the value is <code>null</code>, a new pooled instance is created.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Create a clone of the event object, which is not automatically disposed\nor pooled after an event dispatch.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a clone of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"line": 421, "name": "getBubbles"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether or not the event is a bubbling event. If the event can\nbubble the value is true, else the value is false.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the event bubbles</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 355, "name": "getCurrentTarget"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the event target node whose event listeners are currently being\nprocessed. This is particularly useful during event capturing and\nbubbling.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The target the event listener is currently dispatched on.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 269, "name": "getDefaultPrevented"}, "type": "method", "children": [{"attributes": {"text": "<p>Get whether the default action has been prevented</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the default action has been prevented</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 300, "name": "getEventPhase"}, "type": "method", "children": [{"attributes": {"text": "<p>Used to indicate which phase of event flow is currently being evaluated.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The current event phase. Possible values are {@link #CAPTURING_PHASE}, {@link #AT_TARGET} and {@link #BUBBLING_PHASE}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 400, "name": "getOriginalTarget"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the original event target. This is only configured\nfor events which are fired by another event (often when\nthe target should be reconfigured for another view) e.g.\nlow-level <span class=\"caps\">DOM</span> event to widget event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The original target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 192, "name": "getPropagationStopped"}, "type": "method", "children": [{"attributes": {"text": "<p>Get whether further event propagation has been stopped.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether further propagation has been stopped.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 377, "name": "getRelatedTarget"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the related event target. This is only configured for\nevents which also had an influences on another element e.g.\nmouseover/mouseout, focus/blur, ...</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The related target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 332, "name": "getTarget"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the event target to which the event was originally\ndispatched.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>target to which the event was originally dispatched.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 320, "name": "getTimeStamp"}, "type": "method", "children": [{"attributes": {"text": "<p>The time (in milliseconds relative to the epoch) at which the event was created.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the timestamp the event was created.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 279, "name": "getType"}, "type": "method", "children": [{"attributes": {"text": "<p>The name of the event</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>name of the event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 88, "name": "init"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "canBubble"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether or not the event is a bubbling event. If the event is bubbling, the bubbling can be stopped using {@link #stopPropagation}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "cancelable"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether or not an event can have its default action prevented. The default action can either be the browser&#8217;s default action of a native event (e.g. open the context menu on a right click) or the default action of a qooxdoo class (e.g. close the window widget). The default action can be prevented by calling {@link #preventDefault}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Initialize the fields of the event. The event must be initialized before\nit can be dispatched.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The initialized event instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"line": 441, "name": "isCancelable"}, "type": "method", "children": [{"attributes": {"text": "<p>Get whether the event is cancelable</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the event is cancelable</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 202, "name": "preventDefault"}, "type": "method", "children": [{"attributes": {"text": "<p>Prevent the default action of cancelable events, e.g. opening the context\nmenu, ...</p>"}, "type": "desc"}]}, {"attributes": {"line": 431, "name": "setBubbles"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "bubbles"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the event bubbles</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set whether the event bubbles.</p>"}, "type": "desc"}]}, {"attributes": {"line": 451, "name": "setCancelable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "cancelable"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the event is cancelable</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set whether the event is cancelable</p>"}, "type": "desc"}]}, {"attributes": {"line": 365, "name": "setCurrentTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "currentTarget"}, "type": "param", "children": [{"attributes": {"text": "<p>new current target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Override current target.</p>"}, "type": "desc"}]}, {"attributes": {"line": 310, "name": "setEventPhase"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "eventPhase"}, "type": "param", "children": [{"attributes": {"text": "<p>new event phase</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Override the event phase</p>"}, "type": "desc"}]}, {"attributes": {"line": 410, "name": "setOriginalTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "originalTarget"}, "type": "param", "children": [{"attributes": {"text": "<p>new original target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Override original target.</p>"}, "type": "desc"}]}, {"attributes": {"line": 387, "name": "setRelatedTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "relatedTarget"}, "type": "param", "children": [{"attributes": {"text": "<p>new related target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Override related target.</p>"}, "type": "desc"}]}, {"attributes": {"line": 342, "name": "setTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>new event target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Override event target.</p>"}, "type": "desc"}]}, {"attributes": {"line": 289, "name": "setType"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>new event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Override the event type</p>"}, "type": "desc"}]}, {"attributes": {"line": 159, "name": "stop"}, "type": "method", "children": [{"attributes": {"text": "<p>Stops event from all further processing. Execute this when the\ncurrent handler should have &#8220;exclusive rights&#8221; to the event\nand no further reaction by anyone else should happen.</p>"}, "type": "desc"}]}, {"attributes": {"line": 178, "name": "stopPropagation"}, "type": "method", "children": [{"attributes": {"text": "<p>This method is used to prevent further propagation of an event during event\nflow. If this method is called by any event listener the event will cease\npropagating through the tree. The event will complete dispatch to all listeners\non the current event target before event flow stops.</p>"}, "type": "desc"}]}]}]}