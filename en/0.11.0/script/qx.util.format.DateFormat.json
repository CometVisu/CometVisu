{"attributes": {"name": "DateFormat", "hasWarning": true, "interfaces": "qx.util.format.IFormat", "superClass": "qx.core.Object", "fullName": "qx.util.format.DateFormat", "type": "class", "packageName": "qx.util.format"}, "type": "class", "children": [{"attributes": {"text": "<p>A formatter and parser for dates, see\n<a href=\"http://www.unicode.org/reports/tr35/#Date_Format_Patterns\">http://www.unicode.org/reports/tr35/#Date_Format_Patterns</a></p>\n\n<p>Here is a quick overview of the format pattern keys:\n<table>\n<tr><th>Key &nbsp;<th>Description\n<tr><td><code> G </code><td> era, e.g. &#8220;AD&#8221;\n<tr><td><code> y </code><td> year\n<tr><td><code> Y </code><td> week year\n<tr><td><code> u </code><td> extended year [Not supported yet]\n<tr><td><code> Q </code><td> quarter\n<tr><td><code> q </code><td> stand-alone quarter\n<tr><td><code> M </code><td> month\n<tr><td><code> L </code><td> stand-alone month\n<tr><td><code> I </code><td> chinese leap month [Not supported yet]\n<tr><td><code> w </code><td> week of year\n<tr><td><code> W </code><td> week of month\n<tr><td><code> d </code><td> day of month\n<tr><td><code> D </code><td> day of year\n<tr><td><code> F </code><td> day of week in month [Not supported yet]\n<tr><td><code> g </code><td> modified Julian day [Not supported yet]\n<tr><td><code> E </code><td> day of week\n<tr><td><code> e </code><td> local day of week\n<tr><td><code> c </code><td> stand-alone local day of week\n<tr><td><code> a </code><td> period of day (am or pm)\n<tr><td><code> h </code><td> 12-hour hour\n<tr><td><code> H </code><td> 24-hour hour\n<tr><td><code> K </code><td> hour [0-11]\n<tr><td><code> k </code><td> hour [1-24]\n<tr><td><code> j </code><td> special symbol [Not supported yet]\n<tr><td><code> m </code><td> minute\n<tr><td><code> s </code><td> second\n<tr><td><code> S </code><td> fractional second\n<tr><td><code> A </code><td> millisecond in day [Not supported yet]\n<tr><td><code> z </code><td> time zone, specific non-location format\n<tr><td><code> Z </code><td> time zone, rfc822/gmt format\n<tr><td><code> v </code><td> time zone, generic non-location format [Not supported yet]\n<tr><td><code> V </code><td> time zone, like z except metazone abbreviations [Not supported yet]\n</table></p>\n\n<p>(This list is preliminary, not all format keys might be implemented). Most\nkeys support repetitions that influence the meaning of the format. Parts of the\nformat string that should not be interpreted as format keys have to be\nsingle-quoted.</p>\n\n<p>The same format patterns will be used for both parsing and output formatting.</p>\n\n<p><span class=\"caps\">NOTE</span>: Instances of this class must be disposed of after use</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 90, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "format"}, "type": "param", "children": [{"attributes": {"text": "<p>The format to use. If null, the locale&#8217;s default format is used.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "locale"}, "type": "param", "children": [{"attributes": {"text": "<p>optional locale to be used. In case this is not present, the {@link #locale} property of DateFormat will be following the {@link qx.locale.Manager#locale} property of qx.locale.Manager</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "ISO_MASKS"}, "type": "constant", "children": [{"attributes": {"text": "<p>Special masks of patterns that are used frequently</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"type": "String", "name": "PM_MARKER", "value": "pm"}, "type": "constant", "children": [{"attributes": {"text": "<p>The pm marker.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"type": "Number", "name": "ASSUME_YEAR_2000_THRESHOLD", "value": "30"}, "type": "constant", "children": [{"attributes": {"text": "<p>The threshold until when a year should be assumed to belong to the 21st century (e.g. 12 -> 2012). Years over this threshold but below 100 will be assumed to belong to the 20th century (e.g. 88 -> 1988). Years over 100 will be used unchanged (e.g. 1792 -> 1792).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"type": "String", "name": "AM_MARKER", "value": "am"}, "type": "constant", "children": [{"attributes": {"text": "<p>The am marker.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 131, "isStatic": true, "name": "getDateInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Convenience factory that returns a <code>DateFomat</code> instance that\nuses a short date-only format. Beware that the overall layout of the\ndate/time format string is that of the locale in effect when the factory\nfunction is called.</p>\n\n<p>Implemented as a quasi-singleton, so beware of side effects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a DateFormat instance.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "DateFormat"}, "type": "entry"}]}]}]}, {"attributes": {"line": 156, "isStatic": true, "name": "getDateTimeInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Convenience factory that returns a <code>DateFomat</code> instance that\nuses a long date/time format. Beware that the overall layout of the\ndate/time format string is that of the locale in effect when the factory\nfunction is called.</p>\n\n<p>Implemented as a quasi-singleton, so beware of side effects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a DateFormat instance.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "DateFormat"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 221, "name": "__fillNumber"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "number"}, "type": "param", "children": [{"attributes": {"text": "<p>the number to fill.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "minSize"}, "type": "param", "children": [{"attributes": {"text": "<p>the minimum size the returned string should have.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fills a number with leading zeros (&#8220;25&#8221; -> &#8220;0025&#8221;).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the filled number as string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 239, "name": "__getDayInYear"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>the date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the day in year of a date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the day in year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 337, "name": "__getMonthAndDayFromDayOfYear"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "dayOfYear"}, "type": "param", "children": [{"attributes": {"text": "<p>the day of year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "year"}, "type": "param", "children": [{"attributes": {"text": "<p>the year to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a json object with month and day as keys.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a json object {month: M, day: D}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 295, "name": "__getWeekInMonth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>the date to get the week in year of.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the week in month of a date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the week in month.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 272, "name": "__getWeekInYear"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>the date to get the week in year of.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the week in year of a date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the week in year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 311, "name": "__getWeekYear"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>the date to get the week in year of.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the week year of a date. (that is the year of the week where this date happens to be)\nFor a week in the middle of the summer, the year is easily obtained, but for a week\nwhen New Year&#8217;s Eve takes place, the year of that week is ambiguous.\nThe thursday day of that week is used to determine the year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the week year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 375, "name": "__getYearFromWeekYearAndMonth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "weekYear"}, "type": "param", "children": [{"attributes": {"text": "<p>the week year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "month"}, "type": "param", "children": [{"attributes": {"text": "<p>the month</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "dayOfMonth"}, "type": "param", "children": [{"attributes": {"text": "<p>the day in month</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the year of a date when we know the week year</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 838, "name": "__initFormatTree"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method for {@link #format()} and {@link #parse()}.\nParses the date format.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1014, "name": "__initParseFeed"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the parse feed.</p>\n\n<p>The parse contains everything needed for parsing: The regular expression\n(in compiled and uncompiled form) and the used rules.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the date format is malformed.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"access": "private", "line": 1129, "name": "__initParseRules"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the static parse rules.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 323, "name": "__isLeapYear"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "year"}, "type": "param", "children": [{"attributes": {"text": "<p>the year to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns true if the year is a leap one.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true if it is a leap year.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1108, "name": "__isRuleForWildcard"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "rule"}, "type": "param", "children": [{"attributes": {"text": "<p>the rule we try to match with the wildcard</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "wildcardChar"}, "type": "param", "children": [{"attributes": {"text": "<p>the character in the wildcard</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "wildcardSize"}, "type": "param", "children": [{"attributes": {"text": "<p>the number of  wildcardChar characters in the wildcard</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks whether the rule matches the wildcard or not.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>if the rule matches or not</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 261, "name": "__thursdayOfSameWeek"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>the date to get the thursday of.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the thursday in the same week as the date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the thursday in the same week as the date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"line": 434, "name": "format"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "date"}, "type": "param", "children": [{"attributes": {"text": "<p>The date to format.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Formats a date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the formatted date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 420, "hasError": true, "name": "getLocale"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the locale</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Missing documentation for return value.", "column": 17, "line": 420}, "type": "error"}]}]}, {"attributes": {"line": 727, "name": "parse"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "dateStr"}, "type": "param", "children": [{"attributes": {"text": "<p>the date to parse.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Parses a date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the parsed date.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Date"}, "type": "entry"}]}]}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the format is not well formed or if the date string does not match to the format.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 413, "name": "resetLocale"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the Locale</p>"}, "type": "desc"}]}, {"attributes": {"line": 402, "name": "setLocale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the new value for locale property</p>"}, "type": "desc"}]}]}]}