{"attributes": {"fullName": "qx.ui.embed.Canvas", "packageName": "qx.ui.embed", "type": "class", "name": "Canvas", "superClass": "qx.ui.core.Widget"}, "type": "class", "children": [{"attributes": {"text": "<p>The Canvas widget embeds the <span class=\"caps\">HMTL</span> canvas element\n[<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#the-canvas\">W3C-HTML5</a>]</p>\n\n<p>Note: This widget does not work in Internet Explorer < 9!\nCheck for browser support with qx.core.Environment.get(&#8220;html.canvas&#8221;).</p>\n\n<p>To paint something on the canvas and keep the content updated on resizes you\neither have to override the {@link #_draw} method or redraw the content on\nthe {@link #redraw} event. The drawing context can be obtained by {@link #getContext2d}.</p>\n\n<p>Note that this widget operates on two different coordinate systems. The canvas\nhas its own coordinate system for drawing operations. This canvas coordinate\nsystem is scaled to fit actual size of the <span class=\"caps\">DOM</span> element. Each time the size of\nthe canvas dimensions is changed a redraw is required. In this case the\nprotected method {@link #_draw} is called and the event {@link #redraw}\nis fired. You can synchronize the internal canvas dimension with the\n<span class=\"caps\">CSS</span> dimension of the canvas element by setting {@link #syncDimension} to\n<code>true</code>.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the canvas widget.</p>\n\n<pre class=\"javascript\">\nvar canvas = new qx.ui.embed.Canvas().set({\n  canvasWidth: 200,\n  canvasHeight: 200,\n  syncDimension: true\n});\ncanvas.addListener(\"redraw\", function(e)\n{\n  var data = e.getData();\n  var width = data.width;\n  var height = data.height;\n  var ctx = data.context;\n\n  ctx.fillStyle = \"rgb(200,0,0)\";\n  ctx.fillRect (20, 20, width-5, height-5);\n\n  ctx.fillStyle = \"rgba(0, 0, 200, 0.5)\";\n  ctx.fillRect (70, 70, 105, 100);\n}, this);\n</pre>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://manual.qooxdoo.org/6.0.0-alpha/pages/widget/canvas.html\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo manual.</a>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 85, "isCtor": true, "overriddenFrom": "qx.ui.core.Widget", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "canvasWidth"}, "type": "param", "children": [{"attributes": {"text": "<p>The internal with of the canvas coordinates.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "canvasHeight"}, "type": "param", "children": [{"attributes": {"text": "<p>The internal height of the canvas coordinates.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "redraw"}, "type": "event", "children": [{"attributes": {"text": "<p>The redraw event is fired each time the canvas dimension change and the\ncanvas needs to be updated. The data field contains a map containing the\n<code>width</code> and <code>height</code> of the canvas and the\nrendering <code>context</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 182, "name": "__redraw"}, "type": "method", "children": [{"attributes": {"text": "<p>This methods triggers the redraw of the canvas&#8217; content</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 211, "name": "_applyCanvasHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.embed.Canvas#canvasHeight"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>canvasHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasHeight}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 203, "name": "_applyCanvasWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.embed.Canvas#canvasWidth"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>canvasWidth</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasWidth}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 174, "overriddenFrom": "qx.ui.core.Widget", "name": "_createContentElement"}, "type": "method"}, {"attributes": {"access": "protected", "line": 264, "name": "_draw"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "width"}, "type": "param", "children": [{"attributes": {"text": "<p>New canvas width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "height"}, "type": "param", "children": [{"attributes": {"text": "<p>New canvas height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>The rendering context to draw to</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "CanvasRenderingContext2D"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Template method, which can be used by derived classes to redraw the\ncontent. It is called each time the canvas dimension change and the\ncanvas needs to be updated.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 231, "name": "_onResize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>The resize event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Widget resize event handler. Updates the canvas dimension if needed.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getCanvasHeight", "fromProperty": "canvasHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>canvasHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasHeight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>canvasHeight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCanvasWidth", "fromProperty": "canvasWidth"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>canvasWidth</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasWidth}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>canvasWidth</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 250, "name": "getContext2d"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the native canvas 2D rendering context\n[<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasrenderingcontext2d\">W3C-HTML5</a>].\nAll drawing operations are performed on this context.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The 2D rendering context.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "CanvasRenderingContext2D"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSyncDimension", "fromProperty": "syncDimension"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>syncDimension</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #syncDimension}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>syncDimension</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initCanvasHeight", "fromProperty": "canvasHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>canvasHeight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>canvasHeight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasHeight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initCanvasWidth", "fromProperty": "canvasWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>canvasWidth</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>canvasWidth</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasWidth}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSyncDimension", "fromProperty": "syncDimension"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>syncDimension</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>syncDimension</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #syncDimension}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isSyncDimension", "fromProperty": "syncDimension"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>syncDimension</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #syncDimension}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetCanvasHeight", "fromProperty": "canvasHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>canvasHeight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasHeight}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetCanvasWidth", "fromProperty": "canvasWidth"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>canvasWidth</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasWidth}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSyncDimension", "fromProperty": "syncDimension"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>syncDimension</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #syncDimension}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setCanvasHeight", "fromProperty": "canvasHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>canvasHeight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>canvasHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasHeight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setCanvasWidth", "fromProperty": "canvasWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>canvasWidth</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>canvasWidth</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #canvasWidth}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSyncDimension", "fromProperty": "syncDimension"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>syncDimension</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>syncDimension</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #syncDimension}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleSyncDimension", "fromProperty": "syncDimension"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>syncDimension</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #syncDimension}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 221, "name": "update"}, "type": "method", "children": [{"attributes": {"text": "<p>Redraw the canvas</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Integer", "apply": "_applyCanvasHeight", "defaultValue": "150", "name": "canvasHeight", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The internal height of the canvas coordinates</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "apply": "_applyCanvasWidth", "defaultValue": "300", "name": "canvasWidth", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The internal with of the canvas coordinates</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "false", "name": "syncDimension", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether canvas and widget coordinates should be synchronized</p>"}, "type": "desc"}]}]}]}