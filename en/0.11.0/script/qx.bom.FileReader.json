{"attributes": {"name": "FileReader", "packageName": "qx.bom", "superClass": "qx.core.Object", "fullName": "qx.bom.FileReader", "type": "class", "interfaces": "qx.core.IDisposable"}, "type": "class", "children": [{"attributes": {"text": "<p>FileReaders allow retrieving the data from a local file, after the file\nname was selected by an &lt;input type=&#8220;file&#8221;&gt; element.</p>\n\n<p><span class=\"caps\">NOTE</span>: Instances of this class must be disposed of after use</p>\n\n<p>For more information see:\n<a href=\"http://www.w3.org/TR/FileAPI/\">http://www.w3.org/TR/FileAPI/</a></p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 38, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {"text": "<p>Create a new instance.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "abort"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when progression has failed, after the last &#8220;progress&#8221; has been\ndispatched, or after &#8220;loadstart&#8221; has been dispatched, if &#8220;progress&#8221; has\nnot been dispatched&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "error"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when an error occurs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "load"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when progression is successful</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "loadend"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when progress has stopped, after any of &#8220;error&#8221;, &#8220;abort&#8221;, or\n&#8220;load&#8221; have been dispatched.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "loadstart"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when progress has begun.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "progress"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired while making progress, presumably at a minimum of every 50ms</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 140, "isStatic": true, "name": "getFile"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "inputElement"}, "type": "param", "children": [{"attributes": {"text": "<p>The Element created as a result of an &lt;input type=&#8220;file&#8221;&gt; tag.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the selected file to return.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return the native File object selected from an &lt;input type=&#8220;file&#8221;&gt;\nelement.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The File object associated with the selected file name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "File"}, "type": "entry"}]}]}]}, {"attributes": {"line": 122, "isStatic": true, "name": "getNumFiles"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "inputElement"}, "type": "param", "children": [{"attributes": {"text": "<p>The Element created as a result of an &lt;input type=&#8220;file&#8221;&gt; tag.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return the number of files selected by the user, from an &lt;input\ntype=&#8220;file&#8221;&gt; element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The number of selected files.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 280, "name": "_handleAbort"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Object which contains a &#8216;progress&#8217; object which contains the members: &#8211; lengthComputable {Boolean} True if length is known; false otherwise &#8211; loaded {Number} The number of bytes transferred so far &#8211; total {Number} The length of the entire body being transferred</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>&#8220;abort&#8221; handler</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 266, "name": "_handleError"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Object which contains a &#8216;progress&#8217; object which contains the members: &#8211; lengthComputable {Boolean} True if length is known; false otherwise &#8211; loaded {Number} The number of bytes transferred so far &#8211; total {Number} The length of the entire body being transferred</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>&#8220;error&#8221; handler</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 296, "name": "_handleLoad"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Object which contains: &#8211; A &#8216;progress&#8217; object which contains the members: &#8211; lengthComputable {Boolean} True if length is known; false otherwise &#8211; loaded {Number} The number of bytes transferred so far &#8211; total {Number} The length of the entire body being transferred &#8211; A &#8216;content&#8217; member which contains the loaded file content</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>&#8220;load&#8221; handler</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 315, "name": "_handleLoadEnd"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Object which contains a &#8216;progress&#8217; object which contains  the members: &#8211; lengthComputable {Boolean} True if length is known; false otherwise &#8211; loaded {Number} The number of bytes transferred so far &#8211; total {Number} The length of the entire body being transferred</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>&#8220;loadend&#8221; handler</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 238, "name": "_handleLoadStart"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Object which contains a &#8216;progress&#8217; object which contains the members: &#8211; lengthComputable {Boolean} True if length is known; false otherwise &#8211; loaded {Number} The number of bytes transferred so far &#8211; total {Number} The length of the entire body being transferred</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>&#8220;loadstart&#8221; handler</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 252, "name": "_handleProgress"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Object which contains a &#8216;progress&#8217; object which contains the members: &#8211; lengthComputable {Boolean} True if length is known; false otherwise &#8211; loaded {Number} The number of bytes transferred so far &#8211; total {Number} The length of the entire body being transferred</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>&#8220;progress&#8221; handler</p>"}, "type": "desc"}]}, {"attributes": {"line": 163, "name": "readAsArrayBuffer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fileObj"}, "type": "param", "children": [{"attributes": {"text": "<p>A File object, as obtained by calling {@link #getFile} with an element of type &lt;input type=&#8220;file&#8221;&gt;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "File"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Begin reading from the file referenced by the specified file\nobject. This is an asynchronous request. When the file is fully loaded,\nthe &#8220;load&#8221; event will be fired.</p>\n\n<p>The data will be provided as an ArrayBuffer object.</p>"}, "type": "desc"}]}, {"attributes": {"line": 183, "name": "readAsBinaryString"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fileObj"}, "type": "param", "children": [{"attributes": {"text": "<p>A File object, as obtained by calling {@link #getFile} with an element of type &lt;input type=&#8220;file&#8221;&gt;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "File"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Begin reading from the file referenced by the specified file\nobject. This is an asynchronous request. When the file is fully loaded,\nthe &#8220;load&#8221; event will be fired.</p>\n\n<p>The data will be provided in a binary format where each byte is in the\nrange [0,255].</p>\n\n<p><span class=\"caps\">NOTE</span>: On FireFox, this method works if the page was loaded via the\nfile:// protocol. In Chrome, it does not.</p>"}, "type": "desc"}]}, {"attributes": {"line": 224, "name": "readAsDataURL"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fileObj"}, "type": "param", "children": [{"attributes": {"text": "<p>A File object, as obtained by calling {@link #getFile} with an element of type &lt;input type=&#8220;file&#8221;&gt;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "File"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Begin reading from the file referenced by the specified file\nobject. This is an asynchronous request. When the file is fully loaded,\nthe &#8220;load&#8221; event will be fired.</p>\n\n<p>The data is returned in DataURL format.</p>\n\n<p><span class=\"caps\">NOTE</span>: On FireFox, this method works if the page was loaded via the\nfile:// protocol. In Chrome, it does not.</p>"}, "type": "desc"}]}, {"attributes": {"line": 205, "name": "readAsText"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fileObj"}, "type": "param", "children": [{"attributes": {"text": "<p>A File object, as obtained by calling {@link #getFile} with an element of type &lt;input type=&#8220;file&#8221;&gt;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "File"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"UTF-8\"", "optional": true, "name": "encoding"}, "type": "param", "children": [{"attributes": {"text": "<p>The encoding for the resulting string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Begin reading from the file referenced by the specified file\nobject. This is an asynchronous request. When the file is fully loaded,\nthe &#8220;load&#8221; event will be fired.</p>\n\n<p>The data will be provided as text, in the specified encoding.</p>\n\n<p><span class=\"caps\">NOTE</span>: On FireFox, this method works if the page was loaded via the\nfile:// protocol. In Chrome, it does not.</p>"}, "type": "desc"}]}]}]}