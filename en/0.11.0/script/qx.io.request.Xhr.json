{"attributes": {"fullName": "qx.io.request.Xhr", "packageName": "qx.io.request", "type": "class", "name": "Xhr", "superClass": "qx.io.request.AbstractRequest"}, "type": "class", "children": [{"attributes": {"text": "<p>Send <span class=\"caps\">HTTP</span> requests and handle responses using the <span class=\"caps\">HTTP</span> client <span class=\"caps\">API</span>.</p>\n\n<p>Configuration of the request is done with properties. Events are fired for\nvarious states in the life cycle of a request, such as &#8220;success&#8221;. Request\ndata is transparently processed.</p>\n\n<p>Here is how to request a <span class=\"caps\">JSON</span> file and listen to the &#8220;success&#8221; event:</p>\n\n<pre class=\"javascript\">\nvar req = new qx.io.request.Xhr(\"/some/path/file.json\");\n\nreq.addListener(\"success\", function(e) {\n  var req = e.getTarget();\n\n  // Response parsed according to the server's\n  // response content type, e.g. JSON\n  req.getResponse();\n}, this);\n\n// Send request\nreq.send();\n</pre>\n\n<p>Some noteable features:</p>\n\n<ul>\n<li>Abstraction of low-level request</li>\n<li>Convenient setup using properties</li>\n<li>Fine-grained events</li>\n<li>Symbolic phases</li>\n<li>Transparent processing of request data</li>\n<li>Stream-lined authentication</li>\n<li>Automagic parsing of response based on content type</li>\n</ul>\n\n<p>Cross-origin requests are supported, but require browser support\n(see <a href=\"http://caniuse.com/#search=CORS\">caniuse.com</a>) and backend configuration\n(see <a href=\"https://developer.mozilla.org/en-US/docs/docs/HTTP/Access_control_CORS><span class=\"><span class=\"caps\">MDN</span></a>).\nNote that IE&#8217;s <code>XDomainRequest</code> is not currently supported.\nFor a cross-browser alternative, consider {@link qx.io.request.Jsonp}.</p>\n\n<p>In order to debug requests, set the environment flag\n<code>qx.debug.io</code>.</p>\n\n<p>Internally uses {@link qx.bom.request.Xhr}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 72, "isCtor": true, "overriddenFrom": "qx.io.request.AbstractRequest", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">URL</span> of the resource to request.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "method"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">HTTP</span> method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "load"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when request completes without error.</p>\n\n<p>Every request not canceled or aborted completes. This means that\neven requests receiving a response with erroneous <span class=\"caps\">HTTP</span> status\nfire a &#8220;load&#8221; event. If you are only interested in successful\nresponses, listen to the {@link #success} event instead.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "readyStateChange"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired on every change of the transport&#8217;s readyState.</p>\n\n<p>See {@link qx.bom.request.Xhr} for available readyStates.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "statusError"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when request completes without error but erroneous <span class=\"caps\">HTTP</span> status.</p>\n\n<p>Refer to {@link qx.util.Request#isSuccessful} for a list of <span class=\"caps\">HTTP</span>\nstatus considered successful.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "success"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when request completes without error and transport status\nindicates success.</p>\n\n<p>Refer to {@link qx.util.Request#isSuccessful} for a list of <span class=\"caps\">HTTP</span>\nstatus considered successful.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 293, "name": "_createResponseParser"}, "type": "method", "children": [{"attributes": {"text": "<p>Create response parser.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>parser.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.util.ResponseParser"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 212, "overriddenFrom": "qx.io.request.AbstractRequest", "name": "_createTransport"}, "type": "method", "children": [{"attributes": {"text": "<p>Create <span class=\"caps\">XHR</span> transport.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Transport.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.request.Xhr"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.io.request.AbstractRequest", "line": 242, "overriddenFrom": "qx.io.request.AbstractRequest", "name": "_getConfiguredRequestHeaders"}, "type": "method"}, {"attributes": {"access": "protected", "line": 224, "overriddenFrom": "qx.io.request.AbstractRequest", "name": "_getConfiguredUrl"}, "type": "method", "children": [{"attributes": {"text": "<p>Get configured <span class=\"caps\">URL</span>.</p>\n\n<p>Append request data to <span class=\"caps\">URL</span> if <span class=\"caps\">HTTP</span> method is <span class=\"caps\">GET</span>. Append random\nstring to <span class=\"caps\">URL</span> if required by value of {@link #cache}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The configured <span class=\"caps\">URL</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.io.request.AbstractRequest", "line": 273, "overriddenFrom": "qx.io.request.AbstractRequest", "name": "_getMethod"}, "type": "method"}, {"attributes": {"access": "protected", "line": 302, "overriddenFrom": "qx.io.request.AbstractRequest", "name": "_getParsedResponse"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns response parsed with parser determined by content type.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parsed response of the request.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.io.request.AbstractRequest", "line": 278, "overriddenFrom": "qx.io.request.AbstractRequest", "name": "_isAsync"}, "type": "method"}, {"attributes": {"name": "getAccept", "fromProperty": "accept"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>accept</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #accept}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>accept</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAsync", "fromProperty": "async"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>async</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #async}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>async</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCache", "fromProperty": "cache"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>cache</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cache}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>cache</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getMethod", "fromProperty": "method"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>method</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #method}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>method</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAccept", "fromProperty": "accept"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>accept</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>accept</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #accept}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAsync", "fromProperty": "async"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>async</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>async</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #async}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initCache", "fromProperty": "cache"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>cache</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>cache</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #cache}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initMethod", "fromProperty": "method"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>method</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>method</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #method}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isAsync", "fromProperty": "async"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>async</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #async}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetAccept", "fromProperty": "accept"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>accept</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #accept}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetAsync", "fromProperty": "async"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>async</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #async}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetCache", "fromProperty": "cache"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>cache</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #cache}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetMethod", "fromProperty": "method"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>method</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #method}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setAccept", "fromProperty": "accept"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>accept</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>accept</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #accept}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAsync", "fromProperty": "async"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>async</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>async</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #async}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setCache", "fromProperty": "cache"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>cache</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>cache</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cache}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setMethod", "fromProperty": "method"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>method</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>method</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #method}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 330, "name": "setParser"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "parser"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set parser used to parse response once request has\ncompleted successfully.</p>"}, "type": "desc"}, {"attributes": {"name": "qx.util.ResponseParser#setParser"}, "type": "see", "children": [{"attributes": {"text": ""}, "type": "desc"}]}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parser function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleAsync", "fromProperty": "async"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>async</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #async}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "String", "allowNull": "true", "name": "accept", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The content type to accept. By default, every content type\nis accepted.</p>\n\n<p>Note: Some backends send distinct representations of the same\nresource depending on the content type accepted. For instance,\na backend may respond with either a <span class=\"caps\">JSON</span> (the accept header\nindicates so) or a <span class=\"caps\">HTML</span> representation (the default, no accept\nheader given).</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "true", "name": "async", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the request should be executed asynchronously.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Custom check function.", "defaultValue": "true", "name": "cache", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether to allow request to be answered from cache.</p>\n\n<p>Allowed values:</p>\n\n<ul>\n<li><code>true</code>: Allow caching (Default)</li>\n<li><code>false</code>: Prohibit caching. Appends nocache parameter to <span class=\"caps\">URL</span>.</li>\n<li><code>String</code>: Any Cache-Control request directive</li>\n</ul>\n\n<p>If a string is given, it is inserted in the request&#8217;s Cache-Control\nheader. A request&#8217;s Cache-Control header may contain a number of directives\ncontrolling the behavior of any caches in between client and origin\nserver.</p>\n\n<ul>\n<li><code>&#8220;no-cache&#8221;</code>: Force caches to submit request in order to<br />\n  validate the freshness of the representation. Note that the requested<br />\n  resource may still be served from cache if the representation is<br />\n  considered fresh. Use this directive to ensure freshness but save<br />\n  bandwidth when possible.</li>\n<li><code>&#8220;no-store&#8221;</code>: Do not keep a copy of the representation under<br />\n  any conditions.</li>\n</ul>\n\n<p>See <a href=\"http://www.mnot.net/cache_docs/#CACHE-CONTROL\">\nCaching tutorial</a> for an excellent introduction to Caching in general.\nRefer to the corresponding section in the\n<a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">\n<span class=\"caps\">HTTP</span> 1.1 specification</a> for more details and advanced directives.</p>\n\n<p>It is recommended to choose an appropriate Cache-Control directive rather\nthan prohibit caching using the nocache parameter.</p>"}, "type": "desc"}]}, {"attributes": {"defaultValue": "\"GET\"", "name": "method", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">HTTP</span> method.</p>"}, "type": "desc"}]}]}]}