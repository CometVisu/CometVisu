{"attributes": {"name": "List", "packageName": "qx.data.controller", "mixins": "qx.data.controller.MSelection", "superClass": "qx.core.Object", "fullName": "qx.data.controller.List", "type": "class", "interfaces": "qx.data.controller.ISelection"}, "type": "class", "children": [{"attributes": {"text": "<h2>List Controller</h2>\n\n<p><strong>General idea</strong>\nThe list controller is responsible for synchronizing every list like widget\nwith a data array. It does not matter if the array contains atomic values\nlike strings of complete objects where one property holds the value for\nthe label and another property holds the icon url. You can even use converters\nthat make the label show a text corresponding to the icon, by binding both\nlabel and icon to the same model property and converting one of them.</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li>Synchronize the model and the target</li>\n<li>Label and icon are bindable</li>\n<li>Takes care of the selection</li>\n<li>Passes on the options used by {@link qx.data.SingleValueBinding#bind}</li>\n</ul>\n\n<p><strong>Usage</strong></p>\n\n<p>As model, only {@link qx.data.Array}s do work. The currently supported\ntargets are</p>\n\n<ul>\n<li>{@link qx.ui.form.SelectBox}</li>\n<li>{@link qx.ui.form.List}</li>\n<li>{@link qx.ui.form.ComboBox}</li>\n</ul>\n\n<p>All the properties like model, target or any property path is bindable.\nEspecially the model is nice to bind to another selection for example.\nThe controller itself can only work if it has a model and a target set. The\nrest of the properties may be empty.</p>\n\n<p><strong>Cross reference</strong></p>\n\n<ul>\n<li>If you want to bind single values, use {@link qx.data.controller.Object}</li>\n<li>If you want to bind a tree widget, use {@link qx.data.controller.Tree}</li>\n<li>If you want to bind a form widget, use {@link qx.data.controller.Form}</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 80, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The array containing the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The widget which should show the ListItems.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "labelPath"}, "type": "param", "children": [{"attributes": {"text": "<p>If the model contains objects, the labelPath is the path reference to the property in these objects which should be shown as label.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeDelegate"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #delegate}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeModel"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #model}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeTarget"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #target}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 538, "name": "__addItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the item to add.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper to add ListItems to the target including the creation\nof the binding.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 979, "name": "__buildUpLookupTable"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper-Method which builds up the index lookup for the filter feature.\nIf no filter is set, the lookup table will be a 1:1 mapping.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 408, "name": "__changeModel"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for the changeModel of the model. Updates the controller.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 449, "name": "__changeModelLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for the changeLength of the model. If the length changes\nof the model, either ListItems need to be removed or added to the target.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1004, "name": "__lookup"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the lookup table.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Function for accessing the lookup table.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Item index from lookup table</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 491, "name": "__moveChangeListenerAtTheEnd"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method which removes and adds the change listener of the\ncontroller to the model. This is sometimes necessary to ensure that the\nlistener of the controller is executed as the last listener of the chain.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 954, "name": "__removeFilter"}, "type": "method", "children": [{"attributes": {"text": "<p>This helper is responsible for removing the filter and setting the\ncontroller to a valid state without a filtering.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 552, "name": "__removeItem"}, "type": "method", "children": [{"attributes": {"text": "<p>Internal helper to remove ListItems from the target. Also the binding\nwill be removed properly.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 780, "name": "__renewBindings"}, "type": "method", "children": [{"attributes": {"text": "<p>Internal helper method to renew all set bindings.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 245, "name": "_applyDelegate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>If a new delegate is set, it applies the stored configuration for the\nlist items to the already created list items once.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.List#delegate"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 260, "name": "_applyIconOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new icon options.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old icon options.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-method which will be called if the icon options has been changed.\nIt invokes a renewing of all set bindings.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.List#iconOptions"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 284, "name": "_applyIconPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new icon path.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old icon path.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-method which will be called if the icon path has been changed.\nIt invokes a renewing of all set bindings.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.List#iconPath"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 272, "name": "_applyLabelOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new label options.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old label options.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-method which will be called if the label options has been changed.\nIt invokes a renewing of all set bindings.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.List#labelOptions"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 296, "name": "_applyLabelPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new label path.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old label path.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-method which will be called if the label path has been changed.\nIt invokes a renewing of all set bindings.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.List#labelPath"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 310, "name": "_applyModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new model array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old model array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-method which will be called if the model has been changed. It\nremoves all the listeners from the old model and adds the needed\nlisteners to the new model. It also invokes the initial filling of the\ntarget widgets if there is a target set.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.List#model"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 367, "name": "_applyTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new target.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old target.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-method which will be called if the target has been changed.\nWhen the target changes, every binding needs to be reset and the old\ntarget needs to be cleaned up. If there is a model, the target will be\nfilled with the data of the model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.List#target"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 601, "name": "_bindListItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The internally created and used ListItem.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.ListItem"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the ListItem.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets up the binding for the given ListItem and index.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 515, "name": "_createItem"}, "type": "method", "children": [{"attributes": {"text": "<p>Creates a ListItem and delegates the configure method if a delegate is\nset and the needed function (configureItem) is available.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The created and configured ListItem.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.ListItem"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 733, "name": "_onBindingSet"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the current binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source object of the binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The target object of the binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Method which will be called on the invoke of every binding. It takes\ncare of the selection on the change of the binding.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 755, "name": "_removeBindingsFrom"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The item of which the binding which should be removed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper method to remove the binding of the given item.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 830, "name": "_setBindItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method for applying the delegate It checks if a bindItem\nis set end invokes the initial process to apply the given function.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 813, "name": "_setConfigureItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method for applying the delegate It checks if a configureItem\nis set end invokes the initial process to apply the given function.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 849, "name": "_setCreateItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old delegate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method for applying the delegate It checks if a createItem\nis set end invokes the initial process to apply the given function.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 889, "name": "_setFilter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new filter function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old filter function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-Method for setting the filter. It removes all bindings,\ncheck if the length has changed and adds or removes the items in the\ntarget. After that, the bindings will be set up again and the selection\nwill be updated.</p>"}, "type": "desc"}]}, {"attributes": {"line": 625, "name": "bindDefaultProperties"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The internally created and used ListItem.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.ListItem"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the ListItem.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper-Method for binding the default properties (label, icon and model)\nfrom the model to the target widget.</p>\n\n<p>This method should only be called in the\n{@link qx.data.controller.IControllerDelegate#bindItem} function\nimplemented by the {@link #delegate} property.</p>"}, "type": "desc"}]}, {"attributes": {"line": 662, "name": "bindProperty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "sourcePath"}, "type": "param", "children": [{"attributes": {"text": "<p>The path to the property in the model. If you use an empty string, the whole model item will be bound.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property in the target widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The options used by {@link qx.data.SingleValueBinding#bind} to use for the binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "targetWidget"}, "type": "param", "children": [{"attributes": {"text": "<p>The target widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the current binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper-Method for binding a given property from the model to the target\nwidget.\nThis method should only be called in the\n{@link qx.data.controller.IControllerDelegate#bindItem} function\nimplemented by the {@link #delegate} property.</p>"}, "type": "desc"}]}, {"attributes": {"line": 706, "name": "bindPropertyReverse"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "targetPath"}, "type": "param", "children": [{"attributes": {"text": "<p>The path to the property in the model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "sourcePath"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property in the target.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The options to use by {@link qx.data.SingleValueBinding#bind} for the binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceWidget"}, "type": "param", "children": [{"attributes": {"text": "<p>The source widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the current binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper-Method for binding a given property from the target widget to\nthe model.\nThis method should only be called in the\n{@link qx.data.controller.IControllerDelegate#bindItem} function\nimplemented by the {@link #delegate} property.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>delegate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>target</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>target</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 574, "name": "getVisibleModels"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all models currently visible by the list. This method is only\nuseful if you use the filter via the {@link #delegate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new data array container all the models which representation items are currently visible.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>delegate</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>model</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>target</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>target</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>delegate</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>model</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>target</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTarget", "fromProperty": "target"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>target</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>target</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 433, "name": "syncWidget"}, "type": "method", "children": [{"attributes": {"text": "<p>Internal method used to sync the selection. The controller uses the\nwidget queue to schedule the selection update. An asynchronous handling of\nthe selection is needed because the bindings (event listeners for the\nbinding) need to be executed before the selection is updated.</p>"}, "type": "desc"}]}, {"attributes": {"line": 225, "name": "update"}, "type": "method", "children": [{"attributes": {"text": "<p>Updates the filter and the target. This could be used if the filter\nuses an additional parameter which changes the filter result.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "delegate", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyDelegate", "event": "changeDelegate"}, "type": "property", "children": [{"attributes": {"text": "<p>Delegation object, which can have one or more functions defined by the\n{@link IControllerDelegate} interface.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyIconOptions", "name": "iconOptions", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the icon binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyIconPath", "check": "String", "name": "iconPath", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The path to the property which holds the information that should be\nshown as an icon. This is only needed if objects are stored in the model\nand if the icon should be shown.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyLabelOptions", "name": "labelOptions", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the label binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyLabelPath", "check": "String", "name": "labelPath", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The path to the property which holds the information that should be\nshown as a label. This is only needed if objects are stored in the model.</p>"}, "type": "desc"}]}, {"attributes": {"name": "model", "check": "qx.data.IListData", "allowNull": "true", "propertyType": "new", "apply": "_applyModel", "event": "changeModel"}, "type": "property", "children": [{"attributes": {"text": "<p>Data array containing the data which should be shown in the list.</p>"}, "type": "desc"}]}, {"attributes": {"name": "target", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyTarget", "event": "changeTarget"}, "type": "property", "children": [{"attributes": {"text": "<p>The target widget which should show the data.</p>"}, "type": "desc"}]}]}]}