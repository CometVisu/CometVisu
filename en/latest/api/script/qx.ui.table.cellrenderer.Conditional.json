{"attributes": {"name": "Conditional", "packageName": "qx.ui.table.cellrenderer", "superClass": "qx.ui.table.cellrenderer.Default", "childClasses": "qx.ui.table.cellrenderer.Date,qx.ui.table.cellrenderer.Html,qx.ui.table.cellrenderer.Number,qx.ui.table.cellrenderer.String", "fullName": "qx.ui.table.cellrenderer.Conditional", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>The conditional cell renderer allows special per cell formatting based on\nconditions on the cell&#8217;s value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 50, "isCtor": true, "overriddenFrom": "qx.ui.table.cellrenderer.Abstract", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "align"}, "type": "param", "children": [{"attributes": {"text": "<p>The default text alignment to format the cell with by default.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>The default font color to format the cell with by default.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "style"}, "type": "param", "children": [{"attributes": {"text": "<p>The default font style to format the cell with by default.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "weight"}, "type": "param", "children": [{"attributes": {"text": "<p>The default font weight to format the cell with by default.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 86, "name": "__applyFormatting"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "condition"}, "type": "param", "children": [{"attributes": {"text": "<p>The matched condition</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "style"}, "type": "param", "children": [{"attributes": {"text": "<p>map of already applied styles.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies the cell styles to the style map.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 228, "overriddenFrom": "qx.ui.table.cellrenderer.Abstract", "name": "_getCellStyle"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "cellInfo"}, "type": "param", "children": [{"attributes": {"text": "<p>The information about the cell. See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Overridden; called whenever the cell updates. The cell will iterate through\neach available condition and apply formatting for those that\nmatch. Multiple conditions can match, but later conditions will override\nearlier ones. Conditions with null values will stack with other conditions\nthat apply to that value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 167, "name": "addBetweenCondition"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "condition"}, "type": "param", "children": [{"attributes": {"text": "<p>The type of condition. Accepted strings are &#8220;between&#8221; and &#8221;!between&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value1"}, "type": "param", "children": [{"attributes": {"text": "<p>The first value to compare against.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "value2"}, "type": "param", "children": [{"attributes": {"text": "<p>The second value to compare against.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "align"}, "type": "param", "children": [{"attributes": {"text": "<p>The text alignment to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>The font color to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "style"}, "type": "param", "children": [{"attributes": {"text": "<p>The font style to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "weight"}, "type": "param", "children": [{"attributes": {"text": "<p>The font weight to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The text value of the column to compare against. If this is null, comparisons will be against the contents of this cell.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The addBetweenCondition method is used to add a between condition to the\ncell renderer.</p>\n\n<p>Note: Passing null is different from passing an empty string in the align,\ncolor, style and weight arguments. Null will allow pre-existing formatting\nto pass through, where an empty string will clear it back to the default\nformatting set in the constructor.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the condition can not be recognized or value is null.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 127, "name": "addNumericCondition"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "condition"}, "type": "param", "children": [{"attributes": {"text": "<p>The type of condition. Accepted strings are &#8221;==&#8221;, &#8221;!=&#8221;, &#8221;>&#8221;, &#8221;<\", \">=&#8221;, and &#8221;<=&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value1"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to compare against.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "align"}, "type": "param", "children": [{"attributes": {"text": "<p>The text alignment to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>The font color to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "style"}, "type": "param", "children": [{"attributes": {"text": "<p>The font style to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "weight"}, "type": "param", "children": [{"attributes": {"text": "<p>The font weight to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The text value of the column to compare against. If this is null, comparisons will be against the contents of this cell.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The addNumericCondition method is used to add a basic numeric condition to\nthe cell renderer.</p>\n\n<p>Note: Passing null is different from passing an empty string in the align,\ncolor, style and weight arguments. Null will allow pre-existing formatting\nto pass through, where an empty string will clear it back to the default\nformatting set in the constructor.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the condition can not be recognized or value is null.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 203, "name": "addRegex"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "regex"}, "type": "param", "children": [{"attributes": {"text": "<p>The regular expression to match against.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "align"}, "type": "param", "children": [{"attributes": {"text": "<p>The text alignment to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>The font color to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "style"}, "type": "param", "children": [{"attributes": {"text": "<p>The font style to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "weight"}, "type": "param", "children": [{"attributes": {"text": "<p>The font weight to format the cell with if the condition matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The text value of the column to compare against. If this is null, comparisons will be against the contents of this cell.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The addRegex method is used to add a regular expression condition to the\ncell renderer.</p>\n\n<p>Note: Passing null is different from passing an empty string in the align,\ncolor, style and weight arguments. Null will allow pre-existing formatting\nto pass through, where an empty string will clear it back to the default\nformatting set in the constructor.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the regex is null.</p>", "type": "Error"}, "type": "desc"}]}]}]}]}