{"attributes": {"name": "PointerCore", "interfaces": "qx.core.IDisposable", "superClass": "Object", "childClasses": "qx.event.handler.Pointer", "fullName": "qx.event.handler.PointerCore", "type": "bootstrap", "packageName": "qx.event.handler"}, "type": "class", "children": [{"attributes": {"text": "<p>Low-level pointer event handler.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "MSPOINTER_TO_POINTER_MAPPING"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "SIM_MOUSE_DELAY", "value": "2500"}, "type": "constant"}, {"attributes": {"name": "POINTER_TO_GESTURE_MAPPING"}, "type": "constant"}, {"attributes": {"name": "TOUCH_TO_POINTER_MAPPING"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "SIM_MOUSE_DISTANCE", "value": "25"}, "type": "constant"}, {"attributes": {"access": "private", "type": "Null", "name": "__lastTouch", "value": "null"}, "type": "constant", "children": [{"attributes": {"text": "<p>Coordinates of the last touch. This needs to be static because the target could\nchange between touch and simulated mouse events. Touch events will be detected\nby one instance which moves the target. The simulated mouse events will be fired with\na delay which causes another target and with that, another instance of this handler.\nlast touch was.</p>"}, "type": "desc"}]}, {"attributes": {"name": "MOUSE_TO_POINTER_MAPPING"}, "type": "constant"}, {"attributes": {"name": "LEFT_BUTTON"}, "type": "constant"}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 89, "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>element on which to listen for native touch events</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "emitter"}, "type": "param", "children": [{"attributes": {"text": "<p>Event emitter (used if dispatchEvent is not supported, e.g. in IE8)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.Emitter"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Create a new instance</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 358, "name": "_determineActiveTouches"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">DOM</span> event type.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "changedTouches"}, "type": "param", "children": [{"attributes": {"text": "<p>the current changed touches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Determines the current active touches.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 424, "name": "_fireEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "domEvent"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>type of the event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>event target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fire a touch event with the given parameters</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 157, "name": "_initObserver"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "useEmitter"}, "type": "param", "children": [{"attributes": {"text": "<p>attach listener to Emitter instead of native event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Register native event listeners</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 146, "name": "_initPointerObserver"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds listeners to native pointer events if supported</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 391, "name": "_isSimulatedMouseEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "x"}, "type": "param", "children": [{"attributes": {"text": "<p>current mouse x</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "y"}, "type": "param", "children": [{"attributes": {"text": "<p>current mouse y</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Detects whether the given MouseEvent position is identical to the previously fired TouchEvent position.\nIf <code>true</code> the corresponding event can be identified as simulated.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if passed mouse position is a synthetic MouseEvent."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 293, "name": "_onMouseEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "domEvent"}, "type": "param", "children": [{"attributes": {"text": "<p>Native <span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for touch events</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 175, "name": "_onPointerEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "domEvent"}, "type": "param", "children": [{"attributes": {"text": "<p>Native <span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for native pointer events</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 197, "name": "_onTouchEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "domEvent"}, "type": "param", "children": [{"attributes": {"text": "<p>Native <span class=\"caps\">DOM</span> event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for touch events</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 411, "name": "_stopObserver"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes native pointer event listeners.</p>"}, "type": "desc"}]}, {"attributes": {"line": 479, "name": "dispose"}, "type": "method", "children": [{"attributes": {"text": "<p>Dispose this object</p>"}, "type": "desc"}]}]}]}