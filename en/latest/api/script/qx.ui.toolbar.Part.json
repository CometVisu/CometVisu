{"attributes": {"name": "Part", "packageName": "qx.ui.toolbar", "mixins": "qx.ui.core.MRemoteChildrenHandling", "superClass": "qx.ui.core.Widget", "fullName": "qx.ui.toolbar.Part", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>A part is a container for multiple toolbar buttons. Each part comes\nwith a handle which may be used in later versions to drag the part\naround and move it to another position. Currently mainly used\nfor structuring large toolbars beyond the capabilities of the\n{@link Separator}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "childControls", "children": [{"attributes": {"name": "handle"}, "type": "childControl", "children": [{"attributes": {"text": "<p>prat handle to visualize the separation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.basic.Image"}, "type": "entry"}]}]}, {"attributes": {"name": "container"}, "type": "childControl", "children": [{"attributes": {"text": "<p>holds the content of the toolbar part</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.toolbar.PartContainer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 44, "isCtor": true, "overriddenFrom": "qx.ui.core.Widget", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 164, "name": "__onSyncAppearance"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper which applies the left, right and middle states.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 147, "name": "_applySpacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.toolbar.Part#spacing"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 108, "overriddenFrom": "qx.ui.core.Widget", "name": "_createChildControlImpl"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param"}, {"attributes": {"name": "hash"}, "type": "param"}]}]}, {"attributes": {"line": 198, "name": "addSeparator"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds a separator to the toolbar part.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "line": 134, "overriddenFrom": "qx.ui.core.Widget", "name": "getChildrenContainer"}, "type": "method"}, {"attributes": {"line": 209, "name": "getMenuButtons"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all nested buttons which contains a menu to show. This is mainly\nused for keyboard support.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>List of all menu buttons</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getShow", "fromProperty": "show"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>show</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #show}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>show</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initShow", "fromProperty": "show"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>show</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>show</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #show}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>spacing</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetShow", "fromProperty": "show"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>show</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #show}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>spacing</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setShow", "fromProperty": "show"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>show</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>show</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #show}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"toolbar/part\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"name": "show", "defaultValue": "\"both\"", "inheritable": "true", "propertyType": "new", "possibleValues": "\"both\",\"label\",\"icon\"", "event": "changeShow"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether icons, labels, both or none should be shown.</p>"}, "type": "desc"}]}, {"attributes": {"name": "spacing", "allowNull": "true", "propertyType": "new", "apply": "_applySpacing", "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>The spacing between every child of the toolbar</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeShow"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #show}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}]}