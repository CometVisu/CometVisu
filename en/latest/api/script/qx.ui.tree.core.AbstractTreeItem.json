{"attributes": {"isAbstract": true, "name": "AbstractTreeItem", "packageName": "qx.ui.tree.core", "superClass": "qx.ui.tree.core.AbstractItem", "childClasses": "qx.ui.tree.TreeFile,qx.ui.tree.TreeFolder", "fullName": "qx.ui.tree.core.AbstractTreeItem", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>The AbstractTreeItem serves as a common superclass for the {@link\nqx.ui.tree.TreeFile} and {@link qx.ui.tree.TreeFolder} classes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "childControls", "children": [{"attributes": {"name": "label"}, "type": "childControl", "children": [{"attributes": {"text": "<p>label of the tree item</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.basic.Label"}, "type": "entry"}]}]}, {"attributes": {"name": "icon"}, "type": "childControl", "children": [{"attributes": {"text": "<p>icon of the tree item</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.basic.Image"}, "type": "entry"}]}]}, {"attributes": {"name": "open"}, "type": "childControl", "children": [{"attributes": {"text": "<p>button to open/close a subtree</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.tree.core.FolderOpenButton"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.ui.tree.core.AbstractItem", "line": 36, "isCtor": true, "overriddenFrom": "qx.ui.tree.core.AbstractItem", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "label"}, "type": "param"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 346, "name": "__addChildrenToParent"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds the item&#8217;s children container to the parent&#8217;s children container.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 85, "overriddenFrom": "qx.ui.tree.core.AbstractItem", "name": "_applyOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.core.AbstractItem#open"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>open</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.tree.core.AbstractItem", "line": 101, "overriddenFrom": "qx.ui.tree.core.AbstractItem", "name": "_shouldShowOpenSymbol"}, "type": "method"}, {"attributes": {"access": "protected", "docFrom": "qx.ui.tree.core.AbstractItem", "line": 130, "overriddenFrom": "qx.ui.tree.core.AbstractItem", "name": "_updateIndent"}, "type": "method"}, {"attributes": {"line": 359, "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>variable number of tree items to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds the passed tree items to the end of this item&#8217;s children list.</p>"}, "type": "desc"}]}, {"attributes": {"line": 480, "name": "addAfter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "treeItem"}, "type": "param", "children": [{"attributes": {"text": "<p>tree item to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}, {"attributes": {"name": "after"}, "type": "param", "children": [{"attributes": {"text": "<p>existing child to add the item after</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a tree item to this item after the existing child <code>before</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 406, "name": "addAt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "treeItem"}, "type": "param", "children": [{"attributes": {"text": "<p>new tree item to insert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>position to insert into</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds the tree item to the current item, at the given index.</p>"}, "type": "desc"}]}, {"attributes": {"line": 502, "name": "addAtBegin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "treeItem"}, "type": "param", "children": [{"attributes": {"text": "<p>tree item to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a tree item as the first child of this item.</p>"}, "type": "desc"}]}, {"attributes": {"line": 457, "name": "addBefore"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "treeItem"}, "type": "param", "children": [{"attributes": {"text": "<p>tree item to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}, {"attributes": {"name": "before"}, "type": "param", "children": [{"attributes": {"text": "<p>existing child to add the item before</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a tree item to this item before the existing child <code>before</code>.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "line": 177, "overriddenFrom": "qx.ui.core.Widget", "name": "addState"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "state"}, "type": "param"}]}]}, {"attributes": {"line": 276, "name": "getChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Get all child items.</p>\n\n<p>Note: Don not modify the returned array, since this function does not\nreturn a copy!</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An array of all child items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"line": 220, "overriddenFrom": "qx.ui.core.Widget", "name": "getChildrenContainer"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the widget, which acts as container for the child items.\nThis widget must have a vertical box layout.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The children container</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"line": 298, "name": "getItems"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "true", "optional": true, "name": "recursive"}, "type": "param", "children": [{"attributes": {"text": "<p>whether children of subfolder should be included</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "optional": true, "name": "invisible"}, "type": "param", "children": [{"attributes": {"text": "<p>whether invisible children should be included</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "optional": true, "name": "ignoreFirst"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the current treeItem should be excluded from the list.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns all children of the folder.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>list of children</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.AbstractItem", "line": 141, "overriddenFrom": "qx.ui.tree.core.AbstractItem", "name": "getLevel"}, "type": "method"}, {"attributes": {"name": "getParent", "fromProperty": "parent"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>parent</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #parent}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>parent</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 250, "name": "getParentChildrenContainer"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the children container of the item&#8217;s parent. This function will return\n<code>null</code>, if the item does not have a parent or is not the root\nitem.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parent&#8217;s children container.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"line": 69, "name": "getTree"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the tree the tree item is connected to. If the item is not part of\na tree <code>null</code> will be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The item&#8217;s tree or <code>null</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.tree.Tree"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.AbstractItem", "line": 282, "overriddenFrom": "qx.ui.tree.core.AbstractItem", "name": "hasChildren"}, "type": "method"}, {"attributes": {"line": 238, "name": "hasChildrenContainer"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the tree item has a children container</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether it has a children container</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initParent", "fromProperty": "parent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>parent</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>parent</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #parent}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 334, "name": "recursiveAddToWidgetQueue"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds this item and recursively all sub items to the widget queue to\nupdate the indentation.</p>"}, "type": "desc"}]}, {"attributes": {"line": 512, "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>variable number of tree items to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "AbstractTreeItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the passed tree items from this item.</p>"}, "type": "desc"}]}, {"attributes": {"line": 563, "name": "removeAll"}, "type": "method", "children": [{"attributes": {"text": "<p>Remove all child items from this item.</p>"}, "type": "desc"}]}, {"attributes": {"line": 551, "name": "removeAt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Index of the child to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove the child with the given child index.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "line": 193, "overriddenFrom": "qx.ui.core.Widget", "name": "removeState"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "state"}, "type": "param"}]}]}, {"attributes": {"name": "resetParent", "fromProperty": "parent"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>parent</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #parent}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setParent", "fromProperty": "parent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>parent</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>parent</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #parent}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "qx.ui.tree.core.AbstractTreeItem", "allowNull": "true", "name": "parent", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The parent tree folder.</p>"}, "type": "desc"}]}]}]}