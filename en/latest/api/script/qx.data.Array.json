{"attributes": {"name": "Array", "packageName": "qx.data", "mixins": "qx.data.marshal.MEventBubbling", "superClass": "qx.core.Object", "fullName": "qx.data.Array", "type": "class", "interfaces": "qx.data.IListData"}, "type": "class", "children": [{"attributes": {"text": "<p>The data array is a special array used in the data binding context of\nqooxdoo. It does not extend the native array of JavaScript but its a wrapper\nfor it. All the native methods are included in the implementation and it\nalso fires events if the content or the length of the array changes in\nany way. Also the <code>.length</code> property is available on the array.</p>\n\n<p>This class does not need to be disposed, unless you set the autoDisposeItems\nproperty to true and want the items to be disposed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 47, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "param"}, "type": "param", "children": [{"attributes": {"text": "<p>The parameter can be some types.\n Without a parameter a new blank array will be created.\n If there is more than one parameter is given, the parameter will be added directly to the new array.\n If the parameter is a number, a new Array with the given length will be created.\n If the parameter is a JavaScript array, a new array containing the given elements will be created.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new instance of an array.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 1094, "name": "__updateEventPropagation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "from"}, "type": "param", "children": [{"attributes": {"text": "<p>Start index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "to"}, "type": "param", "children": [{"attributes": {"text": "<p>End index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper to update the event propagation for a range of items.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1082, "name": "__updateLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Internal function which updates the length property of the array.\nEvery time the length will be updated, a {@link #changeLength} data\nevent will be fired.</p>"}, "type": "desc"}]}, {"attributes": {"line": 783, "name": "append"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "array"}, "type": "param", "children": [{"attributes": {"text": "<p>The items of this array will be appended.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}, {"attributes": {"type": "qx.data.IListData"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Append the items of the given array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>if the argument is not an array.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 153, "name": "concat"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "array"}, "type": "param", "children": [{"attributes": {"text": "<p>The javaScript array which should be concatenated to the current array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Concatenates the current and the given array into a new one.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new array containing the values of both former arrays.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 653, "name": "contains"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The item which is possibly in the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check if the given item is in the current array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>true, if the array contains the given item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 663, "name": "copy"}, "type": "method", "children": [{"attributes": {"text": "<p>Return a copy of the given arr</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>copy of this</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 869, "name": "equals"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "array"}, "type": "param", "children": [{"attributes": {"text": "<p>The array to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the given array has the same content as this.\nChecks only the equality of the arrays&#8217; content.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the two arrays are equal.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1031, "name": "every"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The test function, which will be executed for every item in the array. The function will have three arguments. <li><code>item</code>: the current item in the array</li> <li><code>index</code>: the index of the current item</li> <li><code>array</code>: The native array instance, <span class=\"caps\">NOT</span> the data array instance.</li></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "undefined", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The context of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Tests whether every element in the array passes the test implemented by the\nprovided function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if every element passed the test function."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 835, "name": "exclude"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "array"}, "type": "param", "children": [{"attributes": {"text": "<p>the elements of this array will be excluded from this one</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all elements which are listed in the array.</p>"}, "type": "desc"}]}, {"attributes": {"line": 982, "name": "filter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The test function, which will be executed for every item in the array. The function will have three arguments. <li><code>item</code>: the current item in the array</li> <li><code>index</code>: the index of the current item</li> <li><code>array</code>: The native array instance, <span class=\"caps\">NOT</span> the data array instance.</li></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "undefined", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The context of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new array with all elements that pass the test implemented by\nthe provided function. It returns a new data array instance so make sure\nto think about disposing it.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new array instance containing only the items which passed the test.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 956, "name": "forEach"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The function which will be call for every item in the array. It will be invoked with three parameters: the item, the index and the array itself.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>The context in which the callback will be invoked.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Invokes the given function for every item in the array.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getAutoDisposeItems", "fromProperty": "autoDisposeItems"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>autoDisposeItems</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autoDisposeItems}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>autoDisposeItems</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 547, "name": "getItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index requested of the array element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Replacement function for the getting of the array value.\narray<sup class=\"footnote\"><a href=\"#fn0\">0</a></sup> should be array.getItem(0).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The element at the given index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 602, "name": "getLength"}, "type": "method", "children": [{"attributes": {"text": "<p>This method returns the current length stored under .length on each\narray.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The current length of the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 614, "name": "indexOf"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The item of which the index should be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the index of the item in the array. If the item is not in the\narray, -1 will be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The Index of the given item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAutoDisposeItems", "fromProperty": "autoDisposeItems"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>autoDisposeItems</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>autoDisposeItems</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #autoDisposeItems}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 704, "name": "insertAfter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "after"}, "type": "param", "children": [{"attributes": {"text": "<p>Insert item after this object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to be inserted.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element into the array after a given item.</p>"}, "type": "desc"}]}, {"attributes": {"line": 674, "name": "insertAt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Position where to insert the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The element to insert.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element at a given position.</p>"}, "type": "desc"}]}, {"attributes": {"line": 686, "name": "insertBefore"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "before"}, "type": "param", "children": [{"attributes": {"text": "<p>Insert item before this object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The item to be inserted.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an item into the array before a given item.</p>"}, "type": "desc"}]}, {"attributes": {"name": "isAutoDisposeItems", "fromProperty": "autoDisposeItems"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>autoDisposeItems</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autoDisposeItems}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 173, "name": "join"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "connector"}, "type": "param", "children": [{"attributes": {"text": "<p>the string which should be used to past in between of the array values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the array as a string using the given connector string to\nconnect the values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The array as a string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 625, "name": "lastIndexOf"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The item of which the index should be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the last index of the item in the array. If the item is not in the\narray, -1 will be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The Index of the given item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 999, "name": "map"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The mapping function, which will be executed for every item in the array. The function will have three arguments. <li><code>item</code>: the current item in the array</li> <li><code>index</code>: the index of the current item</li> <li><code>array</code>: The native array instance, <span class=\"caps\">NOT</span> the data array instance.</li></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "undefined", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The context of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new array with the results of calling a provided function on every\nelement in this array. It returns a new data array instance so make sure\nto think about disposing it.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new array instance containing the new created items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 911, "name": "max"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the highest value in the given array.\nSupports numeric values only.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The highest of all values or undefined if the array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 933, "name": "min"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the lowest value in the array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The lowest of all values or undefined if the array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 184, "name": "pop"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes and returns the last element of the array.\nAn change event will be fired.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The last element of the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 218, "name": "push"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>Multiple elements. Every element will be added to the end of the array. An change event will be fired.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an element at the end of the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The new length of the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1049, "name": "reduce"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The accumulator function, which will be executed for every item in the array. The function will have four arguments. <li><code>previousItem</code>: the previous item</li> <li><code>currentItem</code>: the current item in the array</li> <li><code>index</code>: the index of the current item</li> <li><code>array</code>: The native array instance, <span class=\"caps\">NOT</span> the data array instance.</li></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "undefined", "optional": true, "name": "initValue"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to use as the first argument to the first call of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply a function against an accumulator and each value of the array\n(from left-to-right) as to reduce it to a single value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The returned value of the last accumulator call.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1067, "name": "reduceRight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The accumulator function, which will be executed for every item in the array. The function will have four arguments. <li><code>previousItem</code>: the previous item</li> <li><code>currentItem</code>: the current item in the array</li> <li><code>index</code>: the index of the current item</li> <li><code>array</code>: The native array instance, <span class=\"caps\">NOT</span> the data array instance.</li></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "undefined", "optional": true, "name": "initValue"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to use as the first argument to the first call of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply a function against an accumulator and each value of the array\n(from right-to-left) as to reduce it to a single value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The returned value of the last accumulator call.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 850, "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>Item to be removed from the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove the given item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The removed item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 735, "name": "removeAll"}, "type": "method", "children": [{"attributes": {"text": "<p>Remove all elements from the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A native array containing the removed elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 722, "name": "removeAt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Index of the item to be removed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove an element from the array at the given index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The removed item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 438, "name": "replace"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "src"}, "type": "param", "children": [{"attributes": {"text": "<p>the new value to set the array to</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Efficiently replaces the array with the contents of src; this will suppress the\nchange event if the array contents are the same, and will make sure that only\none change event is fired</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetAutoDisposeItems", "fromProperty": "autoDisposeItems"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>autoDisposeItems</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #autoDisposeItems}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 251, "name": "reverse"}, "type": "method", "children": [{"attributes": {"text": "<p>Reverses the order of the array. An change event will be fired.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setAutoDisposeItems", "fromProperty": "autoDisposeItems"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>autoDisposeItems</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>autoDisposeItems</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autoDisposeItems}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 561, "name": "setItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the array element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The new item to set.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Replacement function for the setting of an array value.\narray<sup class=\"footnote\"><a href=\"#fn0\">0</a></sup> = &#8220;a&#8221; should be array.setItem(0, &#8220;a&#8221;).\nA change event will be fired if the value changes. Setting the same\nvalue again will not lead to a change event.</p>"}, "type": "desc"}]}, {"attributes": {"line": 282, "name": "shift"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes the first element of the array and returns it. An change event\nwill be fired.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the former first element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 327, "name": "slice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "from"}, "type": "param", "children": [{"attributes": {"text": "<p>The start index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "to"}, "type": "param", "children": [{"attributes": {"text": "<p>The zero-based end index. <code>slice</code> extracts up to but not including <code>to</code>. If omitted, slice extracts to the end of the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a new array based on the range specified by the parameters.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new array containing the given range of values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1015, "name": "some"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The test function, which will be executed for every item in the array. The function will have three arguments. <li><code>item</code>: the current item in the array</li> <li><code>index</code>: the index of the current item</li> <li><code>array</code>: The native array instance, <span class=\"caps\">NOT</span> the data array instance.</li></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "undefined", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The context of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Tests whether any element in the array passes the test implemented by the\nprovided function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if any element passed the test function."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 459, "name": "sort"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>A compare function comparing two parameters and should return a number.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sorts the array. If a function is given, this will be used to\ncompare the items. <code>changeBubble</code> event will only be fired,\nif sorting result differs from original array.</p>"}, "type": "desc"}]}, {"attributes": {"line": 345, "name": "splice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "startIndex"}, "type": "param", "children": [{"attributes": {"text": "<p>The index where the splice should start</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "amount"}, "type": "param", "children": [{"attributes": {"text": "<p>Defines number of elements which will be removed at the given position.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>All following parameters will be added at the given position to the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Method to remove and add new elements to the array. A change event\nwill be fired for every removal or addition unless the array is\nidentical before and after splicing.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An data array containing the removed elements. Keep in to dispose this one, even if you don&#8217;t use it!</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 893, "name": "sum"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the sum of all values in the array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The sum of all values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 534, "name": "toArray"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the list data as native array. Beware of the fact that the\ninternal representation will be returned and any manipulation of that\ncan cause a misbehavior of the array. This method should only be used for\ndebugging purposes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The native array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleAutoDisposeItems", "fromProperty": "autoDisposeItems"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>autoDisposeItems</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autoDisposeItems}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 634, "overriddenFrom": "qx.core.Object", "name": "toString"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the toString of the original Array</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The array as a string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 496, "name": "unshift"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>As many elements as you want to add to the beginning.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds the given items to the beginning of the array. For every element,\na change event will be fired.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The new length of the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Boolean", "defaultValue": "false", "name": "autoDisposeItems", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Flag to set the dispose behavior of the array. If the property is set to\n<code>true</code>, the array will dispose its content on dispose, too.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "change"}, "type": "event", "children": [{"attributes": {"text": "<p>The change event which will be fired if there is a change in the array.\nThe data contains a map with five key value pairs:\n<li>start: The start index of the change.</li>\n<li>end: The end index of the change.</li>\n<li>type: The type of the change as a String. This can be &#8216;add&#8217;,\n&#8216;remove&#8217;, &#8216;order&#8217; or &#8216;add/remove&#8217;</li>\n<li>added: The items which has been added (as a JavaScript array)</li>\n<li>removed: The items which has been removed (as a JavaScript array)</li></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeLength"}, "type": "event", "children": [{"attributes": {"text": "<p>The changeLength event will be fired every time the length of the\narray changes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}]}