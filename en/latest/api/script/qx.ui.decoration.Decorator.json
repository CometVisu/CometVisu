{"attributes": {"name": "Decorator", "interfaces": "qx.ui.decoration.IDecorator", "mixins": "qx.ui.decoration.MBackgroundColor,qx.ui.decoration.MBorderRadius,qx.ui.decoration.MBoxShadow,qx.ui.decoration.MDoubleBorder,qx.ui.decoration.MLinearBackgroundGradient,qx.ui.decoration.MBorderImage,qx.ui.decoration.MTransition", "superClass": "qx.ui.decoration.Abstract", "fullName": "qx.ui.decoration.Decorator", "type": "class", "packageName": "qx.ui.decoration"}, "type": "class", "children": [{"attributes": {"text": "<p>Decorator including all decoration possibilities from mixins:</p>\n\n<ul>\n<li>Background color</li>\n<li>Background image</li>\n<li>Background gradient</li>\n<li>Single and double borders</li>\n<li>Border radius</li>\n<li>Box shadow</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 197, "name": "__extendArray"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "array"}, "type": "param", "children": [{"attributes": {"text": "<p>Incoming array. Has to contain at least one element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "to"}, "type": "param", "children": [{"attributes": {"text": "<p>Desired length. Must be greater than or equal to the the length of arr.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Extends an array up to the given length by repeating the elements already present.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.decoration.Abstract", "line": 128, "overriddenFrom": "qx.ui.decoration.Abstract", "name": "_getDefaultInsets"}, "type": "method"}, {"attributes": {"access": "protected", "line": 170, "name": "_getExtendedPropertyValueArrays"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "propertyNames"}, "type": "param", "children": [{"attributes": {"text": "<p>Array containing the propertyNames.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Ensures that every propertyValue specified in propertyNames is an array.\nThe value arrays are extended and repeated to match in length.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Array containing the extended value arrays.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 105, "name": "_getStyles"}, "type": "method", "children": [{"attributes": {"text": "<p>Collects all the style information from the decorators.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>style information</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.decoration.Abstract", "line": 160, "overriddenFrom": "qx.ui.decoration.Abstract", "name": "_isInitialized"}, "type": "method"}, {"attributes": {"line": 56, "name": "getPadding"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the configured padding minus the border width.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of top, right, bottom and left padding values</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 82, "name": "getStyles"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "css"}, "type": "param", "children": [{"attributes": {"text": "<code>true</code> if hyphenated CSS names should be returned."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the styles of the decorator as a map with property names written\nin javascript style (e.g. <code>fontWeight</code> instead of <code>font-weight</code>).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>style information</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}]}]}