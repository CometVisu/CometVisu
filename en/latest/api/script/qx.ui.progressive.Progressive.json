{"attributes": {"fullName": "qx.ui.progressive.Progressive", "packageName": "qx.ui.progressive", "type": "class", "name": "Progressive", "superClass": "qx.ui.container.Composite"}, "type": "class", "children": [{"attributes": {"text": "<i>Progressive</i>.\n\n<p>Follow progressive instructions provided by a data model.  A variable\nnumber of instructions are executed at one time, after which control is\nreturned briefly to the browser.  This allows browser rendering between\nbatches of instructions, improving the visual experience.</p>\n\n<i>Progressive</i> may be used for various purposes.  Two predefined\npurposes for which \"renderers\" are provided, are a progressively-rendered\ntable which allows variable row height, and a program load/initialization\nrenderer with progress bar.  (Note that the term \"renderer\" is interpreted\nquite broadly.  A renderer needn't actually render; rather it is just some\nset of activities that takes place at one time, e.g a row of table data or\na single widget added to the document or a sending a request to a server,\netc.)"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 45, "isCtor": true, "overriddenFrom": "qx.ui.container.Composite", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "structure"}, "type": "param", "children": [{"attributes": {"text": "<p>The structure of the Progressive pane.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.progressive.structure.Abstract"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "progress"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is fired after each batch of elements is rendered, and\ncontrol is about to be yielded to the browser.  This is an appropriate\nevent to listen for, to implement a progress bar.</p>\n\n<p>The event data is an object with the following members:\n<dl>\n  <dt>initial</dt>\n  <dd>\n    The number of elements that were available at the start of this\n    rendering request.\n  </dd></p>\n\n<dt>remaining</dt>\n  <dd>\n    The number of elements still remaining to be rendered.\n  </dd>\n</dl>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "progressDetail"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is fired after each element is rendered.</p>\n\n<p>The event data is an object with the following members:\n<dl>\n  <dt>initial</dt>\n  <dd>\n    The number of elements that were available at the start of this\n    rendering request.\n  </dd></p>\n\n<dt>remaining</dt>\n  <dd>\n    The number of elements still remaining to be rendered.\n  </dd>\n\n<dt>element</dt>\n  <dd>\n    The object, returned by the data model's getNextElement() method,\n    that was just rendered.\n  </dd>\n</dl>\n\n<p>Note: Unless batchSize is set to 1 or we happen to be at the end of a\n      batch, widgets will not be rendered at this time.  Use this event\n      for programmatically processing rendered elements, but not for\n      such things as progress bars.  Instead, where only user-visible\n      changes such as progress bars are being updated, use the\n      &#8220;progress&#8221; event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "renderEnd"}, "type": "event", "children": [{"attributes": {"text": "<p>Event fired when rendering ends.  The data is the state object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "renderStart"}, "type": "event", "children": [{"attributes": {"text": "<p>Event fired when rendering begins.</p>\n\n<p>The event data is an object with the following members:\n<dl>\n  <dt>state</dt>\n  <dd>\n    The state object.\n  </dd></p>\n\n<dt>initial</dt>\n    The number of elements that are available to be rendered\n  <dd>\n  </dd>\n</dl>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 439, "name": "__createStateRendererData"}, "type": "method", "children": [{"attributes": {"text": "<p>Create the map of empty objects for use by the renderers.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>renderer data map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 458, "name": "__dataAvailable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>A &#8220;dataAvailable&#8221; event&#8217;s data contains the initial number of elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event callback for the &#8220;dataAvailable&#8221; event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 368, "name": "__renderElementBatch"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "state"}, "type": "param", "children": [{"attributes": {"text": "<p>The current state of rendering.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.progressive.State"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Render a batch of elements.  The batch size is determined by the\nProgressive&#8217;s batch size at the time that rendering began.  That batch\nsize was copied into the {@link qx.ui.progressive.State} object and is\nused herein.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 343, "name": "_applyDataModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new data model.</p><p>The old data model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.progressive.model.Abstract"}, "type": "entry"}]}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.progressive.model.Abstract"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param"}]}, {"attributes": {"text": "<p>Called when the dataModel property is changed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.progressive.Progressive#dataModel"}, "type": "entry"}]}]}, {"attributes": {"line": 236, "name": "addRenderer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name referenced in the data model when this renderer is to be used.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "renderer"}, "type": "param", "children": [{"attributes": {"text": "<p>Renderer object used if the data model references the specified name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.progressive.renderer.Abstract"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a renderer that can be referenced by the data model.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getBatchSize", "fromProperty": "batchSize"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>batchSize</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #batchSize}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>batchSize</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDataModel", "fromProperty": "dataModel"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>dataModel</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dataModel}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>dataModel</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getFlushWidgetQueueAfterBatch", "fromProperty": "flushWidgetQueueAfterBatch"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>flushWidgetQueueAfterBatch</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #flushWidgetQueueAfterBatch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>flushWidgetQueueAfterBatch</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getInterElementTimeout", "fromProperty": "interElementTimeout"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>interElementTimeout</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #interElementTimeout}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>interElementTimeout</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 221, "name": "getStructure"}, "type": "method", "children": [{"attributes": {"text": "<p>Return the structure object</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The structure object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.progressive.structure.Abstract"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initBatchSize", "fromProperty": "batchSize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>batchSize</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>batchSize</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #batchSize}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDataModel", "fromProperty": "dataModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>dataModel</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>dataModel</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #dataModel}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initFlushWidgetQueueAfterBatch", "fromProperty": "flushWidgetQueueAfterBatch"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>flushWidgetQueueAfterBatch</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>flushWidgetQueueAfterBatch</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #flushWidgetQueueAfterBatch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initInterElementTimeout", "fromProperty": "interElementTimeout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>interElementTimeout</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>interElementTimeout</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #interElementTimeout}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isFlushWidgetQueueAfterBatch", "fromProperty": "flushWidgetQueueAfterBatch"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>flushWidgetQueueAfterBatch</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #flushWidgetQueueAfterBatch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 249, "name": "removeRenderer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Remove the renderer which was assigned this name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove a previously added renderer.</p>"}, "type": "desc"}]}, {"attributes": {"line": 268, "name": "render"}, "type": "method", "children": [{"attributes": {"text": "<p>Render the elements available from the data model.  Elements are\nrendered in batches of size {@link #batchSize}.  After each batch of\nelements are rendered, control is returned temporarily to the\nbrowser, so that actual screen updates can take place.  A timer is\nused to regain control a short while later, in order to render the\nnext batch of element.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetBatchSize", "fromProperty": "batchSize"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>batchSize</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #batchSize}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetDataModel", "fromProperty": "dataModel"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>dataModel</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #dataModel}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetFlushWidgetQueueAfterBatch", "fromProperty": "flushWidgetQueueAfterBatch"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>flushWidgetQueueAfterBatch</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #flushWidgetQueueAfterBatch}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetInterElementTimeout", "fromProperty": "interElementTimeout"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>interElementTimeout</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #interElementTimeout}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setBatchSize", "fromProperty": "batchSize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>batchSize</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>batchSize</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #batchSize}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setDataModel", "fromProperty": "dataModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>dataModel</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>dataModel</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dataModel}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setFlushWidgetQueueAfterBatch", "fromProperty": "flushWidgetQueueAfterBatch"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>flushWidgetQueueAfterBatch</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>flushWidgetQueueAfterBatch</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #flushWidgetQueueAfterBatch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setInterElementTimeout", "fromProperty": "interElementTimeout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>interElementTimeout</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>interElementTimeout</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #interElementTimeout}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleFlushWidgetQueueAfterBatch", "fromProperty": "flushWidgetQueueAfterBatch"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>flushWidgetQueueAfterBatch</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #flushWidgetQueueAfterBatch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Integer", "defaultValue": "20", "name": "batchSize", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Number of elements to render at one time.  After this number of\nelements has been rendered, control will be yielded to the browser\nallowing the elements to actually be displayed.  A short-interval timer\nwill be set, to regain control to render the next batch of elements.</p>"}, "type": "desc"}]}, {"attributes": {"check": "qx.ui.progressive.model.Abstract", "apply": "_applyDataModel", "name": "dataModel", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The data model.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "false", "name": "flushWidgetQueueAfterBatch", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Flush the widget queue after each batch is rendered.  This is\nparticularly relevant for such things as progressive loading, where\nthe whole purpose is to be able to see the loading progressing.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "defaultValue": "0", "name": "interElementTimeout", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Delay between rendering elements. Zero is normally adequate, but\nthere are times that the user wants more time between rendering\nsome elements.</p>"}, "type": "desc"}]}]}]}