{"attributes": {"name": "VirtualTree", "interfaces": "qx.ui.tree.core.IVirtualTree,qx.data.controller.ISelection", "mixins": "qx.ui.virtual.selection.MModel,qx.ui.core.MContentPadding", "superClass": "qx.ui.virtual.core.Scroller", "fullName": "qx.ui.tree.VirtualTree", "type": "class", "packageName": "qx.ui.tree"}, "type": "class", "children": [{"attributes": {"text": "<p>Virtual tree implementation.</p>\n\n<p>The virtual tree can be used to render node and leafs. Nodes and leafs are\nboth items for a tree. The difference between a node and a leaf is that a\nnode has child items, but a leaf not.</p>\n\n<p>With the {@link qx.ui.tree.core.IVirtualTreeDelegate} interface it is possible\nto configure the tree&#8217;s behavior (item renderer configuration, etc.).</p>\n\n<p>Here&#8217;s an example of how to use the widget:</p>\n\n<pre class=\"javascript\">\n//create the model data\nvar nodes = [];\nfor (var i = 0; i < 2500; i++)\n{\n  nodes[i] = {name : \"Item \" + i};\n\n  // if its not the root node\n  if (i !== 0)\n  {\n    // add the children in some random order\n    var node = nodes[parseInt(Math.random() * i)];\n\n    if(node.children == null) {\n      node.children = [];\n    }\n    node.children.push(nodes[i]);\n  }\n}\n\n// converts the raw nodes to qooxdoo objects\nnodes = qx.data.marshal.Json.createModel(nodes, true);\n\n// creates the tree\nvar tree = new qx.ui.tree.VirtualTree(nodes.getItem(0), \"name\", \"children\").set({\n  width : 200,\n  height : 400\n});\n\n//log selection changes\ntree.getSelection().addListener(\"change\", function(e) {\n  this.debug(\"Selection: \" + tree.getSelection().getItem(0).getName());\n}, this);\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 82, "isCtor": true, "overriddenFrom": "qx.ui.virtual.core.Scroller", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model structure for the tree, for more details have a look at the &#8216;model&#8217; property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "labelPath"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the label property, for more details have a look at the &#8216;labelPath&#8217; property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "childProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the child property, for more details have a look at the &#8216;childProperty&#8217; property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeDelegate"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #delegate}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeModel"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #model}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeOpenMode"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #openMode}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "close"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when a node is closed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "open"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when a node is opened.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 885, "name": "__applyModelChanges"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to apply model changes. Normally build the lookup table and\napply the default selection.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1115, "name": "__buildParentChain"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>Item to build parent chain.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Builds the parent chain form the passed item.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 950, "name": "__getVisibleChildrenFrom"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>The start node to start search.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "nestedLevel"}, "type": "param", "children": [{"attributes": {"text": "<p>The nested level from the start node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to get all visible children form the passed parent node.\nThe algorithm implements a depth-first search with a complexity:\n<code>O(n)</code> and <code>n</code> are all visible items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>All visible children form the parent.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1132, "name": "__getVisibleParent"}, "type": "method", "children": [{"attributes": {"text": "<p>Return the first visible parent node from the last selected node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The first visible node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1017, "name": "__openNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to set to open nodes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to set the node to the open nodes data structure when it\nis not included.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1036, "name": "__openNodeAndAllParents"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "startNode"}, "type": "param", "children": [{"attributes": {"text": "<p>Start (root) node to search.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetNode"}, "type": "param", "children": [{"attributes": {"text": "<p>Target node to open (and his parents).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to set the target node and all his parents to the open\nnodes data structure. The algorithm implements a depth-first search with\na complexity: <code>O(n)</code> and <code>n</code> are all model items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>True</code> when the targetNode and his parents could opened, <code>false</code> otherwise."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1072, "name": "__updateRowCount"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to update the row count.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 861, "name": "_afterApplySelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Hook method which is called from the {@link qx.ui.virtual.selection.MModel}.\nThe hook method builds the parent chain form the current selected item.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 618, "name": "_applyChildProperty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#childProperty"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>childProperty</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 677, "name": "_applyDelegate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#delegate"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 594, "name": "_applyHideRoot"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#hideRoot"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 642, "name": "_applyIconOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#iconOptions"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 630, "name": "_applyIconPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#iconPath"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 636, "name": "_applyLabelOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#labelOptions"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 624, "name": "_applyLabelPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#labelPath"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 648, "name": "_applyModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#model"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 574, "name": "_applyOpenMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#openMode"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>openMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 568, "name": "_applyRowHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#itemHeight"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 609, "name": "_applyShowLeafs"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#showLeafs"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 600, "name": "_applyShowTopLevelOpenCloseIcons"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.VirtualTree#showTopLevelOpenCloseIcons"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>showTopLevelOpenCloseIcons</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showTopLevelOpenCloseIcons}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 842, "name": "_beforeApplySelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "newSelection"}, "type": "param", "children": [{"attributes": {"text": "<p>The newSelection which will be set to the selection manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Hook method which is called from the {@link qx.ui.virtual.selection.MModel}.\nThe hook method sets the first visible parent not as new selection when\nthe current selection is empty and the selection mode is one selection.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 555, "name": "_getContentPaddingTarget"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the element, to which the content padding should be applied.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The content padding target.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 507, "name": "_getDataFromRow"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>row to get data for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the model data for the given row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the row&#8217;s model data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 516, "name": "_getSelectables"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the selectable model items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The selectable items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 457, "name": "_init"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the virtual tree.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 469, "name": "_initLayer"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the virtual tree layer.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 697, "name": "_onChangeBubble"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The data event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the changeBubble event. The handler rebuild the lookup\ntable when the child structure changed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 776, "name": "_onKeyPress"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>key event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.KeySequence"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for key press events. Open and close the current selected\nitem on key left and right press. Jump to parent on key left if already\nclosed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 753, "name": "_onOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell tap event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.virtual.core.CellEvent"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler to open/close tapped nodes.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 737, "name": "_onUpdated"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the update event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 496, "name": "_reverseLookup"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to look at.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Performs a lookup from model index to row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The row or <code>-1</code> if the index is not a model index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 897, "name": "buildLookupTable"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to build the internal data structure.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 416, "name": "closeNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 428, "name": "closeNodeWithoutScrolling"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"name": "getChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>childProperty</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>childProperty</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>delegate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>hideRoot</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>itemHeight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 539, "name": "getLevel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "row"}, "type": "param"}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 484, "name": "getLookupTable"}, "type": "method"}, {"attributes": {"name": "getModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>openMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>openMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 527, "name": "getOpenNodes"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all open nodes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>All open nodes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 1089, "name": "getParent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>Node or leaf to get parent.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to get the parent node. Node! This only works with leaf and\nnodes which are in the internal lookup table.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parent note or <code>null</code> when no parent found.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>showLeafs</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getShowTopLevelOpenCloseIcons", "fromProperty": "showTopLevelOpenCloseIcons"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>showTopLevelOpenCloseIcons</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showTopLevelOpenCloseIcons}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>showTopLevelOpenCloseIcons</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 545, "name": "hasChildren"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "name": "initChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>childProperty</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>childProperty</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>delegate</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>hideRoot</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>hideRoot</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>itemHeight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>itemHeight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>model</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>openMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>openMode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>showLeafs</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>showLeafs</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initShowTopLevelOpenCloseIcons", "fromProperty": "showTopLevelOpenCloseIcons"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>showTopLevelOpenCloseIcons</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>showTopLevelOpenCloseIcons</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #showTopLevelOpenCloseIcons}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>hideRoot</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 533, "name": "isNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param"}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 442, "name": "isNodeOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"name": "isShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>showLeafs</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isShowTopLevelOpenCloseIcons", "fromProperty": "showTopLevelOpenCloseIcons"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>showTopLevelOpenCloseIcons</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showTopLevelOpenCloseIcons}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 372, "name": "openNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"line": 408, "name": "openNodeAndParents"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to open.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Opens the passed node and all his parents. <strong>Note!</strong> The algorithm\nimplements a depth-first search with a complexity: <code>O(n)</code> and\n<code>n</code> are all model items.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "line": 380, "name": "openNodeWithoutScrolling"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"line": 396, "name": "refresh"}, "type": "method", "children": [{"attributes": {"text": "<p>Trigger a rebuild from the internal data structure.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>childProperty</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>delegate</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>hideRoot</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>itemHeight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>model</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>openMode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>showLeafs</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetShowTopLevelOpenCloseIcons", "fromProperty": "showTopLevelOpenCloseIcons"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>showTopLevelOpenCloseIcons</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #showTopLevelOpenCloseIcons}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>childProperty</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>childProperty</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>hideRoot</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>itemHeight</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>openMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>openMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>showLeafs</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setShowTopLevelOpenCloseIcons", "fromProperty": "showTopLevelOpenCloseIcons"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>showTopLevelOpenCloseIcons</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>showTopLevelOpenCloseIcons</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showTopLevelOpenCloseIcons}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "line": 354, "overriddenFrom": "qx.ui.core.Widget", "name": "syncWidget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "jobs"}, "type": "param"}]}]}, {"attributes": {"name": "toggleHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleShowTopLevelOpenCloseIcons", "fromProperty": "showTopLevelOpenCloseIcons"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>showTopLevelOpenCloseIcons</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showTopLevelOpenCloseIcons}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"virtual-tree\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.scroll.AbstractScrollArea"}, "type": "property"}, {"attributes": {"allowNull": "true", "apply": "_applyChildProperty", "check": "String", "name": "childProperty", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The name of the property, where the children are stored in the model.\nInstead of the {@link #labelPath} must the child property a direct\nproperty form the model instance.</p>"}, "type": "desc"}]}, {"attributes": {"name": "delegate", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyDelegate", "event": "changeDelegate"}, "type": "property", "children": [{"attributes": {"text": "<p>Delegation object, which can have one or more functions defined by the\n{@link qx.ui.tree.core.IVirtualTreeDelegate} interface.</p>"}, "type": "desc"}]}, {"attributes": {"name": "focusable", "docFrom": "qx.ui.core.Widget", "defaultValue": "true", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"name": "height", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "200", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.virtual.core.Scroller"}, "type": "property"}, {"attributes": {"check": "Boolean", "apply": "_applyHideRoot", "defaultValue": "false", "name": "hideRoot", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Hides <strong>only</strong> the root node, not the node&#8217;s children when the property is\nset to <code>true</code>.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyIconOptions", "name": "iconOptions", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the icon binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyIconPath", "check": "String", "name": "iconPath", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The path to the property which holds the information that should be\nshown as an icon.</p>"}, "type": "desc"}]}, {"attributes": {"name": "itemHeight", "defaultValue": "25", "propertyType": "new", "apply": "_applyRowHeight", "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Default item height.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyLabelOptions", "name": "labelOptions", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the label binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyLabelPath", "check": "String", "name": "labelPath", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The name of the property, where the value for the tree folders label\nis stored in the model classes.</p>"}, "type": "desc"}]}, {"attributes": {"name": "model", "check": "qx.core.Object", "allowNull": "true", "propertyType": "new", "apply": "_applyModel", "event": "changeModel"}, "type": "property", "children": [{"attributes": {"text": "<p>The model containing the data (nodes and/or leafs) which should be shown\nin the tree.</p>"}, "type": "desc"}]}, {"attributes": {"name": "openMode", "defaultValue": "\"dbltap\"", "propertyType": "new", "apply": "_applyOpenMode", "possibleValues": "\"tap\",\"dbltap\",\"none\"", "event": "changeOpenMode", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Control whether tap or double tap should open or close the tapped\nitem.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyShowLeafs", "defaultValue": "true", "name": "showLeafs", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Configures the tree to show also the leafs. When the property is set to\n<code>false</code> <strong>only</strong> the nodes are shown.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyShowTopLevelOpenCloseIcons", "defaultValue": "false", "name": "showTopLevelOpenCloseIcons", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether top level items should have an open/close button. The top level\nitem item is normally the root item, but when the root is hidden, the\nroot children are the top level items.</p>"}, "type": "desc"}]}, {"attributes": {"name": "width", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "100", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.virtual.core.Scroller"}, "type": "property"}]}]}