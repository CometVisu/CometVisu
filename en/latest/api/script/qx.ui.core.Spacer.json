{"attributes": {"fullName": "qx.ui.core.Spacer", "packageName": "qx.ui.core", "type": "class", "name": "Spacer", "superClass": "qx.ui.core.LayoutItem"}, "type": "class", "children": [{"attributes": {"text": "<p>A Spacer is a &#8220;virtual&#8221; widget, which can be placed into any layout and takes\nthe space a normal widget of the same size would take.</p>\n\n<p>Spacers are invisible and very light weight because they don&#8217;t require any\n<span class=\"caps\">DOM</span> modifications.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget.</p>\n\n<pre class=\"javascript\">\n  var container = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n  container.add(new qx.ui.core.Widget());\n  container.add(new qx.ui.core.Spacer(50));\n  container.add(new qx.ui.core.Widget());\n</pre>\n\n<p>This example places two widgets and a spacer into a container with a\nhorizontal box layout. In this scenario the spacer creates an empty area of\n50 pixel width between the two widgets.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://manual.qooxdoo.org/5.1/pages/widget/spacer.html\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo manual.</a>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 63, "isCtor": true, "overriddenFrom": "qx.ui.core.LayoutItem", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "width"}, "type": "param", "children": [{"attributes": {"text": "<p>the initial width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "height"}, "type": "param", "children": [{"attributes": {"text": "<p>the initial height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 98, "name": "addChildrenToQueue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "queue"}, "type": "param", "children": [{"attributes": {"text": "<p>The queue to add widgets to</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Recursively adds all children to the given queue</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 88, "name": "checkAppearanceNeeds"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method called from the visibility queue to detect outstanding changes\nto the appearance.</p>"}, "type": "desc"}]}, {"attributes": {"line": 110, "name": "destroy"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes this widget from its parent and dispose it.</p>\n\n<p>Please note that the widget is not disposed synchronously. The\nreal dispose happens after the next queue flush.</p>"}, "type": "desc"}]}]}]}