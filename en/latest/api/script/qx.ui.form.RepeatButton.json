{"attributes": {"fullName": "qx.ui.form.RepeatButton", "packageName": "qx.ui.form", "type": "class", "name": "RepeatButton", "superClass": "qx.ui.form.Button"}, "type": "class", "children": [{"attributes": {"text": "<p>The RepeatButton is a special button, which fires repeatedly {@link #execute}\nevents, while a button is pressed on the button. The initial delay\nand the interval time can be set using the properties {@link #firstInterval}\nand {@link #interval}. The {@link #execute} events will be fired in a shorter\namount of time if a button is hold, until the min {@link #minTimer}\nis reached. The {@link #timerDecrease} property sets the amount of milliseconds\nwhich will decreased after every firing.</p>\n\n<pre class=\"javascript\">\n  var button = new qx.ui.form.RepeatButton(\"Hello World\");\n\n  button.addListener(\"execute\", function(e) {\n    alert(\"Button is executed\");\n  }, this);\n\n  this.getRoot.add(button);\n</pre>\n\n<p>This example creates a button with the label &#8220;Hello World&#8221; and attaches an\nevent listener to the {@link #execute} event.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://manual.qooxdoo.org/5.1/pages/widget/repeatbutton.html\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo manual.</a>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 58, "isCtor": true, "overriddenFrom": "qx.ui.form.Button", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "label"}, "type": "param", "children": [{"attributes": {"text": "<p>Label to use</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "icon"}, "type": "param", "children": [{"attributes": {"text": "<p>Icon to use</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "execute"}, "type": "event", "children": [{"attributes": {"text": "<p>This event gets dispatched with every interval. The timer gets executed\nas long as the user holds down a button.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "press"}, "type": "event", "children": [{"attributes": {"text": "<p>This event gets dispatched when the button is pressed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "release"}, "type": "event", "children": [{"attributes": {"text": "<p>This event gets dispatched when the button is released.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 412, "name": "__startInternalTimer"}, "type": "method", "children": [{"attributes": {"text": "<p>Starts the internal timer which causes firing of execution\nevents in an interval. It also presses the button.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 434, "name": "__stopInternalTimer"}, "type": "method", "children": [{"attributes": {"text": "<p>Stops the internal timer and releases the button.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 198, "overriddenFrom": "qx.ui.core.Widget", "name": "_applyEnabled"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.core.Widget#enabled"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>enabled</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #enabled}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 394, "name": "_onInterval"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>interval event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Callback for the interval event.</p>\n\n<p>Stops the timer and starts it with a new interval\n(value of the &#8220;interval&#8221; property &#8211; value of the &#8220;timerDecrease&#8221; property).\nDispatches the &#8220;execute&#8221; event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 371, "overriddenFrom": "qx.ui.form.Button", "name": "_onKeyDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Key event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;keydown&#8221; event.</p>\n\n<p>Removes &#8220;abandoned&#8221; and adds &#8220;pressed&#8221; state\nfor the keys &#8220;Enter&#8221; or &#8220;Space&#8221;. It also starts\nthe internal timer (same like pointerdown).</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 341, "overriddenFrom": "qx.ui.form.Button", "name": "_onKeyUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Key event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;keyup&#8221; event.</p>\n\n<p>Removes &#8220;abandoned&#8221; and &#8220;pressed&#8221; state (if &#8220;pressed&#8221; state is set)\nfor the keys &#8220;Enter&#8221; or &#8220;Space&#8221; and stops the internal timer\n(same like pointer up).</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 286, "overriddenFrom": "qx.ui.form.Button", "name": "_onPointerDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointerdown event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Callback method for the &#8220;pointerdown&#8221; method.</p>\n\n<p>Sets the interval of the timer (value of firstInterval property) and\nstarts the timer. Additionally removes the state &#8220;abandoned&#8221; and adds the\nstate &#8220;pressed&#8221;.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 260, "overriddenFrom": "qx.ui.form.Button", "name": "_onPointerOut"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Pointer event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;pointerout&#8221; event\n<ul>\n<li>Removes &#8220;hovered&#8221; state</li>\n<li>Adds &#8220;abandoned&#8221; and removes &#8220;pressed&#8221; state (if &#8220;pressed&#8221; state is set)</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 234, "overriddenFrom": "qx.ui.form.Button", "name": "_onPointerOver"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Pointer event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;pointerover&#8221; event\n<ul>\n<li>Adds state &#8220;hovered&#8221;</li>\n<li>Removes &#8220;abandoned&#8221; and adds &#8220;pressed&#8221; state (if &#8220;abandoned&#8221; state is set)</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 310, "overriddenFrom": "qx.ui.form.Button", "name": "_onPointerUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointerup event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Callback method for the &#8220;pointerup&#8221; event.</p>\n\n<p>Handles the case that the user is releasing a button\nbefore the timer interval method got executed. This way the\n&#8220;execute&#8221; method get executed at least one time.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.form.Button", "line": 329, "overriddenFrom": "qx.ui.form.Button", "name": "_onTap"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param"}]}]}, {"attributes": {"name": "getFirstInterval", "fromProperty": "firstInterval"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>firstInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #firstInterval}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>firstInterval</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getInterval", "fromProperty": "interval"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>interval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #interval}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>interval</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getMinTimer", "fromProperty": "minTimer"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>minTimer</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #minTimer}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>minTimer</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTimerDecrease", "fromProperty": "timerDecrease"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>timerDecrease</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #timerDecrease}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>timerDecrease</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initFirstInterval", "fromProperty": "firstInterval"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>firstInterval</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>firstInterval</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #firstInterval}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initInterval", "fromProperty": "interval"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>interval</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>interval</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #interval}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initMinTimer", "fromProperty": "minTimer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>minTimer</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>minTimer</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #minTimer}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTimerDecrease", "fromProperty": "timerDecrease"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>timerDecrease</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>timerDecrease</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #timerDecrease}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 139, "overriddenFrom": "qx.ui.form.Button", "name": "press"}, "type": "method", "children": [{"attributes": {"text": "<p>Calling this function is like a tap from the user on the\nbutton with all consequences.\n<span>Be sure to call the {@link #release} function.</span></p>"}, "type": "desc"}]}, {"attributes": {"line": 166, "overriddenFrom": "qx.ui.form.Button", "name": "release"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "true", "optional": true, "name": "fireExecuteEvent"}, "type": "param", "children": [{"attributes": {"text": "<p>flag which signals, if an event should be fired</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calling this function is like a release from the user on the\nbutton with all consequences.\nUsually the {@link #release} function will be called before the call of\nthis function.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetFirstInterval", "fromProperty": "firstInterval"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>firstInterval</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #firstInterval}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetInterval", "fromProperty": "interval"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>interval</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #interval}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetMinTimer", "fromProperty": "minTimer"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>minTimer</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #minTimer}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTimerDecrease", "fromProperty": "timerDecrease"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>timerDecrease</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #timerDecrease}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setFirstInterval", "fromProperty": "firstInterval"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>firstInterval</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>firstInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #firstInterval}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setInterval", "fromProperty": "interval"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>interval</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>interval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #interval}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setMinTimer", "fromProperty": "minTimer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>minTimer</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>minTimer</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #minTimer}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTimerDecrease", "fromProperty": "timerDecrease"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>timerDecrease</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>timerDecrease</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #timerDecrease}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Integer", "defaultValue": "500", "name": "firstInterval", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Interval used for the first run of the timer. Usually a greater value\nthan the &#8220;interval&#8221; property value to a little delayed reaction at the first\ntime.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "defaultValue": "100", "name": "interval", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Interval used after the first run of the timer. Usually a smaller value\nthan the &#8220;firstInterval&#8221; property value to get a faster reaction.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "defaultValue": "20", "name": "minTimer", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>This configures the minimum value for the timer interval.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "defaultValue": "2", "name": "timerDecrease", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Decrease of the timer on each interval (for the next interval) until minTimer reached.</p>"}, "type": "desc"}]}]}]}