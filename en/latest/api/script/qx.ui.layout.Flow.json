{"attributes": {"fullName": "qx.ui.layout.Flow", "packageName": "qx.ui.layout", "type": "class", "name": "Flow", "superClass": "qx.ui.layout.Abstract"}, "type": "class", "children": [{"attributes": {"text": "<p>A basic layout, which supports positioning of child widgets in a &#8216;flowing&#8217;\nmanner, starting at the container&#8217;s top/left position, placing children left to right\n(like a HBox) until the there&#8217;s no remaining room for the next child. When\nout of room on the current line of elements, a new line is started, cleared\nbelow the tallest child of the preceding line&#8212;a bit like using &#8216;float&#8217;\nin <span class=\"caps\">CSS</span>, except that a new line wraps all the way back to the left.</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li> Reversing children order </li>\n<li> Manual line breaks </li>\n<li> Horizontal alignment of lines </li>\n<li> Vertical alignment of individual widgets within a line </li>\n<li> Margins with horizontal margin collapsing </li>\n<li> Horizontal and vertical spacing </li>\n<li> Height for width calculations </li>\n<li> Auto-sizing </li>\n</ul>\n\n<p><strong>Item Properties</strong></p>\n\n<ul>\n<li><strong>lineBreak</strong> <em>(Boolean)</em>: If set to <code>true</code>\n  a forced line break will happen after this child widget.\n</li>\n<li><strong>stretch</strong> <em>(Boolean)</em>: If set to <code>true</code>\n  the widget will be stretched to the remaining line width. This requires\n  lineBreak to be true.\n</li>\n\n</ul>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the Flow layout.</p>\n\n<pre class=\"javascript\">\n var flowlayout = new qx.ui.layout.Flow();\n\n flowlayout.setAlignX( \"center\" );  // Align children to the X axis of the container (left|center|right)\n\n var container = new qx.ui.container.Composite(flowlayout);\n this.getRoot().add(container, {edge: 0});\n\n var button1 = new qx.ui.form.Button(\"1. First Button\", \"flowlayout/test.png\");\n container.add(button1);\n\n var button2 = new qx.ui.form.Button(\"2. Second longer Button...\", \"flowlayout/test.png\");\n // Have this child create a break in the current Line (next child will always start a new Line)\n container.add(button2, {lineBreak: true});\n\n var button3 = new qx.ui.form.Button(\"3rd really, really, really long Button\", \"flowlayout/test.png\");\n button3.setHeight(100);  // tall button\n container.add(button3);\n\n var button4 = new qx.ui.form.Button(\"Number 4\", \"flowlayout/test.png\");\n button4.setAlignY(\"bottom\");\n container.add(button4);\n\n var button5 = new qx.ui.form.Button(\"20px Margins around the great big 5th button!\");\n button5.setHeight(100);  // tall button\n button5.setMargin(20);\n container.add(button5, {lineBreak: true});    // Line break after this button.\n\n var button6 = new qx.ui.form.Button(\"Number 6\", \"flowlayout/test.png\");\n button6.setAlignY(\"middle\");  // Align this child to the vertical center of this line.\n container.add(button6);\n\n var button7 = new qx.ui.form.Button(\"7th a wide, short button\", \"flowlayout/test.png\");\n button7.setMaxHeight(20);  // short button\n container.add(button7);\n</pre>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://manual.qooxdoo.org/5.1/pages/layout/flow.html\">\nExtended documentation</a> and links to demos of this layout in the qooxdoo manual."}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 116, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "0", "optional": true, "name": "spacingX"}, "type": "param", "children": [{"attributes": {"text": "<p>The spacing between child widgets {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "optional": true, "name": "spacingY"}, "type": "param", "children": [{"attributes": {"text": "<p>The spacing between the lines {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"left\"", "optional": true, "name": "alignX"}, "type": "param", "children": [{"attributes": {"text": "<p>Horizontal alignment of the whole children block {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 370, "name": "__computeSize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "availWidth"}, "type": "param", "children": [{"attributes": {"text": "<p>The available width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Compute the preferred size optionally constrained by the available width</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map containing the preferred height and width of the layout</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 283, "name": "__renderLine"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "line"}, "type": "param", "children": [{"attributes": {"text": "<p>A line configuration as returned by {@link LineSizeIterator#computeNextLine}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "lineTop"}, "type": "param", "children": [{"attributes": {"text": "<p>The line&#8217;s top position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "availWidth"}, "type": "param", "children": [{"attributes": {"text": "<p>The available line width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "padding"}, "type": "param", "children": [{"attributes": {"text": "<p>Map containing the padding values. Keys: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Render a line in the flow layout</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.layout.Abstract", "line": 327, "overriddenFrom": "qx.ui.layout.Abstract", "name": "_computeSizeHint"}, "type": "method"}, {"attributes": {"docFrom": "qx.ui.layout.Abstract", "line": 223, "overriddenFrom": "qx.ui.layout.Abstract", "name": "connectToWidget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param"}]}]}, {"attributes": {"name": "getAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>alignX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>alignX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>alignY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>alignY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.layout.Abstract", "line": 339, "overriddenFrom": "qx.ui.layout.Abstract", "name": "getHeightForWidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "width"}, "type": "param"}]}]}, {"attributes": {"line": 349, "name": "getLastLineChildren"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "width"}, "type": "param", "children": [{"attributes": {"text": "<p>The width to use for the calculation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the list of children fitting in the last row of the given width.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>List of children in the first row.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>reversed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>reversed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>spacingX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>spacingX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>spacingY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>spacingY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.layout.Abstract", "line": 333, "overriddenFrom": "qx.ui.layout.Abstract", "name": "hasHeightForWidth"}, "type": "method"}, {"attributes": {"access": "protected", "name": "initAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>alignX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>alignX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>alignY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>alignY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>reversed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>reversed</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>spacingX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>spacingX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>spacingY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>spacingY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>reversed</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 250, "overriddenFrom": "qx.ui.layout.Abstract", "name": "renderLayout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "availWidth"}, "type": "param", "children": [{"attributes": {"text": "<p>Final width available for the content (in pixel)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "availHeight"}, "type": "param", "children": [{"attributes": {"text": "<p>Final height available for the content (in pixel)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "padding"}, "type": "param", "children": [{"attributes": {"text": "<p>Map containing the padding values. Keys: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The FlowLayout tries to add as many Children as possible to the current &#8216;Line&#8217;\nand when it sees that the next Child won&#8217;t fit, it starts on a new Line, continuing\nuntil all the Children have been added.\nTo enable alignX &#8220;left&#8221;, &#8220;center&#8221;, &#8220;right&#8221; renderLayout has to calculate the positions\nof all a Line&#8217;s children before it draws them.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>alignX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>alignY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>reversed</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>spacingX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>spacingY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>alignX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>alignX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>alignY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>alignY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>reversed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>reversed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSpacingX", "fromProperty": "spacingX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>spacingX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>spacingX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSpacingY", "fromProperty": "spacingY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>spacingY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>spacingY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacingY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>reversed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"apply": "_applyLayoutChange", "defaultValue": "\"left\"", "name": "alignX", "possibleValues": "\"left\",\"center\",\"right\"", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Horizontal alignment of the whole children block. The horizontal\nalignment of the child is completely ignored in HBoxes (\n{@link qx.ui.core.LayoutItem#alignX}).</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_applyLayoutChange", "defaultValue": "\"top\"", "name": "alignY", "possibleValues": "\"top\",\"middle\",\"bottom\"", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Vertical alignment of each child. Can be overridden through\n{@link qx.ui.core.LayoutItem#alignY}.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyLayoutChange", "defaultValue": "false", "name": "reversed", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the actual children list should be laid out in reversed order.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "apply": "_applyLayoutChange", "defaultValue": "0", "name": "spacingX", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Horizontal spacing between two children</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "apply": "_applyLayoutChange", "defaultValue": "0", "name": "spacingY", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The vertical spacing between the lines.</p>"}, "type": "desc"}]}]}]}