{"attributes": {"fullName": "qx.data.marshal.IMarshalerDelegate", "packageName": "qx.data.marshal", "type": "interface", "name": "IMarshalerDelegate", "childClasses": "qx.data.store.IStoreDelegate"}, "type": "class", "children": [{"attributes": {"text": "<p>Objects, which are used as delegates for a data binding marshaler may\nimplement any of the methods described in this interface. The delegate does\nnot need implement all of the methods of this interface. If a method is not\nimplemented the marshaler provides a default implementation.</p>\n\n<p>Note: This interface is meant to document the delegate but should not be\nlisted in the <code>implement</code> key of a class unless all methods are\nreally implemented.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 143, "name": "getArrayClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "parentProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>If there is a named parent property, the name is given here. This might be null in case of the root data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "depth"}, "type": "param", "children": [{"attributes": {"text": "<p>The depth level of the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the array class which should be used by the marshaler. The passed\nparameters can be used to determine the array class. The return array class\nmust implement the {@link qx.data.IListData} interface.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns the class which should be used as array class. If <code>null</code> will be returned, {@link qx.data.Array} will be used as array class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 82, "name": "getModelClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A sorted order of propertynames separated by &#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>The object for which an class is needed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "parentProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>If there is a named parent property, the name is given here. This might be null in case of the root data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "depth"}, "type": "param", "children": [{"attributes": {"text": "<p>The depth level of the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Determines the user defined class for the given properties string.\nThis class could contain additional methods but needs to have the\nproperties with the given names. Also every property needs to have a\nchange event.</p>\n\n<p>If this method is implemented, you have to add the superclass and mixins\nyourself to the returned class. This means that the methods\n{@link #getModelSuperClass} and {@link #getModelMixins} will not be\ncalled for the corresponding class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns the class containing the properties corresponding to the given hash of the properties. If <code>null</code> will be returned, the marshaler will create a class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 114, "name": "getModelMixins"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A sorted order of propertynames separated by &#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "parentProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>If there is a named parent property, the name is given here. This might be null in case of the root data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "depth"}, "type": "param", "children": [{"attributes": {"text": "<p>The depth level of the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the mixins which should be included to the class, created by the\nmarshaler and identified by the given properties string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns an array of mixins or a single mixin which will be included into the given class identified by the properties given in the parameter. If <code>null</code> will be returned, no mixin will be included.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}, {"attributes": {"type": "Mixin"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 97, "name": "getModelSuperClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A sorted order of propertynames separated by &#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "parentProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>If there is a named parent property, the name is given here. This might be null in case of the root data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "depth"}, "type": "param", "children": [{"attributes": {"text": "<p>The depth level of the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the class which the created model class uses as superclass.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns the class which should be used as superclass corresponding to the given hash of the properties. If <code>null</code> will be returned, {@link qx.core.Object} will be used as superclass.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 58, "name": "getPropertyMapping"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "property"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property from the data source.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A sorted order of propertynames separated by &#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gives the possibility to change the names given in the data to convert\nto something different.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The new property name which should be used for that property in the model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 129, "name": "getValidationRule"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A sorted order of propertynames separated by &#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "propertyName"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the current property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the validation rules which should be added to the created class\nfor the given property. This method will be called for every property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>If you want to have a validation rule for the current property, you should return a validation function which will be included into the property definition as validator. {@link qx.core.Property} for more details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 45, "name": "ignore"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A sorted order of propertynames separated by &#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "parentProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>If there is a named parent property, the name is given here. This might be null in case of the root data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "depth"}, "type": "param", "children": [{"attributes": {"text": "<p>The depth level of the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gives the possibility to ignore parts of the marshaled data and store the\noriginal data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the set should be ignored"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}]}