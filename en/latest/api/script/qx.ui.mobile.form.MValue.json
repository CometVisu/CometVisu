{"attributes": {"fullName": "qx.ui.mobile.form.MValue", "packageName": "qx.ui.mobile.form", "type": "mixin", "name": "MValue", "includer": "qx.ui.mobile.form.ToggleButton,qx.ui.mobile.form.TextField,qx.ui.mobile.form.NumberField,qx.ui.mobile.form.CheckBox,qx.ui.mobile.form.RadioButton,qx.ui.mobile.form.SelectBox,qx.ui.mobile.form.TextArea,qx.ui.mobile.form.Slider"}, "type": "class", "children": [{"attributes": {"text": "<p>The mixin contains all functionality to provide a value property for input\nwidgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 37, "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value of the widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeValue"}, "type": "event", "children": [{"attributes": {"text": "<p>The event is fired each time the text field looses focus and the\ntext field values has changed.</p>\n\n<p>If you change {@link #liveUpdate} to true, the changeValue event will\nbe fired after every keystroke and not only after every focus loss. In\nthat mode, the changeValue event is equal to the {@link #input} event.</p>\n\n<p>The method {@link qx.event.type.Data#getData} returns the\ncurrent text value of the field.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "input"}, "type": "event", "children": [{"attributes": {"text": "<p>The event is fired on every keystroke modifying the value of the field.</p>\n\n<p>The method {@link qx.event.type.Data#getData} returns the\ncurrent value of the text field.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 275, "isMixin": true, "name": "__fireChangeValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The current value to fire.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fires the {@link #changeValue} event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 132, "isMixin": true, "name": "_convertValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to convert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts the incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The converted value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 247, "isMixin": true, "name": "_getCaretPosition"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the caret position of this widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the caret position.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 160, "isMixin": true, "name": "_onBlur"}, "type": "method", "children": [{"attributes": {"text": "<p>Handler for <code>blur</code> event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 218, "isMixin": true, "name": "_onChangeContent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "evt"}, "type": "param", "children": [{"attributes": {"text": "<p>The event, containing the changed content.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler. Called when the {@link #changeValue} event occurs.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 152, "isMixin": true, "name": "_onFocus"}, "type": "method", "children": [{"attributes": {"text": "<p>Handler for <code>focus</code> event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 229, "isMixin": true, "name": "_onInput"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "evt"}, "type": "param", "children": [{"attributes": {"text": "<p>The event, containing the changed content.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler. Called when the {@link #input} event occurs.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 261, "isMixin": true, "name": "_setCaretPosition"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "position"}, "type": "param", "children": [{"attributes": {"text": "<p>the caret position.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the caret position on this widget.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getLiveUpdate", "fromProperty": "liveUpdate"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>liveUpdate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #liveUpdate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>liveUpdate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 198, "isMixin": true, "name": "getValue"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the set value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 169, "isMixin": true, "name": "hasFocus"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns whether this widget has focus or not.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> or <code>false</code>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLiveUpdate", "fromProperty": "liveUpdate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>liveUpdate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>liveUpdate</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #liveUpdate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isLiveUpdate", "fromProperty": "liveUpdate"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>liveUpdate</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #liveUpdate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetLiveUpdate", "fromProperty": "liveUpdate"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>liveUpdate</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #liveUpdate}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 207, "isMixin": true, "name": "resetValue"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the value.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setLiveUpdate", "fromProperty": "liveUpdate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>liveUpdate</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>liveUpdate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #liveUpdate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 179, "isMixin": true, "name": "setValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to set</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the value.</p>"}, "type": "desc"}]}, {"attributes": {"name": "toggleLiveUpdate", "fromProperty": "liveUpdate"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>liveUpdate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #liveUpdate}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Boolean", "defaultValue": "false", "isMixin": true, "name": "liveUpdate", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the {@link #changeValue} event should be fired on every key\ninput. If set to true, the changeValue event is equal to the\n{@link #input} event.</p>"}, "type": "desc"}]}]}]}