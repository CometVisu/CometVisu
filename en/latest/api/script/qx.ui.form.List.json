{"attributes": {"name": "List", "interfaces": "qx.ui.core.IMultiSelection,qx.ui.form.IForm,qx.ui.form.IModelSelection", "mixins": "qx.ui.core.MRemoteChildrenHandling,qx.ui.core.MMultiSelectionHandling,qx.ui.form.MForm,qx.ui.form.MModelSelection", "superClass": "qx.ui.core.scroll.AbstractScrollArea", "fullName": "qx.ui.form.List", "type": "class", "packageName": "qx.ui.form"}, "type": "class", "children": [{"attributes": {"text": "<p>A list of items. Displays an automatically scrolling list for all\nadded {@link qx.ui.form.ListItem} instances. Supports various\nselection options: single, multi, ...</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 52, "isCtor": true, "overriddenFrom": "qx.ui.core.scroll.AbstractScrollArea", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "optional": true, "name": "horizontal"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the list should be horizontal.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "addItem"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is fired after a list item was added to the list. The\n{@link qx.event.type.Data#getData} method of the event returns the\nadded item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "removeItem"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is fired after a list item has been removed from the list.\nThe {@link qx.event.type.Data#getData} method of the event returns the\nremoved item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"list\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.scroll.AbstractScrollArea"}, "type": "property"}, {"attributes": {"check": "Boolean", "defaultValue": "true", "name": "enableInlineFind", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Controls whether the inline-find feature is activated or not</p>"}, "type": "desc"}]}, {"attributes": {"name": "focusable", "docFrom": "qx.ui.core.Widget", "defaultValue": "true", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"apply": "_applyOrientation", "defaultValue": "\"vertical\"", "name": "orientation", "possibleValues": "\"horizontal\",\"vertical\"", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the list should be rendered horizontal or vertical.</p>"}, "type": "desc"}]}, {"attributes": {"name": "spacing", "defaultValue": "0", "propertyType": "new", "apply": "_applySpacing", "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Spacing between the items</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 253, "name": "_applyOrientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.form.List#orientation"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 270, "name": "_applySpacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.form.List#spacing"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 241, "name": "_createListItemContainer"}, "type": "method", "children": [{"attributes": {"text": "<p>This container holds the list item widgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Container for the list item widgets</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.container.Composite"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 194, "name": "_onAddChild"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>the event instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handle child widget adds on the content pane</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 317, "name": "_onKeyInput"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>key input event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.KeyInput"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handles the inline find &#8211; if enabled</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 288, "name": "_onKeyPress"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>KeyPress event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.KeySequence"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for <code>keypress</code> events.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the event was processed</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 203, "name": "_onRemoveChild"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>the event instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handle child widget removes on the content pane</p>"}, "type": "desc"}]}, {"attributes": {"line": 392, "name": "findItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "search"}, "type": "param", "children": [{"attributes": {"text": "<p>A label or any item</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "optional": true, "name": "ignoreCase"}, "type": "param", "children": [{"attributes": {"text": "<p>description</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find an item by its {@link qx.ui.basic.Atom#getLabel}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The found ListItem or null</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.ListItem"}, "type": "entry"}]}]}]}, {"attributes": {"line": 359, "name": "findItemByLabelFuzzy"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "search"}, "type": "param", "children": [{"attributes": {"text": "<p>The text with which the label of the ListItem should start with</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Takes the given string and tries to find a ListItem\nwhich starts with this string. The search is not case sensitive and the\nfirst found ListItem will be returned. If there could not be found any\nqualifying list item, null will be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The found ListItem or null</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.form.ListItem"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "line": 185, "overriddenFrom": "qx.ui.core.Widget", "name": "getChildrenContainer"}, "type": "method"}, {"attributes": {"name": "getEnableInlineFind", "fromProperty": "enableInlineFind"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>enableInlineFind</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #enableInlineFind}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>enableInlineFind</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 221, "name": "handleKeyPress"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>KeyPress event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.KeySequence"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Used to route external <code>keypress</code> events to the list\nhandling (in fact the manager of the list)</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "initEnableInlineFind", "fromProperty": "enableInlineFind"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>enableInlineFind</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>enableInlineFind</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #enableInlineFind}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>orientation</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>spacing</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isEnableInlineFind", "fromProperty": "enableInlineFind"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>enableInlineFind</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #enableInlineFind}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetEnableInlineFind", "fromProperty": "enableInlineFind"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>enableInlineFind</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #enableInlineFind}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>orientation</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>spacing</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setEnableInlineFind", "fromProperty": "enableInlineFind"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>enableInlineFind</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>enableInlineFind</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #enableInlineFind}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleEnableInlineFind", "fromProperty": "enableInlineFind"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>enableInlineFind</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #enableInlineFind}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}]}