{"attributes": {"fullName": "cv.Transform", "packageName": "cv", "isStatic": true, "type": "class", "name": "Transform"}, "type": "class", "children": [{"attributes": {"text": "<div class=\"authors\"><label>Author:</label><p>Christian Mayer</p></div><div class=\"since\"><label>Since:</label><p>2010</p></div><p>This class defines some default transformations like <code>raw</code>, <code>int</code> and <code>float</code>.\nNew transformation can be added and used. For example an openHAB transformation for a switch item is added by\n{@link cv.transforms.OpenHab} like this:</p>\n\n<pre class=\"javascript\">\n  cv.Transform.addTransform('OH', {\n   'switch': {\n     name: 'OH_Switch',\n      encode: function (phy) {\n        return phy == 1 ? 'ON' : 'OFF';\n     },\n\n      decode: function (string) {\n        if (cv.transforms.OpenHab.isUndefined(string)) return 0;\n        return (string == \"ON\" || parseInt(string) > 0) ? 1 : 0;\n      }\n    }\n  });\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 94, "isStatic": true, "name": "addTransform"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "prefix"}, "type": "param", "children": [{"attributes": {"text": "<p>Tranformation prefix (e.g. <span class=\"caps\">DPT</span> for <span class=\"caps\">KNX</span> tranformations or OH for openHAB transformations)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "transforms"}, "type": "param", "children": [{"attributes": {"text": "<p>map of transformations</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add transformation rules to the registry</p>"}, "type": "desc"}]}, {"attributes": {"line": 112, "isStatic": true, "name": "clip"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "min"}, "type": "param", "children": [{"attributes": {"text": "<p>lower threshold</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>value to clip</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "max"}, "type": "param", "children": [{"attributes": {"text": "<p>upper threshold</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Enforce that value stays within range\nWhen value is not a valid number, the min value is returned</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the clipped value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 140, "isStatic": true, "name": "decode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "transformation"}, "type": "param", "children": [{"attributes": {"text": "<p>type of the transformation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>value to transform</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>transform bus to JavaScript value</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the decoded value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 124, "isStatic": true, "name": "encode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "transformation"}, "type": "param", "children": [{"attributes": {"text": "<p>type of the transformation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>value to transform</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>transform JavaScript to bus value</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the encoded value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "registry"}, "type": "constant"}]}]}