{"attributes": {"fullName": "qx.bom.Element", "packageName": "qx.bom", "isStatic": true, "type": "class", "name": "Element"}, "type": "class", "children": [{"attributes": {"text": "<p>This class is mainly a convenience wrapper for <span class=\"caps\">DOM</span> elements to\nqooxdoo&#8217;s event system.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 148, "isStatic": true, "name": "activate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to focus</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Activates the given element. The active element receives all key board events.</p>"}, "type": "desc"}]}, {"attributes": {"line": 70, "isStatic": true, "name": "addListener"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to attach the event on.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the event e.g. &#8220;click&#8221;, &#8220;keydown&#8221;, ...</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Event listener function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>Reference to the &#8216;this&#8217; variable inside the event listener. When not given, the corresponding dispatcher usually falls back to a default, which is the target by convention. Note this is not a strict requirement, i.e. custom dispatchers can follow a different strategy.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether to attach the event to the capturing phase or the bubbling phase of the event. The default is to attach the event handler to the bubbling phase.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add an event listener to a <span class=\"caps\">DOM</span> element. The event listener is passed an\ninstance of {@link Event} containing all relevant information\nabout the event as parameter.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An opaque id, which can be used to remove the event listener using the {@link #removeListenerById} method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 138, "isStatic": true, "name": "blur"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to blur</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Blurs the given element</p>"}, "type": "desc"}]}, {"attributes": {"line": 171, "isStatic": true, "name": "capture"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to capture</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "optional": true, "name": "containerCapture"}, "type": "param", "children": [{"attributes": {"text": "<p>If true all events originating in the container are captured. If false events originating in the container are not captured.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Captures the given element</p>"}, "type": "desc"}]}, {"attributes": {"line": 200, "isStatic": true, "name": "clone"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>Element to clone</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "events"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether events should be copied as well</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clone given <span class=\"caps\">DOM</span> element. May optionally clone all attached\nevents (recursively) as well.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The copied element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 158, "isStatic": true, "name": "deactivate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to focus</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Deactivates the given element. The active element receives all key board events.</p>"}, "type": "desc"}]}, {"attributes": {"line": 128, "isStatic": true, "name": "focus"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to focus</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Focuses the given element. The element needs to have a positive <code>tabIndex</code> value.</p>"}, "type": "desc"}]}, {"attributes": {"line": 118, "isStatic": true, "name": "hasListener"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>The event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether to check for listeners of the bubbling or of the capturing phase.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether there are one or more listeners for an event type\nregistered at the element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the element has event listeners of the given type.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 181, "isStatic": true, "name": "releaseCapture"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to release</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Releases the given element (from a previous {@link #capture} call)</p>"}, "type": "desc"}]}, {"attributes": {"line": 90, "isStatic": true, "name": "removeListener"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> Element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>The pointer to the event listener</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>Reference to the &#8216;this&#8217; variable inside the event listener.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether to remove the event listener of the bubbling or of the capturing phase.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove an event listener from a from <span class=\"caps\">DOM</span> node.</p>\n\n<p>Note: All registered event listeners will automatically be removed from\n  the <span class=\"caps\">DOM</span> at page unload so it is not necessary to detach events yourself.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the listener was removed"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 103, "isStatic": true, "name": "removeListenerById"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>The event target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id returned by {@link #addListener}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes an event listener from an event target by an id returned by\n{@link #addListener}</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the listener was removed"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}]}