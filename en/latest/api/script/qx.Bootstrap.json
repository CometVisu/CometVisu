{"attributes": {"fullName": "qx.Bootstrap", "packageName": "qx", "isStatic": true, "type": "bootstrap", "name": "Bootstrap"}, "type": "class", "children": [{"attributes": {"text": "<p>Internal class that is responsible for bootstrapping the qooxdoo\nframework at load time.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 426, "isStatic": true, "name": "addPendingDefer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>Class to add a callback to</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "cb"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a callback for a class so that it&#8217;s defer method can be called, either after all classes\nare loaded or when absolutely necessary because of load-time requirements of other classes.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1, "isStatic": true, "name": "base"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>the arguments variable of the calling method</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}, {"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>variable number of arguments passed to the overwritten function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Call the same method of the super class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the return value of the method of the base class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 710, "isStatic": true, "name": "bind"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The object that the &#8220;this&#8221; of the function will refer to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a function whose &#8220;this&#8221; is altered.</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">qx.Bootstrap.bind(myFunction, [self, [varargs...]]);</pre>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nfunction myFunction()\n{\n  this.setStyle('color', 'red');\n  // note that 'this' here refers to myFunction, not an element\n  // we'll need to bind this function to the element we want to alter\n};\n\nvar myBoundFunction = qx.Bootstrap.bind(myFunction, myElement);\nmyBoundFunction(); // this will make the element myElement red.\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The bound function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 1, "isStatic": true, "name": "createNamespace"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>The complete namespace to create. Typically, the last part is the class name itself</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>The object to attach to the namespace</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a namespace and assigns the given object to it.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>last part of the namespace (which object is assigned to)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>when the given object already exists.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 882, "isStatic": true, "name": "debug"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;debug&#8221; to the logger.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1, "isStatic": true, "name": "define"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the class. If null, the class will not be attached to a namespace.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "config"}, "type": "param", "children": [{"attributes": {"text": "<p>Class definition structure. The configuration map has the following keys: <table> <tr><th>Name</th><th>Type</th><th>Description</th></tr> <tr><th>extend</th><td>Class</td><td>The super class the current class inherits from.</td></tr> <tr><th>construct</th><td>Function</td><td>The constructor of the class.</td></tr> <tr><th>statics</th><td>Map</td><td>Map of static values / functions of the class.</td></tr> <tr><th>members</th><td>Map</td><td>Map of instance members of the class.</td></tr> <tr><th>defer</th><td>Function</td><td>Function that is called at the end of processing the class declaration.</td></tr> </table></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Define a new class using the qooxdoo class system.\nLightweight version of {@link qx.Class#define} with less features.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The defined class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"line": 921, "isStatic": true, "name": "error"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;error&#8221; to the logger.</p>"}, "type": "desc"}]}, {"attributes": {"line": 443, "isStatic": true, "name": "executePendingDefers"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "dbClassInfo"}, "type": "param", "children": [{"attributes": {"text": "<p>qxcompiler map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the defer methods for classes which are required by the dependency information in\ndbClassInfo (which is a map in the format generated by qxcompiler).  Defer methods are of course\nonly executed once but they are always put off until absolutely necessary to avoid potential\nside effects and recursive and/or difficult to resolve dependencies.</p>"}, "type": "desc"}]}, {"attributes": {"line": 384, "isStatic": true, "name": "extendClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>The class&#8217;s wrapped constructor</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "construct"}, "type": "param", "children": [{"attributes": {"text": "<p>The unwrapped constructor</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "superClass"}, "type": "param", "children": [{"attributes": {"text": "<p>The super class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>fully qualified class name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "basename"}, "type": "param", "children": [{"attributes": {"text": "<p>the base name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inherit a clazz from a super class.</p>\n\n<p>This function differentiates between class and constructor because the\nconstructor written by the user might be wrapped and the <code>base</code>\nproperty has to be attached to the constructor, while the <code>superclass</code>\nproperty has to be attached to the wrapped constructor.</p>"}, "type": "desc"}]}, {"attributes": {"line": 744, "isStatic": true, "name": "firstLow"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to lower case.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with a lower case first character</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 733, "isStatic": true, "name": "firstUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to upper case.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with an upper case first character</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 1, "isStatic": true, "name": "genericToString"}, "type": "method", "children": [{"attributes": {"text": "<p>This method will be attached to all classes to return\na nice identifier for them.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The class identifier</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 520, "isStatic": true, "name": "getByName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>class name to resolve</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find a class by its name</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"line": 763, "isStatic": true, "name": "getClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>value to get the class for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the internal class of the value. See\n<a href=\"http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\">http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/</a>\nfor details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the internal class of the value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 253, "isStatic": true, "name": "getEnvironmentSetting"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key to get the value from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Minimal accessor <span class=\"caps\">API</span> for the environment settings given from the\ngenerator.</p>\n\n<p><span class=\"caps\">WARNING</span>: This method only should be used if the\n{@link qx.core.Environment} class is not loaded!</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The value of the setting or <code>undefined</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 895, "isStatic": true, "name": "info"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;info&#8221; to the logger.</p>"}, "type": "desc"}]}, {"attributes": {"line": 808, "isStatic": true, "name": "isArray"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is an array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the value is an array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 847, "isStatic": true, "name": "isFunction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is a function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the value is a function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 858, "isStatic": true, "name": "isFunctionOrAsyncFunction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is a function or an async function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the value is a function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 832, "isStatic": true, "name": "isObject"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is an object. Note that built-in types like Window are\nnot reported to be objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the value is an object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 785, "isStatic": true, "name": "isString"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is a string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the value is a string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 1, "isStatic": true, "name": "keys"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the keys of a map as array as returned by a &#8220;for&#8230; in&#8221; statement.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>array of the keys of the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 542, "isStatic": true, "name": "objectGetLength"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the number of own properties in the object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>number of objects in the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 556, "isStatic": true, "name": "objectMergeWith"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>target object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be merged</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "optional": true, "name": "overwrite"}, "type": "param", "children": [{"attributes": {"text": "<p>If enabled existing keys will be overwritten</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts all keys of the source object into the\ntarget objects. Attention: The target map gets modified.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Target with merged values from the source object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "isStatic": true, "name": "setDisplayName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fcn"}, "type": "param", "children": [{"attributes": {"text": "<p>the function to set the display name for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "classname"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the class the function is defined in</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>the function name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the display name of the given function</p>"}, "type": "desc"}]}, {"attributes": {"line": 1, "isStatic": true, "name": "setDisplayNames"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "functionMap"}, "type": "param", "children": [{"attributes": {"text": "<p>a map with functions as values</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "classname"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the class, the functions are defined in</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the names of all functions defined in the given map</p>"}, "type": "desc"}]}, {"attributes": {"line": 272, "isStatic": true, "name": "setEnvironmentSetting"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key of the setting.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value for the setting.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Minimal mutator for the environment settings given from the generator.\nIt checks for the existence of the environment settings and sets the\nkey if its not given from the generator. If a setting is available from\nthe generator, the setting will be ignored.</p>\n\n<p><span class=\"caps\">WARNING</span>: This method only should be used if the\n{@link qx.core.Environment} class is not loaded!</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 302, "isStatic": true, "name": "setRoot"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "root"}, "type": "param", "children": [{"attributes": {"text": "<p>The root to use.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Offers the ability to change the root for creating namespaces from window to\nwhatever object is given.</p>"}, "type": "desc"}]}, {"attributes": {"line": 931, "isStatic": true, "name": "trace"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints the current stack trace at level &#8220;info&#8221;</p>"}, "type": "desc"}]}, {"attributes": {"line": 908, "isStatic": true, "name": "warn"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;warn&#8221; to the logger.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "internal", "isInternal": true, "type": "Array", "name": "__shadowedKeys", "value": "[\"isPrototypeOf\",\"hasOwnProperty\",\"toLocaleString\",\"toString\",\"valueOf\",\"propertyIsEnumerable\",\"constructor\"]"}, "type": "constant", "children": [{"attributes": {"text": "<p>IE does not return &#8220;shadowed&#8221; keys even if they are defined directly\nin the object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "LOADSTART"}, "type": "constant", "children": [{"attributes": {"text": "<p>Timestamp of qooxdoo based application startup</p>"}, "type": "desc"}]}, {"attributes": {"name": "DEBUG"}, "type": "constant", "children": [{"attributes": {"text": "<p>Mapping for early use of the qx.debug environment setting.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "type": "Array", "name": "__pendingDefers", "value": "[]"}, "type": "constant", "children": [{"attributes": {"text": "<p>Private list of classes which have a defer method that needs to be executed</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "name": "__classToTypeMap"}, "type": "constant", "children": [{"attributes": {"text": "<p>Mapping from JavaScript string representation of objects to names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}]}