{"attributes": {"name": "Router", "hasWarning": true, "packageName": "cv.core.notifications", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "cv.core.notifications.Router", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Global notification handler that routes messages topic-dependent to different {@link cv.core.notifications.IHandler}\n(e.g. NotificationCenter, Dialog, Toast, console.log, native notification, internal message bus&#8230;)</p><div class=\"since\"><label>Since:</label><p>0.11.0</p></div><div class=\"authors\"><label>Author:</label><p>Tobias Br&#228;utigam</p></div>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 37, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"isStatic": true, "hasError": true, "line": 73, "name": "dispatchMessage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "topic"}, "type": "param"}, {"attributes": {"name": "message"}, "type": "param"}, {"attributes": {"name": "target"}, "type": "param"}]}, {"attributes": {"text": "<p>Shortcut to {@link cv.core.notifications.Router#dispatchMessage}</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'topic'", "column": 22, "line": 73}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'message'", "column": 22, "line": 73}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'target'", "column": 22, "line": 73}, "type": "error"}, {"attributes": {"msg": "Missing documentation for return value.", "column": 22, "line": 73}, "type": "error"}]}]}, {"attributes": {"isStatic": true, "hasError": true, "line": 57, "name": "evaluateCondition"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Evaluate the message condition, default to true is message has no condition set</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Missing documentation for return value.", "column": 24, "line": 57}, "type": "error"}]}]}, {"attributes": {"line": 11, "isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "cv.core.notifications.Router"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "hasError": true, "line": 83, "name": "getTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>target name, e.g. popup, notificationCenter, etc.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a target name to the related target object/function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the target that can handle messages</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Contains documentation for return value but at least one return statement has no value.", "column": 16, "line": 83}, "type": "error"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 275, "hasError": true, "name": "__collectAllFromSegment"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "segment"}, "type": "param"}, {"attributes": {"name": "handlers"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'segment'", "column": 30, "line": 275}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'handlers'", "column": 30, "line": 275}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 30, "line": 275}, "type": "error"}]}]}, {"attributes": {"access": "private", "line": 243, "hasError": true, "name": "__collectHandlers"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "topic"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'topic'", "column": 24, "line": 243}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 24, "line": 243}, "type": "error"}]}]}, {"attributes": {"access": "protected", "line": 194, "name": "_onIncomingData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "address"}, "type": "param", "children": [{"attributes": {"text": "<p>GA or openHAB item name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "state"}, "type": "param", "children": [{"attributes": {"text": "<p>received State</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "initial"}, "type": "param", "children": [{"attributes": {"text": "<p>true id this is the first state update for this address</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handle address state updates and show them as message</p>"}, "type": "desc"}]}, {"attributes": {"line": 300, "hasError": true, "name": "clear"}, "type": "method", "children": [{"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Documentation is missing.", "column": 12, "line": 300}, "type": "error"}]}]}, {"attributes": {"line": 285, "hasError": true, "name": "dispatchMessage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "topic"}, "type": "param"}, {"attributes": {"name": "message"}, "type": "param"}, {"attributes": {"name": "target"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'topic'", "column": 22, "line": 285}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'message'", "column": 22, "line": 285}, "type": "error"}, {"attributes": {"msg": "Parameter is not documented: 'target'", "column": 22, "line": 285}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 22, "line": 285}, "type": "error"}]}]}, {"attributes": {"line": 164, "name": "registerMessageHandler"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "handler"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "cv.core.notifications.IHandler"}, "type": "entry"}]}]}, {"attributes": {"name": "topics"}, "type": "param", "children": [{"attributes": {"text": "<p>map of topics as key and configuration-maps as values</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Register a handler for a list of topics</p>"}, "type": "desc"}]}, {"attributes": {"line": 139, "name": "registerStateUpdateHandler"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "config"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Register state update handler for one or more addresses.</p>\n\n<h4>Config Map explanation:</h4>\n\n<pre class=\"javascript\">\n{\n  <address>: [{\n   topic: \"cv.state.<address>\", // message topic used for routing\n   target: \"popup\", // where to show the message\n   severity: \"normal\", // message severity e.g. high, normal, low\n   skipInitial: true, // do not show message for initial state update\n   deletable: true, // user can delete this message\n   unique: true, // show message once at a time\n   valueMapping: \"mapping-name\", // optional mapping for value\n   addressMapping: \"mapping-name\", // optional mapping name for address\n   titleTemplate: \"Kitchen light on\", // title template of the message\n   messageTemplate: \"turned on at {{ time }} o'clock\", // message content template\n   condition: 1 // show only when the value equals the condition value\n  }]\n}\n</pre>"}, "type": "desc"}]}, {"attributes": {"line": 150, "name": "unregisterStateUpdatehandler"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "addresses"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregister state update listeners for a list of addresses</p>"}, "type": "desc"}]}]}]}