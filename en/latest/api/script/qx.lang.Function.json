{"attributes": {"fullName": "qx.lang.Function", "packageName": "qx.lang", "isStatic": true, "type": "bootstrap", "name": "Function"}, "type": "class", "children": [{"attributes": {"text": "<p>Collection of helper methods operating on functions.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 387, "isStatic": true, "name": "attempt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The object that the &#8220;this&#8221; of the function will refer to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Tries to execute the function.</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">var result = qx.lang.Function.attempt(myFunction, [self, [varargs...]]);</pre>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nvar myObject = {\n  'cow': 'moo!'\n};\n\nvar myFunction = function()\n{\n  for(var i = 0; i < arguments.length; i++) {\n    if(!this[arguments[i]]) throw('doh!');\n  }\n};\n\nvar result = qx.lang.Function.attempt(myFunction, myObject, 'pig', 'cow'); // false\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>false</code> if an exception is thrown, else the function's return."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 278, "isStatic": true, "name": "bind"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The object that the &#8220;this&#8221; of the function will refer to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a function whose &#8220;this&#8221; is altered.</p>\n\n<p><strong>Native way</strong></p>\n\n<p>This is also a feature of JavaScript 1.8.5 and will be supplied\nby modern browsers. Including {@link qx.lang.normalize.Function}\nwill supply a cross browser normalization of the native\nimplementation. We like to encourage you to use the native function!</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">qx.lang.Function.bind(myFunction, [self, [varargs...]]);</pre>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nfunction myFunction()\n{\n  this.setStyle('color', 'red');\n  // note that 'this' here refers to myFunction, not an element\n  // we'll need to bind this function to the element we want to alter\n};\n\nvar myBoundFunction = qx.lang.Function.bind(myFunction, myElement);\nmyBoundFunction(); // this will make the element myElement red.\n</pre>\n\n<p>If you find yourself using this static method a lot, you may be\ninterested in the bindTo() method in the mixin qx.core.MBindTo.</p>"}, "type": "desc"}, {"attributes": {"name": "qx.core.MBindTo"}, "type": "see", "children": [{"attributes": {"text": ""}, "type": "desc"}]}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The bound function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"line": 164, "isStatic": true, "name": "create"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Map of options <ul> <li><strong>self</strong>: The object that the &#8220;this&#8221; of the function will refer to. Default is the same as the wrapper function is called.</li> <li><strong>args</strong>: An array of arguments that will be passed as arguments to the function when called. Default is no custom arguments; the function will receive the standard arguments when called.</li> <li><strong>delay</strong>: If set, the returned function will delay the actual execution by this amount of milliseconds and return a timer handle when called. Default is no delay.</li> <li><strong>periodical</strong>: If set the returned function will periodically perform the actual execution with this specified interval and return a timer handle when called. Default is no periodical execution.</li> <li><strong>attempt</strong>: If set to true, the returned function will try to execute and return either the results or false on error. Default is false.</li> </ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Base function for creating functional closures which is used by most other methods here.</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">var createdFunction = qx.lang.Function.create(myFunction, [options]);</pre>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Wrapped function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"line": 310, "isStatic": true, "name": "curry"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a function whose arguments are pre-configured.</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">qx.lang.Function.curry(myFunction, [varargs...]);</pre>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nfunction myFunction(elem) {\n  elem.setStyle('color', 'red');\n};\n\nvar myBoundFunction = qx.lang.Function.curry(myFunction, myElement);\nmyBoundFunction(); // this will make the element myElement red.\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The pre-configured function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 422, "isStatic": true, "name": "delay"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "delay"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration to wait (in milliseconds).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The object that the &#8220;this&#8221; of the function will refer to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Delays the execution of a function by a specified duration.</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">var timeoutID = qx.lang.Function.delay(myFunction, [delay, [self, [varargs...]]]);</pre>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nvar myFunction = function(){ alert('moo! Element id is: ' + this.id); };\n//wait 50 milliseconds, then call myFunction and bind myElement to it\nqx.lang.Function.delay(myFunction, 50, myElement); // alerts: 'moo! Element id is: ... '\n\n// An anonymous function, example\nqx.lang.Function.delay(function(){ alert('one second later...'); }, 1000); //wait a second and alert\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The JavaScript Timeout ID (useful for clearing delays).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 51, "isStatic": true, "name": "getCaller"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>The local arguments variable</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Extract the caller of a function from the arguments variable.\nThis will not work in Opera < 9.6.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A reference to the calling function or &#8220;undefined&#8221; if caller is not supported.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"line": 64, "isStatic": true, "name": "getName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fcn"}, "type": "param", "children": [{"attributes": {"text": "<p>function the get the name for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Try to get a sensible textual description of a function object.\nThis may be the class/mixin and method name of a function\nor at least the signature of the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Name of the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 132, "isStatic": true, "name": "globalEval"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>JavaScript commands</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Evaluates JavaScript code globally</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Result of the execution</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 330, "isStatic": true, "name": "listener"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The object that the &#8220;this&#8221; of the function will refer to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a function which could be used as a listener for a native event callback.</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">qx.lang.Function.listener(myFunction, [self, [varargs...]]);</pre>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The bound function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 454, "isStatic": true, "name": "periodical"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "interval"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration of the intervals between executions.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The object that the &#8220;this&#8221; of the function will refer to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes a function in the specified intervals of time</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">var intervalID = qx.lang.Function.periodical(myFunction, [period, [self, [varargs...]]]);</pre>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nvar Site = { counter: 0 };\nvar addCount = function(){ this.counter++; };\nqx.lang.Function.periodical(addCount, 1000, Site); // will add the number of seconds at the Site\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The Interval ID (useful for clearing a periodical).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}]}]}