{"attributes": {"name": "ThemedIframe", "packageName": "qx.ui.embed", "mixins": "qx.ui.core.scroll.MRoll", "superClass": "qx.ui.embed.AbstractIframe", "fullName": "qx.ui.embed.ThemedIframe", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Container widget for internal frames (iframes) with qooxdoo scroll bar and\nsize hint support.</p>\n\n<p>An iframe can display any <span class=\"caps\">HTML</span> page inside the widget. Note that custom\nscroll bars do only work if the iframe&#8217;s source points to the same domain\nas the application.</p>"}, "type": "desc"}, {"attributes": {}, "type": "childControls", "children": [{"attributes": {"name": "iframe"}, "type": "childControl", "children": [{"attributes": {"text": "<p>embedded iframe component</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.embed.Iframe"}, "type": "entry"}]}]}, {"attributes": {"name": "scrollbar-x"}, "type": "childControl", "children": [{"attributes": {"text": "<p>horizontal scrollbar</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.scroll.ScrollBar"}, "type": "entry"}]}]}, {"attributes": {"name": "scrollbar-y"}, "type": "childControl", "children": [{"attributes": {"text": "<p>vertical scrollbar</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.scroll.ScrollBar"}, "type": "entry"}]}]}, {"attributes": {"name": "corner"}, "type": "childControl", "children": [{"attributes": {"text": "<p>corner widget where no scrollbar is shown <strong>Example</strong> Here is a little example of how to use the widget:</p>\n\n<pre class=\"javascript\"> var document = this.getRoot(); var iframe = new qx.ui.embed.ThemedIframe(\"frame.html\"); document.add(iframe); </pre>\n\n<p><strong>External Documentation</strong> <a href=\"http://manual.qooxdoo.org/6.0.0-alpha/pages/widget/themediframe.html\" target=\"_blank\"> Documentation of this widget in the qooxdoo manual.</a></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.ui.embed.AbstractIframe", "line": 53, "isCtor": true, "overriddenFrom": "qx.ui.embed.AbstractIframe", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "source"}, "type": "param"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 229, "name": "_addRollListener"}, "type": "method", "children": [{"attributes": {"text": "<p>Attach roll listener to the iframe</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 437, "name": "_configureScrollbar"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "scrollbarId"}, "type": "param", "children": [{"attributes": {"text": "<p>child control id of the scrollbar to configure</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "show"}, "type": "param", "children": [{"attributes": {"text": "<p>whether the scrollbar should be visible</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "containerSize"}, "type": "param", "children": [{"attributes": {"text": "<p>size of the container widget</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "contentSize"}, "type": "param", "children": [{"attributes": {"text": "<p>size of the iframe&#8217;s document</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Configures the given scrollbar</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 132, "overriddenFrom": "qx.ui.core.Widget", "name": "_createChildControlImpl"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param"}, {"attributes": {"name": "hash"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "line": 216, "name": "_disableScollbars"}, "type": "method", "children": [{"attributes": {"text": "<p>Hide all scrollbars and stop observing the iframe document</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.embed.AbstractIframe", "line": 126, "overriddenFrom": "qx.ui.embed.AbstractIframe", "name": "_getIframeElement"}, "type": "method"}, {"attributes": {"access": "protected", "line": 393, "name": "_getIframeSize"}, "type": "method", "children": [{"attributes": {"text": "<p>Compute the size of the iframe body</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A map with the body size or <code>null</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 191, "name": "_onIframeLoad"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for the iframe&#8217;s load event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 275, "name": "_onIframeObserverInterval"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler, which is called periodically to update the scroll bars</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 208, "name": "_onIframeResize"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for resize event of the iframe widget.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 473, "name": "_onScrollBarX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>The scroll event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the scroll event of the horizontal scrollbar</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 483, "name": "_onScrollBarY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>The scroll event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the scroll event of the vertical scrollbar</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 301, "name": "_preventIframeScrolling"}, "type": "method", "children": [{"attributes": {"text": "<p>Try to hide native scrollbars in the iframe</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 245, "name": "_startIframeObserver"}, "type": "method", "children": [{"attributes": {"text": "<p>Start observing size changes of the iframe document</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 259, "name": "_stopIframeObserver"}, "type": "method", "children": [{"attributes": {"text": "<p>Stop observing size changes of the iframe document</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 415, "name": "_updateCornerWidget"}, "type": "method", "children": [{"attributes": {"text": "<p>Update visibility of the corner widget based on the visibility of the\nscrollbars</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 322, "name": "_updateScrollbars"}, "type": "method", "children": [{"attributes": {"text": "<p>Recompute scrollbar visibility and positions based on the iframe&#8217;s\ndocument size</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.embed.ThemedIframe#scrollbarX"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.embed.ThemedIframe#scrollbarY"}, "type": "entry"}]}]}, {"attributes": {"name": "getScrollbarX", "fromProperty": "scrollbarX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>scrollbarX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>scrollbarX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getScrollbarY", "fromProperty": "scrollbarY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>scrollbarY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>scrollbarY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initScrollbarX", "fromProperty": "scrollbarX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>scrollbarX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>scrollbarX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initScrollbarY", "fromProperty": "scrollbarY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>scrollbarY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>scrollbarY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetScrollbar", "fromProperty": "scrollbar"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>scrollbar</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbar}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetScrollbarX", "fromProperty": "scrollbarX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>scrollbarX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetScrollbarY", "fromProperty": "scrollbarY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>scrollbarY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 493, "name": "scrollToX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "x"}, "type": "param", "children": [{"attributes": {"text": "<p>The vertical position to scroll to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the iframe&#8217;s content to the given left coordinate</p>"}, "type": "desc"}]}, {"attributes": {"line": 510, "name": "scrollToY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "y"}, "type": "param", "children": [{"attributes": {"text": "<p>The horizontal position to scroll to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the iframe&#8217;s content to the given top coordinate</p>"}, "type": "desc"}]}, {"attributes": {"line": 9, "name": "setScrollbar", "fromProperty": "scrollbar"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "scrollbarX"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #scrollbarX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "scrollbarY"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #scrollbarY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the values of the property group <code>scrollbar</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbar}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setScrollbarX", "fromProperty": "scrollbarX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>scrollbarX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>scrollbarX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setScrollbarY", "fromProperty": "scrollbarY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>scrollbarY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>scrollbarY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"scrollarea\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"group": "\"scrollbarX\",\"scrollbarY\"", "name": "scrollbar", "propertyType": "group"}, "type": "property", "children": [{"attributes": {"text": "<p>Group property, to set the overflow of both scroll bars.</p>"}, "type": "desc"}]}, {"attributes": {"name": "scrollbarX", "defaultValue": "\"auto\"", "propertyType": "new", "apply": "_updateScrollbars", "possibleValues": "\"auto\",\"on\",\"off\"", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>The policy, when the horizontal scrollbar should be shown.\n<ul>\n  <li><b>auto</b>: Show scrollbar on demand</li>\n  <li><b>on</b>: Always show the scrollbar</li>\n  <li><b>off</b>: Never show the scrollbar</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"name": "scrollbarY", "defaultValue": "\"auto\"", "propertyType": "new", "apply": "_updateScrollbars", "possibleValues": "\"auto\",\"on\",\"off\"", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>The policy, when the horizontal scrollbar should be shown.\n<ul>\n  <li><b>auto</b>: Show scrollbar on demand</li>\n  <li><b>on</b>: Always show the scrollbar</li>\n  <li><b>off</b>: Never show the scrollbar</li>\n</ul></p>"}, "type": "desc"}]}]}]}