{"attributes": {"isAbstract": true, "name": "AbstractItem", "packageName": "qx.ui.tree.core", "mixins": "qx.ui.form.MModelProperty", "superClass": "qx.ui.core.Widget", "childClasses": "qx.ui.tree.VirtualTreeItem,qx.ui.tree.core.AbstractTreeItem", "fullName": "qx.ui.tree.core.AbstractItem", "type": "class", "interfaces": "qx.ui.form.IModel"}, "type": "class", "children": [{"attributes": {"text": "<p>The AbstractItem serves as a common superclass for the {@link\nqx.ui.tree.core.AbstractTreeItem} and {@link qx.ui.tree.VirtualTreeItem} classes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "childControls", "children": [{"attributes": {"name": "label"}, "type": "childControl", "children": [{"attributes": {"text": "<p>label of the tree item</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.basic.Label"}, "type": "entry"}]}]}, {"attributes": {"name": "icon"}, "type": "childControl", "children": [{"attributes": {"text": "<p>icon of the tree item</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.basic.Image"}, "type": "entry"}]}]}, {"attributes": {"name": "open"}, "type": "childControl", "children": [{"attributes": {"text": "<p>button to open/close a subtree</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.tree.core.FolderOpenButton"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 42, "isCtor": true, "overriddenFrom": "qx.ui.core.Widget", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "label"}, "type": "param", "children": [{"attributes": {"text": "<p>The tree item&#8217;s caption text</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeIcon"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #icon}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeIconOpened"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #iconOpened}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeIndent"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #indent}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeLabel"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #label}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeOpen"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #open}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeOpenSymbolMode"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #openSymbolMode}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 379, "name": "__getUserValueIcon"}, "type": "method", "children": [{"attributes": {"text": "<p>Get user-defined value of &#8220;icon&#8221; property</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The user value of the property &#8220;icon&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 388, "name": "__getUserValueIconOpened"}, "type": "method", "children": [{"attributes": {"text": "<p>Get user-defined value of &#8220;iconOpened&#8221; property</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The user value of the property &#8220;iconOpened&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 397, "name": "__setIconSource"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">URL</span> of the icon</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set source of icon child control</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 149, "name": "_addWidgets"}, "type": "method", "children": [{"attributes": {"text": "<p>This method configures the tree item by adding its sub widgets like\nlabel, icon, open symbol, ...</p>\n\n<p>This method must be overridden by sub classes.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 298, "name": "_applyIcon"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.core.AbstractItem#icon"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>icon</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #icon}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 314, "name": "_applyIconOpened"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.core.AbstractItem#iconOpened"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>iconOpened</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOpened}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 476, "name": "_applyIndent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.core.AbstractItem#indent"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>indent</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #indent}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 334, "name": "_applyLabel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.core.AbstractItem#label"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>label</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #label}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 343, "name": "_applyOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.core.AbstractItem#open"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>open</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 437, "name": "_applyOpenSymbolMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.tree.core.AbstractItem#openSymbolMode"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>openSymbolMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openSymbolMode}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 155, "overriddenFrom": "qx.ui.core.Widget", "name": "_createChildControlImpl"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param"}, {"attributes": {"name": "hash"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "line": 239, "name": "_onChangeOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>The event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler, which listens to open state changes of the open button</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 431, "name": "_shouldShowOpenSymbol"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the open symbol should be shown</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the open symbol should be shown.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 445, "name": "_updateIndent"}, "type": "method", "children": [{"attributes": {"text": "<p>Update the indentation of the tree item.</p>"}, "type": "desc"}]}, {"attributes": {"line": 252, "name": "addIcon"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds the icon widget to the item&#8217;s horizontal box layout. If the icon\nwidget has been added before, it is removed from its old position and\nadded to the end of the layout.</p>"}, "type": "desc"}]}, {"attributes": {"line": 272, "name": "addLabel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "0", "optional": true, "name": "text"}, "type": "param", "children": [{"attributes": {"text": "<p>The label&#8217;s contents</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds the label to the item&#8217;s horizontal box layout. If the label\nhas been added before, it is removed from its old position and\nadded to the end of the layout.</p>"}, "type": "desc"}]}, {"attributes": {"line": 229, "name": "addOpenButton"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds the open button to the item&#8217;s horizontal box layout. If the open\nbutton has been added before, it is removed from its old position and\nadded to the end of the layout.</p>"}, "type": "desc"}]}, {"attributes": {"line": 212, "name": "addSpacer"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds the spacer used to render the indentation to the item&#8217;s horizontal\nbox layout. If the spacer has been added before, it is removed from its\nold position and added to the end of the layout.</p>"}, "type": "desc"}]}, {"attributes": {"line": 202, "name": "addWidget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>The widget to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The (optional) layout options to use for the widget</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a sub widget to the tree item&#8217;s horizontal box layout.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getIcon", "fromProperty": "icon"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>icon</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #icon}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>icon</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconOpened", "fromProperty": "iconOpened"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconOpened</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOpened}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconOpened</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIndent", "fromProperty": "indent"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>indent</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #indent}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>indent</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabel", "fromProperty": "label"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>label</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #label}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>label</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 487, "name": "getLevel"}, "type": "method", "children": [{"attributes": {"text": "<p>Computes the item&#8217;s nesting level. If the item is not part of a tree\nthis function will return <code>null</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The item&#8217;s nesting level or <code>null</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOpen", "fromProperty": "open"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>open</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>open</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOpenSymbolMode", "fromProperty": "openSymbolMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>openSymbolMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openSymbolMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>openSymbolMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 503, "name": "hasChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the item has any children</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the item has any children.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIcon", "fromProperty": "icon"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>icon</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>icon</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #icon}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconOpened", "fromProperty": "iconOpened"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconOpened</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconOpened</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOpened}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIndent", "fromProperty": "indent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>indent</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>indent</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #indent}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabel", "fromProperty": "label"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>label</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>label</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #label}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOpen", "fromProperty": "open"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>open</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>open</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOpenSymbolMode", "fromProperty": "openSymbolMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>openSymbolMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>openSymbolMode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #openSymbolMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isOpen", "fromProperty": "open"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>open</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 416, "name": "isOpenable"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the tree item can be opened.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the tree item can be opened.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetIcon", "fromProperty": "icon"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>icon</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #icon}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetIconOpened", "fromProperty": "iconOpened"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconOpened</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOpened}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetIndent", "fromProperty": "indent"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>indent</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #indent}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLabel", "fromProperty": "label"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>label</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #label}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOpen", "fromProperty": "open"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>open</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOpenSymbolMode", "fromProperty": "openSymbolMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>openSymbolMode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #openSymbolMode}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setIcon", "fromProperty": "icon"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>icon</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>icon</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #icon}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconOpened", "fromProperty": "iconOpened"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconOpened</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconOpened</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOpened}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIndent", "fromProperty": "indent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>indent</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>indent</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #indent}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabel", "fromProperty": "label"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>label</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>label</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #label}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOpen", "fromProperty": "open"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>open</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>open</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOpenSymbolMode", "fromProperty": "openSymbolMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>openSymbolMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>openSymbolMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openSymbolMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "line": 493, "overriddenFrom": "qx.ui.core.Widget", "name": "syncWidget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "jobs"}, "type": "param"}]}]}, {"attributes": {"name": "toggleOpen", "fromProperty": "open"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>open</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #open}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "icon", "check": "String", "allowNull": "true", "propertyType": "new", "apply": "_applyIcon", "event": "changeIcon", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p><span class=\"caps\">URI</span> of &#8220;closed&#8221; icon. Can be any <span class=\"caps\">URI</span> String supported by qx.ui.basic.Image.</p>"}, "type": "desc"}]}, {"attributes": {"name": "iconOpened", "check": "String", "allowNull": "true", "propertyType": "new", "apply": "_applyIconOpened", "event": "changeIconOpened", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p><span class=\"caps\">URI</span> of &#8220;opened&#8221; icon. Can be any <span class=\"caps\">URI</span> String supported by qx.ui.basic.Image.</p>"}, "type": "desc"}]}, {"attributes": {"name": "indent", "defaultValue": "19", "event": "changeIndent", "propertyType": "new", "apply": "_applyIndent", "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>The number of pixel to indent the tree item for each level.</p>"}, "type": "desc"}]}, {"attributes": {"name": "label", "defaultValue": "\"\"", "event": "changeLabel", "propertyType": "new", "apply": "_applyLabel", "check": "String"}, "type": "property", "children": [{"attributes": {"text": "<p>The label/caption/text</p>"}, "type": "desc"}]}, {"attributes": {"name": "open", "defaultValue": "false", "event": "changeOpen", "propertyType": "new", "apply": "_applyOpen", "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the tree item is opened.</p>"}, "type": "desc"}]}, {"attributes": {"name": "openSymbolMode", "defaultValue": "\"auto\"", "propertyType": "new", "apply": "_applyOpenSymbolMode", "possibleValues": "\"always\",\"never\",\"auto\"", "event": "changeOpenSymbolMode"}, "type": "property", "children": [{"attributes": {"text": "<p>Controls, when to show the open symbol. If the mode is &#8220;auto&#8221; , the open\nsymbol is shown only if the item has child items.</p>"}, "type": "desc"}]}]}]}