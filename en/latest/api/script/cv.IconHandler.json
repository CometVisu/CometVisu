{"attributes": {"name": "IconHandler", "hasWarning": true, "packageName": "cv", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "cv.IconHandler", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>The object &#8220;icon&#8221; contains the whole <span class=\"caps\">API</span> necessary to handle the icons.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 39, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 242, "name": "debug"}, "type": "method", "children": [{"attributes": {"text": "<p>Return icon database for debuging purposes &#8211; use <span class=\"caps\">ONLY</span> for debugging as it&#8217;s\ncircumventing the data hiding and exposes a writeable reference to the\ndatabase object!</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The icon database</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 220, "hasError": true, "name": "fillIcons"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "array"}, "type": "param"}]}, {"attributes": {"text": "<p>Fill the icons in the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter is not documented: 'array'", "column": 16, "line": 220}, "type": "error"}]}]}, {"attributes": {"line": 100, "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "flavour"}, "type": "param", "children": [{"attributes": {"text": "<p>Flavour</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>Color (only relevant for monochrome icons)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the icon information for a name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">URI</span> for the icon &#8211; or &#8220;undefined&#8221; if not known</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 154, "hasError": true, "name": "getIconElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Return an icon <span class=\"caps\">DOM</span> element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Missing documentation for return value.", "column": 21, "line": 154}, "type": "error"}]}]}, {"attributes": {"line": 194, "hasError": true, "name": "getIconText"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "flavour"}, "type": "param", "children": [{"attributes": {"text": "<p>Flavour</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>Color (only relevant for monochrome icons)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "styling"}, "type": "param", "children": [{"attributes": {"text": "<p>Styling</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "iconclass"}, "type": "param", "children": [{"attributes": {"text": "<p>icon class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return a String for the icon, e.g. build a <span class=\"caps\">DOM</span> tree in a string before\npassing it to ParseHTML. After the content was added to the <span class=\"caps\">DOM</span> the\nfillIcons method must be called to fill missing content (e.g. the \nicons.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Missing documentation for return value.", "column": 18, "line": 194}, "type": "error"}]}]}, {"attributes": {"line": 144, "hasError": true, "name": "getURI"}, "type": "method", "children": [{"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Documentation is missing.", "column": 13, "line": 144}, "type": "error"}]}]}, {"attributes": {"line": 61, "name": "insert"}, "type": "method", "children": [{"attributes": {"text": "<p>Insert or overwrite one or many icons into the database. The parameter\nmight be a full hash of icon definitions or a single one consisting out of\na name and a <span class=\"caps\">URI</span> path. Optional further parameters are a &#8220;type&#8221; and a\nflavour.</p>"}, "type": "desc"}]}, {"attributes": {"line": 230, "name": "list"}, "type": "method", "children": [{"attributes": {"text": "<p>List all known icons</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>List of all known icon names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 11, "isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "cv.IconHandler"}, "type": "entry"}]}]}]}]}]}