{"attributes": {"fullName": "qx.core.Environment", "packageName": "qx.core", "isStatic": true, "type": "bootstrap", "name": "Environment"}, "type": "class", "children": [{"attributes": {"text": "<p>This class is the single point to access all settings that may be different\nin different environments. This contains e.g. the browser name, engine\nversion but also qooxdoo or application specific settings.</p>\n\n<p>Its public <span class=\"caps\">API</span> can be found in its four main methods. One pair of methods\nis used to check the synchronous values of the environment. The other pair\nof methods is used for asynchronous checks.</p>\n\n<p>The most often used method should be {@link #get}, which returns the\ncurrent value for a given environment check.</p>\n\n<p>All qooxdoo settings can be changed via the generator&#8217;s config. See the manual\nfor more details about the environment key in the config. As you can see\nfrom the methods <span class=\"caps\">API</span>, there is no way to override an existing key. So if you\nneed to change a qooxdoo setting, you have to use the generator to do so.</p>\n\n<p>The generator is also responsible for requiring the necessary implementation\nclasses for each check. When using a check of a new category, make sure to\nrebuild you application and let the generator include the necessary files.</p>\n\n<p>The following table shows the available checks. If you are\ninterested in more details, check the reference to the implementation of\neach check. Please do not use those check implementations directly, as the\nEnvironment class comes with a smart caching feature.</p>\n\n<table border=\"0\" cellspacing=\"10\">\n  <tbody>\n    <tr>\n      <td colspan=\"4\"><h2>Synchronous checks</h2>\n      </td>\n    </tr>\n    <tr>\n      <th><h3>Key</h3></th>\n      <th><h3>Type</h3></th>\n      <th><h3>Example</h3></th>\n      <th><h3>Details</h3></th>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><b>browser</b></td>\n    </tr>\n    <tr>\n      <td>browser.documentmode</td><td><i>Integer</i></td><td><code>0</code></td>\n      <td>{@link qx.bom.client.Browser#getDocumentMode}</td>\n    </tr>\n    <tr>\n      <td>browser.name</td><td><i>String</i></td><td><code> chrome </code></td>\n      <td>{@link qx.bom.client.Browser#getName}</td>\n    </tr>\n    <tr>\n      <td>browser.quirksmode</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Browser#getQuirksMode}</td>\n    </tr>\n    <tr>\n      <td>browser.version</td><td><i>String</i></td><td><code>11.0</code></td>\n      <td>{@link qx.bom.client.Browser#getVersion}</td>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><b>runtime</b></td>\n    </tr>\n    <tr>\n      <td>runtime.name</td><td><i> String </i></td><td><code> node.js </code></td>\n      <td>{@link qx.bom.client.Runtime#getName}</td>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><b>css</b></td>\n    </tr>\n    <tr>\n      <td>css.borderradius</td><td><i>String</i> or <i>null</i></td><td><code>borderRadius</code></td>\n      <td>{@link qx.bom.client.Css#getBorderRadius}</td>\n    </tr>\n    <tr>\n      <td>css.borderimage</td><td><i>String</i> or <i>null</i></td><td><code>WebkitBorderImage</code></td>\n      <td>{@link qx.bom.client.Css#getBorderImage}</td>\n    </tr>\n    <tr>\n      <td>css.borderimage.standardsyntax</td><td><i>Boolean</i> or <i>null</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getBorderImageSyntax}</td>\n    </tr>\n    <tr>\n      <td>css.boxmodel</td><td><i>String</i></td><td><code>content</code></td>\n      <td>{@link qx.bom.client.Css#getBoxModel}</td>\n    </tr>\n    <tr>\n      <td>css.boxshadow</td><td><i>String</i> or <i>null</i></td><td><code>boxShadow</code></td>\n      <td>{@link qx.bom.client.Css#getBoxShadow}</td>\n    </tr>\n    <tr>\n      <td>css.gradient.linear</td><td><i>String</i> or <i>null</i></td><td><code>-moz-linear-gradient</code></td>\n      <td>{@link qx.bom.client.Css#getLinearGradient}</td>\n    </tr>\n    <tr>\n      <td>css.gradient.filter</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getFilterGradient}</td>\n    </tr>\n    <tr>\n      <td>css.gradient.radial</td><td><i>String</i> or <i>null</i></td><td><code>-moz-radial-gradient</code></td>\n      <td>{@link qx.bom.client.Css#getRadialGradient}</td>\n    </tr>\n    <tr>\n      <td>css.gradient.legacywebkit</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Css#getLegacyWebkitGradient}</td>\n    </tr>\n    <tr>\n      <td>css.placeholder</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getPlaceholder}</td>\n    </tr>\n    <tr>\n      <td>css.textoverflow</td><td><i>String</i> or <i>null</i></td><td><code>textOverflow</code></td>\n      <td>{@link qx.bom.client.Css#getTextOverflow}</td>\n    </tr>\n    <tr>\n      <td>css.rgba</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getRgba}</td>\n    </tr>\n    <tr>\n      <td>css.usermodify</td><td><i>String</i> or <i>null</i></td><td><code>WebkitUserModify</code></td>\n      <td>{@link qx.bom.client.Css#getUserModify}</td>\n    </tr>\n    <tr>\n      <td>css.appearance</td><td><i>String</i> or <i>null</i></td><td><code>WebkitAppearance</code></td>\n      <td>{@link qx.bom.client.Css#getAppearance}</td>\n    </tr>\n    <tr>\n      <td>css.float</td><td><i>String</i> or <i>null</i></td><td><code>cssFloat</code></td>\n      <td>{@link qx.bom.client.Css#getFloat}</td>\n    </tr>\n    <tr>\n      <td>css.userselect</td><td><i>String</i> or <i>null</i></td><td><code>WebkitUserSelect</code></td>\n      <td>{@link qx.bom.client.Css#getUserSelect}</td>\n    </tr>\n    <tr>\n      <td>css.userselect.none</td><td><i>String</i> or <i>null</i></td><td><code>-moz-none</code></td>\n      <td>{@link qx.bom.client.Css#getUserSelectNone}</td>\n    </tr>\n    <tr>\n      <td>css.boxsizing</td><td><i>String</i> or <i>null</i></td><td><code>boxSizing</code></td>\n      <td>{@link qx.bom.client.Css#getBoxSizing}</td>\n    </tr>\n    <tr>\n      <td>css.animation</td><td><i>Object</i> or <i>null</i></td><td><code>{end-event: \"webkitAnimationEnd\", keyframes: \"@-webkit-keyframes\", play-state: null, name: \"WebkitAnimation\"}</code></td>\n      <td>{@link qx.bom.client.CssAnimation#getSupport}</td>\n    </tr>\n    <tr>\n      <td>css.animation.requestframe</td><td><i>String</i> or <i>null</i></td><td><code>mozRequestAnimationFrame</code></td>\n      <td>{@link qx.bom.client.CssAnimation#getRequestAnimationFrame}</td>\n    </tr>\n    <tr>\n      <td>css.transform</td><td><i>Object</i> or <i>null</i></td><td><code>{3d: true, origin: \"WebkitTransformOrigin\", name: \"WebkitTransform\", style: \"WebkitTransformStyle\", perspective: \"WebkitPerspective\", perspective-origin: \"WebkitPerspectiveOrigin\", backface-visibility: \"WebkitBackfaceVisibility\"}</code></td>\n      <td>{@link qx.bom.client.CssTransform#getSupport}</td>\n    </tr>\n    <tr>\n      <td>css.transform.3d</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.CssTransform#get3D}</td>\n    </tr>\n    <tr>\n      <td>css.transition</td><td><i>Object</i> or <i>null</i></td><td><code>{end-event: \"webkitTransitionEnd\", name: \"WebkitTransition\"}</code></td>\n      <td>{@link qx.bom.client.CssTransition#getSupport}</td>\n    </tr>\n    <tr>\n      <td>css.inlineblock</td><td><i>String</i> or <i>null</i></td><td><code>inline-block</code></td>\n      <td>{@link qx.bom.client.Css#getInlineBlock}</td>\n    </tr>\n    <tr>\n      <td>css.opacity</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getOpacity}</td>\n    </tr>\n    <tr>\n      <td>css.textShadow</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getTextShadow}</td>\n    </tr>\n    <tr>\n      <td>css.textShadow.filter</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getFilterTextShadow}</td>\n    </tr>\n    <tr>\n      <td>css.alphaimageloaderneeded</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Css#getAlphaImageLoaderNeeded}</td>\n    </tr>\n    <tr>\n      <td>css.pointerevents</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Css#getPointerEvents}</td>\n    </tr>\n    <tr>\n      <td>css.flexboxSyntax</td><td><i>String</i> or <i>null</i></td><td><code>\"flex\"</code></td>\n      <td>{@link qx.bom.client.Css#getFlexboxSyntax}</td>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><b>device</b></td>\n    </tr>\n    <tr>\n      <td>device.name</td><td><i>String</i></td><td><code>pc</code></td>\n      <td>{@link qx.bom.client.Device#getName}</td>\n    </tr>\n    <tr>\n      <td>device.type</td><td><i>String</i></td><td><code>mobile</code></td>\n      <td>{@link qx.bom.client.Device#getType}</td>\n    </tr>\n    <tr>\n      <td>device.pixelRatio</td><td><i>Number</i></td><td><code>2</code></td>\n      <td>{@link qx.bom.client.Device#getDevicePixelRatio}</td>\n    </tr>\n    <tr>\n      <td>device.touch</td><td><i>String</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Device#getTouch}</td>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><b>ecmascript</b></td>\n    </tr>\n    <tr>\n      <td>ecmascript.error.stacktrace</td><td><i>String</i> or <i>null</i></td><td><code>stack</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getStackTrace}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.mutationobserver</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getMutationObserver}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.indexof<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayIndexOf}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.lastindexof<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayLastIndexOf}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.foreach<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayForEach}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.filter<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayFilter}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.map<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayMap}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.some<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArraySome}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.find<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayFind}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.findIndex<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayFindIndex}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.every<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayEvery}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.reduce<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayReduce}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.array.reduceright<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getArrayReduceRight}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.function.bind<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getFunctionBind}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.object.keys<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getObjectKeys}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.date.now<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getDateNow}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.date.parse<td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getDateParse}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.error.toString</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getErrorToString}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.string.trim</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getStringTrim}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.string.startsWith</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getStringStartsWith}</td>\n    </tr>\n    <tr>\n      <td>ecmascript.string.endsWith</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.EcmaScript#getStringEndsWith}</td>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><b>engine</b></td>\n    </tr>\n    <tr>\n      <td>engine.name</td><td><i>String</i></td><td><code>webkit</code></td>\n      <td>{@link qx.bom.client.Engine#getName}</td>\n    </tr>\n    <tr>\n      <td>engine.version</td><td><i>String</i></td><td><code>534.24</code></td>\n      <td>{@link qx.bom.client.Engine#getVersion}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>event</b></td>\n    </tr>\n     <tr>\n      <td>event.mspointer</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Event#getMsPointer}</td>\n    </tr>\n    <tr>\n      <td>event.touch</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Event#getTouch}</td>\n    </tr>\n    <tr>\n      <td>event.help</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Event#getHelp}</td>\n    </tr>\n    <tr>\n      <td>event.hashchange</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Event#getHashChange}</td>\n    </tr>\n    <tr>\n      <td>event.dispatchevent</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Event#getDispatchEvent}</td>\n    </tr>\n    <tr>\n      <td>event.customevent</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Event#getCustomEvent}</td>\n    </tr>\n    <tr>\n      <td>event.mouseevent</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Event#getMouseEvent}</td>\n    </tr>\n    <tr>\n      <td>event.mousecreateevent</td><td><i>String</i></td><td><code>UIEvents</code></td>\n      <td>{@link qx.bom.client.Event#getMouseCreateEvent}</td>\n    </tr>\n    <tr>\n      <td>event.mousewheel</td><td><i>Map</i></td><td><code>{type: \"wheel\", target: window}</code></td>\n      <td>{@link qx.bom.client.Event#getMouseWheel}</td>\n    </tr>\n    <tr>\n      <td>event.auxclick</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Event#getAuxclickEvent}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>html</b></td>\n    </tr>\n    <tr>\n      <td>html.audio</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getAudio}</td>\n    </tr>\n    <tr>\n      <td>html.audio.mp3</td><td><i>String</i></td><td><code>\"\"</code></td>\n      <td>{@link qx.bom.client.Html#getAudioMp3}</td>\n    </tr>\n    <tr>\n      <td>html.audio.ogg</td><td><i>String</i></td><td><code>\"maybe\"</code></td>\n      <td>{@link qx.bom.client.Html#getAudioOgg}</td>\n    </tr>\n    <tr>\n      <td>html.audio.wav</td><td><i>String</i></td><td><code>\"probably\"</code></td>\n      <td>{@link qx.bom.client.Html#getAudioWav}</td>\n    </tr>\n    <tr>\n      <td>html.audio.au</td><td><i>String</i></td><td><code>\"maybe\"</code></td>\n      <td>{@link qx.bom.client.Html#getAudioAu}</td>\n    </tr>\n    <tr>\n      <td>html.audio.aif</td><td><i>String</i></td><td><code>\"probably\"</code></td>\n      <td>{@link qx.bom.client.Html#getAudioAif}</td>\n    </tr>\n    <tr>\n      <td>html.canvas</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getCanvas}</td>\n    </tr>\n    <tr>\n      <td>html.classlist</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getClassList}</td>\n    </tr>\n    <tr>\n      <td>html.fullscreen</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getFullScreen}</td>\n    </tr>\n    <tr>\n      <td>html.geolocation</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getGeoLocation}</td>\n    </tr>\n    <tr>\n      <td>html.storage.local</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getLocalStorage}</td>\n    </tr>\n    <tr>\n      <td>html.storage.session</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getSessionStorage}</td>\n    </tr>\n    <tr>\n      <td>html.storage.userdata</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getUserDataStorage}</td>\n    </tr>\n    <tr>\n      <td>html.svg</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getSvg}</td>\n    </tr>\n    <tr>\n      <td>html.video</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getVideo}</td>\n    </tr>\n    <tr>\n      <td>html.video.h264</td><td><i>String</i></td><td><code>\"probably\"</code></td>\n      <td>{@link qx.bom.client.Html#getVideoH264}</td>\n    </tr>\n    <tr>\n      <td>html.video.ogg</td><td><i>String</i></td><td><code>\"\"</code></td>\n      <td>{@link qx.bom.client.Html#getVideoOgg}</td>\n    </tr>\n    <tr>\n      <td>html.video.webm</td><td><i>String</i></td><td><code>\"maybe\"</code></td>\n      <td>{@link qx.bom.client.Html#getVideoWebm}</td>\n    </tr>\n    <tr>\n      <td>html.vml</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Html#getVml}</td>\n    </tr>\n    <tr>\n      <td>html.webworker</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getWebWorker}</td>\n    <tr>\n      <td>html.filereader</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getFileReader}</td>\n    </tr>\n    <tr>\n      <td>html.xpath</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getXPath}</td>\n    </tr>\n    <tr>\n      <td>html.xul</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getXul}</td>\n    </tr>\n    <tr>\n      <td>html.console</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getConsole}</td>\n    </tr>\n    <tr>\n      <td>html.element.contains</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getContains}</td>\n    </tr>\n    <tr>\n      <td>html.element.compareDocumentPosition</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getCompareDocumentPosition}</td>\n    </tr>\n    <tr>\n      <td>html.element.textContent</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getTextContent}</td>\n    </tr>\n    <tr>\n      <td>html.image.naturaldimensions</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getNaturalDimensions}</td>\n    </tr>\n    <tr>\n      <td>html.history.state</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getHistoryState}</td>\n    </tr>\n    <tr>\n      <td>html.selection</td><td><i>String</i></td><td><code>getSelection</code></td>\n      <td>{@link qx.bom.client.Html#getSelection}</td>\n    </tr>\n    <tr>\n      <td>html.node.isequalnode</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getIsEqualNode}</td>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><b>XML</b></td>\n    </tr>\n    <tr>\n      <td>xml.implementation</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Xml#getImplementation}</td>\n    </tr>\n    <tr>\n      <td>xml.domparser</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Xml#getDomParser}</td>\n    </tr>\n    <tr>\n      <td>xml.selectsinglenode</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Xml#getSelectSingleNode}</td>\n    </tr>\n    <tr>\n      <td>xml.selectnodes</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Xml#getSelectNodes}</td>\n    </tr>\n    <tr>\n      <td>xml.getelementsbytagnamens</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Xml#getElementsByTagNameNS}</td>\n    </tr>\n    <tr>\n      <td>xml.domproperties</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Xml#getDomProperties}</td>\n    </tr>\n    <tr>\n      <td>xml.attributens</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Xml#getAttributeNS}</td>\n    </tr>\n    <tr>\n      <td>xml.createelementns</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Xml#getCreateElementNS}</td>\n    </tr>\n    <tr>\n      <td>xml.createnode</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Xml#getCreateNode}</td>\n    </tr>\n    <tr>\n      <td>xml.getqualifieditem</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Xml#getQualifiedItem}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>Stylesheets</b></td>\n    </tr>\n    <tr>\n      <td>html.stylesheet.createstylesheet</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Stylesheet#getCreateStyleSheet}</td>\n    </tr>\n    <tr>\n      <td>html.stylesheet.insertrule</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Stylesheet#getInsertRule}</td>\n    </tr>\n    <tr>\n      <td>html.stylesheet.deleterule</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Stylesheet#getDeleteRule}</td>\n    </tr>\n    <tr>\n      <td>html.stylesheet.addimport</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Stylesheet#getAddImport}</td>\n    </tr>\n    <tr>\n      <td>html.stylesheet.removeimport</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Stylesheet#getRemoveImport}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>io</b></td>\n    </tr>\n    <tr>\n      <td>io.maxrequests</td><td><i>Integer</i></td><td><code>4</code></td>\n      <td>{@link qx.bom.client.Transport#getMaxConcurrentRequestCount}</td>\n    </tr>\n    <tr>\n      <td>io.ssl</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Transport#getSsl}</td>\n    </tr>\n    <tr>\n      <td>io.xhr</td><td><i>String</i></td><td><code>xhr</code></td>\n      <td>{@link qx.bom.client.Transport#getXmlHttpRequest}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>locale</b></td>\n    </tr>\n    <tr>\n      <td>locale</td><td><i>String</i></td><td><code>de</code></td>\n      <td>{@link qx.bom.client.Locale#getLocale}</td>\n    </tr>\n    <tr>\n      <td>locale.variant</td><td><i>String</i></td><td><code>de</code></td>\n      <td>{@link qx.bom.client.Locale#getVariant}</td>\n    </tr>\n    <tr>\n      <td>locale.default</td><td><i>String</i></td><td><code>C</code></td>\n      <td>default locale C as in good tradition of unix {@link qx.bom.client.Locale}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>os</b></td>\n    </tr>\n    <tr>\n      <td>os.name</td><td><i>String</i></td><td><code>osx</code></td>\n      <td>{@link qx.bom.client.OperatingSystem#getName}</td>\n    </tr>\n    <tr>\n      <td>os.version</td><td><i>String</i></td><td><code>10.6</code></td>\n      <td>{@link qx.bom.client.OperatingSystem#getVersion}</td>\n    </tr>\n    <tr>\n      <td>os.scrollBarOverlayed</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Scroll#scrollBarOverlayed}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>phonegap</b></td>\n    </tr>\n    <tr>\n      <td>phonegap</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.PhoneGap#getPhoneGap}</td>\n    </tr>\n    <tr>\n      <td>phonegap.notification</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.PhoneGap#getNotification}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>plugin</b></td>\n    </tr>\n    <tr>\n      <td>plugin.divx</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Plugin#getDivX}</td>\n    </tr>\n    <tr>\n      <td>plugin.divx.version</td><td><i>String</i></td><td></td>\n      <td>{@link qx.bom.client.Plugin#getDivXVersion}</td>\n    </tr>\n    <tr>\n      <td>plugin.flash</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Flash#isAvailable}</td>\n    </tr>\n    <tr>\n      <td>plugin.flash.express</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Flash#getExpressInstall}</td>\n    </tr>\n    <tr>\n      <td>plugin.flash.strictsecurity</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Flash#getStrictSecurityModel}</td>\n    </tr>\n    <tr>\n      <td>plugin.flash.version</td><td><i>String</i></td><td><code>10.2.154</code></td>\n      <td>{@link qx.bom.client.Flash#getVersion}</td>\n    </tr>\n    <tr>\n      <td>plugin.gears</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Plugin#getGears}</td>\n    </tr>\n    <tr>\n      <td>plugin.activex</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Plugin#getActiveX}</td>\n    </tr>\n    <tr>\n      <td>plugin.skype</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Plugin#getSkype}</td>\n    </tr>\n    <tr>\n      <td>plugin.pdf</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Plugin#getPdf}</td>\n    </tr>\n    <tr>\n      <td>plugin.pdf.version</td><td><i>String</i></td><td></td>\n      <td>{@link qx.bom.client.Plugin#getPdfVersion}</td>\n    </tr>\n    <tr>\n      <td>plugin.quicktime</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Plugin#getQuicktime}</td>\n    </tr>\n    <tr>\n      <td>plugin.quicktime.version</td><td><i>String</i></td><td><code>7.6</code></td>\n      <td>{@link qx.bom.client.Plugin#getQuicktimeVersion}</td>\n    </tr>\n    <tr>\n      <td>plugin.silverlight</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Plugin#getSilverlight}</td>\n    </tr>\n    <tr>\n      <td>plugin.silverlight.version</td><td><i>String</i></td><td></td>\n      <td>{@link qx.bom.client.Plugin#getSilverlightVersion}</td>\n    </tr>\n    <tr>\n      <td>plugin.windowsmedia</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Plugin#getWindowsMedia}</td>\n    </tr>\n    <tr>\n      <td>plugin.windowsmedia.version</td><td><i>String</i></td><td></td>\n      <td>{@link qx.bom.client.Plugin#getWindowsMediaVersion}</td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>qx</b></td>\n    </tr>\n    <tr>\n      <td>qx.allowUrlSettings</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n      <td>qx.allowUrlVariants</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n      <td>qx.application</td><td><i>String</i></td><td><code>name.space</code></td>\n      <td><i>default:</i> <code>&lt;&lt;application name&gt;&gt;</code></td>\n    </tr>\n    <tr>\n      <td>qx.aspects</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n      <td>qx.debug</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td>qx.debug.databinding</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n      <td>qx.debug.dispose</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n      <td>qx.debug.dispose.level</td><td><i>Integer</i></td><td><code>0</code></td>\n      <td><i>default:</i> <code>0</code></td>\n    </tr>\n    <tr>\n      <td>qx.debug.io</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n    <tr>\n      <td>qx.debug.io.remote</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n    <tr>\n      <td>qx.debug.io.remote.data</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>false</code></td>\n    </tr>\n    <tr>\n      <td>qx.debug.property.level</td><td><i>Integer</i></td><td><code>0</code></td>\n      <td><i>default:</i> <code>0</code></td>\n    </tr>\n    <tr>\n      <td>qx.debug.ui.queue</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td>qx.dynlocale</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td>qx.dyntheme</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td>qx.globalErrorHandling</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code> {@link qx.event.GlobalError}</td>\n    </tr>\n    <tr>\n      <td>qx.mobile.nativescroll</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Scroll#getNativeScroll}</td>\n    </tr>\n    <tr>\n      <td>qx.promise.warnings</td><td><i>Boolean</i></td><td>same as <code>qx.debug</code></td>\n      <td>true to enable runtime warnings in promises {@link qx.Promise}</td>\n    </tr>\n    <tr>\n      <td>qx.promise.longStackTraces</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>true to enable long stack traces in promises; this has a performance penalty but makes debugging asynchronous functions easier {@link qx.Promise}</td>\n    </tr>\n    <tr>\n      <td>qx.optimization.basecalls</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>true if the corresponding <i>optimize</i> key is set in the config</td>\n    </tr>\n    <tr>\n      <td>qx.optimization.comments</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>true if the corresponding <i>optimize</i> key is set in the config</td>\n    </tr>\n    <tr>\n      <td>qx.optimization.privates</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>true if the corresponding <i>optimize</i> key is set in the config</td>\n    </tr>\n    <tr>\n      <td>qx.optimization.strings</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>true if the corresponding <i>optimize</i> key is set in the config</td>\n    </tr>\n    <tr>\n      <td>qx.optimization.variables</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>true if the corresponding <i>optimize</i> key is set in the config</td>\n    </tr>\n    <tr>\n      <td>qx.optimization.variants</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>true if the corresponding <i>optimize</i> key is set in the config</td>\n    </tr>\n    <tr>\n      <td>qx.revision</td><td><i>String</i></td><td><code>27348</code></td>\n    </tr>\n    <tr>\n      <td>qx.theme</td><td><i>String</i></td><td><code>qx.theme.Modern</code></td>\n      <td><i>default:</i> <code>&lt;&lt;initial theme name&gt;&gt;</code></td>\n    </tr>\n    <tr>\n      <td>qx.version</td><td><i>String</i></td><td><code>6.0.0-alpha</code></td>\n    </tr>\n    <tr>\n      <td>qx.blankpage</td><td><i>String</i></td><td><code>URI to blank.html page</code></td>\n    </tr>\n\n<tr>\n      <td colspan=\"4\"><b>module</b></td>\n    </tr>\n    <tr>\n      <td>module.databinding</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td>module.logger</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td>module.property</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td>module.events</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td><i>default:</i> <code>true</code></td>\n    </tr>\n    <tr>\n      <td colspan=\"4\"><h3>Asynchronous checks</h3>\n      </td>\n    </tr>\n    <tr>\n      <td>html.dataurl</td><td><i>Boolean</i></td><td><code>true</code></td>\n      <td>{@link qx.bom.client.Html#getDataUrl}</td>\n    </tr>\n    <tr>\n      <td>plugin.pdfjs</td><td><i>Boolean</i></td><td><code>false</code></td>\n      <td>{@link qx.bom.client.Pdfjs#getPdfjs}</td>\n    </tr>\n  </tbody>\n</table>"}, "type": "desc"}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "protected", "name": "_checks"}, "type": "constant", "children": [{"attributes": {"text": "<p>Map containing the synchronous check functions.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_checksMap"}, "type": "constant", "children": [{"attributes": {"text": "<p>Internal map for environment keys to check methods.\nGets populated dynamically at runtime.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_asyncChecks"}, "type": "constant", "children": [{"attributes": {"text": "<p>Map containing the asynchronous check functions.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_defaults"}, "type": "constant"}, {"attributes": {"access": "private", "name": "__cache"}, "type": "constant", "children": [{"attributes": {"text": "<p>Internal cache for all checks.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "private", "line": 1275, "isStatic": true, "name": "__createCheck"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value which should be returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper which creates a function returning the given value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A function which could be used by a test.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1222, "isStatic": true, "name": "__importFromGenerator"}, "type": "method", "children": [{"attributes": {"text": "<p>Import checks from global qx.$environment into the Environment class.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1240, "isStatic": true, "name": "__importFromUrl"}, "type": "method", "children": [{"attributes": {"text": "<p>Checks the <span class=\"caps\">URL</span> for environment settings and imports these into the\nEnvironment class.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1076, "isStatic": true, "name": "__pickFromValues"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key to search for in the values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "values"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing some keys.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper which tries to pick the given key from the given values\nmap. If that key is not found, it tries to use a key named &#8220;default&#8221;.\nIf there is also no default key, it prints out a warning and returns\nundefined.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The value stored as values[key] usually.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 960, "isStatic": true, "name": "_getClassNameFromEnvKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the check you want to query.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Maps an environment key to a check class and method name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>[className, methodName] of the corresponding implementation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 1208, "isStatic": true, "name": "_initDefaultQxValues"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializer for the default values of the framework settings.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1148, "isStatic": true, "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the check e.g. html.featurexyz.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "check"}, "type": "param", "children": [{"attributes": {"text": "<p>It could be either a function or a simple value. The function should be responsible for the check and should return the result of the check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a check to the environment class. If there is already a check\nadded for the given key, the add will be ignored.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1174, "isStatic": true, "name": "addAsync"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key of the check e.g. html.featureabc</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "check"}, "type": "param", "children": [{"attributes": {"text": "<p>A function which should check for a specific environment setting in an asynchronous way. The method should take two arguments. First one is the callback and the second one is the context.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an asynchronous check to the environment. If there is already a check\nadded for the given key, the add will be ignored.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1116, "isStatic": true, "name": "filter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing check names as keys and values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Takes a given map containing the check names as keys and converts\nthe map to an array only containing the values for check evaluating\nto <code>true</code>. This is especially handy for conditional\nincludes of mixins.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An array containing the values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 917, "isStatic": true, "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the check you want to query.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The default accessor for the checks. It returns the value the current\nenvironment has for the given key. The key could be something like\n&#8220;qx.debug&#8221;, &#8220;css.textoverflow&#8221; or &#8220;io.ssl&#8221;. A complete list of\nchecks can be found in the class comment of this class.</p>\n\n<p>Please keep in mind that the result is cached. If you want to run the\ncheck function again in case something could have been changed, take a\nlook at the {@link #invalidateCacheKey} function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The stored value depending on the given key. (Details in the class doc)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 990, "isStatic": true, "name": "getAsync"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key of the asynchronous check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>The function to call as soon as the check is done. The function should have one argument which is the result of the check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The context to use when invoking the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Invokes the callback as soon as the check has been done. If no check\ncould be found, a warning will be printed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 1199, "isStatic": true, "name": "getAsyncChecks"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all currently defined asynchronous checks.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The map of asynchronous checks</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 1187, "isStatic": true, "name": "getChecks"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all currently defined synchronous checks.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The map of synchronous checks</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1134, "isStatic": true, "name": "invalidateCacheKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key of the check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Invalidates the cache for the given key.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1042, "isStatic": true, "name": "select"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the check the select depends on.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "values"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the values which should be returned in any case. The &#8220;default&#8221; key could be used as a catch all statement.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the proper value dependent on the check for the given key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The value which is stored in the map for the given check of the key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1058, "isStatic": true, "name": "selectAsync"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the async check.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "values"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing functions. The map keys should contain all possibilities which could be returned by the given check key. The &#8220;default&#8221; key could be used as a catch all statement. The called function will get one parameter, the result of the query.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The context which should be used when calling the method in the values map.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Selects the proper function dependent on the asynchronous check.</p>"}, "type": "desc"}]}]}]}