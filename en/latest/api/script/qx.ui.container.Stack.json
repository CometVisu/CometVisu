{"attributes": {"name": "Stack", "interfaces": "qx.ui.form.IField,qx.ui.core.ISingleSelection", "mixins": "qx.ui.core.MSingleSelectionHandling,qx.ui.core.MChildrenHandling", "superClass": "qx.ui.core.Widget", "fullName": "qx.ui.container.Stack", "type": "class", "packageName": "qx.ui.container"}, "type": "class", "children": [{"attributes": {"text": "<p>The stack container puts its child widgets on top of each other and only the\ntopmost widget is visible.</p>\n\n<p>This is used e.g. in the tab view widget. Which widget is visible can be\ncontrolled by using the {@link #getSelection} method.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget.</p>\n\n<pre class=\"javascript\">\n  // create stack container\n  var stack = new qx.ui.container.Stack();\n\n  // add some children\n  stack.add(new qx.ui.core.Widget().set({\n   backgroundColor: \"red\"\n  }));\n  stack.add(new qx.ui.core.Widget().set({\n   backgroundColor: \"green\"\n  }));\n  stack.add(new qx.ui.core.Widget().set({\n   backgroundColor: \"blue\"\n  }));\n\n  // select green widget\n  stack.setSelection([stack.getChildren()[1]]);\n\n  this.getRoot().add(stack);\n</pre>\n\n<p>This example creates an stack with three children. Only the selected &#8220;green&#8221;\nwidget is visible.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://manual.qooxdoo.org/6.0.0-alpha/pages/widget/stack.html\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo manual.</a>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "line": 82, "isCtor": true, "overriddenFrom": "qx.ui.core.Widget", "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 187, "name": "__onChangeSelection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Data event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for <code>changeSelection</code>.</p>\n\n<p>Shows the new selected widget and hide the old one.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 208, "overriddenFrom": "qx.ui.core.Widget", "name": "_afterAddChild"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "child"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "line": 224, "overriddenFrom": "qx.ui.core.Widget", "name": "_afterRemoveChild"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "child"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "line": 123, "name": "_applyDynamic"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.container.Stack#dynamic"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>dynamic</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dynamic}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 156, "name": "_getItems"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the widget for the selection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Widgets to select.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 166, "name": "_isAllowEmptySelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns if the selection could be empty or not.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> If selection could be empty, <code>false</code> otherwise."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 176, "name": "_isItemSelectable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>The item to be checked</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns whether the given item is selectable.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the given item is selectable</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDynamic", "fromProperty": "dynamic"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>dynamic</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dynamic}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>dynamic</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDynamic", "fromProperty": "dynamic"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>dynamic</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>dynamic</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #dynamic}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isDynamic", "fromProperty": "dynamic"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>dynamic</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dynamic}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 263, "name": "next"}, "type": "method", "children": [{"attributes": {"text": "<p>Go to the next child in the children list.</p>"}, "type": "desc"}]}, {"attributes": {"line": 246, "name": "previous"}, "type": "method", "children": [{"attributes": {"text": "<p>Go to the previous child in the children list.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetDynamic", "fromProperty": "dynamic"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>dynamic</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #dynamic}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setDynamic", "fromProperty": "dynamic"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>dynamic</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>dynamic</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dynamic}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleDynamic", "fromProperty": "dynamic"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>dynamic</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #dynamic}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Boolean", "apply": "_applyDynamic", "defaultValue": "false", "name": "dynamic", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the size of the widget depends on the selected child. When\ndisabled (default) the size is configured to the largest child.</p>"}, "type": "desc"}]}]}]}