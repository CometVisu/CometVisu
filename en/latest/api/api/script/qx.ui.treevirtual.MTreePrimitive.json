{"attributes": {"isStatic": true, "name": "MTreePrimitive", "packageName": "qx.ui.treevirtual", "includer": "qx.ui.treevirtual.SimpleTreeDataModel", "fullName": "qx.ui.treevirtual.MTreePrimitive", "type": "mixin"}, "type": "class", "children": [{"attributes": {"text": "<p>Primitives for building trees and tree nodes.</p>\n\n<p>The methods in this mixin are included directly in the SimpleTreeDataModel\nbut are also useful for other types of trees (not TreeVirtual) that need\nsimilar tree and node creation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "protected", "line": 109, "isMixin": true, "isStatic": true, "name": "_addNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "nodeArr"}, "type": "param", "children": [{"attributes": {"text": "<p>The array to which new nodes are to be added. See, however, the nodeId parameter. If nodeId values will be provided, then nodeArr can be a map. The traditional TreeVirtual does not provide node ids, and passes an array for this parameter.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}, {"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "parentNodeId"}, "type": "param", "children": [{"attributes": {"text": "<p>The node id of the parent of the node being added</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "label"}, "type": "param", "children": [{"attributes": {"text": "<p>The string to display as the label for this node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "bOpened"}, "type": "param", "children": [{"attributes": {"text": "<i>true</i> if the tree should be rendered in its opened state; <i>false</i> otherwise."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "bHideOpenCloseButton"}, "type": "param", "children": [{"attributes": {"text": "<i>true</i> if the open/close button should be hidden (not displayed); </i>false</i> to display the open/close button for this node."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>The type of node being added.  The type determines whether children may be added, and determines the default icons to use.  This parameter must be one of the following values: <dl> <dt>qx.ui.treevirtual.MTreePrimitive.Type.BRANCH</dt> <dd> This node is a branch.  A branch node may have children. </dd> <dt>qx.ui.treevirtual.MTreePrimitive.Type.LEAF</dt> <dd> This node is a leaf, and may not have children </dd> </dl></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "icon"}, "type": "param", "children": [{"attributes": {"text": "<p>The relative (subject to alias expansion) or full path of the icon to display for this node when it is not a selected node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "iconSelected"}, "type": "param", "children": [{"attributes": {"text": "<p>The relative (subject to alias expansion) or full path of the icon to display for this node when it is a selected node. \n <span class=\"caps\">NOTE</span>: As of 13 Mar 2009, this feature is disabled by default, by virtue of the fact that the tree&#8217;s &#8220;alwaysUpdateCells&#8221; property has a setting of &#8216;false&#8217; now instead of &#8216;true&#8217;. Setting this property to true allows the icon to change upon selection, but causes problems such as single clicks not always selecting a row, and, in IE, double click operations failing completely. (For more information, see bugs 605 and 2021.) To re-enable the option to have an unique icon that is displayed when the node is selected, issue <code>tree.setAlwaysUpdateCells(true);</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "nodeId"}, "type": "param", "children": [{"attributes": {"text": "<p>The requested node id for this new node. If not provided, nodeArr will be assumed to be an array, not a map, and the next available index of the array will be used. If it is provided, then nodeArr may be either an array or a map.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a node to the tree.</p>\n\n<p><span class=\"caps\">NOTE</span>: This method is for <b>internal use</b> and should not be called by\n      users of this class. There is no guarantee that the interface to this\n      method will remain unchanged over time.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The node id of the newly-added node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If one tries to add a child to a non-existent parent.</p>", "type": "Error"}, "type": "desc"}, {"attributes": {"text": "<p>If one tries to add a node to a leaf.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"access": "protected", "line": 190, "isMixin": true, "isStatic": true, "name": "_getEmptyTree"}, "type": "method", "children": [{"attributes": {"text": "<p>An empty tree contains only this one node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a root node with all relevant fields filled.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "Type"}, "type": "constant", "children": [{"attributes": {"text": "<p>Primitive types of tree nodes</p>"}, "type": "desc"}]}]}]}