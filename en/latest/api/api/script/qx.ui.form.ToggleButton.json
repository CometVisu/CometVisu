{"attributes": {"name": "ToggleButton", "packageName": "qx.ui.form", "mixins": "qx.ui.core.MExecutable", "superClass": "qx.ui.basic.Atom", "childClasses": "qx.ui.form.CheckBox,qx.ui.toolbar.CheckBox", "fullName": "qx.ui.form.ToggleButton", "type": "class", "interfaces": "qx.ui.form.IBooleanForm,qx.ui.form.IExecutable,qx.ui.form.IRadioItem"}, "type": "class", "children": [{"attributes": {"text": "<p>A toggle Button widget</p>\n\n<p>If the user presses the button by tapping on it pressing the enter or\nspace key, the button toggles between the pressed an not pressed states.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 51, "isCtor": true, "overriddenFrom": "qx.ui.basic.Atom", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "label"}, "type": "param", "children": [{"attributes": {"text": "<p>The text on the button.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "icon"}, "type": "param", "children": [{"attributes": {"text": "<p>An <span class=\"caps\">URI</span> to the icon of the button.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a ToggleButton.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"button\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.basic.Atom"}, "type": "property"}, {"attributes": {"name": "focusable", "docFrom": "qx.ui.core.Widget", "defaultValue": "true", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"allowNull": "true", "apply": "_applyGroup", "check": "qx.ui.form.RadioGroup", "name": "group", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons.</p>"}, "type": "desc"}]}, {"attributes": {"name": "triState", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyTriState", "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the button has a third state. Use this for tri-state checkboxes.</p>\n\n<p>When enabled, the value null of the property value stands for &#8220;undetermined&#8221;,\nwhile true is mapped to &#8220;enabled&#8221; and false to &#8220;disabled&#8221; as usual. Note\nthat the value property is set to false initially.</p>"}, "type": "desc"}]}, {"attributes": {"name": "value", "defaultValue": "false", "event": "changeValue", "allowNull": "true", "propertyType": "new", "apply": "_applyValue", "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>The value of the widget. True, if the widget is checked.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 141, "name": "_applyGroup"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param"}, {"attributes": {"name": "old"}, "type": "param"}]}, {"attributes": {"text": "<p>The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.form.ToggleButton#group"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 177, "name": "_applyTriState"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Current value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>Previous value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply value property when triState property is modified.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.form.ToggleButton#triState"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 159, "name": "_applyValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Current value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>Previous value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Changes the state of the button dependent on the checked value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.form.ToggleButton#value"}, "type": "entry"}]}]}, {"attributes": {"access": "protected", "line": 187, "name": "_onExecute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>The execute event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for the execute event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 305, "name": "_onKeyDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Key event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;keydown&#8221; event.</p>\n\n<p>Removes &#8220;abandoned&#8221; and adds &#8220;pressed&#8221; state\nfor the keys &#8220;Enter&#8221; or &#8220;Space&#8221;</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 326, "name": "_onKeyUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Key event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;keyup&#8221; event.</p>\n\n<p>Removes &#8220;abandoned&#8221; and &#8220;pressed&#8221; state (if &#8220;pressed&#8221; state is set)\nfor the keys &#8220;Enter&#8221; or &#8220;Space&#8221;. It also toggles the {@link #value} property.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 256, "name": "_onPointerDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointer event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;pointerdown&#8221; event.\n<ul>\n<li>Activates capturing</li>\n<li>Removes &#8220;abandoned&#8221; state</li>\n<li>Adds &#8220;pressed&#8221; state</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 227, "name": "_onPointerOut"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointer event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;pointerout&#8221; event.\n<ul>\n<li>Removes &#8220;hovered&#8221; state</li>\n<li>Adds &#8220;abandoned&#8221; state (if &#8220;pressed&#8221; state is set)</li>\n<li>Removes &#8220;pressed&#8221; state (if &#8220;pressed&#8221; state is set and button is not checked)\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 201, "name": "_onPointerOver"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Pointer event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;pointerover&#8221; event.\n<ul>\n<li>Adds state &#8220;hovered&#8221;</li>\n<li>Removes &#8220;abandoned&#8221; and adds &#8220;pressed&#8221; state (if &#8220;abandoned&#8221; state is set)</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 283, "name": "_onPointerUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>pointer event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Pointer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener method for &#8220;pointerup&#8221; event.\n<ul>\n<li>Releases capturing</li>\n<li>Removes &#8220;pressed&#8221; state (if not &#8220;abandoned&#8221; state is set and &#8220;pressed&#8221; state is set)</li>\n<li>Removes &#8220;abandoned&#8221; state (if set)</li>\n<li>Toggles {@link #value} (if state &#8220;abandoned&#8221; is not set and state &#8220;pressed&#8221; is set)</li>\n</ul></p>"}, "type": "desc"}]}, {"attributes": {"name": "getGroup", "fromProperty": "group"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>group</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #group}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>group</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTriState", "fromProperty": "triState"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>triState</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #triState}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>triState</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getValue", "fromProperty": "value"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>value</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #value}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>value</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initGroup", "fromProperty": "group"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>group</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>group</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #group}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTriState", "fromProperty": "triState"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>triState</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>triState</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #triState}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initValue", "fromProperty": "value"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>value</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>value</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #value}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isTriState", "fromProperty": "triState"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>triState</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #triState}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isValue", "fromProperty": "value"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>value</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #value}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetGroup", "fromProperty": "group"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>group</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #group}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTriState", "fromProperty": "triState"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>triState</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #triState}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetValue", "fromProperty": "value"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>value</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #value}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setGroup", "fromProperty": "group"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>group</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>group</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #group}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTriState", "fromProperty": "triState"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>triState</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>triState</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #triState}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setValue", "fromProperty": "value"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>value</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>value</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #value}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleTriState", "fromProperty": "triState"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>triState</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #triState}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleValue", "fromProperty": "value"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>value</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #value}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeValue"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #value}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}]}