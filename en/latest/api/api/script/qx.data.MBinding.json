{"attributes": {"fullName": "qx.data.MBinding", "packageName": "qx.data", "type": "mixin", "name": "MBinding", "includer": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>This mixin is forwarding the static methods of\n{@link qx.data.SingleValueBinding} to the instance including the mixin.\nThe source object will be <code>this</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 26, "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 58, "isMixin": true, "name": "bind"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "sourcePropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property chain which represents the source property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object which the source should be bind to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The property name of the target object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the options. See {@link qx.data.SingleValueBinding#bind} for more information.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The bind method delegates the call to the\n{@link qx.data.SingleValueBinding#bind} function. As source, the current\nobject (this) will be used.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns the internal id for that binding. This can be used for referencing the binding e.g. for removing. This is not an atomic id so you can&#8217;t you use it as a hash-map index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the event is no data event or there is no property definition for object and property (source and target).</p>", "type": "qx.core.AssertionError"}, "type": "desc"}]}]}, {"attributes": {"line": 155, "isMixin": true, "name": "getBindings"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns an array which lists all bindings for the object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>An array of binding informations. Every binding information is an array itself containing id, sourceObject, sourceEvent, targetObject and targetProperty in that order.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 143, "isMixin": true, "name": "removeAllBindings"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all bindings from the object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the object is not in the internal registry of the bindings.</p>", "type": "qx.core.AssertionError"}, "type": "desc"}, {"attributes": {"text": "<p>If one of the bindings listed internally can not be removed.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 117, "isMixin": true, "name": "removeBinding"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the binding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the binding with the given id from the current object. The\nid has to be the id returned by any of the bind functions.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the binding could not be found.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 130, "isMixin": true, "name": "removeRelatedBindings"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "relatedObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object of which related bindings should be removed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all bindings between the object and the related one.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If one of the bindings listed internally can not be removed.</p>", "type": "Error"}, "type": "desc"}]}]}]}]}