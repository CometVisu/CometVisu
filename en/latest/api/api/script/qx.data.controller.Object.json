{"attributes": {"fullName": "qx.data.controller.Object", "packageName": "qx.data.controller", "type": "class", "name": "Object", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<h2>Object Controller</h2>\n\n<p><strong>General idea</strong></p>\n\n<p>The idea of the object controller is to make the binding of one model object\ncontaining one or more properties as easy as possible. Therefore the\ncontroller can take a model as property. Every property in that model can be\nbound to one or more target properties. The binding will be for\natomic types only like Numbers, Strings, ...</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li>Manages the bindings between the model properties and the different targets</li>\n<li>No need for the user to take care of the binding ids</li>\n<li>Can create an bidirectional binding (read- / write-binding)</li>\n<li>Handles the change of the model which means adding the old targets</li>\n</ul>\n\n<p><strong>Usage</strong></p>\n\n<p>The controller only can work if a model is set. If the model property is\nnull, the controller is not working. But it can be null on any time.</p>\n\n<p><strong>Cross reference</strong></p>\n\n<ul>\n<li>If you want to bind a list like widget, use {@link qx.data.controller.List}</li>\n<li>If you want to bind a tree widget, use {@link qx.data.controller.Tree}</li>\n<li>If you want to bind a form widget, use {@link qx.data.controller.Form}</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 63, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model for the model property.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeModel"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #model}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 234, "name": "__addTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object on which the property should be bound.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The property to which the binding should go.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property in the model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "bidirectional"}, "type": "param", "children": [{"attributes": {"text": "<p>Signals if the binding should also work in the reverse direction, from the target to source.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The options Map used by the binding from source to target. The possible options can be found in the {@link qx.data.SingleValueBinding} class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "reverseOptions"}, "type": "param", "children": [{"attributes": {"text": "<p>The options used by the binding in the reverse direction. The possible options can be found in the {@link qx.data.SingleValueBinding} class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Does the work for {@link #addTarget} but without saving the target\nto the internal target registry.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 310, "name": "__removeTargetFrom"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The target object on which the binding exist.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The targets property name used by the adding of the target.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property of the model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source object from which the binding comes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Does the work for {@link #removeTarget} but without removing the target\nfrom the internal registry.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 119, "name": "_applyModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The new model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>The old model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply-method which will be called if a new model has been set.\nAll bindings will be moved to the new model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.data.controller.Object#model"}, "type": "entry"}]}]}, {"attributes": {"line": 192, "name": "addTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object on which the property should be bound.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The property to which the binding should go.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property in the model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "optional": true, "name": "bidirectional"}, "type": "param", "children": [{"attributes": {"text": "<p>Signals if the binding should also work in the reverse direction, from the target to source.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The options Map used by the binding from source to target. The possible options can be found in the {@link qx.data.SingleValueBinding} class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "reverseOptions"}, "type": "param", "children": [{"attributes": {"text": "<p>The options used by the binding in the reverse direction. The possible options can be found in the {@link qx.data.SingleValueBinding} class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a new target to the controller. After adding the target, the given\nproperty of the model will be bound to the targets property.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>model</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 277, "name": "removeTarget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The target object on which the binding exist.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The targets property name used by the adding of the target.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property of the model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the target identified by the three properties.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>model</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>model</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "model", "check": "qx.core.Object", "allowNull": "true", "propertyType": "new", "apply": "_applyModel", "event": "changeModel"}, "type": "property", "children": [{"attributes": {"text": "<p>The model object which does have the properties for the binding.</p>"}, "type": "desc"}]}]}]}