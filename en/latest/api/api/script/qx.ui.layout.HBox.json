{"attributes": {"fullName": "qx.ui.layout.HBox", "packageName": "qx.ui.layout", "type": "class", "name": "HBox", "superClass": "qx.ui.layout.Abstract"}, "type": "class", "children": [{"attributes": {"text": "<p>A horizontal box layout.</p>\n\n<p>The horizontal box layout lays out widgets in a horizontal row, from left\nto right.</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li>Minimum and maximum dimensions</li>\n<li>Prioritized growing/shrinking (flex)</li>\n<li>Margins (with horizontal collapsing)</li>\n<li>Auto sizing (ignoring percent values)</li>\n<li>Percent widths (not relevant for size hint)</li>\n<li>Alignment (child property {@link qx.ui.core.LayoutItem#alignX} is ignored)</li>\n<li>Horizontal spacing (collapsed with margins)</li>\n<li>Reversed children layout (from last to first)</li>\n<li>Vertical children stretching (respecting size hints)</li>\n</ul>\n\n<p><strong>Item Properties</strong></p>\n\n<ul>\n<li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\n  distributes remaining empty space among its children. If items are made\n  flexible, they can grow or shrink accordingly. Their relative flex values\n  determine how the items are being resized, i.e. the larger the flex ratio\n  of two items, the larger the resizing of the first item compared to the\n  second.\n\n<p>If there is only one flex item in a layout container, its actual flex\n  value is not relevant. To disallow items to become flexible, set the\n  flex value to zero.\n</li>\n<li><strong>width</strong> <em>(String)</em>: Allows to define a percent\n  width for the item. The width in percent, if specified, is used instead\n  of the width defined by the size hint. The minimum and maximum width still\n  takes care of the element&#8217;s limits. It has no influence on the layout&#8217;s\n  size hint. Percent values are mostly useful for widgets which are sized by\n  the outer hierarchy.\n</li>\n</ul></p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the HBox layout.</p>\n\n<pre class=\"javascript\">\nvar layout = new qx.ui.layout.HBox();\nlayout.setSpacing(4); // apply spacing\n\nvar container = new qx.ui.container.Composite(layout);\n\ncontainer.add(new qx.ui.core.Widget());\ncontainer.add(new qx.ui.core.Widget());\ncontainer.add(new qx.ui.core.Widget());\n</pre>\n\n<p><strong>External Documentation</strong></p>\n\n<p>See <a href=\"http://manual.qooxdoo.org/5.1/pages/layout/box.html\">extended documentation</a>\nand links to demos for this layout.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 101, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "0", "optional": true, "name": "spacing"}, "type": "param", "children": [{"attributes": {"text": "<p>The spacing between child widgets {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"left\"", "optional": true, "name": "alignX"}, "type": "param", "children": [{"attributes": {"text": "<p>Horizontal alignment of the whole children block {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "separator"}, "type": "param", "children": [{"attributes": {"text": "<p>A separator to render between the items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "qx.ui.decoration.IDecorator"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 219, "name": "__rebuildCache"}, "type": "method", "children": [{"attributes": {"text": "<p>Rebuilds caches for flex and percent layout properties</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 206, "name": "_applyReversed"}, "type": "method", "children": [{"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.layout.HBox#reversed"}, "type": "entry"}]}, {"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>reversed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.layout.Abstract", "line": 464, "overriddenFrom": "qx.ui.layout.Abstract", "name": "_computeSizeHint"}, "type": "method"}, {"attributes": {"name": "getAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>alignX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>alignX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>alignY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>alignY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>reversed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>reversed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSeparator", "fromProperty": "separator"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>separator</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #separator}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>separator</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>alignX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>alignX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>alignY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>alignY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>reversed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>reversed</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSeparator", "fromProperty": "separator"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>separator</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>separator</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #separator}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>spacing</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>reversed</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.layout.Abstract", "line": 303, "overriddenFrom": "qx.ui.layout.Abstract", "name": "renderLayout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "availWidth"}, "type": "param"}, {"attributes": {"name": "availHeight"}, "type": "param"}, {"attributes": {"name": "padding"}, "type": "param"}]}]}, {"attributes": {"name": "resetAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>alignX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>alignY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>reversed</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSeparator", "fromProperty": "separator"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>separator</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #separator}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>spacing</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setAlignX", "fromProperty": "alignX"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>alignX</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>alignX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignX}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAlignY", "fromProperty": "alignY"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>alignY</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>alignY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #alignY}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>reversed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>reversed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSeparator", "fromProperty": "separator"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>separator</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>separator</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #separator}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSpacing", "fromProperty": "spacing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>spacing</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>spacing</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #spacing}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleReversed", "fromProperty": "reversed"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>reversed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"apply": "_applyLayoutChange", "defaultValue": "\"left\"", "name": "alignX", "possibleValues": "\"left\",\"center\",\"right\"", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Horizontal alignment of the whole children block. The horizontal\nalignment of the child is completely ignored in HBoxes (\n{@link qx.ui.core.LayoutItem#alignX}).</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_applyLayoutChange", "defaultValue": "\"top\"", "name": "alignY", "possibleValues": "\"top\",\"middle\",\"bottom\"", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Vertical alignment of each child. Can be overridden through\n{@link qx.ui.core.LayoutItem#alignY}.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyReversed", "defaultValue": "false", "name": "reversed", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the actual children list should be laid out in reversed order.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "apply": "_applyLayoutChange", "check": "Decorator", "name": "separator", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Separator lines to use between the objects</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "apply": "_applyLayoutChange", "defaultValue": "0", "name": "spacing", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Horizontal spacing between two children</p>"}, "type": "desc"}]}]}]}