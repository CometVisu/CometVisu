{"attributes": {"fullName": "qx.bom.Selector", "packageName": "qx.bom", "isStatic": true, "type": "bootstrap", "name": "Selector"}, "type": "class", "children": [{"attributes": {"text": "<p>The selector engine supports virtually all <span class=\"caps\">CSS</span> 3 Selectors  &#8211; this even\nincludes some parts that are infrequently implemented such as escaped\nselectors (<code>.foo\\\\+bar</code>), Unicode selectors, and results returned\nin document order. There are a few notable exceptions to the <span class=\"caps\">CSS</span> 3 selector\nsupport:</p>\n\n<ul>\n<li><code>:root</code></li>\n<li><code>:target</code></li>\n<li><code>:nth-last-child</code></li>\n<li><code>:nth-of-type</code></li>\n<li><code>:nth-last-of-type</code></li>\n<li><code>:first-of-type</code></li>\n<li><code>:last-of-type</code></li>\n<li><code>:only-of-type</code></li>\n<li><code>:lang()</code></li>\n</ul>\n\n<p>In addition to the <span class=\"caps\">CSS</span> 3 Selectors the engine supports the following\nadditional selectors or conventions.</p>\n\n<p><strong>Changes</strong></p>\n\n<ul>\n<li><code>:not(a.b)</code>: Supports non-simple selectors in <code>:not()</code> (most browsers only support <code>:not(a)</code>, for example).</li>\n<li><code>:not(div > p)</code>: Supports full selectors in <code>:not()</code>.</li>\n<li><code>:not(div, p)</code>: Supports multiple selectors in <code>:not()</code>.</li>\n<li><code>[NAME=VALUE]</code>: Doesn&#8217;t require quotes around the specified value in an attribute selector.</li>\n</ul>\n\n<p><strong>Additions</strong></p>\n\n<ul>\n<li><code>[NAME!=VALUE]</code>: Finds all elements whose <code><span class=\"caps\">NAME</span></code> attribute doesn&#8217;t match the specified value. Is equivalent to doing <code>:not([NAME=VALUE])</code>.</li>\n<li><code>:contains(TEXT)</code>: Finds all elements whose textual context contains the word <code><span class=\"caps\">TEXT</span></code> (case sensitive).</li>\n<li><code>:header</code>: Finds all elements that are a header element (h1, h2, h3, h4, h5, h6).</li>\n<li><code>:parent</code>: Finds all elements that contains another element.</li>\n</ul>\n\n<p><strong>Positional Selector Additions</strong></p>\n\n<ul>\n<li><code>:first</code>/</code>:last</code>: Finds the first or last matching element on the page. (e.g. <code>div:first</code> would find the first div on the page, in document order)</li>\n<li><code>:even</code>/<code>:odd</code>: Finds every other element on the page (counting begins at 0, so <code>:even</code> would match the first element).</li>\n<li><code>:eq</code>/<code>:nth</code>: Finds the Nth element on the page (e.g. <code>:eq(5)</code> finds the 6th element on the page).</li>\n<li><code>:lt</code>/<code>:gt</code>: Finds all elements at positions less than or greater than the specified positions.</li>\n</ul>\n\n<p><strong>Form Selector Additions</strong></p>\n\n<ul>\n<li><code>:input</code>: Finds all input elements (includes textareas, selects, and buttons).</li>\n<li><code>:text</code>, <code>:checkbox</code>, <code>:file</code>, <code>:password</code>, <code>:submit</code>, <code>:image</code>, <code>:reset</code>, <code>:button</code>: Finds the input element with the specified input type (<code>:button</code> also finds button elements).</li>\n</ul>\n\n<p>Based on Sizzle by John Resig, see:</p>\n\n<ul>\n<li><a href=\"http://sizzlejs.com/\">http://sizzlejs.com/</a></li>\n</ul>\n\n<p>For further usage details also have a look at the wiki page at:</p>\n\n<ul>\n<li><a href=\"https://github.com/jquery/sizzle/wiki/Sizzle-Home\">https://github.com/jquery/sizzle/wiki/Sizzle-Home</a></li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 1, "isStatic": true, "name": "matches"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector to filter given set</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "set"}, "type": "param", "children": [{"attributes": {"text": "<p>List to filter according to given selector</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns an reduced array which only contains the elements from the given\narray which matches the given selector</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New array containing matching elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "isStatic": true, "name": "query"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Valid selector (CSS3 + extensions)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context element (result elements must be children of this element)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Queries the document for the given selector. Supports all CSS3 selectors\nplus some extensions as mentioned in the class description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Matching elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}]}]}