name: Check pull request
on: pull_request
env:
  NODE_VERSION: '18.14'
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - name: Lint code
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Build CometVisu
        uses: ./.github/actions/build-cv
        with:
          target: build

  unit-test:
    name: "UNIT-TEST"
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target: ['stable', 'beta', 'unstable']
        browser: ['Chrome_ci']
    env:
      CV_VERSION: ${{ matrix.target }}
      CV_BROWSER: ${{ matrix.browser }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Build CometVisu
        uses: ./.github/actions/build-cv
        with:
          target: source
      - name: Install browser
        run: ./utils/ci/browser-setup.sh
        shell: bash
      - name: Make browser binaries accessible
        run: |
          echo "${PWD}/chrome" >> $GITHUB_PATH
          echo "${PWD}/firefox" >> $GITHUB_PATH
      - name: Run tests
        run: grunt karma:ci --browser=$CV_BROWSER
        env:
          CHROME_BIN: ./chrome/google-chrome
      - name: Run coveralls
        if: env.CV_VERSION == 'stable' && env.CV_BROWSER == 'Chrome_ci'
        uses: coverallsapp/github-action@master
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  e2e-test:
    name: "E2E-TEST"
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target: ['stable'] # beta is not running currently, 'beta']
        browser: ['Chrome_ci']
    env:
      CV_VERSION: ${{ matrix.target }}
      CV_BROWSER: ${{ matrix.browser }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Build CometVisu
        uses: ./.github/actions/build-cv
        with:
          target: source
      - name: Install browser
        run: ./utils/ci/browser-setup.sh
        shell: bash
      - name: Make browser binaries accessible
        run: |
          echo "${PWD}/chrome" >> $GITHUB_PATH
          echo "${PWD}/firefox" >> $GITHUB_PATH
      - name: Install grunt
        run: npm install -g grunt-cli
      - name: Prepare tests
        uses: ./.github/actions/update-webdriver
      - name: Run tests
        run: grunt e2e-chrome
        env:
          CHROME_BIN: ./chrome/google-chrome
